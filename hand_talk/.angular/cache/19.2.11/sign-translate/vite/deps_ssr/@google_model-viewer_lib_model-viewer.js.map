{
  "version": 3,
  "sources": ["../../../../../../node_modules/@lit-labs/ssr-dom-shim/lib/element-internals.js", "../../../../../../node_modules/@lit-labs/ssr-dom-shim/lib/events.js", "../../../../../../node_modules/@lit-labs/ssr-dom-shim/index.js", "../../../../../../node_modules/@lit/reactive-element/node/development/css-tag.js", "../../../../../../node_modules/@lit/reactive-element/node/development/reactive-element.js", "../../../../../../node_modules/@lit/reactive-element/node/development/decorators/property.js", "../../../../../../node_modules/@lit/reactive-element/node/development/decorators/query.js", "../../../../../../node_modules/lit-html/node/development/lit-html.js", "../../../../../../node_modules/lit-element/development/lit-element.js", "../../../../../../node_modules/@google/model-viewer/lib/constants.js", "../../../../../../node_modules/@google/model-viewer/lib/utilities.js", "../../../../../../node_modules/@google/model-viewer/lib/features/environment.js", "../../../../../../node_modules/@google/model-viewer/lib/assets/close-material-svg.js", "../../../../../../node_modules/@google/model-viewer/lib/assets/controls-svg.js", "../../../../../../node_modules/@google/model-viewer/lib/assets/view-in-ar-material-svg.js", "../../../../../../node_modules/@google/model-viewer/lib/template.js", "../../../../../../node_modules/three/examples/jsm/libs/meshopt_decoder.module.js", "../../../../../../node_modules/three/examples/jsm/loaders/DRACOLoader.js", "../../../../../../node_modules/three/examples/jsm/utils/BufferGeometryUtils.js", "../../../../../../node_modules/three/examples/jsm/loaders/GLTFLoader.js", "../../../../../../node_modules/three/examples/jsm/utils/WorkerPool.js", "../../../../../../node_modules/three/examples/jsm/libs/ktx-parse.module.js", "../../../../../../node_modules/three/examples/jsm/libs/zstddec.module.js", "../../../../../../node_modules/three/examples/jsm/math/ColorSpaces.js", "../../../../../../node_modules/three/examples/jsm/loaders/KTX2Loader.js", "../../../../../../node_modules/@google/model-viewer/lib/utilities/cache-eviction-policy.js", "../../../../../../node_modules/@google/model-viewer/lib/three-components/gltf-instance/VariantMaterialLoaderPlugin.js", "../../../../../../node_modules/@google/model-viewer/lib/three-components/CachingGLTFLoader.js", "../../../../../../node_modules/three/examples/jsm/renderers/CSS2DRenderer.js", "../../../../../../node_modules/three/examples/jsm/utils/SceneUtils.js", "../../../../../../node_modules/three/examples/jsm/exporters/GLTFExporter.js", "../../../../../../node_modules/@google/model-viewer/lib/three-components/gltf-instance/VariantMaterialExporterPlugin.js", "../../../../../../node_modules/three/examples/jsm/webxr/XREstimatedLight.js", "../../../../../../node_modules/@google/model-viewer/lib/three-components/Damper.js", "../../../../../../node_modules/@google/model-viewer/lib/three-components/PlacementBox.js", "../../../../../../node_modules/@google/model-viewer/lib/styles/parsers.js", "../../../../../../node_modules/@google/model-viewer/lib/styles/conversions.js", "../../../../../../node_modules/@google/model-viewer/lib/styles/evaluators.js", "../../../../../../node_modules/@google/model-viewer/lib/styles/style-effector.js", "../../../../../../node_modules/@google/model-viewer/lib/decorators.js", "../../../../../../node_modules/@google/model-viewer/lib/utilities/animation.js", "../../../../../../node_modules/@google/model-viewer/lib/features/controls.js", "../../../../../../node_modules/@google/model-viewer/lib/three-components/SmoothControls.js", "../../../../../../node_modules/@google/model-viewer/lib/three-components/ARRenderer.js", "../../../../../../node_modules/three/examples/jsm/utils/SkeletonUtils.js", "../../../../../../node_modules/@google/model-viewer/lib/three-components/GLTFInstance.js", "../../../../../../node_modules/@google/model-viewer/lib/three-components/gltf-instance/correlated-scene-graph.js", "../../../../../../node_modules/@google/model-viewer/lib/three-components/gltf-instance/ModelViewerGLTFInstance.js", "../../../../../../node_modules/@monogrid/gainmap-js/dist/QuadRenderer-DuOPRGA4.js", "../../../../../../node_modules/@monogrid/gainmap-js/dist/decode.js", "../../../../../../node_modules/three/examples/jsm/loaders/RGBELoader.js", "../../../../../../node_modules/@google/model-viewer/lib/three-components/EnvironmentScene.js", "../../../../../../node_modules/@google/model-viewer/lib/three-components/TextureUtils.js", "../../../../../../node_modules/@google/model-viewer/lib/three-components/Renderer.js", "../../../../../../node_modules/@google/model-viewer/lib/features/scene-graph/three-dom-element.js", "../../../../../../node_modules/@google/model-viewer/lib/features/scene-graph/image.js", "../../../../../../node_modules/@google/model-viewer/lib/three-components/gltf-instance/gltf-2.0.js", "../../../../../../node_modules/@google/model-viewer/lib/features/scene-graph/sampler.js", "../../../../../../node_modules/@google/model-viewer/lib/features/scene-graph/texture.js", "../../../../../../node_modules/@google/model-viewer/lib/features/scene-graph/texture-info.js", "../../../../../../node_modules/@google/model-viewer/lib/features/scene-graph/pbr-metallic-roughness.js", "../../../../../../node_modules/@google/model-viewer/lib/features/scene-graph/material.js", "../../../../../../node_modules/@google/model-viewer/lib/features/scene-graph/nodes/primitive-node.js", "../../../../../../node_modules/@google/model-viewer/lib/features/scene-graph/model.js", "../../../../../../node_modules/@google/model-viewer/lib/features/scene-graph.js", "../../../../../../node_modules/@google/model-viewer/lib/three-components/GroundedSkybox.js", "../../../../../../node_modules/@google/model-viewer/lib/three-components/Hotspot.js", "../../../../../../node_modules/three/examples/jsm/shaders/HorizontalBlurShader.js", "../../../../../../node_modules/three/examples/jsm/shaders/VerticalBlurShader.js", "../../../../../../node_modules/three/src/math/MathUtils.js", "../../../../../../node_modules/@google/model-viewer/lib/three-components/Shadow.js", "../../../../../../node_modules/@google/model-viewer/lib/three-components/ModelScene.js", "../../../../../../node_modules/@google/model-viewer/lib/utilities/progress-tracker.js", "../../../../../../node_modules/@google/model-viewer/lib/model-viewer-base.js", "../../../../../../node_modules/@google/model-viewer/lib/features/animation.js", "../../../../../../node_modules/@google/model-viewer/lib/features/annotation.js", "../../../../../../node_modules/three/examples/jsm/libs/fflate.module.js", "../../../../../../node_modules/three/examples/jsm/exporters/USDZExporter.js", "../../../../../../node_modules/@google/model-viewer/lib/styles/deserializers.js", "../../../../../../node_modules/@google/model-viewer/lib/features/ar.js", "../../../../../../node_modules/@google/model-viewer/lib/features/loading.js", "../../../../../../node_modules/@google/model-viewer/lib/features/staging.js", "../../../../../../node_modules/@google/model-viewer/lib/model-viewer.js"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n/**\n * Map of ARIAMixin properties to attributes\n */\nexport const ariaMixinAttributes = {\n  ariaAtomic: 'aria-atomic',\n  ariaAutoComplete: 'aria-autocomplete',\n  ariaBrailleLabel: 'aria-braillelabel',\n  ariaBrailleRoleDescription: 'aria-brailleroledescription',\n  ariaBusy: 'aria-busy',\n  ariaChecked: 'aria-checked',\n  ariaColCount: 'aria-colcount',\n  ariaColIndex: 'aria-colindex',\n  ariaColSpan: 'aria-colspan',\n  ariaCurrent: 'aria-current',\n  ariaDescription: 'aria-description',\n  ariaDisabled: 'aria-disabled',\n  ariaExpanded: 'aria-expanded',\n  ariaHasPopup: 'aria-haspopup',\n  ariaHidden: 'aria-hidden',\n  ariaInvalid: 'aria-invalid',\n  ariaKeyShortcuts: 'aria-keyshortcuts',\n  ariaLabel: 'aria-label',\n  ariaLevel: 'aria-level',\n  ariaLive: 'aria-live',\n  ariaModal: 'aria-modal',\n  ariaMultiLine: 'aria-multiline',\n  ariaMultiSelectable: 'aria-multiselectable',\n  ariaOrientation: 'aria-orientation',\n  ariaPlaceholder: 'aria-placeholder',\n  ariaPosInSet: 'aria-posinset',\n  ariaPressed: 'aria-pressed',\n  ariaReadOnly: 'aria-readonly',\n  ariaRequired: 'aria-required',\n  ariaRoleDescription: 'aria-roledescription',\n  ariaRowCount: 'aria-rowcount',\n  ariaRowIndex: 'aria-rowindex',\n  ariaRowSpan: 'aria-rowspan',\n  ariaSelected: 'aria-selected',\n  ariaSetSize: 'aria-setsize',\n  ariaSort: 'aria-sort',\n  ariaValueMax: 'aria-valuemax',\n  ariaValueMin: 'aria-valuemin',\n  ariaValueNow: 'aria-valuenow',\n  ariaValueText: 'aria-valuetext',\n  role: 'role'\n};\n// Shim the global element internals object\n// Methods should be fine as noops and properties can generally\n// be while on the server.\nexport const ElementInternalsShim = class ElementInternals {\n  get shadowRoot() {\n    // Grab the shadow root instance from the Element shim\n    // to ensure that the shadow root is always available\n    // to the internals instance even if the mode is 'closed'\n    return this.__host.__shadowRoot;\n  }\n  constructor(_host) {\n    this.ariaAtomic = '';\n    this.ariaAutoComplete = '';\n    this.ariaBrailleLabel = '';\n    this.ariaBrailleRoleDescription = '';\n    this.ariaBusy = '';\n    this.ariaChecked = '';\n    this.ariaColCount = '';\n    this.ariaColIndex = '';\n    this.ariaColSpan = '';\n    this.ariaCurrent = '';\n    this.ariaDescription = '';\n    this.ariaDisabled = '';\n    this.ariaExpanded = '';\n    this.ariaHasPopup = '';\n    this.ariaHidden = '';\n    this.ariaInvalid = '';\n    this.ariaKeyShortcuts = '';\n    this.ariaLabel = '';\n    this.ariaLevel = '';\n    this.ariaLive = '';\n    this.ariaModal = '';\n    this.ariaMultiLine = '';\n    this.ariaMultiSelectable = '';\n    this.ariaOrientation = '';\n    this.ariaPlaceholder = '';\n    this.ariaPosInSet = '';\n    this.ariaPressed = '';\n    this.ariaReadOnly = '';\n    this.ariaRequired = '';\n    this.ariaRoleDescription = '';\n    this.ariaRowCount = '';\n    this.ariaRowIndex = '';\n    this.ariaRowSpan = '';\n    this.ariaSelected = '';\n    this.ariaSetSize = '';\n    this.ariaSort = '';\n    this.ariaValueMax = '';\n    this.ariaValueMin = '';\n    this.ariaValueNow = '';\n    this.ariaValueText = '';\n    this.role = '';\n    this.form = null;\n    this.labels = [];\n    this.states = new Set();\n    this.validationMessage = '';\n    this.validity = {};\n    this.willValidate = true;\n    this.__host = _host;\n  }\n  checkValidity() {\n    // TODO(augustjk) Consider actually implementing logic.\n    // See https://github.com/lit/lit/issues/3740\n    console.warn('`ElementInternals.checkValidity()` was called on the server.' + 'This method always returns true.');\n    return true;\n  }\n  reportValidity() {\n    return true;\n  }\n  setFormValue() {}\n  setValidity() {}\n};\nconst ElementInternalsShimWithRealType = ElementInternalsShim;\nexport { ElementInternalsShimWithRealType as ElementInternals };\nexport const HYDRATE_INTERNALS_ATTR_PREFIX = 'hydrate-internals-';\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Event_cancelable, _Event_bubbles, _Event_composed, _Event_defaultPrevented, _Event_timestamp, _Event_propagationStopped, _Event_type, _Event_target, _Event_isBeingDispatched, _a, _CustomEvent_detail, _b;\nconst isCaptureEventListener = options => typeof options === 'boolean' ? options : options?.capture ?? false;\n// Event phases\nconst NONE = 0;\nconst CAPTURING_PHASE = 1;\nconst AT_TARGET = 2;\nconst BUBBLING_PHASE = 3;\n// Shim the global EventTarget object\nclass EventTarget {\n  constructor() {\n    this.__eventListeners = new Map();\n    this.__captureEventListeners = new Map();\n  }\n  addEventListener(type, callback, options) {\n    if (callback === undefined || callback === null) {\n      return;\n    }\n    const eventListenersMap = isCaptureEventListener(options) ? this.__captureEventListeners : this.__eventListeners;\n    let eventListeners = eventListenersMap.get(type);\n    if (eventListeners === undefined) {\n      eventListeners = new Map();\n      eventListenersMap.set(type, eventListeners);\n    } else if (eventListeners.has(callback)) {\n      return;\n    }\n    const normalizedOptions = typeof options === 'object' && options ? options : {};\n    normalizedOptions.signal?.addEventListener('abort', () => this.removeEventListener(type, callback, options));\n    eventListeners.set(callback, normalizedOptions ?? {});\n  }\n  removeEventListener(type, callback, options) {\n    if (callback === undefined || callback === null) {\n      return;\n    }\n    const eventListenersMap = isCaptureEventListener(options) ? this.__captureEventListeners : this.__eventListeners;\n    const eventListeners = eventListenersMap.get(type);\n    if (eventListeners !== undefined) {\n      eventListeners.delete(callback);\n      if (!eventListeners.size) {\n        eventListenersMap.delete(type);\n      }\n    }\n  }\n  dispatchEvent(event) {\n    const composedPath = [this];\n    let parent = this.__eventTargetParent;\n    if (event.composed) {\n      while (parent) {\n        composedPath.push(parent);\n        parent = parent.__eventTargetParent;\n      }\n    } else {\n      // If the event is not composed and the event was dispatched inside\n      // shadow DOM, we need to stop before the host of the shadow DOM.\n      while (parent && parent !== this.__host) {\n        composedPath.push(parent);\n        parent = parent.__eventTargetParent;\n      }\n    }\n    // We need to patch various properties that would either be empty or wrong\n    // in this scenario.\n    let stopPropagation = false;\n    let stopImmediatePropagation = false;\n    let eventPhase = NONE;\n    let target = null;\n    let tmpTarget = null;\n    let currentTarget = null;\n    const originalStopPropagation = event.stopPropagation;\n    const originalStopImmediatePropagation = event.stopImmediatePropagation;\n    Object.defineProperties(event, {\n      target: {\n        get() {\n          return target ?? tmpTarget;\n        },\n        ...enumerableProperty\n      },\n      srcElement: {\n        get() {\n          return event.target;\n        },\n        ...enumerableProperty\n      },\n      currentTarget: {\n        get() {\n          return currentTarget;\n        },\n        ...enumerableProperty\n      },\n      eventPhase: {\n        get() {\n          return eventPhase;\n        },\n        ...enumerableProperty\n      },\n      composedPath: {\n        value: () => composedPath,\n        ...enumerableProperty\n      },\n      stopPropagation: {\n        value: () => {\n          stopPropagation = true;\n          originalStopPropagation.call(event);\n        },\n        ...enumerableProperty\n      },\n      stopImmediatePropagation: {\n        value: () => {\n          stopImmediatePropagation = true;\n          originalStopImmediatePropagation.call(event);\n        },\n        ...enumerableProperty\n      }\n    });\n    // An event handler can either be a function, an object with a handleEvent\n    // method or null. This function takes care to call the event handler\n    // correctly.\n    const invokeEventListener = (listener, options, eventListenerMap) => {\n      if (typeof listener === 'function') {\n        listener(event);\n      } else if (typeof listener?.handleEvent === 'function') {\n        listener.handleEvent(event);\n      }\n      if (options.once) {\n        eventListenerMap.delete(listener);\n      }\n    };\n    // When an event is finished being dispatched, which can be after the event\n    // tree has been traversed or stopPropagation/stopImmediatePropagation has\n    // been called. Once that is the case, the currentTarget and eventPhase\n    // need to be reset and a value, representing whether the event has not\n    // been prevented, needs to be returned.\n    const finishDispatch = () => {\n      currentTarget = null;\n      eventPhase = NONE;\n      return !event.defaultPrevented;\n    };\n    // An event starts with the capture order, where it starts from the top.\n    // This is done even if bubbles is set to false, which is the default.\n    const captureEventPath = composedPath.slice().reverse();\n    // If the event target, which dispatches the event, is either in the light DOM\n    // or the event is not composed, the target is always itself. If that is not\n    // the case, the target needs to be retargeted: https://dom.spec.whatwg.org/#retarget\n    target = !this.__host || !event.composed ? this : null;\n    const retarget = eventTargets => {\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      tmpTarget = this;\n      while (tmpTarget.__host && eventTargets.includes(tmpTarget.__host)) {\n        tmpTarget = tmpTarget.__host;\n      }\n    };\n    for (const eventTarget of captureEventPath) {\n      if (!target && (!tmpTarget || tmpTarget === eventTarget.__host)) {\n        retarget(captureEventPath.slice(captureEventPath.indexOf(eventTarget)));\n      }\n      currentTarget = eventTarget;\n      eventPhase = eventTarget === event.target ? AT_TARGET : CAPTURING_PHASE;\n      const captureEventListeners = eventTarget.__captureEventListeners.get(event.type);\n      if (captureEventListeners) {\n        for (const [listener, options] of captureEventListeners) {\n          invokeEventListener(listener, options, captureEventListeners);\n          if (stopImmediatePropagation) {\n            // Event.stopImmediatePropagation() stops any following invocation\n            // of an event handler even on the same event target.\n            return finishDispatch();\n          }\n        }\n      }\n      if (stopPropagation) {\n        // Event.stopPropagation() stops any following invocation\n        // of an event handler for any following event targets.\n        return finishDispatch();\n      }\n    }\n    const bubbleEventPath = event.bubbles ? composedPath : [this];\n    tmpTarget = null;\n    for (const eventTarget of bubbleEventPath) {\n      if (!target && (!tmpTarget || eventTarget === tmpTarget.__host)) {\n        retarget(bubbleEventPath.slice(0, bubbleEventPath.indexOf(eventTarget) + 1));\n      }\n      currentTarget = eventTarget;\n      eventPhase = eventTarget === event.target ? AT_TARGET : BUBBLING_PHASE;\n      const captureEventListeners = eventTarget.__eventListeners.get(event.type);\n      if (captureEventListeners) {\n        for (const [listener, options] of captureEventListeners) {\n          invokeEventListener(listener, options, captureEventListeners);\n          if (stopImmediatePropagation) {\n            // Event.stopImmediatePropagation() stops any following invocation\n            // of an event handler even on the same event target.\n            return finishDispatch();\n          }\n        }\n      }\n      if (stopPropagation) {\n        // Event.stopPropagation() stops any following invocation\n        // of an event handler for any following event targets.\n        return finishDispatch();\n      }\n    }\n    return finishDispatch();\n  }\n}\nconst EventTargetShimWithRealType = EventTarget;\nexport { EventTargetShimWithRealType as EventTarget, EventTargetShimWithRealType as EventTargetShim };\nconst enumerableProperty = {\n  __proto__: null\n};\nenumerableProperty.enumerable = true;\nObject.freeze(enumerableProperty);\n// TODO: Remove this when we remove support for vm modules (--experimental-vm-modules).\nconst EventShim = (_a = class Event {\n  constructor(type, options = {}) {\n    _Event_cancelable.set(this, false);\n    _Event_bubbles.set(this, false);\n    _Event_composed.set(this, false);\n    _Event_defaultPrevented.set(this, false);\n    _Event_timestamp.set(this, Date.now());\n    _Event_propagationStopped.set(this, false);\n    _Event_type.set(this, void 0);\n    _Event_target.set(this, void 0);\n    _Event_isBeingDispatched.set(this, void 0);\n    this.NONE = NONE;\n    this.CAPTURING_PHASE = CAPTURING_PHASE;\n    this.AT_TARGET = AT_TARGET;\n    this.BUBBLING_PHASE = BUBBLING_PHASE;\n    if (arguments.length === 0) throw new Error(`The type argument must be specified`);\n    if (typeof options !== 'object' || !options) {\n      throw new Error(`The \"options\" argument must be an object`);\n    }\n    const {\n      bubbles,\n      cancelable,\n      composed\n    } = options;\n    __classPrivateFieldSet(this, _Event_cancelable, !!cancelable, \"f\");\n    __classPrivateFieldSet(this, _Event_bubbles, !!bubbles, \"f\");\n    __classPrivateFieldSet(this, _Event_composed, !!composed, \"f\");\n    __classPrivateFieldSet(this, _Event_type, `${type}`, \"f\");\n    __classPrivateFieldSet(this, _Event_target, null, \"f\");\n    __classPrivateFieldSet(this, _Event_isBeingDispatched, false, \"f\");\n  }\n  initEvent(_type, _bubbles, _cancelable) {\n    throw new Error('Method not implemented.');\n  }\n  stopImmediatePropagation() {\n    this.stopPropagation();\n  }\n  preventDefault() {\n    __classPrivateFieldSet(this, _Event_defaultPrevented, true, \"f\");\n  }\n  get target() {\n    return __classPrivateFieldGet(this, _Event_target, \"f\");\n  }\n  get currentTarget() {\n    return __classPrivateFieldGet(this, _Event_target, \"f\");\n  }\n  get srcElement() {\n    return __classPrivateFieldGet(this, _Event_target, \"f\");\n  }\n  get type() {\n    return __classPrivateFieldGet(this, _Event_type, \"f\");\n  }\n  get cancelable() {\n    return __classPrivateFieldGet(this, _Event_cancelable, \"f\");\n  }\n  get defaultPrevented() {\n    return __classPrivateFieldGet(this, _Event_cancelable, \"f\") && __classPrivateFieldGet(this, _Event_defaultPrevented, \"f\");\n  }\n  get timeStamp() {\n    return __classPrivateFieldGet(this, _Event_timestamp, \"f\");\n  }\n  composedPath() {\n    return __classPrivateFieldGet(this, _Event_isBeingDispatched, \"f\") ? [__classPrivateFieldGet(this, _Event_target, \"f\")] : [];\n  }\n  get returnValue() {\n    return !__classPrivateFieldGet(this, _Event_cancelable, \"f\") || !__classPrivateFieldGet(this, _Event_defaultPrevented, \"f\");\n  }\n  get bubbles() {\n    return __classPrivateFieldGet(this, _Event_bubbles, \"f\");\n  }\n  get composed() {\n    return __classPrivateFieldGet(this, _Event_composed, \"f\");\n  }\n  get eventPhase() {\n    return __classPrivateFieldGet(this, _Event_isBeingDispatched, \"f\") ? _a.AT_TARGET : _a.NONE;\n  }\n  get cancelBubble() {\n    return __classPrivateFieldGet(this, _Event_propagationStopped, \"f\");\n  }\n  set cancelBubble(value) {\n    if (value) {\n      __classPrivateFieldSet(this, _Event_propagationStopped, true, \"f\");\n    }\n  }\n  stopPropagation() {\n    __classPrivateFieldSet(this, _Event_propagationStopped, true, \"f\");\n  }\n  get isTrusted() {\n    return false;\n  }\n}, _Event_cancelable = new WeakMap(), _Event_bubbles = new WeakMap(), _Event_composed = new WeakMap(), _Event_defaultPrevented = new WeakMap(), _Event_timestamp = new WeakMap(), _Event_propagationStopped = new WeakMap(), _Event_type = new WeakMap(), _Event_target = new WeakMap(), _Event_isBeingDispatched = new WeakMap(), _a.NONE = NONE, _a.CAPTURING_PHASE = CAPTURING_PHASE, _a.AT_TARGET = AT_TARGET, _a.BUBBLING_PHASE = BUBBLING_PHASE, _a);\nObject.defineProperties(EventShim.prototype, {\n  initEvent: enumerableProperty,\n  stopImmediatePropagation: enumerableProperty,\n  preventDefault: enumerableProperty,\n  target: enumerableProperty,\n  currentTarget: enumerableProperty,\n  srcElement: enumerableProperty,\n  type: enumerableProperty,\n  cancelable: enumerableProperty,\n  defaultPrevented: enumerableProperty,\n  timeStamp: enumerableProperty,\n  composedPath: enumerableProperty,\n  returnValue: enumerableProperty,\n  bubbles: enumerableProperty,\n  composed: enumerableProperty,\n  eventPhase: enumerableProperty,\n  cancelBubble: enumerableProperty,\n  stopPropagation: enumerableProperty,\n  isTrusted: enumerableProperty\n});\n// TODO: Remove this when we remove support for vm modules (--experimental-vm-modules).\nconst CustomEventShim = (_b = class CustomEvent extends EventShim {\n  constructor(type, options = {}) {\n    super(type, options);\n    _CustomEvent_detail.set(this, void 0);\n    __classPrivateFieldSet(this, _CustomEvent_detail, options?.detail ?? null, \"f\");\n  }\n  initCustomEvent(_type, _bubbles, _cancelable, _detail) {\n    throw new Error('Method not implemented.');\n  }\n  get detail() {\n    return __classPrivateFieldGet(this, _CustomEvent_detail, \"f\");\n  }\n}, _CustomEvent_detail = new WeakMap(), _b);\nObject.defineProperties(CustomEventShim.prototype, {\n  detail: enumerableProperty\n});\nconst EventShimWithRealType = EventShim;\nconst CustomEventShimWithRealType = CustomEventShim;\nexport { EventShimWithRealType as Event, EventShimWithRealType as EventShim, CustomEventShimWithRealType as CustomEvent, CustomEventShimWithRealType as CustomEventShim };\n", "/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport { ElementInternalsShim } from './lib/element-internals.js';\nimport { EventTargetShim, EventShim, CustomEventShim } from './lib/events.js';\nexport { ariaMixinAttributes, ElementInternals, HYDRATE_INTERNALS_ATTR_PREFIX } from './lib/element-internals.js';\nexport { CustomEvent, Event, EventTarget } from './lib/events.js';\n// In an empty Node.js vm, we need to patch the global context.\n// TODO: Remove these globalThis assignments when we remove support\n// for vm modules (--experimental-vm-modules).\nglobalThis.Event ??= EventShim;\nglobalThis.CustomEvent ??= CustomEventShim;\nconst attributes = new WeakMap();\nconst attributesForElement = element => {\n  let attrs = attributes.get(element);\n  if (attrs === undefined) {\n    attributes.set(element, attrs = new Map());\n  }\n  return attrs;\n};\n// The typings around the exports below are a little funky:\n//\n// 1. We want the `name` of the shim classes to match the real ones at runtime,\n//    hence e.g. `class Element`.\n// 2. We can't shadow the global types with a simple class declaration, because\n//    then we can't reference the global types for casting, hence e.g.\n//    `const ElementShim = class Element`.\n// 3. We want to export the classes typed as the real ones, hence e.g.\n//    `const ElementShimWithRealType = ElementShim as object as typeof Element;`.\n// 4. We want the exported names to match the real ones, hence e.g.\n//    `export {ElementShimWithRealType as Element}`.\nconst ElementShim = class Element extends EventTargetShim {\n  constructor() {\n    super(...arguments);\n    this.__shadowRootMode = null;\n    this.__shadowRoot = null;\n    this.__internals = null;\n  }\n  get attributes() {\n    return Array.from(attributesForElement(this)).map(([name, value]) => ({\n      name,\n      value\n    }));\n  }\n  get shadowRoot() {\n    if (this.__shadowRootMode === 'closed') {\n      return null;\n    }\n    return this.__shadowRoot;\n  }\n  get localName() {\n    return this.constructor.__localName;\n  }\n  get tagName() {\n    return this.localName?.toUpperCase();\n  }\n  setAttribute(name, value) {\n    // Emulate browser behavior that silently casts all values to string. E.g.\n    // `42` becomes `\"42\"` and `{}` becomes `\"[object Object]\"\"`.\n    attributesForElement(this).set(name, String(value));\n  }\n  removeAttribute(name) {\n    attributesForElement(this).delete(name);\n  }\n  toggleAttribute(name, force) {\n    // Steps reference https://dom.spec.whatwg.org/#dom-element-toggleattribute\n    if (this.hasAttribute(name)) {\n      // Step 5\n      if (force === undefined || !force) {\n        this.removeAttribute(name);\n        return false;\n      }\n    } else {\n      // Step 4\n      if (force === undefined || force) {\n        // Step 4.1\n        this.setAttribute(name, '');\n        return true;\n      } else {\n        // Step 4.2\n        return false;\n      }\n    }\n    // Step 6\n    return true;\n  }\n  hasAttribute(name) {\n    return attributesForElement(this).has(name);\n  }\n  attachShadow(init) {\n    const shadowRoot = {\n      host: this\n    };\n    this.__shadowRootMode = init.mode;\n    if (init && init.mode === 'open') {\n      this.__shadowRoot = shadowRoot;\n    }\n    return shadowRoot;\n  }\n  attachInternals() {\n    if (this.__internals !== null) {\n      throw new Error(`Failed to execute 'attachInternals' on 'HTMLElement': ` + `ElementInternals for the specified element was already attached.`);\n    }\n    const internals = new ElementInternalsShim(this);\n    this.__internals = internals;\n    return internals;\n  }\n  getAttribute(name) {\n    const value = attributesForElement(this).get(name);\n    return value ?? null;\n  }\n};\nconst ElementShimWithRealType = ElementShim;\nexport { ElementShimWithRealType as Element };\nconst HTMLElementShim = class HTMLElement extends ElementShim {};\nconst HTMLElementShimWithRealType = HTMLElementShim;\nexport { HTMLElementShimWithRealType as HTMLElement };\n// For convenience, we provide a global instance of a HTMLElement as an event\n// target. This facilitates registering global event handlers\n// (e.g. for @lit/context ContextProvider).\n// We use this in in the SSR render function.\n// Note, this is a bespoke element and not simply `document` or `window` since\n// user code relies on these being undefined in the server environment.\nglobalThis.litServerRoot ??= Object.defineProperty(new HTMLElementShimWithRealType(), 'localName', {\n  // Patch localName (and tagName) to return a unique name.\n  get() {\n    return 'lit-server-root';\n  }\n});\nfunction promiseWithResolvers() {\n  let resolve;\n  let reject;\n  const promise = new Promise((res, rej) => {\n    resolve = res;\n    reject = rej;\n  });\n  return {\n    promise,\n    resolve: resolve,\n    reject: reject\n  };\n}\nclass CustomElementRegistry {\n  constructor() {\n    this.__definitions = new Map();\n    this.__reverseDefinitions = new Map();\n    this.__pendingWhenDefineds = new Map();\n  }\n  define(name, ctor) {\n    if (this.__definitions.has(name)) {\n      if (process.env.NODE_ENV === 'development') {\n        console.warn(`'CustomElementRegistry' already has \"${name}\" defined. ` + `This may have been caused by live reload or hot module ` + `replacement in which case it can be safely ignored.\\n` + `Make sure to test your application with a production build as ` + `repeat registrations will throw in production.`);\n      } else {\n        throw new Error(`Failed to execute 'define' on 'CustomElementRegistry': ` + `the name \"${name}\" has already been used with this registry`);\n      }\n    }\n    if (this.__reverseDefinitions.has(ctor)) {\n      throw new Error(`Failed to execute 'define' on 'CustomElementRegistry': ` + `the constructor has already been used with this registry for the ` + `tag name ${this.__reverseDefinitions.get(ctor)}`);\n    }\n    // Provide tagName and localName for the component.\n    ctor.__localName = name;\n    this.__definitions.set(name, {\n      ctor,\n      // Note it's important we read `observedAttributes` in case it is a getter\n      // with side-effects, as is the case in Lit, where it triggers class\n      // finalization.\n      //\n      // TODO(aomarks) To be spec compliant, we should also capture the\n      // registration-time lifecycle methods like `connectedCallback`. For them\n      // to be actually accessible to e.g. the Lit SSR element renderer, though,\n      // we'd need to introduce a new API for accessing them (since `get` only\n      // returns the constructor).\n      observedAttributes: ctor.observedAttributes ?? []\n    });\n    this.__reverseDefinitions.set(ctor, name);\n    this.__pendingWhenDefineds.get(name)?.resolve(ctor);\n    this.__pendingWhenDefineds.delete(name);\n  }\n  get(name) {\n    const definition = this.__definitions.get(name);\n    return definition?.ctor;\n  }\n  getName(ctor) {\n    return this.__reverseDefinitions.get(ctor) ?? null;\n  }\n  upgrade(_element) {\n    // In SSR this doesn't make a lot of sense, so we do nothing.\n    throw new Error(`customElements.upgrade is not currently supported in SSR. ` + `Please file a bug if you need it.`);\n  }\n  async whenDefined(name) {\n    const definition = this.__definitions.get(name);\n    if (definition) {\n      return definition.ctor;\n    }\n    let withResolvers = this.__pendingWhenDefineds.get(name);\n    if (!withResolvers) {\n      withResolvers = promiseWithResolvers();\n      this.__pendingWhenDefineds.set(name, withResolvers);\n    }\n    return withResolvers.promise;\n  }\n}\nconst CustomElementRegistryShimWithRealType = CustomElementRegistry;\nexport { CustomElementRegistryShimWithRealType as CustomElementRegistry };\nexport const customElements = new CustomElementRegistryShimWithRealType();\n", "/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n// Allows minifiers to rename references to globalThis\nconst global = globalThis;\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nconst supportsAdoptingStyleSheets = global.ShadowRoot && (global.ShadyCSS === undefined || global.ShadyCSS.nativeShadow) && 'adoptedStyleSheets' in Document.prototype && 'replace' in CSSStyleSheet.prototype;\nconst constructionToken = Symbol();\nconst cssTagCache = new WeakMap();\n/**\n * A container for a string of CSS text, that may be used to create a CSSStyleSheet.\n *\n * CSSResult is the return value of `css`-tagged template literals and\n * `unsafeCSS()`. In order to ensure that CSSResults are only created via the\n * `css` tag and `unsafeCSS()`, CSSResult cannot be constructed directly.\n */\nclass CSSResult {\n  constructor(cssText, strings, safeToken) {\n    // This property needs to remain unminified.\n    this['_$cssResult$'] = true;\n    if (safeToken !== constructionToken) {\n      throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n    }\n    this.cssText = cssText;\n    this._strings = strings;\n  }\n  // This is a getter so that it's lazy. In practice, this means stylesheets\n  // are not created until the first element instance is made.\n  get styleSheet() {\n    // If `supportsAdoptingStyleSheets` is true then we assume CSSStyleSheet is\n    // constructable.\n    let styleSheet = this._styleSheet;\n    const strings = this._strings;\n    if (supportsAdoptingStyleSheets && styleSheet === undefined) {\n      const cacheable = strings !== undefined && strings.length === 1;\n      if (cacheable) {\n        styleSheet = cssTagCache.get(strings);\n      }\n      if (styleSheet === undefined) {\n        (this._styleSheet = styleSheet = new CSSStyleSheet()).replaceSync(this.cssText);\n        if (cacheable) {\n          cssTagCache.set(strings, styleSheet);\n        }\n      }\n    }\n    return styleSheet;\n  }\n  toString() {\n    return this.cssText;\n  }\n}\nconst textFromCSSResult = value => {\n  // This property needs to remain unminified.\n  if (value['_$cssResult$'] === true) {\n    return value.cssText;\n  } else if (typeof value === 'number') {\n    return value;\n  } else {\n    throw new Error(`Value passed to 'css' function must be a 'css' function result: ` + `${value}. Use 'unsafeCSS' to pass non-literal values, but take care ` + `to ensure page security.`);\n  }\n};\n/**\n * Wrap a value for interpolation in a {@linkcode css} tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nconst unsafeCSS = value => new CSSResult(typeof value === 'string' ? value : String(value), undefined, constructionToken);\n/**\n * A template literal tag which can be used with LitElement's\n * {@linkcode LitElement.styles} property to set element styles.\n *\n * For security reasons, only literal string values and number may be used in\n * embedded expressions. To incorporate non-literal values {@linkcode unsafeCSS}\n * may be used inside an expression.\n */\nconst css = (strings, ...values) => {\n  const cssText = strings.length === 1 ? strings[0] : values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n  return new CSSResult(cssText, strings, constructionToken);\n};\n/**\n * Applies the given styles to a `shadowRoot`. When Shadow DOM is\n * available but `adoptedStyleSheets` is not, styles are appended to the\n * `shadowRoot` to [mimic the native feature](https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot/adoptedStyleSheets).\n * Note, when shimming is used, any styles that are subsequently placed into\n * the shadowRoot should be placed *before* any shimmed adopted styles. This\n * will match spec behavior that gives adopted sheets precedence over styles in\n * shadowRoot.\n */\nconst adoptStyles = (renderRoot, styles) => {\n  if (supportsAdoptingStyleSheets) {\n    renderRoot.adoptedStyleSheets = styles.map(s => s instanceof CSSStyleSheet ? s : s.styleSheet);\n  } else {\n    for (const s of styles) {\n      const style = document.createElement('style');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const nonce = global['litNonce'];\n      if (nonce !== undefined) {\n        style.setAttribute('nonce', nonce);\n      }\n      style.textContent = s.cssText;\n      renderRoot.appendChild(style);\n    }\n  }\n};\nconst cssResultFromStyleSheet = sheet => {\n  let cssText = '';\n  for (const rule of sheet.cssRules) {\n    cssText += rule.cssText;\n  }\n  return unsafeCSS(cssText);\n};\nconst getCompatibleStyle = supportsAdoptingStyleSheets || global.CSSStyleSheet === undefined ? s => s : s => s instanceof CSSStyleSheet ? cssResultFromStyleSheet(s) : s;\nexport { CSSResult, adoptStyles, css, getCompatibleStyle, supportsAdoptingStyleSheets, unsafeCSS };\n", "import { customElements, HTMLElement } from '@lit-labs/ssr-dom-shim';\nimport { getCompatibleStyle, adoptStyles } from './css-tag.js';\nexport { CSSResult, css, supportsAdoptingStyleSheets, unsafeCSS } from './css-tag.js';\n\n// TODO (justinfagnani): Add `hasOwn` here when we ship ES2022\nconst {\n  is,\n  defineProperty,\n  getOwnPropertyDescriptor,\n  getOwnPropertyNames,\n  getOwnPropertySymbols,\n  getPrototypeOf\n} = Object;\n// Lets a minifier replace globalThis references with a minified name\nconst global = globalThis;\n{\n  global.customElements ??= customElements;\n}\nlet issueWarning;\nconst trustedTypes = global.trustedTypes;\n// Temporary workaround for https://crbug.com/993268\n// Currently, any attribute starting with \"on\" is considered to be a\n// TrustedScript source. Such boolean attributes must be set to the equivalent\n// trusted emptyScript value.\nconst emptyStringForBooleanAttribute = trustedTypes ? trustedTypes.emptyScript : '';\nconst polyfillSupport = global.reactiveElementPolyfillSupportDevMode;\n{\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  global.litIssuedWarnings ??= new Set();\n  /**\n   * Issue a warning if we haven't already, based either on `code` or `warning`.\n   * Warnings are disabled automatically only by `warning`; disabling via `code`\n   * can be done by users.\n   */\n  issueWarning = (code, warning) => {\n    warning += ` See https://lit.dev/msg/${code} for more information.`;\n    if (!global.litIssuedWarnings.has(warning) && !global.litIssuedWarnings.has(code)) {\n      console.warn(warning);\n      global.litIssuedWarnings.add(warning);\n    }\n  };\n  queueMicrotask(() => {\n    issueWarning('dev-mode', `Lit is in dev mode. Not recommended for production!`);\n    // Issue polyfill support warning.\n    if (global.ShadyDOM?.inUse && polyfillSupport === undefined) {\n      issueWarning('polyfill-support-missing', `Shadow DOM is being polyfilled via \\`ShadyDOM\\` but ` + `the \\`polyfill-support\\` module has not been loaded.`);\n    }\n  });\n}\n/**\n * Useful for visualizing and logging insights into what the Lit template system is doing.\n *\n * Compiled out of prod mode builds.\n */\nconst debugLogEvent = event => {\n  const shouldEmit = global.emitLitDebugLogEvents;\n  if (!shouldEmit) {\n    return;\n  }\n  global.dispatchEvent(new CustomEvent('lit-debug', {\n    detail: event\n  }));\n};\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\n/*@__INLINE__*/\nconst JSCompiler_renameProperty = (prop, _obj) => prop;\nconst defaultConverter = {\n  toAttribute(value, type) {\n    switch (type) {\n      case Boolean:\n        value = value ? emptyStringForBooleanAttribute : null;\n        break;\n      case Object:\n      case Array:\n        // if the value is `null` or `undefined` pass this through\n        // to allow removing/no change behavior.\n        value = value == null ? value : JSON.stringify(value);\n        break;\n    }\n    return value;\n  },\n  fromAttribute(value, type) {\n    let fromValue = value;\n    switch (type) {\n      case Boolean:\n        fromValue = value !== null;\n        break;\n      case Number:\n        fromValue = value === null ? null : Number(value);\n        break;\n      case Object:\n      case Array:\n        // Do *not* generate exception when invalid JSON is set as elements\n        // don't normally complain on being mis-configured.\n        // TODO(sorvell): Do generate exception in *dev mode*.\n        try {\n          // Assert to adhere to Bazel's \"must type assert JSON parse\" rule.\n          fromValue = JSON.parse(value);\n        } catch (e) {\n          fromValue = null;\n        }\n        break;\n    }\n    return fromValue;\n  }\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nconst notEqual = (value, old) => !is(value, old);\nconst defaultPropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  reflect: false,\n  useDefault: false,\n  hasChanged: notEqual\n};\n// Ensure metadata is enabled. TypeScript does not polyfill\n// Symbol.metadata, so we must ensure that it exists.\nSymbol.metadata ??= Symbol('metadata');\n// Map from a class's metadata object to property options\n// Note that we must use nullish-coalescing assignment so that we only use one\n// map even if we load multiple version of this module.\nglobal.litPropertyMetadata ??= new WeakMap();\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclasses to render updates as desired.\n * @noInheritDoc\n */\nclass ReactiveElement\n// In the Node build, this `extends` clause will be substituted with\n// `(globalThis.HTMLElement ?? HTMLElement)`.\n//\n// This way, we will first prefer any global `HTMLElement` polyfill that the\n// user has assigned, and then fall back to the `HTMLElement` shim which has\n// been imported (see note at the top of this file about how this import is\n// generated by Rollup). Note that the `HTMLElement` variable has been\n// shadowed by this import, so it no longer refers to the global.\nextends (globalThis.HTMLElement ?? HTMLElement) {\n  /**\n   * Adds an initializer function to the class that is called during instance\n   * construction.\n   *\n   * This is useful for code that runs against a `ReactiveElement`\n   * subclass, such as a decorator, that needs to do work for each\n   * instance, such as setting up a `ReactiveController`.\n   *\n   * ```ts\n   * const myDecorator = (target: typeof ReactiveElement, key: string) => {\n   *   target.addInitializer((instance: ReactiveElement) => {\n   *     // This is run during construction of the element\n   *     new MyController(instance);\n   *   });\n   * }\n   * ```\n   *\n   * Decorating a field will then cause each instance to run an initializer\n   * that adds a controller:\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   @myDecorator foo;\n   * }\n   * ```\n   *\n   * Initializers are stored per-constructor. Adding an initializer to a\n   * subclass does not add it to a superclass. Since initializers are run in\n   * constructors, initializers will run in order of the class hierarchy,\n   * starting with superclasses and progressing to the instance's class.\n   *\n   * @nocollapse\n   */\n  static addInitializer(initializer) {\n    this.__prepare();\n    (this._initializers ??= []).push(initializer);\n  }\n  /**\n   * Returns a list of attributes corresponding to the registered properties.\n   * @nocollapse\n   * @category attributes\n   */\n  static get observedAttributes() {\n    // Ensure we've created all properties\n    this.finalize();\n    // this.__attributeToPropertyMap is only undefined after finalize() in\n    // ReactiveElement itself. ReactiveElement.observedAttributes is only\n    // accessed with ReactiveElement as the receiver when a subclass or mixin\n    // calls super.observedAttributes\n    return this.__attributeToPropertyMap && [...this.__attributeToPropertyMap.keys()];\n  }\n  /**\n   * Creates a property accessor on the element prototype if one does not exist\n   * and stores a {@linkcode PropertyDeclaration} for the property with the\n   * given options. The property setter calls the property's `hasChanged`\n   * property option or uses a strict identity check to determine whether or not\n   * to request an update.\n   *\n   * This method may be overridden to customize properties; however,\n   * when doing so, it's important to call `super.createProperty` to ensure\n   * the property is setup correctly. This method calls\n   * `getPropertyDescriptor` internally to get a descriptor to install.\n   * To customize what properties do when they are get or set, override\n   * `getPropertyDescriptor`. To customize the options for a property,\n   * implement `createProperty` like this:\n   *\n   * ```ts\n   * static createProperty(name, options) {\n   *   options = Object.assign(options, {myOption: true});\n   *   super.createProperty(name, options);\n   * }\n   * ```\n   *\n   * @nocollapse\n   * @category properties\n   */\n  static createProperty(name, options = defaultPropertyDeclaration) {\n    // If this is a state property, force the attribute to false.\n    if (options.state) {\n      options.attribute = false;\n    }\n    this.__prepare();\n    // Whether this property is wrapping accessors.\n    // Helps control the initial value change and reflection logic.\n    if (this.prototype.hasOwnProperty(name)) {\n      options = Object.create(options);\n      options.wrapped = true;\n    }\n    this.elementProperties.set(name, options);\n    if (!options.noAccessor) {\n      const key =\n      // Use Symbol.for in dev mode to make it easier to maintain state\n      // when doing HMR.\n      Symbol.for(`${String(name)} (@property() cache)`);\n      const descriptor = this.getPropertyDescriptor(name, key, options);\n      if (descriptor !== undefined) {\n        defineProperty(this.prototype, name, descriptor);\n      }\n    }\n  }\n  /**\n   * Returns a property descriptor to be defined on the given named property.\n   * If no descriptor is returned, the property will not become an accessor.\n   * For example,\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   static getPropertyDescriptor(name, key, options) {\n   *     const defaultDescriptor =\n   *         super.getPropertyDescriptor(name, key, options);\n   *     const setter = defaultDescriptor.set;\n   *     return {\n   *       get: defaultDescriptor.get,\n   *       set(value) {\n   *         setter.call(this, value);\n   *         // custom action.\n   *       },\n   *       configurable: true,\n   *       enumerable: true\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * @nocollapse\n   * @category properties\n   */\n  static getPropertyDescriptor(name, key, options) {\n    const {\n      get,\n      set\n    } = getOwnPropertyDescriptor(this.prototype, name) ?? {\n      get() {\n        return this[key];\n      },\n      set(v) {\n        this[key] = v;\n      }\n    };\n    if (get == null) {\n      if ('value' in (getOwnPropertyDescriptor(this.prototype, name) ?? {})) {\n        throw new Error(`Field ${JSON.stringify(String(name))} on ` + `${this.name} was declared as a reactive property ` + `but it's actually declared as a value on the prototype. ` + `Usually this is due to using @property or @state on a method.`);\n      }\n      issueWarning('reactive-property-without-getter', `Field ${JSON.stringify(String(name))} on ` + `${this.name} was declared as a reactive property ` + `but it does not have a getter. This will be an error in a ` + `future version of Lit.`);\n    }\n    return {\n      get,\n      set(value) {\n        const oldValue = get?.call(this);\n        set?.call(this, value);\n        this.requestUpdate(name, oldValue, options);\n      },\n      configurable: true,\n      enumerable: true\n    };\n  }\n  /**\n   * Returns the property options associated with the given property.\n   * These options are defined with a `PropertyDeclaration` via the `properties`\n   * object or the `@property` decorator and are registered in\n   * `createProperty(...)`.\n   *\n   * Note, this method should be considered \"final\" and not overridden. To\n   * customize the options for a given property, override\n   * {@linkcode createProperty}.\n   *\n   * @nocollapse\n   * @final\n   * @category properties\n   */\n  static getPropertyOptions(name) {\n    return this.elementProperties.get(name) ?? defaultPropertyDeclaration;\n  }\n  /**\n   * Initializes static own properties of the class used in bookkeeping\n   * for element properties, initializers, etc.\n   *\n   * Can be called multiple times by code that needs to ensure these\n   * properties exist before using them.\n   *\n   * This method ensures the superclass is finalized so that inherited\n   * property metadata can be copied down.\n   * @nocollapse\n   */\n  static __prepare() {\n    if (this.hasOwnProperty(JSCompiler_renameProperty('elementProperties'))) {\n      // Already prepared\n      return;\n    }\n    // Finalize any superclasses\n    const superCtor = getPrototypeOf(this);\n    superCtor.finalize();\n    // Create own set of initializers for this class if any exist on the\n    // superclass and copy them down. Note, for a small perf boost, avoid\n    // creating initializers unless needed.\n    if (superCtor._initializers !== undefined) {\n      this._initializers = [...superCtor._initializers];\n    }\n    // Initialize elementProperties from the superclass\n    this.elementProperties = new Map(superCtor.elementProperties);\n  }\n  /**\n   * Finishes setting up the class so that it's ready to be registered\n   * as a custom element and instantiated.\n   *\n   * This method is called by the ReactiveElement.observedAttributes getter.\n   * If you override the observedAttributes getter, you must either call\n   * super.observedAttributes to trigger finalization, or call finalize()\n   * yourself.\n   *\n   * @nocollapse\n   */\n  static finalize() {\n    if (this.hasOwnProperty(JSCompiler_renameProperty('finalized'))) {\n      return;\n    }\n    this.finalized = true;\n    this.__prepare();\n    // Create properties from the static properties block:\n    if (this.hasOwnProperty(JSCompiler_renameProperty('properties'))) {\n      const props = this.properties;\n      const propKeys = [...getOwnPropertyNames(props), ...getOwnPropertySymbols(props)];\n      for (const p of propKeys) {\n        this.createProperty(p, props[p]);\n      }\n    }\n    // Create properties from standard decorator metadata:\n    const metadata = this[Symbol.metadata];\n    if (metadata !== null) {\n      const properties = litPropertyMetadata.get(metadata);\n      if (properties !== undefined) {\n        for (const [p, options] of properties) {\n          this.elementProperties.set(p, options);\n        }\n      }\n    }\n    // Create the attribute-to-property map\n    this.__attributeToPropertyMap = new Map();\n    for (const [p, options] of this.elementProperties) {\n      const attr = this.__attributeNameForProperty(p, options);\n      if (attr !== undefined) {\n        this.__attributeToPropertyMap.set(attr, p);\n      }\n    }\n    this.elementStyles = this.finalizeStyles(this.styles);\n    {\n      if (this.hasOwnProperty('createProperty')) {\n        issueWarning('no-override-create-property', 'Overriding ReactiveElement.createProperty() is deprecated. ' + 'The override will not be called with standard decorators');\n      }\n      if (this.hasOwnProperty('getPropertyDescriptor')) {\n        issueWarning('no-override-get-property-descriptor', 'Overriding ReactiveElement.getPropertyDescriptor() is deprecated. ' + 'The override will not be called with standard decorators');\n      }\n    }\n  }\n  /**\n   * Takes the styles the user supplied via the `static styles` property and\n   * returns the array of styles to apply to the element.\n   * Override this method to integrate into a style management system.\n   *\n   * Styles are deduplicated preserving the _last_ instance in the list. This\n   * is a performance optimization to avoid duplicated styles that can occur\n   * especially when composing via subclassing. The last item is kept to try\n   * to preserve the cascade order with the assumption that it's most important\n   * that last added styles override previous styles.\n   *\n   * @nocollapse\n   * @category styles\n   */\n  static finalizeStyles(styles) {\n    const elementStyles = [];\n    if (Array.isArray(styles)) {\n      // Dedupe the flattened array in reverse order to preserve the last items.\n      // Casting to Array<unknown> works around TS error that\n      // appears to come from trying to flatten a type CSSResultArray.\n      const set = new Set(styles.flat(Infinity).reverse());\n      // Then preserve original order by adding the set items in reverse order.\n      for (const s of set) {\n        elementStyles.unshift(getCompatibleStyle(s));\n      }\n    } else if (styles !== undefined) {\n      elementStyles.push(getCompatibleStyle(styles));\n    }\n    return elementStyles;\n  }\n  /**\n   * Returns the property name for the given attribute `name`.\n   * @nocollapse\n   */\n  static __attributeNameForProperty(name, options) {\n    const attribute = options.attribute;\n    return attribute === false ? undefined : typeof attribute === 'string' ? attribute : typeof name === 'string' ? name.toLowerCase() : undefined;\n  }\n  constructor() {\n    super();\n    this.__instanceProperties = undefined;\n    /**\n     * True if there is a pending update as a result of calling `requestUpdate()`.\n     * Should only be read.\n     * @category updates\n     */\n    this.isUpdatePending = false;\n    /**\n     * Is set to `true` after the first update. The element code cannot assume\n     * that `renderRoot` exists before the element `hasUpdated`.\n     * @category updates\n     */\n    this.hasUpdated = false;\n    /**\n     * Name of currently reflecting property\n     */\n    this.__reflectingProperty = null;\n    this.__initialize();\n  }\n  /**\n   * Internal only override point for customizing work done when elements\n   * are constructed.\n   */\n  __initialize() {\n    this.__updatePromise = new Promise(res => this.enableUpdating = res);\n    this._$changedProperties = new Map();\n    // This enqueues a microtask that must run before the first update, so it\n    // must be called before requestUpdate()\n    this.__saveInstanceProperties();\n    // ensures first update will be caught by an early access of\n    // `updateComplete`\n    this.requestUpdate();\n    this.constructor._initializers?.forEach(i => i(this));\n  }\n  /**\n   * Registers a `ReactiveController` to participate in the element's reactive\n   * update cycle. The element automatically calls into any registered\n   * controllers during its lifecycle callbacks.\n   *\n   * If the element is connected when `addController()` is called, the\n   * controller's `hostConnected()` callback will be immediately called.\n   * @category controllers\n   */\n  addController(controller) {\n    (this.__controllers ??= new Set()).add(controller);\n    // If a controller is added after the element has been connected,\n    // call hostConnected. Note, re-using existence of `renderRoot` here\n    // (which is set in connectedCallback) to avoid the need to track a\n    // first connected state.\n    if (this.renderRoot !== undefined && this.isConnected) {\n      controller.hostConnected?.();\n    }\n  }\n  /**\n   * Removes a `ReactiveController` from the element.\n   * @category controllers\n   */\n  removeController(controller) {\n    this.__controllers?.delete(controller);\n  }\n  /**\n   * Fixes any properties set on the instance before upgrade time.\n   * Otherwise these would shadow the accessor and break these properties.\n   * The properties are stored in a Map which is played back after the\n   * constructor runs.\n   */\n  __saveInstanceProperties() {\n    const instanceProperties = new Map();\n    const elementProperties = this.constructor.elementProperties;\n    for (const p of elementProperties.keys()) {\n      if (this.hasOwnProperty(p)) {\n        instanceProperties.set(p, this[p]);\n        delete this[p];\n      }\n    }\n    if (instanceProperties.size > 0) {\n      this.__instanceProperties = instanceProperties;\n    }\n  }\n  /**\n   * Returns the node into which the element should render and by default\n   * creates and returns an open shadowRoot. Implement to customize where the\n   * element's DOM is rendered. For example, to render into the element's\n   * childNodes, return `this`.\n   *\n   * @return Returns a node into which to render.\n   * @category rendering\n   */\n  createRenderRoot() {\n    const renderRoot = this.shadowRoot ?? this.attachShadow(this.constructor.shadowRootOptions);\n    adoptStyles(renderRoot, this.constructor.elementStyles);\n    return renderRoot;\n  }\n  /**\n   * On first connection, creates the element's renderRoot, sets up\n   * element styling, and enables updating.\n   * @category lifecycle\n   */\n  connectedCallback() {\n    // Create renderRoot before controllers `hostConnected`\n    this.renderRoot ??= this.createRenderRoot();\n    this.enableUpdating(true);\n    this.__controllers?.forEach(c => c.hostConnected?.());\n  }\n  /**\n   * Note, this method should be considered final and not overridden. It is\n   * overridden on the element instance with a function that triggers the first\n   * update.\n   * @category updates\n   */\n  enableUpdating(_requestedUpdate) {}\n  /**\n   * Allows for `super.disconnectedCallback()` in extensions while\n   * reserving the possibility of making non-breaking feature additions\n   * when disconnecting at some point in the future.\n   * @category lifecycle\n   */\n  disconnectedCallback() {\n    this.__controllers?.forEach(c => c.hostDisconnected?.());\n  }\n  /**\n   * Synchronizes property values when attributes change.\n   *\n   * Specifically, when an attribute is set, the corresponding property is set.\n   * You should rarely need to implement this callback. If this method is\n   * overridden, `super.attributeChangedCallback(name, _old, value)` must be\n   * called.\n   *\n   * See [responding to attribute changes](https://developer.mozilla.org/en-US/docs/Web/API/Web_components/Using_custom_elements#responding_to_attribute_changes)\n   * on MDN for more information about the `attributeChangedCallback`.\n   * @category attributes\n   */\n  attributeChangedCallback(name, _old, value) {\n    this._$attributeToProperty(name, value);\n  }\n  __propertyToAttribute(name, value) {\n    const elemProperties = this.constructor.elementProperties;\n    const options = elemProperties.get(name);\n    const attr = this.constructor.__attributeNameForProperty(name, options);\n    if (attr !== undefined && options.reflect === true) {\n      const converter = options.converter?.toAttribute !== undefined ? options.converter : defaultConverter;\n      const attrValue = converter.toAttribute(value, options.type);\n      if (this.constructor.enabledWarnings.includes('migration') && attrValue === undefined) {\n        issueWarning('undefined-attribute-value', `The attribute value for the ${name} property is ` + `undefined on element ${this.localName}. The attribute will be ` + `removed, but in the previous version of \\`ReactiveElement\\`, ` + `the attribute would not have changed.`);\n      }\n      // Track if the property is being reflected to avoid\n      // setting the property again via `attributeChangedCallback`. Note:\n      // 1. this takes advantage of the fact that the callback is synchronous.\n      // 2. will behave incorrectly if multiple attributes are in the reaction\n      // stack at time of calling. However, since we process attributes\n      // in `update` this should not be possible (or an extreme corner case\n      // that we'd like to discover).\n      // mark state reflecting\n      this.__reflectingProperty = name;\n      if (attrValue == null) {\n        this.removeAttribute(attr);\n      } else {\n        this.setAttribute(attr, attrValue);\n      }\n      // mark state not reflecting\n      this.__reflectingProperty = null;\n    }\n  }\n  /** @internal */\n  _$attributeToProperty(name, value) {\n    const ctor = this.constructor;\n    // Note, hint this as an `AttributeMap` so closure clearly understands\n    // the type; it has issues with tracking types through statics\n    const propName = ctor.__attributeToPropertyMap.get(name);\n    // Use tracking info to avoid reflecting a property value to an attribute\n    // if it was just set because the attribute changed.\n    if (propName !== undefined && this.__reflectingProperty !== propName) {\n      const options = ctor.getPropertyOptions(propName);\n      const converter = typeof options.converter === 'function' ? {\n        fromAttribute: options.converter\n      } : options.converter?.fromAttribute !== undefined ? options.converter : defaultConverter;\n      // mark state reflecting\n      this.__reflectingProperty = propName;\n      const convertedValue = converter.fromAttribute(value, options.type);\n      this[propName] = convertedValue ?? this.__defaultValues?.get(propName) ??\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      convertedValue;\n      // mark state not reflecting\n      this.__reflectingProperty = null;\n    }\n  }\n  /**\n   * Requests an update which is processed asynchronously. This should be called\n   * when an element should update based on some state not triggered by setting\n   * a reactive property. In this case, pass no arguments. It should also be\n   * called when manually implementing a property setter. In this case, pass the\n   * property `name` and `oldValue` to ensure that any configured property\n   * options are honored.\n   *\n   * @param name name of requesting property\n   * @param oldValue old value of requesting property\n   * @param options property options to use instead of the previously\n   *     configured options\n   * @category updates\n   */\n  requestUpdate(name, oldValue, options) {\n    // If we have a property key, perform property update steps.\n    if (name !== undefined) {\n      if (name instanceof Event) {\n        issueWarning(``, `The requestUpdate() method was called with an Event as the property name. This is probably a mistake caused by binding this.requestUpdate as an event listener. Instead bind a function that will call it with no arguments: () => this.requestUpdate()`);\n      }\n      const ctor = this.constructor;\n      const newValue = this[name];\n      options ??= ctor.getPropertyOptions(name);\n      const changed = (options.hasChanged ?? notEqual)(newValue, oldValue) ||\n      // When there is no change, check a corner case that can occur when\n      // 1. there's a initial value which was not reflected\n      // 2. the property is subsequently set to this value.\n      // For example, `prop: {useDefault: true, reflect: true}`\n      // and el.prop = 'foo'. This should be considered a change if the\n      // attribute is not set because we will now reflect the property to the attribute.\n      options.useDefault && options.reflect && newValue === this.__defaultValues?.get(name) && !this.hasAttribute(ctor.__attributeNameForProperty(name, options));\n      if (changed) {\n        this._$changeProperty(name, oldValue, options);\n      } else {\n        // Abort the request if the property should not be considered changed.\n        return;\n      }\n    }\n    if (this.isUpdatePending === false) {\n      this.__updatePromise = this.__enqueueUpdate();\n    }\n  }\n  /**\n   * @internal\n   */\n  _$changeProperty(name, oldValue, {\n    useDefault,\n    reflect,\n    wrapped\n  }, initializeValue) {\n    // Record default value when useDefault is used. This allows us to\n    // restore this value when the attribute is removed.\n    if (useDefault && !(this.__defaultValues ??= new Map()).has(name)) {\n      this.__defaultValues.set(name, initializeValue ?? oldValue ?? this[name]);\n      // if this is not wrapping an accessor, it must be an initial setting\n      // and in this case we do not want to record the change or reflect.\n      if (wrapped !== true || initializeValue !== undefined) {\n        return;\n      }\n    }\n    // TODO (justinfagnani): Create a benchmark of Map.has() + Map.set(\n    // vs just Map.set()\n    if (!this._$changedProperties.has(name)) {\n      // On the initial change, the old value should be `undefined`, except\n      // with `useDefault`\n      if (!this.hasUpdated && !useDefault) {\n        oldValue = undefined;\n      }\n      this._$changedProperties.set(name, oldValue);\n    }\n    // Add to reflecting properties set.\n    // Note, it's important that every change has a chance to add the\n    // property to `__reflectingProperties`. This ensures setting\n    // attribute + property reflects correctly.\n    if (reflect === true && this.__reflectingProperty !== name) {\n      (this.__reflectingProperties ??= new Set()).add(name);\n    }\n  }\n  /**\n   * Sets up the element to asynchronously update.\n   */\n  async __enqueueUpdate() {\n    this.isUpdatePending = true;\n    try {\n      // Ensure any previous update has resolved before updating.\n      // This `await` also ensures that property changes are batched.\n      await this.__updatePromise;\n    } catch (e) {\n      // Refire any previous errors async so they do not disrupt the update\n      // cycle. Errors are refired so developers have a chance to observe\n      // them, and this can be done by implementing\n      // `window.onunhandledrejection`.\n      Promise.reject(e);\n    }\n    const result = this.scheduleUpdate();\n    // If `scheduleUpdate` returns a Promise, we await it. This is done to\n    // enable coordinating updates with a scheduler. Note, the result is\n    // checked to avoid delaying an additional microtask unless we need to.\n    if (result != null) {\n      await result;\n    }\n    return !this.isUpdatePending;\n  }\n  /**\n   * Schedules an element update. You can override this method to change the\n   * timing of updates by returning a Promise. The update will await the\n   * returned Promise, and you should resolve the Promise to allow the update\n   * to proceed. If this method is overridden, `super.scheduleUpdate()`\n   * must be called.\n   *\n   * For instance, to schedule updates to occur just before the next frame:\n   *\n   * ```ts\n   * override protected async scheduleUpdate(): Promise<unknown> {\n   *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n   *   super.scheduleUpdate();\n   * }\n   * ```\n   * @category updates\n   */\n  scheduleUpdate() {\n    const result = this.performUpdate();\n    if (this.constructor.enabledWarnings.includes('async-perform-update') && typeof result?.then === 'function') {\n      issueWarning('async-perform-update', `Element ${this.localName} returned a Promise from performUpdate(). ` + `This behavior is deprecated and will be removed in a future ` + `version of ReactiveElement.`);\n    }\n    return result;\n  }\n  /**\n   * Performs an element update. Note, if an exception is thrown during the\n   * update, `firstUpdated` and `updated` will not be called.\n   *\n   * Call `performUpdate()` to immediately process a pending update. This should\n   * generally not be needed, but it can be done in rare cases when you need to\n   * update synchronously.\n   *\n   * @category updates\n   */\n  performUpdate() {\n    // Abort any update if one is not pending when this is called.\n    // This can happen if `performUpdate` is called early to \"flush\"\n    // the update.\n    if (!this.isUpdatePending) {\n      return;\n    }\n    debugLogEvent?.({\n      kind: 'update'\n    });\n    if (!this.hasUpdated) {\n      // Create renderRoot before first update. This occurs in `connectedCallback`\n      // but is done here to support out of tree calls to `enableUpdating`/`performUpdate`.\n      this.renderRoot ??= this.createRenderRoot();\n      {\n        // Produce warning if any reactive properties on the prototype are\n        // shadowed by class fields. Instance fields set before upgrade are\n        // deleted by this point, so any own property is caused by class field\n        // initialization in the constructor.\n        const ctor = this.constructor;\n        const shadowedProperties = [...ctor.elementProperties.keys()].filter(p => this.hasOwnProperty(p) && p in getPrototypeOf(this));\n        if (shadowedProperties.length) {\n          throw new Error(`The following properties on element ${this.localName} will not ` + `trigger updates as expected because they are set using class ` + `fields: ${shadowedProperties.join(', ')}. ` + `Native class fields and some compiled output will overwrite ` + `accessors used for detecting changes. See ` + `https://lit.dev/msg/class-field-shadowing ` + `for more information.`);\n        }\n      }\n      // Mixin instance properties once, if they exist.\n      if (this.__instanceProperties) {\n        // TODO (justinfagnani): should we use the stored value? Could a new value\n        // have been set since we stored the own property value?\n        for (const [p, value] of this.__instanceProperties) {\n          this[p] = value;\n        }\n        this.__instanceProperties = undefined;\n      }\n      // Trigger initial value reflection and populate the initial\n      // `changedProperties` map, but only for the case of properties created\n      // via `createProperty` on accessors, which will not have already\n      // populated the `changedProperties` map since they are not set.\n      // We can't know if these accessors had initializers, so we just set\n      // them anyway - a difference from experimental decorators on fields and\n      // standard decorators on auto-accessors.\n      // For context see:\n      // https://github.com/lit/lit/pull/4183#issuecomment-1711959635\n      const elementProperties = this.constructor.elementProperties;\n      if (elementProperties.size > 0) {\n        for (const [p, options] of elementProperties) {\n          const {\n            wrapped\n          } = options;\n          const value = this[p];\n          if (wrapped === true && !this._$changedProperties.has(p) && value !== undefined) {\n            this._$changeProperty(p, undefined, options, value);\n          }\n        }\n      }\n    }\n    let shouldUpdate = false;\n    const changedProperties = this._$changedProperties;\n    try {\n      shouldUpdate = this.shouldUpdate(changedProperties);\n      if (shouldUpdate) {\n        this.willUpdate(changedProperties);\n        this.__controllers?.forEach(c => c.hostUpdate?.());\n        this.update(changedProperties);\n      } else {\n        this.__markUpdated();\n      }\n    } catch (e) {\n      // Prevent `firstUpdated` and `updated` from running when there's an\n      // update exception.\n      shouldUpdate = false;\n      // Ensure element can accept additional updates after an exception.\n      this.__markUpdated();\n      throw e;\n    }\n    // The update is no longer considered pending and further updates are now allowed.\n    if (shouldUpdate) {\n      this._$didUpdate(changedProperties);\n    }\n  }\n  /**\n   * Invoked before `update()` to compute values needed during the update.\n   *\n   * Implement `willUpdate` to compute property values that depend on other\n   * properties and are used in the rest of the update process.\n   *\n   * ```ts\n   * willUpdate(changedProperties) {\n   *   // only need to check changed properties for an expensive computation.\n   *   if (changedProperties.has('firstName') || changedProperties.has('lastName')) {\n   *     this.sha = computeSHA(`${this.firstName} ${this.lastName}`);\n   *   }\n   * }\n   *\n   * render() {\n   *   return html`SHA: ${this.sha}`;\n   * }\n   * ```\n   *\n   * @category updates\n   */\n  willUpdate(_changedProperties) {}\n  // Note, this is an override point for polyfill-support.\n  // @internal\n  _$didUpdate(changedProperties) {\n    this.__controllers?.forEach(c => c.hostUpdated?.());\n    if (!this.hasUpdated) {\n      this.hasUpdated = true;\n      this.firstUpdated(changedProperties);\n    }\n    this.updated(changedProperties);\n    if (this.isUpdatePending && this.constructor.enabledWarnings.includes('change-in-update')) {\n      issueWarning('change-in-update', `Element ${this.localName} scheduled an update ` + `(generally because a property was set) ` + `after an update completed, causing a new update to be scheduled. ` + `This is inefficient and should be avoided unless the next update ` + `can only be scheduled as a side effect of the previous update.`);\n    }\n  }\n  __markUpdated() {\n    this._$changedProperties = new Map();\n    this.isUpdatePending = false;\n  }\n  /**\n   * Returns a Promise that resolves when the element has completed updating.\n   * The Promise value is a boolean that is `true` if the element completed the\n   * update without triggering another update. The Promise result is `false` if\n   * a property was set inside `updated()`. If the Promise is rejected, an\n   * exception was thrown during the update.\n   *\n   * To await additional asynchronous work, override the `getUpdateComplete`\n   * method. For example, it is sometimes useful to await a rendered element\n   * before fulfilling this Promise. To do this, first await\n   * `super.getUpdateComplete()`, then any subsequent state.\n   *\n   * @return A promise of a boolean that resolves to true if the update completed\n   *     without triggering another update.\n   * @category updates\n   */\n  get updateComplete() {\n    return this.getUpdateComplete();\n  }\n  /**\n   * Override point for the `updateComplete` promise.\n   *\n   * It is not safe to override the `updateComplete` getter directly due to a\n   * limitation in TypeScript which means it is not possible to call a\n   * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n   * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n   * This method should be overridden instead. For example:\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   override async getUpdateComplete() {\n   *     const result = await super.getUpdateComplete();\n   *     await this._myChild.updateComplete;\n   *     return result;\n   *   }\n   * }\n   * ```\n   *\n   * @return A promise of a boolean that resolves to true if the update completed\n   *     without triggering another update.\n   * @category updates\n   */\n  getUpdateComplete() {\n    return this.__updatePromise;\n  }\n  /**\n   * Controls whether or not `update()` should be called when the element requests\n   * an update. By default, this method always returns `true`, but this can be\n   * customized to control when to update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  shouldUpdate(_changedProperties) {\n    return true;\n  }\n  /**\n   * Updates the element. This method reflects property values to attributes.\n   * It can be overridden to render and keep updated element DOM.\n   * Setting properties inside this method will *not* trigger\n   * another update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  update(_changedProperties) {\n    // The forEach() expression will only run when __reflectingProperties is\n    // defined, and it returns undefined, setting __reflectingProperties to\n    // undefined\n    this.__reflectingProperties &&= this.__reflectingProperties.forEach(p => this.__propertyToAttribute(p, this[p]));\n    this.__markUpdated();\n  }\n  /**\n   * Invoked whenever the element is updated. Implement to perform\n   * post-updating tasks via DOM APIs, for example, focusing an element.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  updated(_changedProperties) {}\n  /**\n   * Invoked when the element is first updated. Implement to perform one time\n   * work on the element after update.\n   *\n   * ```ts\n   * firstUpdated() {\n   *   this.renderRoot.getElementById('my-text-area').focus();\n   * }\n   * ```\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  firstUpdated(_changedProperties) {}\n}\n/**\n * Memoized list of all element styles.\n * Created lazily on user subclasses when finalizing the class.\n * @nocollapse\n * @category styles\n */\nReactiveElement.elementStyles = [];\n/**\n * Options used when calling `attachShadow`. Set this property to customize\n * the options for the shadowRoot; for example, to create a closed\n * shadowRoot: `{mode: 'closed'}`.\n *\n * Note, these options are used in `createRenderRoot`. If this method\n * is customized, options should be respected if possible.\n * @nocollapse\n * @category rendering\n */\nReactiveElement.shadowRootOptions = {\n  mode: 'open'\n};\n// Assigned here to work around a jscompiler bug with static fields\n// when compiling to ES5.\n// https://github.com/google/closure-compiler/issues/3177\nReactiveElement[JSCompiler_renameProperty('elementProperties')] = new Map();\nReactiveElement[JSCompiler_renameProperty('finalized')] = new Map();\n// Apply polyfills if available\npolyfillSupport?.({\n  ReactiveElement\n});\n// Dev mode warnings...\n{\n  // Default warning set.\n  ReactiveElement.enabledWarnings = ['change-in-update', 'async-perform-update'];\n  const ensureOwnWarnings = function (ctor) {\n    if (!ctor.hasOwnProperty(JSCompiler_renameProperty('enabledWarnings'))) {\n      ctor.enabledWarnings = ctor.enabledWarnings.slice();\n    }\n  };\n  ReactiveElement.enableWarning = function (warning) {\n    ensureOwnWarnings(this);\n    if (!this.enabledWarnings.includes(warning)) {\n      this.enabledWarnings.push(warning);\n    }\n  };\n  ReactiveElement.disableWarning = function (warning) {\n    ensureOwnWarnings(this);\n    const i = this.enabledWarnings.indexOf(warning);\n    if (i >= 0) {\n      this.enabledWarnings.splice(i, 1);\n    }\n  };\n}\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for ReactiveElement usage.\n(global.reactiveElementVersions ??= []).push('2.1.1');\nif (global.reactiveElementVersions.length > 1) {\n  queueMicrotask(() => {\n    issueWarning('multiple-versions', `Multiple versions of Lit loaded. Loading multiple versions ` + `is not recommended.`);\n  });\n}\nexport { ReactiveElement, adoptStyles, defaultConverter, getCompatibleStyle, notEqual };\n", "import { defaultConverter, notEqual } from '../reactive-element.js';\n\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\nlet issueWarning;\n{\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  globalThis.litIssuedWarnings ??= new Set();\n  /**\n   * Issue a warning if we haven't already, based either on `code` or `warning`.\n   * Warnings are disabled automatically only by `warning`; disabling via `code`\n   * can be done by users.\n   */\n  issueWarning = (code, warning) => {\n    warning += ` See https://lit.dev/msg/${code} for more information.`;\n    if (!globalThis.litIssuedWarnings.has(warning) && !globalThis.litIssuedWarnings.has(code)) {\n      console.warn(warning);\n      globalThis.litIssuedWarnings.add(warning);\n    }\n  };\n}\nconst legacyProperty = (options, proto, name) => {\n  const hasOwnProperty = proto.hasOwnProperty(name);\n  proto.constructor.createProperty(name, options);\n  // For accessors (which have a descriptor on the prototype) we need to\n  // return a descriptor, otherwise TypeScript overwrites the descriptor we\n  // define in createProperty() with the original descriptor. We don't do this\n  // for fields, which don't have a descriptor, because this could overwrite\n  // descriptor defined by other decorators.\n  return hasOwnProperty ? Object.getOwnPropertyDescriptor(proto, name) : undefined;\n};\n// This is duplicated from a similar variable in reactive-element.ts, but\n// actually makes sense to have this default defined with the decorator, so\n// that different decorators could have different defaults.\nconst defaultPropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  reflect: false,\n  hasChanged: notEqual\n};\n/**\n * Wraps a class accessor or setter so that `requestUpdate()` is called with the\n * property name and old value when the accessor is set.\n */\nconst standardProperty = (options = defaultPropertyDeclaration, target, context) => {\n  const {\n    kind,\n    metadata\n  } = context;\n  if (metadata == null) {\n    issueWarning('missing-class-metadata', `The class ${target} is missing decorator metadata. This ` + `could mean that you're using a compiler that supports decorators ` + `but doesn't support decorator metadata, such as TypeScript 5.1. ` + `Please update your compiler.`);\n  }\n  // Store the property options\n  let properties = globalThis.litPropertyMetadata.get(metadata);\n  if (properties === undefined) {\n    globalThis.litPropertyMetadata.set(metadata, properties = new Map());\n  }\n  if (kind === 'setter') {\n    options = Object.create(options);\n    options.wrapped = true;\n  }\n  properties.set(context.name, options);\n  if (kind === 'accessor') {\n    // Standard decorators cannot dynamically modify the class, so we can't\n    // replace a field with accessors. The user must use the new `accessor`\n    // keyword instead.\n    const {\n      name\n    } = context;\n    return {\n      set(v) {\n        const oldValue = target.get.call(this);\n        target.set.call(this, v);\n        this.requestUpdate(name, oldValue, options);\n      },\n      init(v) {\n        if (v !== undefined) {\n          this._$changeProperty(name, undefined, options, v);\n        }\n        return v;\n      }\n    };\n  } else if (kind === 'setter') {\n    const {\n      name\n    } = context;\n    return function (value) {\n      const oldValue = this[name];\n      target.call(this, value);\n      this.requestUpdate(name, oldValue, options);\n    };\n  }\n  throw new Error(`Unsupported decorator location: ${kind}`);\n};\n/**\n * A class field or accessor decorator which creates a reactive property that\n * reflects a corresponding attribute value. When a decorated property is set\n * the element will update and render. A {@linkcode PropertyDeclaration} may\n * optionally be supplied to configure property features.\n *\n * This decorator should only be used for public fields. As public fields,\n * properties should be considered as primarily settable by element users,\n * either via attribute or the property itself.\n *\n * Generally, properties that are changed by the element should be private or\n * protected fields and should use the {@linkcode state} decorator.\n *\n * However, sometimes element code does need to set a public property. This\n * should typically only be done in response to user interaction, and an event\n * should be fired informing the user; for example, a checkbox sets its\n * `checked` property when clicked and fires a `changed` event. Mutating public\n * properties should typically not be done for non-primitive (object or array)\n * properties. In other cases when an element needs to manage state, a private\n * property decorated via the {@linkcode state} decorator should be used. When\n * needed, state properties can be initialized via public properties to\n * facilitate complex interactions.\n *\n * ```ts\n * class MyElement {\n *   @property({ type: Boolean })\n *   clicked = false;\n * }\n * ```\n * @category Decorator\n * @ExportDecoratedItems\n */\nfunction property(options) {\n  return (protoOrTarget, nameOrContext\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ) => {\n    return typeof nameOrContext === 'object' ? standardProperty(options, protoOrTarget, nameOrContext) : legacyProperty(options, protoOrTarget, nameOrContext);\n  };\n}\nexport { property, standardProperty };\n", "import { desc } from './base.js';\n\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nlet issueWarning;\n{\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  globalThis.litIssuedWarnings ??= new Set();\n  /**\n   * Issue a warning if we haven't already, based either on `code` or `warning`.\n   * Warnings are disabled automatically only by `warning`; disabling via `code`\n   * can be done by users.\n   */\n  issueWarning = (code, warning) => {\n    warning += code ? ` See https://lit.dev/msg/${code} for more information.` : '';\n    if (!globalThis.litIssuedWarnings.has(warning) && !globalThis.litIssuedWarnings.has(code)) {\n      console.warn(warning);\n      globalThis.litIssuedWarnings.add(warning);\n    }\n  };\n}\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n * @param cache An optional boolean which when true performs the DOM query only\n *     once and caches the result.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * ```ts\n * class MyElement {\n *   @query('#first')\n *   first: HTMLDivElement;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nfunction query(selector, cache) {\n  return (protoOrTarget, nameOrContext, descriptor) => {\n    const doQuery = el => {\n      const result = el.renderRoot?.querySelector(selector) ?? null;\n      if (result === null && cache && !el.hasUpdated) {\n        const name = typeof nameOrContext === 'object' ? nameOrContext.name : nameOrContext;\n        issueWarning('', `@query'd field ${JSON.stringify(String(name))} with the 'cache' ` + `flag set for selector '${selector}' has been accessed before ` + `the first update and returned null. This is expected if the ` + `renderRoot tree has not been provided beforehand (e.g. via ` + `Declarative Shadow DOM). Therefore the value hasn't been cached.`);\n      }\n      // TODO: if we want to allow users to assert that the query will never\n      // return null, we need a new option and to throw here if the result\n      // is null.\n      return result;\n    };\n    if (cache) {\n      // Accessors to wrap from either:\n      //   1. The decorator target, in the case of standard decorators\n      //   2. The property descriptor, in the case of experimental decorators\n      //      on auto-accessors.\n      //   3. Functions that access our own cache-key property on the instance,\n      //      in the case of experimental decorators on fields.\n      const {\n        get,\n        set\n      } = typeof nameOrContext === 'object' ? protoOrTarget : descriptor ?? (() => {\n        const key = Symbol(`${String(nameOrContext)} (@query() cache)`);\n        return {\n          get() {\n            return this[key];\n          },\n          set(v) {\n            this[key] = v;\n          }\n        };\n      })();\n      return desc(protoOrTarget, nameOrContext, {\n        get() {\n          let result = get.call(this);\n          if (result === undefined) {\n            result = doQuery(this);\n            if (result !== null || this.hasUpdated) {\n              set.call(this, result);\n            }\n          }\n          return result;\n        }\n      });\n    } else {\n      // This object works as the return type for both standard and\n      // experimental decorators.\n      return desc(protoOrTarget, nameOrContext, {\n        get() {\n          return doQuery(this);\n        }\n      });\n    }\n  };\n}\nexport { query };\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n// Allows minifiers to rename references to globalThis\nconst global = globalThis;\n/**\n * Useful for visualizing and logging insights into what the Lit template system is doing.\n *\n * Compiled out of prod mode builds.\n */\nconst debugLogEvent = event => {\n  const shouldEmit = global.emitLitDebugLogEvents;\n  if (!shouldEmit) {\n    return;\n  }\n  global.dispatchEvent(new CustomEvent('lit-debug', {\n    detail: event\n  }));\n};\n// Used for connecting beginRender and endRender events when there are nested\n// renders when errors are thrown preventing an endRender event from being\n// called.\nlet debugLogRenderId = 0;\nlet issueWarning;\n{\n  global.litIssuedWarnings ??= new Set();\n  /**\n   * Issue a warning if we haven't already, based either on `code` or `warning`.\n   * Warnings are disabled automatically only by `warning`; disabling via `code`\n   * can be done by users.\n   */\n  issueWarning = (code, warning) => {\n    warning += code ? ` See https://lit.dev/msg/${code} for more information.` : '';\n    if (!global.litIssuedWarnings.has(warning) && !global.litIssuedWarnings.has(code)) {\n      console.warn(warning);\n      global.litIssuedWarnings.add(warning);\n    }\n  };\n  queueMicrotask(() => {\n    issueWarning('dev-mode', `Lit is in dev mode. Not recommended for production!`);\n  });\n}\nconst wrap = node => node;\nconst trustedTypes = global.trustedTypes;\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = trustedTypes ? trustedTypes.createPolicy('lit-html', {\n  createHTML: s => s\n}) : undefined;\nconst identityFunction = value => value;\nconst noopSanitizer = (_node, _name, _type) => identityFunction;\n/** Sets the global sanitizer factory. */\nconst setSanitizer = newSanitizer => {\n  if (sanitizerFactoryInternal !== noopSanitizer) {\n    throw new Error(`Attempted to overwrite existing lit-html security policy.` + ` setSanitizeDOMValueFactory should be called at most once.`);\n  }\n  sanitizerFactoryInternal = newSanitizer;\n};\n/**\n * Only used in internal tests, not a part of the public API.\n */\nconst _testOnlyClearSanitizerFactoryDoNotCallOrElse = () => {\n  sanitizerFactoryInternal = noopSanitizer;\n};\nconst createSanitizer = (node, name, type) => {\n  return sanitizerFactoryInternal(node, name, type);\n};\n// Added to an attribute name to mark the attribute as bound so we can find\n// it easily.\nconst boundAttributeSuffix = '$lit$';\n// This marker is used in many syntactic positions in HTML, so it must be\n// a valid element name and attribute name. We don't support dynamic names (yet)\n// but this at least ensures that the parse tree is closer to the template\n// intention.\nconst marker = `lit$${Math.random().toFixed(9).slice(2)}$`;\n// String used to tell if a comment is a marker comment\nconst markerMatch = '?' + marker;\n// Text used to insert a comment marker node. We use processing instruction\n// syntax because it's slightly smaller, but parses as a comment node.\nconst nodeMarker = `<${markerMatch}>`;\nconst d = global.document === undefined ? {\n  createTreeWalker() {\n    return {};\n  }\n} : document;\n// Creates a dynamic marker. We never have to search for these in the DOM.\nconst createMarker = () => d.createComment('');\nconst isPrimitive = value => value === null || typeof value != 'object' && typeof value != 'function';\nconst isArray = Array.isArray;\nconst isIterable = value => isArray(value) ||\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntypeof value?.[Symbol.iterator] === 'function';\nconst SPACE_CHAR = `[ \\t\\n\\f\\r]`;\nconst ATTR_VALUE_CHAR = `[^ \\t\\n\\f\\r\"'\\`<>=]`;\nconst NAME_CHAR = `[^\\\\s\"'>=/]`;\n// These regexes represent the five parsing states that we care about in the\n// Template's HTML scanner. They match the *end* of the state they're named\n// after.\n// Depending on the match, we transition to a new state. If there's no match,\n// we stay in the same state.\n// Note that the regexes are stateful. We utilize lastIndex and sync it\n// across the multiple regexes used. In addition to the five regexes below\n// we also dynamically create a regex to find the matching end tags for raw\n// text elements.\n/**\n * End of text is: `<` followed by:\n *   (comment start) or (tag) or (dynamic tag binding)\n */\nconst textEndRegex = /<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g;\nconst COMMENT_START = 1;\nconst TAG_NAME = 2;\nconst DYNAMIC_TAG_NAME = 3;\nconst commentEndRegex = /-->/g;\n/**\n * Comments not started with <!--, like </{, can be ended by a single `>`\n */\nconst comment2EndRegex = />/g;\n/**\n * The tagEnd regex matches the end of the \"inside an opening\" tag syntax\n * position. It either matches a `>`, an attribute-like sequence, or the end\n * of the string after a space (attribute-name position ending).\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\t\\n\\f\\r\" are HTML space characters:\n * https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * So an attribute is:\n *  * The name: any character except a whitespace character, (\"), ('), \">\",\n *    \"=\", or \"/\". Note: this is different from the HTML spec which also excludes control characters.\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nconst tagEndRegex = new RegExp(`>|${SPACE_CHAR}(?:(${NAME_CHAR}+)(${SPACE_CHAR}*=${SPACE_CHAR}*(?:${ATTR_VALUE_CHAR}|(\"|')|))|$)`, 'g');\nconst ENTIRE_MATCH = 0;\nconst ATTRIBUTE_NAME = 1;\nconst SPACES_AND_EQUALS = 2;\nconst QUOTE_CHAR = 3;\nconst singleQuoteAttrEndRegex = /'/g;\nconst doubleQuoteAttrEndRegex = /\"/g;\n/**\n * Matches the raw text elements.\n *\n * Comments are not parsed within raw text elements, so we need to search their\n * text content for marker strings.\n */\nconst rawTextElement = /^(?:script|style|textarea|title)$/i;\n/** TemplateResult types */\nconst HTML_RESULT = 1;\nconst SVG_RESULT = 2;\nconst MATHML_RESULT = 3;\n// TemplatePart types\n// IMPORTANT: these must match the values in PartType\nconst ATTRIBUTE_PART = 1;\nconst CHILD_PART = 2;\nconst PROPERTY_PART = 3;\nconst BOOLEAN_ATTRIBUTE_PART = 4;\nconst EVENT_PART = 5;\nconst ELEMENT_PART = 6;\nconst COMMENT_PART = 7;\n/**\n * Generates a template literal tag function that returns a TemplateResult with\n * the given result type.\n */\nconst tag = type => (strings, ...values) => {\n  // Warn against templates octal escape sequences\n  // We do this here rather than in render so that the warning is closer to the\n  // template definition.\n  if (strings.some(s => s === undefined)) {\n    console.warn('Some template strings are undefined.\\n' + 'This is probably caused by illegal octal escape sequences.');\n  }\n  {\n    // Import static-html.js results in a circular dependency which g3 doesn't\n    // handle. Instead we know that static values must have the field\n    // `_$litStatic$`.\n    if (values.some(val => val?.['_$litStatic$'])) {\n      issueWarning('', `Static values 'literal' or 'unsafeStatic' cannot be used as values to non-static templates.\\n` + `Please use the static 'html' tag function. See https://lit.dev/docs/templates/expressions/#static-expressions`);\n    }\n  }\n  return {\n    // This property needs to remain unminified.\n    ['_$litType$']: type,\n    strings,\n    values\n  };\n};\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n *\n * ```ts\n * const header = (title: string) => html`<h1>${title}</h1>`;\n * ```\n *\n * The `html` tag returns a description of the DOM to render as a value. It is\n * lazy, meaning no work is done until the template is rendered. When rendering,\n * if a template comes from the same expression as a previously rendered result,\n * it's efficiently updated instead of replaced.\n */\nconst html = tag(HTML_RESULT);\n/**\n * Interprets a template literal as an SVG fragment that can efficiently render\n * to and update a container.\n *\n * ```ts\n * const rect = svg`<rect width=\"10\" height=\"10\"></rect>`;\n *\n * const myImage = html`\n *   <svg viewBox=\"0 0 10 10\" xmlns=\"http://www.w3.org/2000/svg\">\n *     ${rect}\n *   </svg>`;\n * ```\n *\n * The `svg` *tag function* should only be used for SVG fragments, or elements\n * that would be contained **inside** an `<svg>` HTML element. A common error is\n * placing an `<svg>` *element* in a template tagged with the `svg` tag\n * function. The `<svg>` element is an HTML element and should be used within a\n * template tagged with the {@linkcode html} tag function.\n *\n * In LitElement usage, it's invalid to return an SVG fragment from the\n * `render()` method, as the SVG fragment will be contained within the element's\n * shadow root and thus not be properly contained within an `<svg>` HTML\n * element.\n */\nconst svg = tag(SVG_RESULT);\n/**\n * Interprets a template literal as MathML fragment that can efficiently render\n * to and update a container.\n *\n * ```ts\n * const num = mathml`<mn>1</mn>`;\n *\n * const eq = html`\n *   <math>\n *     ${num}\n *   </math>`;\n * ```\n *\n * The `mathml` *tag function* should only be used for MathML fragments, or\n * elements that would be contained **inside** a `<math>` HTML element. A common\n * error is placing a `<math>` *element* in a template tagged with the `mathml`\n * tag function. The `<math>` element is an HTML element and should be used\n * within a template tagged with the {@linkcode html} tag function.\n *\n * In LitElement usage, it's invalid to return an MathML fragment from the\n * `render()` method, as the MathML fragment will be contained within the\n * element's shadow root and thus not be properly contained within a `<math>`\n * HTML element.\n */\nconst mathml = tag(MATHML_RESULT);\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nconst noChange = Symbol.for('lit-noChange');\n/**\n * A sentinel value that signals a ChildPart to fully clear its content.\n *\n * ```ts\n * const button = html`${\n *  user.isAdmin\n *    ? html`<button>DELETE</button>`\n *    : nothing\n * }`;\n * ```\n *\n * Prefer using `nothing` over other falsy values as it provides a consistent\n * behavior between various expression binding contexts.\n *\n * In child expressions, `undefined`, `null`, `''`, and `nothing` all behave the\n * same and render no nodes. In attribute expressions, `nothing` _removes_ the\n * attribute, while `undefined` and `null` will render an empty string. In\n * property expressions `nothing` becomes `undefined`.\n */\nconst nothing = Symbol.for('lit-nothing');\n/**\n * The cache of prepared templates, keyed by the tagged TemplateStringsArray\n * and _not_ accounting for the specific template tag used. This means that\n * template tags cannot be dynamic - they must statically be one of html, svg,\n * or attr. This restriction simplifies the cache lookup, which is on the hot\n * path for rendering.\n */\nconst templateCache = new WeakMap();\nconst walker = d.createTreeWalker(d, 129 /* NodeFilter.SHOW_{ELEMENT|COMMENT} */);\nlet sanitizerFactoryInternal = noopSanitizer;\nfunction trustFromTemplateString(tsa, stringFromTSA) {\n  // A security check to prevent spoofing of Lit template results.\n  // In the future, we may be able to replace this with Array.isTemplateObject,\n  // though we might need to make that check inside of the html and svg\n  // functions, because precompiled templates don't come in as\n  // TemplateStringArray objects.\n  if (!isArray(tsa) || !tsa.hasOwnProperty('raw')) {\n    let message = 'invalid template strings array';\n    {\n      message = `\n          Internal Error: expected template strings to be an array\n          with a 'raw' field. Faking a template strings array by\n          calling html or svg like an ordinary function is effectively\n          the same as calling unsafeHtml and can lead to major security\n          issues, e.g. opening your code up to XSS attacks.\n          If you're using the html or svg tagged template functions normally\n          and still seeing this error, please file a bug at\n          https://github.com/lit/lit/issues/new?template=bug_report.md\n          and include information about your build tooling, if any.\n        `.trim().replace(/\\n */g, '\\n');\n    }\n    throw new Error(message);\n  }\n  return policy !== undefined ? policy.createHTML(stringFromTSA) : stringFromTSA;\n}\n/**\n * Returns an HTML string for the given TemplateStringsArray and result type\n * (HTML or SVG), along with the case-sensitive bound attribute names in\n * template order. The HTML contains comment markers denoting the `ChildPart`s\n * and suffixes on bound attributes denoting the `AttributeParts`.\n *\n * @param strings template strings array\n * @param type HTML or SVG\n * @return Array containing `[html, attrNames]` (array returned for terseness,\n *     to avoid object fields since this code is shared with non-minified SSR\n *     code)\n */\nconst getTemplateHtml = (strings, type) => {\n  // Insert makers into the template HTML to represent the position of\n  // bindings. The following code scans the template strings to determine the\n  // syntactic position of the bindings. They can be in text position, where\n  // we insert an HTML comment, attribute value position, where we insert a\n  // sentinel string and re-write the attribute name, or inside a tag where\n  // we insert the sentinel string.\n  const l = strings.length - 1;\n  // Stores the case-sensitive bound attribute names in the order of their\n  // parts. ElementParts are also reflected in this array as undefined\n  // rather than a string, to disambiguate from attribute bindings.\n  const attrNames = [];\n  let html = type === SVG_RESULT ? '<svg>' : type === MATHML_RESULT ? '<math>' : '';\n  // When we're inside a raw text tag (not it's text content), the regex\n  // will still be tagRegex so we can find attributes, but will switch to\n  // this regex when the tag ends.\n  let rawTextEndRegex;\n  // The current parsing state, represented as a reference to one of the\n  // regexes\n  let regex = textEndRegex;\n  for (let i = 0; i < l; i++) {\n    const s = strings[i];\n    // The index of the end of the last attribute name. When this is\n    // positive at end of a string, it means we're in an attribute value\n    // position and need to rewrite the attribute name.\n    // We also use a special value of -2 to indicate that we encountered\n    // the end of a string in attribute name position.\n    let attrNameEndIndex = -1;\n    let attrName;\n    let lastIndex = 0;\n    let match;\n    // The conditions in this loop handle the current parse state, and the\n    // assignments to the `regex` variable are the state transitions.\n    while (lastIndex < s.length) {\n      // Make sure we start searching from where we previously left off\n      regex.lastIndex = lastIndex;\n      match = regex.exec(s);\n      if (match === null) {\n        break;\n      }\n      lastIndex = regex.lastIndex;\n      if (regex === textEndRegex) {\n        if (match[COMMENT_START] === '!--') {\n          regex = commentEndRegex;\n        } else if (match[COMMENT_START] !== undefined) {\n          // We started a weird comment, like </{\n          regex = comment2EndRegex;\n        } else if (match[TAG_NAME] !== undefined) {\n          if (rawTextElement.test(match[TAG_NAME])) {\n            // Record if we encounter a raw-text element. We'll switch to\n            // this regex at the end of the tag.\n            rawTextEndRegex = new RegExp(`</${match[TAG_NAME]}`, 'g');\n          }\n          regex = tagEndRegex;\n        } else if (match[DYNAMIC_TAG_NAME] !== undefined) {\n          {\n            throw new Error('Bindings in tag names are not supported. Please use static templates instead. ' + 'See https://lit.dev/docs/templates/expressions/#static-expressions');\n          }\n        }\n      } else if (regex === tagEndRegex) {\n        if (match[ENTIRE_MATCH] === '>') {\n          // End of a tag. If we had started a raw-text element, use that\n          // regex\n          regex = rawTextEndRegex ?? textEndRegex;\n          // We may be ending an unquoted attribute value, so make sure we\n          // clear any pending attrNameEndIndex\n          attrNameEndIndex = -1;\n        } else if (match[ATTRIBUTE_NAME] === undefined) {\n          // Attribute name position\n          attrNameEndIndex = -2;\n        } else {\n          attrNameEndIndex = regex.lastIndex - match[SPACES_AND_EQUALS].length;\n          attrName = match[ATTRIBUTE_NAME];\n          regex = match[QUOTE_CHAR] === undefined ? tagEndRegex : match[QUOTE_CHAR] === '\"' ? doubleQuoteAttrEndRegex : singleQuoteAttrEndRegex;\n        }\n      } else if (regex === doubleQuoteAttrEndRegex || regex === singleQuoteAttrEndRegex) {\n        regex = tagEndRegex;\n      } else if (regex === commentEndRegex || regex === comment2EndRegex) {\n        regex = textEndRegex;\n      } else {\n        // Not one of the five state regexes, so it must be the dynamically\n        // created raw text regex and we're at the close of that element.\n        regex = tagEndRegex;\n        rawTextEndRegex = undefined;\n      }\n    }\n    {\n      // If we have a attrNameEndIndex, which indicates that we should\n      // rewrite the attribute name, assert that we're in a valid attribute\n      // position - either in a tag, or a quoted attribute value.\n      console.assert(attrNameEndIndex === -1 || regex === tagEndRegex || regex === singleQuoteAttrEndRegex || regex === doubleQuoteAttrEndRegex, 'unexpected parse state B');\n    }\n    // We have four cases:\n    //  1. We're in text position, and not in a raw text element\n    //     (regex === textEndRegex): insert a comment marker.\n    //  2. We have a non-negative attrNameEndIndex which means we need to\n    //     rewrite the attribute name to add a bound attribute suffix.\n    //  3. We're at the non-first binding in a multi-binding attribute, use a\n    //     plain marker.\n    //  4. We're somewhere else inside the tag. If we're in attribute name\n    //     position (attrNameEndIndex === -2), add a sequential suffix to\n    //     generate a unique attribute name.\n    // Detect a binding next to self-closing tag end and insert a space to\n    // separate the marker from the tag end:\n    const end = regex === tagEndRegex && strings[i + 1].startsWith('/>') ? ' ' : '';\n    html += regex === textEndRegex ? s + nodeMarker : attrNameEndIndex >= 0 ? (attrNames.push(attrName), s.slice(0, attrNameEndIndex) + boundAttributeSuffix + s.slice(attrNameEndIndex)) + marker + end : s + marker + (attrNameEndIndex === -2 ? i : end);\n  }\n  const htmlResult = html + (strings[l] || '<?>') + (type === SVG_RESULT ? '</svg>' : type === MATHML_RESULT ? '</math>' : '');\n  // Returned as an array for terseness\n  return [trustFromTemplateString(strings, htmlResult), attrNames];\n};\nclass Template {\n  constructor(\n  // This property needs to remain unminified.\n  {\n    strings,\n    ['_$litType$']: type\n  }, options) {\n    this.parts = [];\n    let node;\n    let nodeIndex = 0;\n    let attrNameIndex = 0;\n    const partCount = strings.length - 1;\n    const parts = this.parts;\n    // Create template element\n    const [html, attrNames] = getTemplateHtml(strings, type);\n    this.el = Template.createElement(html, options);\n    walker.currentNode = this.el.content;\n    // Re-parent SVG or MathML nodes into template root\n    if (type === SVG_RESULT || type === MATHML_RESULT) {\n      const wrapper = this.el.content.firstChild;\n      wrapper.replaceWith(...wrapper.childNodes);\n    }\n    // Walk the template to find binding markers and create TemplateParts\n    while ((node = walker.nextNode()) !== null && parts.length < partCount) {\n      if (node.nodeType === 1) {\n        {\n          const tag = node.localName;\n          // Warn if `textarea` includes an expression and throw if `template`\n          // does since these are not supported. We do this by checking\n          // innerHTML for anything that looks like a marker. This catches\n          // cases like bindings in textarea there markers turn into text nodes.\n          if (/^(?:textarea|template)$/i.test(tag) && node.innerHTML.includes(marker)) {\n            const m = `Expressions are not supported inside \\`${tag}\\` ` + `elements. See https://lit.dev/msg/expression-in-${tag} for more ` + `information.`;\n            if (tag === 'template') {\n              throw new Error(m);\n            } else issueWarning('', m);\n          }\n        }\n        // TODO (justinfagnani): for attempted dynamic tag names, we don't\n        // increment the bindingIndex, and it'll be off by 1 in the element\n        // and off by two after it.\n        if (node.hasAttributes()) {\n          for (const name of node.getAttributeNames()) {\n            if (name.endsWith(boundAttributeSuffix)) {\n              const realName = attrNames[attrNameIndex++];\n              const value = node.getAttribute(name);\n              const statics = value.split(marker);\n              const m = /([.?@])?(.*)/.exec(realName);\n              parts.push({\n                type: ATTRIBUTE_PART,\n                index: nodeIndex,\n                name: m[2],\n                strings: statics,\n                ctor: m[1] === '.' ? PropertyPart : m[1] === '?' ? BooleanAttributePart : m[1] === '@' ? EventPart : AttributePart\n              });\n              node.removeAttribute(name);\n            } else if (name.startsWith(marker)) {\n              parts.push({\n                type: ELEMENT_PART,\n                index: nodeIndex\n              });\n              node.removeAttribute(name);\n            }\n          }\n        }\n        // TODO (justinfagnani): benchmark the regex against testing for each\n        // of the 3 raw text element names.\n        if (rawTextElement.test(node.tagName)) {\n          // For raw text elements we need to split the text content on\n          // markers, create a Text node for each segment, and create\n          // a TemplatePart for each marker.\n          const strings = node.textContent.split(marker);\n          const lastIndex = strings.length - 1;\n          if (lastIndex > 0) {\n            node.textContent = trustedTypes ? trustedTypes.emptyScript : '';\n            // Generate a new text node for each literal section\n            // These nodes are also used as the markers for child parts\n            for (let i = 0; i < lastIndex; i++) {\n              node.append(strings[i], createMarker());\n              // Walk past the marker node we just added\n              walker.nextNode();\n              parts.push({\n                type: CHILD_PART,\n                index: ++nodeIndex\n              });\n            }\n            // Note because this marker is added after the walker's current\n            // node, it will be walked to in the outer loop (and ignored), so\n            // we don't need to adjust nodeIndex here\n            node.append(strings[lastIndex], createMarker());\n          }\n        }\n      } else if (node.nodeType === 8) {\n        const data = node.data;\n        if (data === markerMatch) {\n          parts.push({\n            type: CHILD_PART,\n            index: nodeIndex\n          });\n        } else {\n          let i = -1;\n          while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n            // Comment node has a binding marker inside, make an inactive part\n            // The binding won't work, but subsequent bindings will\n            parts.push({\n              type: COMMENT_PART,\n              index: nodeIndex\n            });\n            // Move to the end of the match\n            i += marker.length - 1;\n          }\n        }\n      }\n      nodeIndex++;\n    }\n    {\n      // If there was a duplicate attribute on a tag, then when the tag is\n      // parsed into an element the attribute gets de-duplicated. We can detect\n      // this mismatch if we haven't precisely consumed every attribute name\n      // when preparing the template. This works because `attrNames` is built\n      // from the template string and `attrNameIndex` comes from processing the\n      // resulting DOM.\n      if (attrNames.length !== attrNameIndex) {\n        throw new Error(`Detected duplicate attribute bindings. This occurs if your template ` + `has duplicate attributes on an element tag. For example ` + `\"<input ?disabled=\\${true} ?disabled=\\${false}>\" contains a ` + `duplicate \"disabled\" attribute. The error was detected in ` + `the following template: \\n` + '`' + strings.join('${...}') + '`');\n      }\n    }\n    // We could set walker.currentNode to another node here to prevent a memory\n    // leak, but every time we prepare a template, we immediately render it\n    // and re-use the walker in new TemplateInstance._clone().\n    debugLogEvent && debugLogEvent({\n      kind: 'template prep',\n      template: this,\n      clonableTemplate: this.el,\n      parts: this.parts,\n      strings\n    });\n  }\n  // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n  /** @nocollapse */\n  static createElement(html, _options) {\n    const el = d.createElement('template');\n    el.innerHTML = html;\n    return el;\n  }\n}\nfunction resolveDirective(part, value, parent = part, attributeIndex) {\n  // Bail early if the value is explicitly noChange. Note, this means any\n  // nested directive is still attached and is not run.\n  if (value === noChange) {\n    return value;\n  }\n  let currentDirective = attributeIndex !== undefined ? parent.__directives?.[attributeIndex] : parent.__directive;\n  const nextDirectiveConstructor = isPrimitive(value) ? undefined :\n  // This property needs to remain unminified.\n  value['_$litDirective$'];\n  if (currentDirective?.constructor !== nextDirectiveConstructor) {\n    // This property needs to remain unminified.\n    currentDirective?.['_$notifyDirectiveConnectionChanged']?.(false);\n    if (nextDirectiveConstructor === undefined) {\n      currentDirective = undefined;\n    } else {\n      currentDirective = new nextDirectiveConstructor(part);\n      currentDirective._$initialize(part, parent, attributeIndex);\n    }\n    if (attributeIndex !== undefined) {\n      (parent.__directives ??= [])[attributeIndex] = currentDirective;\n    } else {\n      parent.__directive = currentDirective;\n    }\n  }\n  if (currentDirective !== undefined) {\n    value = resolveDirective(part, currentDirective._$resolve(part, value.values), currentDirective, attributeIndex);\n  }\n  return value;\n}\n/**\n * An updateable instance of a Template. Holds references to the Parts used to\n * update the template instance.\n */\nclass TemplateInstance {\n  constructor(template, parent) {\n    this._$parts = [];\n    /** @internal */\n    this._$disconnectableChildren = undefined;\n    this._$template = template;\n    this._$parent = parent;\n  }\n  // Called by ChildPart parentNode getter\n  get parentNode() {\n    return this._$parent.parentNode;\n  }\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n  // This method is separate from the constructor because we need to return a\n  // DocumentFragment and we don't want to hold onto it with an instance field.\n  _clone(options) {\n    const {\n      el: {\n        content\n      },\n      parts: parts\n    } = this._$template;\n    const fragment = (options?.creationScope ?? d).importNode(content, true);\n    walker.currentNode = fragment;\n    let node = walker.nextNode();\n    let nodeIndex = 0;\n    let partIndex = 0;\n    let templatePart = parts[0];\n    while (templatePart !== undefined) {\n      if (nodeIndex === templatePart.index) {\n        let part;\n        if (templatePart.type === CHILD_PART) {\n          part = new ChildPart(node, node.nextSibling, this, options);\n        } else if (templatePart.type === ATTRIBUTE_PART) {\n          part = new templatePart.ctor(node, templatePart.name, templatePart.strings, this, options);\n        } else if (templatePart.type === ELEMENT_PART) {\n          part = new ElementPart(node, this, options);\n        }\n        this._$parts.push(part);\n        templatePart = parts[++partIndex];\n      }\n      if (nodeIndex !== templatePart?.index) {\n        node = walker.nextNode();\n        nodeIndex++;\n      }\n    }\n    // We need to set the currentNode away from the cloned tree so that we\n    // don't hold onto the tree even if the tree is detached and should be\n    // freed.\n    walker.currentNode = d;\n    return fragment;\n  }\n  _update(values) {\n    let i = 0;\n    for (const part of this._$parts) {\n      if (part !== undefined) {\n        debugLogEvent && debugLogEvent({\n          kind: 'set part',\n          part,\n          value: values[i],\n          valueIndex: i,\n          values,\n          templateInstance: this\n        });\n        if (part.strings !== undefined) {\n          part._$setValue(values, part, i);\n          // The number of values the part consumes is part.strings.length - 1\n          // since values are in between template spans. We increment i by 1\n          // later in the loop, so increment it by part.strings.length - 2 here\n          i += part.strings.length - 2;\n        } else {\n          part._$setValue(values[i]);\n        }\n      }\n      i++;\n    }\n  }\n}\nclass ChildPart {\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    // ChildParts that are not at the root should always be created with a\n    // parent; only RootChildNode's won't, so they return the local isConnected\n    // state\n    return this._$parent?._$isConnected ?? this.__isConnected;\n  }\n  constructor(startNode, endNode, parent, options) {\n    this.type = CHILD_PART;\n    this._$committedValue = nothing;\n    // The following fields will be patched onto ChildParts when required by\n    // AsyncDirective\n    /** @internal */\n    this._$disconnectableChildren = undefined;\n    this._$startNode = startNode;\n    this._$endNode = endNode;\n    this._$parent = parent;\n    this.options = options;\n    // Note __isConnected is only ever accessed on RootParts (i.e. when there is\n    // no _$parent); the value on a non-root-part is \"don't care\", but checking\n    // for parent would be more code\n    this.__isConnected = options?.isConnected ?? true;\n    {\n      // Explicitly initialize for consistent class shape.\n      this._textSanitizer = undefined;\n    }\n  }\n  /**\n   * The parent node into which the part renders its content.\n   *\n   * A ChildPart's content consists of a range of adjacent child nodes of\n   * `.parentNode`, possibly bordered by 'marker nodes' (`.startNode` and\n   * `.endNode`).\n   *\n   * - If both `.startNode` and `.endNode` are non-null, then the part's content\n   * consists of all siblings between `.startNode` and `.endNode`, exclusively.\n   *\n   * - If `.startNode` is non-null but `.endNode` is null, then the part's\n   * content consists of all siblings following `.startNode`, up to and\n   * including the last child of `.parentNode`. If `.endNode` is non-null, then\n   * `.startNode` will always be non-null.\n   *\n   * - If both `.endNode` and `.startNode` are null, then the part's content\n   * consists of all child nodes of `.parentNode`.\n   */\n  get parentNode() {\n    let parentNode = wrap(this._$startNode).parentNode;\n    const parent = this._$parent;\n    if (parent !== undefined && parentNode?.nodeType === 11 /* Node.DOCUMENT_FRAGMENT */) {\n      // If the parentNode is a DocumentFragment, it may be because the DOM is\n      // still in the cloned fragment during initial render; if so, get the real\n      // parentNode the part will be committed into by asking the parent.\n      parentNode = parent.parentNode;\n    }\n    return parentNode;\n  }\n  /**\n   * The part's leading marker node, if any. See `.parentNode` for more\n   * information.\n   */\n  get startNode() {\n    return this._$startNode;\n  }\n  /**\n   * The part's trailing marker node, if any. See `.parentNode` for more\n   * information.\n   */\n  get endNode() {\n    return this._$endNode;\n  }\n  _$setValue(value, directiveParent = this) {\n    if (this.parentNode === null) {\n      throw new Error(`This \\`ChildPart\\` has no \\`parentNode\\` and therefore cannot accept a value. This likely means the element containing the part was manipulated in an unsupported way outside of Lit's control such that the part's marker nodes were ejected from DOM. For example, setting the element's \\`innerHTML\\` or \\`textContent\\` can do this.`);\n    }\n    value = resolveDirective(this, value, directiveParent);\n    if (isPrimitive(value)) {\n      // Non-rendering child values. It's important that these do not render\n      // empty text nodes to avoid issues with preventing default <slot>\n      // fallback content.\n      if (value === nothing || value == null || value === '') {\n        if (this._$committedValue !== nothing) {\n          debugLogEvent && debugLogEvent({\n            kind: 'commit nothing to child',\n            start: this._$startNode,\n            end: this._$endNode,\n            parent: this._$parent,\n            options: this.options\n          });\n          this._$clear();\n        }\n        this._$committedValue = nothing;\n      } else if (value !== this._$committedValue && value !== noChange) {\n        this._commitText(value);\n      }\n      // This property needs to remain unminified.\n    } else if (value['_$litType$'] !== undefined) {\n      this._commitTemplateResult(value);\n    } else if (value.nodeType !== undefined) {\n      if (this.options?.host === value) {\n        this._commitText(`[probable mistake: rendered a template's host in itself ` + `(commonly caused by writing \\${this} in a template]`);\n        console.warn(`Attempted to render the template host`, value, `inside itself. This is almost always a mistake, and in dev mode `, `we render some warning text. In production however, we'll `, `render it, which will usually result in an error, and sometimes `, `in the element disappearing from the DOM.`);\n        return;\n      }\n      this._commitNode(value);\n    } else if (isIterable(value)) {\n      this._commitIterable(value);\n    } else {\n      // Fallback, will render the string representation\n      this._commitText(value);\n    }\n  }\n  _insert(node) {\n    return wrap(wrap(this._$startNode).parentNode).insertBefore(node, this._$endNode);\n  }\n  _commitNode(value) {\n    if (this._$committedValue !== value) {\n      this._$clear();\n      if (sanitizerFactoryInternal !== noopSanitizer) {\n        const parentNodeName = this._$startNode.parentNode?.nodeName;\n        if (parentNodeName === 'STYLE' || parentNodeName === 'SCRIPT') {\n          let message = 'Forbidden';\n          {\n            if (parentNodeName === 'STYLE') {\n              message = `Lit does not support binding inside style nodes. ` + `This is a security risk, as style injection attacks can ` + `exfiltrate data and spoof UIs. ` + `Consider instead using css\\`...\\` literals ` + `to compose styles, and do dynamic styling with ` + `css custom properties, ::parts, <slot>s, ` + `and by mutating the DOM rather than stylesheets.`;\n            } else {\n              message = `Lit does not support binding inside script nodes. ` + `This is a security risk, as it could allow arbitrary ` + `code execution.`;\n            }\n          }\n          throw new Error(message);\n        }\n      }\n      debugLogEvent && debugLogEvent({\n        kind: 'commit node',\n        start: this._$startNode,\n        parent: this._$parent,\n        value: value,\n        options: this.options\n      });\n      this._$committedValue = this._insert(value);\n    }\n  }\n  _commitText(value) {\n    // If the committed value is a primitive it means we called _commitText on\n    // the previous render, and we know that this._$startNode.nextSibling is a\n    // Text node. We can now just replace the text content (.data) of the node.\n    if (this._$committedValue !== nothing && isPrimitive(this._$committedValue)) {\n      const node = wrap(this._$startNode).nextSibling;\n      {\n        if (this._textSanitizer === undefined) {\n          this._textSanitizer = createSanitizer(node, 'data', 'property');\n        }\n        value = this._textSanitizer(value);\n      }\n      debugLogEvent && debugLogEvent({\n        kind: 'commit text',\n        node,\n        value,\n        options: this.options\n      });\n      node.data = value;\n    } else {\n      {\n        const textNode = d.createTextNode('');\n        this._commitNode(textNode);\n        // When setting text content, for security purposes it matters a lot\n        // what the parent is. For example, <style> and <script> need to be\n        // handled with care, while <span> does not. So first we need to put a\n        // text node into the document, then we can sanitize its content.\n        if (this._textSanitizer === undefined) {\n          this._textSanitizer = createSanitizer(textNode, 'data', 'property');\n        }\n        value = this._textSanitizer(value);\n        debugLogEvent && debugLogEvent({\n          kind: 'commit text',\n          node: textNode,\n          value,\n          options: this.options\n        });\n        textNode.data = value;\n      }\n    }\n    this._$committedValue = value;\n  }\n  _commitTemplateResult(result) {\n    // This property needs to remain unminified.\n    const {\n      values,\n      ['_$litType$']: type\n    } = result;\n    // If $litType$ is a number, result is a plain TemplateResult and we get\n    // the template from the template cache. If not, result is a\n    // CompiledTemplateResult and _$litType$ is a CompiledTemplate and we need\n    // to create the <template> element the first time we see it.\n    const template = typeof type === 'number' ? this._$getTemplate(result) : (type.el === undefined && (type.el = Template.createElement(trustFromTemplateString(type.h, type.h[0]), this.options)), type);\n    if (this._$committedValue?._$template === template) {\n      debugLogEvent && debugLogEvent({\n        kind: 'template updating',\n        template,\n        instance: this._$committedValue,\n        parts: this._$committedValue._$parts,\n        options: this.options,\n        values\n      });\n      this._$committedValue._update(values);\n    } else {\n      const instance = new TemplateInstance(template, this);\n      const fragment = instance._clone(this.options);\n      debugLogEvent && debugLogEvent({\n        kind: 'template instantiated',\n        template,\n        instance,\n        parts: instance._$parts,\n        options: this.options,\n        fragment,\n        values\n      });\n      instance._update(values);\n      debugLogEvent && debugLogEvent({\n        kind: 'template instantiated and updated',\n        template,\n        instance,\n        parts: instance._$parts,\n        options: this.options,\n        fragment,\n        values\n      });\n      this._commitNode(fragment);\n      this._$committedValue = instance;\n    }\n  }\n  // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n  /** @internal */\n  _$getTemplate(result) {\n    let template = templateCache.get(result.strings);\n    if (template === undefined) {\n      templateCache.set(result.strings, template = new Template(result));\n    }\n    return template;\n  }\n  _commitIterable(value) {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n    // If value is an array, then the previous render was of an\n    // iterable and value will contain the ChildParts from the previous\n    // render. If value is not an array, clear this part and make a new\n    // array for ChildParts.\n    if (!isArray(this._$committedValue)) {\n      this._$committedValue = [];\n      this._$clear();\n    }\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this._$committedValue;\n    let partIndex = 0;\n    let itemPart;\n    for (const item of value) {\n      if (partIndex === itemParts.length) {\n        // If no existing part, create a new one\n        // TODO (justinfagnani): test perf impact of always creating two parts\n        // instead of sharing parts between nodes\n        // https://github.com/lit/lit/issues/1266\n        itemParts.push(itemPart = new ChildPart(this._insert(createMarker()), this._insert(createMarker()), this, this.options));\n      } else {\n        // Reuse an existing part\n        itemPart = itemParts[partIndex];\n      }\n      itemPart._$setValue(item);\n      partIndex++;\n    }\n    if (partIndex < itemParts.length) {\n      // itemParts always have end nodes\n      this._$clear(itemPart && wrap(itemPart._$endNode).nextSibling, partIndex);\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n    }\n  }\n  /**\n   * Removes the nodes contained within this Part from the DOM.\n   *\n   * @param start Start node to clear from, for clearing a subset of the part's\n   *     DOM (used when truncating iterables)\n   * @param from  When `start` is specified, the index within the iterable from\n   *     which ChildParts are being removed, used for disconnecting directives\n   *     in those Parts.\n   *\n   * @internal\n   */\n  _$clear(start = wrap(this._$startNode).nextSibling, from) {\n    this._$notifyConnectionChanged?.(false, true, from);\n    while (start !== this._$endNode) {\n      // The non-null assertion is safe because if _$startNode.nextSibling is\n      // null, then _$endNode is also null, and we would not have entered this\n      // loop.\n      const n = wrap(start).nextSibling;\n      wrap(start).remove();\n      start = n;\n    }\n  }\n  /**\n   * Implementation of RootPart's `isConnected`. Note that this method\n   * should only be called on `RootPart`s (the `ChildPart` returned from a\n   * top-level `render()` call). It has no effect on non-root ChildParts.\n   * @param isConnected Whether to set\n   * @internal\n   */\n  setConnected(isConnected) {\n    if (this._$parent === undefined) {\n      this.__isConnected = isConnected;\n      this._$notifyConnectionChanged?.(isConnected);\n    } else {\n      throw new Error('part.setConnected() may only be called on a ' + 'RootPart returned from render().');\n    }\n  }\n}\nclass AttributePart {\n  get tagName() {\n    return this.element.tagName;\n  }\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n  constructor(element, name, strings, parent, options) {\n    this.type = ATTRIBUTE_PART;\n    /** @internal */\n    this._$committedValue = nothing;\n    /** @internal */\n    this._$disconnectableChildren = undefined;\n    this.element = element;\n    this.name = name;\n    this._$parent = parent;\n    this.options = options;\n    if (strings.length > 2 || strings[0] !== '' || strings[1] !== '') {\n      this._$committedValue = new Array(strings.length - 1).fill(new String());\n      this.strings = strings;\n    } else {\n      this._$committedValue = nothing;\n    }\n    {\n      this._sanitizer = undefined;\n    }\n  }\n  /**\n   * Sets the value of this part by resolving the value from possibly multiple\n   * values and static strings and committing it to the DOM.\n   * If this part is single-valued, `this._strings` will be undefined, and the\n   * method will be called with a single value argument. If this part is\n   * multi-value, `this._strings` will be defined, and the method is called\n   * with the value array of the part's owning TemplateInstance, and an offset\n   * into the value array from which the values should be read.\n   * This method is overloaded this way to eliminate short-lived array slices\n   * of the template instance values, and allow a fast-path for single-valued\n   * parts.\n   *\n   * @param value The part value, or an array of values for multi-valued parts\n   * @param valueIndex the index to start reading values from. `undefined` for\n   *   single-valued parts\n   * @param noCommit causes the part to not commit its value to the DOM. Used\n   *   in hydration to prime attribute parts with their first-rendered value,\n   *   but not set the attribute, and in SSR to no-op the DOM operation and\n   *   capture the value for serialization.\n   *\n   * @internal\n   */\n  _$setValue(value, directiveParent = this, valueIndex, noCommit) {\n    const strings = this.strings;\n    // Whether any of the values has changed, for dirty-checking\n    let change = false;\n    if (strings === undefined) {\n      // Single-value binding case\n      value = resolveDirective(this, value, directiveParent, 0);\n      change = !isPrimitive(value) || value !== this._$committedValue && value !== noChange;\n      if (change) {\n        this._$committedValue = value;\n      }\n    } else {\n      // Interpolation case\n      const values = value;\n      value = strings[0];\n      let i, v;\n      for (i = 0; i < strings.length - 1; i++) {\n        v = resolveDirective(this, values[valueIndex + i], directiveParent, i);\n        if (v === noChange) {\n          // If the user-provided value is `noChange`, use the previous value\n          v = this._$committedValue[i];\n        }\n        change ||= !isPrimitive(v) || v !== this._$committedValue[i];\n        if (v === nothing) {\n          value = nothing;\n        } else if (value !== nothing) {\n          value += (v ?? '') + strings[i + 1];\n        }\n        // We always record each value, even if one is `nothing`, for future\n        // change detection.\n        this._$committedValue[i] = v;\n      }\n    }\n    if (change && !noCommit) {\n      this._commitValue(value);\n    }\n  }\n  /** @internal */\n  _commitValue(value) {\n    if (value === nothing) {\n      wrap(this.element).removeAttribute(this.name);\n    } else {\n      {\n        if (this._sanitizer === undefined) {\n          this._sanitizer = sanitizerFactoryInternal(this.element, this.name, 'attribute');\n        }\n        value = this._sanitizer(value ?? '');\n      }\n      debugLogEvent && debugLogEvent({\n        kind: 'commit attribute',\n        element: this.element,\n        name: this.name,\n        value,\n        options: this.options\n      });\n      wrap(this.element).setAttribute(this.name, value ?? '');\n    }\n  }\n}\nclass PropertyPart extends AttributePart {\n  constructor() {\n    super(...arguments);\n    this.type = PROPERTY_PART;\n  }\n  /** @internal */\n  _commitValue(value) {\n    {\n      if (this._sanitizer === undefined) {\n        this._sanitizer = sanitizerFactoryInternal(this.element, this.name, 'property');\n      }\n      value = this._sanitizer(value);\n    }\n    debugLogEvent && debugLogEvent({\n      kind: 'commit property',\n      element: this.element,\n      name: this.name,\n      value,\n      options: this.options\n    });\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    this.element[this.name] = value === nothing ? undefined : value;\n  }\n}\nclass BooleanAttributePart extends AttributePart {\n  constructor() {\n    super(...arguments);\n    this.type = BOOLEAN_ATTRIBUTE_PART;\n  }\n  /** @internal */\n  _commitValue(value) {\n    debugLogEvent && debugLogEvent({\n      kind: 'commit boolean attribute',\n      element: this.element,\n      name: this.name,\n      value: !!(value && value !== nothing),\n      options: this.options\n    });\n    wrap(this.element).toggleAttribute(this.name, !!value && value !== nothing);\n  }\n}\nclass EventPart extends AttributePart {\n  constructor(element, name, strings, parent, options) {\n    super(element, name, strings, parent, options);\n    this.type = EVENT_PART;\n    if (this.strings !== undefined) {\n      throw new Error(`A \\`<${element.localName}>\\` has a \\`@${name}=...\\` listener with ` + 'invalid content. Event listeners in templates must have exactly ' + 'one expression and no surrounding text.');\n    }\n  }\n  // EventPart does not use the base _$setValue/_resolveValue implementation\n  // since the dirty checking is more complex\n  /** @internal */\n  _$setValue(newListener, directiveParent = this) {\n    newListener = resolveDirective(this, newListener, directiveParent, 0) ?? nothing;\n    if (newListener === noChange) {\n      return;\n    }\n    const oldListener = this._$committedValue;\n    // If the new value is nothing or any options change we have to remove the\n    // part as a listener.\n    const shouldRemoveListener = newListener === nothing && oldListener !== nothing || newListener.capture !== oldListener.capture || newListener.once !== oldListener.once || newListener.passive !== oldListener.passive;\n    // If the new value is not nothing and we removed the listener, we have\n    // to add the part as a listener.\n    const shouldAddListener = newListener !== nothing && (oldListener === nothing || shouldRemoveListener);\n    debugLogEvent && debugLogEvent({\n      kind: 'commit event listener',\n      element: this.element,\n      name: this.name,\n      value: newListener,\n      options: this.options,\n      removeListener: shouldRemoveListener,\n      addListener: shouldAddListener,\n      oldListener\n    });\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(this.name, this, oldListener);\n    }\n    if (shouldAddListener) {\n      this.element.addEventListener(this.name, this, newListener);\n    }\n    this._$committedValue = newListener;\n  }\n  handleEvent(event) {\n    if (typeof this._$committedValue === 'function') {\n      this._$committedValue.call(this.options?.host ?? this.element, event);\n    } else {\n      this._$committedValue.handleEvent(event);\n    }\n  }\n}\nclass ElementPart {\n  constructor(element, parent, options) {\n    this.element = element;\n    this.type = ELEMENT_PART;\n    /** @internal */\n    this._$disconnectableChildren = undefined;\n    this._$parent = parent;\n    this.options = options;\n  }\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n  _$setValue(value) {\n    debugLogEvent && debugLogEvent({\n      kind: 'commit to element binding',\n      element: this.element,\n      value,\n      options: this.options\n    });\n    resolveDirective(this, value);\n  }\n}\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports mangled in the\n * client side code, we export a _$LH object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-element, which re-exports all of lit-html.\n *\n * @private\n */\nconst _$LH = {\n  // Used in lit-ssr\n  _boundAttributeSuffix: boundAttributeSuffix,\n  _marker: marker,\n  _markerMatch: markerMatch,\n  _HTML_RESULT: HTML_RESULT,\n  _getTemplateHtml: getTemplateHtml,\n  // Used in tests and private-ssr-support\n  _TemplateInstance: TemplateInstance,\n  _isIterable: isIterable,\n  _resolveDirective: resolveDirective,\n  _ChildPart: ChildPart,\n  _AttributePart: AttributePart,\n  _BooleanAttributePart: BooleanAttributePart,\n  _EventPart: EventPart,\n  _PropertyPart: PropertyPart,\n  _ElementPart: ElementPart\n};\n// Apply polyfills if available\nconst polyfillSupport = global.litHtmlPolyfillSupportDevMode;\npolyfillSupport?.(Template, ChildPart);\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n(global.litHtmlVersions ??= []).push('3.3.1');\nif (global.litHtmlVersions.length > 1) {\n  queueMicrotask(() => {\n    issueWarning('multiple-versions', `Multiple versions of Lit loaded. ` + `Loading multiple versions is not recommended.`);\n  });\n}\n/**\n * Renders a value, usually a lit-html TemplateResult, to the container.\n *\n * This example renders the text \"Hello, Zoe!\" inside a paragraph tag, appending\n * it to the container `document.body`.\n *\n * ```js\n * import {html, render} from 'lit';\n *\n * const name = \"Zoe\";\n * render(html`<p>Hello, ${name}!</p>`, document.body);\n * ```\n *\n * @param value Any [renderable\n *   value](https://lit.dev/docs/templates/expressions/#child-expressions),\n *   typically a {@linkcode TemplateResult} created by evaluating a template tag\n *   like {@linkcode html} or {@linkcode svg}.\n * @param container A DOM container to render to. The first render will append\n *   the rendered value to the container, and subsequent renders will\n *   efficiently update the rendered value if the same result type was\n *   previously rendered there.\n * @param options See {@linkcode RenderOptions} for options documentation.\n * @see\n * {@link https://lit.dev/docs/libraries/standalone-templates/#rendering-lit-html-templates| Rendering Lit HTML Templates}\n */\nconst render = (value, container, options) => {\n  if (container == null) {\n    // Give a clearer error message than\n    //     Uncaught TypeError: Cannot read properties of null (reading\n    //     '_$litPart$')\n    // which reads like an internal Lit error.\n    throw new TypeError(`The container to render into may not be ${container}`);\n  }\n  const renderId = debugLogRenderId++;\n  const partOwnerNode = options?.renderBefore ?? container;\n  // This property needs to remain unminified.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let part = partOwnerNode['_$litPart$'];\n  debugLogEvent && debugLogEvent({\n    kind: 'begin render',\n    id: renderId,\n    value,\n    container,\n    options,\n    part\n  });\n  if (part === undefined) {\n    const endNode = options?.renderBefore ?? null;\n    // This property needs to remain unminified.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    partOwnerNode['_$litPart$'] = part = new ChildPart(container.insertBefore(createMarker(), endNode), endNode, undefined, options ?? {});\n  }\n  part._$setValue(value);\n  debugLogEvent && debugLogEvent({\n    kind: 'end render',\n    id: renderId,\n    value,\n    container,\n    options,\n    part\n  });\n  return part;\n};\n{\n  render.setSanitizer = setSanitizer;\n  render.createSanitizer = createSanitizer;\n  {\n    render._testOnlyClearSanitizerFactoryDoNotCallOrElse = _testOnlyClearSanitizerFactoryDoNotCallOrElse;\n  }\n}\nexport { _$LH, html, mathml, noChange, nothing, render, svg };\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n/**\n * The main LitElement module, which defines the {@linkcode LitElement} base\n * class and related APIs.\n *\n * LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n * Import {@linkcode LitElement} and {@linkcode html} from this module to\n * create a component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends {@linkcode ReactiveElement} and adds lit-html\n * templating. The `ReactiveElement` class is provided for users that want to\n * build their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\nimport { ReactiveElement } from '@lit/reactive-element';\nimport { render, noChange } from 'lit-html';\nexport * from '@lit/reactive-element';\nexport * from 'lit-html';\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\n/*@__INLINE__*/\nconst JSCompiler_renameProperty = (prop, _obj) => prop;\nconst DEV_MODE = true;\n// Allows minifiers to rename references to globalThis\nconst global = globalThis;\nlet issueWarning;\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  global.litIssuedWarnings ??= new Set();\n  /**\n   * Issue a warning if we haven't already, based either on `code` or `warning`.\n   * Warnings are disabled automatically only by `warning`; disabling via `code`\n   * can be done by users.\n   */\n  issueWarning = (code, warning) => {\n    warning += ` See https://lit.dev/msg/${code} for more information.`;\n    if (!global.litIssuedWarnings.has(warning) && !global.litIssuedWarnings.has(code)) {\n      console.warn(warning);\n      global.litIssuedWarnings.add(warning);\n    }\n  };\n}\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the {@linkcode LitElement.properties properties} property or the\n * {@linkcode property} decorator.\n */\nexport class LitElement extends ReactiveElement {\n  constructor() {\n    super(...arguments);\n    /**\n     * @category rendering\n     */\n    this.renderOptions = {\n      host: this\n    };\n    this.__childPart = undefined;\n  }\n  /**\n   * @category rendering\n   */\n  createRenderRoot() {\n    const renderRoot = super.createRenderRoot();\n    // When adoptedStyleSheets are shimmed, they are inserted into the\n    // shadowRoot by createRenderRoot. Adjust the renderBefore node so that\n    // any styles in Lit content render before adoptedStyleSheets. This is\n    // important so that adoptedStyleSheets have precedence over styles in\n    // the shadowRoot.\n    this.renderOptions.renderBefore ??= renderRoot.firstChild;\n    return renderRoot;\n  }\n  /**\n   * Updates the element. This method reflects property values to attributes\n   * and calls `render` to render DOM via lit-html. Setting properties inside\n   * this method will *not* trigger another update.\n   * @param changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  update(changedProperties) {\n    // Setting properties in `render` should not trigger an update. Since\n    // updates are allowed after super.update, it's important to call `render`\n    // before that.\n    const value = this.render();\n    if (!this.hasUpdated) {\n      this.renderOptions.isConnected = this.isConnected;\n    }\n    super.update(changedProperties);\n    this.__childPart = render(value, this.renderRoot, this.renderOptions);\n  }\n  /**\n   * Invoked when the component is added to the document's DOM.\n   *\n   * In `connectedCallback()` you should setup tasks that should only occur when\n   * the element is connected to the document. The most common of these is\n   * adding event listeners to nodes external to the element, like a keydown\n   * event handler added to the window.\n   *\n   * ```ts\n   * connectedCallback() {\n   *   super.connectedCallback();\n   *   addEventListener('keydown', this._handleKeydown);\n   * }\n   * ```\n   *\n   * Typically, anything done in `connectedCallback()` should be undone when the\n   * element is disconnected, in `disconnectedCallback()`.\n   *\n   * @category lifecycle\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    this.__childPart?.setConnected(true);\n  }\n  /**\n   * Invoked when the component is removed from the document's DOM.\n   *\n   * This callback is the main signal to the element that it may no longer be\n   * used. `disconnectedCallback()` should ensure that nothing is holding a\n   * reference to the element (such as event listeners added to nodes external\n   * to the element), so that it is free to be garbage collected.\n   *\n   * ```ts\n   * disconnectedCallback() {\n   *   super.disconnectedCallback();\n   *   window.removeEventListener('keydown', this._handleKeydown);\n   * }\n   * ```\n   *\n   * An element may be re-connected after being disconnected.\n   *\n   * @category lifecycle\n   */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.__childPart?.setConnected(false);\n  }\n  /**\n   * Invoked on each update to perform rendering tasks. This method may return\n   * any value renderable by lit-html's `ChildPart` - typically a\n   * `TemplateResult`. Setting properties inside this method will *not* trigger\n   * the element to update.\n   * @category rendering\n   */\n  render() {\n    return noChange;\n  }\n}\n// This property needs to remain unminified.\nLitElement['_$litElement$'] = true;\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See @lit/reactive-element for more information.\n */\nLitElement[JSCompiler_renameProperty('finalized', LitElement)] = true;\n// Install hydration if available\nglobal.litElementHydrateSupport?.({\n  LitElement\n});\n// Apply polyfills if available\nconst polyfillSupport = DEV_MODE ? global.litElementPolyfillSupportDevMode : global.litElementPolyfillSupport;\npolyfillSupport?.({\n  LitElement\n});\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports  mangled in the\n * client side code, we export a _$LE object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-html, since this module re-exports all of lit-html.\n *\n * @private\n */\nexport const _$LE = {\n  _$attributeToProperty: (el, name, value) => {\n    // eslint-disable-next-line\n    el._$attributeToProperty(name, value);\n  },\n  // eslint-disable-next-line\n  _$changedProperties: el => el._$changedProperties\n};\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n(global.litElementVersions ??= []).push('4.2.1');\nif (DEV_MODE && global.litElementVersions.length > 1) {\n  queueMicrotask(() => {\n    issueWarning('multiple-versions', `Multiple versions of Lit loaded. Loading multiple versions ` + `is not recommended.`);\n  });\n}\n", "/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// NOTE(cdata): The HAS_WEBXR_* constants can be enabled in Chrome by turning on\n// the appropriate flags. However, just because we have the API does not\n// guarantee that AR will work.\nexport const HAS_WEBXR_DEVICE_API = navigator.xr != null && self.XRSession != null && navigator.xr.isSessionSupported != null;\nexport const HAS_WEBXR_HIT_TEST_API = HAS_WEBXR_DEVICE_API && self.XRSession.prototype.requestHitTestSource != null;\nexport const HAS_RESIZE_OBSERVER = self.ResizeObserver != null;\nexport const HAS_INTERSECTION_OBSERVER = self.IntersectionObserver != null;\nexport const IS_WEBXR_AR_CANDIDATE = HAS_WEBXR_HIT_TEST_API;\nexport const IS_MOBILE = (() => {\n  const userAgent = navigator.userAgent || navigator.vendor || self.opera;\n  let check = false;\n  // eslint-disable-next-line\n  if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(userAgent) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(userAgent.substr(0, 4))) {\n    check = true;\n  }\n  return check;\n})();\nexport const IS_CHROMEOS = /\\bCrOS\\b/.test(navigator.userAgent);\nexport const IS_ANDROID = /android/i.test(navigator.userAgent);\n// Prior to iOS 13, detecting iOS Safari was relatively straight-forward.\n// As of iOS 13, Safari on iPad (in its default configuration) reports the same\n// user-agent string as Safari on desktop MacOS. Strictly speaking, we only care\n// about iOS for the purposes if selecting for cases where Quick Look is known\n// to be supported. However, for API correctness purposes, we must rely on\n// known, detectable signals to distinguish iOS Safari from MacOS Safari. At the\n// time of this writing, there are no non-iOS/iPadOS Apple devices with\n// multi-touch displays.\n// @see https://stackoverflow.com/questions/57765958/how-to-detect-ipad-and-ipad-os-version-in-ios-13-and-up\n// @see https://forums.developer.apple.com/thread/119186\n// @see https://github.com/google/model-viewer/issues/758\nexport const IS_IOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !self.MSStream || navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1;\n// @see https://developer.chrome.com/multidevice/user-agent\nexport const IS_SAFARI = /Safari\\//.test(navigator.userAgent);\nexport const IS_FIREFOX = /firefox/i.test(navigator.userAgent);\nexport const IS_OCULUS = /OculusBrowser/.test(navigator.userAgent);\nexport const IS_IOS_CHROME = IS_IOS && /CriOS\\//.test(navigator.userAgent);\nexport const IS_IOS_SAFARI = IS_IOS && IS_SAFARI;\nexport const IS_SCENEVIEWER_CANDIDATE = IS_ANDROID && !IS_FIREFOX && !IS_OCULUS;\nexport const IS_WKWEBVIEW = Boolean(window.webkit && window.webkit.messageHandlers);\n// If running in iOS Safari proper, and not within a WKWebView component\n// instance, check for ARQL feature support. Otherwise, if running in a\n// WKWebView instance, check for known ARQL compatible iOS browsers, including:\n// Chrome (CriOS), Edge (EdgiOS), Firefox (FxiOS), Google App (GSA), DuckDuckGo\n// (DuckDuckGo). All other iOS browsers / apps will fail by default.\nexport const IS_AR_QUICKLOOK_CANDIDATE = (() => {\n  if (IS_IOS) {\n    if (!IS_WKWEBVIEW) {\n      const tempAnchor = document.createElement('a');\n      return Boolean(tempAnchor.relList && tempAnchor.relList.supports && tempAnchor.relList.supports('ar'));\n    } else {\n      return Boolean(/CriOS\\/|EdgiOS\\/|FxiOS\\/|GSA\\/|DuckDuckGo\\//.test(navigator.userAgent));\n    }\n  } else {\n    return false;\n  }\n})();\n", "/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { HAS_WEBXR_DEVICE_API, HAS_WEBXR_HIT_TEST_API, IS_WEBXR_AR_CANDIDATE } from './constants.js';\nexport const deserializeUrl = url => !!url && url !== 'null' ? toFullUrl(url) : null;\nexport const assertIsArCandidate = () => {\n  if (IS_WEBXR_AR_CANDIDATE) {\n    return;\n  }\n  const missingApis = [];\n  if (!HAS_WEBXR_DEVICE_API) {\n    missingApis.push('WebXR Device API');\n  }\n  if (!HAS_WEBXR_HIT_TEST_API) {\n    missingApis.push('WebXR Hit Test API');\n  }\n  throw new Error(`The following APIs are required for AR, but are missing in this browser: ${missingApis.join(', ')}`);\n};\n/**\n * Converts a partial URL string to a fully qualified URL string.\n *\n * @param {String} url\n * @return {String}\n */\nexport const toFullUrl = partialUrl => {\n  const url = new URL(partialUrl, window.location.toString());\n  return url.toString();\n};\n/**\n * Returns a throttled version of a given function that is only invoked at most\n * once within a given threshold of time in milliseconds.\n *\n * The throttled version of the function has a \"flush\" property that resets the\n * threshold for cases when immediate invocation is desired.\n */\nexport const throttle = (fn, ms) => {\n  let timer = null;\n  const throttled = (...args) => {\n    if (timer != null) {\n      return;\n    }\n    fn(...args);\n    timer = self.setTimeout(() => timer = null, ms);\n  };\n  throttled.flush = () => {\n    if (timer != null) {\n      self.clearTimeout(timer);\n      timer = null;\n    }\n  };\n  return throttled;\n};\nexport const debounce = (fn, ms) => {\n  let timer = null;\n  return (...args) => {\n    if (timer != null) {\n      self.clearTimeout(timer);\n    }\n    timer = self.setTimeout(() => {\n      timer = null;\n      fn(...args);\n    }, ms);\n  };\n};\n/**\n * @param {Number} edge\n * @param {Number} value\n * @return {Number} 0 if value is less than edge, otherwise 1\n */\nexport const step = (edge, value) => {\n  return value < edge ? 0 : 1;\n};\n/**\n * @param {Number} value\n * @param {Number} lowerLimit\n * @param {Number} upperLimit\n * @return {Number} value clamped within lowerLimit..upperLimit\n */\nexport const clamp = (value, lowerLimit, upperLimit) => Math.max(lowerLimit, Math.min(upperLimit, value));\n/**\n * Debug mode is enabled when one of the two following conditions is true:\n *\n *  1. A 'model-viewer-debug-mode' query parameter is present in the current\n *     search string\n *  2. There is a global object ModelViewerElement with a debugMode property set\n *     to true\n */\nexport const isDebugMode = (() => {\n  const debugQueryParameterName = 'model-viewer-debug-mode';\n  const debugQueryParameter = new RegExp(`[?&]${debugQueryParameterName}(&|$)`);\n  return () => self.ModelViewerElement && self.ModelViewerElement.debugMode || self.location && self.location.search && self.location.search.match(debugQueryParameter);\n})();\nexport const timePasses = (ms = 0) => new Promise(resolve => setTimeout(resolve, ms));\n/**\n * @param {EventTarget|EventDispatcher} target\n * @param {string} eventName\n * @param {?Function} predicate\n */\nexport const waitForEvent = (target, eventName, predicate = null) => new Promise(resolve => {\n  function handler(event) {\n    if (!predicate || predicate(event)) {\n      resolve(event);\n      target.removeEventListener(eventName, handler);\n    }\n  }\n  target.addEventListener(eventName, handler);\n});\n", "/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { property } from 'lit/decorators.js';\nimport { ACESFilmicToneMapping, AgXToneMapping, CineonToneMapping, LinearToneMapping, NeutralToneMapping, NoToneMapping, ReinhardToneMapping } from 'three';\nimport { $needsRender, $progressTracker, $renderer, $scene, $shouldAttemptPreload } from '../model-viewer-base.js';\nimport { clamp, deserializeUrl } from '../utilities.js';\nexport const BASE_OPACITY = 0.5;\nconst DEFAULT_SHADOW_INTENSITY = 0.0;\nconst DEFAULT_SHADOW_SOFTNESS = 1.0;\nconst DEFAULT_EXPOSURE = 1.0;\nexport const $currentEnvironmentMap = Symbol('currentEnvironmentMap');\nexport const $currentBackground = Symbol('currentBackground');\nexport const $updateEnvironment = Symbol('updateEnvironment');\nconst $cancelEnvironmentUpdate = Symbol('cancelEnvironmentUpdate');\nexport const EnvironmentMixin = ModelViewerElement => {\n  var _a, _b, _c;\n  class EnvironmentModelViewerElement extends ModelViewerElement {\n    constructor() {\n      super(...arguments);\n      this.environmentImage = null;\n      this.skyboxImage = null;\n      this.shadowIntensity = DEFAULT_SHADOW_INTENSITY;\n      this.shadowSoftness = DEFAULT_SHADOW_SOFTNESS;\n      this.exposure = DEFAULT_EXPOSURE;\n      this.toneMapping = 'auto';\n      this.skyboxHeight = '0';\n      this[_a] = null;\n      this[_b] = null;\n      this[_c] = null;\n    }\n    updated(changedProperties) {\n      super.updated(changedProperties);\n      if (changedProperties.has('shadowIntensity')) {\n        this[$scene].setShadowIntensity(this.shadowIntensity * BASE_OPACITY);\n        this[$needsRender]();\n      }\n      if (changedProperties.has('shadowSoftness')) {\n        this[$scene].setShadowSoftness(this.shadowSoftness);\n        this[$needsRender]();\n      }\n      if (changedProperties.has('exposure')) {\n        this[$scene].exposure = this.exposure;\n        this[$needsRender]();\n      }\n      if (changedProperties.has('toneMapping')) {\n        this[$scene].toneMapping = this.toneMapping === 'aces' ? ACESFilmicToneMapping : this.toneMapping === 'agx' ? AgXToneMapping : this.toneMapping === 'reinhard' ? ReinhardToneMapping : this.toneMapping === 'cineon' ? CineonToneMapping : this.toneMapping === 'linear' ? LinearToneMapping : this.toneMapping === 'none' ? NoToneMapping : NeutralToneMapping;\n        this[$needsRender]();\n      }\n      if ((changedProperties.has('environmentImage') || changedProperties.has('skyboxImage')) && this[$shouldAttemptPreload]()) {\n        this[$updateEnvironment]();\n      }\n      if (changedProperties.has('skyboxHeight')) {\n        this[$scene].setGroundedSkybox();\n        this[$needsRender]();\n      }\n    }\n    hasBakedShadow() {\n      return this[$scene].bakedShadows.size > 0;\n    }\n    async [(_a = $currentEnvironmentMap, _b = $currentBackground, _c = $cancelEnvironmentUpdate, $updateEnvironment)]() {\n      const {\n        skyboxImage,\n        environmentImage\n      } = this;\n      if (this[$cancelEnvironmentUpdate] != null) {\n        this[$cancelEnvironmentUpdate]();\n        this[$cancelEnvironmentUpdate] = null;\n      }\n      const {\n        textureUtils\n      } = this[$renderer];\n      if (textureUtils == null) {\n        return;\n      }\n      const updateEnvProgress = this[$progressTracker].beginActivity('environment-update');\n      try {\n        const {\n          environmentMap,\n          skybox\n        } = await textureUtils.generateEnvironmentMapAndSkybox(deserializeUrl(skyboxImage), environmentImage, progress => updateEnvProgress(clamp(progress, 0, 1)), this.withCredentials);\n        if (this[$currentEnvironmentMap] !== environmentMap) {\n          this[$currentEnvironmentMap] = environmentMap;\n          this.dispatchEvent(new CustomEvent('environment-change'));\n        }\n        if (skybox != null) {\n          // When using the same environment and skybox, use the environment as\n          // it gives HDR filtering.\n          this[$currentBackground] = skybox.name === environmentMap.name ? environmentMap : skybox;\n        } else {\n          this[$currentBackground] = null;\n        }\n        this[$scene].setEnvironmentAndSkybox(this[$currentEnvironmentMap], this[$currentBackground]);\n      } catch (errorOrPromise) {\n        if (errorOrPromise instanceof Error) {\n          this[$scene].setEnvironmentAndSkybox(null, null);\n          throw errorOrPromise;\n        }\n      } finally {\n        updateEnvProgress(1.0);\n      }\n    }\n  }\n  __decorate([property({\n    type: String,\n    attribute: 'environment-image'\n  })], EnvironmentModelViewerElement.prototype, \"environmentImage\", void 0);\n  __decorate([property({\n    type: String,\n    attribute: 'skybox-image'\n  })], EnvironmentModelViewerElement.prototype, \"skyboxImage\", void 0);\n  __decorate([property({\n    type: Number,\n    attribute: 'shadow-intensity'\n  })], EnvironmentModelViewerElement.prototype, \"shadowIntensity\", void 0);\n  __decorate([property({\n    type: Number,\n    attribute: 'shadow-softness'\n  })], EnvironmentModelViewerElement.prototype, \"shadowSoftness\", void 0);\n  __decorate([property({\n    type: Number\n  })], EnvironmentModelViewerElement.prototype, \"exposure\", void 0);\n  __decorate([property({\n    type: String,\n    attribute: 'tone-mapping'\n  })], EnvironmentModelViewerElement.prototype, \"toneMapping\", void 0);\n  __decorate([property({\n    type: String,\n    attribute: 'skybox-height'\n  })], EnvironmentModelViewerElement.prototype, \"skyboxHeight\", void 0);\n  return EnvironmentModelViewerElement;\n};\n", "/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { html } from 'lit';\nexport default html`\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"#000000\">\n    <!-- NOTE(cdata): This SVG filter is a stop-gap until we can implement\n         support for dynamic re-coloring of UI components -->\n    <defs>\n      <filter id=\"drop-shadow\" x=\"-100%\" y=\"-100%\" width=\"300%\" height=\"300%\">\n        <feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"1\"/>\n        <feOffset dx=\"0\" dy=\"0\" result=\"offsetblur\"/>\n        <feFlood flood-color=\"#000000\"/>\n        <feComposite in2=\"offsetblur\" operator=\"in\"/>\n        <feMerge>\n          <feMergeNode/>\n          <feMergeNode in=\"SourceGraphic\"/>\n        </feMerge>\n      </filter>\n    </defs>\n    <path filter=\"url(#drop-shadow)\" d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\n    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n</svg>`;\n", "/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { html } from 'lit';\nexport default html`\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"25\" height=\"36\">\n    <defs>\n        <path id=\"A\" d=\"M.001.232h24.997V36H.001z\" />\n    </defs>\n    <g transform=\"translate(-11 -4)\" fill=\"none\" fill-rule=\"evenodd\">\n        <path fill-opacity=\"0\" fill=\"#fff\" d=\"M0 0h44v44H0z\" />\n        <g transform=\"translate(11 3)\">\n            <path d=\"M8.733 11.165c.04-1.108.766-2.027 1.743-2.307a2.54 2.54 0 0 1 .628-.089c.16 0 .314.017.463.044 1.088.2 1.9 1.092 1.9 2.16v8.88h1.26c2.943-1.39 5-4.45 5-8.025a9.01 9.01 0 0 0-1.9-5.56l-.43-.5c-.765-.838-1.683-1.522-2.712-2-1.057-.49-2.226-.77-3.46-.77s-2.4.278-3.46.77c-1.03.478-1.947 1.162-2.71 2l-.43.5a9.01 9.01 0 0 0-1.9 5.56 9.04 9.04 0 0 0 .094 1.305c.03.21.088.41.13.617l.136.624c.083.286.196.56.305.832l.124.333a8.78 8.78 0 0 0 .509.953l.065.122a8.69 8.69 0 0 0 3.521 3.191l1.11.537v-9.178z\" fill-opacity=\".5\" fill=\"#e4e4e4\" />\n            <path d=\"M22.94 26.218l-2.76 7.74c-.172.485-.676.8-1.253.8H12.24c-1.606 0-3.092-.68-3.98-1.82-1.592-2.048-3.647-3.822-6.11-5.27-.095-.055-.15-.137-.152-.23-.004-.1.046-.196.193-.297.56-.393 1.234-.6 1.926-.6a3.43 3.43 0 0 1 .691.069l4.922.994V10.972c0-.663.615-1.203 1.37-1.203s1.373.54 1.373 1.203v9.882h2.953c.273 0 .533.073.757.21l6.257 3.874c.027.017.045.042.07.06.41.296.586.77.426 1.22M4.1 16.614c-.024-.04-.042-.083-.065-.122a8.69 8.69 0 0 1-.509-.953c-.048-.107-.08-.223-.124-.333l-.305-.832c-.058-.202-.09-.416-.136-.624l-.13-.617a9.03 9.03 0 0 1-.094-1.305c0-2.107.714-4.04 1.9-5.56l.43-.5c.764-.84 1.682-1.523 2.71-2 1.058-.49 2.226-.77 3.46-.77s2.402.28 3.46.77c1.03.477 1.947 1.16 2.712 2l.428.5a9 9 0 0 1 1.901 5.559c0 3.577-2.056 6.636-5 8.026h-1.26v-8.882c0-1.067-.822-1.96-1.9-2.16-.15-.028-.304-.044-.463-.044-.22 0-.427.037-.628.09-.977.28-1.703 1.198-1.743 2.306v9.178l-1.11-.537C6.18 19.098 4.96 18 4.1 16.614M22.97 24.09l-6.256-3.874c-.102-.063-.218-.098-.33-.144 2.683-1.8 4.354-4.855 4.354-8.243 0-.486-.037-.964-.104-1.43a9.97 9.97 0 0 0-1.57-4.128l-.295-.408-.066-.092a10.05 10.05 0 0 0-.949-1.078c-.342-.334-.708-.643-1.094-.922-1.155-.834-2.492-1.412-3.94-1.65l-.732-.088-.748-.03a9.29 9.29 0 0 0-1.482.119c-1.447.238-2.786.816-3.94 1.65a9.33 9.33 0 0 0-.813.686 9.59 9.59 0 0 0-.845.877l-.385.437-.36.5-.288.468-.418.778-.04.09c-.593 1.28-.93 2.71-.93 4.222 0 3.832 2.182 7.342 5.56 8.938l1.437.68v4.946L5 25.64a4.44 4.44 0 0 0-.888-.086c-.017 0-.034.003-.05.003-.252.004-.503.033-.75.08a5.08 5.08 0 0 0-.237.056c-.193.046-.382.107-.568.18-.075.03-.15.057-.225.1-.25.114-.494.244-.723.405a1.31 1.31 0 0 0-.566 1.122 1.28 1.28 0 0 0 .645 1.051C4 29.925 5.96 31.614 7.473 33.563a5.06 5.06 0 0 0 .434.491c1.086 1.082 2.656 1.713 4.326 1.715h6.697c.748-.001 1.43-.333 1.858-.872.142-.18.256-.38.336-.602l2.757-7.74c.094-.26.13-.53.112-.794s-.088-.52-.203-.76a2.19 2.19 0 0 0-.821-.91\" fill-opacity=\".6\" fill=\"#000\" />\n            <path d=\"M22.444 24.94l-6.257-3.874a1.45 1.45 0 0 0-.757-.211h-2.953v-9.88c0-.663-.616-1.203-1.373-1.203s-1.37.54-1.37 1.203v16.643l-4.922-.994a3.44 3.44 0 0 0-.692-.069 3.35 3.35 0 0 0-1.925.598c-.147.102-.198.198-.194.298.004.094.058.176.153.23 2.462 1.448 4.517 3.22 6.11 5.27.887 1.14 2.373 1.82 3.98 1.82h6.686c.577 0 1.08-.326 1.253-.8l2.76-7.74c.16-.448-.017-.923-.426-1.22-.025-.02-.043-.043-.07-.06z\" fill=\"#fff\" />\n            <g transform=\"translate(0 .769)\">\n                <mask id=\"B\" fill=\"#fff\">\n                    <use xlink:href=\"#A\" />\n                </mask>\n                <path d=\"M23.993 24.992a1.96 1.96 0 0 1-.111.794l-2.758 7.74c-.08.22-.194.423-.336.602-.427.54-1.11.87-1.857.872h-6.698c-1.67-.002-3.24-.633-4.326-1.715-.154-.154-.3-.318-.434-.49C5.96 30.846 4 29.157 1.646 27.773c-.385-.225-.626-.618-.645-1.05a1.31 1.31 0 0 1 .566-1.122 4.56 4.56 0 0 1 .723-.405l.225-.1a4.3 4.3 0 0 1 .568-.18l.237-.056c.248-.046.5-.075.75-.08.018 0 .034-.003.05-.003.303-.001.597.027.89.086l3.722.752V20.68l-1.436-.68c-3.377-1.596-5.56-5.106-5.56-8.938 0-1.51.336-2.94.93-4.222.015-.03.025-.06.04-.09.127-.267.268-.525.418-.778.093-.16.186-.316.288-.468.063-.095.133-.186.2-.277L3.773 5c.118-.155.26-.29.385-.437.266-.3.544-.604.845-.877a9.33 9.33 0 0 1 .813-.686C6.97 2.167 8.31 1.59 9.757 1.35a9.27 9.27 0 0 1 1.481-.119 8.82 8.82 0 0 1 .748.031c.247.02.49.05.733.088 1.448.238 2.786.816 3.94 1.65.387.28.752.588 1.094.922a9.94 9.94 0 0 1 .949 1.078l.066.092c.102.133.203.268.295.408a9.97 9.97 0 0 1 1.571 4.128c.066.467.103.945.103 1.43 0 3.388-1.67 6.453-4.353 8.243.11.046.227.08.33.144l6.256 3.874c.37.23.645.55.82.9.115.24.185.498.203.76m.697-1.195c-.265-.55-.677-1.007-1.194-1.326l-5.323-3.297c2.255-2.037 3.564-4.97 3.564-8.114 0-2.19-.637-4.304-1.84-6.114-.126-.188-.26-.37-.4-.552-.645-.848-1.402-1.6-2.252-2.204C15.472.91 13.393.232 11.238.232A10.21 10.21 0 0 0 5.23 2.19c-.848.614-1.606 1.356-2.253 2.205-.136.18-.272.363-.398.55C1.374 6.756.737 8.87.737 11.06c0 4.218 2.407 8.08 6.133 9.842l.863.41v3.092l-2.525-.51c-.356-.07-.717-.106-1.076-.106a5.45 5.45 0 0 0-3.14.996c-.653.46-1.022 1.202-.99 1.983a2.28 2.28 0 0 0 1.138 1.872c2.24 1.318 4.106 2.923 5.543 4.772 1.26 1.62 3.333 2.59 5.55 2.592h6.698c1.42-.001 2.68-.86 3.134-2.138l2.76-7.74c.272-.757.224-1.584-.134-2.325\" fill-opacity=\".05\" fill=\"#000\" mask=\"url(#B)\" />\n            </g>\n        </g>\n    </g>\n</svg>`;\n", "/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { html } from 'lit';\nexport default html`\n<svg version=\"1.1\" id=\"view_x5F_in_x5F_AR_x5F_icon\"\n\t xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\"\n\t viewBox=\"0 0 24 24\" enable-background=\"new 0 0 24 24\" xml:space=\"preserve\">\n<rect id=\"Bounding_Box\" x=\"0\" y=\"0\" fill=\"none\" width=\"24\" height=\"24\"/>\n<g id=\"Art_layer\">\n\t<path d=\"M3,4c0-0.55,0.45-1,1-1h2V1H4C2.35,1,1,2.35,1,4v2h2V4z\"/>\n\t<path d=\"M20,3c0.55,0,1,0.45,1,1v2h2V4c0-1.65-1.35-3-3-3h-2v2H20z\"/>\n\t<path d=\"M4,21c-0.55,0-1-0.45-1-1v-2H1v2c0,1.65,1.35,3,3,3h2v-2H4z\"/>\n\t<path d=\"M20,21c0.55,0,1-0.45,1-1v-2h2v2c0,1.65-1.35,3-3,3h-2v-2H20z\"/>\n\t<g>\n\t\t<path d=\"M18.25,7.6l-5.5-3.18c-0.46-0.27-1.04-0.27-1.5,0L5.75,7.6C5.29,7.87,5,8.36,5,8.9v6.35c0,0.54,0.29,1.03,0.75,1.3\n\t\t\tl5.5,3.18c0.46,0.27,1.04,0.27,1.5,0l5.5-3.18c0.46-0.27,0.75-0.76,0.75-1.3V8.9C19,8.36,18.71,7.87,18.25,7.6z M7,14.96v-4.62\n\t\t\tl4,2.32v4.61L7,14.96z M12,10.93L8,8.61l4-2.31l4,2.31L12,10.93z M13,17.27v-4.61l4-2.32v4.62L13,17.27z\"/>\n\t</g>\n</g>\n</svg>`;\n", "/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { html, render } from 'lit';\nimport CloseIcon from './assets/close-material-svg.js';\nimport ControlsPrompt from './assets/controls-svg.js';\nimport ARGlyph from './assets/view-in-ar-material-svg.js';\nconst templateResult = html`\n<style>\n:host {\n  display: block;\n  position: relative;\n  contain: strict;\n  width: 300px;\n  height: 150px;\n}\n\n.container {\n  position: relative;\n  overflow: hidden;\n}\n\n.userInput {\n  width: 100%;\n  height: 100%;\n  display: none;\n  position: relative;\n  outline-offset: -1px;\n  outline-width: 1px;\n}\n\ncanvas {\n  position: absolute;\n  display: none;\n  pointer-events: none;\n  /* NOTE(cdata): Chrome 76 and below apparently have a bug\n   * that causes our canvas not to display pixels unless it is\n   * on its own render layer\n   * @see https://github.com/google/model-viewer/pull/755#issuecomment-536597893\n   */\n  transform: translateZ(0);\n}\n\n.show {\n  display: block;\n}\n\n/* Adapted from HTML5 Boilerplate\n *\n * @see https://github.com/h5bp/html5-boilerplate/blob/ceb4620c78fc82e13534fc44202a3f168754873f/dist/css/main.css#L122-L133 */\n.screen-reader-only {\n  border: 0;\n  left: 0;\n  top: 0;\n  clip: rect(0, 0, 0, 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n  pointer-events: none;\n}\n\n.slot {\n  position: absolute;\n  pointer-events: none;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n\n.slot > * {\n  pointer-events: initial;\n}\n\n.annotation-wrapper ::slotted(*) {\n  opacity: var(--max-hotspot-opacity, 1);\n  transition: opacity 0.3s;\n}\n\n.pointer-tumbling .annotation-wrapper ::slotted(*) {\n  pointer-events: none;\n}\n\n.annotation-wrapper ::slotted(*) {\n  pointer-events: initial;\n}\n\n.annotation-wrapper.hide ::slotted(*) {\n  opacity: var(--min-hotspot-opacity, 0.25);\n}\n\n.slot.poster {\n  display: none;\n  background-color: inherit;\n}\n\n.slot.poster.show {\n  display: inherit;\n}\n\n.slot.poster > * {\n  pointer-events: initial;\n}\n\n.slot.poster:not(.show) > * {\n  pointer-events: none;\n}\n\n#default-poster {\n  width: 100%;\n  height: 100%;\n  /* The default poster is a <button> so we need to set display\n   * to prevent it from being affected by text-align: */\n  display: block;\n  position: absolute;\n  border: none;\n  padding: 0;\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-color: #fff0;\n}\n\n#default-progress-bar {\n  display: block;\n  position: relative;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n  overflow: hidden;\n}\n\n#default-progress-bar > .bar {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: var(--progress-bar-height, 5px);\n  background-color: var(--progress-bar-color, rgba(0, 0, 0, 0.4));\n  transition: transform 0.09s;\n  transform-origin: top left;\n  transform: scaleX(0);\n  overflow: hidden;\n}\n\n#default-progress-bar > .bar.hide {\n  transition: opacity 0.3s 1s;\n  opacity: 0;\n}\n\n.centered {\n  align-items: center;\n  justify-content: center;\n}\n\n.cover {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n}\n\n.slot.interaction-prompt {\n  display: var(--interaction-prompt-display, flex);\n  overflow: hidden;\n  opacity: 0;\n  will-change: opacity;\n  transition: opacity 0.3s;\n}\n\n.slot.interaction-prompt.visible {\n  opacity: 1;\n}\n\n.animated-container {\n  will-change: transform, opacity;\n  opacity: 0;\n  transition: opacity 0.3s;\n}\n\n.slot.interaction-prompt > * {\n  pointer-events: none;\n}\n\n.slot.ar-button {\n  -moz-user-select: none;\n  -webkit-tap-highlight-color: transparent;\n  user-select: none;\n\n  display: var(--ar-button-display, block);\n}\n\n.slot.ar-button:not(.enabled) {\n  display: none;\n}\n\n.fab {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n  width: 40px;\n  height: 40px;\n  cursor: pointer;\n  background-color: #fff;\n  box-shadow: 0px 0px 4px rgba(0, 0, 0, 0.15);\n  border-radius: 100px;\n}\n\n.fab > * {\n  opacity: 0.87;\n}\n\n#default-ar-button {\n  position: absolute;\n  bottom: 16px;\n  right: 16px;\n  transform: scale(var(--ar-button-scale, 1));\n  transform-origin: bottom right;\n}\n\n.slot.pan-target {\n  display: block;\n  position: absolute;\n  width: 0;\n  height: 0;\n  left: 50%;\n  top: 50%;\n  transform: translate3d(-50%, -50%, 0);\n  background-color: transparent;\n  opacity: 0;\n  transition: opacity 0.3s;\n}\n\n#default-pan-target {\n  width: 6px;\n  height: 6px;\n  border-radius: 6px;\n  border: 1px solid white;\n  box-shadow: 0px 0px 2px 1px rgba(0, 0, 0, 0.8);\n}\n\n.slot.default {\n  pointer-events: none;\n}\n\n.slot.progress-bar {\n  pointer-events: none;\n}\n\n.slot.exit-webxr-ar-button {\n  pointer-events: none;\n}\n\n.slot.exit-webxr-ar-button:not(.enabled) {\n  display: none;\n}\n\n#default-exit-webxr-ar-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  top: env(safe-area-inset-top, 16px);\n  right: 16px;\n  width: 40px;\n  height: 40px;\n  box-sizing: border-box;\n}\n\n#default-exit-webxr-ar-button > svg {\n  fill: #fff;\n}\n</style>\n<div class=\"container\">\n  <div class=\"userInput\" tabindex=\"0\" role=\"img\"\n      aria-label=\"3D model\">\n      <div class=\"slot canvas\">\n        <slot name=\"canvas\">\n          <canvas></canvas>\n        </slot>\n      </div>\n\n  </div>\n\n  <!-- NOTE(cdata): We need to wrap slots because browsers without ShadowDOM\n        will have their <slot> elements removed by ShadyCSS -->\n  <div class=\"slot poster\">\n    <slot name=\"poster\">\n      <button type=\"button\" id=\"default-poster\" aria-hidden=\"true\" aria-label=\"Loading 3D model\"></button>\n    </slot>\n  </div>\n\n  <div class=\"slot ar-button\">\n    <slot name=\"ar-button\">\n      <a id=\"default-ar-button\" part=\"default-ar-button\" class=\"fab\"\n          tabindex=\"2\"\n          role=\"button\"\n          href=\"javascript:void(0);\"\n          aria-label=\"View in your space\">\n        ${ARGlyph}\n      </a>\n    </slot>\n  </div>\n\n  <div class=\"slot pan-target\">\n    <slot name=\"pan-target\">\n      <div id=\"default-pan-target\">\n      </div>\n    </slot>\n  </div>\n\n  <div class=\"slot interaction-prompt cover centered\">\n    <div id=\"prompt\" class=\"animated-container\">\n      <slot name=\"interaction-prompt\" aria-hidden=\"true\">\n        ${ControlsPrompt}\n      </slot>\n    </div>\n  </div>\n\n  <div id=\"finger0\" class=\"animated-container cover\">\n    <slot name=\"finger0\" aria-hidden=\"true\">\n    </slot>\n  </div>\n  <div id=\"finger1\" class=\"animated-container cover\">\n    <slot name=\"finger1\" aria-hidden=\"true\">\n    </slot>\n  </div>\n\n  <div class=\"slot default\">\n    <slot></slot>\n\n    <div class=\"slot progress-bar\">\n      <slot name=\"progress-bar\">\n        <div id=\"default-progress-bar\" aria-hidden=\"true\">\n          <div class=\"bar\" part=\"default-progress-bar\"></div>\n        </div>\n      </slot>\n    </div>\n\n    <div class=\"slot exit-webxr-ar-button\">\n      <slot name=\"exit-webxr-ar-button\">\n        <a id=\"default-exit-webxr-ar-button\" part=\"default-exit-webxr-ar-button\"\n            tabindex=\"3\"\n            aria-label=\"Exit AR\"\n            aria-hidden=\"true\">\n          ${CloseIcon}\n        </a>\n      </slot>\n    </div>\n  </div>\n</div>\n<div class=\"screen-reader-only\" role=\"region\" aria-label=\"Live announcements\">\n  <span id=\"status\" role=\"status\"></span>\n</div>`;\nexport const makeTemplate = shadowRoot => {\n  render(templateResult, shadowRoot);\n};\n", "// This file is part of meshoptimizer library and is distributed under the terms of MIT License.\n// Copyright (C) 2016-2022, by Arseny Kapoulkine (arseny.kapoulkine@gmail.com)\nvar MeshoptDecoder = function () {\n  \"use strict\";\n\n  // Built with clang version 14.0.4\n  // Built from meshoptimizer 0.18\n  var wasm_base = \"b9H79Tebbbe8Fv9Gbb9Gvuuuuueu9Giuuub9Geueu9Giuuueuikqbeeedddillviebeoweuec:q;iekr;leDo9TW9T9VV95dbH9F9F939H79T9F9J9H229F9Jt9VV7bb8A9TW79O9V9Wt9F9KW9J9V9KW9wWVtW949c919M9MWVbeY9TW79O9V9Wt9F9KW9J9V9KW69U9KW949c919M9MWVbdE9TW79O9V9Wt9F9KW9J9V9KW69U9KW949tWG91W9U9JWbiL9TW79O9V9Wt9F9KW9J9V9KWS9P2tWV9p9JtblK9TW79O9V9Wt9F9KW9J9V9KWS9P2tWV9r919HtbvL9TW79O9V9Wt9F9KW9J9V9KWS9P2tWVT949Wbol79IV9Rbrq:P8Yqdbk;3sezu8Jjjjjbcj;eb9Rgv8Kjjjjbc9:hodnadcefal0mbcuhoaiRbbc:Ge9hmbavaialfgrad9Radz1jjjbhwcj;abad9UhoaicefhldnadTmbaoc;WFbGgocjdaocjd6EhDcbhqinaqae9pmeaDaeaq9RaqaDfae6Egkcsfgocl4cifcd4hxdndndndnaoc9WGgmTmbcbhPcehsawcjdfhzalhHinaraH9Rax6midnaraHaxfgl9RcK6mbczhoinawcj;cbfaogifgoc9WfhOdndndndndnaHaic9WfgAco4fRbbaAci4coG4ciGPlbedibkaO9cb83ibaOcwf9cb83ibxikaOalRblalRbbgAco4gCaCciSgCE86bbaocGfalclfaCfgORbbaAcl4ciGgCaCciSgCE86bbaocVfaOaCfgORbbaAcd4ciGgCaCciSgCE86bbaoc7faOaCfgORbbaAciGgAaAciSgAE86bbaoctfaOaAfgARbbalRbegOco4gCaCciSgCE86bbaoc91faAaCfgARbbaOcl4ciGgCaCciSgCE86bbaoc4faAaCfgARbbaOcd4ciGgCaCciSgCE86bbaoc93faAaCfgARbbaOciGgOaOciSgOE86bbaoc94faAaOfgARbbalRbdgOco4gCaCciSgCE86bbaoc95faAaCfgARbbaOcl4ciGgCaCciSgCE86bbaoc96faAaCfgARbbaOcd4ciGgCaCciSgCE86bbaoc97faAaCfgARbbaOciGgOaOciSgOE86bbaoc98faAaOfgORbbalRbiglco4gAaAciSgAE86bbaoc99faOaAfgORbbalcl4ciGgAaAciSgAE86bbaoc9:faOaAfgORbbalcd4ciGgAaAciSgAE86bbaocufaOaAfgoRbbalciGglalciSglE86bbaoalfhlxdkaOalRbwalRbbgAcl4gCaCcsSgCE86bbaocGfalcwfaCfgORbbaAcsGgAaAcsSgAE86bbaocVfaOaAfgORbbalRbegAcl4gCaCcsSgCE86bbaoc7faOaCfgORbbaAcsGgAaAcsSgAE86bbaoctfaOaAfgORbbalRbdgAcl4gCaCcsSgCE86bbaoc91faOaCfgORbbaAcsGgAaAcsSgAE86bbaoc4faOaAfgORbbalRbigAcl4gCaCcsSgCE86bbaoc93faOaCfgORbbaAcsGgAaAcsSgAE86bbaoc94faOaAfgORbbalRblgAcl4gCaCcsSgCE86bbaoc95faOaCfgORbbaAcsGgAaAcsSgAE86bbaoc96faOaAfgORbbalRbvgAcl4gCaCcsSgCE86bbaoc97faOaCfgORbbaAcsGgAaAcsSgAE86bbaoc98faOaAfgORbbalRbogAcl4gCaCcsSgCE86bbaoc99faOaCfgORbbaAcsGgAaAcsSgAE86bbaoc9:faOaAfgORbbalRbrglcl4gAaAcsSgAE86bbaocufaOaAfgoRbbalcsGglalcsSglE86bbaoalfhlxekaOal8Pbb83bbaOcwfalcwf8Pbb83bbalczfhlkdnaiam9pmbaiczfhoaral9RcL0mekkaiam6mialTmidnakTmbawaPfRbbhOcbhoazhiinaiawcj;cbfaofRbbgAce4cbaAceG9R7aOfgO86bbaiadfhiaocefgoak9hmbkkazcefhzaPcefgPad6hsalhHaPad9hmexvkkcbhlasceGmdxikalaxad2fhCdnakTmbcbhHcehsawcjdfhminaral9Rax6mialTmdalaxfhlawaHfRbbhOcbhoamhiinaiawcj;cbfaofRbbgAce4cbaAceG9R7aOfgO86bbaiadfhiaocefgoak9hmbkamcefhmaHcefgHad6hsaHad9hmbkaChlxikcbhocehsinaral9Rax6mdalTmealaxfhlaocefgoad6hsadao9hmbkaChlxdkcbhlasceGTmekc9:hoxikabaqad2fawcjdfakad2z1jjjb8Aawawcjdfakcufad2fadz1jjjb8Aakaqfhqalmbkc9:hoxekcbc99aral9Radcaadca0ESEhokavcj;ebf8Kjjjjbaok;yzeHu8Jjjjjbc;ae9Rgv8Kjjjjbc9:hodnaeci9UgrcHfal0mbcuhoaiRbbgwc;WeGc;Ge9hmbawcsGgDce0mbavc;abfcFecjez:jjjjb8AavcUf9cu83ibavc8Wf9cu83ibavcyf9cu83ibavcaf9cu83ibavcKf9cu83ibavczf9cu83ibav9cu83iwav9cu83ibaialfc9WfhqaicefgwarfhodnaeTmbcmcsaDceSEhkcbhxcbhmcbhDcbhicbhlindnaoaq9nmbc9:hoxikdndnawRbbgrc;Ve0mbavc;abfalarcl4cu7fcsGcitfgPydlhsaPydbhzdnarcsGgPak9pmbavaiarcu7fcsGcdtfydbaxaPEhraPThPdndnadcd9hmbabaDcetfgHaz87ebaHcdfas87ebaHclfar87ebxekabaDcdtfgHazBdbaHclfasBdbaHcwfarBdbkaxaPfhxavc;abfalcitfgHarBdbaHasBdlavaicdtfarBdbavc;abfalcefcsGglcitfgHazBdbaHarBdlaiaPfhialcefhlxdkdndnaPcsSmbamaPfaPc987fcefhmxekaocefhrao8SbbgPcFeGhHdndnaPcu9mmbarhoxekaocvfhoaHcFbGhHcrhPdninar8SbbgOcFbGaPtaHVhHaOcu9kmearcefhraPcrfgPc8J9hmbxdkkarcefhokaHce4cbaHceG9R7amfhmkdndnadcd9hmbabaDcetfgraz87ebarcdfas87ebarclfam87ebxekabaDcdtfgrazBdbarclfasBdbarcwfamBdbkavc;abfalcitfgramBdbarasBdlavaicdtfamBdbavc;abfalcefcsGglcitfgrazBdbaramBdlaicefhialcefhlxekdnarcpe0mbaxcefgOavaiaqarcsGfRbbgPcl49RcsGcdtfydbaPcz6gHEhravaiaP9RcsGcdtfydbaOaHfgsaPcsGgOEhPaOThOdndnadcd9hmbabaDcetfgzax87ebazcdfar87ebazclfaP87ebxekabaDcdtfgzaxBdbazclfarBdbazcwfaPBdbkavaicdtfaxBdbavc;abfalcitfgzarBdbazaxBdlavaicefgicsGcdtfarBdbavc;abfalcefcsGcitfgzaPBdbazarBdlavaiaHfcsGgicdtfaPBdbavc;abfalcdfcsGglcitfgraxBdbaraPBdlalcefhlaiaOfhiasaOfhxxekaxcbaoRbbgzEgAarc;:eSgrfhsazcsGhCazcl4hXdndnazcs0mbascefhOxekashOavaiaX9RcsGcdtfydbhskdndnaCmbaOcefhxxekaOhxavaiaz9RcsGcdtfydbhOkdndnarTmbaocefhrxekaocdfhrao8SbegHcFeGhPdnaHcu9kmbaocofhAaPcFbGhPcrhodninar8SbbgHcFbGaotaPVhPaHcu9kmearcefhraocrfgoc8J9hmbkaAhrxekarcefhrkaPce4cbaPceG9R7amfgmhAkdndnaXcsSmbarhPxekarcefhPar8SbbgocFeGhHdnaocu9kmbarcvfhsaHcFbGhHcrhodninaP8SbbgrcFbGaotaHVhHarcu9kmeaPcefhPaocrfgoc8J9hmbkashPxekaPcefhPkaHce4cbaHceG9R7amfgmhskdndnaCcsSmbaPhoxekaPcefhoaP8SbbgrcFeGhHdnarcu9kmbaPcvfhOaHcFbGhHcrhrdninao8SbbgPcFbGartaHVhHaPcu9kmeaocefhoarcrfgrc8J9hmbkaOhoxekaocefhokaHce4cbaHceG9R7amfgmhOkdndnadcd9hmbabaDcetfgraA87ebarcdfas87ebarclfaO87ebxekabaDcdtfgraABdbarclfasBdbarcwfaOBdbkavc;abfalcitfgrasBdbaraABdlavaicdtfaABdbavc;abfalcefcsGcitfgraOBdbarasBdlavaicefgicsGcdtfasBdbavc;abfalcdfcsGcitfgraABdbaraOBdlavaiazcz6aXcsSVfgicsGcdtfaOBdbaiaCTaCcsSVfhialcifhlkawcefhwalcsGhlaicsGhiaDcifgDae6mbkkcbc99aoaqSEhokavc;aef8Kjjjjbaok:llevu8Jjjjjbcz9Rhvc9:hodnaecvfal0mbcuhoaiRbbc;:eGc;qe9hmbav9cb83iwaicefhraialfc98fhwdnaeTmbdnadcdSmbcbhDindnaraw6mbc9:skarcefhoar8SbbglcFeGhidndnalcu9mmbaohrxekarcvfhraicFbGhicrhldninao8SbbgdcFbGaltaiVhiadcu9kmeaocefhoalcrfglc8J9hmbxdkkaocefhrkabaDcdtfaicd4cbaice4ceG9R7avcwfaiceGcdtVgoydbfglBdbaoalBdbaDcefgDae9hmbxdkkcbhDindnaraw6mbc9:skarcefhoar8SbbglcFeGhidndnalcu9mmbaohrxekarcvfhraicFbGhicrhldninao8SbbgdcFbGaltaiVhiadcu9kmeaocefhoalcrfglc8J9hmbxdkkaocefhrkabaDcetfaicd4cbaice4ceG9R7avcwfaiceGcdtVgoydbfgl87ebaoalBdbaDcefgDae9hmbkkcbc99arawSEhokaok:Lvoeue99dud99eud99dndnadcl9hmbaeTmeindndnabcdfgd8Sbb:Yab8Sbbgi:Ygl:l:tabcefgv8Sbbgo:Ygr:l:tgwJbb;:9cawawNJbbbbawawJbbbb9GgDEgq:mgkaqaicb9iEalMgwawNakaqaocb9iEarMgqaqNMM:r:vglNJbbbZJbbb:;aDEMgr:lJbbb9p9DTmbar:Ohixekcjjjj94hikadai86bbdndnaqalNJbbbZJbbb:;aqJbbbb9GEMgq:lJbbb9p9DTmbaq:Ohdxekcjjjj94hdkavad86bbdndnawalNJbbbZJbbb:;awJbbbb9GEMgw:lJbbb9p9DTmbaw:Ohdxekcjjjj94hdkabad86bbabclfhbaecufgembxdkkaeTmbindndnabclfgd8Ueb:Yab8Uebgi:Ygl:l:tabcdfgv8Uebgo:Ygr:l:tgwJb;:FSawawNJbbbbawawJbbbb9GgDEgq:mgkaqaicb9iEalMgwawNakaqaocb9iEarMgqaqNMM:r:vglNJbbbZJbbb:;aDEMgr:lJbbb9p9DTmbar:Ohixekcjjjj94hikadai87ebdndnaqalNJbbbZJbbb:;aqJbbbb9GEMgq:lJbbb9p9DTmbaq:Ohdxekcjjjj94hdkavad87ebdndnawalNJbbbZJbbb:;awJbbbb9GEMgw:lJbbb9p9DTmbaw:Ohdxekcjjjj94hdkabad87ebabcwfhbaecufgembkkk;siliui99iue99dnaeTmbcbhiabhlindndnJ;Zl81Zalcof8UebgvciV:Y:vgoal8Ueb:YNgrJb;:FSNJbbbZJbbb:;arJbbbb9GEMgw:lJbbb9p9DTmbaw:OhDxekcjjjj94hDkalclf8Uebhqalcdf8UebhkabavcefciGaiVcetfaD87ebdndnaoak:YNgwJb;:FSNJbbbZJbbb:;awJbbbb9GEMgx:lJbbb9p9DTmbax:Ohkxekcjjjj94hkkabavcdfciGaiVcetfak87ebdndnaoaq:YNgoJb;:FSNJbbbZJbbb:;aoJbbbb9GEMgx:lJbbb9p9DTmbax:Ohqxekcjjjj94hqkabavcufciGaiVcetfaq87ebdndnJbbjZararN:tawawN:taoaoN:tgrJbbbbarJbbbb9GE:rJb;:FSNJbbbZMgr:lJbbb9p9DTmbar:Ohqxekcjjjj94hqkabavciGaiVcetfaq87ebalcwfhlaiclfhiaecufgembkkk9mbdnadcd4ae2geTmbinababydbgdcwtcw91:Yadce91cjjj;8ifcjjj98G::NUdbabclfhbaecufgembkkk9teiucbcbydj1jjbgeabcifc98GfgbBdj1jjbdndnabZbcztgd9nmbcuhiabad9RcFFifcz4nbcuSmekaehikaik;LeeeudndnaeabVciGTmbabhixekdndnadcz9pmbabhixekabhiinaiaeydbBdbaiclfaeclfydbBdbaicwfaecwfydbBdbaicxfaecxfydbBdbaiczfhiaeczfheadc9Wfgdcs0mbkkadcl6mbinaiaeydbBdbaeclfheaiclfhiadc98fgdci0mbkkdnadTmbinaiaeRbb86bbaicefhiaecefheadcufgdmbkkabk;aeedudndnabciGTmbabhixekaecFeGc:b:c:ew2hldndnadcz9pmbabhixekabhiinaialBdbaicxfalBdbaicwfalBdbaiclfalBdbaiczfhiadc9Wfgdcs0mbkkadcl6mbinaialBdbaiclfhiadc98fgdci0mbkkdnadTmbinaiae86bbaicefhiadcufgdmbkkabkkkebcjwklz9Kbb\";\n  var wasm_simd = \"b9H79TebbbeKl9Gbb9Gvuuuuueu9Giuuub9Geueuikqbbebeedddilve9Weeeviebeoweuec:q;Aekr;leDo9TW9T9VV95dbH9F9F939H79T9F9J9H229F9Jt9VV7bb8A9TW79O9V9Wt9F9KW9J9V9KW9wWVtW949c919M9MWVbdY9TW79O9V9Wt9F9KW9J9V9KW69U9KW949c919M9MWVblE9TW79O9V9Wt9F9KW9J9V9KW69U9KW949tWG91W9U9JWbvL9TW79O9V9Wt9F9KW9J9V9KWS9P2tWV9p9JtboK9TW79O9V9Wt9F9KW9J9V9KWS9P2tWV9r919HtbrL9TW79O9V9Wt9F9KW9J9V9KWS9P2tWVT949Wbwl79IV9RbDq;t9tqlbzik9:evu8Jjjjjbcz9Rhbcbheincbhdcbhiinabcwfadfaicjuaead4ceGglE86bbaialfhiadcefgdcw9hmbkaec:q:yjjbfai86bbaecitc:q1jjbfab8Piw83ibaecefgecjd9hmbkk;h8JlHud97euo978Jjjjjbcj;kb9Rgv8Kjjjjbc9:hodnadcefal0mbcuhoaiRbbc:Ge9hmbavaialfgrad9Rad;8qbbcj;abad9UhoaicefhldnadTmbaoc;WFbGgocjdaocjd6EhwcbhDinaDae9pmeawaeaD9RaDawfae6Egqcsfgoc9WGgkci2hxakcethmaocl4cifcd4hPabaDad2fhscbhzdnincehHalhOcbhAdninaraO9RaP6miavcj;cbfaAak2fhCaOaPfhlcbhidnakc;ab6mbaral9Rc;Gb6mbcbhoinaCaofhidndndndndnaOaoco4fRbbgXciGPlbedibkaipxbbbbbbbbbbbbbbbbpklbxikaialpbblalpbbbgQclp:meaQpmbzeHdOiAlCvXoQrLgQcdp:meaQpmbzeHdOiAlCvXoQrLpxiiiiiiiiiiiiiiiip9ogLpxiiiiiiiiiiiiiiiip8JgQp5b9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibaKc:q:yjjbfpbbbgYaYpmbbbbbbbbbbbbbbbbaQp5e9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibp9UpmbedilvorzHOACXQLpPaLaQp9spklbalclfaYpQbfaKc:q:yjjbfRbbfhlxdkaialpbbwalpbbbgQclp:meaQpmbzeHdOiAlCvXoQrLpxssssssssssssssssp9ogLpxssssssssssssssssp8JgQp5b9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibaKc:q:yjjbfpbbbgYaYpmbbbbbbbbbbbbbbbbaQp5e9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibp9UpmbedilvorzHOACXQLpPaLaQp9spklbalcwfaYpQbfaKc:q:yjjbfRbbfhlxekaialpbbbpklbalczfhlkdndndndndnaXcd4ciGPlbedibkaipxbbbbbbbbbbbbbbbbpklzxikaialpbblalpbbbgQclp:meaQpmbzeHdOiAlCvXoQrLgQcdp:meaQpmbzeHdOiAlCvXoQrLpxiiiiiiiiiiiiiiiip9ogLpxiiiiiiiiiiiiiiiip8JgQp5b9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibaKc:q:yjjbfpbbbgYaYpmbbbbbbbbbbbbbbbbaQp5e9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibp9UpmbedilvorzHOACXQLpPaLaQp9spklzalclfaYpQbfaKc:q:yjjbfRbbfhlxdkaialpbbwalpbbbgQclp:meaQpmbzeHdOiAlCvXoQrLpxssssssssssssssssp9ogLpxssssssssssssssssp8JgQp5b9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibaKc:q:yjjbfpbbbgYaYpmbbbbbbbbbbbbbbbbaQp5e9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibp9UpmbedilvorzHOACXQLpPaLaQp9spklzalcwfaYpQbfaKc:q:yjjbfRbbfhlxekaialpbbbpklzalczfhlkdndndndndnaXcl4ciGPlbedibkaipxbbbbbbbbbbbbbbbbpklaxikaialpbblalpbbbgQclp:meaQpmbzeHdOiAlCvXoQrLgQcdp:meaQpmbzeHdOiAlCvXoQrLpxiiiiiiiiiiiiiiiip9ogLpxiiiiiiiiiiiiiiiip8JgQp5b9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibaKc:q:yjjbfpbbbgYaYpmbbbbbbbbbbbbbbbbaQp5e9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibp9UpmbedilvorzHOACXQLpPaLaQp9spklaalclfaYpQbfaKc:q:yjjbfRbbfhlxdkaialpbbwalpbbbgQclp:meaQpmbzeHdOiAlCvXoQrLpxssssssssssssssssp9ogLpxssssssssssssssssp8JgQp5b9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibaKc:q:yjjbfpbbbgYaYpmbbbbbbbbbbbbbbbbaQp5e9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibp9UpmbedilvorzHOACXQLpPaLaQp9spklaalcwfaYpQbfaKc:q:yjjbfRbbfhlxekaialpbbbpklaalczfhlkdndndndndnaXco4Plbedibkaipxbbbbbbbbbbbbbbbbpkl8WxikaialpbblalpbbbgQclp:meaQpmbzeHdOiAlCvXoQrLgQcdp:meaQpmbzeHdOiAlCvXoQrLpxiiiiiiiiiiiiiiiip9ogLpxiiiiiiiiiiiiiiiip8JgQp5b9cjF;8;4;W;G;ab9:9cU1:NgXcitc:q1jjbfpbibaXc:q:yjjbfpbbbgYaYpmbbbbbbbbbbbbbbbbaQp5e9cjF;8;4;W;G;ab9:9cU1:NgXcitc:q1jjbfpbibp9UpmbedilvorzHOACXQLpPaLaQp9spkl8WalclfaYpQbfaXc:q:yjjbfRbbfhlxdkaialpbbwalpbbbgQclp:meaQpmbzeHdOiAlCvXoQrLpxssssssssssssssssp9ogLpxssssssssssssssssp8JgQp5b9cjF;8;4;W;G;ab9:9cU1:NgXcitc:q1jjbfpbibaXc:q:yjjbfpbbbgYaYpmbbbbbbbbbbbbbbbbaQp5e9cjF;8;4;W;G;ab9:9cU1:NgXcitc:q1jjbfpbibp9UpmbedilvorzHOACXQLpPaLaQp9spkl8WalcwfaYpQbfaXc:q:yjjbfRbbfhlxekaialpbbbpkl8Walczfhlkaoc;abfhiaocjefak0meaihoaral9Rc;Fb0mbkkdndnaiak9pmbaici4hoinaral9RcK6mdaCaifhXdndndndndnaOaico4fRbbaocoG4ciGPlbedibkaXpxbbbbbbbbbbbbbbbbpklbxikaXalpbblalpbbbgQclp:meaQpmbzeHdOiAlCvXoQrLgQcdp:meaQpmbzeHdOiAlCvXoQrLpxiiiiiiiiiiiiiiiip9ogLpxiiiiiiiiiiiiiiiip8JgQp5b9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibaKc:q:yjjbfpbbbgYaYpmbbbbbbbbbbbbbbbbaQp5e9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibp9UpmbedilvorzHOACXQLpPaLaQp9spklbalclfaYpQbfaKc:q:yjjbfRbbfhlxdkaXalpbbwalpbbbgQclp:meaQpmbzeHdOiAlCvXoQrLpxssssssssssssssssp9ogLpxssssssssssssssssp8JgQp5b9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibaKc:q:yjjbfpbbbgYaYpmbbbbbbbbbbbbbbbbaQp5e9cjF;8;4;W;G;ab9:9cU1:NgKcitc:q1jjbfpbibp9UpmbedilvorzHOACXQLpPaLaQp9spklbalcwfaYpQbfaKc:q:yjjbfRbbfhlxekaXalpbbbpklbalczfhlkaocdfhoaiczfgiak6mbkkalTmbaAci6hHalhOaAcefgohAaoclSmdxekkcbhlaHceGmdkdnakTmbavcjdfazfhiavazfpbdbhYcbhXinaiavcj;cbfaXfgopblbgLcep9TaLpxeeeeeeeeeeeeeeeegQp9op9Hp9rgLaoakfpblbg8Acep9Ta8AaQp9op9Hp9rg8ApmbzeHdOiAlCvXoQrLgEaoamfpblbg3cep9Ta3aQp9op9Hp9rg3aoaxfpblbg5cep9Ta5aQp9op9Hp9rg5pmbzeHdOiAlCvXoQrLg8EpmbezHdiOAlvCXorQLgQaQpmbedibedibedibediaYp9UgYp9AdbbaiadfgoaYaQaQpmlvorlvorlvorlvorp9UgYp9AdbbaoadfgoaYaQaQpmwDqkwDqkwDqkwDqkp9UgYp9AdbbaoadfgoaYaQaQpmxmPsxmPsxmPsxmPsp9UgYp9AdbbaoadfgoaYaEa8EpmwDKYqk8AExm35Ps8E8FgQaQpmbedibedibedibedip9UgYp9AdbbaoadfgoaYaQaQpmlvorlvorlvorlvorp9UgYp9AdbbaoadfgoaYaQaQpmwDqkwDqkwDqkwDqkp9UgYp9AdbbaoadfgoaYaQaQpmxmPsxmPsxmPsxmPsp9UgYp9AdbbaoadfgoaYaLa8ApmwKDYq8AkEx3m5P8Es8FgLa3a5pmwKDYq8AkEx3m5P8Es8Fg8ApmbezHdiOAlvCXorQLgQaQpmbedibedibedibedip9UgYp9AdbbaoadfgoaYaQaQpmlvorlvorlvorlvorp9UgYp9AdbbaoadfgoaYaQaQpmwDqkwDqkwDqkwDqkp9UgYp9AdbbaoadfgoaYaQaQpmxmPsxmPsxmPsxmPsp9UgYp9AdbbaoadfgoaYaLa8ApmwDKYqk8AExm35Ps8E8FgQaQpmbedibedibedibedip9UgYp9AdbbaoadfgoaYaQaQpmlvorlvorlvorlvorp9UgYp9AdbbaoadfgoaYaQaQpmwDqkwDqkwDqkwDqkp9UgYp9AdbbaoadfgoaYaQaQpmxmPsxmPsxmPsxmPsp9UgYp9AdbbaoadfhiaXczfgXak6mbkkazclfgzad6mbkasavcjdfaqad2;8qbbavavcjdfaqcufad2fad;8qbbaqaDfhDc9:hoalmexikkc9:hoxekcbc99aral9Radcaadca0ESEhokavcj;kbf8Kjjjjbaokwbz:bjjjbk;uzeHu8Jjjjjbc;ae9Rgv8Kjjjjbc9:hodnaeci9UgrcHfal0mbcuhoaiRbbgwc;WeGc;Ge9hmbawcsGgDce0mbavc;abfcFecje;8kbavcUf9cu83ibavc8Wf9cu83ibavcyf9cu83ibavcaf9cu83ibavcKf9cu83ibavczf9cu83ibav9cu83iwav9cu83ibaialfc9WfhqaicefgwarfhodnaeTmbcmcsaDceSEhkcbhxcbhmcbhDcbhicbhlindnaoaq9nmbc9:hoxikdndnawRbbgrc;Ve0mbavc;abfalarcl4cu7fcsGcitfgPydlhsaPydbhzdnarcsGgPak9pmbavaiarcu7fcsGcdtfydbaxaPEhraPThPdndnadcd9hmbabaDcetfgHaz87ebaHcdfas87ebaHclfar87ebxekabaDcdtfgHazBdbaHclfasBdbaHcwfarBdbkaxaPfhxavc;abfalcitfgHarBdbaHasBdlavaicdtfarBdbavc;abfalcefcsGglcitfgHazBdbaHarBdlaiaPfhialcefhlxdkdndnaPcsSmbamaPfaPc987fcefhmxekaocefhrao8SbbgPcFeGhHdndnaPcu9mmbarhoxekaocvfhoaHcFbGhHcrhPdninar8SbbgOcFbGaPtaHVhHaOcu9kmearcefhraPcrfgPc8J9hmbxdkkarcefhokaHce4cbaHceG9R7amfhmkdndnadcd9hmbabaDcetfgraz87ebarcdfas87ebarclfam87ebxekabaDcdtfgrazBdbarclfasBdbarcwfamBdbkavc;abfalcitfgramBdbarasBdlavaicdtfamBdbavc;abfalcefcsGglcitfgrazBdbaramBdlaicefhialcefhlxekdnarcpe0mbaxcefgOavaiaqarcsGfRbbgPcl49RcsGcdtfydbaPcz6gHEhravaiaP9RcsGcdtfydbaOaHfgsaPcsGgOEhPaOThOdndnadcd9hmbabaDcetfgzax87ebazcdfar87ebazclfaP87ebxekabaDcdtfgzaxBdbazclfarBdbazcwfaPBdbkavaicdtfaxBdbavc;abfalcitfgzarBdbazaxBdlavaicefgicsGcdtfarBdbavc;abfalcefcsGcitfgzaPBdbazarBdlavaiaHfcsGgicdtfaPBdbavc;abfalcdfcsGglcitfgraxBdbaraPBdlalcefhlaiaOfhiasaOfhxxekaxcbaoRbbgzEgAarc;:eSgrfhsazcsGhCazcl4hXdndnazcs0mbascefhOxekashOavaiaX9RcsGcdtfydbhskdndnaCmbaOcefhxxekaOhxavaiaz9RcsGcdtfydbhOkdndnarTmbaocefhrxekaocdfhrao8SbegHcFeGhPdnaHcu9kmbaocofhAaPcFbGhPcrhodninar8SbbgHcFbGaotaPVhPaHcu9kmearcefhraocrfgoc8J9hmbkaAhrxekarcefhrkaPce4cbaPceG9R7amfgmhAkdndnaXcsSmbarhPxekarcefhPar8SbbgocFeGhHdnaocu9kmbarcvfhsaHcFbGhHcrhodninaP8SbbgrcFbGaotaHVhHarcu9kmeaPcefhPaocrfgoc8J9hmbkashPxekaPcefhPkaHce4cbaHceG9R7amfgmhskdndnaCcsSmbaPhoxekaPcefhoaP8SbbgrcFeGhHdnarcu9kmbaPcvfhOaHcFbGhHcrhrdninao8SbbgPcFbGartaHVhHaPcu9kmeaocefhoarcrfgrc8J9hmbkaOhoxekaocefhokaHce4cbaHceG9R7amfgmhOkdndnadcd9hmbabaDcetfgraA87ebarcdfas87ebarclfaO87ebxekabaDcdtfgraABdbarclfasBdbarcwfaOBdbkavc;abfalcitfgrasBdbaraABdlavaicdtfaABdbavc;abfalcefcsGcitfgraOBdbarasBdlavaicefgicsGcdtfasBdbavc;abfalcdfcsGcitfgraABdbaraOBdlavaiazcz6aXcsSVfgicsGcdtfaOBdbaiaCTaCcsSVfhialcifhlkawcefhwalcsGhlaicsGhiaDcifgDae6mbkkcbc99aoaqSEhokavc;aef8Kjjjjbaok:llevu8Jjjjjbcz9Rhvc9:hodnaecvfal0mbcuhoaiRbbc;:eGc;qe9hmbav9cb83iwaicefhraialfc98fhwdnaeTmbdnadcdSmbcbhDindnaraw6mbc9:skarcefhoar8SbbglcFeGhidndnalcu9mmbaohrxekarcvfhraicFbGhicrhldninao8SbbgdcFbGaltaiVhiadcu9kmeaocefhoalcrfglc8J9hmbxdkkaocefhrkabaDcdtfaicd4cbaice4ceG9R7avcwfaiceGcdtVgoydbfglBdbaoalBdbaDcefgDae9hmbxdkkcbhDindnaraw6mbc9:skarcefhoar8SbbglcFeGhidndnalcu9mmbaohrxekarcvfhraicFbGhicrhldninao8SbbgdcFbGaltaiVhiadcu9kmeaocefhoalcrfglc8J9hmbxdkkaocefhrkabaDcetfaicd4cbaice4ceG9R7avcwfaiceGcdtVgoydbfgl87ebaoalBdbaDcefgDae9hmbkkcbc99arawSEhokaok:EPliuo97eue978Jjjjjbca9Rhidndnadcl9hmbdnaec98GglTmbcbhvabhdinadadpbbbgocKp:RecKp:Sep;6egraocwp:RecKp:Sep;6earp;Geaoczp:RecKp:Sep;6egwp;Gep;Kep;LegDpxbbbbbbbbbbbbbbbbp:2egqarpxbbbjbbbjbbbjbbbjgkp9op9rp;Kegrpxbb;:9cbb;:9cbb;:9cbb;:9cararp;MeaDaDp;Meawaqawakp9op9rp;Kegrarp;Mep;Kep;Kep;Jep;Negwp;Mepxbbn0bbn0bbn0bbn0gqp;KepxFbbbFbbbFbbbFbbbp9oaopxbbbFbbbFbbbFbbbFp9op9qarawp;Meaqp;Kecwp:RepxbFbbbFbbbFbbbFbbp9op9qaDawp;Meaqp;Keczp:RepxbbFbbbFbbbFbbbFbp9op9qpkbbadczfhdavclfgval6mbkkalae9pmeaiaeciGgvcdtgdVcbczad9R;8kbaiabalcdtfglad;8qbbdnavTmbaiaipblbgocKp:RecKp:Sep;6egraocwp:RecKp:Sep;6earp;Geaoczp:RecKp:Sep;6egwp;Gep;Kep;LegDpxbbbbbbbbbbbbbbbbp:2egqarpxbbbjbbbjbbbjbbbjgkp9op9rp;Kegrpxbb;:9cbb;:9cbb;:9cbb;:9cararp;MeaDaDp;Meawaqawakp9op9rp;Kegrarp;Mep;Kep;Kep;Jep;Negwp;Mepxbbn0bbn0bbn0bbn0gqp;KepxFbbbFbbbFbbbFbbbp9oaopxbbbFbbbFbbbFbbbFp9op9qarawp;Meaqp;Kecwp:RepxbFbbbFbbbFbbbFbbp9op9qaDawp;Meaqp;Keczp:RepxbbFbbbFbbbFbbbFbp9op9qpklbkalaiad;8qbbskdnaec98GgxTmbcbhvabhdinadczfglalpbbbgopxbbbbbbFFbbbbbbFFgkp9oadpbbbgDaopmlvorxmPsCXQL358E8FpxFubbFubbFubbFubbp9op;6eaDaopmbediwDqkzHOAKY8AEgoczp:Sep;6egrp;Geaoczp:Reczp:Sep;6egwp;Gep;Kep;Legopxb;:FSb;:FSb;:FSb;:FSawaopxbbbbbbbbbbbbbbbbp:2egqawpxbbbjbbbjbbbjbbbjgmp9op9rp;Kegwawp;Meaoaop;Mearaqaramp9op9rp;Kegoaop;Mep;Kep;Kep;Jep;Negrp;Mepxbbn0bbn0bbn0bbn0gqp;Keczp:Reawarp;Meaqp;KepxFFbbFFbbFFbbFFbbp9op9qgwaoarp;Meaqp;KepxFFbbFFbbFFbbFFbbp9ogopmwDKYqk8AExm35Ps8E8Fp9qpkbbadaDakp9oawaopmbezHdiOAlvCXorQLp9qpkbbadcafhdavclfgvax6mbkkaxae9pmbaiaeciGgvcitgdfcbcaad9R;8kbaiabaxcitfglad;8qbbdnavTmbaiaipblzgopxbbbbbbFFbbbbbbFFgkp9oaipblbgDaopmlvorxmPsCXQL358E8FpxFubbFubbFubbFubbp9op;6eaDaopmbediwDqkzHOAKY8AEgoczp:Sep;6egrp;Geaoczp:Reczp:Sep;6egwp;Gep;Kep;Legopxb;:FSb;:FSb;:FSb;:FSawaopxbbbbbbbbbbbbbbbbp:2egqawpxbbbjbbbjbbbjbbbjgmp9op9rp;Kegwawp;Meaoaop;Mearaqaramp9op9rp;Kegoaop;Mep;Kep;Kep;Jep;Negrp;Mepxbbn0bbn0bbn0bbn0gqp;Keczp:Reawarp;Meaqp;KepxFFbbFFbbFFbbFFbbp9op9qgwaoarp;Meaqp;KepxFFbbFFbbFFbbFFbbp9ogopmwDKYqk8AExm35Ps8E8Fp9qpklzaiaDakp9oawaopmbezHdiOAlvCXorQLp9qpklbkalaiad;8qbbkk;4wllue97euv978Jjjjjbc8W9Rhidnaec98GglTmbcbhvabhoinaiaopbbbgraoczfgwpbbbgDpmlvorxmPsCXQL358E8Fgqczp:Segkclp:RepklbaopxbbjZbbjZbbjZbbjZpx;Zl81Z;Zl81Z;Zl81Z;Zl81Zakpxibbbibbbibbbibbbp9qp;6ep;NegkaraDpmbediwDqkzHOAKY8AEgrczp:Reczp:Sep;6ep;MegDaDp;Meakarczp:Sep;6ep;Megxaxp;Meakaqczp:Reczp:Sep;6ep;Megqaqp;Mep;Kep;Kep;Lepxbbbbbbbbbbbbbbbbp:4ep;Jepxb;:FSb;:FSb;:FSb;:FSgkp;Mepxbbn0bbn0bbn0bbn0grp;KepxFFbbFFbbFFbbFFbbgmp9oaxakp;Mearp;Keczp:Rep9qgxaqakp;Mearp;Keczp:ReaDakp;Mearp;Keamp9op9qgkpmbezHdiOAlvCXorQLgrp5baipblbpEb:T:j83ibaocwfarp5eaipblbpEe:T:j83ibawaxakpmwDKYqk8AExm35Ps8E8Fgkp5baipblbpEd:T:j83ibaocKfakp5eaipblbpEi:T:j83ibaocafhoavclfgval6mbkkdnalae9pmbaiaeciGgvcitgofcbcaao9R;8kbaiabalcitfgwao;8qbbdnavTmbaiaipblbgraipblzgDpmlvorxmPsCXQL358E8Fgqczp:Segkclp:RepklaaipxbbjZbbjZbbjZbbjZpx;Zl81Z;Zl81Z;Zl81Z;Zl81Zakpxibbbibbbibbbibbbp9qp;6ep;NegkaraDpmbediwDqkzHOAKY8AEgrczp:Reczp:Sep;6ep;MegDaDp;Meakarczp:Sep;6ep;Megxaxp;Meakaqczp:Reczp:Sep;6ep;Megqaqp;Mep;Kep;Kep;Lepxbbbbbbbbbbbbbbbbp:4ep;Jepxb;:FSb;:FSb;:FSb;:FSgkp;Mepxbbn0bbn0bbn0bbn0grp;KepxFFbbFFbbFFbbFFbbgmp9oaxakp;Mearp;Keczp:Rep9qgxaqakp;Mearp;Keczp:ReaDakp;Mearp;Keamp9op9qgkpmbezHdiOAlvCXorQLgrp5baipblapEb:T:j83ibaiarp5eaipblapEe:T:j83iwaiaxakpmwDKYqk8AExm35Ps8E8Fgkp5baipblapEd:T:j83izaiakp5eaipblapEi:T:j83iKkawaiao;8qbbkk:Pddiue978Jjjjjbc;ab9Rhidnadcd4ae2glc98GgvTmbcbhdabheinaeaepbbbgocwp:Recwp:Sep;6eaocep:SepxbbjZbbjZbbjZbbjZp:UepxbbjFbbjFbbjFbbjFp9op;Mepkbbaeczfheadclfgdav6mbkkdnaval9pmbaialciGgdcdtgeVcbc;abae9R;8kbaiabavcdtfgvae;8qbbdnadTmbaiaipblbgocwp:Recwp:Sep;6eaocep:SepxbbjZbbjZbbjZbbjZp:UepxbbjFbbjFbbjFbbjFp9op;Mepklbkavaiae;8qbbkk9teiucbcbydj1jjbgeabcifc98GfgbBdj1jjbdndnabZbcztgd9nmbcuhiabad9RcFFifcz4nbcuSmekaehikaikkkebcjwklz9Tbb\";\n  var detector = new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 3, 2, 0, 0, 5, 3, 1, 0, 1, 12, 1, 0, 10, 22, 2, 12, 0, 65, 0, 65, 0, 65, 0, 252, 10, 0, 0, 11, 7, 0, 65, 0, 253, 15, 26, 11]);\n  var wasmpack = new Uint8Array([32, 0, 65, 2, 1, 106, 34, 33, 3, 128, 11, 4, 13, 64, 6, 253, 10, 7, 15, 116, 127, 5, 8, 12, 40, 16, 19, 54, 20, 9, 27, 255, 113, 17, 42, 67, 24, 23, 146, 148, 18, 14, 22, 45, 70, 69, 56, 114, 101, 21, 25, 63, 75, 136, 108, 28, 118, 29, 73, 115]);\n  if (typeof WebAssembly !== 'object') {\n    return {\n      supported: false\n    };\n  }\n  var wasm = WebAssembly.validate(detector) ? wasm_simd : wasm_base;\n  var instance;\n  var ready = WebAssembly.instantiate(unpack(wasm), {}).then(function (result) {\n    instance = result.instance;\n    instance.exports.__wasm_call_ctors();\n  });\n  function unpack(data) {\n    var result = new Uint8Array(data.length);\n    for (var i = 0; i < data.length; ++i) {\n      var ch = data.charCodeAt(i);\n      result[i] = ch > 96 ? ch - 97 : ch > 64 ? ch - 39 : ch + 4;\n    }\n    var write = 0;\n    for (var i = 0; i < data.length; ++i) {\n      result[write++] = result[i] < 60 ? wasmpack[result[i]] : (result[i] - 60) * 64 + result[++i];\n    }\n    return result.buffer.slice(0, write);\n  }\n  function decode(fun, target, count, size, source, filter) {\n    var sbrk = instance.exports.sbrk;\n    var count4 = count + 3 & ~3;\n    var tp = sbrk(count4 * size);\n    var sp = sbrk(source.length);\n    var heap = new Uint8Array(instance.exports.memory.buffer);\n    heap.set(source, sp);\n    var res = fun(tp, count, size, sp, source.length);\n    if (res == 0 && filter) {\n      filter(tp, count4, size);\n    }\n    target.set(heap.subarray(tp, tp + count * size));\n    sbrk(tp - sbrk(0));\n    if (res != 0) {\n      throw new Error(\"Malformed buffer data: \" + res);\n    }\n  }\n  var filters = {\n    NONE: \"\",\n    OCTAHEDRAL: \"meshopt_decodeFilterOct\",\n    QUATERNION: \"meshopt_decodeFilterQuat\",\n    EXPONENTIAL: \"meshopt_decodeFilterExp\"\n  };\n  var decoders = {\n    ATTRIBUTES: \"meshopt_decodeVertexBuffer\",\n    TRIANGLES: \"meshopt_decodeIndexBuffer\",\n    INDICES: \"meshopt_decodeIndexSequence\"\n  };\n  var workers = [];\n  var requestId = 0;\n  function createWorker(url) {\n    var worker = {\n      object: new Worker(url),\n      pending: 0,\n      requests: {}\n    };\n    worker.object.onmessage = function (event) {\n      var data = event.data;\n      worker.pending -= data.count;\n      worker.requests[data.id][data.action](data.value);\n      delete worker.requests[data.id];\n    };\n    return worker;\n  }\n  function initWorkers(count) {\n    var source = \"var instance; var ready = WebAssembly.instantiate(new Uint8Array([\" + new Uint8Array(unpack(wasm)) + \"]), {})\" + \".then(function(result) { instance = result.instance; instance.exports.__wasm_call_ctors(); });\" + \"self.onmessage = workerProcess;\" + decode.toString() + workerProcess.toString();\n    var blob = new Blob([source], {\n      type: 'text/javascript'\n    });\n    var url = URL.createObjectURL(blob);\n    for (var i = 0; i < count; ++i) {\n      workers[i] = createWorker(url);\n    }\n    URL.revokeObjectURL(url);\n  }\n  function decodeWorker(count, size, source, mode, filter) {\n    var worker = workers[0];\n    for (var i = 1; i < workers.length; ++i) {\n      if (workers[i].pending < worker.pending) {\n        worker = workers[i];\n      }\n    }\n    return new Promise(function (resolve, reject) {\n      var data = new Uint8Array(source);\n      var id = requestId++;\n      worker.pending += count;\n      worker.requests[id] = {\n        resolve: resolve,\n        reject: reject\n      };\n      worker.object.postMessage({\n        id: id,\n        count: count,\n        size: size,\n        source: data,\n        mode: mode,\n        filter: filter\n      }, [data.buffer]);\n    });\n  }\n  function workerProcess(event) {\n    ready.then(function () {\n      var data = event.data;\n      try {\n        var target = new Uint8Array(data.count * data.size);\n        decode(instance.exports[data.mode], target, data.count, data.size, data.source, instance.exports[data.filter]);\n        self.postMessage({\n          id: data.id,\n          count: data.count,\n          action: \"resolve\",\n          value: target\n        }, [target.buffer]);\n      } catch (error) {\n        self.postMessage({\n          id: data.id,\n          count: data.count,\n          action: \"reject\",\n          value: error\n        });\n      }\n    });\n  }\n  return {\n    ready: ready,\n    supported: true,\n    useWorkers: function (count) {\n      initWorkers(count);\n    },\n    decodeVertexBuffer: function (target, count, size, source, filter) {\n      decode(instance.exports.meshopt_decodeVertexBuffer, target, count, size, source, instance.exports[filters[filter]]);\n    },\n    decodeIndexBuffer: function (target, count, size, source) {\n      decode(instance.exports.meshopt_decodeIndexBuffer, target, count, size, source);\n    },\n    decodeIndexSequence: function (target, count, size, source) {\n      decode(instance.exports.meshopt_decodeIndexSequence, target, count, size, source);\n    },\n    decodeGltfBuffer: function (target, count, size, source, mode, filter) {\n      decode(instance.exports[decoders[mode]], target, count, size, source, instance.exports[filters[filter]]);\n    },\n    decodeGltfBufferAsync: function (count, size, source, mode, filter) {\n      if (workers.length > 0) {\n        return decodeWorker(count, size, source, decoders[mode], filters[filter]);\n      }\n      return ready.then(function () {\n        var target = new Uint8Array(count * size);\n        decode(instance.exports[decoders[mode]], target, count, size, source, instance.exports[filters[filter]]);\n        return target;\n      });\n    }\n  };\n}();\nexport { MeshoptDecoder };", "import { BufferAttribute, BufferGeometry, Color, ColorManagement, FileLoader, Loader, LinearSRGBColorSpace, SRGBColorSpace } from 'three';\nconst _taskCache = new WeakMap();\n\n/**\n * A loader for the Draco format.\n *\n * [Draco]{@link https://google.github.io/draco/} is an open source library for compressing\n * and decompressing 3D meshes and point clouds. Compressed geometry can be significantly smaller,\n * at the cost of additional decoding time on the client device.\n *\n * Standalone Draco files have a `.drc` extension, and contain vertex positions, normals, colors,\n * and other attributes. Draco files do not contain materials, textures, animation, or node hierarchies –\n * to use these features, embed Draco geometry inside of a glTF file. A normal glTF file can be converted\n * to a Draco-compressed glTF file using [glTF-Pipeline]{@link https://github.com/CesiumGS/gltf-pipeline}.\n * When using Draco with glTF, an instance of `DRACOLoader` will be used internally by {@link GLTFLoader}.\n *\n * It is recommended to create one DRACOLoader instance and reuse it to avoid loading and creating\n * multiple decoder instances.\n *\n * `DRACOLoader` will automatically use either the JS or the WASM decoding library, based on\n * browser capabilities.\n *\n * ```js\n * const loader = new DRACOLoader();\n * loader.setDecoderPath( '/examples/jsm/libs/draco/' );\n *\n * const geometry = await dracoLoader.loadAsync( 'models/draco/bunny.drc' );\n * geometry.computeVertexNormals(); // optional\n *\n * dracoLoader.dispose();\n * ```\n *\n * @augments Loader\n * @three_import import { DRACOLoader } from 'three/addons/loaders/DRACOLoader.js';\n */\nclass DRACOLoader extends Loader {\n  /**\n   * Constructs a new Draco loader.\n   *\n   * @param {LoadingManager} [manager] - The loading manager.\n   */\n  constructor(manager) {\n    super(manager);\n    this.decoderPath = '';\n    this.decoderConfig = {};\n    this.decoderBinary = null;\n    this.decoderPending = null;\n    this.workerLimit = 4;\n    this.workerPool = [];\n    this.workerNextTaskID = 1;\n    this.workerSourceURL = '';\n    this.defaultAttributeIDs = {\n      position: 'POSITION',\n      normal: 'NORMAL',\n      color: 'COLOR',\n      uv: 'TEX_COORD'\n    };\n    this.defaultAttributeTypes = {\n      position: 'Float32Array',\n      normal: 'Float32Array',\n      color: 'Float32Array',\n      uv: 'Float32Array'\n    };\n  }\n\n  /**\n   * Provides configuration for the decoder libraries. Configuration cannot be changed after decoding begins.\n   *\n   * @param {string} path - The decoder path.\n   * @return {DRACOLoader} A reference to this loader.\n   */\n  setDecoderPath(path) {\n    this.decoderPath = path;\n    return this;\n  }\n\n  /**\n   * Provides configuration for the decoder libraries. Configuration cannot be changed after decoding begins.\n   *\n   * @param {{type:('js'|'wasm')}} config - The decoder config.\n   * @return {DRACOLoader} A reference to this loader.\n   */\n  setDecoderConfig(config) {\n    this.decoderConfig = config;\n    return this;\n  }\n\n  /**\n   * Sets the maximum number of Web Workers to be used during decoding.\n   * A lower limit may be preferable if workers are also for other tasks in the application.\n   *\n   * @param {number} workerLimit - The worker limit.\n   * @return {DRACOLoader} A reference to this loader.\n   */\n  setWorkerLimit(workerLimit) {\n    this.workerLimit = workerLimit;\n    return this;\n  }\n\n  /**\n   * Starts loading from the given URL and passes the loaded Draco asset\n   * to the `onLoad()` callback.\n   *\n   * @param {string} url - The path/URL of the file to be loaded. This can also be a data URI.\n   * @param {function(BufferGeometry)} onLoad - Executed when the loading process has been finished.\n   * @param {onProgressCallback} onProgress - Executed while the loading is in progress.\n   * @param {onErrorCallback} onError - Executed when errors occur.\n   */\n  load(url, onLoad, onProgress, onError) {\n    const loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setResponseType('arraybuffer');\n    loader.setRequestHeader(this.requestHeader);\n    loader.setWithCredentials(this.withCredentials);\n    loader.load(url, buffer => {\n      this.parse(buffer, onLoad, onError);\n    }, onProgress, onError);\n  }\n\n  /**\n   * Parses the given Draco data.\n   *\n   * @param {ArrayBuffer} buffer - The raw Draco data as an array buffer.\n   * @param {function(BufferGeometry)} onLoad - Executed when the loading/parsing process has been finished.\n   * @param {onErrorCallback} onError - Executed when errors occur.\n   */\n  parse(buffer, onLoad, onError = () => {}) {\n    this.decodeDracoFile(buffer, onLoad, null, null, SRGBColorSpace, onError).catch(onError);\n  }\n\n  //\n\n  decodeDracoFile(buffer, callback, attributeIDs, attributeTypes, vertexColorSpace = LinearSRGBColorSpace, onError = () => {}) {\n    const taskConfig = {\n      attributeIDs: attributeIDs || this.defaultAttributeIDs,\n      attributeTypes: attributeTypes || this.defaultAttributeTypes,\n      useUniqueIDs: !!attributeIDs,\n      vertexColorSpace: vertexColorSpace\n    };\n    return this.decodeGeometry(buffer, taskConfig).then(callback).catch(onError);\n  }\n  decodeGeometry(buffer, taskConfig) {\n    const taskKey = JSON.stringify(taskConfig);\n\n    // Check for an existing task using this buffer. A transferred buffer cannot be transferred\n    // again from this thread.\n    if (_taskCache.has(buffer)) {\n      const cachedTask = _taskCache.get(buffer);\n      if (cachedTask.key === taskKey) {\n        return cachedTask.promise;\n      } else if (buffer.byteLength === 0) {\n        // Technically, it would be possible to wait for the previous task to complete,\n        // transfer the buffer back, and decode again with the second configuration. That\n        // is complex, and I don't know of any reason to decode a Draco buffer twice in\n        // different ways, so this is left unimplemented.\n        throw new Error('THREE.DRACOLoader: Unable to re-decode a buffer with different ' + 'settings. Buffer has already been transferred.');\n      }\n    }\n\n    //\n\n    let worker;\n    const taskID = this.workerNextTaskID++;\n    const taskCost = buffer.byteLength;\n\n    // Obtain a worker and assign a task, and construct a geometry instance\n    // when the task completes.\n    const geometryPending = this._getWorker(taskID, taskCost).then(_worker => {\n      worker = _worker;\n      return new Promise((resolve, reject) => {\n        worker._callbacks[taskID] = {\n          resolve,\n          reject\n        };\n        worker.postMessage({\n          type: 'decode',\n          id: taskID,\n          taskConfig,\n          buffer\n        }, [buffer]);\n\n        // this.debug();\n      });\n    }).then(message => this._createGeometry(message.geometry));\n\n    // Remove task from the task list.\n    // Note: replaced '.finally()' with '.catch().then()' block - iOS 11 support (#19416)\n    geometryPending.catch(() => true).then(() => {\n      if (worker && taskID) {\n        this._releaseTask(worker, taskID);\n\n        // this.debug();\n      }\n    });\n\n    // Cache the task result.\n    _taskCache.set(buffer, {\n      key: taskKey,\n      promise: geometryPending\n    });\n    return geometryPending;\n  }\n  _createGeometry(geometryData) {\n    const geometry = new BufferGeometry();\n    if (geometryData.index) {\n      geometry.setIndex(new BufferAttribute(geometryData.index.array, 1));\n    }\n    for (let i = 0; i < geometryData.attributes.length; i++) {\n      const result = geometryData.attributes[i];\n      const name = result.name;\n      const array = result.array;\n      const itemSize = result.itemSize;\n      const attribute = new BufferAttribute(array, itemSize);\n      if (name === 'color') {\n        this._assignVertexColorSpace(attribute, result.vertexColorSpace);\n        attribute.normalized = array instanceof Float32Array === false;\n      }\n      geometry.setAttribute(name, attribute);\n    }\n    return geometry;\n  }\n  _assignVertexColorSpace(attribute, inputColorSpace) {\n    // While .drc files do not specify colorspace, the only 'official' tooling\n    // is PLY and OBJ converters, which use sRGB. We'll assume sRGB when a .drc\n    // file is passed into .load() or .parse(). GLTFLoader uses internal APIs\n    // to decode geometry, and vertex colors are already Linear-sRGB in there.\n\n    if (inputColorSpace !== SRGBColorSpace) return;\n    const _color = new Color();\n    for (let i = 0, il = attribute.count; i < il; i++) {\n      _color.fromBufferAttribute(attribute, i);\n      ColorManagement.colorSpaceToWorking(_color, SRGBColorSpace);\n      attribute.setXYZ(i, _color.r, _color.g, _color.b);\n    }\n  }\n  _loadLibrary(url, responseType) {\n    const loader = new FileLoader(this.manager);\n    loader.setPath(this.decoderPath);\n    loader.setResponseType(responseType);\n    loader.setWithCredentials(this.withCredentials);\n    return new Promise((resolve, reject) => {\n      loader.load(url, resolve, undefined, reject);\n    });\n  }\n  preload() {\n    this._initDecoder();\n    return this;\n  }\n  _initDecoder() {\n    if (this.decoderPending) return this.decoderPending;\n    const useJS = typeof WebAssembly !== 'object' || this.decoderConfig.type === 'js';\n    const librariesPending = [];\n    if (useJS) {\n      librariesPending.push(this._loadLibrary('draco_decoder.js', 'text'));\n    } else {\n      librariesPending.push(this._loadLibrary('draco_wasm_wrapper.js', 'text'));\n      librariesPending.push(this._loadLibrary('draco_decoder.wasm', 'arraybuffer'));\n    }\n    this.decoderPending = Promise.all(librariesPending).then(libraries => {\n      const jsContent = libraries[0];\n      if (!useJS) {\n        this.decoderConfig.wasmBinary = libraries[1];\n      }\n      const fn = DRACOWorker.toString();\n      const body = ['/* draco decoder */', jsContent, '', '/* worker */', fn.substring(fn.indexOf('{') + 1, fn.lastIndexOf('}'))].join('\\n');\n      this.workerSourceURL = URL.createObjectURL(new Blob([body]));\n    });\n    return this.decoderPending;\n  }\n  _getWorker(taskID, taskCost) {\n    return this._initDecoder().then(() => {\n      if (this.workerPool.length < this.workerLimit) {\n        const worker = new Worker(this.workerSourceURL);\n        worker._callbacks = {};\n        worker._taskCosts = {};\n        worker._taskLoad = 0;\n        worker.postMessage({\n          type: 'init',\n          decoderConfig: this.decoderConfig\n        });\n        worker.onmessage = function (e) {\n          const message = e.data;\n          switch (message.type) {\n            case 'decode':\n              worker._callbacks[message.id].resolve(message);\n              break;\n            case 'error':\n              worker._callbacks[message.id].reject(message);\n              break;\n            default:\n              console.error('THREE.DRACOLoader: Unexpected message, \"' + message.type + '\"');\n          }\n        };\n        this.workerPool.push(worker);\n      } else {\n        this.workerPool.sort(function (a, b) {\n          return a._taskLoad > b._taskLoad ? -1 : 1;\n        });\n      }\n      const worker = this.workerPool[this.workerPool.length - 1];\n      worker._taskCosts[taskID] = taskCost;\n      worker._taskLoad += taskCost;\n      return worker;\n    });\n  }\n  _releaseTask(worker, taskID) {\n    worker._taskLoad -= worker._taskCosts[taskID];\n    delete worker._callbacks[taskID];\n    delete worker._taskCosts[taskID];\n  }\n  debug() {\n    console.log('Task load: ', this.workerPool.map(worker => worker._taskLoad));\n  }\n  dispose() {\n    for (let i = 0; i < this.workerPool.length; ++i) {\n      this.workerPool[i].terminate();\n    }\n    this.workerPool.length = 0;\n    if (this.workerSourceURL !== '') {\n      URL.revokeObjectURL(this.workerSourceURL);\n    }\n    return this;\n  }\n}\n\n/* WEB WORKER */\n\nfunction DRACOWorker() {\n  let decoderConfig;\n  let decoderPending;\n  onmessage = function (e) {\n    const message = e.data;\n    switch (message.type) {\n      case 'init':\n        decoderConfig = message.decoderConfig;\n        decoderPending = new Promise(function (resolve /*, reject*/) {\n          decoderConfig.onModuleLoaded = function (draco) {\n            // Module is Promise-like. Wrap before resolving to avoid loop.\n            resolve({\n              draco: draco\n            });\n          };\n          DracoDecoderModule(decoderConfig); // eslint-disable-line no-undef\n        });\n        break;\n      case 'decode':\n        const buffer = message.buffer;\n        const taskConfig = message.taskConfig;\n        decoderPending.then(module => {\n          const draco = module.draco;\n          const decoder = new draco.Decoder();\n          try {\n            const geometry = decodeGeometry(draco, decoder, new Int8Array(buffer), taskConfig);\n            const buffers = geometry.attributes.map(attr => attr.array.buffer);\n            if (geometry.index) buffers.push(geometry.index.array.buffer);\n            self.postMessage({\n              type: 'decode',\n              id: message.id,\n              geometry\n            }, buffers);\n          } catch (error) {\n            console.error(error);\n            self.postMessage({\n              type: 'error',\n              id: message.id,\n              error: error.message\n            });\n          } finally {\n            draco.destroy(decoder);\n          }\n        });\n        break;\n    }\n  };\n  function decodeGeometry(draco, decoder, array, taskConfig) {\n    const attributeIDs = taskConfig.attributeIDs;\n    const attributeTypes = taskConfig.attributeTypes;\n    let dracoGeometry;\n    let decodingStatus;\n    const geometryType = decoder.GetEncodedGeometryType(array);\n    if (geometryType === draco.TRIANGULAR_MESH) {\n      dracoGeometry = new draco.Mesh();\n      decodingStatus = decoder.DecodeArrayToMesh(array, array.byteLength, dracoGeometry);\n    } else if (geometryType === draco.POINT_CLOUD) {\n      dracoGeometry = new draco.PointCloud();\n      decodingStatus = decoder.DecodeArrayToPointCloud(array, array.byteLength, dracoGeometry);\n    } else {\n      throw new Error('THREE.DRACOLoader: Unexpected geometry type.');\n    }\n    if (!decodingStatus.ok() || dracoGeometry.ptr === 0) {\n      throw new Error('THREE.DRACOLoader: Decoding failed: ' + decodingStatus.error_msg());\n    }\n    const geometry = {\n      index: null,\n      attributes: []\n    };\n\n    // Gather all vertex attributes.\n    for (const attributeName in attributeIDs) {\n      const attributeType = self[attributeTypes[attributeName]];\n      let attribute;\n      let attributeID;\n\n      // A Draco file may be created with default vertex attributes, whose attribute IDs\n      // are mapped 1:1 from their semantic name (POSITION, NORMAL, ...). Alternatively,\n      // a Draco file may contain a custom set of attributes, identified by known unique\n      // IDs. glTF files always do the latter, and `.drc` files typically do the former.\n      if (taskConfig.useUniqueIDs) {\n        attributeID = attributeIDs[attributeName];\n        attribute = decoder.GetAttributeByUniqueId(dracoGeometry, attributeID);\n      } else {\n        attributeID = decoder.GetAttributeId(dracoGeometry, draco[attributeIDs[attributeName]]);\n        if (attributeID === -1) continue;\n        attribute = decoder.GetAttribute(dracoGeometry, attributeID);\n      }\n      const attributeResult = decodeAttribute(draco, decoder, dracoGeometry, attributeName, attributeType, attribute);\n      if (attributeName === 'color') {\n        attributeResult.vertexColorSpace = taskConfig.vertexColorSpace;\n      }\n      geometry.attributes.push(attributeResult);\n    }\n\n    // Add index.\n    if (geometryType === draco.TRIANGULAR_MESH) {\n      geometry.index = decodeIndex(draco, decoder, dracoGeometry);\n    }\n    draco.destroy(dracoGeometry);\n    return geometry;\n  }\n  function decodeIndex(draco, decoder, dracoGeometry) {\n    const numFaces = dracoGeometry.num_faces();\n    const numIndices = numFaces * 3;\n    const byteLength = numIndices * 4;\n    const ptr = draco._malloc(byteLength);\n    decoder.GetTrianglesUInt32Array(dracoGeometry, byteLength, ptr);\n    const index = new Uint32Array(draco.HEAPF32.buffer, ptr, numIndices).slice();\n    draco._free(ptr);\n    return {\n      array: index,\n      itemSize: 1\n    };\n  }\n  function decodeAttribute(draco, decoder, dracoGeometry, attributeName, attributeType, attribute) {\n    const numComponents = attribute.num_components();\n    const numPoints = dracoGeometry.num_points();\n    const numValues = numPoints * numComponents;\n    const byteLength = numValues * attributeType.BYTES_PER_ELEMENT;\n    const dataType = getDracoDataType(draco, attributeType);\n    const ptr = draco._malloc(byteLength);\n    decoder.GetAttributeDataArrayForAllPoints(dracoGeometry, attribute, dataType, byteLength, ptr);\n    const array = new attributeType(draco.HEAPF32.buffer, ptr, numValues).slice();\n    draco._free(ptr);\n    return {\n      name: attributeName,\n      array: array,\n      itemSize: numComponents\n    };\n  }\n  function getDracoDataType(draco, attributeType) {\n    switch (attributeType) {\n      case Float32Array:\n        return draco.DT_FLOAT32;\n      case Int8Array:\n        return draco.DT_INT8;\n      case Int16Array:\n        return draco.DT_INT16;\n      case Int32Array:\n        return draco.DT_INT32;\n      case Uint8Array:\n        return draco.DT_UINT8;\n      case Uint16Array:\n        return draco.DT_UINT16;\n      case Uint32Array:\n        return draco.DT_UINT32;\n    }\n  }\n}\nexport { DRACOLoader };", "import { BufferAttribute, BufferGeometry, Float32BufferAttribute, InstancedBufferAttribute, InterleavedBuffer, InterleavedBufferAttribute, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, Vector3 } from 'three';\n\n/**\n * @module BufferGeometryUtils\n * @three_import import * as BufferGeometryUtils from 'three/addons/utils/BufferGeometryUtils.js';\n */\n\n/**\n * Computes vertex tangents using the MikkTSpace algorithm. MikkTSpace generates the same tangents consistently,\n * and is used in most modelling tools and normal map bakers. Use MikkTSpace for materials with normal maps,\n * because inconsistent tangents may lead to subtle visual issues in the normal map, particularly around mirrored\n * UV seams.\n *\n * In comparison to this method, {@link BufferGeometry#computeTangents} (a custom algorithm) generates tangents that\n * probably will not match the tangents in other software. The custom algorithm is sufficient for general use with a\n * custom material, and may be faster than MikkTSpace.\n *\n * Returns the original BufferGeometry. Indexed geometries will be de-indexed. Requires position, normal, and uv attributes.\n *\n * @param {BufferGeometry} geometry - The geometry to compute tangents for.\n * @param {Object} MikkTSpace - Instance of `examples/jsm/libs/mikktspace.module.js`, or `mikktspace` npm package.\n * Await `MikkTSpace.ready` before use.\n * @param {boolean} [negateSign=true] - Whether to negate the sign component (.w) of each tangent.\n * Required for normal map conventions in some formats, including glTF.\n * @return {BufferGeometry} The updated geometry.\n */\nfunction computeMikkTSpaceTangents(geometry, MikkTSpace, negateSign = true) {\n  if (!MikkTSpace || !MikkTSpace.isReady) {\n    throw new Error('BufferGeometryUtils: Initialized MikkTSpace library required.');\n  }\n  if (!geometry.hasAttribute('position') || !geometry.hasAttribute('normal') || !geometry.hasAttribute('uv')) {\n    throw new Error('BufferGeometryUtils: Tangents require \"position\", \"normal\", and \"uv\" attributes.');\n  }\n  function getAttributeArray(attribute) {\n    if (attribute.normalized || attribute.isInterleavedBufferAttribute) {\n      const dstArray = new Float32Array(attribute.count * attribute.itemSize);\n      for (let i = 0, j = 0; i < attribute.count; i++) {\n        dstArray[j++] = attribute.getX(i);\n        dstArray[j++] = attribute.getY(i);\n        if (attribute.itemSize > 2) {\n          dstArray[j++] = attribute.getZ(i);\n        }\n      }\n      return dstArray;\n    }\n    if (attribute.array instanceof Float32Array) {\n      return attribute.array;\n    }\n    return new Float32Array(attribute.array);\n  }\n\n  // MikkTSpace algorithm requires non-indexed input.\n\n  const _geometry = geometry.index ? geometry.toNonIndexed() : geometry;\n\n  // Compute vertex tangents.\n\n  const tangents = MikkTSpace.generateTangents(getAttributeArray(_geometry.attributes.position), getAttributeArray(_geometry.attributes.normal), getAttributeArray(_geometry.attributes.uv));\n\n  // Texture coordinate convention of glTF differs from the apparent\n  // default of the MikkTSpace library; .w component must be flipped.\n\n  if (negateSign) {\n    for (let i = 3; i < tangents.length; i += 4) {\n      tangents[i] *= -1;\n    }\n  }\n\n  //\n\n  _geometry.setAttribute('tangent', new BufferAttribute(tangents, 4));\n  if (geometry !== _geometry) {\n    geometry.copy(_geometry);\n  }\n  return geometry;\n}\n\n/**\n * Merges a set of geometries into a single instance. All geometries must have compatible attributes.\n *\n * @param {Array<BufferGeometry>} geometries - The geometries to merge.\n * @param {boolean} [useGroups=false] - Whether to use groups or not.\n * @return {?BufferGeometry} The merged geometry. Returns `null` if the merge does not succeed.\n */\nfunction mergeGeometries(geometries, useGroups = false) {\n  const isIndexed = geometries[0].index !== null;\n  const attributesUsed = new Set(Object.keys(geometries[0].attributes));\n  const morphAttributesUsed = new Set(Object.keys(geometries[0].morphAttributes));\n  const attributes = {};\n  const morphAttributes = {};\n  const morphTargetsRelative = geometries[0].morphTargetsRelative;\n  const mergedGeometry = new BufferGeometry();\n  let offset = 0;\n  for (let i = 0; i < geometries.length; ++i) {\n    const geometry = geometries[i];\n    let attributesCount = 0;\n\n    // ensure that all geometries are indexed, or none\n\n    if (isIndexed !== (geometry.index !== null)) {\n      console.error('THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them.');\n      return null;\n    }\n\n    // gather attributes, exit early if they're different\n\n    for (const name in geometry.attributes) {\n      if (!attributesUsed.has(name)) {\n        console.error('THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. All geometries must have compatible attributes; make sure \"' + name + '\" attribute exists among all geometries, or in none of them.');\n        return null;\n      }\n      if (attributes[name] === undefined) attributes[name] = [];\n      attributes[name].push(geometry.attributes[name]);\n      attributesCount++;\n    }\n\n    // ensure geometries have the same number of attributes\n\n    if (attributesCount !== attributesUsed.size) {\n      console.error('THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. Make sure all geometries have the same number of attributes.');\n      return null;\n    }\n\n    // gather morph attributes, exit early if they're different\n\n    if (morphTargetsRelative !== geometry.morphTargetsRelative) {\n      console.error('THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. .morphTargetsRelative must be consistent throughout all geometries.');\n      return null;\n    }\n    for (const name in geometry.morphAttributes) {\n      if (!morphAttributesUsed.has(name)) {\n        console.error('THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '.  .morphAttributes must be consistent throughout all geometries.');\n        return null;\n      }\n      if (morphAttributes[name] === undefined) morphAttributes[name] = [];\n      morphAttributes[name].push(geometry.morphAttributes[name]);\n    }\n    if (useGroups) {\n      let count;\n      if (isIndexed) {\n        count = geometry.index.count;\n      } else if (geometry.attributes.position !== undefined) {\n        count = geometry.attributes.position.count;\n      } else {\n        console.error('THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. The geometry must have either an index or a position attribute');\n        return null;\n      }\n      mergedGeometry.addGroup(offset, count, i);\n      offset += count;\n    }\n  }\n\n  // merge indices\n\n  if (isIndexed) {\n    let indexOffset = 0;\n    const mergedIndex = [];\n    for (let i = 0; i < geometries.length; ++i) {\n      const index = geometries[i].index;\n      for (let j = 0; j < index.count; ++j) {\n        mergedIndex.push(index.getX(j) + indexOffset);\n      }\n      indexOffset += geometries[i].attributes.position.count;\n    }\n    mergedGeometry.setIndex(mergedIndex);\n  }\n\n  // merge attributes\n\n  for (const name in attributes) {\n    const mergedAttribute = mergeAttributes(attributes[name]);\n    if (!mergedAttribute) {\n      console.error('THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the ' + name + ' attribute.');\n      return null;\n    }\n    mergedGeometry.setAttribute(name, mergedAttribute);\n  }\n\n  // merge morph attributes\n\n  for (const name in morphAttributes) {\n    const numMorphTargets = morphAttributes[name][0].length;\n    if (numMorphTargets === 0) break;\n    mergedGeometry.morphAttributes = mergedGeometry.morphAttributes || {};\n    mergedGeometry.morphAttributes[name] = [];\n    for (let i = 0; i < numMorphTargets; ++i) {\n      const morphAttributesToMerge = [];\n      for (let j = 0; j < morphAttributes[name].length; ++j) {\n        morphAttributesToMerge.push(morphAttributes[name][j][i]);\n      }\n      const mergedMorphAttribute = mergeAttributes(morphAttributesToMerge);\n      if (!mergedMorphAttribute) {\n        console.error('THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the ' + name + ' morphAttribute.');\n        return null;\n      }\n      mergedGeometry.morphAttributes[name].push(mergedMorphAttribute);\n    }\n  }\n  return mergedGeometry;\n}\n\n/**\n * Merges a set of attributes into a single instance. All attributes must have compatible properties and types.\n * Instances of {@link InterleavedBufferAttribute} are not supported.\n *\n * @param {Array<BufferAttribute>} attributes - The attributes to merge.\n * @return {?BufferAttribute} The merged attribute. Returns `null` if the merge does not succeed.\n */\nfunction mergeAttributes(attributes) {\n  let TypedArray;\n  let itemSize;\n  let normalized;\n  let gpuType = -1;\n  let arrayLength = 0;\n  for (let i = 0; i < attributes.length; ++i) {\n    const attribute = attributes[i];\n    if (TypedArray === undefined) TypedArray = attribute.array.constructor;\n    if (TypedArray !== attribute.array.constructor) {\n      console.error('THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes.');\n      return null;\n    }\n    if (itemSize === undefined) itemSize = attribute.itemSize;\n    if (itemSize !== attribute.itemSize) {\n      console.error('THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes.');\n      return null;\n    }\n    if (normalized === undefined) normalized = attribute.normalized;\n    if (normalized !== attribute.normalized) {\n      console.error('THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes.');\n      return null;\n    }\n    if (gpuType === -1) gpuType = attribute.gpuType;\n    if (gpuType !== attribute.gpuType) {\n      console.error('THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.gpuType must be consistent across matching attributes.');\n      return null;\n    }\n    arrayLength += attribute.count * itemSize;\n  }\n  const array = new TypedArray(arrayLength);\n  const result = new BufferAttribute(array, itemSize, normalized);\n  let offset = 0;\n  for (let i = 0; i < attributes.length; ++i) {\n    const attribute = attributes[i];\n    if (attribute.isInterleavedBufferAttribute) {\n      const tupleOffset = offset / itemSize;\n      for (let j = 0, l = attribute.count; j < l; j++) {\n        for (let c = 0; c < itemSize; c++) {\n          const value = attribute.getComponent(j, c);\n          result.setComponent(j + tupleOffset, c, value);\n        }\n      }\n    } else {\n      array.set(attribute.array, offset);\n    }\n    offset += attribute.count * itemSize;\n  }\n  if (gpuType !== undefined) {\n    result.gpuType = gpuType;\n  }\n  return result;\n}\n\n/**\n * Performs a deep clone of the given buffer attribute.\n *\n * @param {BufferAttribute} attribute - The attribute to clone.\n * @return {BufferAttribute} The cloned attribute.\n */\nfunction deepCloneAttribute(attribute) {\n  if (attribute.isInstancedInterleavedBufferAttribute || attribute.isInterleavedBufferAttribute) {\n    return deinterleaveAttribute(attribute);\n  }\n  if (attribute.isInstancedBufferAttribute) {\n    return new InstancedBufferAttribute().copy(attribute);\n  }\n  return new BufferAttribute().copy(attribute);\n}\n\n/**\n * Interleaves a set of attributes and returns a new array of corresponding attributes that share a\n * single {@link InterleavedBuffer} instance. All attributes must have compatible types.\n *\n * @param {Array<BufferAttribute>} attributes - The attributes to interleave.\n * @return {Array<InterleavedBufferAttribute>} An array of interleaved attributes. If interleave does not succeed, the method returns `null`.\n */\nfunction interleaveAttributes(attributes) {\n  // Interleaves the provided attributes into an InterleavedBuffer and returns\n  // a set of InterleavedBufferAttributes for each attribute\n  let TypedArray;\n  let arrayLength = 0;\n  let stride = 0;\n\n  // calculate the length and type of the interleavedBuffer\n  for (let i = 0, l = attributes.length; i < l; ++i) {\n    const attribute = attributes[i];\n    if (TypedArray === undefined) TypedArray = attribute.array.constructor;\n    if (TypedArray !== attribute.array.constructor) {\n      console.error('AttributeBuffers of different types cannot be interleaved');\n      return null;\n    }\n    arrayLength += attribute.array.length;\n    stride += attribute.itemSize;\n  }\n\n  // Create the set of buffer attributes\n  const interleavedBuffer = new InterleavedBuffer(new TypedArray(arrayLength), stride);\n  let offset = 0;\n  const res = [];\n  const getters = ['getX', 'getY', 'getZ', 'getW'];\n  const setters = ['setX', 'setY', 'setZ', 'setW'];\n  for (let j = 0, l = attributes.length; j < l; j++) {\n    const attribute = attributes[j];\n    const itemSize = attribute.itemSize;\n    const count = attribute.count;\n    const iba = new InterleavedBufferAttribute(interleavedBuffer, itemSize, offset, attribute.normalized);\n    res.push(iba);\n    offset += itemSize;\n\n    // Move the data for each attribute into the new interleavedBuffer\n    // at the appropriate offset\n    for (let c = 0; c < count; c++) {\n      for (let k = 0; k < itemSize; k++) {\n        iba[setters[k]](c, attribute[getters[k]](c));\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Returns a new, non-interleaved version of the given attribute.\n *\n * @param {InterleavedBufferAttribute} attribute - The interleaved attribute.\n * @return {BufferAttribute} The non-interleaved attribute.\n */\nfunction deinterleaveAttribute(attribute) {\n  const cons = attribute.data.array.constructor;\n  const count = attribute.count;\n  const itemSize = attribute.itemSize;\n  const normalized = attribute.normalized;\n  const array = new cons(count * itemSize);\n  let newAttribute;\n  if (attribute.isInstancedInterleavedBufferAttribute) {\n    newAttribute = new InstancedBufferAttribute(array, itemSize, normalized, attribute.meshPerAttribute);\n  } else {\n    newAttribute = new BufferAttribute(array, itemSize, normalized);\n  }\n  for (let i = 0; i < count; i++) {\n    newAttribute.setX(i, attribute.getX(i));\n    if (itemSize >= 2) {\n      newAttribute.setY(i, attribute.getY(i));\n    }\n    if (itemSize >= 3) {\n      newAttribute.setZ(i, attribute.getZ(i));\n    }\n    if (itemSize >= 4) {\n      newAttribute.setW(i, attribute.getW(i));\n    }\n  }\n  return newAttribute;\n}\n\n/**\n * Deinterleaves all attributes on the given geometry.\n *\n * @param {BufferGeometry} geometry - The geometry to deinterleave.\n */\nfunction deinterleaveGeometry(geometry) {\n  const attributes = geometry.attributes;\n  const morphTargets = geometry.morphTargets;\n  const attrMap = new Map();\n  for (const key in attributes) {\n    const attr = attributes[key];\n    if (attr.isInterleavedBufferAttribute) {\n      if (!attrMap.has(attr)) {\n        attrMap.set(attr, deinterleaveAttribute(attr));\n      }\n      attributes[key] = attrMap.get(attr);\n    }\n  }\n  for (const key in morphTargets) {\n    const attr = morphTargets[key];\n    if (attr.isInterleavedBufferAttribute) {\n      if (!attrMap.has(attr)) {\n        attrMap.set(attr, deinterleaveAttribute(attr));\n      }\n      morphTargets[key] = attrMap.get(attr);\n    }\n  }\n}\n\n/**\n * Returns the amount of bytes used by all attributes to represent the geometry.\n *\n * @param {BufferGeometry} geometry - The geometry.\n * @return {number} The estimate bytes used.\n */\nfunction estimateBytesUsed(geometry) {\n  // Return the estimated memory used by this geometry in bytes\n  // Calculate using itemSize, count, and BYTES_PER_ELEMENT to account\n  // for InterleavedBufferAttributes.\n  let mem = 0;\n  for (const name in geometry.attributes) {\n    const attr = geometry.getAttribute(name);\n    mem += attr.count * attr.itemSize * attr.array.BYTES_PER_ELEMENT;\n  }\n  const indices = geometry.getIndex();\n  mem += indices ? indices.count * indices.itemSize * indices.array.BYTES_PER_ELEMENT : 0;\n  return mem;\n}\n\n/**\n * Returns a new geometry with vertices for which all similar vertex attributes (within tolerance) are merged.\n *\n * @param {BufferGeometry} geometry - The geometry to merge vertices for.\n * @param {number} [tolerance=1e-4] - The tolerance value.\n * @return {BufferGeometry} - The new geometry with merged vertices.\n */\nfunction mergeVertices(geometry, tolerance = 1e-4) {\n  tolerance = Math.max(tolerance, Number.EPSILON);\n\n  // Generate an index buffer if the geometry doesn't have one, or optimize it\n  // if it's already available.\n  const hashToIndex = {};\n  const indices = geometry.getIndex();\n  const positions = geometry.getAttribute('position');\n  const vertexCount = indices ? indices.count : positions.count;\n\n  // next value for triangle indices\n  let nextIndex = 0;\n\n  // attributes and new attribute arrays\n  const attributeNames = Object.keys(geometry.attributes);\n  const tmpAttributes = {};\n  const tmpMorphAttributes = {};\n  const newIndices = [];\n  const getters = ['getX', 'getY', 'getZ', 'getW'];\n  const setters = ['setX', 'setY', 'setZ', 'setW'];\n\n  // Initialize the arrays, allocating space conservatively. Extra\n  // space will be trimmed in the last step.\n  for (let i = 0, l = attributeNames.length; i < l; i++) {\n    const name = attributeNames[i];\n    const attr = geometry.attributes[name];\n    tmpAttributes[name] = new attr.constructor(new attr.array.constructor(attr.count * attr.itemSize), attr.itemSize, attr.normalized);\n    const morphAttributes = geometry.morphAttributes[name];\n    if (morphAttributes) {\n      if (!tmpMorphAttributes[name]) tmpMorphAttributes[name] = [];\n      morphAttributes.forEach((morphAttr, i) => {\n        const array = new morphAttr.array.constructor(morphAttr.count * morphAttr.itemSize);\n        tmpMorphAttributes[name][i] = new morphAttr.constructor(array, morphAttr.itemSize, morphAttr.normalized);\n      });\n    }\n  }\n\n  // convert the error tolerance to an amount of decimal places to truncate to\n  const halfTolerance = tolerance * 0.5;\n  const exponent = Math.log10(1 / tolerance);\n  const hashMultiplier = Math.pow(10, exponent);\n  const hashAdditive = halfTolerance * hashMultiplier;\n  for (let i = 0; i < vertexCount; i++) {\n    const index = indices ? indices.getX(i) : i;\n\n    // Generate a hash for the vertex attributes at the current index 'i'\n    let hash = '';\n    for (let j = 0, l = attributeNames.length; j < l; j++) {\n      const name = attributeNames[j];\n      const attribute = geometry.getAttribute(name);\n      const itemSize = attribute.itemSize;\n      for (let k = 0; k < itemSize; k++) {\n        // double tilde truncates the decimal value\n        hash += `${~~(attribute[getters[k]](index) * hashMultiplier + hashAdditive)},`;\n      }\n    }\n\n    // Add another reference to the vertex if it's already\n    // used by another index\n    if (hash in hashToIndex) {\n      newIndices.push(hashToIndex[hash]);\n    } else {\n      // copy data to the new index in the temporary attributes\n      for (let j = 0, l = attributeNames.length; j < l; j++) {\n        const name = attributeNames[j];\n        const attribute = geometry.getAttribute(name);\n        const morphAttributes = geometry.morphAttributes[name];\n        const itemSize = attribute.itemSize;\n        const newArray = tmpAttributes[name];\n        const newMorphArrays = tmpMorphAttributes[name];\n        for (let k = 0; k < itemSize; k++) {\n          const getterFunc = getters[k];\n          const setterFunc = setters[k];\n          newArray[setterFunc](nextIndex, attribute[getterFunc](index));\n          if (morphAttributes) {\n            for (let m = 0, ml = morphAttributes.length; m < ml; m++) {\n              newMorphArrays[m][setterFunc](nextIndex, morphAttributes[m][getterFunc](index));\n            }\n          }\n        }\n      }\n      hashToIndex[hash] = nextIndex;\n      newIndices.push(nextIndex);\n      nextIndex++;\n    }\n  }\n\n  // generate result BufferGeometry\n  const result = geometry.clone();\n  for (const name in geometry.attributes) {\n    const tmpAttribute = tmpAttributes[name];\n    result.setAttribute(name, new tmpAttribute.constructor(tmpAttribute.array.slice(0, nextIndex * tmpAttribute.itemSize), tmpAttribute.itemSize, tmpAttribute.normalized));\n    if (!(name in tmpMorphAttributes)) continue;\n    for (let j = 0; j < tmpMorphAttributes[name].length; j++) {\n      const tmpMorphAttribute = tmpMorphAttributes[name][j];\n      result.morphAttributes[name][j] = new tmpMorphAttribute.constructor(tmpMorphAttribute.array.slice(0, nextIndex * tmpMorphAttribute.itemSize), tmpMorphAttribute.itemSize, tmpMorphAttribute.normalized);\n    }\n  }\n\n  // indices\n\n  result.setIndex(newIndices);\n  return result;\n}\n\n/**\n * Returns a new indexed geometry based on `TrianglesDrawMode` draw mode.\n * This mode corresponds to the `gl.TRIANGLES` primitive in WebGL.\n *\n * @param {BufferGeometry} geometry - The geometry to convert.\n * @param {number} drawMode - The current draw mode.\n * @return {BufferGeometry} The new geometry using `TrianglesDrawMode`.\n */\nfunction toTrianglesDrawMode(geometry, drawMode) {\n  if (drawMode === TrianglesDrawMode) {\n    console.warn('THREE.BufferGeometryUtils.toTrianglesDrawMode(): Geometry already defined as triangles.');\n    return geometry;\n  }\n  if (drawMode === TriangleFanDrawMode || drawMode === TriangleStripDrawMode) {\n    let index = geometry.getIndex();\n\n    // generate index if not present\n\n    if (index === null) {\n      const indices = [];\n      const position = geometry.getAttribute('position');\n      if (position !== undefined) {\n        for (let i = 0; i < position.count; i++) {\n          indices.push(i);\n        }\n        geometry.setIndex(indices);\n        index = geometry.getIndex();\n      } else {\n        console.error('THREE.BufferGeometryUtils.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.');\n        return geometry;\n      }\n    }\n\n    //\n\n    const numberOfTriangles = index.count - 2;\n    const newIndices = [];\n    if (drawMode === TriangleFanDrawMode) {\n      // gl.TRIANGLE_FAN\n\n      for (let i = 1; i <= numberOfTriangles; i++) {\n        newIndices.push(index.getX(0));\n        newIndices.push(index.getX(i));\n        newIndices.push(index.getX(i + 1));\n      }\n    } else {\n      // gl.TRIANGLE_STRIP\n\n      for (let i = 0; i < numberOfTriangles; i++) {\n        if (i % 2 === 0) {\n          newIndices.push(index.getX(i));\n          newIndices.push(index.getX(i + 1));\n          newIndices.push(index.getX(i + 2));\n        } else {\n          newIndices.push(index.getX(i + 2));\n          newIndices.push(index.getX(i + 1));\n          newIndices.push(index.getX(i));\n        }\n      }\n    }\n    if (newIndices.length / 3 !== numberOfTriangles) {\n      console.error('THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unable to generate correct amount of triangles.');\n    }\n\n    // build final geometry\n\n    const newGeometry = geometry.clone();\n    newGeometry.setIndex(newIndices);\n    newGeometry.clearGroups();\n    return newGeometry;\n  } else {\n    console.error('THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unknown draw mode:', drawMode);\n    return geometry;\n  }\n}\n\n/**\n * Calculates the morphed attributes of a morphed/skinned BufferGeometry.\n *\n * Helpful for Raytracing or Decals (i.e. a `DecalGeometry` applied to a morphed Object with a `BufferGeometry`\n * will use the original `BufferGeometry`, not the morphed/skinned one, generating an incorrect result.\n * Using this function to create a shadow `Object3`D the `DecalGeometry` can be correctly generated).\n *\n * @param {Mesh|Line|Points} object - The 3D object to compute morph attributes for.\n * @return {Object} An object with original position/normal attributes and morphed ones.\n */\nfunction computeMorphedAttributes(object) {\n  const _vA = new Vector3();\n  const _vB = new Vector3();\n  const _vC = new Vector3();\n  const _tempA = new Vector3();\n  const _tempB = new Vector3();\n  const _tempC = new Vector3();\n  const _morphA = new Vector3();\n  const _morphB = new Vector3();\n  const _morphC = new Vector3();\n  function _calculateMorphedAttributeData(object, attribute, morphAttribute, morphTargetsRelative, a, b, c, modifiedAttributeArray) {\n    _vA.fromBufferAttribute(attribute, a);\n    _vB.fromBufferAttribute(attribute, b);\n    _vC.fromBufferAttribute(attribute, c);\n    const morphInfluences = object.morphTargetInfluences;\n    if (morphAttribute && morphInfluences) {\n      _morphA.set(0, 0, 0);\n      _morphB.set(0, 0, 0);\n      _morphC.set(0, 0, 0);\n      for (let i = 0, il = morphAttribute.length; i < il; i++) {\n        const influence = morphInfluences[i];\n        const morph = morphAttribute[i];\n        if (influence === 0) continue;\n        _tempA.fromBufferAttribute(morph, a);\n        _tempB.fromBufferAttribute(morph, b);\n        _tempC.fromBufferAttribute(morph, c);\n        if (morphTargetsRelative) {\n          _morphA.addScaledVector(_tempA, influence);\n          _morphB.addScaledVector(_tempB, influence);\n          _morphC.addScaledVector(_tempC, influence);\n        } else {\n          _morphA.addScaledVector(_tempA.sub(_vA), influence);\n          _morphB.addScaledVector(_tempB.sub(_vB), influence);\n          _morphC.addScaledVector(_tempC.sub(_vC), influence);\n        }\n      }\n      _vA.add(_morphA);\n      _vB.add(_morphB);\n      _vC.add(_morphC);\n    }\n    if (object.isSkinnedMesh) {\n      object.applyBoneTransform(a, _vA);\n      object.applyBoneTransform(b, _vB);\n      object.applyBoneTransform(c, _vC);\n    }\n    modifiedAttributeArray[a * 3 + 0] = _vA.x;\n    modifiedAttributeArray[a * 3 + 1] = _vA.y;\n    modifiedAttributeArray[a * 3 + 2] = _vA.z;\n    modifiedAttributeArray[b * 3 + 0] = _vB.x;\n    modifiedAttributeArray[b * 3 + 1] = _vB.y;\n    modifiedAttributeArray[b * 3 + 2] = _vB.z;\n    modifiedAttributeArray[c * 3 + 0] = _vC.x;\n    modifiedAttributeArray[c * 3 + 1] = _vC.y;\n    modifiedAttributeArray[c * 3 + 2] = _vC.z;\n  }\n  const geometry = object.geometry;\n  const material = object.material;\n  let a, b, c;\n  const index = geometry.index;\n  const positionAttribute = geometry.attributes.position;\n  const morphPosition = geometry.morphAttributes.position;\n  const morphTargetsRelative = geometry.morphTargetsRelative;\n  const normalAttribute = geometry.attributes.normal;\n  const morphNormal = geometry.morphAttributes.position;\n  const groups = geometry.groups;\n  const drawRange = geometry.drawRange;\n  let i, j, il, jl;\n  let group;\n  let start, end;\n  const modifiedPosition = new Float32Array(positionAttribute.count * positionAttribute.itemSize);\n  const modifiedNormal = new Float32Array(normalAttribute.count * normalAttribute.itemSize);\n  if (index !== null) {\n    // indexed buffer geometry\n\n    if (Array.isArray(material)) {\n      for (i = 0, il = groups.length; i < il; i++) {\n        group = groups[i];\n        start = Math.max(group.start, drawRange.start);\n        end = Math.min(group.start + group.count, drawRange.start + drawRange.count);\n        for (j = start, jl = end; j < jl; j += 3) {\n          a = index.getX(j);\n          b = index.getX(j + 1);\n          c = index.getX(j + 2);\n          _calculateMorphedAttributeData(object, positionAttribute, morphPosition, morphTargetsRelative, a, b, c, modifiedPosition);\n          _calculateMorphedAttributeData(object, normalAttribute, morphNormal, morphTargetsRelative, a, b, c, modifiedNormal);\n        }\n      }\n    } else {\n      start = Math.max(0, drawRange.start);\n      end = Math.min(index.count, drawRange.start + drawRange.count);\n      for (i = start, il = end; i < il; i += 3) {\n        a = index.getX(i);\n        b = index.getX(i + 1);\n        c = index.getX(i + 2);\n        _calculateMorphedAttributeData(object, positionAttribute, morphPosition, morphTargetsRelative, a, b, c, modifiedPosition);\n        _calculateMorphedAttributeData(object, normalAttribute, morphNormal, morphTargetsRelative, a, b, c, modifiedNormal);\n      }\n    }\n  } else {\n    // non-indexed buffer geometry\n\n    if (Array.isArray(material)) {\n      for (i = 0, il = groups.length; i < il; i++) {\n        group = groups[i];\n        start = Math.max(group.start, drawRange.start);\n        end = Math.min(group.start + group.count, drawRange.start + drawRange.count);\n        for (j = start, jl = end; j < jl; j += 3) {\n          a = j;\n          b = j + 1;\n          c = j + 2;\n          _calculateMorphedAttributeData(object, positionAttribute, morphPosition, morphTargetsRelative, a, b, c, modifiedPosition);\n          _calculateMorphedAttributeData(object, normalAttribute, morphNormal, morphTargetsRelative, a, b, c, modifiedNormal);\n        }\n      }\n    } else {\n      start = Math.max(0, drawRange.start);\n      end = Math.min(positionAttribute.count, drawRange.start + drawRange.count);\n      for (i = start, il = end; i < il; i += 3) {\n        a = i;\n        b = i + 1;\n        c = i + 2;\n        _calculateMorphedAttributeData(object, positionAttribute, morphPosition, morphTargetsRelative, a, b, c, modifiedPosition);\n        _calculateMorphedAttributeData(object, normalAttribute, morphNormal, morphTargetsRelative, a, b, c, modifiedNormal);\n      }\n    }\n  }\n  const morphedPositionAttribute = new Float32BufferAttribute(modifiedPosition, 3);\n  const morphedNormalAttribute = new Float32BufferAttribute(modifiedNormal, 3);\n  return {\n    positionAttribute: positionAttribute,\n    normalAttribute: normalAttribute,\n    morphedPositionAttribute: morphedPositionAttribute,\n    morphedNormalAttribute: morphedNormalAttribute\n  };\n}\n\n/**\n * Merges the {@link BufferGeometry#groups} for the given geometry.\n *\n * @param {BufferGeometry} geometry - The geometry to modify.\n * @return {BufferGeometry} - The updated geometry\n */\nfunction mergeGroups(geometry) {\n  if (geometry.groups.length === 0) {\n    console.warn('THREE.BufferGeometryUtils.mergeGroups(): No groups are defined. Nothing to merge.');\n    return geometry;\n  }\n  let groups = geometry.groups;\n\n  // sort groups by material index\n\n  groups = groups.sort((a, b) => {\n    if (a.materialIndex !== b.materialIndex) return a.materialIndex - b.materialIndex;\n    return a.start - b.start;\n  });\n\n  // create index for non-indexed geometries\n\n  if (geometry.getIndex() === null) {\n    const positionAttribute = geometry.getAttribute('position');\n    const indices = [];\n    for (let i = 0; i < positionAttribute.count; i += 3) {\n      indices.push(i, i + 1, i + 2);\n    }\n    geometry.setIndex(indices);\n  }\n\n  // sort index\n\n  const index = geometry.getIndex();\n  const newIndices = [];\n  for (let i = 0; i < groups.length; i++) {\n    const group = groups[i];\n    const groupStart = group.start;\n    const groupLength = groupStart + group.count;\n    for (let j = groupStart; j < groupLength; j++) {\n      newIndices.push(index.getX(j));\n    }\n  }\n  geometry.dispose(); // Required to force buffer recreation\n  geometry.setIndex(newIndices);\n\n  // update groups indices\n\n  let start = 0;\n  for (let i = 0; i < groups.length; i++) {\n    const group = groups[i];\n    group.start = start;\n    start += group.count;\n  }\n\n  // merge groups\n\n  let currentGroup = groups[0];\n  geometry.groups = [currentGroup];\n  for (let i = 1; i < groups.length; i++) {\n    const group = groups[i];\n    if (currentGroup.materialIndex === group.materialIndex) {\n      currentGroup.count += group.count;\n    } else {\n      currentGroup = group;\n      geometry.groups.push(currentGroup);\n    }\n  }\n  return geometry;\n}\n\n/**\n * Modifies the supplied geometry if it is non-indexed, otherwise creates a new,\n * non-indexed geometry. Returns the geometry with smooth normals everywhere except\n * faces that meet at an angle greater than the crease angle.\n *\n * @param {BufferGeometry} geometry - The geometry to modify.\n * @param {number} [creaseAngle=Math.PI/3] - The crease angle in radians.\n * @return {BufferGeometry} - The updated geometry\n */\nfunction toCreasedNormals(geometry, creaseAngle = Math.PI / 3 /* 60 degrees */) {\n  const creaseDot = Math.cos(creaseAngle);\n  const hashMultiplier = (1 + 1e-10) * 1e2;\n\n  // reusable vectors\n  const verts = [new Vector3(), new Vector3(), new Vector3()];\n  const tempVec1 = new Vector3();\n  const tempVec2 = new Vector3();\n  const tempNorm = new Vector3();\n  const tempNorm2 = new Vector3();\n\n  // hashes a vector\n  function hashVertex(v) {\n    const x = ~~(v.x * hashMultiplier);\n    const y = ~~(v.y * hashMultiplier);\n    const z = ~~(v.z * hashMultiplier);\n    return `${x},${y},${z}`;\n  }\n\n  // BufferGeometry.toNonIndexed() warns if the geometry is non-indexed\n  // and returns the original geometry\n  const resultGeometry = geometry.index ? geometry.toNonIndexed() : geometry;\n  const posAttr = resultGeometry.attributes.position;\n  const vertexMap = {};\n\n  // find all the normals shared by commonly located vertices\n  for (let i = 0, l = posAttr.count / 3; i < l; i++) {\n    const i3 = 3 * i;\n    const a = verts[0].fromBufferAttribute(posAttr, i3 + 0);\n    const b = verts[1].fromBufferAttribute(posAttr, i3 + 1);\n    const c = verts[2].fromBufferAttribute(posAttr, i3 + 2);\n    tempVec1.subVectors(c, b);\n    tempVec2.subVectors(a, b);\n\n    // add the normal to the map for all vertices\n    const normal = new Vector3().crossVectors(tempVec1, tempVec2).normalize();\n    for (let n = 0; n < 3; n++) {\n      const vert = verts[n];\n      const hash = hashVertex(vert);\n      if (!(hash in vertexMap)) {\n        vertexMap[hash] = [];\n      }\n      vertexMap[hash].push(normal);\n    }\n  }\n\n  // average normals from all vertices that share a common location if they are within the\n  // provided crease threshold\n  const normalArray = new Float32Array(posAttr.count * 3);\n  const normAttr = new BufferAttribute(normalArray, 3, false);\n  for (let i = 0, l = posAttr.count / 3; i < l; i++) {\n    // get the face normal for this vertex\n    const i3 = 3 * i;\n    const a = verts[0].fromBufferAttribute(posAttr, i3 + 0);\n    const b = verts[1].fromBufferAttribute(posAttr, i3 + 1);\n    const c = verts[2].fromBufferAttribute(posAttr, i3 + 2);\n    tempVec1.subVectors(c, b);\n    tempVec2.subVectors(a, b);\n    tempNorm.crossVectors(tempVec1, tempVec2).normalize();\n\n    // average all normals that meet the threshold and set the normal value\n    for (let n = 0; n < 3; n++) {\n      const vert = verts[n];\n      const hash = hashVertex(vert);\n      const otherNormals = vertexMap[hash];\n      tempNorm2.set(0, 0, 0);\n      for (let k = 0, lk = otherNormals.length; k < lk; k++) {\n        const otherNorm = otherNormals[k];\n        if (tempNorm.dot(otherNorm) > creaseDot) {\n          tempNorm2.add(otherNorm);\n        }\n      }\n      tempNorm2.normalize();\n      normAttr.setXYZ(i3 + n, tempNorm2.x, tempNorm2.y, tempNorm2.z);\n    }\n  }\n  resultGeometry.setAttribute('normal', normAttr);\n  return resultGeometry;\n}\nexport { computeMikkTSpaceTangents, mergeGeometries, mergeAttributes, deepCloneAttribute, deinterleaveAttribute, deinterleaveGeometry, interleaveAttributes, estimateBytesUsed, mergeVertices, toTrianglesDrawMode, computeMorphedAttributes, mergeGroups, toCreasedNormals };", "import { AnimationClip, Bone, Box3, BufferAttribute, BufferGeometry, ClampToEdgeWrapping, Color, ColorManagement, DirectionalLight, DoubleSide, FileLoader, FrontSide, Group, ImageBitmapLoader, InstancedMesh, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, Line, LineBasicMaterial, LineLoop, LineSegments, LinearFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, Loader, LoaderUtils, Material, MathUtils, Matrix4, Mesh, MeshBasicMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MirroredRepeatWrapping, NearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NumberKeyframeTrack, Object3D, OrthographicCamera, PerspectiveCamera, PointLight, Points, PointsMaterial, PropertyBinding, Quaternion, QuaternionKeyframeTrack, RepeatWrapping, Skeleton, SkinnedMesh, Sphere, SpotLight, Texture, TextureLoader, TriangleFanDrawMode, TriangleStripDrawMode, Vector2, Vector3, VectorKeyframeTrack, SRGBColorSpace, InstancedBufferAttribute } from 'three';\nimport { toTrianglesDrawMode } from '../utils/BufferGeometryUtils.js';\n\n/**\n * A loader for the glTF 2.0 format.\n *\n * [glTF]{@link https://www.khronos.org/gltf/} (GL Transmission Format) is an [open format specification]{@link https://github.com/KhronosGroup/glTF/tree/main/specification/2.0}\n * for efficient delivery and loading of 3D content. Assets may be provided either in JSON (.gltf) or binary (.glb)\n * format. External files store textures (.jpg, .png) and additional binary data (.bin). A glTF asset may deliver\n * one or more scenes, including meshes, materials, textures, skins, skeletons, morph targets, animations, lights,\n * and/or cameras.\n *\n * `GLTFLoader` uses {@link ImageBitmapLoader} whenever possible. Be advised that image bitmaps are not\n * automatically GC-collected when they are no longer referenced, and they require special handling during\n * the disposal process.\n *\n * `GLTFLoader` supports the following glTF 2.0 extensions:\n * - KHR_draco_mesh_compression\n * - KHR_materials_clearcoat\n * - KHR_materials_dispersion\n * - KHR_materials_ior\n * - KHR_materials_specular\n * - KHR_materials_transmission\n * - KHR_materials_iridescence\n * - KHR_materials_unlit\n * - KHR_materials_volume\n * - KHR_mesh_quantization\n * - KHR_lights_punctual\n * - KHR_texture_basisu\n * - KHR_texture_transform\n * - EXT_texture_webp\n * - EXT_meshopt_compression\n * - EXT_mesh_gpu_instancing\n *\n * The following glTF 2.0 extension is supported by an external user plugin:\n * - [KHR_materials_variants]{@link https://github.com/takahirox/three-gltf-extensions}\n * - [MSFT_texture_dds]{@link https://github.com/takahirox/three-gltf-extensions}\n *\n * ```js\n * const loader = new GLTFLoader();\n *\n * // Optional: Provide a DRACOLoader instance to decode compressed mesh data\n * const dracoLoader = new DRACOLoader();\n * dracoLoader.setDecoderPath( '/examples/jsm/libs/draco/' );\n * loader.setDRACOLoader( dracoLoader );\n *\n * const gltf = await loader.loadAsync( 'models/gltf/duck/duck.gltf' );\n * scene.add( gltf.scene );\n * ```\n *\n * @augments Loader\n * @three_import import { GLTFLoader } from 'three/addons/loaders/GLTFLoader.js';\n */\nclass GLTFLoader extends Loader {\n  /**\n   * Constructs a new glTF loader.\n   *\n   * @param {LoadingManager} [manager] - The loading manager.\n   */\n  constructor(manager) {\n    super(manager);\n    this.dracoLoader = null;\n    this.ktx2Loader = null;\n    this.meshoptDecoder = null;\n    this.pluginCallbacks = [];\n    this.register(function (parser) {\n      return new GLTFMaterialsClearcoatExtension(parser);\n    });\n    this.register(function (parser) {\n      return new GLTFMaterialsDispersionExtension(parser);\n    });\n    this.register(function (parser) {\n      return new GLTFTextureBasisUExtension(parser);\n    });\n    this.register(function (parser) {\n      return new GLTFTextureWebPExtension(parser);\n    });\n    this.register(function (parser) {\n      return new GLTFTextureAVIFExtension(parser);\n    });\n    this.register(function (parser) {\n      return new GLTFMaterialsSheenExtension(parser);\n    });\n    this.register(function (parser) {\n      return new GLTFMaterialsTransmissionExtension(parser);\n    });\n    this.register(function (parser) {\n      return new GLTFMaterialsVolumeExtension(parser);\n    });\n    this.register(function (parser) {\n      return new GLTFMaterialsIorExtension(parser);\n    });\n    this.register(function (parser) {\n      return new GLTFMaterialsEmissiveStrengthExtension(parser);\n    });\n    this.register(function (parser) {\n      return new GLTFMaterialsSpecularExtension(parser);\n    });\n    this.register(function (parser) {\n      return new GLTFMaterialsIridescenceExtension(parser);\n    });\n    this.register(function (parser) {\n      return new GLTFMaterialsAnisotropyExtension(parser);\n    });\n    this.register(function (parser) {\n      return new GLTFMaterialsBumpExtension(parser);\n    });\n    this.register(function (parser) {\n      return new GLTFLightsExtension(parser);\n    });\n    this.register(function (parser) {\n      return new GLTFMeshoptCompression(parser);\n    });\n    this.register(function (parser) {\n      return new GLTFMeshGpuInstancing(parser);\n    });\n  }\n\n  /**\n   * Starts loading from the given URL and passes the loaded glTF asset\n   * to the `onLoad()` callback.\n   *\n   * @param {string} url - The path/URL of the file to be loaded. This can also be a data URI.\n   * @param {function(GLTFLoader~LoadObject)} onLoad - Executed when the loading process has been finished.\n   * @param {onProgressCallback} onProgress - Executed while the loading is in progress.\n   * @param {onErrorCallback} onError - Executed when errors occur.\n   */\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    let resourcePath;\n    if (this.resourcePath !== '') {\n      resourcePath = this.resourcePath;\n    } else if (this.path !== '') {\n      // If a base path is set, resources will be relative paths from that plus the relative path of the gltf file\n      // Example  path = 'https://my-cnd-server.com/', url = 'assets/models/model.gltf'\n      // resourcePath = 'https://my-cnd-server.com/assets/models/'\n      // referenced resource 'model.bin' will be loaded from 'https://my-cnd-server.com/assets/models/model.bin'\n      // referenced resource '../textures/texture.png' will be loaded from 'https://my-cnd-server.com/assets/textures/texture.png'\n      const relativeUrl = LoaderUtils.extractUrlBase(url);\n      resourcePath = LoaderUtils.resolveURL(relativeUrl, this.path);\n    } else {\n      resourcePath = LoaderUtils.extractUrlBase(url);\n    }\n\n    // Tells the LoadingManager to track an extra item, which resolves after\n    // the model is fully loaded. This means the count of items loaded will\n    // be incorrect, but ensures manager.onLoad() does not fire early.\n    this.manager.itemStart(url);\n    const _onError = function (e) {\n      if (onError) {\n        onError(e);\n      } else {\n        console.error(e);\n      }\n      scope.manager.itemError(url);\n      scope.manager.itemEnd(url);\n    };\n    const loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setResponseType('arraybuffer');\n    loader.setRequestHeader(this.requestHeader);\n    loader.setWithCredentials(this.withCredentials);\n    loader.load(url, function (data) {\n      try {\n        scope.parse(data, resourcePath, function (gltf) {\n          onLoad(gltf);\n          scope.manager.itemEnd(url);\n        }, _onError);\n      } catch (e) {\n        _onError(e);\n      }\n    }, onProgress, _onError);\n  }\n\n  /**\n   * Sets the given Draco loader to this loader. Required for decoding assets\n   * compressed with the `KHR_draco_mesh_compression` extension.\n   *\n   * @param {DRACOLoader} dracoLoader - The Draco loader to set.\n   * @return {GLTFLoader} A reference to this loader.\n   */\n  setDRACOLoader(dracoLoader) {\n    this.dracoLoader = dracoLoader;\n    return this;\n  }\n\n  /**\n   * Sets the given KTX2 loader to this loader. Required for loading KTX2\n   * compressed textures.\n   *\n   * @param {KTX2Loader} ktx2Loader - The KTX2 loader to set.\n   * @return {GLTFLoader} A reference to this loader.\n   */\n  setKTX2Loader(ktx2Loader) {\n    this.ktx2Loader = ktx2Loader;\n    return this;\n  }\n\n  /**\n   * Sets the given meshopt decoder. Required for decoding assets\n   * compressed with the `EXT_meshopt_compression` extension.\n   *\n   * @param {Object} meshoptDecoder - The meshopt decoder to set.\n   * @return {GLTFLoader} A reference to this loader.\n   */\n  setMeshoptDecoder(meshoptDecoder) {\n    this.meshoptDecoder = meshoptDecoder;\n    return this;\n  }\n\n  /**\n   * Registers a plugin callback. This API is internally used to implement the various\n   * glTF extensions but can also used by third-party code to add additional logic\n   * to the loader.\n   *\n   * @param {function(parser:GLTFParser)} callback - The callback function to register.\n   * @return {GLTFLoader} A reference to this loader.\n   */\n  register(callback) {\n    if (this.pluginCallbacks.indexOf(callback) === -1) {\n      this.pluginCallbacks.push(callback);\n    }\n    return this;\n  }\n\n  /**\n   * Unregisters a plugin callback.\n   *\n   * @param {Function} callback - The callback function to unregister.\n   * @return {GLTFLoader} A reference to this loader.\n   */\n  unregister(callback) {\n    if (this.pluginCallbacks.indexOf(callback) !== -1) {\n      this.pluginCallbacks.splice(this.pluginCallbacks.indexOf(callback), 1);\n    }\n    return this;\n  }\n\n  /**\n   * Parses the given FBX data and returns the resulting group.\n   *\n   * @param {string|ArrayBuffer} data - The raw glTF data.\n   * @param {string} path - The URL base path.\n   * @param {function(GLTFLoader~LoadObject)} onLoad - Executed when the loading process has been finished.\n   * @param {onErrorCallback} onError - Executed when errors occur.\n   */\n  parse(data, path, onLoad, onError) {\n    let json;\n    const extensions = {};\n    const plugins = {};\n    const textDecoder = new TextDecoder();\n    if (typeof data === 'string') {\n      json = JSON.parse(data);\n    } else if (data instanceof ArrayBuffer) {\n      const magic = textDecoder.decode(new Uint8Array(data, 0, 4));\n      if (magic === BINARY_EXTENSION_HEADER_MAGIC) {\n        try {\n          extensions[EXTENSIONS.KHR_BINARY_GLTF] = new GLTFBinaryExtension(data);\n        } catch (error) {\n          if (onError) onError(error);\n          return;\n        }\n        json = JSON.parse(extensions[EXTENSIONS.KHR_BINARY_GLTF].content);\n      } else {\n        json = JSON.parse(textDecoder.decode(data));\n      }\n    } else {\n      json = data;\n    }\n    if (json.asset === undefined || json.asset.version[0] < 2) {\n      if (onError) onError(new Error('THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported.'));\n      return;\n    }\n    const parser = new GLTFParser(json, {\n      path: path || this.resourcePath || '',\n      crossOrigin: this.crossOrigin,\n      requestHeader: this.requestHeader,\n      manager: this.manager,\n      ktx2Loader: this.ktx2Loader,\n      meshoptDecoder: this.meshoptDecoder\n    });\n    parser.fileLoader.setRequestHeader(this.requestHeader);\n    for (let i = 0; i < this.pluginCallbacks.length; i++) {\n      const plugin = this.pluginCallbacks[i](parser);\n      if (!plugin.name) console.error('THREE.GLTFLoader: Invalid plugin found: missing name');\n      plugins[plugin.name] = plugin;\n\n      // Workaround to avoid determining as unknown extension\n      // in addUnknownExtensionsToUserData().\n      // Remove this workaround if we move all the existing\n      // extension handlers to plugin system\n      extensions[plugin.name] = true;\n    }\n    if (json.extensionsUsed) {\n      for (let i = 0; i < json.extensionsUsed.length; ++i) {\n        const extensionName = json.extensionsUsed[i];\n        const extensionsRequired = json.extensionsRequired || [];\n        switch (extensionName) {\n          case EXTENSIONS.KHR_MATERIALS_UNLIT:\n            extensions[extensionName] = new GLTFMaterialsUnlitExtension();\n            break;\n          case EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:\n            extensions[extensionName] = new GLTFDracoMeshCompressionExtension(json, this.dracoLoader);\n            break;\n          case EXTENSIONS.KHR_TEXTURE_TRANSFORM:\n            extensions[extensionName] = new GLTFTextureTransformExtension();\n            break;\n          case EXTENSIONS.KHR_MESH_QUANTIZATION:\n            extensions[extensionName] = new GLTFMeshQuantizationExtension();\n            break;\n          default:\n            if (extensionsRequired.indexOf(extensionName) >= 0 && plugins[extensionName] === undefined) {\n              console.warn('THREE.GLTFLoader: Unknown extension \"' + extensionName + '\".');\n            }\n        }\n      }\n    }\n    parser.setExtensions(extensions);\n    parser.setPlugins(plugins);\n    parser.parse(onLoad, onError);\n  }\n\n  /**\n   * Async version of {@link GLTFLoader#parse}.\n   *\n   * @async\n   * @param {string|ArrayBuffer} data - The raw glTF data.\n   * @param {string} path - The URL base path.\n   * @return {Promise<GLTFLoader~LoadObject>} A Promise that resolves with the loaded glTF when the parsing has been finished.\n   */\n  parseAsync(data, path) {\n    const scope = this;\n    return new Promise(function (resolve, reject) {\n      scope.parse(data, path, resolve, reject);\n    });\n  }\n}\n\n/* GLTFREGISTRY */\n\nfunction GLTFRegistry() {\n  let objects = {};\n  return {\n    get: function (key) {\n      return objects[key];\n    },\n    add: function (key, object) {\n      objects[key] = object;\n    },\n    remove: function (key) {\n      delete objects[key];\n    },\n    removeAll: function () {\n      objects = {};\n    }\n  };\n}\n\n/*********************************/\n/********** EXTENSIONS ***********/\n/*********************************/\n\nconst EXTENSIONS = {\n  KHR_BINARY_GLTF: 'KHR_binary_glTF',\n  KHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\n  KHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\n  KHR_MATERIALS_CLEARCOAT: 'KHR_materials_clearcoat',\n  KHR_MATERIALS_DISPERSION: 'KHR_materials_dispersion',\n  KHR_MATERIALS_IOR: 'KHR_materials_ior',\n  KHR_MATERIALS_SHEEN: 'KHR_materials_sheen',\n  KHR_MATERIALS_SPECULAR: 'KHR_materials_specular',\n  KHR_MATERIALS_TRANSMISSION: 'KHR_materials_transmission',\n  KHR_MATERIALS_IRIDESCENCE: 'KHR_materials_iridescence',\n  KHR_MATERIALS_ANISOTROPY: 'KHR_materials_anisotropy',\n  KHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\n  KHR_MATERIALS_VOLUME: 'KHR_materials_volume',\n  KHR_TEXTURE_BASISU: 'KHR_texture_basisu',\n  KHR_TEXTURE_TRANSFORM: 'KHR_texture_transform',\n  KHR_MESH_QUANTIZATION: 'KHR_mesh_quantization',\n  KHR_MATERIALS_EMISSIVE_STRENGTH: 'KHR_materials_emissive_strength',\n  EXT_MATERIALS_BUMP: 'EXT_materials_bump',\n  EXT_TEXTURE_WEBP: 'EXT_texture_webp',\n  EXT_TEXTURE_AVIF: 'EXT_texture_avif',\n  EXT_MESHOPT_COMPRESSION: 'EXT_meshopt_compression',\n  EXT_MESH_GPU_INSTANCING: 'EXT_mesh_gpu_instancing'\n};\n\n/**\n * Punctual Lights Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n *\n * @private\n */\nclass GLTFLightsExtension {\n  constructor(parser) {\n    this.parser = parser;\n    this.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL;\n\n    // Object3D instance caches\n    this.cache = {\n      refs: {},\n      uses: {}\n    };\n  }\n  _markDefs() {\n    const parser = this.parser;\n    const nodeDefs = this.parser.json.nodes || [];\n    for (let nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex++) {\n      const nodeDef = nodeDefs[nodeIndex];\n      if (nodeDef.extensions && nodeDef.extensions[this.name] && nodeDef.extensions[this.name].light !== undefined) {\n        parser._addNodeRef(this.cache, nodeDef.extensions[this.name].light);\n      }\n    }\n  }\n  _loadLight(lightIndex) {\n    const parser = this.parser;\n    const cacheKey = 'light:' + lightIndex;\n    let dependency = parser.cache.get(cacheKey);\n    if (dependency) return dependency;\n    const json = parser.json;\n    const extensions = json.extensions && json.extensions[this.name] || {};\n    const lightDefs = extensions.lights || [];\n    const lightDef = lightDefs[lightIndex];\n    let lightNode;\n    const color = new Color(0xffffff);\n    if (lightDef.color !== undefined) color.setRGB(lightDef.color[0], lightDef.color[1], lightDef.color[2], LinearSRGBColorSpace);\n    const range = lightDef.range !== undefined ? lightDef.range : 0;\n    switch (lightDef.type) {\n      case 'directional':\n        lightNode = new DirectionalLight(color);\n        lightNode.target.position.set(0, 0, -1);\n        lightNode.add(lightNode.target);\n        break;\n      case 'point':\n        lightNode = new PointLight(color);\n        lightNode.distance = range;\n        break;\n      case 'spot':\n        lightNode = new SpotLight(color);\n        lightNode.distance = range;\n        // Handle spotlight properties.\n        lightDef.spot = lightDef.spot || {};\n        lightDef.spot.innerConeAngle = lightDef.spot.innerConeAngle !== undefined ? lightDef.spot.innerConeAngle : 0;\n        lightDef.spot.outerConeAngle = lightDef.spot.outerConeAngle !== undefined ? lightDef.spot.outerConeAngle : Math.PI / 4.0;\n        lightNode.angle = lightDef.spot.outerConeAngle;\n        lightNode.penumbra = 1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle;\n        lightNode.target.position.set(0, 0, -1);\n        lightNode.add(lightNode.target);\n        break;\n      default:\n        throw new Error('THREE.GLTFLoader: Unexpected light type: ' + lightDef.type);\n    }\n\n    // Some lights (e.g. spot) default to a position other than the origin. Reset the position\n    // here, because node-level parsing will only override position if explicitly specified.\n    lightNode.position.set(0, 0, 0);\n    assignExtrasToUserData(lightNode, lightDef);\n    if (lightDef.intensity !== undefined) lightNode.intensity = lightDef.intensity;\n    lightNode.name = parser.createUniqueName(lightDef.name || 'light_' + lightIndex);\n    dependency = Promise.resolve(lightNode);\n    parser.cache.add(cacheKey, dependency);\n    return dependency;\n  }\n  getDependency(type, index) {\n    if (type !== 'light') return;\n    return this._loadLight(index);\n  }\n  createNodeAttachment(nodeIndex) {\n    const self = this;\n    const parser = this.parser;\n    const json = parser.json;\n    const nodeDef = json.nodes[nodeIndex];\n    const lightDef = nodeDef.extensions && nodeDef.extensions[this.name] || {};\n    const lightIndex = lightDef.light;\n    if (lightIndex === undefined) return null;\n    return this._loadLight(lightIndex).then(function (light) {\n      return parser._getNodeRef(self.cache, lightIndex, light);\n    });\n  }\n}\n\n/**\n * Unlit Materials Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit\n *\n * @private\n */\nclass GLTFMaterialsUnlitExtension {\n  constructor() {\n    this.name = EXTENSIONS.KHR_MATERIALS_UNLIT;\n  }\n  getMaterialType() {\n    return MeshBasicMaterial;\n  }\n  extendParams(materialParams, materialDef, parser) {\n    const pending = [];\n    materialParams.color = new Color(1.0, 1.0, 1.0);\n    materialParams.opacity = 1.0;\n    const metallicRoughness = materialDef.pbrMetallicRoughness;\n    if (metallicRoughness) {\n      if (Array.isArray(metallicRoughness.baseColorFactor)) {\n        const array = metallicRoughness.baseColorFactor;\n        materialParams.color.setRGB(array[0], array[1], array[2], LinearSRGBColorSpace);\n        materialParams.opacity = array[3];\n      }\n      if (metallicRoughness.baseColorTexture !== undefined) {\n        pending.push(parser.assignTexture(materialParams, 'map', metallicRoughness.baseColorTexture, SRGBColorSpace));\n      }\n    }\n    return Promise.all(pending);\n  }\n}\n\n/**\n * Materials Emissive Strength Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/blob/5768b3ce0ef32bc39cdf1bef10b948586635ead3/extensions/2.0/Khronos/KHR_materials_emissive_strength/README.md\n *\n * @private\n */\nclass GLTFMaterialsEmissiveStrengthExtension {\n  constructor(parser) {\n    this.parser = parser;\n    this.name = EXTENSIONS.KHR_MATERIALS_EMISSIVE_STRENGTH;\n  }\n  extendMaterialParams(materialIndex, materialParams) {\n    const parser = this.parser;\n    const materialDef = parser.json.materials[materialIndex];\n    if (!materialDef.extensions || !materialDef.extensions[this.name]) {\n      return Promise.resolve();\n    }\n    const emissiveStrength = materialDef.extensions[this.name].emissiveStrength;\n    if (emissiveStrength !== undefined) {\n      materialParams.emissiveIntensity = emissiveStrength;\n    }\n    return Promise.resolve();\n  }\n}\n\n/**\n * Clearcoat Materials Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_clearcoat\n *\n * @private\n */\nclass GLTFMaterialsClearcoatExtension {\n  constructor(parser) {\n    this.parser = parser;\n    this.name = EXTENSIONS.KHR_MATERIALS_CLEARCOAT;\n  }\n  getMaterialType(materialIndex) {\n    const parser = this.parser;\n    const materialDef = parser.json.materials[materialIndex];\n    if (!materialDef.extensions || !materialDef.extensions[this.name]) return null;\n    return MeshPhysicalMaterial;\n  }\n  extendMaterialParams(materialIndex, materialParams) {\n    const parser = this.parser;\n    const materialDef = parser.json.materials[materialIndex];\n    if (!materialDef.extensions || !materialDef.extensions[this.name]) {\n      return Promise.resolve();\n    }\n    const pending = [];\n    const extension = materialDef.extensions[this.name];\n    if (extension.clearcoatFactor !== undefined) {\n      materialParams.clearcoat = extension.clearcoatFactor;\n    }\n    if (extension.clearcoatTexture !== undefined) {\n      pending.push(parser.assignTexture(materialParams, 'clearcoatMap', extension.clearcoatTexture));\n    }\n    if (extension.clearcoatRoughnessFactor !== undefined) {\n      materialParams.clearcoatRoughness = extension.clearcoatRoughnessFactor;\n    }\n    if (extension.clearcoatRoughnessTexture !== undefined) {\n      pending.push(parser.assignTexture(materialParams, 'clearcoatRoughnessMap', extension.clearcoatRoughnessTexture));\n    }\n    if (extension.clearcoatNormalTexture !== undefined) {\n      pending.push(parser.assignTexture(materialParams, 'clearcoatNormalMap', extension.clearcoatNormalTexture));\n      if (extension.clearcoatNormalTexture.scale !== undefined) {\n        const scale = extension.clearcoatNormalTexture.scale;\n        materialParams.clearcoatNormalScale = new Vector2(scale, scale);\n      }\n    }\n    return Promise.all(pending);\n  }\n}\n\n/**\n * Materials dispersion Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/main/extensions/2.0/Khronos/KHR_materials_dispersion\n *\n * @private\n */\nclass GLTFMaterialsDispersionExtension {\n  constructor(parser) {\n    this.parser = parser;\n    this.name = EXTENSIONS.KHR_MATERIALS_DISPERSION;\n  }\n  getMaterialType(materialIndex) {\n    const parser = this.parser;\n    const materialDef = parser.json.materials[materialIndex];\n    if (!materialDef.extensions || !materialDef.extensions[this.name]) return null;\n    return MeshPhysicalMaterial;\n  }\n  extendMaterialParams(materialIndex, materialParams) {\n    const parser = this.parser;\n    const materialDef = parser.json.materials[materialIndex];\n    if (!materialDef.extensions || !materialDef.extensions[this.name]) {\n      return Promise.resolve();\n    }\n    const extension = materialDef.extensions[this.name];\n    materialParams.dispersion = extension.dispersion !== undefined ? extension.dispersion : 0;\n    return Promise.resolve();\n  }\n}\n\n/**\n * Iridescence Materials Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_iridescence\n *\n * @private\n */\nclass GLTFMaterialsIridescenceExtension {\n  constructor(parser) {\n    this.parser = parser;\n    this.name = EXTENSIONS.KHR_MATERIALS_IRIDESCENCE;\n  }\n  getMaterialType(materialIndex) {\n    const parser = this.parser;\n    const materialDef = parser.json.materials[materialIndex];\n    if (!materialDef.extensions || !materialDef.extensions[this.name]) return null;\n    return MeshPhysicalMaterial;\n  }\n  extendMaterialParams(materialIndex, materialParams) {\n    const parser = this.parser;\n    const materialDef = parser.json.materials[materialIndex];\n    if (!materialDef.extensions || !materialDef.extensions[this.name]) {\n      return Promise.resolve();\n    }\n    const pending = [];\n    const extension = materialDef.extensions[this.name];\n    if (extension.iridescenceFactor !== undefined) {\n      materialParams.iridescence = extension.iridescenceFactor;\n    }\n    if (extension.iridescenceTexture !== undefined) {\n      pending.push(parser.assignTexture(materialParams, 'iridescenceMap', extension.iridescenceTexture));\n    }\n    if (extension.iridescenceIor !== undefined) {\n      materialParams.iridescenceIOR = extension.iridescenceIor;\n    }\n    if (materialParams.iridescenceThicknessRange === undefined) {\n      materialParams.iridescenceThicknessRange = [100, 400];\n    }\n    if (extension.iridescenceThicknessMinimum !== undefined) {\n      materialParams.iridescenceThicknessRange[0] = extension.iridescenceThicknessMinimum;\n    }\n    if (extension.iridescenceThicknessMaximum !== undefined) {\n      materialParams.iridescenceThicknessRange[1] = extension.iridescenceThicknessMaximum;\n    }\n    if (extension.iridescenceThicknessTexture !== undefined) {\n      pending.push(parser.assignTexture(materialParams, 'iridescenceThicknessMap', extension.iridescenceThicknessTexture));\n    }\n    return Promise.all(pending);\n  }\n}\n\n/**\n * Sheen Materials Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/main/extensions/2.0/Khronos/KHR_materials_sheen\n *\n * @private\n */\nclass GLTFMaterialsSheenExtension {\n  constructor(parser) {\n    this.parser = parser;\n    this.name = EXTENSIONS.KHR_MATERIALS_SHEEN;\n  }\n  getMaterialType(materialIndex) {\n    const parser = this.parser;\n    const materialDef = parser.json.materials[materialIndex];\n    if (!materialDef.extensions || !materialDef.extensions[this.name]) return null;\n    return MeshPhysicalMaterial;\n  }\n  extendMaterialParams(materialIndex, materialParams) {\n    const parser = this.parser;\n    const materialDef = parser.json.materials[materialIndex];\n    if (!materialDef.extensions || !materialDef.extensions[this.name]) {\n      return Promise.resolve();\n    }\n    const pending = [];\n    materialParams.sheenColor = new Color(0, 0, 0);\n    materialParams.sheenRoughness = 0;\n    materialParams.sheen = 1;\n    const extension = materialDef.extensions[this.name];\n    if (extension.sheenColorFactor !== undefined) {\n      const colorFactor = extension.sheenColorFactor;\n      materialParams.sheenColor.setRGB(colorFactor[0], colorFactor[1], colorFactor[2], LinearSRGBColorSpace);\n    }\n    if (extension.sheenRoughnessFactor !== undefined) {\n      materialParams.sheenRoughness = extension.sheenRoughnessFactor;\n    }\n    if (extension.sheenColorTexture !== undefined) {\n      pending.push(parser.assignTexture(materialParams, 'sheenColorMap', extension.sheenColorTexture, SRGBColorSpace));\n    }\n    if (extension.sheenRoughnessTexture !== undefined) {\n      pending.push(parser.assignTexture(materialParams, 'sheenRoughnessMap', extension.sheenRoughnessTexture));\n    }\n    return Promise.all(pending);\n  }\n}\n\n/**\n * Transmission Materials Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_transmission\n * Draft: https://github.com/KhronosGroup/glTF/pull/1698\n *\n * @private\n */\nclass GLTFMaterialsTransmissionExtension {\n  constructor(parser) {\n    this.parser = parser;\n    this.name = EXTENSIONS.KHR_MATERIALS_TRANSMISSION;\n  }\n  getMaterialType(materialIndex) {\n    const parser = this.parser;\n    const materialDef = parser.json.materials[materialIndex];\n    if (!materialDef.extensions || !materialDef.extensions[this.name]) return null;\n    return MeshPhysicalMaterial;\n  }\n  extendMaterialParams(materialIndex, materialParams) {\n    const parser = this.parser;\n    const materialDef = parser.json.materials[materialIndex];\n    if (!materialDef.extensions || !materialDef.extensions[this.name]) {\n      return Promise.resolve();\n    }\n    const pending = [];\n    const extension = materialDef.extensions[this.name];\n    if (extension.transmissionFactor !== undefined) {\n      materialParams.transmission = extension.transmissionFactor;\n    }\n    if (extension.transmissionTexture !== undefined) {\n      pending.push(parser.assignTexture(materialParams, 'transmissionMap', extension.transmissionTexture));\n    }\n    return Promise.all(pending);\n  }\n}\n\n/**\n * Materials Volume Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_volume\n *\n * @private\n */\nclass GLTFMaterialsVolumeExtension {\n  constructor(parser) {\n    this.parser = parser;\n    this.name = EXTENSIONS.KHR_MATERIALS_VOLUME;\n  }\n  getMaterialType(materialIndex) {\n    const parser = this.parser;\n    const materialDef = parser.json.materials[materialIndex];\n    if (!materialDef.extensions || !materialDef.extensions[this.name]) return null;\n    return MeshPhysicalMaterial;\n  }\n  extendMaterialParams(materialIndex, materialParams) {\n    const parser = this.parser;\n    const materialDef = parser.json.materials[materialIndex];\n    if (!materialDef.extensions || !materialDef.extensions[this.name]) {\n      return Promise.resolve();\n    }\n    const pending = [];\n    const extension = materialDef.extensions[this.name];\n    materialParams.thickness = extension.thicknessFactor !== undefined ? extension.thicknessFactor : 0;\n    if (extension.thicknessTexture !== undefined) {\n      pending.push(parser.assignTexture(materialParams, 'thicknessMap', extension.thicknessTexture));\n    }\n    materialParams.attenuationDistance = extension.attenuationDistance || Infinity;\n    const colorArray = extension.attenuationColor || [1, 1, 1];\n    materialParams.attenuationColor = new Color().setRGB(colorArray[0], colorArray[1], colorArray[2], LinearSRGBColorSpace);\n    return Promise.all(pending);\n  }\n}\n\n/**\n * Materials ior Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_ior\n *\n * @private\n */\nclass GLTFMaterialsIorExtension {\n  constructor(parser) {\n    this.parser = parser;\n    this.name = EXTENSIONS.KHR_MATERIALS_IOR;\n  }\n  getMaterialType(materialIndex) {\n    const parser = this.parser;\n    const materialDef = parser.json.materials[materialIndex];\n    if (!materialDef.extensions || !materialDef.extensions[this.name]) return null;\n    return MeshPhysicalMaterial;\n  }\n  extendMaterialParams(materialIndex, materialParams) {\n    const parser = this.parser;\n    const materialDef = parser.json.materials[materialIndex];\n    if (!materialDef.extensions || !materialDef.extensions[this.name]) {\n      return Promise.resolve();\n    }\n    const extension = materialDef.extensions[this.name];\n    materialParams.ior = extension.ior !== undefined ? extension.ior : 1.5;\n    return Promise.resolve();\n  }\n}\n\n/**\n * Materials specular Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_specular\n *\n * @private\n */\nclass GLTFMaterialsSpecularExtension {\n  constructor(parser) {\n    this.parser = parser;\n    this.name = EXTENSIONS.KHR_MATERIALS_SPECULAR;\n  }\n  getMaterialType(materialIndex) {\n    const parser = this.parser;\n    const materialDef = parser.json.materials[materialIndex];\n    if (!materialDef.extensions || !materialDef.extensions[this.name]) return null;\n    return MeshPhysicalMaterial;\n  }\n  extendMaterialParams(materialIndex, materialParams) {\n    const parser = this.parser;\n    const materialDef = parser.json.materials[materialIndex];\n    if (!materialDef.extensions || !materialDef.extensions[this.name]) {\n      return Promise.resolve();\n    }\n    const pending = [];\n    const extension = materialDef.extensions[this.name];\n    materialParams.specularIntensity = extension.specularFactor !== undefined ? extension.specularFactor : 1.0;\n    if (extension.specularTexture !== undefined) {\n      pending.push(parser.assignTexture(materialParams, 'specularIntensityMap', extension.specularTexture));\n    }\n    const colorArray = extension.specularColorFactor || [1, 1, 1];\n    materialParams.specularColor = new Color().setRGB(colorArray[0], colorArray[1], colorArray[2], LinearSRGBColorSpace);\n    if (extension.specularColorTexture !== undefined) {\n      pending.push(parser.assignTexture(materialParams, 'specularColorMap', extension.specularColorTexture, SRGBColorSpace));\n    }\n    return Promise.all(pending);\n  }\n}\n\n/**\n * Materials bump Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/EXT_materials_bump\n *\n * @private\n */\nclass GLTFMaterialsBumpExtension {\n  constructor(parser) {\n    this.parser = parser;\n    this.name = EXTENSIONS.EXT_MATERIALS_BUMP;\n  }\n  getMaterialType(materialIndex) {\n    const parser = this.parser;\n    const materialDef = parser.json.materials[materialIndex];\n    if (!materialDef.extensions || !materialDef.extensions[this.name]) return null;\n    return MeshPhysicalMaterial;\n  }\n  extendMaterialParams(materialIndex, materialParams) {\n    const parser = this.parser;\n    const materialDef = parser.json.materials[materialIndex];\n    if (!materialDef.extensions || !materialDef.extensions[this.name]) {\n      return Promise.resolve();\n    }\n    const pending = [];\n    const extension = materialDef.extensions[this.name];\n    materialParams.bumpScale = extension.bumpFactor !== undefined ? extension.bumpFactor : 1.0;\n    if (extension.bumpTexture !== undefined) {\n      pending.push(parser.assignTexture(materialParams, 'bumpMap', extension.bumpTexture));\n    }\n    return Promise.all(pending);\n  }\n}\n\n/**\n * Materials anisotropy Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_anisotropy\n *\n * @private\n */\nclass GLTFMaterialsAnisotropyExtension {\n  constructor(parser) {\n    this.parser = parser;\n    this.name = EXTENSIONS.KHR_MATERIALS_ANISOTROPY;\n  }\n  getMaterialType(materialIndex) {\n    const parser = this.parser;\n    const materialDef = parser.json.materials[materialIndex];\n    if (!materialDef.extensions || !materialDef.extensions[this.name]) return null;\n    return MeshPhysicalMaterial;\n  }\n  extendMaterialParams(materialIndex, materialParams) {\n    const parser = this.parser;\n    const materialDef = parser.json.materials[materialIndex];\n    if (!materialDef.extensions || !materialDef.extensions[this.name]) {\n      return Promise.resolve();\n    }\n    const pending = [];\n    const extension = materialDef.extensions[this.name];\n    if (extension.anisotropyStrength !== undefined) {\n      materialParams.anisotropy = extension.anisotropyStrength;\n    }\n    if (extension.anisotropyRotation !== undefined) {\n      materialParams.anisotropyRotation = extension.anisotropyRotation;\n    }\n    if (extension.anisotropyTexture !== undefined) {\n      pending.push(parser.assignTexture(materialParams, 'anisotropyMap', extension.anisotropyTexture));\n    }\n    return Promise.all(pending);\n  }\n}\n\n/**\n * BasisU Texture Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_basisu\n *\n * @private\n */\nclass GLTFTextureBasisUExtension {\n  constructor(parser) {\n    this.parser = parser;\n    this.name = EXTENSIONS.KHR_TEXTURE_BASISU;\n  }\n  loadTexture(textureIndex) {\n    const parser = this.parser;\n    const json = parser.json;\n    const textureDef = json.textures[textureIndex];\n    if (!textureDef.extensions || !textureDef.extensions[this.name]) {\n      return null;\n    }\n    const extension = textureDef.extensions[this.name];\n    const loader = parser.options.ktx2Loader;\n    if (!loader) {\n      if (json.extensionsRequired && json.extensionsRequired.indexOf(this.name) >= 0) {\n        throw new Error('THREE.GLTFLoader: setKTX2Loader must be called before loading KTX2 textures');\n      } else {\n        // Assumes that the extension is optional and that a fallback texture is present\n        return null;\n      }\n    }\n    return parser.loadTextureImage(textureIndex, extension.source, loader);\n  }\n}\n\n/**\n * WebP Texture Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/EXT_texture_webp\n *\n * @private\n */\nclass GLTFTextureWebPExtension {\n  constructor(parser) {\n    this.parser = parser;\n    this.name = EXTENSIONS.EXT_TEXTURE_WEBP;\n  }\n  loadTexture(textureIndex) {\n    const name = this.name;\n    const parser = this.parser;\n    const json = parser.json;\n    const textureDef = json.textures[textureIndex];\n    if (!textureDef.extensions || !textureDef.extensions[name]) {\n      return null;\n    }\n    const extension = textureDef.extensions[name];\n    const source = json.images[extension.source];\n    let loader = parser.textureLoader;\n    if (source.uri) {\n      const handler = parser.options.manager.getHandler(source.uri);\n      if (handler !== null) loader = handler;\n    }\n    return parser.loadTextureImage(textureIndex, extension.source, loader);\n  }\n}\n\n/**\n * AVIF Texture Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/EXT_texture_avif\n *\n * @private\n */\nclass GLTFTextureAVIFExtension {\n  constructor(parser) {\n    this.parser = parser;\n    this.name = EXTENSIONS.EXT_TEXTURE_AVIF;\n  }\n  loadTexture(textureIndex) {\n    const name = this.name;\n    const parser = this.parser;\n    const json = parser.json;\n    const textureDef = json.textures[textureIndex];\n    if (!textureDef.extensions || !textureDef.extensions[name]) {\n      return null;\n    }\n    const extension = textureDef.extensions[name];\n    const source = json.images[extension.source];\n    let loader = parser.textureLoader;\n    if (source.uri) {\n      const handler = parser.options.manager.getHandler(source.uri);\n      if (handler !== null) loader = handler;\n    }\n    return parser.loadTextureImage(textureIndex, extension.source, loader);\n  }\n}\n\n/**\n * meshopt BufferView Compression Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/EXT_meshopt_compression\n *\n * @private\n */\nclass GLTFMeshoptCompression {\n  constructor(parser) {\n    this.name = EXTENSIONS.EXT_MESHOPT_COMPRESSION;\n    this.parser = parser;\n  }\n  loadBufferView(index) {\n    const json = this.parser.json;\n    const bufferView = json.bufferViews[index];\n    if (bufferView.extensions && bufferView.extensions[this.name]) {\n      const extensionDef = bufferView.extensions[this.name];\n      const buffer = this.parser.getDependency('buffer', extensionDef.buffer);\n      const decoder = this.parser.options.meshoptDecoder;\n      if (!decoder || !decoder.supported) {\n        if (json.extensionsRequired && json.extensionsRequired.indexOf(this.name) >= 0) {\n          throw new Error('THREE.GLTFLoader: setMeshoptDecoder must be called before loading compressed files');\n        } else {\n          // Assumes that the extension is optional and that fallback buffer data is present\n          return null;\n        }\n      }\n      return buffer.then(function (res) {\n        const byteOffset = extensionDef.byteOffset || 0;\n        const byteLength = extensionDef.byteLength || 0;\n        const count = extensionDef.count;\n        const stride = extensionDef.byteStride;\n        const source = new Uint8Array(res, byteOffset, byteLength);\n        if (decoder.decodeGltfBufferAsync) {\n          return decoder.decodeGltfBufferAsync(count, stride, source, extensionDef.mode, extensionDef.filter).then(function (res) {\n            return res.buffer;\n          });\n        } else {\n          // Support for MeshoptDecoder 0.18 or earlier, without decodeGltfBufferAsync\n          return decoder.ready.then(function () {\n            const result = new ArrayBuffer(count * stride);\n            decoder.decodeGltfBuffer(new Uint8Array(result), count, stride, source, extensionDef.mode, extensionDef.filter);\n            return result;\n          });\n        }\n      });\n    } else {\n      return null;\n    }\n  }\n}\n\n/**\n * GPU Instancing Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/EXT_mesh_gpu_instancing\n *\n * @private\n */\nclass GLTFMeshGpuInstancing {\n  constructor(parser) {\n    this.name = EXTENSIONS.EXT_MESH_GPU_INSTANCING;\n    this.parser = parser;\n  }\n  createNodeMesh(nodeIndex) {\n    const json = this.parser.json;\n    const nodeDef = json.nodes[nodeIndex];\n    if (!nodeDef.extensions || !nodeDef.extensions[this.name] || nodeDef.mesh === undefined) {\n      return null;\n    }\n    const meshDef = json.meshes[nodeDef.mesh];\n\n    // No Points or Lines + Instancing support yet\n\n    for (const primitive of meshDef.primitives) {\n      if (primitive.mode !== WEBGL_CONSTANTS.TRIANGLES && primitive.mode !== WEBGL_CONSTANTS.TRIANGLE_STRIP && primitive.mode !== WEBGL_CONSTANTS.TRIANGLE_FAN && primitive.mode !== undefined) {\n        return null;\n      }\n    }\n    const extensionDef = nodeDef.extensions[this.name];\n    const attributesDef = extensionDef.attributes;\n\n    // @TODO: Can we support InstancedMesh + SkinnedMesh?\n\n    const pending = [];\n    const attributes = {};\n    for (const key in attributesDef) {\n      pending.push(this.parser.getDependency('accessor', attributesDef[key]).then(accessor => {\n        attributes[key] = accessor;\n        return attributes[key];\n      }));\n    }\n    if (pending.length < 1) {\n      return null;\n    }\n    pending.push(this.parser.createNodeMesh(nodeIndex));\n    return Promise.all(pending).then(results => {\n      const nodeObject = results.pop();\n      const meshes = nodeObject.isGroup ? nodeObject.children : [nodeObject];\n      const count = results[0].count; // All attribute counts should be same\n      const instancedMeshes = [];\n      for (const mesh of meshes) {\n        // Temporal variables\n        const m = new Matrix4();\n        const p = new Vector3();\n        const q = new Quaternion();\n        const s = new Vector3(1, 1, 1);\n        const instancedMesh = new InstancedMesh(mesh.geometry, mesh.material, count);\n        for (let i = 0; i < count; i++) {\n          if (attributes.TRANSLATION) {\n            p.fromBufferAttribute(attributes.TRANSLATION, i);\n          }\n          if (attributes.ROTATION) {\n            q.fromBufferAttribute(attributes.ROTATION, i);\n          }\n          if (attributes.SCALE) {\n            s.fromBufferAttribute(attributes.SCALE, i);\n          }\n          instancedMesh.setMatrixAt(i, m.compose(p, q, s));\n        }\n\n        // Add instance attributes to the geometry, excluding TRS.\n        for (const attributeName in attributes) {\n          if (attributeName === '_COLOR_0') {\n            const attr = attributes[attributeName];\n            instancedMesh.instanceColor = new InstancedBufferAttribute(attr.array, attr.itemSize, attr.normalized);\n          } else if (attributeName !== 'TRANSLATION' && attributeName !== 'ROTATION' && attributeName !== 'SCALE') {\n            mesh.geometry.setAttribute(attributeName, attributes[attributeName]);\n          }\n        }\n\n        // Just in case\n        Object3D.prototype.copy.call(instancedMesh, mesh);\n        this.parser.assignFinalMaterial(instancedMesh);\n        instancedMeshes.push(instancedMesh);\n      }\n      if (nodeObject.isGroup) {\n        nodeObject.clear();\n        nodeObject.add(...instancedMeshes);\n        return nodeObject;\n      }\n      return instancedMeshes[0];\n    });\n  }\n}\n\n/* BINARY EXTENSION */\nconst BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\nconst BINARY_EXTENSION_HEADER_LENGTH = 12;\nconst BINARY_EXTENSION_CHUNK_TYPES = {\n  JSON: 0x4E4F534A,\n  BIN: 0x004E4942\n};\nclass GLTFBinaryExtension {\n  constructor(data) {\n    this.name = EXTENSIONS.KHR_BINARY_GLTF;\n    this.content = null;\n    this.body = null;\n    const headerView = new DataView(data, 0, BINARY_EXTENSION_HEADER_LENGTH);\n    const textDecoder = new TextDecoder();\n    this.header = {\n      magic: textDecoder.decode(new Uint8Array(data.slice(0, 4))),\n      version: headerView.getUint32(4, true),\n      length: headerView.getUint32(8, true)\n    };\n    if (this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC) {\n      throw new Error('THREE.GLTFLoader: Unsupported glTF-Binary header.');\n    } else if (this.header.version < 2.0) {\n      throw new Error('THREE.GLTFLoader: Legacy binary file detected.');\n    }\n    const chunkContentsLength = this.header.length - BINARY_EXTENSION_HEADER_LENGTH;\n    const chunkView = new DataView(data, BINARY_EXTENSION_HEADER_LENGTH);\n    let chunkIndex = 0;\n    while (chunkIndex < chunkContentsLength) {\n      const chunkLength = chunkView.getUint32(chunkIndex, true);\n      chunkIndex += 4;\n      const chunkType = chunkView.getUint32(chunkIndex, true);\n      chunkIndex += 4;\n      if (chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON) {\n        const contentArray = new Uint8Array(data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength);\n        this.content = textDecoder.decode(contentArray);\n      } else if (chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN) {\n        const byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\n        this.body = data.slice(byteOffset, byteOffset + chunkLength);\n      }\n\n      // Clients must ignore chunks with unknown types.\n\n      chunkIndex += chunkLength;\n    }\n    if (this.content === null) {\n      throw new Error('THREE.GLTFLoader: JSON content not found.');\n    }\n  }\n}\n\n/**\n * DRACO Mesh Compression Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_draco_mesh_compression\n *\n * @private\n */\nclass GLTFDracoMeshCompressionExtension {\n  constructor(json, dracoLoader) {\n    if (!dracoLoader) {\n      throw new Error('THREE.GLTFLoader: No DRACOLoader instance provided.');\n    }\n    this.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;\n    this.json = json;\n    this.dracoLoader = dracoLoader;\n    this.dracoLoader.preload();\n  }\n  decodePrimitive(primitive, parser) {\n    const json = this.json;\n    const dracoLoader = this.dracoLoader;\n    const bufferViewIndex = primitive.extensions[this.name].bufferView;\n    const gltfAttributeMap = primitive.extensions[this.name].attributes;\n    const threeAttributeMap = {};\n    const attributeNormalizedMap = {};\n    const attributeTypeMap = {};\n    for (const attributeName in gltfAttributeMap) {\n      const threeAttributeName = ATTRIBUTES[attributeName] || attributeName.toLowerCase();\n      threeAttributeMap[threeAttributeName] = gltfAttributeMap[attributeName];\n    }\n    for (const attributeName in primitive.attributes) {\n      const threeAttributeName = ATTRIBUTES[attributeName] || attributeName.toLowerCase();\n      if (gltfAttributeMap[attributeName] !== undefined) {\n        const accessorDef = json.accessors[primitive.attributes[attributeName]];\n        const componentType = WEBGL_COMPONENT_TYPES[accessorDef.componentType];\n        attributeTypeMap[threeAttributeName] = componentType.name;\n        attributeNormalizedMap[threeAttributeName] = accessorDef.normalized === true;\n      }\n    }\n    return parser.getDependency('bufferView', bufferViewIndex).then(function (bufferView) {\n      return new Promise(function (resolve, reject) {\n        dracoLoader.decodeDracoFile(bufferView, function (geometry) {\n          for (const attributeName in geometry.attributes) {\n            const attribute = geometry.attributes[attributeName];\n            const normalized = attributeNormalizedMap[attributeName];\n            if (normalized !== undefined) attribute.normalized = normalized;\n          }\n          resolve(geometry);\n        }, threeAttributeMap, attributeTypeMap, LinearSRGBColorSpace, reject);\n      });\n    });\n  }\n}\n\n/**\n * Texture Transform Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_transform\n *\n * @private\n */\nclass GLTFTextureTransformExtension {\n  constructor() {\n    this.name = EXTENSIONS.KHR_TEXTURE_TRANSFORM;\n  }\n  extendTexture(texture, transform) {\n    if ((transform.texCoord === undefined || transform.texCoord === texture.channel) && transform.offset === undefined && transform.rotation === undefined && transform.scale === undefined) {\n      // See https://github.com/mrdoob/three.js/issues/21819.\n      return texture;\n    }\n    texture = texture.clone();\n    if (transform.texCoord !== undefined) {\n      texture.channel = transform.texCoord;\n    }\n    if (transform.offset !== undefined) {\n      texture.offset.fromArray(transform.offset);\n    }\n    if (transform.rotation !== undefined) {\n      texture.rotation = transform.rotation;\n    }\n    if (transform.scale !== undefined) {\n      texture.repeat.fromArray(transform.scale);\n    }\n    texture.needsUpdate = true;\n    return texture;\n  }\n}\n\n/**\n * Mesh Quantization Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_mesh_quantization\n *\n * @private\n */\nclass GLTFMeshQuantizationExtension {\n  constructor() {\n    this.name = EXTENSIONS.KHR_MESH_QUANTIZATION;\n  }\n}\n\n/*********************************/\n/********** INTERPOLATION ********/\n/*********************************/\n\n// Spline Interpolation\n// Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\nclass GLTFCubicSplineInterpolant extends Interpolant {\n  constructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    super(parameterPositions, sampleValues, sampleSize, resultBuffer);\n  }\n  copySampleValue_(index) {\n    // Copies a sample value to the result buffer. See description of glTF\n    // CUBICSPLINE values layout in interpolate_() function below.\n\n    const result = this.resultBuffer,\n      values = this.sampleValues,\n      valueSize = this.valueSize,\n      offset = index * valueSize * 3 + valueSize;\n    for (let i = 0; i !== valueSize; i++) {\n      result[i] = values[offset + i];\n    }\n    return result;\n  }\n  interpolate_(i1, t0, t, t1) {\n    const result = this.resultBuffer;\n    const values = this.sampleValues;\n    const stride = this.valueSize;\n    const stride2 = stride * 2;\n    const stride3 = stride * 3;\n    const td = t1 - t0;\n    const p = (t - t0) / td;\n    const pp = p * p;\n    const ppp = pp * p;\n    const offset1 = i1 * stride3;\n    const offset0 = offset1 - stride3;\n    const s2 = -2 * ppp + 3 * pp;\n    const s3 = ppp - pp;\n    const s0 = 1 - s2;\n    const s1 = s3 - pp + p;\n\n    // Layout of keyframe output values for CUBICSPLINE animations:\n    //   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\n    for (let i = 0; i !== stride; i++) {\n      const p0 = values[offset0 + i + stride]; // splineVertex_k\n      const m0 = values[offset0 + i + stride2] * td; // outTangent_k * (t_k+1 - t_k)\n      const p1 = values[offset1 + i + stride]; // splineVertex_k+1\n      const m1 = values[offset1 + i] * td; // inTangent_k+1 * (t_k+1 - t_k)\n\n      result[i] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1;\n    }\n    return result;\n  }\n}\nconst _quaternion = new Quaternion();\nclass GLTFCubicSplineQuaternionInterpolant extends GLTFCubicSplineInterpolant {\n  interpolate_(i1, t0, t, t1) {\n    const result = super.interpolate_(i1, t0, t, t1);\n    _quaternion.fromArray(result).normalize().toArray(result);\n    return result;\n  }\n}\n\n/*********************************/\n/********** INTERNALS ************/\n/*********************************/\n\n/* CONSTANTS */\n\nconst WEBGL_CONSTANTS = {\n  FLOAT: 5126,\n  //FLOAT_MAT2: 35674,\n  FLOAT_MAT3: 35675,\n  FLOAT_MAT4: 35676,\n  FLOAT_VEC2: 35664,\n  FLOAT_VEC3: 35665,\n  FLOAT_VEC4: 35666,\n  LINEAR: 9729,\n  REPEAT: 10497,\n  SAMPLER_2D: 35678,\n  POINTS: 0,\n  LINES: 1,\n  LINE_LOOP: 2,\n  LINE_STRIP: 3,\n  TRIANGLES: 4,\n  TRIANGLE_STRIP: 5,\n  TRIANGLE_FAN: 6,\n  UNSIGNED_BYTE: 5121,\n  UNSIGNED_SHORT: 5123\n};\nconst WEBGL_COMPONENT_TYPES = {\n  5120: Int8Array,\n  5121: Uint8Array,\n  5122: Int16Array,\n  5123: Uint16Array,\n  5125: Uint32Array,\n  5126: Float32Array\n};\nconst WEBGL_FILTERS = {\n  9728: NearestFilter,\n  9729: LinearFilter,\n  9984: NearestMipmapNearestFilter,\n  9985: LinearMipmapNearestFilter,\n  9986: NearestMipmapLinearFilter,\n  9987: LinearMipmapLinearFilter\n};\nconst WEBGL_WRAPPINGS = {\n  33071: ClampToEdgeWrapping,\n  33648: MirroredRepeatWrapping,\n  10497: RepeatWrapping\n};\nconst WEBGL_TYPE_SIZES = {\n  'SCALAR': 1,\n  'VEC2': 2,\n  'VEC3': 3,\n  'VEC4': 4,\n  'MAT2': 4,\n  'MAT3': 9,\n  'MAT4': 16\n};\nconst ATTRIBUTES = {\n  POSITION: 'position',\n  NORMAL: 'normal',\n  TANGENT: 'tangent',\n  TEXCOORD_0: 'uv',\n  TEXCOORD_1: 'uv1',\n  TEXCOORD_2: 'uv2',\n  TEXCOORD_3: 'uv3',\n  COLOR_0: 'color',\n  WEIGHTS_0: 'skinWeight',\n  JOINTS_0: 'skinIndex'\n};\nconst PATH_PROPERTIES = {\n  scale: 'scale',\n  translation: 'position',\n  rotation: 'quaternion',\n  weights: 'morphTargetInfluences'\n};\nconst INTERPOLATION = {\n  CUBICSPLINE: undefined,\n  // We use a custom interpolant (GLTFCubicSplineInterpolation) for CUBICSPLINE tracks. Each\n  // keyframe track will be initialized with a default interpolation type, then modified.\n  LINEAR: InterpolateLinear,\n  STEP: InterpolateDiscrete\n};\nconst ALPHA_MODES = {\n  OPAQUE: 'OPAQUE',\n  MASK: 'MASK',\n  BLEND: 'BLEND'\n};\n\n/**\n * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\n *\n * @private\n * @param {Object<string, Material>} cache\n * @return {Material}\n */\nfunction createDefaultMaterial(cache) {\n  if (cache['DefaultMaterial'] === undefined) {\n    cache['DefaultMaterial'] = new MeshStandardMaterial({\n      color: 0xFFFFFF,\n      emissive: 0x000000,\n      metalness: 1,\n      roughness: 1,\n      transparent: false,\n      depthTest: true,\n      side: FrontSide\n    });\n  }\n  return cache['DefaultMaterial'];\n}\nfunction addUnknownExtensionsToUserData(knownExtensions, object, objectDef) {\n  // Add unknown glTF extensions to an object's userData.\n\n  for (const name in objectDef.extensions) {\n    if (knownExtensions[name] === undefined) {\n      object.userData.gltfExtensions = object.userData.gltfExtensions || {};\n      object.userData.gltfExtensions[name] = objectDef.extensions[name];\n    }\n  }\n}\n\n/**\n *\n * @private\n * @param {Object3D|Material|BufferGeometry|Object} object\n * @param {GLTF.definition} gltfDef\n */\nfunction assignExtrasToUserData(object, gltfDef) {\n  if (gltfDef.extras !== undefined) {\n    if (typeof gltfDef.extras === 'object') {\n      Object.assign(object.userData, gltfDef.extras);\n    } else {\n      console.warn('THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras);\n    }\n  }\n}\n\n/**\n * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\n *\n * @private\n * @param {BufferGeometry} geometry\n * @param {Array<GLTF.Target>} targets\n * @param {GLTFParser} parser\n * @return {Promise<BufferGeometry>}\n */\nfunction addMorphTargets(geometry, targets, parser) {\n  let hasMorphPosition = false;\n  let hasMorphNormal = false;\n  let hasMorphColor = false;\n  for (let i = 0, il = targets.length; i < il; i++) {\n    const target = targets[i];\n    if (target.POSITION !== undefined) hasMorphPosition = true;\n    if (target.NORMAL !== undefined) hasMorphNormal = true;\n    if (target.COLOR_0 !== undefined) hasMorphColor = true;\n    if (hasMorphPosition && hasMorphNormal && hasMorphColor) break;\n  }\n  if (!hasMorphPosition && !hasMorphNormal && !hasMorphColor) return Promise.resolve(geometry);\n  const pendingPositionAccessors = [];\n  const pendingNormalAccessors = [];\n  const pendingColorAccessors = [];\n  for (let i = 0, il = targets.length; i < il; i++) {\n    const target = targets[i];\n    if (hasMorphPosition) {\n      const pendingAccessor = target.POSITION !== undefined ? parser.getDependency('accessor', target.POSITION) : geometry.attributes.position;\n      pendingPositionAccessors.push(pendingAccessor);\n    }\n    if (hasMorphNormal) {\n      const pendingAccessor = target.NORMAL !== undefined ? parser.getDependency('accessor', target.NORMAL) : geometry.attributes.normal;\n      pendingNormalAccessors.push(pendingAccessor);\n    }\n    if (hasMorphColor) {\n      const pendingAccessor = target.COLOR_0 !== undefined ? parser.getDependency('accessor', target.COLOR_0) : geometry.attributes.color;\n      pendingColorAccessors.push(pendingAccessor);\n    }\n  }\n  return Promise.all([Promise.all(pendingPositionAccessors), Promise.all(pendingNormalAccessors), Promise.all(pendingColorAccessors)]).then(function (accessors) {\n    const morphPositions = accessors[0];\n    const morphNormals = accessors[1];\n    const morphColors = accessors[2];\n    if (hasMorphPosition) geometry.morphAttributes.position = morphPositions;\n    if (hasMorphNormal) geometry.morphAttributes.normal = morphNormals;\n    if (hasMorphColor) geometry.morphAttributes.color = morphColors;\n    geometry.morphTargetsRelative = true;\n    return geometry;\n  });\n}\n\n/**\n *\n * @private\n * @param {Mesh} mesh\n * @param {GLTF.Mesh} meshDef\n */\nfunction updateMorphTargets(mesh, meshDef) {\n  mesh.updateMorphTargets();\n  if (meshDef.weights !== undefined) {\n    for (let i = 0, il = meshDef.weights.length; i < il; i++) {\n      mesh.morphTargetInfluences[i] = meshDef.weights[i];\n    }\n  }\n\n  // .extras has user-defined data, so check that .extras.targetNames is an array.\n  if (meshDef.extras && Array.isArray(meshDef.extras.targetNames)) {\n    const targetNames = meshDef.extras.targetNames;\n    if (mesh.morphTargetInfluences.length === targetNames.length) {\n      mesh.morphTargetDictionary = {};\n      for (let i = 0, il = targetNames.length; i < il; i++) {\n        mesh.morphTargetDictionary[targetNames[i]] = i;\n      }\n    } else {\n      console.warn('THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.');\n    }\n  }\n}\nfunction createPrimitiveKey(primitiveDef) {\n  let geometryKey;\n  const dracoExtension = primitiveDef.extensions && primitiveDef.extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION];\n  if (dracoExtension) {\n    geometryKey = 'draco:' + dracoExtension.bufferView + ':' + dracoExtension.indices + ':' + createAttributesKey(dracoExtension.attributes);\n  } else {\n    geometryKey = primitiveDef.indices + ':' + createAttributesKey(primitiveDef.attributes) + ':' + primitiveDef.mode;\n  }\n  if (primitiveDef.targets !== undefined) {\n    for (let i = 0, il = primitiveDef.targets.length; i < il; i++) {\n      geometryKey += ':' + createAttributesKey(primitiveDef.targets[i]);\n    }\n  }\n  return geometryKey;\n}\nfunction createAttributesKey(attributes) {\n  let attributesKey = '';\n  const keys = Object.keys(attributes).sort();\n  for (let i = 0, il = keys.length; i < il; i++) {\n    attributesKey += keys[i] + ':' + attributes[keys[i]] + ';';\n  }\n  return attributesKey;\n}\nfunction getNormalizedComponentScale(constructor) {\n  // Reference:\n  // https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_mesh_quantization#encoding-quantized-data\n\n  switch (constructor) {\n    case Int8Array:\n      return 1 / 127;\n    case Uint8Array:\n      return 1 / 255;\n    case Int16Array:\n      return 1 / 32767;\n    case Uint16Array:\n      return 1 / 65535;\n    default:\n      throw new Error('THREE.GLTFLoader: Unsupported normalized accessor component type.');\n  }\n}\nfunction getImageURIMimeType(uri) {\n  if (uri.search(/\\.jpe?g($|\\?)/i) > 0 || uri.search(/^data\\:image\\/jpeg/) === 0) return 'image/jpeg';\n  if (uri.search(/\\.webp($|\\?)/i) > 0 || uri.search(/^data\\:image\\/webp/) === 0) return 'image/webp';\n  if (uri.search(/\\.ktx2($|\\?)/i) > 0 || uri.search(/^data\\:image\\/ktx2/) === 0) return 'image/ktx2';\n  return 'image/png';\n}\nconst _identityMatrix = new Matrix4();\n\n/* GLTF PARSER */\n\nclass GLTFParser {\n  constructor(json = {}, options = {}) {\n    this.json = json;\n    this.extensions = {};\n    this.plugins = {};\n    this.options = options;\n\n    // loader object cache\n    this.cache = new GLTFRegistry();\n\n    // associations between Three.js objects and glTF elements\n    this.associations = new Map();\n\n    // BufferGeometry caching\n    this.primitiveCache = {};\n\n    // Node cache\n    this.nodeCache = {};\n\n    // Object3D instance caches\n    this.meshCache = {\n      refs: {},\n      uses: {}\n    };\n    this.cameraCache = {\n      refs: {},\n      uses: {}\n    };\n    this.lightCache = {\n      refs: {},\n      uses: {}\n    };\n    this.sourceCache = {};\n    this.textureCache = {};\n\n    // Track node names, to ensure no duplicates\n    this.nodeNamesUsed = {};\n\n    // Use an ImageBitmapLoader if imageBitmaps are supported. Moves much of the\n    // expensive work of uploading a texture to the GPU off the main thread.\n\n    let isSafari = false;\n    let safariVersion = -1;\n    let isFirefox = false;\n    let firefoxVersion = -1;\n    if (typeof navigator !== 'undefined') {\n      const userAgent = navigator.userAgent;\n      isSafari = /^((?!chrome|android).)*safari/i.test(userAgent) === true;\n      const safariMatch = userAgent.match(/Version\\/(\\d+)/);\n      safariVersion = isSafari && safariMatch ? parseInt(safariMatch[1], 10) : -1;\n      isFirefox = userAgent.indexOf('Firefox') > -1;\n      firefoxVersion = isFirefox ? userAgent.match(/Firefox\\/([0-9]+)\\./)[1] : -1;\n    }\n    if (typeof createImageBitmap === 'undefined' || isSafari && safariVersion < 17 || isFirefox && firefoxVersion < 98) {\n      this.textureLoader = new TextureLoader(this.options.manager);\n    } else {\n      this.textureLoader = new ImageBitmapLoader(this.options.manager);\n    }\n    this.textureLoader.setCrossOrigin(this.options.crossOrigin);\n    this.textureLoader.setRequestHeader(this.options.requestHeader);\n    this.fileLoader = new FileLoader(this.options.manager);\n    this.fileLoader.setResponseType('arraybuffer');\n    if (this.options.crossOrigin === 'use-credentials') {\n      this.fileLoader.setWithCredentials(true);\n    }\n  }\n  setExtensions(extensions) {\n    this.extensions = extensions;\n  }\n  setPlugins(plugins) {\n    this.plugins = plugins;\n  }\n  parse(onLoad, onError) {\n    const parser = this;\n    const json = this.json;\n    const extensions = this.extensions;\n\n    // Clear the loader cache\n    this.cache.removeAll();\n    this.nodeCache = {};\n\n    // Mark the special nodes/meshes in json for efficient parse\n    this._invokeAll(function (ext) {\n      return ext._markDefs && ext._markDefs();\n    });\n    Promise.all(this._invokeAll(function (ext) {\n      return ext.beforeRoot && ext.beforeRoot();\n    })).then(function () {\n      return Promise.all([parser.getDependencies('scene'), parser.getDependencies('animation'), parser.getDependencies('camera')]);\n    }).then(function (dependencies) {\n      const result = {\n        scene: dependencies[0][json.scene || 0],\n        scenes: dependencies[0],\n        animations: dependencies[1],\n        cameras: dependencies[2],\n        asset: json.asset,\n        parser: parser,\n        userData: {}\n      };\n      addUnknownExtensionsToUserData(extensions, result, json);\n      assignExtrasToUserData(result, json);\n      return Promise.all(parser._invokeAll(function (ext) {\n        return ext.afterRoot && ext.afterRoot(result);\n      })).then(function () {\n        for (const scene of result.scenes) {\n          scene.updateMatrixWorld();\n        }\n        onLoad(result);\n      });\n    }).catch(onError);\n  }\n\n  /**\n   * Marks the special nodes/meshes in json for efficient parse.\n   *\n   * @private\n   */\n  _markDefs() {\n    const nodeDefs = this.json.nodes || [];\n    const skinDefs = this.json.skins || [];\n    const meshDefs = this.json.meshes || [];\n\n    // Nothing in the node definition indicates whether it is a Bone or an\n    // Object3D. Use the skins' joint references to mark bones.\n    for (let skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex++) {\n      const joints = skinDefs[skinIndex].joints;\n      for (let i = 0, il = joints.length; i < il; i++) {\n        nodeDefs[joints[i]].isBone = true;\n      }\n    }\n\n    // Iterate over all nodes, marking references to shared resources,\n    // as well as skeleton joints.\n    for (let nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex++) {\n      const nodeDef = nodeDefs[nodeIndex];\n      if (nodeDef.mesh !== undefined) {\n        this._addNodeRef(this.meshCache, nodeDef.mesh);\n\n        // Nothing in the mesh definition indicates whether it is\n        // a SkinnedMesh or Mesh. Use the node's mesh reference\n        // to mark SkinnedMesh if node has skin.\n        if (nodeDef.skin !== undefined) {\n          meshDefs[nodeDef.mesh].isSkinnedMesh = true;\n        }\n      }\n      if (nodeDef.camera !== undefined) {\n        this._addNodeRef(this.cameraCache, nodeDef.camera);\n      }\n    }\n  }\n\n  /**\n   * Counts references to shared node / Object3D resources. These resources\n   * can be reused, or \"instantiated\", at multiple nodes in the scene\n   * hierarchy. Mesh, Camera, and Light instances are instantiated and must\n   * be marked. Non-scenegraph resources (like Materials, Geometries, and\n   * Textures) can be reused directly and are not marked here.\n   *\n   * Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\n   *\n   * @private\n   * @param {Object} cache\n   * @param {Object3D} index\n   */\n  _addNodeRef(cache, index) {\n    if (index === undefined) return;\n    if (cache.refs[index] === undefined) {\n      cache.refs[index] = cache.uses[index] = 0;\n    }\n    cache.refs[index]++;\n  }\n\n  /**\n   * Returns a reference to a shared resource, cloning it if necessary.\n   *\n   * @private\n   * @param {Object} cache\n   * @param {number} index\n   * @param {Object} object\n   * @return {Object}\n   */\n  _getNodeRef(cache, index, object) {\n    if (cache.refs[index] <= 1) return object;\n    const ref = object.clone();\n\n    // Propagates mappings to the cloned object, prevents mappings on the\n    // original object from being lost.\n    const updateMappings = (original, clone) => {\n      const mappings = this.associations.get(original);\n      if (mappings != null) {\n        this.associations.set(clone, mappings);\n      }\n      for (const [i, child] of original.children.entries()) {\n        updateMappings(child, clone.children[i]);\n      }\n    };\n    updateMappings(object, ref);\n    ref.name += '_instance_' + cache.uses[index]++;\n    return ref;\n  }\n  _invokeOne(func) {\n    const extensions = Object.values(this.plugins);\n    extensions.push(this);\n    for (let i = 0; i < extensions.length; i++) {\n      const result = func(extensions[i]);\n      if (result) return result;\n    }\n    return null;\n  }\n  _invokeAll(func) {\n    const extensions = Object.values(this.plugins);\n    extensions.unshift(this);\n    const pending = [];\n    for (let i = 0; i < extensions.length; i++) {\n      const result = func(extensions[i]);\n      if (result) pending.push(result);\n    }\n    return pending;\n  }\n\n  /**\n   * Requests the specified dependency asynchronously, with caching.\n   *\n   * @private\n   * @param {string} type\n   * @param {number} index\n   * @return {Promise<Object3D|Material|THREE.Texture|AnimationClip|ArrayBuffer|Object>}\n   */\n  getDependency(type, index) {\n    const cacheKey = type + ':' + index;\n    let dependency = this.cache.get(cacheKey);\n    if (!dependency) {\n      switch (type) {\n        case 'scene':\n          dependency = this.loadScene(index);\n          break;\n        case 'node':\n          dependency = this._invokeOne(function (ext) {\n            return ext.loadNode && ext.loadNode(index);\n          });\n          break;\n        case 'mesh':\n          dependency = this._invokeOne(function (ext) {\n            return ext.loadMesh && ext.loadMesh(index);\n          });\n          break;\n        case 'accessor':\n          dependency = this.loadAccessor(index);\n          break;\n        case 'bufferView':\n          dependency = this._invokeOne(function (ext) {\n            return ext.loadBufferView && ext.loadBufferView(index);\n          });\n          break;\n        case 'buffer':\n          dependency = this.loadBuffer(index);\n          break;\n        case 'material':\n          dependency = this._invokeOne(function (ext) {\n            return ext.loadMaterial && ext.loadMaterial(index);\n          });\n          break;\n        case 'texture':\n          dependency = this._invokeOne(function (ext) {\n            return ext.loadTexture && ext.loadTexture(index);\n          });\n          break;\n        case 'skin':\n          dependency = this.loadSkin(index);\n          break;\n        case 'animation':\n          dependency = this._invokeOne(function (ext) {\n            return ext.loadAnimation && ext.loadAnimation(index);\n          });\n          break;\n        case 'camera':\n          dependency = this.loadCamera(index);\n          break;\n        default:\n          dependency = this._invokeOne(function (ext) {\n            return ext != this && ext.getDependency && ext.getDependency(type, index);\n          });\n          if (!dependency) {\n            throw new Error('Unknown type: ' + type);\n          }\n          break;\n      }\n      this.cache.add(cacheKey, dependency);\n    }\n    return dependency;\n  }\n\n  /**\n   * Requests all dependencies of the specified type asynchronously, with caching.\n   *\n   * @private\n   * @param {string} type\n   * @return {Promise<Array<Object>>}\n   */\n  getDependencies(type) {\n    let dependencies = this.cache.get(type);\n    if (!dependencies) {\n      const parser = this;\n      const defs = this.json[type + (type === 'mesh' ? 'es' : 's')] || [];\n      dependencies = Promise.all(defs.map(function (def, index) {\n        return parser.getDependency(type, index);\n      }));\n      this.cache.add(type, dependencies);\n    }\n    return dependencies;\n  }\n\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n   *\n   * @private\n   * @param {number} bufferIndex\n   * @return {Promise<ArrayBuffer>}\n   */\n  loadBuffer(bufferIndex) {\n    const bufferDef = this.json.buffers[bufferIndex];\n    const loader = this.fileLoader;\n    if (bufferDef.type && bufferDef.type !== 'arraybuffer') {\n      throw new Error('THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.');\n    }\n\n    // If present, GLB container is required to be the first buffer.\n    if (bufferDef.uri === undefined && bufferIndex === 0) {\n      return Promise.resolve(this.extensions[EXTENSIONS.KHR_BINARY_GLTF].body);\n    }\n    const options = this.options;\n    return new Promise(function (resolve, reject) {\n      loader.load(LoaderUtils.resolveURL(bufferDef.uri, options.path), resolve, undefined, function () {\n        reject(new Error('THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".'));\n      });\n    });\n  }\n\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n   *\n   * @private\n   * @param {number} bufferViewIndex\n   * @return {Promise<ArrayBuffer>}\n   */\n  loadBufferView(bufferViewIndex) {\n    const bufferViewDef = this.json.bufferViews[bufferViewIndex];\n    return this.getDependency('buffer', bufferViewDef.buffer).then(function (buffer) {\n      const byteLength = bufferViewDef.byteLength || 0;\n      const byteOffset = bufferViewDef.byteOffset || 0;\n      return buffer.slice(byteOffset, byteOffset + byteLength);\n    });\n  }\n\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\n   *\n   * @private\n   * @param {number} accessorIndex\n   * @return {Promise<BufferAttribute|InterleavedBufferAttribute>}\n   */\n  loadAccessor(accessorIndex) {\n    const parser = this;\n    const json = this.json;\n    const accessorDef = this.json.accessors[accessorIndex];\n    if (accessorDef.bufferView === undefined && accessorDef.sparse === undefined) {\n      const itemSize = WEBGL_TYPE_SIZES[accessorDef.type];\n      const TypedArray = WEBGL_COMPONENT_TYPES[accessorDef.componentType];\n      const normalized = accessorDef.normalized === true;\n      const array = new TypedArray(accessorDef.count * itemSize);\n      return Promise.resolve(new BufferAttribute(array, itemSize, normalized));\n    }\n    const pendingBufferViews = [];\n    if (accessorDef.bufferView !== undefined) {\n      pendingBufferViews.push(this.getDependency('bufferView', accessorDef.bufferView));\n    } else {\n      pendingBufferViews.push(null);\n    }\n    if (accessorDef.sparse !== undefined) {\n      pendingBufferViews.push(this.getDependency('bufferView', accessorDef.sparse.indices.bufferView));\n      pendingBufferViews.push(this.getDependency('bufferView', accessorDef.sparse.values.bufferView));\n    }\n    return Promise.all(pendingBufferViews).then(function (bufferViews) {\n      const bufferView = bufferViews[0];\n      const itemSize = WEBGL_TYPE_SIZES[accessorDef.type];\n      const TypedArray = WEBGL_COMPONENT_TYPES[accessorDef.componentType];\n\n      // For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n      const elementBytes = TypedArray.BYTES_PER_ELEMENT;\n      const itemBytes = elementBytes * itemSize;\n      const byteOffset = accessorDef.byteOffset || 0;\n      const byteStride = accessorDef.bufferView !== undefined ? json.bufferViews[accessorDef.bufferView].byteStride : undefined;\n      const normalized = accessorDef.normalized === true;\n      let array, bufferAttribute;\n\n      // The buffer is not interleaved if the stride is the item size in bytes.\n      if (byteStride && byteStride !== itemBytes) {\n        // Each \"slice\" of the buffer, as defined by 'count' elements of 'byteStride' bytes, gets its own InterleavedBuffer\n        // This makes sure that IBA.count reflects accessor.count properly\n        const ibSlice = Math.floor(byteOffset / byteStride);\n        const ibCacheKey = 'InterleavedBuffer:' + accessorDef.bufferView + ':' + accessorDef.componentType + ':' + ibSlice + ':' + accessorDef.count;\n        let ib = parser.cache.get(ibCacheKey);\n        if (!ib) {\n          array = new TypedArray(bufferView, ibSlice * byteStride, accessorDef.count * byteStride / elementBytes);\n\n          // Integer parameters to IB/IBA are in array elements, not bytes.\n          ib = new InterleavedBuffer(array, byteStride / elementBytes);\n          parser.cache.add(ibCacheKey, ib);\n        }\n        bufferAttribute = new InterleavedBufferAttribute(ib, itemSize, byteOffset % byteStride / elementBytes, normalized);\n      } else {\n        if (bufferView === null) {\n          array = new TypedArray(accessorDef.count * itemSize);\n        } else {\n          array = new TypedArray(bufferView, byteOffset, accessorDef.count * itemSize);\n        }\n        bufferAttribute = new BufferAttribute(array, itemSize, normalized);\n      }\n\n      // https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\n      if (accessorDef.sparse !== undefined) {\n        const itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\n        const TypedArrayIndices = WEBGL_COMPONENT_TYPES[accessorDef.sparse.indices.componentType];\n        const byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\n        const byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\n        const sparseIndices = new TypedArrayIndices(bufferViews[1], byteOffsetIndices, accessorDef.sparse.count * itemSizeIndices);\n        const sparseValues = new TypedArray(bufferViews[2], byteOffsetValues, accessorDef.sparse.count * itemSize);\n        if (bufferView !== null) {\n          // Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\n          bufferAttribute = new BufferAttribute(bufferAttribute.array.slice(), bufferAttribute.itemSize, bufferAttribute.normalized);\n        }\n\n        // Ignore normalized since we copy from sparse\n        bufferAttribute.normalized = false;\n        for (let i = 0, il = sparseIndices.length; i < il; i++) {\n          const index = sparseIndices[i];\n          bufferAttribute.setX(index, sparseValues[i * itemSize]);\n          if (itemSize >= 2) bufferAttribute.setY(index, sparseValues[i * itemSize + 1]);\n          if (itemSize >= 3) bufferAttribute.setZ(index, sparseValues[i * itemSize + 2]);\n          if (itemSize >= 4) bufferAttribute.setW(index, sparseValues[i * itemSize + 3]);\n          if (itemSize >= 5) throw new Error('THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.');\n        }\n        bufferAttribute.normalized = normalized;\n      }\n      return bufferAttribute;\n    });\n  }\n\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\n   *\n   * @private\n   * @param {number} textureIndex\n   * @return {Promise<THREE.Texture|null>}\n   */\n  loadTexture(textureIndex) {\n    const json = this.json;\n    const options = this.options;\n    const textureDef = json.textures[textureIndex];\n    const sourceIndex = textureDef.source;\n    const sourceDef = json.images[sourceIndex];\n    let loader = this.textureLoader;\n    if (sourceDef.uri) {\n      const handler = options.manager.getHandler(sourceDef.uri);\n      if (handler !== null) loader = handler;\n    }\n    return this.loadTextureImage(textureIndex, sourceIndex, loader);\n  }\n  loadTextureImage(textureIndex, sourceIndex, loader) {\n    const parser = this;\n    const json = this.json;\n    const textureDef = json.textures[textureIndex];\n    const sourceDef = json.images[sourceIndex];\n    const cacheKey = (sourceDef.uri || sourceDef.bufferView) + ':' + textureDef.sampler;\n    if (this.textureCache[cacheKey]) {\n      // See https://github.com/mrdoob/three.js/issues/21559.\n      return this.textureCache[cacheKey];\n    }\n    const promise = this.loadImageSource(sourceIndex, loader).then(function (texture) {\n      texture.flipY = false;\n      texture.name = textureDef.name || sourceDef.name || '';\n      if (texture.name === '' && typeof sourceDef.uri === 'string' && sourceDef.uri.startsWith('data:image/') === false) {\n        texture.name = sourceDef.uri;\n      }\n      const samplers = json.samplers || {};\n      const sampler = samplers[textureDef.sampler] || {};\n      texture.magFilter = WEBGL_FILTERS[sampler.magFilter] || LinearFilter;\n      texture.minFilter = WEBGL_FILTERS[sampler.minFilter] || LinearMipmapLinearFilter;\n      texture.wrapS = WEBGL_WRAPPINGS[sampler.wrapS] || RepeatWrapping;\n      texture.wrapT = WEBGL_WRAPPINGS[sampler.wrapT] || RepeatWrapping;\n      texture.generateMipmaps = !texture.isCompressedTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n      parser.associations.set(texture, {\n        textures: textureIndex\n      });\n      return texture;\n    }).catch(function () {\n      return null;\n    });\n    this.textureCache[cacheKey] = promise;\n    return promise;\n  }\n  loadImageSource(sourceIndex, loader) {\n    const parser = this;\n    const json = this.json;\n    const options = this.options;\n    if (this.sourceCache[sourceIndex] !== undefined) {\n      return this.sourceCache[sourceIndex].then(texture => texture.clone());\n    }\n    const sourceDef = json.images[sourceIndex];\n    const URL = self.URL || self.webkitURL;\n    let sourceURI = sourceDef.uri || '';\n    let isObjectURL = false;\n    if (sourceDef.bufferView !== undefined) {\n      // Load binary image data from bufferView, if provided.\n\n      sourceURI = parser.getDependency('bufferView', sourceDef.bufferView).then(function (bufferView) {\n        isObjectURL = true;\n        const blob = new Blob([bufferView], {\n          type: sourceDef.mimeType\n        });\n        sourceURI = URL.createObjectURL(blob);\n        return sourceURI;\n      });\n    } else if (sourceDef.uri === undefined) {\n      throw new Error('THREE.GLTFLoader: Image ' + sourceIndex + ' is missing URI and bufferView');\n    }\n    const promise = Promise.resolve(sourceURI).then(function (sourceURI) {\n      return new Promise(function (resolve, reject) {\n        let onLoad = resolve;\n        if (loader.isImageBitmapLoader === true) {\n          onLoad = function (imageBitmap) {\n            const texture = new Texture(imageBitmap);\n            texture.needsUpdate = true;\n            resolve(texture);\n          };\n        }\n        loader.load(LoaderUtils.resolveURL(sourceURI, options.path), onLoad, undefined, reject);\n      });\n    }).then(function (texture) {\n      // Clean up resources and configure Texture.\n\n      if (isObjectURL === true) {\n        URL.revokeObjectURL(sourceURI);\n      }\n      assignExtrasToUserData(texture, sourceDef);\n      texture.userData.mimeType = sourceDef.mimeType || getImageURIMimeType(sourceDef.uri);\n      return texture;\n    }).catch(function (error) {\n      console.error('THREE.GLTFLoader: Couldn\\'t load texture', sourceURI);\n      throw error;\n    });\n    this.sourceCache[sourceIndex] = promise;\n    return promise;\n  }\n\n  /**\n   * Asynchronously assigns a texture to the given material parameters.\n   *\n   * @private\n   * @param {Object} materialParams\n   * @param {string} mapName\n   * @param {Object} mapDef\n   * @param {string} [colorSpace]\n   * @return {Promise<Texture>}\n   */\n  assignTexture(materialParams, mapName, mapDef, colorSpace) {\n    const parser = this;\n    return this.getDependency('texture', mapDef.index).then(function (texture) {\n      if (!texture) return null;\n      if (mapDef.texCoord !== undefined && mapDef.texCoord > 0) {\n        texture = texture.clone();\n        texture.channel = mapDef.texCoord;\n      }\n      if (parser.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM]) {\n        const transform = mapDef.extensions !== undefined ? mapDef.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM] : undefined;\n        if (transform) {\n          const gltfReference = parser.associations.get(texture);\n          texture = parser.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM].extendTexture(texture, transform);\n          parser.associations.set(texture, gltfReference);\n        }\n      }\n      if (colorSpace !== undefined) {\n        texture.colorSpace = colorSpace;\n      }\n      materialParams[mapName] = texture;\n      return texture;\n    });\n  }\n\n  /**\n   * Assigns final material to a Mesh, Line, or Points instance. The instance\n   * already has a material (generated from the glTF material options alone)\n   * but reuse of the same glTF material may require multiple threejs materials\n   * to accommodate different primitive types, defines, etc. New materials will\n   * be created if necessary, and reused from a cache.\n   *\n   * @private\n   * @param {Object3D} mesh Mesh, Line, or Points instance.\n   */\n  assignFinalMaterial(mesh) {\n    const geometry = mesh.geometry;\n    let material = mesh.material;\n    const useDerivativeTangents = geometry.attributes.tangent === undefined;\n    const useVertexColors = geometry.attributes.color !== undefined;\n    const useFlatShading = geometry.attributes.normal === undefined;\n    if (mesh.isPoints) {\n      const cacheKey = 'PointsMaterial:' + material.uuid;\n      let pointsMaterial = this.cache.get(cacheKey);\n      if (!pointsMaterial) {\n        pointsMaterial = new PointsMaterial();\n        Material.prototype.copy.call(pointsMaterial, material);\n        pointsMaterial.color.copy(material.color);\n        pointsMaterial.map = material.map;\n        pointsMaterial.sizeAttenuation = false; // glTF spec says points should be 1px\n\n        this.cache.add(cacheKey, pointsMaterial);\n      }\n      material = pointsMaterial;\n    } else if (mesh.isLine) {\n      const cacheKey = 'LineBasicMaterial:' + material.uuid;\n      let lineMaterial = this.cache.get(cacheKey);\n      if (!lineMaterial) {\n        lineMaterial = new LineBasicMaterial();\n        Material.prototype.copy.call(lineMaterial, material);\n        lineMaterial.color.copy(material.color);\n        lineMaterial.map = material.map;\n        this.cache.add(cacheKey, lineMaterial);\n      }\n      material = lineMaterial;\n    }\n\n    // Clone the material if it will be modified\n    if (useDerivativeTangents || useVertexColors || useFlatShading) {\n      let cacheKey = 'ClonedMaterial:' + material.uuid + ':';\n      if (useDerivativeTangents) cacheKey += 'derivative-tangents:';\n      if (useVertexColors) cacheKey += 'vertex-colors:';\n      if (useFlatShading) cacheKey += 'flat-shading:';\n      let cachedMaterial = this.cache.get(cacheKey);\n      if (!cachedMaterial) {\n        cachedMaterial = material.clone();\n        if (useVertexColors) cachedMaterial.vertexColors = true;\n        if (useFlatShading) cachedMaterial.flatShading = true;\n        if (useDerivativeTangents) {\n          // https://github.com/mrdoob/three.js/issues/11438#issuecomment-507003995\n          if (cachedMaterial.normalScale) cachedMaterial.normalScale.y *= -1;\n          if (cachedMaterial.clearcoatNormalScale) cachedMaterial.clearcoatNormalScale.y *= -1;\n        }\n        this.cache.add(cacheKey, cachedMaterial);\n        this.associations.set(cachedMaterial, this.associations.get(material));\n      }\n      material = cachedMaterial;\n    }\n    mesh.material = material;\n  }\n  getMaterialType(/* materialIndex */\n  ) {\n    return MeshStandardMaterial;\n  }\n\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\n   *\n   * @private\n   * @param {number} materialIndex\n   * @return {Promise<Material>}\n   */\n  loadMaterial(materialIndex) {\n    const parser = this;\n    const json = this.json;\n    const extensions = this.extensions;\n    const materialDef = json.materials[materialIndex];\n    let materialType;\n    const materialParams = {};\n    const materialExtensions = materialDef.extensions || {};\n    const pending = [];\n    if (materialExtensions[EXTENSIONS.KHR_MATERIALS_UNLIT]) {\n      const kmuExtension = extensions[EXTENSIONS.KHR_MATERIALS_UNLIT];\n      materialType = kmuExtension.getMaterialType();\n      pending.push(kmuExtension.extendParams(materialParams, materialDef, parser));\n    } else {\n      // Specification:\n      // https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\n\n      const metallicRoughness = materialDef.pbrMetallicRoughness || {};\n      materialParams.color = new Color(1.0, 1.0, 1.0);\n      materialParams.opacity = 1.0;\n      if (Array.isArray(metallicRoughness.baseColorFactor)) {\n        const array = metallicRoughness.baseColorFactor;\n        materialParams.color.setRGB(array[0], array[1], array[2], LinearSRGBColorSpace);\n        materialParams.opacity = array[3];\n      }\n      if (metallicRoughness.baseColorTexture !== undefined) {\n        pending.push(parser.assignTexture(materialParams, 'map', metallicRoughness.baseColorTexture, SRGBColorSpace));\n      }\n      materialParams.metalness = metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\n      materialParams.roughness = metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\n      if (metallicRoughness.metallicRoughnessTexture !== undefined) {\n        pending.push(parser.assignTexture(materialParams, 'metalnessMap', metallicRoughness.metallicRoughnessTexture));\n        pending.push(parser.assignTexture(materialParams, 'roughnessMap', metallicRoughness.metallicRoughnessTexture));\n      }\n      materialType = this._invokeOne(function (ext) {\n        return ext.getMaterialType && ext.getMaterialType(materialIndex);\n      });\n      pending.push(Promise.all(this._invokeAll(function (ext) {\n        return ext.extendMaterialParams && ext.extendMaterialParams(materialIndex, materialParams);\n      })));\n    }\n    if (materialDef.doubleSided === true) {\n      materialParams.side = DoubleSide;\n    }\n    const alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\n    if (alphaMode === ALPHA_MODES.BLEND) {\n      materialParams.transparent = true;\n\n      // See: https://github.com/mrdoob/three.js/issues/17706\n      materialParams.depthWrite = false;\n    } else {\n      materialParams.transparent = false;\n      if (alphaMode === ALPHA_MODES.MASK) {\n        materialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\n      }\n    }\n    if (materialDef.normalTexture !== undefined && materialType !== MeshBasicMaterial) {\n      pending.push(parser.assignTexture(materialParams, 'normalMap', materialDef.normalTexture));\n      materialParams.normalScale = new Vector2(1, 1);\n      if (materialDef.normalTexture.scale !== undefined) {\n        const scale = materialDef.normalTexture.scale;\n        materialParams.normalScale.set(scale, scale);\n      }\n    }\n    if (materialDef.occlusionTexture !== undefined && materialType !== MeshBasicMaterial) {\n      pending.push(parser.assignTexture(materialParams, 'aoMap', materialDef.occlusionTexture));\n      if (materialDef.occlusionTexture.strength !== undefined) {\n        materialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\n      }\n    }\n    if (materialDef.emissiveFactor !== undefined && materialType !== MeshBasicMaterial) {\n      const emissiveFactor = materialDef.emissiveFactor;\n      materialParams.emissive = new Color().setRGB(emissiveFactor[0], emissiveFactor[1], emissiveFactor[2], LinearSRGBColorSpace);\n    }\n    if (materialDef.emissiveTexture !== undefined && materialType !== MeshBasicMaterial) {\n      pending.push(parser.assignTexture(materialParams, 'emissiveMap', materialDef.emissiveTexture, SRGBColorSpace));\n    }\n    return Promise.all(pending).then(function () {\n      const material = new materialType(materialParams);\n      if (materialDef.name) material.name = materialDef.name;\n      assignExtrasToUserData(material, materialDef);\n      parser.associations.set(material, {\n        materials: materialIndex\n      });\n      if (materialDef.extensions) addUnknownExtensionsToUserData(extensions, material, materialDef);\n      return material;\n    });\n  }\n\n  /**\n   * When Object3D instances are targeted by animation, they need unique names.\n   *\n   * @private\n   * @param {string} originalName\n   * @return {string}\n   */\n  createUniqueName(originalName) {\n    const sanitizedName = PropertyBinding.sanitizeNodeName(originalName || '');\n    if (sanitizedName in this.nodeNamesUsed) {\n      return sanitizedName + '_' + ++this.nodeNamesUsed[sanitizedName];\n    } else {\n      this.nodeNamesUsed[sanitizedName] = 0;\n      return sanitizedName;\n    }\n  }\n\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\n   *\n   * Creates BufferGeometries from primitives.\n   *\n   * @private\n   * @param {Array<GLTF.Primitive>} primitives\n   * @return {Promise<Array<BufferGeometry>>}\n   */\n  loadGeometries(primitives) {\n    const parser = this;\n    const extensions = this.extensions;\n    const cache = this.primitiveCache;\n    function createDracoPrimitive(primitive) {\n      return extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION].decodePrimitive(primitive, parser).then(function (geometry) {\n        return addPrimitiveAttributes(geometry, primitive, parser);\n      });\n    }\n    const pending = [];\n    for (let i = 0, il = primitives.length; i < il; i++) {\n      const primitive = primitives[i];\n      const cacheKey = createPrimitiveKey(primitive);\n\n      // See if we've already created this geometry\n      const cached = cache[cacheKey];\n      if (cached) {\n        // Use the cached geometry if it exists\n        pending.push(cached.promise);\n      } else {\n        let geometryPromise;\n        if (primitive.extensions && primitive.extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION]) {\n          // Use DRACO geometry if available\n          geometryPromise = createDracoPrimitive(primitive);\n        } else {\n          // Otherwise create a new geometry\n          geometryPromise = addPrimitiveAttributes(new BufferGeometry(), primitive, parser);\n        }\n\n        // Cache this geometry\n        cache[cacheKey] = {\n          primitive: primitive,\n          promise: geometryPromise\n        };\n        pending.push(geometryPromise);\n      }\n    }\n    return Promise.all(pending);\n  }\n\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\n   *\n   * @private\n   * @param {number} meshIndex\n   * @return {Promise<Group|Mesh|SkinnedMesh|Line|Points>}\n   */\n  loadMesh(meshIndex) {\n    const parser = this;\n    const json = this.json;\n    const extensions = this.extensions;\n    const meshDef = json.meshes[meshIndex];\n    const primitives = meshDef.primitives;\n    const pending = [];\n    for (let i = 0, il = primitives.length; i < il; i++) {\n      const material = primitives[i].material === undefined ? createDefaultMaterial(this.cache) : this.getDependency('material', primitives[i].material);\n      pending.push(material);\n    }\n    pending.push(parser.loadGeometries(primitives));\n    return Promise.all(pending).then(function (results) {\n      const materials = results.slice(0, results.length - 1);\n      const geometries = results[results.length - 1];\n      const meshes = [];\n      for (let i = 0, il = geometries.length; i < il; i++) {\n        const geometry = geometries[i];\n        const primitive = primitives[i];\n\n        // 1. create Mesh\n\n        let mesh;\n        const material = materials[i];\n        if (primitive.mode === WEBGL_CONSTANTS.TRIANGLES || primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP || primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN || primitive.mode === undefined) {\n          // .isSkinnedMesh isn't in glTF spec. See ._markDefs()\n          mesh = meshDef.isSkinnedMesh === true ? new SkinnedMesh(geometry, material) : new Mesh(geometry, material);\n          if (mesh.isSkinnedMesh === true) {\n            // normalize skin weights to fix malformed assets (see #15319)\n            mesh.normalizeSkinWeights();\n          }\n          if (primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP) {\n            mesh.geometry = toTrianglesDrawMode(mesh.geometry, TriangleStripDrawMode);\n          } else if (primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN) {\n            mesh.geometry = toTrianglesDrawMode(mesh.geometry, TriangleFanDrawMode);\n          }\n        } else if (primitive.mode === WEBGL_CONSTANTS.LINES) {\n          mesh = new LineSegments(geometry, material);\n        } else if (primitive.mode === WEBGL_CONSTANTS.LINE_STRIP) {\n          mesh = new Line(geometry, material);\n        } else if (primitive.mode === WEBGL_CONSTANTS.LINE_LOOP) {\n          mesh = new LineLoop(geometry, material);\n        } else if (primitive.mode === WEBGL_CONSTANTS.POINTS) {\n          mesh = new Points(geometry, material);\n        } else {\n          throw new Error('THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode);\n        }\n        if (Object.keys(mesh.geometry.morphAttributes).length > 0) {\n          updateMorphTargets(mesh, meshDef);\n        }\n        mesh.name = parser.createUniqueName(meshDef.name || 'mesh_' + meshIndex);\n        assignExtrasToUserData(mesh, meshDef);\n        if (primitive.extensions) addUnknownExtensionsToUserData(extensions, mesh, primitive);\n        parser.assignFinalMaterial(mesh);\n        meshes.push(mesh);\n      }\n      for (let i = 0, il = meshes.length; i < il; i++) {\n        parser.associations.set(meshes[i], {\n          meshes: meshIndex,\n          primitives: i\n        });\n      }\n      if (meshes.length === 1) {\n        if (meshDef.extensions) addUnknownExtensionsToUserData(extensions, meshes[0], meshDef);\n        return meshes[0];\n      }\n      const group = new Group();\n      if (meshDef.extensions) addUnknownExtensionsToUserData(extensions, group, meshDef);\n      parser.associations.set(group, {\n        meshes: meshIndex\n      });\n      for (let i = 0, il = meshes.length; i < il; i++) {\n        group.add(meshes[i]);\n      }\n      return group;\n    });\n  }\n\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\n   *\n   * @private\n   * @param {number} cameraIndex\n   * @return {Promise<THREE.Camera>}\n   */\n  loadCamera(cameraIndex) {\n    let camera;\n    const cameraDef = this.json.cameras[cameraIndex];\n    const params = cameraDef[cameraDef.type];\n    if (!params) {\n      console.warn('THREE.GLTFLoader: Missing camera parameters.');\n      return;\n    }\n    if (cameraDef.type === 'perspective') {\n      camera = new PerspectiveCamera(MathUtils.radToDeg(params.yfov), params.aspectRatio || 1, params.znear || 1, params.zfar || 2e6);\n    } else if (cameraDef.type === 'orthographic') {\n      camera = new OrthographicCamera(-params.xmag, params.xmag, params.ymag, -params.ymag, params.znear, params.zfar);\n    }\n    if (cameraDef.name) camera.name = this.createUniqueName(cameraDef.name);\n    assignExtrasToUserData(camera, cameraDef);\n    return Promise.resolve(camera);\n  }\n\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\n   *\n   * @private\n   * @param {number} skinIndex\n   * @return {Promise<Skeleton>}\n   */\n  loadSkin(skinIndex) {\n    const skinDef = this.json.skins[skinIndex];\n    const pending = [];\n    for (let i = 0, il = skinDef.joints.length; i < il; i++) {\n      pending.push(this._loadNodeShallow(skinDef.joints[i]));\n    }\n    if (skinDef.inverseBindMatrices !== undefined) {\n      pending.push(this.getDependency('accessor', skinDef.inverseBindMatrices));\n    } else {\n      pending.push(null);\n    }\n    return Promise.all(pending).then(function (results) {\n      const inverseBindMatrices = results.pop();\n      const jointNodes = results;\n\n      // Note that bones (joint nodes) may or may not be in the\n      // scene graph at this time.\n\n      const bones = [];\n      const boneInverses = [];\n      for (let i = 0, il = jointNodes.length; i < il; i++) {\n        const jointNode = jointNodes[i];\n        if (jointNode) {\n          bones.push(jointNode);\n          const mat = new Matrix4();\n          if (inverseBindMatrices !== null) {\n            mat.fromArray(inverseBindMatrices.array, i * 16);\n          }\n          boneInverses.push(mat);\n        } else {\n          console.warn('THREE.GLTFLoader: Joint \"%s\" could not be found.', skinDef.joints[i]);\n        }\n      }\n      return new Skeleton(bones, boneInverses);\n    });\n  }\n\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\n   *\n   * @private\n   * @param {number} animationIndex\n   * @return {Promise<AnimationClip>}\n   */\n  loadAnimation(animationIndex) {\n    const json = this.json;\n    const parser = this;\n    const animationDef = json.animations[animationIndex];\n    const animationName = animationDef.name ? animationDef.name : 'animation_' + animationIndex;\n    const pendingNodes = [];\n    const pendingInputAccessors = [];\n    const pendingOutputAccessors = [];\n    const pendingSamplers = [];\n    const pendingTargets = [];\n    for (let i = 0, il = animationDef.channels.length; i < il; i++) {\n      const channel = animationDef.channels[i];\n      const sampler = animationDef.samplers[channel.sampler];\n      const target = channel.target;\n      const name = target.node;\n      const input = animationDef.parameters !== undefined ? animationDef.parameters[sampler.input] : sampler.input;\n      const output = animationDef.parameters !== undefined ? animationDef.parameters[sampler.output] : sampler.output;\n      if (target.node === undefined) continue;\n      pendingNodes.push(this.getDependency('node', name));\n      pendingInputAccessors.push(this.getDependency('accessor', input));\n      pendingOutputAccessors.push(this.getDependency('accessor', output));\n      pendingSamplers.push(sampler);\n      pendingTargets.push(target);\n    }\n    return Promise.all([Promise.all(pendingNodes), Promise.all(pendingInputAccessors), Promise.all(pendingOutputAccessors), Promise.all(pendingSamplers), Promise.all(pendingTargets)]).then(function (dependencies) {\n      const nodes = dependencies[0];\n      const inputAccessors = dependencies[1];\n      const outputAccessors = dependencies[2];\n      const samplers = dependencies[3];\n      const targets = dependencies[4];\n      const tracks = [];\n      for (let i = 0, il = nodes.length; i < il; i++) {\n        const node = nodes[i];\n        const inputAccessor = inputAccessors[i];\n        const outputAccessor = outputAccessors[i];\n        const sampler = samplers[i];\n        const target = targets[i];\n        if (node === undefined) continue;\n        if (node.updateMatrix) {\n          node.updateMatrix();\n        }\n        const createdTracks = parser._createAnimationTracks(node, inputAccessor, outputAccessor, sampler, target);\n        if (createdTracks) {\n          for (let k = 0; k < createdTracks.length; k++) {\n            tracks.push(createdTracks[k]);\n          }\n        }\n      }\n      return new AnimationClip(animationName, undefined, tracks);\n    });\n  }\n  createNodeMesh(nodeIndex) {\n    const json = this.json;\n    const parser = this;\n    const nodeDef = json.nodes[nodeIndex];\n    if (nodeDef.mesh === undefined) return null;\n    return parser.getDependency('mesh', nodeDef.mesh).then(function (mesh) {\n      const node = parser._getNodeRef(parser.meshCache, nodeDef.mesh, mesh);\n\n      // if weights are provided on the node, override weights on the mesh.\n      if (nodeDef.weights !== undefined) {\n        node.traverse(function (o) {\n          if (!o.isMesh) return;\n          for (let i = 0, il = nodeDef.weights.length; i < il; i++) {\n            o.morphTargetInfluences[i] = nodeDef.weights[i];\n          }\n        });\n      }\n      return node;\n    });\n  }\n\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\n   *\n   * @private\n   * @param {number} nodeIndex\n   * @return {Promise<Object3D>}\n   */\n  loadNode(nodeIndex) {\n    const json = this.json;\n    const parser = this;\n    const nodeDef = json.nodes[nodeIndex];\n    const nodePending = parser._loadNodeShallow(nodeIndex);\n    const childPending = [];\n    const childrenDef = nodeDef.children || [];\n    for (let i = 0, il = childrenDef.length; i < il; i++) {\n      childPending.push(parser.getDependency('node', childrenDef[i]));\n    }\n    const skeletonPending = nodeDef.skin === undefined ? Promise.resolve(null) : parser.getDependency('skin', nodeDef.skin);\n    return Promise.all([nodePending, Promise.all(childPending), skeletonPending]).then(function (results) {\n      const node = results[0];\n      const children = results[1];\n      const skeleton = results[2];\n      if (skeleton !== null) {\n        // This full traverse should be fine because\n        // child glTF nodes have not been added to this node yet.\n        node.traverse(function (mesh) {\n          if (!mesh.isSkinnedMesh) return;\n          mesh.bind(skeleton, _identityMatrix);\n        });\n      }\n      for (let i = 0, il = children.length; i < il; i++) {\n        node.add(children[i]);\n      }\n      return node;\n    });\n  }\n\n  // ._loadNodeShallow() parses a single node.\n  // skin and child nodes are created and added in .loadNode() (no '_' prefix).\n  _loadNodeShallow(nodeIndex) {\n    const json = this.json;\n    const extensions = this.extensions;\n    const parser = this;\n\n    // This method is called from .loadNode() and .loadSkin().\n    // Cache a node to avoid duplication.\n\n    if (this.nodeCache[nodeIndex] !== undefined) {\n      return this.nodeCache[nodeIndex];\n    }\n    const nodeDef = json.nodes[nodeIndex];\n\n    // reserve node's name before its dependencies, so the root has the intended name.\n    const nodeName = nodeDef.name ? parser.createUniqueName(nodeDef.name) : '';\n    const pending = [];\n    const meshPromise = parser._invokeOne(function (ext) {\n      return ext.createNodeMesh && ext.createNodeMesh(nodeIndex);\n    });\n    if (meshPromise) {\n      pending.push(meshPromise);\n    }\n    if (nodeDef.camera !== undefined) {\n      pending.push(parser.getDependency('camera', nodeDef.camera).then(function (camera) {\n        return parser._getNodeRef(parser.cameraCache, nodeDef.camera, camera);\n      }));\n    }\n    parser._invokeAll(function (ext) {\n      return ext.createNodeAttachment && ext.createNodeAttachment(nodeIndex);\n    }).forEach(function (promise) {\n      pending.push(promise);\n    });\n    this.nodeCache[nodeIndex] = Promise.all(pending).then(function (objects) {\n      let node;\n\n      // .isBone isn't in glTF spec. See ._markDefs\n      if (nodeDef.isBone === true) {\n        node = new Bone();\n      } else if (objects.length > 1) {\n        node = new Group();\n      } else if (objects.length === 1) {\n        node = objects[0];\n      } else {\n        node = new Object3D();\n      }\n      if (node !== objects[0]) {\n        for (let i = 0, il = objects.length; i < il; i++) {\n          node.add(objects[i]);\n        }\n      }\n      if (nodeDef.name) {\n        node.userData.name = nodeDef.name;\n        node.name = nodeName;\n      }\n      assignExtrasToUserData(node, nodeDef);\n      if (nodeDef.extensions) addUnknownExtensionsToUserData(extensions, node, nodeDef);\n      if (nodeDef.matrix !== undefined) {\n        const matrix = new Matrix4();\n        matrix.fromArray(nodeDef.matrix);\n        node.applyMatrix4(matrix);\n      } else {\n        if (nodeDef.translation !== undefined) {\n          node.position.fromArray(nodeDef.translation);\n        }\n        if (nodeDef.rotation !== undefined) {\n          node.quaternion.fromArray(nodeDef.rotation);\n        }\n        if (nodeDef.scale !== undefined) {\n          node.scale.fromArray(nodeDef.scale);\n        }\n      }\n      if (!parser.associations.has(node)) {\n        parser.associations.set(node, {});\n      } else if (nodeDef.mesh !== undefined && parser.meshCache.refs[nodeDef.mesh] > 1) {\n        const mapping = parser.associations.get(node);\n        parser.associations.set(node, {\n          ...mapping\n        });\n      }\n      parser.associations.get(node).nodes = nodeIndex;\n      return node;\n    });\n    return this.nodeCache[nodeIndex];\n  }\n\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\n   *\n   * @private\n   * @param {number} sceneIndex\n   * @return {Promise<Group>}\n   */\n  loadScene(sceneIndex) {\n    const extensions = this.extensions;\n    const sceneDef = this.json.scenes[sceneIndex];\n    const parser = this;\n\n    // Loader returns Group, not Scene.\n    // See: https://github.com/mrdoob/three.js/issues/18342#issuecomment-578981172\n    const scene = new Group();\n    if (sceneDef.name) scene.name = parser.createUniqueName(sceneDef.name);\n    assignExtrasToUserData(scene, sceneDef);\n    if (sceneDef.extensions) addUnknownExtensionsToUserData(extensions, scene, sceneDef);\n    const nodeIds = sceneDef.nodes || [];\n    const pending = [];\n    for (let i = 0, il = nodeIds.length; i < il; i++) {\n      pending.push(parser.getDependency('node', nodeIds[i]));\n    }\n    return Promise.all(pending).then(function (nodes) {\n      for (let i = 0, il = nodes.length; i < il; i++) {\n        scene.add(nodes[i]);\n      }\n\n      // Removes dangling associations, associations that reference a node that\n      // didn't make it into the scene.\n      const reduceAssociations = node => {\n        const reducedAssociations = new Map();\n        for (const [key, value] of parser.associations) {\n          if (key instanceof Material || key instanceof Texture) {\n            reducedAssociations.set(key, value);\n          }\n        }\n        node.traverse(node => {\n          const mappings = parser.associations.get(node);\n          if (mappings != null) {\n            reducedAssociations.set(node, mappings);\n          }\n        });\n        return reducedAssociations;\n      };\n      parser.associations = reduceAssociations(scene);\n      return scene;\n    });\n  }\n  _createAnimationTracks(node, inputAccessor, outputAccessor, sampler, target) {\n    const tracks = [];\n    const targetName = node.name ? node.name : node.uuid;\n    const targetNames = [];\n    if (PATH_PROPERTIES[target.path] === PATH_PROPERTIES.weights) {\n      node.traverse(function (object) {\n        if (object.morphTargetInfluences) {\n          targetNames.push(object.name ? object.name : object.uuid);\n        }\n      });\n    } else {\n      targetNames.push(targetName);\n    }\n    let TypedKeyframeTrack;\n    switch (PATH_PROPERTIES[target.path]) {\n      case PATH_PROPERTIES.weights:\n        TypedKeyframeTrack = NumberKeyframeTrack;\n        break;\n      case PATH_PROPERTIES.rotation:\n        TypedKeyframeTrack = QuaternionKeyframeTrack;\n        break;\n      case PATH_PROPERTIES.translation:\n      case PATH_PROPERTIES.scale:\n        TypedKeyframeTrack = VectorKeyframeTrack;\n        break;\n      default:\n        switch (outputAccessor.itemSize) {\n          case 1:\n            TypedKeyframeTrack = NumberKeyframeTrack;\n            break;\n          case 2:\n          case 3:\n          default:\n            TypedKeyframeTrack = VectorKeyframeTrack;\n            break;\n        }\n        break;\n    }\n    const interpolation = sampler.interpolation !== undefined ? INTERPOLATION[sampler.interpolation] : InterpolateLinear;\n    const outputArray = this._getArrayFromAccessor(outputAccessor);\n    for (let j = 0, jl = targetNames.length; j < jl; j++) {\n      const track = new TypedKeyframeTrack(targetNames[j] + '.' + PATH_PROPERTIES[target.path], inputAccessor.array, outputArray, interpolation);\n\n      // Override interpolation with custom factory method.\n      if (sampler.interpolation === 'CUBICSPLINE') {\n        this._createCubicSplineTrackInterpolant(track);\n      }\n      tracks.push(track);\n    }\n    return tracks;\n  }\n  _getArrayFromAccessor(accessor) {\n    let outputArray = accessor.array;\n    if (accessor.normalized) {\n      const scale = getNormalizedComponentScale(outputArray.constructor);\n      const scaled = new Float32Array(outputArray.length);\n      for (let j = 0, jl = outputArray.length; j < jl; j++) {\n        scaled[j] = outputArray[j] * scale;\n      }\n      outputArray = scaled;\n    }\n    return outputArray;\n  }\n  _createCubicSplineTrackInterpolant(track) {\n    track.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline(result) {\n      // A CUBICSPLINE keyframe in glTF has three output values for each input value,\n      // representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\n      // must be divided by three to get the interpolant's sampleSize argument.\n\n      const interpolantType = this instanceof QuaternionKeyframeTrack ? GLTFCubicSplineQuaternionInterpolant : GLTFCubicSplineInterpolant;\n      return new interpolantType(this.times, this.values, this.getValueSize() / 3, result);\n    };\n\n    // Mark as CUBICSPLINE. `track.getInterpolation()` doesn't support custom interpolants.\n    track.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\n  }\n}\n\n/**\n *\n * @private\n * @param {BufferGeometry} geometry\n * @param {GLTF.Primitive} primitiveDef\n * @param {GLTFParser} parser\n */\nfunction computeBounds(geometry, primitiveDef, parser) {\n  const attributes = primitiveDef.attributes;\n  const box = new Box3();\n  if (attributes.POSITION !== undefined) {\n    const accessor = parser.json.accessors[attributes.POSITION];\n    const min = accessor.min;\n    const max = accessor.max;\n\n    // glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n    if (min !== undefined && max !== undefined) {\n      box.set(new Vector3(min[0], min[1], min[2]), new Vector3(max[0], max[1], max[2]));\n      if (accessor.normalized) {\n        const boxScale = getNormalizedComponentScale(WEBGL_COMPONENT_TYPES[accessor.componentType]);\n        box.min.multiplyScalar(boxScale);\n        box.max.multiplyScalar(boxScale);\n      }\n    } else {\n      console.warn('THREE.GLTFLoader: Missing min/max properties for accessor POSITION.');\n      return;\n    }\n  } else {\n    return;\n  }\n  const targets = primitiveDef.targets;\n  if (targets !== undefined) {\n    const maxDisplacement = new Vector3();\n    const vector = new Vector3();\n    for (let i = 0, il = targets.length; i < il; i++) {\n      const target = targets[i];\n      if (target.POSITION !== undefined) {\n        const accessor = parser.json.accessors[target.POSITION];\n        const min = accessor.min;\n        const max = accessor.max;\n\n        // glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n        if (min !== undefined && max !== undefined) {\n          // we need to get max of absolute components because target weight is [-1,1]\n          vector.setX(Math.max(Math.abs(min[0]), Math.abs(max[0])));\n          vector.setY(Math.max(Math.abs(min[1]), Math.abs(max[1])));\n          vector.setZ(Math.max(Math.abs(min[2]), Math.abs(max[2])));\n          if (accessor.normalized) {\n            const boxScale = getNormalizedComponentScale(WEBGL_COMPONENT_TYPES[accessor.componentType]);\n            vector.multiplyScalar(boxScale);\n          }\n\n          // Note: this assumes that the sum of all weights is at most 1. This isn't quite correct - it's more conservative\n          // to assume that each target can have a max weight of 1. However, for some use cases - notably, when morph targets\n          // are used to implement key-frame animations and as such only two are active at a time - this results in very large\n          // boxes. So for now we make a box that's sometimes a touch too small but is hopefully mostly of reasonable size.\n          maxDisplacement.max(vector);\n        } else {\n          console.warn('THREE.GLTFLoader: Missing min/max properties for accessor POSITION.');\n        }\n      }\n    }\n\n    // As per comment above this box isn't conservative, but has a reasonable size for a very large number of morph targets.\n    box.expandByVector(maxDisplacement);\n  }\n  geometry.boundingBox = box;\n  const sphere = new Sphere();\n  box.getCenter(sphere.center);\n  sphere.radius = box.min.distanceTo(box.max) / 2;\n  geometry.boundingSphere = sphere;\n}\n\n/**\n *\n * @private\n * @param {BufferGeometry} geometry\n * @param {GLTF.Primitive} primitiveDef\n * @param {GLTFParser} parser\n * @return {Promise<BufferGeometry>}\n */\nfunction addPrimitiveAttributes(geometry, primitiveDef, parser) {\n  const attributes = primitiveDef.attributes;\n  const pending = [];\n  function assignAttributeAccessor(accessorIndex, attributeName) {\n    return parser.getDependency('accessor', accessorIndex).then(function (accessor) {\n      geometry.setAttribute(attributeName, accessor);\n    });\n  }\n  for (const gltfAttributeName in attributes) {\n    const threeAttributeName = ATTRIBUTES[gltfAttributeName] || gltfAttributeName.toLowerCase();\n\n    // Skip attributes already provided by e.g. Draco extension.\n    if (threeAttributeName in geometry.attributes) continue;\n    pending.push(assignAttributeAccessor(attributes[gltfAttributeName], threeAttributeName));\n  }\n  if (primitiveDef.indices !== undefined && !geometry.index) {\n    const accessor = parser.getDependency('accessor', primitiveDef.indices).then(function (accessor) {\n      geometry.setIndex(accessor);\n    });\n    pending.push(accessor);\n  }\n  if (ColorManagement.workingColorSpace !== LinearSRGBColorSpace && 'COLOR_0' in attributes) {\n    console.warn(`THREE.GLTFLoader: Converting vertex colors from \"srgb-linear\" to \"${ColorManagement.workingColorSpace}\" not supported.`);\n  }\n  assignExtrasToUserData(geometry, primitiveDef);\n  computeBounds(geometry, primitiveDef, parser);\n  return Promise.all(pending).then(function () {\n    return primitiveDef.targets !== undefined ? addMorphTargets(geometry, primitiveDef.targets, parser) : geometry;\n  });\n}\n\n/**\n * Loader result of `GLTFLoader`.\n *\n * @typedef {Object} GLTFLoader~LoadObject\n * @property {Array<AnimationClip>} animations - An array of animation clips.\n * @property {Object} asset - Meta data about the loaded asset.\n * @property {Array<Camera>} cameras - An array of cameras.\n * @property {GLTFParser} parser - A reference to the internal parser.\n * @property {Group} scene - The default scene.\n * @property {Array<Group>} scenes - glTF assets might define multiple scenes.\n * @property {Object} userData - Additional data.\n **/\n\nexport { GLTFLoader };", "/**\n * A simple pool for managing Web Workers.\n *\n * @three_import import { WorkerPool } from 'three/addons/utils/WorkerPool.js';\n */\nexport class WorkerPool {\n  /**\n   * Constructs a new Worker pool.\n   *\n   * @param {number} [pool=4] - The size of the pool.\n   */\n  constructor(pool = 4) {\n    /**\n     * The size of the pool.\n     *\n     * @type {number}\n     * @default 4\n     */\n    this.pool = pool;\n\n    /**\n     * A message queue.\n     *\n     * @type {Array<Object>}\n     */\n    this.queue = [];\n\n    /**\n     * An array of Workers.\n     *\n     * @type {Array<Worker>}\n     */\n    this.workers = [];\n\n    /**\n     * An array with resolve functions for messages.\n     *\n     * @type {Array<Function>}\n     */\n    this.workersResolve = [];\n\n    /**\n     * The current worker status.\n     *\n     * @type {number}\n     */\n    this.workerStatus = 0;\n\n    /**\n     * A factory function for creating workers.\n     *\n     * @type {?Function}\n     */\n    this.workerCreator = null;\n  }\n  _initWorker(workerId) {\n    if (!this.workers[workerId]) {\n      const worker = this.workerCreator();\n      worker.addEventListener('message', this._onMessage.bind(this, workerId));\n      this.workers[workerId] = worker;\n    }\n  }\n  _getIdleWorker() {\n    for (let i = 0; i < this.pool; i++) if (!(this.workerStatus & 1 << i)) return i;\n    return -1;\n  }\n  _onMessage(workerId, msg) {\n    const resolve = this.workersResolve[workerId];\n    resolve && resolve(msg);\n    if (this.queue.length) {\n      const {\n        resolve,\n        msg,\n        transfer\n      } = this.queue.shift();\n      this.workersResolve[workerId] = resolve;\n      this.workers[workerId].postMessage(msg, transfer);\n    } else {\n      this.workerStatus ^= 1 << workerId;\n    }\n  }\n\n  /**\n   * Sets a function that is responsible for creating Workers.\n   *\n   * @param {Function} workerCreator - The worker creator function.\n   */\n  setWorkerCreator(workerCreator) {\n    this.workerCreator = workerCreator;\n  }\n\n  /**\n   * Sets the Worker limit\n   *\n   * @param {number} pool - The size of the pool.\n   */\n  setWorkerLimit(pool) {\n    this.pool = pool;\n  }\n\n  /**\n   * Post a message to an idle Worker. If no Worker is available,\n   * the message is pushed into a message queue for later processing.\n   *\n   * @param {Object} msg - The message.\n   * @param {Array<ArrayBuffer>} transfer - An array with array buffers for data transfer.\n   * @return {Promise} A Promise that resolves when the message has been processed.\n   */\n  postMessage(msg, transfer) {\n    return new Promise(resolve => {\n      const workerId = this._getIdleWorker();\n      if (workerId !== -1) {\n        this._initWorker(workerId);\n        this.workerStatus |= 1 << workerId;\n        this.workersResolve[workerId] = resolve;\n        this.workers[workerId].postMessage(msg, transfer);\n      } else {\n        this.queue.push({\n          resolve,\n          msg,\n          transfer\n        });\n      }\n    });\n  }\n\n  /**\n   * Terminates all Workers of this pool. Call this  method whenever this\n   * Worker pool is no longer used in your app.\n   */\n  dispose() {\n    this.workers.forEach(worker => worker.terminate());\n    this.workersResolve.length = 0;\n    this.workers.length = 0;\n    this.queue.length = 0;\n    this.workerStatus = 0;\n  }\n}", "const t = 0,\n  e = 1,\n  n = 2,\n  i = 3,\n  s = 0,\n  a = 0,\n  r = 2,\n  o = 0,\n  l = 1,\n  f = 160,\n  h = 161,\n  U = 162,\n  c = 163,\n  _ = 166,\n  p = 0,\n  g = 1,\n  y = 0,\n  x = 1,\n  u = 2,\n  b = 3,\n  d = 4,\n  w = 5,\n  m = 6,\n  D = 7,\n  B = 8,\n  L = 9,\n  v = 10,\n  A = 11,\n  k = 12,\n  V = 13,\n  I = 14,\n  S = 15,\n  F = 16,\n  O = 17,\n  E = 18,\n  T = 0,\n  C = 1,\n  M = 2,\n  P = 3,\n  z = 4,\n  W = 5,\n  H = 6,\n  N = 7,\n  K = 8,\n  X = 9,\n  R = 10,\n  Y = 11,\n  j = 0,\n  q = 1,\n  G = 2,\n  J = 13,\n  Q = 14,\n  Z = 15,\n  $ = 128,\n  tt = 64,\n  et = 32,\n  nt = 16,\n  it = 0,\n  st = 1,\n  at = 2,\n  rt = 3,\n  ot = 4,\n  lt = 5,\n  ft = 6,\n  ht = 7,\n  Ut = 8,\n  ct = 9,\n  _t = 10,\n  pt = 13,\n  gt = 14,\n  yt = 15,\n  xt = 16,\n  ut = 17,\n  bt = 20,\n  dt = 21,\n  wt = 22,\n  mt = 23,\n  Dt = 24,\n  Bt = 27,\n  Lt = 28,\n  vt = 29,\n  At = 30,\n  kt = 31,\n  Vt = 34,\n  It = 35,\n  St = 36,\n  Ft = 37,\n  Ot = 38,\n  Et = 41,\n  Tt = 42,\n  Ct = 43,\n  Mt = 44,\n  Pt = 45,\n  zt = 48,\n  Wt = 49,\n  Ht = 50,\n  Nt = 58,\n  Kt = 59,\n  Xt = 62,\n  Rt = 63,\n  Yt = 64,\n  jt = 65,\n  qt = 68,\n  Gt = 69,\n  Jt = 70,\n  Qt = 71,\n  Zt = 74,\n  $t = 75,\n  te = 76,\n  ee = 77,\n  ne = 78,\n  ie = 81,\n  se = 82,\n  ae = 83,\n  re = 84,\n  oe = 85,\n  le = 88,\n  fe = 89,\n  he = 90,\n  Ue = 91,\n  ce = 92,\n  _e = 95,\n  pe = 96,\n  ge = 97,\n  ye = 98,\n  xe = 99,\n  ue = 100,\n  be = 101,\n  de = 102,\n  we = 103,\n  me = 104,\n  De = 105,\n  Be = 106,\n  Le = 107,\n  ve = 108,\n  Ae = 109,\n  ke = 110,\n  Ve = 111,\n  Ie = 112,\n  Se = 113,\n  Fe = 114,\n  Oe = 115,\n  Ee = 116,\n  Te = 117,\n  Ce = 118,\n  Me = 119,\n  Pe = 120,\n  ze = 121,\n  We = 122,\n  He = 123,\n  Ne = 124,\n  Ke = 125,\n  Xe = 126,\n  Re = 127,\n  Ye = 128,\n  je = 129,\n  qe = 130,\n  Ge = 131,\n  Je = 132,\n  Qe = 133,\n  Ze = 134,\n  $e = 135,\n  tn = 136,\n  en = 137,\n  nn = 138,\n  sn = 139,\n  an = 140,\n  rn = 141,\n  on = 142,\n  ln = 143,\n  fn = 144,\n  hn = 145,\n  Un = 146,\n  cn = 147,\n  _n = 148,\n  pn = 149,\n  gn = 150,\n  yn = 151,\n  xn = 152,\n  un = 153,\n  bn = 154,\n  dn = 155,\n  wn = 156,\n  mn = 157,\n  Dn = 158,\n  Bn = 159,\n  Ln = 160,\n  vn = 161,\n  An = 162,\n  kn = 163,\n  Vn = 164,\n  In = 165,\n  Sn = 166,\n  Fn = 167,\n  On = 168,\n  En = 169,\n  Tn = 170,\n  Cn = 171,\n  Mn = 172,\n  Pn = 173,\n  zn = 174,\n  Wn = 175,\n  Hn = 176,\n  Nn = 177,\n  Kn = 178,\n  Xn = 179,\n  Rn = 180,\n  Yn = 181,\n  jn = 182,\n  qn = 183,\n  Gn = 184,\n  Jn = 1000156007,\n  Qn = 1000156008,\n  Zn = 1000156009,\n  $n = 1000156010,\n  ti = 1000156011,\n  ei = 1000156017,\n  ni = 1000156018,\n  ii = 1000156019,\n  si = 1000156020,\n  ai = 1000156021,\n  ri = 1000054e3,\n  oi = 1000054001,\n  li = 1000054002,\n  fi = 1000054003,\n  hi = 1000054004,\n  Ui = 1000054005,\n  ci = 1000054006,\n  _i = 1000054007,\n  pi = 1000066e3,\n  gi = 1000066001,\n  yi = 1000066002,\n  xi = 1000066003,\n  ui = 1000066004,\n  bi = 1000066005,\n  di = 1000066006,\n  wi = 1000066007,\n  mi = 1000066008,\n  Di = 1000066009,\n  Bi = 1000066010,\n  Li = 1000066011,\n  vi = 1000066012,\n  Ai = 1000066013,\n  ki = 100034e4,\n  Vi = 1000340001;\nclass Ii {\n  constructor() {\n    this.vkFormat = 0, this.typeSize = 1, this.pixelWidth = 0, this.pixelHeight = 0, this.pixelDepth = 0, this.layerCount = 0, this.faceCount = 1, this.supercompressionScheme = 0, this.levels = [], this.dataFormatDescriptor = [{\n      vendorId: 0,\n      descriptorType: 0,\n      descriptorBlockSize: 0,\n      versionNumber: 2,\n      colorModel: 0,\n      colorPrimaries: 1,\n      transferFunction: 2,\n      flags: 0,\n      texelBlockDimension: [0, 0, 0, 0],\n      bytesPlane: [0, 0, 0, 0, 0, 0, 0, 0],\n      samples: []\n    }], this.keyValue = {}, this.globalData = null;\n  }\n}\nclass Si {\n  constructor(t, e, n, i) {\n    this._dataView = void 0, this._littleEndian = void 0, this._offset = void 0, this._dataView = new DataView(t.buffer, t.byteOffset + e, n), this._littleEndian = i, this._offset = 0;\n  }\n  _nextUint8() {\n    const t = this._dataView.getUint8(this._offset);\n    return this._offset += 1, t;\n  }\n  _nextUint16() {\n    const t = this._dataView.getUint16(this._offset, this._littleEndian);\n    return this._offset += 2, t;\n  }\n  _nextUint32() {\n    const t = this._dataView.getUint32(this._offset, this._littleEndian);\n    return this._offset += 4, t;\n  }\n  _nextUint64() {\n    const t = this._dataView.getUint32(this._offset, this._littleEndian) + 2 ** 32 * this._dataView.getUint32(this._offset + 4, this._littleEndian);\n    return this._offset += 8, t;\n  }\n  _nextInt32() {\n    const t = this._dataView.getInt32(this._offset, this._littleEndian);\n    return this._offset += 4, t;\n  }\n  _nextUint8Array(t) {\n    const e = new Uint8Array(this._dataView.buffer, this._dataView.byteOffset + this._offset, t);\n    return this._offset += t, e;\n  }\n  _skip(t) {\n    return this._offset += t, this;\n  }\n  _scan(t, e) {\n    void 0 === e && (e = 0);\n    const n = this._offset;\n    let i = 0;\n    for (; this._dataView.getUint8(this._offset) !== e && i < t;) i++, this._offset++;\n    return i < t && this._offset++, new Uint8Array(this._dataView.buffer, this._dataView.byteOffset + n, i);\n  }\n}\nconst Fi = new Uint8Array([0]),\n  Oi = [171, 75, 84, 88, 32, 50, 48, 187, 13, 10, 26, 10];\nfunction Ei(t) {\n  return new TextEncoder().encode(t);\n}\nfunction Ti(t) {\n  return new TextDecoder().decode(t);\n}\nfunction Ci(t) {\n  let e = 0;\n  for (const n of t) e += n.byteLength;\n  const n = new Uint8Array(e);\n  let i = 0;\n  for (const e of t) n.set(new Uint8Array(e), i), i += e.byteLength;\n  return n;\n}\nfunction Mi(t, e) {\n  return void 0 === e && (e = 4), Math.ceil(t / e) * e - t;\n}\nfunction Pi(t) {\n  const e = new Uint8Array(t.buffer, t.byteOffset, Oi.length);\n  if (e[0] !== Oi[0] || e[1] !== Oi[1] || e[2] !== Oi[2] || e[3] !== Oi[3] || e[4] !== Oi[4] || e[5] !== Oi[5] || e[6] !== Oi[6] || e[7] !== Oi[7] || e[8] !== Oi[8] || e[9] !== Oi[9] || e[10] !== Oi[10] || e[11] !== Oi[11]) throw new Error(\"Missing KTX 2.0 identifier.\");\n  const n = new Ii(),\n    i = 17 * Uint32Array.BYTES_PER_ELEMENT,\n    s = new Si(t, Oi.length, i, !0);\n  n.vkFormat = s._nextUint32(), n.typeSize = s._nextUint32(), n.pixelWidth = s._nextUint32(), n.pixelHeight = s._nextUint32(), n.pixelDepth = s._nextUint32(), n.layerCount = s._nextUint32(), n.faceCount = s._nextUint32();\n  const a = s._nextUint32();\n  n.supercompressionScheme = s._nextUint32();\n  const r = s._nextUint32(),\n    o = s._nextUint32(),\n    l = s._nextUint32(),\n    f = s._nextUint32(),\n    h = s._nextUint64(),\n    U = s._nextUint64(),\n    c = new Si(t, Oi.length + i, 3 * a * 8, !0);\n  for (let e = 0; e < a; e++) n.levels.push({\n    levelData: new Uint8Array(t.buffer, t.byteOffset + c._nextUint64(), c._nextUint64()),\n    uncompressedByteLength: c._nextUint64()\n  });\n  const _ = new Si(t, r, o, !0),\n    p = {\n      vendorId: _._skip(4)._nextUint16(),\n      descriptorType: _._nextUint16(),\n      versionNumber: _._nextUint16(),\n      descriptorBlockSize: _._nextUint16(),\n      colorModel: _._nextUint8(),\n      colorPrimaries: _._nextUint8(),\n      transferFunction: _._nextUint8(),\n      flags: _._nextUint8(),\n      texelBlockDimension: [_._nextUint8(), _._nextUint8(), _._nextUint8(), _._nextUint8()],\n      bytesPlane: [_._nextUint8(), _._nextUint8(), _._nextUint8(), _._nextUint8(), _._nextUint8(), _._nextUint8(), _._nextUint8(), _._nextUint8()],\n      samples: []\n    },\n    g = (p.descriptorBlockSize / 4 - 6) / 4;\n  for (let t = 0; t < g; t++) {\n    const e = {\n      bitOffset: _._nextUint16(),\n      bitLength: _._nextUint8(),\n      channelType: _._nextUint8(),\n      samplePosition: [_._nextUint8(), _._nextUint8(), _._nextUint8(), _._nextUint8()],\n      sampleLower: -Infinity,\n      sampleUpper: Infinity\n    };\n    64 & e.channelType ? (e.sampleLower = _._nextInt32(), e.sampleUpper = _._nextInt32()) : (e.sampleLower = _._nextUint32(), e.sampleUpper = _._nextUint32()), p.samples[t] = e;\n  }\n  n.dataFormatDescriptor.length = 0, n.dataFormatDescriptor.push(p);\n  const y = new Si(t, l, f, !0);\n  for (; y._offset < f;) {\n    const t = y._nextUint32(),\n      e = y._scan(t),\n      i = Ti(e);\n    if (n.keyValue[i] = y._nextUint8Array(t - e.byteLength - 1), i.match(/^ktx/i)) {\n      const t = Ti(n.keyValue[i]);\n      n.keyValue[i] = t.substring(0, t.lastIndexOf(\"\\0\"));\n    }\n    y._skip(t % 4 ? 4 - t % 4 : 0);\n  }\n  if (U <= 0) return n;\n  const x = new Si(t, h, U, !0),\n    u = x._nextUint16(),\n    b = x._nextUint16(),\n    d = x._nextUint32(),\n    w = x._nextUint32(),\n    m = x._nextUint32(),\n    D = x._nextUint32(),\n    B = [];\n  for (let t = 0; t < a; t++) B.push({\n    imageFlags: x._nextUint32(),\n    rgbSliceByteOffset: x._nextUint32(),\n    rgbSliceByteLength: x._nextUint32(),\n    alphaSliceByteOffset: x._nextUint32(),\n    alphaSliceByteLength: x._nextUint32()\n  });\n  const L = h + x._offset,\n    v = L + d,\n    A = v + w,\n    k = A + m,\n    V = new Uint8Array(t.buffer, t.byteOffset + L, d),\n    I = new Uint8Array(t.buffer, t.byteOffset + v, w),\n    S = new Uint8Array(t.buffer, t.byteOffset + A, m),\n    F = new Uint8Array(t.buffer, t.byteOffset + k, D);\n  return n.globalData = {\n    endpointCount: u,\n    selectorCount: b,\n    imageDescs: B,\n    endpointsData: V,\n    selectorsData: I,\n    tablesData: S,\n    extendedData: F\n  }, n;\n}\nconst zi = {\n  keepWriter: !1\n};\nfunction Wi(t, e) {\n  void 0 === e && (e = {}), e = {\n    ...zi,\n    ...e\n  };\n  let n = new ArrayBuffer(0);\n  if (t.globalData) {\n    const e = new ArrayBuffer(20 + 5 * t.globalData.imageDescs.length * 4),\n      i = new DataView(e);\n    i.setUint16(0, t.globalData.endpointCount, !0), i.setUint16(2, t.globalData.selectorCount, !0), i.setUint32(4, t.globalData.endpointsData.byteLength, !0), i.setUint32(8, t.globalData.selectorsData.byteLength, !0), i.setUint32(12, t.globalData.tablesData.byteLength, !0), i.setUint32(16, t.globalData.extendedData.byteLength, !0);\n    for (let e = 0; e < t.globalData.imageDescs.length; e++) {\n      const n = t.globalData.imageDescs[e];\n      i.setUint32(20 + 5 * e * 4 + 0, n.imageFlags, !0), i.setUint32(20 + 5 * e * 4 + 4, n.rgbSliceByteOffset, !0), i.setUint32(20 + 5 * e * 4 + 8, n.rgbSliceByteLength, !0), i.setUint32(20 + 5 * e * 4 + 12, n.alphaSliceByteOffset, !0), i.setUint32(20 + 5 * e * 4 + 16, n.alphaSliceByteLength, !0);\n    }\n    n = Ci([e, t.globalData.endpointsData, t.globalData.selectorsData, t.globalData.tablesData, t.globalData.extendedData]);\n  }\n  const i = [];\n  let s = t.keyValue;\n  e.keepWriter || (s = {\n    ...t.keyValue,\n    KTXwriter: \"KTX-Parse v0.7.1\"\n  });\n  for (const t in s) {\n    const e = s[t],\n      n = Ei(t),\n      a = \"string\" == typeof e ? Ci([Ei(e), Fi]) : e,\n      r = n.byteLength + 1 + a.byteLength,\n      o = Mi(r, 4);\n    i.push(Ci([new Uint32Array([r]), n, Fi, a, new Uint8Array(o).fill(0)]));\n  }\n  const a = Ci(i);\n  if (1 !== t.dataFormatDescriptor.length || 0 !== t.dataFormatDescriptor[0].descriptorType) throw new Error(\"Only BASICFORMAT Data Format Descriptor output supported.\");\n  const r = t.dataFormatDescriptor[0],\n    o = new ArrayBuffer(28 + 16 * r.samples.length),\n    l = new DataView(o),\n    f = 24 + 16 * r.samples.length;\n  if (l.setUint32(0, o.byteLength, !0), l.setUint16(4, r.vendorId, !0), l.setUint16(6, r.descriptorType, !0), l.setUint16(8, r.versionNumber, !0), l.setUint16(10, f, !0), l.setUint8(12, r.colorModel), l.setUint8(13, r.colorPrimaries), l.setUint8(14, r.transferFunction), l.setUint8(15, r.flags), !Array.isArray(r.texelBlockDimension)) throw new Error(\"texelBlockDimension is now an array. For dimensionality `d`, set `d - 1`.\");\n  l.setUint8(16, r.texelBlockDimension[0]), l.setUint8(17, r.texelBlockDimension[1]), l.setUint8(18, r.texelBlockDimension[2]), l.setUint8(19, r.texelBlockDimension[3]);\n  for (let t = 0; t < 8; t++) l.setUint8(20 + t, r.bytesPlane[t]);\n  for (let t = 0; t < r.samples.length; t++) {\n    const e = r.samples[t],\n      n = 28 + 16 * t;\n    if (e.channelID) throw new Error(\"channelID has been renamed to channelType.\");\n    l.setUint16(n + 0, e.bitOffset, !0), l.setUint8(n + 2, e.bitLength), l.setUint8(n + 3, e.channelType), l.setUint8(n + 4, e.samplePosition[0]), l.setUint8(n + 5, e.samplePosition[1]), l.setUint8(n + 6, e.samplePosition[2]), l.setUint8(n + 7, e.samplePosition[3]), 64 & e.channelType ? (l.setInt32(n + 8, e.sampleLower, !0), l.setInt32(n + 12, e.sampleUpper, !0)) : (l.setUint32(n + 8, e.sampleLower, !0), l.setUint32(n + 12, e.sampleUpper, !0));\n  }\n  const h = Oi.length + 68 + 3 * t.levels.length * 8,\n    U = h + o.byteLength;\n  let c = n.byteLength > 0 ? U + a.byteLength : 0;\n  c % 8 && (c += 8 - c % 8);\n  const _ = [],\n    p = new DataView(new ArrayBuffer(3 * t.levels.length * 8)),\n    g = new Uint32Array(t.levels.length);\n  let y = 0;\n  0 === t.supercompressionScheme && (y = function (t, e) {\n    const n = Math.max(t, 4),\n      i = Math.min(t, 4);\n    let s = n;\n    for (; s % i != 0;) s += n;\n    return s;\n  }(function (t) {\n    return t.levels[0].levelData.byteLength / function (t, e) {\n      let n = 1;\n      const i = [t.pixelWidth, t.pixelHeight, t.pixelDepth],\n        s = function (t) {\n          const [e, n, i] = t.dataFormatDescriptor[0].texelBlockDimension;\n          return [e + 1, n + 1, i + 1];\n        }(t);\n      for (let t = 0; t < 3; t++) if (i[t] > 0) {\n        const e = Math.ceil(Math.floor(i[t] * Math.pow(2, -0)) / s[t]);\n        n *= Math.max(1, e);\n      }\n      return t.layerCount > 0 && (n *= t.layerCount), t.faceCount > 0 && (n *= t.faceCount), n;\n    }(t);\n  }(t)));\n  let x = (c || U + a.byteLength) + n.byteLength;\n  for (let e = t.levels.length - 1; e >= 0; e--) {\n    if (x % y) {\n      const t = Mi(x, y);\n      _.push(new Uint8Array(t)), x += t;\n    }\n    const n = t.levels[e];\n    _.push(n.levelData), g[e] = x, x += n.levelData.byteLength;\n  }\n  for (let e = 0; e < t.levels.length; e++) {\n    const n = t.levels[e];\n    p.setBigUint64(24 * e + 0, BigInt(g[e]), !0), p.setBigUint64(24 * e + 8, BigInt(n.levelData.byteLength), !0), p.setBigUint64(24 * e + 16, BigInt(n.uncompressedByteLength), !0);\n  }\n  const u = new ArrayBuffer(68),\n    b = new DataView(u);\n  return b.setUint32(0, t.vkFormat, !0), b.setUint32(4, t.typeSize, !0), b.setUint32(8, t.pixelWidth, !0), b.setUint32(12, t.pixelHeight, !0), b.setUint32(16, t.pixelDepth, !0), b.setUint32(20, t.layerCount, !0), b.setUint32(24, t.faceCount, !0), b.setUint32(28, t.levels.length, !0), b.setUint32(32, t.supercompressionScheme, !0), b.setUint32(36, h, !0), b.setUint32(40, o.byteLength, !0), b.setUint32(44, U, !0), b.setUint32(48, a.byteLength, !0), b.setBigUint64(52, BigInt(n.byteLength > 0 ? c : 0), !0), b.setBigUint64(60, BigInt(n.byteLength), !0), new Uint8Array(Ci([new Uint8Array(Oi).buffer, u, p.buffer, o, a, c > 0 ? new ArrayBuffer(c - (U + a.byteLength)) : new ArrayBuffer(0), n, ..._]));\n}\nexport { Z as KHR_DF_CHANNEL_RGBSDA_ALPHA, G as KHR_DF_CHANNEL_RGBSDA_BLUE, Q as KHR_DF_CHANNEL_RGBSDA_DEPTH, q as KHR_DF_CHANNEL_RGBSDA_GREEN, j as KHR_DF_CHANNEL_RGBSDA_RED, J as KHR_DF_CHANNEL_RGBSDA_STENCIL, g as KHR_DF_FLAG_ALPHA_PREMULTIPLIED, p as KHR_DF_FLAG_ALPHA_STRAIGHT, s as KHR_DF_KHR_DESCRIPTORTYPE_BASICFORMAT, U as KHR_DF_MODEL_ASTC, f as KHR_DF_MODEL_ETC1, c as KHR_DF_MODEL_ETC1S, h as KHR_DF_MODEL_ETC2, l as KHR_DF_MODEL_RGBSDA, _ as KHR_DF_MODEL_UASTC, o as KHR_DF_MODEL_UNSPECIFIED, H as KHR_DF_PRIMARIES_ACES, N as KHR_DF_PRIMARIES_ACESCC, Y as KHR_DF_PRIMARIES_ADOBERGB, z as KHR_DF_PRIMARIES_BT2020, M as KHR_DF_PRIMARIES_BT601_EBU, P as KHR_DF_PRIMARIES_BT601_SMPTE, C as KHR_DF_PRIMARIES_BT709, W as KHR_DF_PRIMARIES_CIEXYZ, R as KHR_DF_PRIMARIES_DISPLAYP3, K as KHR_DF_PRIMARIES_NTSC1953, X as KHR_DF_PRIMARIES_PAL525, T as KHR_DF_PRIMARIES_UNSPECIFIED, et as KHR_DF_SAMPLE_DATATYPE_EXPONENT, $ as KHR_DF_SAMPLE_DATATYPE_FLOAT, nt as KHR_DF_SAMPLE_DATATYPE_LINEAR, tt as KHR_DF_SAMPLE_DATATYPE_SIGNED, F as KHR_DF_TRANSFER_ACESCC, O as KHR_DF_TRANSFER_ACESCCT, E as KHR_DF_TRANSFER_ADOBERGB, D as KHR_DF_TRANSFER_BT1886, k as KHR_DF_TRANSFER_DCIP3, L as KHR_DF_TRANSFER_HLG_EOTF, B as KHR_DF_TRANSFER_HLG_OETF, b as KHR_DF_TRANSFER_ITU, x as KHR_DF_TRANSFER_LINEAR, d as KHR_DF_TRANSFER_NTSC, I as KHR_DF_TRANSFER_PAL625_EOTF, V as KHR_DF_TRANSFER_PAL_OETF, v as KHR_DF_TRANSFER_PQ_EOTF, A as KHR_DF_TRANSFER_PQ_OETF, w as KHR_DF_TRANSFER_SLOG, m as KHR_DF_TRANSFER_SLOG2, u as KHR_DF_TRANSFER_SRGB, S as KHR_DF_TRANSFER_ST240, y as KHR_DF_TRANSFER_UNSPECIFIED, a as KHR_DF_VENDORID_KHRONOS, r as KHR_DF_VERSION, e as KHR_SUPERCOMPRESSION_BASISLZ, t as KHR_SUPERCOMPRESSION_NONE, i as KHR_SUPERCOMPRESSION_ZLIB, n as KHR_SUPERCOMPRESSION_ZSTD, Ii as KTX2Container, Ut as VK_FORMAT_A1R5G5B5_UNORM_PACK16, Gt as VK_FORMAT_A2B10G10R10_SINT_PACK32, jt as VK_FORMAT_A2B10G10R10_SNORM_PACK32, qt as VK_FORMAT_A2B10G10R10_UINT_PACK32, Yt as VK_FORMAT_A2B10G10R10_UNORM_PACK32, Rt as VK_FORMAT_A2R10G10B10_SINT_PACK32, Kt as VK_FORMAT_A2R10G10B10_SNORM_PACK32, Xt as VK_FORMAT_A2R10G10B10_UINT_PACK32, Nt as VK_FORMAT_A2R10G10B10_UNORM_PACK32, Vi as VK_FORMAT_A4B4G4R4_UNORM_PACK16_EXT, ki as VK_FORMAT_A4R4G4B4_UNORM_PACK16_EXT, Li as VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK_EXT, Rn as VK_FORMAT_ASTC_10x10_SRGB_BLOCK, Xn as VK_FORMAT_ASTC_10x10_UNORM_BLOCK, mi as VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK_EXT, zn as VK_FORMAT_ASTC_10x5_SRGB_BLOCK, Pn as VK_FORMAT_ASTC_10x5_UNORM_BLOCK, Di as VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK_EXT, Hn as VK_FORMAT_ASTC_10x6_SRGB_BLOCK, Wn as VK_FORMAT_ASTC_10x6_UNORM_BLOCK, Bi as VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK_EXT, Kn as VK_FORMAT_ASTC_10x8_SRGB_BLOCK, Nn as VK_FORMAT_ASTC_10x8_UNORM_BLOCK, vi as VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK_EXT, jn as VK_FORMAT_ASTC_12x10_SRGB_BLOCK, Yn as VK_FORMAT_ASTC_12x10_UNORM_BLOCK, Ai as VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK_EXT, Gn as VK_FORMAT_ASTC_12x12_SRGB_BLOCK, qn as VK_FORMAT_ASTC_12x12_UNORM_BLOCK, pi as VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT, Dn as VK_FORMAT_ASTC_4x4_SRGB_BLOCK, mn as VK_FORMAT_ASTC_4x4_UNORM_BLOCK, gi as VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK_EXT, Ln as VK_FORMAT_ASTC_5x4_SRGB_BLOCK, Bn as VK_FORMAT_ASTC_5x4_UNORM_BLOCK, yi as VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK_EXT, An as VK_FORMAT_ASTC_5x5_SRGB_BLOCK, vn as VK_FORMAT_ASTC_5x5_UNORM_BLOCK, xi as VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK_EXT, Vn as VK_FORMAT_ASTC_6x5_SRGB_BLOCK, kn as VK_FORMAT_ASTC_6x5_UNORM_BLOCK, ui as VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK_EXT, Sn as VK_FORMAT_ASTC_6x6_SRGB_BLOCK, In as VK_FORMAT_ASTC_6x6_UNORM_BLOCK, bi as VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK_EXT, On as VK_FORMAT_ASTC_8x5_SRGB_BLOCK, Fn as VK_FORMAT_ASTC_8x5_UNORM_BLOCK, di as VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK_EXT, Tn as VK_FORMAT_ASTC_8x6_SRGB_BLOCK, En as VK_FORMAT_ASTC_8x6_UNORM_BLOCK, wi as VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK_EXT, Mn as VK_FORMAT_ASTC_8x8_SRGB_BLOCK, Cn as VK_FORMAT_ASTC_8x8_UNORM_BLOCK, We as VK_FORMAT_B10G11R11_UFLOAT_PACK32, ti as VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16, ai as VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16, rt as VK_FORMAT_B4G4R4A4_UNORM_PACK16, ht as VK_FORMAT_B5G5R5A1_UNORM_PACK16, lt as VK_FORMAT_B5G6R5_UNORM_PACK16, Wt as VK_FORMAT_B8G8R8A8_SINT, Pt as VK_FORMAT_B8G8R8A8_SNORM, Ht as VK_FORMAT_B8G8R8A8_SRGB, zt as VK_FORMAT_B8G8R8A8_UINT, Mt as VK_FORMAT_B8G8R8A8_UNORM, It as VK_FORMAT_B8G8R8_SINT, kt as VK_FORMAT_B8G8R8_SNORM, St as VK_FORMAT_B8G8R8_SRGB, Vt as VK_FORMAT_B8G8R8_UINT, At as VK_FORMAT_B8G8R8_UNORM, Ze as VK_FORMAT_BC1_RGBA_SRGB_BLOCK, Qe as VK_FORMAT_BC1_RGBA_UNORM_BLOCK, Je as VK_FORMAT_BC1_RGB_SRGB_BLOCK, Ge as VK_FORMAT_BC1_RGB_UNORM_BLOCK, tn as VK_FORMAT_BC2_SRGB_BLOCK, $e as VK_FORMAT_BC2_UNORM_BLOCK, nn as VK_FORMAT_BC3_SRGB_BLOCK, en as VK_FORMAT_BC3_UNORM_BLOCK, an as VK_FORMAT_BC4_SNORM_BLOCK, sn as VK_FORMAT_BC4_UNORM_BLOCK, on as VK_FORMAT_BC5_SNORM_BLOCK, rn as VK_FORMAT_BC5_UNORM_BLOCK, fn as VK_FORMAT_BC6H_SFLOAT_BLOCK, ln as VK_FORMAT_BC6H_UFLOAT_BLOCK, Un as VK_FORMAT_BC7_SRGB_BLOCK, hn as VK_FORMAT_BC7_UNORM_BLOCK, Ne as VK_FORMAT_D16_UNORM, Ye as VK_FORMAT_D16_UNORM_S8_UINT, je as VK_FORMAT_D24_UNORM_S8_UINT, Xe as VK_FORMAT_D32_SFLOAT, qe as VK_FORMAT_D32_SFLOAT_S8_UINT, He as VK_FORMAT_E5B9G9R9_UFLOAT_PACK32, wn as VK_FORMAT_EAC_R11G11_SNORM_BLOCK, dn as VK_FORMAT_EAC_R11G11_UNORM_BLOCK, bn as VK_FORMAT_EAC_R11_SNORM_BLOCK, un as VK_FORMAT_EAC_R11_UNORM_BLOCK, gn as VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK, pn as VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK, xn as VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK, yn as VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK, _n as VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK, cn as VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK, $n as VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16, si as VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16, hi as VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG, ri as VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG, Ui as VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG, oi as VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG, ci as VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG, li as VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG, _i as VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG, fi as VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG, Zn as VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16, Qn as VK_FORMAT_R10X6G10X6_UNORM_2PACK16, Jn as VK_FORMAT_R10X6_UNORM_PACK16, ii as VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16, ni as VK_FORMAT_R12X4G12X4_UNORM_2PACK16, ei as VK_FORMAT_R12X4_UNORM_PACK16, ge as VK_FORMAT_R16G16B16A16_SFLOAT, pe as VK_FORMAT_R16G16B16A16_SINT, ce as VK_FORMAT_R16G16B16A16_SNORM, _e as VK_FORMAT_R16G16B16A16_UINT, Ue as VK_FORMAT_R16G16B16A16_UNORM, he as VK_FORMAT_R16G16B16_SFLOAT, fe as VK_FORMAT_R16G16B16_SINT, oe as VK_FORMAT_R16G16B16_SNORM, le as VK_FORMAT_R16G16B16_UINT, re as VK_FORMAT_R16G16B16_UNORM, ae as VK_FORMAT_R16G16_SFLOAT, se as VK_FORMAT_R16G16_SINT, ne as VK_FORMAT_R16G16_SNORM, ie as VK_FORMAT_R16G16_UINT, ee as VK_FORMAT_R16G16_UNORM, te as VK_FORMAT_R16_SFLOAT, $t as VK_FORMAT_R16_SINT, Qt as VK_FORMAT_R16_SNORM, Zt as VK_FORMAT_R16_UINT, Jt as VK_FORMAT_R16_UNORM, Ae as VK_FORMAT_R32G32B32A32_SFLOAT, ve as VK_FORMAT_R32G32B32A32_SINT, Le as VK_FORMAT_R32G32B32A32_UINT, Be as VK_FORMAT_R32G32B32_SFLOAT, De as VK_FORMAT_R32G32B32_SINT, me as VK_FORMAT_R32G32B32_UINT, we as VK_FORMAT_R32G32_SFLOAT, de as VK_FORMAT_R32G32_SINT, be as VK_FORMAT_R32G32_UINT, ue as VK_FORMAT_R32_SFLOAT, xe as VK_FORMAT_R32_SINT, ye as VK_FORMAT_R32_UINT, at as VK_FORMAT_R4G4B4A4_UNORM_PACK16, st as VK_FORMAT_R4G4_UNORM_PACK8, ft as VK_FORMAT_R5G5B5A1_UNORM_PACK16, ot as VK_FORMAT_R5G6B5_UNORM_PACK16, ze as VK_FORMAT_R64G64B64A64_SFLOAT, Pe as VK_FORMAT_R64G64B64A64_SINT, Me as VK_FORMAT_R64G64B64A64_UINT, Ce as VK_FORMAT_R64G64B64_SFLOAT, Te as VK_FORMAT_R64G64B64_SINT, Ee as VK_FORMAT_R64G64B64_UINT, Oe as VK_FORMAT_R64G64_SFLOAT, Fe as VK_FORMAT_R64G64_SINT, Se as VK_FORMAT_R64G64_UINT, Ie as VK_FORMAT_R64_SFLOAT, Ve as VK_FORMAT_R64_SINT, ke as VK_FORMAT_R64_UINT, Tt as VK_FORMAT_R8G8B8A8_SINT, Ot as VK_FORMAT_R8G8B8A8_SNORM, Ct as VK_FORMAT_R8G8B8A8_SRGB, Et as VK_FORMAT_R8G8B8A8_UINT, Ft as VK_FORMAT_R8G8B8A8_UNORM, Lt as VK_FORMAT_R8G8B8_SINT, Dt as VK_FORMAT_R8G8B8_SNORM, vt as VK_FORMAT_R8G8B8_SRGB, Bt as VK_FORMAT_R8G8B8_UINT, mt as VK_FORMAT_R8G8B8_UNORM, dt as VK_FORMAT_R8G8_SINT, ut as VK_FORMAT_R8G8_SNORM, wt as VK_FORMAT_R8G8_SRGB, bt as VK_FORMAT_R8G8_UINT, xt as VK_FORMAT_R8G8_UNORM, gt as VK_FORMAT_R8_SINT, _t as VK_FORMAT_R8_SNORM, yt as VK_FORMAT_R8_SRGB, pt as VK_FORMAT_R8_UINT, ct as VK_FORMAT_R8_UNORM, Re as VK_FORMAT_S8_UINT, it as VK_FORMAT_UNDEFINED, Ke as VK_FORMAT_X8_D24_UNORM_PACK32, Pi as read, Wi as write };", "let A, I, B;\nconst g = {\n  env: {\n    emscripten_notify_memory_growth: function (A) {\n      B = new Uint8Array(I.exports.memory.buffer);\n    }\n  }\n};\nclass Q {\n  init() {\n    return A || (A = \"undefined\" != typeof fetch ? fetch(\"data:application/wasm;base64,\" + C).then(A => A.arrayBuffer()).then(A => WebAssembly.instantiate(A, g)).then(this._init) : WebAssembly.instantiate(Buffer.from(C, \"base64\"), g).then(this._init), A);\n  }\n  _init(A) {\n    I = A.instance, g.env.emscripten_notify_memory_growth(0);\n  }\n  decode(A, g = 0) {\n    if (!I) throw new Error(\"ZSTDDecoder: Await .init() before decoding.\");\n    const Q = A.byteLength,\n      C = I.exports.malloc(Q);\n    B.set(A, C), g = g || Number(I.exports.ZSTD_findDecompressedSize(C, Q));\n    const E = I.exports.malloc(g),\n      i = I.exports.ZSTD_decompress(E, g, C, Q),\n      D = B.slice(E, E + i);\n    return I.exports.free(C), I.exports.free(E), D;\n  }\n}\nconst C = \"\";\nexport { Q as ZSTDDecoder };", "import { LinearTransfer, Matrix3, SRGBTransfer } from 'three';\n\n/** @module ColorSpaces */\n\n// Reference: http://www.russellcottrell.com/photo/matrixCalculator.htm\n\nconst P3_PRIMARIES = [0.680, 0.320, 0.265, 0.690, 0.150, 0.060];\nconst P3_LUMINANCE_COEFFICIENTS = [0.2289, 0.6917, 0.0793];\nconst REC2020_PRIMARIES = [0.708, 0.292, 0.170, 0.797, 0.131, 0.046];\nconst REC2020_LUMINANCE_COEFFICIENTS = [0.2627, 0.6780, 0.0593];\nconst D65 = [0.3127, 0.3290];\n\n/******************************************************************************\n * Display P3 definitions\n */\n\nconst LINEAR_DISPLAY_P3_TO_XYZ = /*@__PURE__*/new Matrix3().set(0.4865709, 0.2656677, 0.1982173, 0.2289746, 0.6917385, 0.0792869, 0.0000000, 0.0451134, 1.0439444);\nconst XYZ_TO_LINEAR_DISPLAY_P3 = /*@__PURE__*/new Matrix3().set(2.4934969, -0.9313836, -0.4027108, -0.8294890, 1.7626641, 0.0236247, 0.0358458, -0.0761724, 0.9568845);\n\n/**\n * Display-P3 color space.\n *\n * @type {string}\n * @constant\n */\nexport const DisplayP3ColorSpace = 'display-p3';\n\n/**\n * Display-P3-Linear color space.\n *\n * @type {string}\n * @constant\n */\nexport const LinearDisplayP3ColorSpace = 'display-p3-linear';\n\n/**\n * Implementation object for the Display-P3 color space.\n *\n * @type {module:ColorSpaces~ColorSpaceImpl}\n * @constant\n */\nexport const DisplayP3ColorSpaceImpl = {\n  primaries: P3_PRIMARIES,\n  whitePoint: D65,\n  transfer: SRGBTransfer,\n  toXYZ: LINEAR_DISPLAY_P3_TO_XYZ,\n  fromXYZ: XYZ_TO_LINEAR_DISPLAY_P3,\n  luminanceCoefficients: P3_LUMINANCE_COEFFICIENTS,\n  outputColorSpaceConfig: {\n    drawingBufferColorSpace: DisplayP3ColorSpace\n  }\n};\n\n/**\n * Implementation object for the Display-P3-Linear color space.\n *\n * @type {module:ColorSpaces~ColorSpaceImpl}\n * @constant\n */\nexport const LinearDisplayP3ColorSpaceImpl = {\n  primaries: P3_PRIMARIES,\n  whitePoint: D65,\n  transfer: LinearTransfer,\n  toXYZ: LINEAR_DISPLAY_P3_TO_XYZ,\n  fromXYZ: XYZ_TO_LINEAR_DISPLAY_P3,\n  luminanceCoefficients: P3_LUMINANCE_COEFFICIENTS,\n  workingColorSpaceConfig: {\n    unpackColorSpace: DisplayP3ColorSpace\n  },\n  outputColorSpaceConfig: {\n    drawingBufferColorSpace: DisplayP3ColorSpace\n  }\n};\n\n/******************************************************************************\n * Rec. 2020 definitions\n */\n\nconst LINEAR_REC2020_TO_XYZ = /*@__PURE__*/new Matrix3().set(0.6369580, 0.1446169, 0.1688810, 0.2627002, 0.6779981, 0.0593017, 0.0000000, 0.0280727, 1.0609851);\nconst XYZ_TO_LINEAR_REC2020 = /*@__PURE__*/new Matrix3().set(1.7166512, -0.3556708, -0.2533663, -0.6666844, 1.6164812, 0.0157685, 0.0176399, -0.0427706, 0.9421031);\n\n/**\n * Rec2020-Linear color space.\n *\n * @type {string}\n * @constant\n */\nexport const LinearRec2020ColorSpace = 'rec2020-linear';\n\n/**\n * Implementation object for the Rec2020-Linear color space.\n *\n * @type {module:ColorSpaces~ColorSpaceImpl}\n * @constant\n */\nexport const LinearRec2020ColorSpaceImpl = {\n  primaries: REC2020_PRIMARIES,\n  whitePoint: D65,\n  transfer: LinearTransfer,\n  toXYZ: LINEAR_REC2020_TO_XYZ,\n  fromXYZ: XYZ_TO_LINEAR_REC2020,\n  luminanceCoefficients: REC2020_LUMINANCE_COEFFICIENTS\n};\n\n/**\n * An object holding the color space implementation.\n *\n * @typedef {Object} module:ColorSpaces~ColorSpaceImpl\n * @property {Array<number>} primaries - The primaries.\n * @property {Array<number>} whitePoint - The white point.\n * @property {Matrix3} toXYZ - A color space conversion matrix, converting to CIE XYZ.\n * @property {Matrix3} fromXYZ - A color space conversion matrix, converting from CIE XYZ.\n * @property {Array<number>} luminanceCoefficients - The luminance coefficients.\n * @property {{unpackColorSpace:string}} [workingColorSpaceConfig] - The working color space config.\n * @property {{drawingBufferColorSpace:string}} [outputColorSpaceConfig] - The drawing buffer color space config.\n **/", "import { CompressedArrayTexture, CompressedCubeTexture, CompressedTexture, Data3DTexture, DataTexture, FileLoader, FloatType, HalfFloatType, LinearFilter, LinearMipmapLinearFilter, LinearSRGBColorSpace, Loader, NoColorSpace, RGBAFormat, RGBA_ASTC_4x4_Format, RGBA_ASTC_6x6_Format, RGBA_BPTC_Format, RGBA_S3TC_DXT3_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT5_Format, RGB_BPTC_UNSIGNED_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RedFormat, SRGBColorSpace, UnsignedByteType } from 'three';\nimport { WorkerPool } from '../utils/WorkerPool.js';\nimport { read, KHR_DF_FLAG_ALPHA_PREMULTIPLIED, KHR_DF_PRIMARIES_BT709, KHR_DF_PRIMARIES_DISPLAYP3, KHR_DF_PRIMARIES_UNSPECIFIED, KHR_DF_TRANSFER_SRGB, KHR_SUPERCOMPRESSION_NONE, KHR_SUPERCOMPRESSION_ZSTD, VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT, VK_FORMAT_ASTC_4x4_SRGB_BLOCK, VK_FORMAT_ASTC_4x4_UNORM_BLOCK, VK_FORMAT_ASTC_6x6_SRGB_BLOCK, VK_FORMAT_ASTC_6x6_UNORM_BLOCK, VK_FORMAT_BC1_RGBA_SRGB_BLOCK, VK_FORMAT_BC1_RGBA_UNORM_BLOCK, VK_FORMAT_BC1_RGB_SRGB_BLOCK, VK_FORMAT_BC1_RGB_UNORM_BLOCK, VK_FORMAT_BC3_SRGB_BLOCK, VK_FORMAT_BC3_UNORM_BLOCK, VK_FORMAT_BC5_SNORM_BLOCK, VK_FORMAT_BC5_UNORM_BLOCK, VK_FORMAT_BC7_SRGB_BLOCK, VK_FORMAT_BC7_UNORM_BLOCK, VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK, VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK, VK_FORMAT_R16G16B16A16_SFLOAT, VK_FORMAT_R16G16_SFLOAT, VK_FORMAT_R16_SFLOAT, VK_FORMAT_R32G32B32A32_SFLOAT, VK_FORMAT_R32G32_SFLOAT, VK_FORMAT_R32_SFLOAT, VK_FORMAT_R8G8B8A8_SRGB, VK_FORMAT_R8G8B8A8_UNORM, VK_FORMAT_R8G8_SRGB, VK_FORMAT_R8G8_UNORM, VK_FORMAT_R8_SRGB, VK_FORMAT_R8_UNORM, VK_FORMAT_UNDEFINED } from '../libs/ktx-parse.module.js';\nimport { ZSTDDecoder } from '../libs/zstddec.module.js';\nimport { DisplayP3ColorSpace, LinearDisplayP3ColorSpace } from '../math/ColorSpaces.js';\nconst _taskCache = new WeakMap();\nlet _activeLoaders = 0;\nlet _zstd;\n\n/**\n * A loader for KTX 2.0 GPU Texture containers.\n *\n * KTX 2.0 is a container format for various GPU texture formats. The loader supports Basis Universal GPU textures,\n * which can be quickly transcoded to a wide variety of GPU texture compression formats. While KTX 2.0 also allows\n * other hardware-specific formats, this loader does not yet parse them.\n *\n * This loader parses the KTX 2.0 container and transcodes to a supported GPU compressed texture format.\n * The required WASM transcoder and JS wrapper are available from the `examples/jsm/libs/basis` directory.\n *\n * This loader relies on Web Assembly which is not supported in older browsers.\n *\n * References:\n * - [KTX specification]{@link http://github.khronos.org/KTX-Specification/}\n * - [DFD]{@link https://www.khronos.org/registry/DataFormat/specs/1.3/dataformat.1.3.html#basicdescriptor}\n * - [BasisU HDR]{@link https://github.com/BinomialLLC/basis_universal/wiki/UASTC-HDR-Texture-Specification-v1.0}\n *\n * ```js\n * const loader = new KTX2Loader();\n * loader.setTranscoderPath( 'examples/jsm/libs/basis/' );\n * loader.detectSupport( renderer );\n * const texture = loader.loadAsync( 'diffuse.ktx2' );\n * ```\n *\n * @augments Loader\n * @three_import import { KTX2Loader } from 'three/addons/loaders/KTX2Loader.js';\n */\nclass KTX2Loader extends Loader {\n  /**\n   * Constructs a new KTX2 loader.\n   *\n   * @param {LoadingManager} [manager] - The loading manager.\n   */\n  constructor(manager) {\n    super(manager);\n    this.transcoderPath = '';\n    this.transcoderBinary = null;\n    this.transcoderPending = null;\n    this.workerPool = new WorkerPool();\n    this.workerSourceURL = '';\n    this.workerConfig = null;\n    if (typeof MSC_TRANSCODER !== 'undefined') {\n      console.warn('THREE.KTX2Loader: Please update to latest \"basis_transcoder\".' + ' \"msc_basis_transcoder\" is no longer supported in three.js r125+.');\n    }\n  }\n\n  /**\n   * Sets the transcoder path.\n   *\n   * The WASM transcoder and JS wrapper are available from the `examples/jsm/libs/basis` directory.\n   *\n   * @param {string} path - The transcoder path to set.\n   * @return {KTX2Loader} A reference to this loader.\n   */\n  setTranscoderPath(path) {\n    this.transcoderPath = path;\n    return this;\n  }\n\n  /**\n   * Sets the maximum number of Web Workers to be allocated by this instance.\n   *\n   * @param {number} workerLimit - The worker limit.\n   * @return {KTX2Loader} A reference to this loader.\n   */\n  setWorkerLimit(workerLimit) {\n    this.workerPool.setWorkerLimit(workerLimit);\n    return this;\n  }\n\n  /**\n   * Async version of {@link KTX2Loader#detectSupport}.\n   *\n   * @async\n   * @param {WebGPURenderer|WebGLRenderer} renderer - The renderer.\n   * @return {Promise} A Promise that resolves when the support has been detected.\n   */\n  async detectSupportAsync(renderer) {\n    this.workerConfig = {\n      astcSupported: await renderer.hasFeatureAsync('texture-compression-astc'),\n      astcHDRSupported: false,\n      // https://github.com/gpuweb/gpuweb/issues/3856\n      etc1Supported: await renderer.hasFeatureAsync('texture-compression-etc1'),\n      etc2Supported: await renderer.hasFeatureAsync('texture-compression-etc2'),\n      dxtSupported: await renderer.hasFeatureAsync('texture-compression-bc'),\n      bptcSupported: await renderer.hasFeatureAsync('texture-compression-bptc'),\n      pvrtcSupported: await renderer.hasFeatureAsync('texture-compression-pvrtc')\n    };\n    return this;\n  }\n\n  /**\n   * Detects hardware support for available compressed texture formats, to determine\n   * the output format for the transcoder. Must be called before loading a texture.\n   *\n   * @param {WebGPURenderer|WebGLRenderer} renderer - The renderer.\n   * @return {KTX2Loader} A reference to this loader.\n   */\n  detectSupport(renderer) {\n    if (renderer.isWebGPURenderer === true) {\n      this.workerConfig = {\n        astcSupported: renderer.hasFeature('texture-compression-astc'),\n        astcHDRSupported: false,\n        // https://github.com/gpuweb/gpuweb/issues/3856\n        etc1Supported: renderer.hasFeature('texture-compression-etc1'),\n        etc2Supported: renderer.hasFeature('texture-compression-etc2'),\n        dxtSupported: renderer.hasFeature('texture-compression-bc'),\n        bptcSupported: renderer.hasFeature('texture-compression-bptc'),\n        pvrtcSupported: renderer.hasFeature('texture-compression-pvrtc')\n      };\n    } else {\n      this.workerConfig = {\n        astcSupported: renderer.extensions.has('WEBGL_compressed_texture_astc'),\n        astcHDRSupported: renderer.extensions.has('WEBGL_compressed_texture_astc') && renderer.extensions.get('WEBGL_compressed_texture_astc').getSupportedProfiles().includes('hdr'),\n        etc1Supported: renderer.extensions.has('WEBGL_compressed_texture_etc1'),\n        etc2Supported: renderer.extensions.has('WEBGL_compressed_texture_etc'),\n        dxtSupported: renderer.extensions.has('WEBGL_compressed_texture_s3tc'),\n        bptcSupported: renderer.extensions.has('EXT_texture_compression_bptc'),\n        pvrtcSupported: renderer.extensions.has('WEBGL_compressed_texture_pvrtc') || renderer.extensions.has('WEBKIT_WEBGL_compressed_texture_pvrtc')\n      };\n    }\n    return this;\n  }\n\n  // TODO: Make this method private\n\n  init() {\n    if (!this.transcoderPending) {\n      // Load transcoder wrapper.\n      const jsLoader = new FileLoader(this.manager);\n      jsLoader.setPath(this.transcoderPath);\n      jsLoader.setWithCredentials(this.withCredentials);\n      const jsContent = jsLoader.loadAsync('basis_transcoder.js');\n\n      // Load transcoder WASM binary.\n      const binaryLoader = new FileLoader(this.manager);\n      binaryLoader.setPath(this.transcoderPath);\n      binaryLoader.setResponseType('arraybuffer');\n      binaryLoader.setWithCredentials(this.withCredentials);\n      const binaryContent = binaryLoader.loadAsync('basis_transcoder.wasm');\n      this.transcoderPending = Promise.all([jsContent, binaryContent]).then(([jsContent, binaryContent]) => {\n        const fn = KTX2Loader.BasisWorker.toString();\n        const body = ['/* constants */', 'let _EngineFormat = ' + JSON.stringify(KTX2Loader.EngineFormat), 'let _EngineType = ' + JSON.stringify(KTX2Loader.EngineType), 'let _TranscoderFormat = ' + JSON.stringify(KTX2Loader.TranscoderFormat), 'let _BasisFormat = ' + JSON.stringify(KTX2Loader.BasisFormat), '/* basis_transcoder.js */', jsContent, '/* worker */', fn.substring(fn.indexOf('{') + 1, fn.lastIndexOf('}'))].join('\\n');\n        this.workerSourceURL = URL.createObjectURL(new Blob([body]));\n        this.transcoderBinary = binaryContent;\n        this.workerPool.setWorkerCreator(() => {\n          const worker = new Worker(this.workerSourceURL);\n          const transcoderBinary = this.transcoderBinary.slice(0);\n          worker.postMessage({\n            type: 'init',\n            config: this.workerConfig,\n            transcoderBinary\n          }, [transcoderBinary]);\n          return worker;\n        });\n      });\n      if (_activeLoaders > 0) {\n        // Each instance loads a transcoder and allocates workers, increasing network and memory cost.\n\n        console.warn('THREE.KTX2Loader: Multiple active KTX2 loaders may cause performance issues.' + ' Use a single KTX2Loader instance, or call .dispose() on old instances.');\n      }\n      _activeLoaders++;\n    }\n    return this.transcoderPending;\n  }\n\n  /**\n   * Starts loading from the given URL and passes the loaded KTX2 texture\n   * to the `onLoad()` callback.\n   *\n   * @param {string} url - The path/URL of the file to be loaded. This can also be a data URI.\n   * @param {function(CompressedTexture)} onLoad - Executed when the loading process has been finished.\n   * @param {onProgressCallback} onProgress - Executed while the loading is in progress.\n   * @param {onErrorCallback} onError - Executed when errors occur.\n   */\n  load(url, onLoad, onProgress, onError) {\n    if (this.workerConfig === null) {\n      throw new Error('THREE.KTX2Loader: Missing initialization with `.detectSupport( renderer )`.');\n    }\n    const loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setCrossOrigin(this.crossOrigin);\n    loader.setWithCredentials(this.withCredentials);\n    loader.setResponseType('arraybuffer');\n    loader.load(url, buffer => {\n      this.parse(buffer, onLoad, onError);\n    }, onProgress, onError);\n  }\n\n  /**\n   * Parses the given KTX2 data.\n   *\n   * @param {ArrayBuffer} buffer - The raw KTX2 data as an array buffer.\n   * @param {function(CompressedTexture)} onLoad - Executed when the loading/parsing process has been finished.\n   * @param {onErrorCallback} onError - Executed when errors occur.\n   * @returns {Promise} A Promise that resolves when the parsing has been finished.\n   */\n  parse(buffer, onLoad, onError) {\n    if (this.workerConfig === null) {\n      throw new Error('THREE.KTX2Loader: Missing initialization with `.detectSupport( renderer )`.');\n    }\n\n    // Check for an existing task using this buffer. A transferred buffer cannot be transferred\n    // again from this thread.\n    if (_taskCache.has(buffer)) {\n      const cachedTask = _taskCache.get(buffer);\n      return cachedTask.promise.then(onLoad).catch(onError);\n    }\n    this._createTexture(buffer).then(texture => onLoad ? onLoad(texture) : null).catch(onError);\n  }\n  _createTextureFrom(transcodeResult, container) {\n    const {\n      type: messageType,\n      error,\n      data: {\n        faces,\n        width,\n        height,\n        format,\n        type,\n        dfdFlags\n      }\n    } = transcodeResult;\n    if (messageType === 'error') return Promise.reject(error);\n    let texture;\n    if (container.faceCount === 6) {\n      texture = new CompressedCubeTexture(faces, format, type);\n    } else {\n      const mipmaps = faces[0].mipmaps;\n      texture = container.layerCount > 1 ? new CompressedArrayTexture(mipmaps, width, height, container.layerCount, format, type) : new CompressedTexture(mipmaps, width, height, format, type);\n    }\n    texture.minFilter = faces[0].mipmaps.length === 1 ? LinearFilter : LinearMipmapLinearFilter;\n    texture.magFilter = LinearFilter;\n    texture.generateMipmaps = false;\n    texture.needsUpdate = true;\n    texture.colorSpace = parseColorSpace(container);\n    texture.premultiplyAlpha = !!(dfdFlags & KHR_DF_FLAG_ALPHA_PREMULTIPLIED);\n    return texture;\n  }\n\n  /**\n   * @private\n   * @param {ArrayBuffer} buffer\n   * @param {?Object} config\n   * @return {Promise<CompressedTexture|CompressedArrayTexture|DataTexture|Data3DTexture>}\n   */\n  async _createTexture(buffer, config = {}) {\n    const container = read(new Uint8Array(buffer));\n\n    // Basis UASTC HDR is a subset of ASTC, which can be transcoded efficiently\n    // to BC6H. To detect whether a KTX2 file uses Basis UASTC HDR, or default\n    // ASTC, inspect the DFD color model.\n    //\n    // Source: https://github.com/BinomialLLC/basis_universal/issues/381\n    const isBasisHDR = container.vkFormat === VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT && container.dataFormatDescriptor[0].colorModel === 0xA7;\n\n    // If the device supports ASTC, Basis UASTC HDR requires no transcoder.\n    const needsTranscoder = container.vkFormat === VK_FORMAT_UNDEFINED || isBasisHDR && !this.workerConfig.astcHDRSupported;\n    if (!needsTranscoder) {\n      return createRawTexture(container);\n    }\n\n    //\n    const taskConfig = config;\n    const texturePending = this.init().then(() => {\n      return this.workerPool.postMessage({\n        type: 'transcode',\n        buffer,\n        taskConfig: taskConfig\n      }, [buffer]);\n    }).then(e => this._createTextureFrom(e.data, container));\n\n    // Cache the task result.\n    _taskCache.set(buffer, {\n      promise: texturePending\n    });\n    return texturePending;\n  }\n\n  /**\n   * Frees internal resources. This method should be called\n   * when the loader is no longer required.\n   */\n  dispose() {\n    this.workerPool.dispose();\n    if (this.workerSourceURL) URL.revokeObjectURL(this.workerSourceURL);\n    _activeLoaders--;\n  }\n}\n\n/* CONSTANTS */\n\nKTX2Loader.BasisFormat = {\n  ETC1S: 0,\n  UASTC: 1,\n  UASTC_HDR: 2\n};\n\n// Source: https://github.com/BinomialLLC/basis_universal/blob/master/webgl/texture_test/index.html\nKTX2Loader.TranscoderFormat = {\n  ETC1: 0,\n  ETC2: 1,\n  BC1: 2,\n  BC3: 3,\n  BC4: 4,\n  BC5: 5,\n  BC7_M6_OPAQUE_ONLY: 6,\n  BC7_M5: 7,\n  PVRTC1_4_RGB: 8,\n  PVRTC1_4_RGBA: 9,\n  ASTC_4x4: 10,\n  ATC_RGB: 11,\n  ATC_RGBA_INTERPOLATED_ALPHA: 12,\n  RGBA32: 13,\n  RGB565: 14,\n  BGR565: 15,\n  RGBA4444: 16,\n  BC6H: 22,\n  RGB_HALF: 24,\n  RGBA_HALF: 25\n};\nKTX2Loader.EngineFormat = {\n  RGBAFormat: RGBAFormat,\n  RGBA_ASTC_4x4_Format: RGBA_ASTC_4x4_Format,\n  RGB_BPTC_UNSIGNED_Format: RGB_BPTC_UNSIGNED_Format,\n  RGBA_BPTC_Format: RGBA_BPTC_Format,\n  RGBA_ETC2_EAC_Format: RGBA_ETC2_EAC_Format,\n  RGBA_PVRTC_4BPPV1_Format: RGBA_PVRTC_4BPPV1_Format,\n  RGBA_S3TC_DXT5_Format: RGBA_S3TC_DXT5_Format,\n  RGB_ETC1_Format: RGB_ETC1_Format,\n  RGB_ETC2_Format: RGB_ETC2_Format,\n  RGB_PVRTC_4BPPV1_Format: RGB_PVRTC_4BPPV1_Format,\n  RGBA_S3TC_DXT1_Format: RGBA_S3TC_DXT1_Format\n};\nKTX2Loader.EngineType = {\n  UnsignedByteType: UnsignedByteType,\n  HalfFloatType: HalfFloatType,\n  FloatType: FloatType\n};\n\n/* WEB WORKER */\n\nKTX2Loader.BasisWorker = function () {\n  let config;\n  let transcoderPending;\n  let BasisModule;\n  const EngineFormat = _EngineFormat; // eslint-disable-line no-undef\n  const EngineType = _EngineType; // eslint-disable-line no-undef\n  const TranscoderFormat = _TranscoderFormat; // eslint-disable-line no-undef\n  const BasisFormat = _BasisFormat; // eslint-disable-line no-undef\n\n  self.addEventListener('message', function (e) {\n    const message = e.data;\n    switch (message.type) {\n      case 'init':\n        config = message.config;\n        init(message.transcoderBinary);\n        break;\n      case 'transcode':\n        transcoderPending.then(() => {\n          try {\n            const {\n              faces,\n              buffers,\n              width,\n              height,\n              hasAlpha,\n              format,\n              type,\n              dfdFlags\n            } = transcode(message.buffer);\n            self.postMessage({\n              type: 'transcode',\n              id: message.id,\n              data: {\n                faces,\n                width,\n                height,\n                hasAlpha,\n                format,\n                type,\n                dfdFlags\n              }\n            }, buffers);\n          } catch (error) {\n            console.error(error);\n            self.postMessage({\n              type: 'error',\n              id: message.id,\n              error: error.message\n            });\n          }\n        });\n        break;\n    }\n  });\n  function init(wasmBinary) {\n    transcoderPending = new Promise(resolve => {\n      BasisModule = {\n        wasmBinary,\n        onRuntimeInitialized: resolve\n      };\n      BASIS(BasisModule); // eslint-disable-line no-undef\n    }).then(() => {\n      BasisModule.initializeBasis();\n      if (BasisModule.KTX2File === undefined) {\n        console.warn('THREE.KTX2Loader: Please update Basis Universal transcoder.');\n      }\n    });\n  }\n  function transcode(buffer) {\n    const ktx2File = new BasisModule.KTX2File(new Uint8Array(buffer));\n    function cleanup() {\n      ktx2File.close();\n      ktx2File.delete();\n    }\n    if (!ktx2File.isValid()) {\n      cleanup();\n      throw new Error('THREE.KTX2Loader:\tInvalid or unsupported .ktx2 file');\n    }\n    let basisFormat;\n    if (ktx2File.isUASTC()) {\n      basisFormat = BasisFormat.UASTC;\n    } else if (ktx2File.isETC1S()) {\n      basisFormat = BasisFormat.ETC1S;\n    } else if (ktx2File.isHDR()) {\n      basisFormat = BasisFormat.UASTC_HDR;\n    } else {\n      throw new Error('THREE.KTX2Loader: Unknown Basis encoding');\n    }\n    const width = ktx2File.getWidth();\n    const height = ktx2File.getHeight();\n    const layerCount = ktx2File.getLayers() || 1;\n    const levelCount = ktx2File.getLevels();\n    const faceCount = ktx2File.getFaces();\n    const hasAlpha = ktx2File.getHasAlpha();\n    const dfdFlags = ktx2File.getDFDFlags();\n    const {\n      transcoderFormat,\n      engineFormat,\n      engineType\n    } = getTranscoderFormat(basisFormat, width, height, hasAlpha);\n    if (!width || !height || !levelCount) {\n      cleanup();\n      throw new Error('THREE.KTX2Loader:\tInvalid texture');\n    }\n    if (!ktx2File.startTranscoding()) {\n      cleanup();\n      throw new Error('THREE.KTX2Loader: .startTranscoding failed');\n    }\n    const faces = [];\n    const buffers = [];\n    for (let face = 0; face < faceCount; face++) {\n      const mipmaps = [];\n      for (let mip = 0; mip < levelCount; mip++) {\n        const layerMips = [];\n        let mipWidth, mipHeight;\n        for (let layer = 0; layer < layerCount; layer++) {\n          const levelInfo = ktx2File.getImageLevelInfo(mip, layer, face);\n          if (face === 0 && mip === 0 && layer === 0 && (levelInfo.origWidth % 4 !== 0 || levelInfo.origHeight % 4 !== 0)) {\n            console.warn('THREE.KTX2Loader: ETC1S and UASTC textures should use multiple-of-four dimensions.');\n          }\n          if (levelCount > 1) {\n            mipWidth = levelInfo.origWidth;\n            mipHeight = levelInfo.origHeight;\n          } else {\n            // Handles non-multiple-of-four dimensions in textures without mipmaps. Textures with\n            // mipmaps must use multiple-of-four dimensions, for some texture formats and APIs.\n            // See mrdoob/three.js#25908.\n            mipWidth = levelInfo.width;\n            mipHeight = levelInfo.height;\n          }\n          let dst = new Uint8Array(ktx2File.getImageTranscodedSizeInBytes(mip, layer, 0, transcoderFormat));\n          const status = ktx2File.transcodeImage(dst, mip, layer, face, transcoderFormat, 0, -1, -1);\n          if (engineType === EngineType.HalfFloatType) {\n            dst = new Uint16Array(dst.buffer, dst.byteOffset, dst.byteLength / Uint16Array.BYTES_PER_ELEMENT);\n          }\n          if (!status) {\n            cleanup();\n            throw new Error('THREE.KTX2Loader: .transcodeImage failed.');\n          }\n          layerMips.push(dst);\n        }\n        const mipData = concat(layerMips);\n        mipmaps.push({\n          data: mipData,\n          width: mipWidth,\n          height: mipHeight\n        });\n        buffers.push(mipData.buffer);\n      }\n      faces.push({\n        mipmaps,\n        width,\n        height,\n        format: engineFormat,\n        type: engineType\n      });\n    }\n    cleanup();\n    return {\n      faces,\n      buffers,\n      width,\n      height,\n      hasAlpha,\n      dfdFlags,\n      format: engineFormat,\n      type: engineType\n    };\n  }\n\n  //\n\n  // Optimal choice of a transcoder target format depends on the Basis format (ETC1S, UASTC, or\n  // UASTC HDR), device capabilities, and texture dimensions. The list below ranks the formats\n  // separately for each format. Currently, priority is assigned based on:\n  //\n  //   high quality > low quality > uncompressed\n  //\n  // Prioritization may be revisited, or exposed for configuration, in the future.\n  //\n  // Reference: https://github.com/KhronosGroup/3D-Formats-Guidelines/blob/main/KTXDeveloperGuide.md\n  const FORMAT_OPTIONS = [{\n    if: 'astcSupported',\n    basisFormat: [BasisFormat.UASTC],\n    transcoderFormat: [TranscoderFormat.ASTC_4x4, TranscoderFormat.ASTC_4x4],\n    engineFormat: [EngineFormat.RGBA_ASTC_4x4_Format, EngineFormat.RGBA_ASTC_4x4_Format],\n    engineType: [EngineType.UnsignedByteType],\n    priorityETC1S: Infinity,\n    priorityUASTC: 1,\n    needsPowerOfTwo: false\n  }, {\n    if: 'bptcSupported',\n    basisFormat: [BasisFormat.ETC1S, BasisFormat.UASTC],\n    transcoderFormat: [TranscoderFormat.BC7_M5, TranscoderFormat.BC7_M5],\n    engineFormat: [EngineFormat.RGBA_BPTC_Format, EngineFormat.RGBA_BPTC_Format],\n    engineType: [EngineType.UnsignedByteType],\n    priorityETC1S: 3,\n    priorityUASTC: 2,\n    needsPowerOfTwo: false\n  }, {\n    if: 'dxtSupported',\n    basisFormat: [BasisFormat.ETC1S, BasisFormat.UASTC],\n    transcoderFormat: [TranscoderFormat.BC1, TranscoderFormat.BC3],\n    engineFormat: [EngineFormat.RGBA_S3TC_DXT1_Format, EngineFormat.RGBA_S3TC_DXT5_Format],\n    engineType: [EngineType.UnsignedByteType],\n    priorityETC1S: 4,\n    priorityUASTC: 5,\n    needsPowerOfTwo: false\n  }, {\n    if: 'etc2Supported',\n    basisFormat: [BasisFormat.ETC1S, BasisFormat.UASTC],\n    transcoderFormat: [TranscoderFormat.ETC1, TranscoderFormat.ETC2],\n    engineFormat: [EngineFormat.RGB_ETC2_Format, EngineFormat.RGBA_ETC2_EAC_Format],\n    engineType: [EngineType.UnsignedByteType],\n    priorityETC1S: 1,\n    priorityUASTC: 3,\n    needsPowerOfTwo: false\n  }, {\n    if: 'etc1Supported',\n    basisFormat: [BasisFormat.ETC1S, BasisFormat.UASTC],\n    transcoderFormat: [TranscoderFormat.ETC1],\n    engineFormat: [EngineFormat.RGB_ETC1_Format],\n    engineType: [EngineType.UnsignedByteType],\n    priorityETC1S: 2,\n    priorityUASTC: 4,\n    needsPowerOfTwo: false\n  }, {\n    if: 'pvrtcSupported',\n    basisFormat: [BasisFormat.ETC1S, BasisFormat.UASTC],\n    transcoderFormat: [TranscoderFormat.PVRTC1_4_RGB, TranscoderFormat.PVRTC1_4_RGBA],\n    engineFormat: [EngineFormat.RGB_PVRTC_4BPPV1_Format, EngineFormat.RGBA_PVRTC_4BPPV1_Format],\n    engineType: [EngineType.UnsignedByteType],\n    priorityETC1S: 5,\n    priorityUASTC: 6,\n    needsPowerOfTwo: true\n  }, {\n    if: 'bptcSupported',\n    basisFormat: [BasisFormat.UASTC_HDR],\n    transcoderFormat: [TranscoderFormat.BC6H],\n    engineFormat: [EngineFormat.RGB_BPTC_UNSIGNED_Format],\n    engineType: [EngineType.HalfFloatType],\n    priorityHDR: 1,\n    needsPowerOfTwo: false\n  },\n  // Uncompressed fallbacks.\n\n  {\n    basisFormat: [BasisFormat.ETC1S, BasisFormat.UASTC],\n    transcoderFormat: [TranscoderFormat.RGBA32, TranscoderFormat.RGBA32],\n    engineFormat: [EngineFormat.RGBAFormat, EngineFormat.RGBAFormat],\n    engineType: [EngineType.UnsignedByteType, EngineType.UnsignedByteType],\n    priorityETC1S: 100,\n    priorityUASTC: 100,\n    needsPowerOfTwo: false\n  }, {\n    basisFormat: [BasisFormat.UASTC_HDR],\n    transcoderFormat: [TranscoderFormat.RGBA_HALF],\n    engineFormat: [EngineFormat.RGBAFormat],\n    engineType: [EngineType.HalfFloatType],\n    priorityHDR: 100,\n    needsPowerOfTwo: false\n  }];\n  const OPTIONS = {\n    // TODO: For ETC1S we intentionally sort by _UASTC_ priority, preserving\n    // a historical accident shown to avoid performance pitfalls for Linux with\n    // Firefox & AMD GPU (RadeonSI). Further work needed.\n    // See https://github.com/mrdoob/three.js/pull/29730.\n    [BasisFormat.ETC1S]: FORMAT_OPTIONS.filter(opt => opt.basisFormat.includes(BasisFormat.ETC1S)).sort((a, b) => a.priorityUASTC - b.priorityUASTC),\n    [BasisFormat.UASTC]: FORMAT_OPTIONS.filter(opt => opt.basisFormat.includes(BasisFormat.UASTC)).sort((a, b) => a.priorityUASTC - b.priorityUASTC),\n    [BasisFormat.UASTC_HDR]: FORMAT_OPTIONS.filter(opt => opt.basisFormat.includes(BasisFormat.UASTC_HDR)).sort((a, b) => a.priorityHDR - b.priorityHDR)\n  };\n  function getTranscoderFormat(basisFormat, width, height, hasAlpha) {\n    const options = OPTIONS[basisFormat];\n    for (let i = 0; i < options.length; i++) {\n      const opt = options[i];\n      if (opt.if && !config[opt.if]) continue;\n      if (!opt.basisFormat.includes(basisFormat)) continue;\n      if (hasAlpha && opt.transcoderFormat.length < 2) continue;\n      if (opt.needsPowerOfTwo && !(isPowerOfTwo(width) && isPowerOfTwo(height))) continue;\n      const transcoderFormat = opt.transcoderFormat[hasAlpha ? 1 : 0];\n      const engineFormat = opt.engineFormat[hasAlpha ? 1 : 0];\n      const engineType = opt.engineType[0];\n      return {\n        transcoderFormat,\n        engineFormat,\n        engineType\n      };\n    }\n    throw new Error('THREE.KTX2Loader: Failed to identify transcoding target.');\n  }\n  function isPowerOfTwo(value) {\n    if (value <= 2) return true;\n    return (value & value - 1) === 0 && value !== 0;\n  }\n\n  /**\n   * Concatenates N byte arrays.\n   *\n   * @param {Uint8Array[]} arrays\n   * @return {Uint8Array}\n   */\n  function concat(arrays) {\n    if (arrays.length === 1) return arrays[0];\n    let totalByteLength = 0;\n    for (let i = 0; i < arrays.length; i++) {\n      const array = arrays[i];\n      totalByteLength += array.byteLength;\n    }\n    const result = new Uint8Array(totalByteLength);\n    let byteOffset = 0;\n    for (let i = 0; i < arrays.length; i++) {\n      const array = arrays[i];\n      result.set(array, byteOffset);\n      byteOffset += array.byteLength;\n    }\n    return result;\n  }\n};\n\n// Parsing for non-Basis textures. These textures may have supercompression\n// like Zstd, but they do not require transcoding.\n\nconst UNCOMPRESSED_FORMATS = new Set([RGBAFormat, RGFormat, RedFormat]);\nconst FORMAT_MAP = {\n  [VK_FORMAT_R32G32B32A32_SFLOAT]: RGBAFormat,\n  [VK_FORMAT_R16G16B16A16_SFLOAT]: RGBAFormat,\n  [VK_FORMAT_R8G8B8A8_UNORM]: RGBAFormat,\n  [VK_FORMAT_R8G8B8A8_SRGB]: RGBAFormat,\n  [VK_FORMAT_R32G32_SFLOAT]: RGFormat,\n  [VK_FORMAT_R16G16_SFLOAT]: RGFormat,\n  [VK_FORMAT_R8G8_UNORM]: RGFormat,\n  [VK_FORMAT_R8G8_SRGB]: RGFormat,\n  [VK_FORMAT_R32_SFLOAT]: RedFormat,\n  [VK_FORMAT_R16_SFLOAT]: RedFormat,\n  [VK_FORMAT_R8_SRGB]: RedFormat,\n  [VK_FORMAT_R8_UNORM]: RedFormat,\n  [VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK]: RGB_ETC2_Format,\n  [VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK]: RGBA_ETC2_EAC_Format,\n  [VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT]: RGBA_ASTC_4x4_Format,\n  [VK_FORMAT_ASTC_4x4_SRGB_BLOCK]: RGBA_ASTC_4x4_Format,\n  [VK_FORMAT_ASTC_4x4_UNORM_BLOCK]: RGBA_ASTC_4x4_Format,\n  [VK_FORMAT_ASTC_6x6_SRGB_BLOCK]: RGBA_ASTC_6x6_Format,\n  [VK_FORMAT_ASTC_6x6_UNORM_BLOCK]: RGBA_ASTC_6x6_Format,\n  [VK_FORMAT_BC1_RGBA_UNORM_BLOCK]: RGBA_S3TC_DXT1_Format,\n  [VK_FORMAT_BC1_RGBA_SRGB_BLOCK]: RGBA_S3TC_DXT1_Format,\n  [VK_FORMAT_BC1_RGB_UNORM_BLOCK]: RGB_S3TC_DXT1_Format,\n  [VK_FORMAT_BC1_RGB_SRGB_BLOCK]: RGB_S3TC_DXT1_Format,\n  [VK_FORMAT_BC3_SRGB_BLOCK]: RGBA_S3TC_DXT3_Format,\n  [VK_FORMAT_BC3_UNORM_BLOCK]: RGBA_S3TC_DXT3_Format,\n  [VK_FORMAT_BC5_SNORM_BLOCK]: RGBA_S3TC_DXT5_Format,\n  [VK_FORMAT_BC5_UNORM_BLOCK]: RGBA_S3TC_DXT5_Format,\n  [VK_FORMAT_BC7_SRGB_BLOCK]: RGBA_BPTC_Format,\n  [VK_FORMAT_BC7_UNORM_BLOCK]: RGBA_BPTC_Format\n};\nconst TYPE_MAP = {\n  [VK_FORMAT_R32G32B32A32_SFLOAT]: FloatType,\n  [VK_FORMAT_R16G16B16A16_SFLOAT]: HalfFloatType,\n  [VK_FORMAT_R8G8B8A8_UNORM]: UnsignedByteType,\n  [VK_FORMAT_R8G8B8A8_SRGB]: UnsignedByteType,\n  [VK_FORMAT_R32G32_SFLOAT]: FloatType,\n  [VK_FORMAT_R16G16_SFLOAT]: HalfFloatType,\n  [VK_FORMAT_R8G8_UNORM]: UnsignedByteType,\n  [VK_FORMAT_R8G8_SRGB]: UnsignedByteType,\n  [VK_FORMAT_R32_SFLOAT]: FloatType,\n  [VK_FORMAT_R16_SFLOAT]: HalfFloatType,\n  [VK_FORMAT_R8_SRGB]: UnsignedByteType,\n  [VK_FORMAT_R8_UNORM]: UnsignedByteType,\n  [VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK]: UnsignedByteType,\n  [VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK]: UnsignedByteType,\n  [VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT]: HalfFloatType,\n  [VK_FORMAT_ASTC_6x6_SRGB_BLOCK]: UnsignedByteType,\n  [VK_FORMAT_ASTC_6x6_UNORM_BLOCK]: UnsignedByteType\n};\nasync function createRawTexture(container) {\n  const {\n    vkFormat\n  } = container;\n  if (FORMAT_MAP[vkFormat] === undefined) {\n    throw new Error('THREE.KTX2Loader: Unsupported vkFormat.');\n  }\n\n  //\n\n  let zstd;\n  if (container.supercompressionScheme === KHR_SUPERCOMPRESSION_ZSTD) {\n    if (!_zstd) {\n      _zstd = new Promise(async resolve => {\n        const zstd = new ZSTDDecoder();\n        await zstd.init();\n        resolve(zstd);\n      });\n    }\n    zstd = await _zstd;\n  }\n\n  //\n\n  const mipmaps = [];\n  for (let levelIndex = 0; levelIndex < container.levels.length; levelIndex++) {\n    const levelWidth = Math.max(1, container.pixelWidth >> levelIndex);\n    const levelHeight = Math.max(1, container.pixelHeight >> levelIndex);\n    const levelDepth = container.pixelDepth ? Math.max(1, container.pixelDepth >> levelIndex) : 0;\n    const level = container.levels[levelIndex];\n    let levelData;\n    if (container.supercompressionScheme === KHR_SUPERCOMPRESSION_NONE) {\n      levelData = level.levelData;\n    } else if (container.supercompressionScheme === KHR_SUPERCOMPRESSION_ZSTD) {\n      levelData = zstd.decode(level.levelData, level.uncompressedByteLength);\n    } else {\n      throw new Error('THREE.KTX2Loader: Unsupported supercompressionScheme.');\n    }\n    let data;\n    if (TYPE_MAP[vkFormat] === FloatType) {\n      data = new Float32Array(levelData.buffer, levelData.byteOffset, levelData.byteLength / Float32Array.BYTES_PER_ELEMENT);\n    } else if (TYPE_MAP[vkFormat] === HalfFloatType) {\n      data = new Uint16Array(levelData.buffer, levelData.byteOffset, levelData.byteLength / Uint16Array.BYTES_PER_ELEMENT);\n    } else {\n      data = levelData;\n    }\n    mipmaps.push({\n      data: data,\n      width: levelWidth,\n      height: levelHeight,\n      depth: levelDepth\n    });\n  }\n  let texture;\n  if (UNCOMPRESSED_FORMATS.has(FORMAT_MAP[vkFormat])) {\n    texture = container.pixelDepth === 0 ? new DataTexture(mipmaps[0].data, container.pixelWidth, container.pixelHeight) : new Data3DTexture(mipmaps[0].data, container.pixelWidth, container.pixelHeight, container.pixelDepth);\n  } else {\n    if (container.pixelDepth > 0) throw new Error('THREE.KTX2Loader: Unsupported pixelDepth.');\n    texture = new CompressedTexture(mipmaps, container.pixelWidth, container.pixelHeight);\n    texture.minFilter = mipmaps.length === 1 ? LinearFilter : LinearMipmapLinearFilter;\n    texture.magFilter = LinearFilter;\n  }\n  texture.mipmaps = mipmaps;\n  texture.type = TYPE_MAP[vkFormat];\n  texture.format = FORMAT_MAP[vkFormat];\n  texture.colorSpace = parseColorSpace(container);\n  texture.needsUpdate = true;\n\n  //\n\n  return Promise.resolve(texture);\n}\nfunction parseColorSpace(container) {\n  const dfd = container.dataFormatDescriptor[0];\n  if (dfd.colorPrimaries === KHR_DF_PRIMARIES_BT709) {\n    return dfd.transferFunction === KHR_DF_TRANSFER_SRGB ? SRGBColorSpace : LinearSRGBColorSpace;\n  } else if (dfd.colorPrimaries === KHR_DF_PRIMARIES_DISPLAYP3) {\n    return dfd.transferFunction === KHR_DF_TRANSFER_SRGB ? DisplayP3ColorSpace : LinearDisplayP3ColorSpace;\n  } else if (dfd.colorPrimaries === KHR_DF_PRIMARIES_UNSPECIFIED) {\n    return NoColorSpace;\n  } else {\n    console.warn(`THREE.KTX2Loader: Unsupported color primaries, \"${dfd.colorPrimaries}\"`);\n    return NoColorSpace;\n  }\n}\nexport { KTX2Loader };", "/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _a, _b;\nconst $retainerCount = Symbol('retainerCount');\nconst $recentlyUsed = Symbol('recentlyUsed');\nconst $evict = Symbol('evict');\nconst $evictionThreshold = Symbol('evictionThreshold');\nconst $cache = Symbol('cache');\n/**\n * The CacheEvictionPolicy manages the lifecycle for items in a cache,\n * evicting any items outside some threshold bounds in \"recently used\" order,\n * if they are evictable.\n *\n * Items are considered cached as they are retained. When all retainers\n * of an item release it, that item is considered evictable.\n */\nexport class CacheEvictionPolicy {\n  constructor(cache, evictionThreshold = 5) {\n    this[_a] = new Map();\n    this[_b] = [];\n    this[$cache] = cache;\n    this[$evictionThreshold] = evictionThreshold;\n  }\n  /**\n   * The eviction threshold is the maximum number of items to hold\n   * in cache indefinitely. Items within the threshold (in recently\n   * used order) will continue to be cached even if they have zero\n   * retainers.\n   */\n  set evictionThreshold(value) {\n    this[$evictionThreshold] = value;\n    this[$evict]();\n  }\n  get evictionThreshold() {\n    return this[$evictionThreshold];\n  }\n  /**\n   * A reference to the cache that operates under this policy\n   */\n  get cache() {\n    return this[$cache];\n  }\n  /**\n   * Given an item key, returns the number of retainers of that item\n   */\n  retainerCount(key) {\n    return this[$retainerCount].get(key) || 0;\n  }\n  /**\n   * Resets the internal tracking of cache item retainers. Use only in cases\n   * where it is certain that all retained cache items have been accounted for!\n   */\n  reset() {\n    this[$retainerCount].clear();\n    this[$recentlyUsed] = [];\n  }\n  /**\n   * Mark a given cache item as retained, where the item is represented\n   * by its key. An item can have any number of retainers.\n   */\n  retain(key) {\n    if (!this[$retainerCount].has(key)) {\n      this[$retainerCount].set(key, 0);\n    }\n    this[$retainerCount].set(key, this[$retainerCount].get(key) + 1);\n    const recentlyUsedIndex = this[$recentlyUsed].indexOf(key);\n    if (recentlyUsedIndex !== -1) {\n      this[$recentlyUsed].splice(recentlyUsedIndex, 1);\n    }\n    this[$recentlyUsed].unshift(key);\n    // Evict, in case retaining a new item pushed an evictable item beyond the\n    // eviction threshold\n    this[$evict]();\n  }\n  /**\n   * Mark a given cache item as released by one of its retainers, where the item\n   * is represented by its key. When all retainers of an item have released it,\n   * the item is considered evictable.\n   */\n  release(key) {\n    if (this[$retainerCount].has(key)) {\n      this[$retainerCount].set(key, Math.max(this[$retainerCount].get(key) - 1, 0));\n    }\n    this[$evict]();\n  }\n  [(_a = $retainerCount, _b = $recentlyUsed, $evict)]() {\n    if (this[$recentlyUsed].length < this[$evictionThreshold]) {\n      return;\n    }\n    for (let i = this[$recentlyUsed].length - 1; i >= this[$evictionThreshold]; --i) {\n      const key = this[$recentlyUsed][i];\n      const retainerCount = this[$retainerCount].get(key);\n      if (retainerCount === 0) {\n        this[$cache].delete(key);\n        this[$recentlyUsed].splice(i, 1);\n      }\n    }\n  }\n}\n", "/* @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * KHR_materials_variants specification allows duplicated variant names\n * but it makes handling the extension complex.\n * We ensure tha names and make it easier.\n * If you want to export the extension with the original names\n * you are recommended to write GLTFExporter plugin to restore the names.\n *\n * @param variantNames {Array<string>}\n * @return {Array<string>}\n */\nconst ensureUniqueNames = variantNames => {\n  const uniqueNames = [];\n  const knownNames = new Set();\n  for (const name of variantNames) {\n    let uniqueName = name;\n    let suffix = 0;\n    // @TODO: An easy solution.\n    //        O(N^2) in the worst scenario where N is variantNames.length.\n    //        Fix me if needed.\n    while (knownNames.has(uniqueName)) {\n      uniqueName = name + '.' + ++suffix;\n    }\n    knownNames.add(uniqueName);\n    uniqueNames.push(uniqueName);\n  }\n  return uniqueNames;\n};\n/**\n * Convert mappings array to table object to make handling the extension easier.\n *\n * @param\n *     extensionDef {glTF.meshes[n].primitive.extensions.KHR_materials_variants}\n * @param variantNames {Array<string>} Required to be unique names\n * @return {Map}\n */\nconst mappingsArrayToTable = extensionDef => {\n  const table = new Map();\n  for (const mapping of extensionDef.mappings) {\n    for (const variant of mapping.variants) {\n      table.set(variant, {\n        material: null,\n        gltfMaterialIndex: mapping.material\n      });\n    }\n  }\n  return table;\n};\nexport default class GLTFMaterialsVariantsExtension {\n  constructor(parser) {\n    this.parser = parser;\n    this.name = 'KHR_materials_variants';\n  }\n  // Note that the following properties will be overridden even if they are\n  // pre-defined\n  // - gltf.userData.variants\n  // - mesh.userData.variantMaterials\n  afterRoot(gltf) {\n    const parser = this.parser;\n    const json = parser.json;\n    if (json.extensions === undefined || json.extensions[this.name] === undefined) {\n      return null;\n    }\n    const extensionDef = json.extensions[this.name];\n    const variantsDef = extensionDef.variants || [];\n    const variants = ensureUniqueNames(variantsDef.map(v => v.name));\n    for (const scene of gltf.scenes) {\n      // Save the variants data under associated mesh.userData\n      scene.traverse(object => {\n        const mesh = object;\n        if (!mesh.material) {\n          return;\n        }\n        const association = parser.associations.get(mesh);\n        if (association == null || association.meshes == null || association.primitives == null) {\n          return;\n        }\n        const meshDef = json.meshes[association.meshes];\n        const primitivesDef = meshDef.primitives;\n        const primitiveDef = primitivesDef[association.primitives];\n        const extensionsDef = primitiveDef.extensions;\n        if (!extensionsDef || !extensionsDef[this.name]) {\n          return;\n        }\n        mesh.userData.variantMaterials = mappingsArrayToTable(extensionsDef[this.name]);\n      });\n    }\n    gltf.userData.variants = variants;\n    return Promise.resolve();\n  }\n}\n", "/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _a, _b;\nimport { EventDispatcher, Texture } from 'three';\nimport { MeshoptDecoder } from 'three/examples/jsm/libs/meshopt_decoder.module.js';\nimport { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { KTX2Loader } from 'three/examples/jsm/loaders/KTX2Loader.js';\nimport { CacheEvictionPolicy } from '../utilities/cache-eviction-policy.js';\nimport GLTFMaterialsVariantsExtension from './gltf-instance/VariantMaterialLoaderPlugin.js';\nTexture.DEFAULT_ANISOTROPY = 4;\n/**\n * A helper to Promise-ify a Three.js GLTFLoader\n */\nexport const loadWithLoader = (url, loader, progressCallback = () => {}) => {\n  const onProgress = event => {\n    const fraction = event.loaded / event.total;\n    progressCallback(Math.max(0, Math.min(1, isFinite(fraction) ? fraction : 1)));\n  };\n  return new Promise((resolve, reject) => {\n    loader.load(url, resolve, onProgress, reject);\n  });\n};\n/** Helper to load a script tag. */\nconst fetchScript = src => {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement('script');\n    document.body.appendChild(script);\n    script.onload = resolve;\n    script.onerror = reject;\n    script.async = true;\n    script.src = src;\n  });\n};\nconst cache = new Map();\nconst preloaded = new Map();\nlet dracoDecoderLocation;\nconst dracoLoader = new DRACOLoader();\nlet ktx2TranscoderLocation;\nconst ktx2Loader = new KTX2Loader();\nlet meshoptDecoderLocation;\nlet meshoptDecoder;\nexport const $loader = Symbol('loader');\nexport const $evictionPolicy = Symbol('evictionPolicy');\nconst $GLTFInstance = Symbol('GLTFInstance');\nexport class CachingGLTFLoader extends EventDispatcher {\n  static setDRACODecoderLocation(url) {\n    dracoDecoderLocation = url;\n    dracoLoader.setDecoderPath(url);\n  }\n  static getDRACODecoderLocation() {\n    return dracoDecoderLocation;\n  }\n  static setKTX2TranscoderLocation(url) {\n    ktx2TranscoderLocation = url;\n    ktx2Loader.setTranscoderPath(url);\n  }\n  static getKTX2TranscoderLocation() {\n    return ktx2TranscoderLocation;\n  }\n  static setMeshoptDecoderLocation(url) {\n    if (meshoptDecoderLocation !== url) {\n      meshoptDecoderLocation = url;\n      meshoptDecoder = fetchScript(url).then(() => MeshoptDecoder.ready).then(() => MeshoptDecoder);\n    }\n  }\n  static getMeshoptDecoderLocation() {\n    return meshoptDecoderLocation;\n  }\n  static initializeKTX2Loader(renderer) {\n    ktx2Loader.detectSupport(renderer);\n  }\n  static get cache() {\n    return cache;\n  }\n  /** @nocollapse */\n  static clearCache() {\n    cache.forEach((_value, url) => {\n      this.delete(url);\n    });\n    this[$evictionPolicy].reset();\n  }\n  static has(url) {\n    return cache.has(url);\n  }\n  /** @nocollapse */\n  static async delete(url) {\n    if (!this.has(url)) {\n      return;\n    }\n    const gltfLoads = cache.get(url);\n    preloaded.delete(url);\n    cache.delete(url);\n    const gltf = await gltfLoads;\n    // Dispose of the cached glTF's materials and geometries:\n    gltf.dispose();\n  }\n  /**\n   * Returns true if the model that corresponds to the specified url is\n   * available in our local cache.\n   */\n  static hasFinishedLoading(url) {\n    return !!preloaded.get(url);\n  }\n  constructor(GLTFInstance) {\n    super();\n    this[_b] = new GLTFLoader().register(parser => new GLTFMaterialsVariantsExtension(parser));\n    this[$GLTFInstance] = GLTFInstance;\n    this[$loader].setDRACOLoader(dracoLoader);\n    this[$loader].setKTX2Loader(ktx2Loader);\n  }\n  get [(_a = $evictionPolicy, _b = $loader, $evictionPolicy)]() {\n    return this.constructor[$evictionPolicy];\n  }\n  /**\n   * Preloads a glTF, populating the cache. Returns a promise that resolves\n   * when the cache is populated.\n   */\n  async preload(url, element, progressCallback = () => {}) {\n    this[$loader].setWithCredentials(element.withCredentials);\n    this.dispatchEvent({\n      type: 'preload',\n      element: element,\n      src: url\n    });\n    if (!cache.has(url)) {\n      if (meshoptDecoder != null) {\n        this[$loader].setMeshoptDecoder(await meshoptDecoder);\n      }\n      const rawGLTFLoads = loadWithLoader(url, this[$loader], progress => {\n        progressCallback(progress * 0.8);\n      });\n      const GLTFInstance = this[$GLTFInstance];\n      const gltfInstanceLoads = rawGLTFLoads.then(rawGLTF => {\n        return GLTFInstance.prepare(rawGLTF);\n      }).then(preparedGLTF => {\n        progressCallback(0.9);\n        return new GLTFInstance(preparedGLTF);\n      }).catch(reason => {\n        console.error(reason);\n        return new GLTFInstance();\n      });\n      cache.set(url, gltfInstanceLoads);\n    }\n    await cache.get(url);\n    preloaded.set(url, true);\n    if (progressCallback) {\n      progressCallback(1.0);\n    }\n  }\n  /**\n   * Loads a glTF from the specified url and resolves a unique clone of the\n   * glTF. If the glTF has already been loaded, makes a clone of the cached\n   * copy.\n   */\n  async load(url, element, progressCallback = () => {}) {\n    await this.preload(url, element, progressCallback);\n    const gltf = await cache.get(url);\n    const clone = await gltf.clone();\n    this[$evictionPolicy].retain(url);\n    // Patch dispose so that we can properly account for instance use\n    // in the caching layer:\n    clone.dispose = () => {\n      this[$evictionPolicy].release(url);\n    };\n    return clone;\n  }\n}\nCachingGLTFLoader[_a] = new CacheEvictionPolicy(CachingGLTFLoader);\n", "import { Matrix4, Object3D, Vector2, Vector3 } from 'three';\n\n/**\n * The only type of 3D object that is supported by {@link CSS2DRenderer}.\n *\n * @augments Object3D\n * @three_import import { CSS2DObject } from 'three/addons/renderers/CSS2DRenderer.js';\n */\nclass CSS2DObject extends Object3D {\n  /**\n   * Constructs a new CSS2D object.\n   *\n   * @param {DOMElement} [element] - The DOM element.\n   */\n  constructor(element = document.createElement('div')) {\n    super();\n\n    /**\n     * This flag can be used for type testing.\n     *\n     * @type {boolean}\n     * @readonly\n     * @default true\n     */\n    this.isCSS2DObject = true;\n\n    /**\n     * The DOM element which defines the appearance of this 3D object.\n     *\n     * @type {DOMElement}\n     * @readonly\n     * @default true\n     */\n    this.element = element;\n    this.element.style.position = 'absolute';\n    this.element.style.userSelect = 'none';\n    this.element.setAttribute('draggable', false);\n\n    /**\n     * The 3D objects center point.\n     * `( 0, 0 )` is the lower left, `( 1, 1 )` is the top right.\n     *\n     * @type {Vector2}\n     * @default (0.5,0.5)\n     */\n    this.center = new Vector2(0.5, 0.5);\n    this.addEventListener('removed', function () {\n      this.traverse(function (object) {\n        if (object.element instanceof object.element.ownerDocument.defaultView.Element && object.element.parentNode !== null) {\n          object.element.remove();\n        }\n      });\n    });\n  }\n  copy(source, recursive) {\n    super.copy(source, recursive);\n    this.element = source.element.cloneNode(true);\n    this.center = source.center;\n    return this;\n  }\n}\n\n//\n\nconst _vector = new Vector3();\nconst _viewMatrix = new Matrix4();\nconst _viewProjectionMatrix = new Matrix4();\nconst _a = new Vector3();\nconst _b = new Vector3();\n\n/**\n * This renderer is a simplified version of {@link CSS3DRenderer}. The only transformation that is\n * supported is translation.\n *\n * The renderer is very useful if you want to combine HTML based labels with 3D objects. Here too,\n * the respective DOM elements are wrapped into an instance of {@link CSS2DObject} and added to the\n * scene graph. All other types of renderable 3D objects (like meshes or point clouds) are ignored.\n *\n * `CSS2DRenderer` only supports 100% browser and display zoom.\n *\n * @three_import import { CSS2DRenderer } from 'three/addons/renderers/CSS2DRenderer.js';\n */\nclass CSS2DRenderer {\n  /**\n   * Constructs a new CSS2D renderer.\n   *\n   * @param {CSS2DRenderer~Parameters} [parameters] - The parameters.\n   */\n  constructor(parameters = {}) {\n    const _this = this;\n    let _width, _height;\n    let _widthHalf, _heightHalf;\n    const cache = {\n      objects: new WeakMap()\n    };\n    const domElement = parameters.element !== undefined ? parameters.element : document.createElement('div');\n    domElement.style.overflow = 'hidden';\n\n    /**\n     * The DOM where the renderer appends its child-elements.\n     *\n     * @type {DOMElement}\n     */\n    this.domElement = domElement;\n\n    /**\n     * Returns an object containing the width and height of the renderer.\n     *\n     * @return {{width:number,height:number}} The size of the renderer.\n     */\n    this.getSize = function () {\n      return {\n        width: _width,\n        height: _height\n      };\n    };\n\n    /**\n     * Renders the given scene using the given camera.\n     *\n     * @param {Object3D} scene - A scene or any other type of 3D object.\n     * @param {Camera} camera - The camera.\n     */\n    this.render = function (scene, camera) {\n      if (scene.matrixWorldAutoUpdate === true) scene.updateMatrixWorld();\n      if (camera.parent === null && camera.matrixWorldAutoUpdate === true) camera.updateMatrixWorld();\n      _viewMatrix.copy(camera.matrixWorldInverse);\n      _viewProjectionMatrix.multiplyMatrices(camera.projectionMatrix, _viewMatrix);\n      renderObject(scene, scene, camera);\n      zOrder(scene);\n    };\n\n    /**\n     * Resizes the renderer to the given width and height.\n     *\n     * @param {number} width - The width of the renderer.\n     * @param {number} height - The height of the renderer.\n     */\n    this.setSize = function (width, height) {\n      _width = width;\n      _height = height;\n      _widthHalf = _width / 2;\n      _heightHalf = _height / 2;\n      domElement.style.width = width + 'px';\n      domElement.style.height = height + 'px';\n    };\n    function hideObject(object) {\n      if (object.isCSS2DObject) object.element.style.display = 'none';\n      for (let i = 0, l = object.children.length; i < l; i++) {\n        hideObject(object.children[i]);\n      }\n    }\n    function renderObject(object, scene, camera) {\n      if (object.visible === false) {\n        hideObject(object);\n        return;\n      }\n      if (object.isCSS2DObject) {\n        _vector.setFromMatrixPosition(object.matrixWorld);\n        _vector.applyMatrix4(_viewProjectionMatrix);\n        const visible = _vector.z >= -1 && _vector.z <= 1 && object.layers.test(camera.layers) === true;\n        const element = object.element;\n        element.style.display = visible === true ? '' : 'none';\n        if (visible === true) {\n          object.onBeforeRender(_this, scene, camera);\n          element.style.transform = 'translate(' + -100 * object.center.x + '%,' + -100 * object.center.y + '%)' + 'translate(' + (_vector.x * _widthHalf + _widthHalf) + 'px,' + (-_vector.y * _heightHalf + _heightHalf) + 'px)';\n          if (element.parentNode !== domElement) {\n            domElement.appendChild(element);\n          }\n          object.onAfterRender(_this, scene, camera);\n        }\n        const objectData = {\n          distanceToCameraSquared: getDistanceToSquared(camera, object)\n        };\n        cache.objects.set(object, objectData);\n      }\n      for (let i = 0, l = object.children.length; i < l; i++) {\n        renderObject(object.children[i], scene, camera);\n      }\n    }\n    function getDistanceToSquared(object1, object2) {\n      _a.setFromMatrixPosition(object1.matrixWorld);\n      _b.setFromMatrixPosition(object2.matrixWorld);\n      return _a.distanceToSquared(_b);\n    }\n    function filterAndFlatten(scene) {\n      const result = [];\n      scene.traverseVisible(function (object) {\n        if (object.isCSS2DObject) result.push(object);\n      });\n      return result;\n    }\n    function zOrder(scene) {\n      const sorted = filterAndFlatten(scene).sort(function (a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n          return b.renderOrder - a.renderOrder;\n        }\n        const distanceA = cache.objects.get(a).distanceToCameraSquared;\n        const distanceB = cache.objects.get(b).distanceToCameraSquared;\n        return distanceA - distanceB;\n      });\n      const zMax = sorted.length;\n      for (let i = 0, l = sorted.length; i < l; i++) {\n        sorted[i].element.style.zIndex = zMax - i;\n      }\n    }\n  }\n}\n\n/**\n * Constructor parameters of `CSS2DRenderer`.\n *\n * @typedef {Object} CSS2DRenderer~Parameters\n * @property {DOMElement} [element] - A DOM element where the renderer appends its child-elements.\n * If not passed in here, a new div element will be created.\n **/\n\nexport { CSS2DObject, CSS2DRenderer };", "import { BufferAttribute, BufferGeometry, Color, Group, Matrix4, Mesh, Vector3 } from 'three';\nimport { mergeGroups, deepCloneAttribute } from './BufferGeometryUtils.js';\n\n/**\n * @module SceneUtils\n * @three_import import * as SceneUtils from 'three/addons/utils/SceneUtils.js';\n */\n\nconst _color = /*@__PURE__*/new Color();\nconst _matrix = /*@__PURE__*/new Matrix4();\n\n/**\n * This function creates a mesh for each instance of the given instanced mesh and\n * adds it to a group. Each mesh will honor the current 3D transformation of its\n * corresponding instance.\n *\n * @param {InstancedMesh} instancedMesh - The instanced mesh.\n * @return {Group} A group of meshes.\n */\nfunction createMeshesFromInstancedMesh(instancedMesh) {\n  const group = new Group();\n  const count = instancedMesh.count;\n  const geometry = instancedMesh.geometry;\n  const material = instancedMesh.material;\n  for (let i = 0; i < count; i++) {\n    const mesh = new Mesh(geometry, material);\n    instancedMesh.getMatrixAt(i, mesh.matrix);\n    mesh.matrix.decompose(mesh.position, mesh.quaternion, mesh.scale);\n    group.add(mesh);\n  }\n  group.copy(instancedMesh);\n  group.updateMatrixWorld(); // ensure correct world matrices of meshes\n\n  return group;\n}\n\n/**\n * This function creates a mesh for each geometry-group of the given multi-material mesh and\n * adds it to a group.\n *\n * @param {Mesh} mesh - The multi-material mesh.\n * @return {Group} A group of meshes.\n */\nfunction createMeshesFromMultiMaterialMesh(mesh) {\n  if (Array.isArray(mesh.material) === false) {\n    console.warn('THREE.SceneUtils.createMeshesFromMultiMaterialMesh(): The given mesh has no multiple materials.');\n    return mesh;\n  }\n  const object = new Group();\n  object.copy(mesh);\n\n  // merge groups (which automatically sorts them)\n\n  const geometry = mergeGroups(mesh.geometry);\n  const index = geometry.index;\n  const groups = geometry.groups;\n  const attributeNames = Object.keys(geometry.attributes);\n\n  // create a mesh for each group by extracting the buffer data into a new geometry\n\n  for (let i = 0; i < groups.length; i++) {\n    const group = groups[i];\n    const start = group.start;\n    const end = start + group.count;\n    const newGeometry = new BufferGeometry();\n    const newMaterial = mesh.material[group.materialIndex];\n\n    // process all buffer attributes\n\n    for (let j = 0; j < attributeNames.length; j++) {\n      const name = attributeNames[j];\n      const attribute = geometry.attributes[name];\n      const itemSize = attribute.itemSize;\n      const newLength = group.count * itemSize;\n      const type = attribute.array.constructor;\n      const newArray = new type(newLength);\n      const newAttribute = new BufferAttribute(newArray, itemSize);\n      for (let k = start, n = 0; k < end; k++, n++) {\n        const ind = index.getX(k);\n        if (itemSize >= 1) newAttribute.setX(n, attribute.getX(ind));\n        if (itemSize >= 2) newAttribute.setY(n, attribute.getY(ind));\n        if (itemSize >= 3) newAttribute.setZ(n, attribute.getZ(ind));\n        if (itemSize >= 4) newAttribute.setW(n, attribute.getW(ind));\n      }\n      newGeometry.setAttribute(name, newAttribute);\n    }\n    const newMesh = new Mesh(newGeometry, newMaterial);\n    object.add(newMesh);\n  }\n  return object;\n}\n\n/**\n * This function represents an alternative way to create 3D objects with multiple materials.\n * Normally, {@link BufferGeometry#groups} are used which might introduce issues e.g. when\n * exporting the object to a 3D format. This function accepts a geometry and an array of\n * materials and creates for each material a mesh that is added to a group.\n *\n * @param {BufferGeometry} geometry - The geometry.\n * @param {Array<Material>} materials - An array of materials.\n * @return {Group} A group representing a multi-material object.\n */\nfunction createMultiMaterialObject(geometry, materials) {\n  const group = new Group();\n  for (let i = 0, l = materials.length; i < l; i++) {\n    group.add(new Mesh(geometry, materials[i]));\n  }\n  return group;\n}\n\n/**\n * Executes a reducer function for each vertex of the given 3D object.\n * `reduceVertices()` returns a single value: the function's accumulated result.\n *\n * @param {Object3D} object - The 3D object that should be processed. It must have a\n * geometry with a `position` attribute.\n * @param {function(number,Vector3):number} func - The reducer function. First argument\n * is the current value, second argument the current vertex.\n * @param {any} initialValue - The initial value.\n * @return {any} The result.\n */\nfunction reduceVertices(object, func, initialValue) {\n  let value = initialValue;\n  const vertex = new Vector3();\n  object.updateWorldMatrix(true, true);\n  object.traverseVisible(child => {\n    const {\n      geometry\n    } = child;\n    if (geometry !== undefined) {\n      const {\n        position\n      } = geometry.attributes;\n      if (position !== undefined) {\n        for (let i = 0, l = position.count; i < l; i++) {\n          if (child.isMesh) {\n            child.getVertexPosition(i, vertex);\n          } else {\n            vertex.fromBufferAttribute(position, i);\n          }\n          if (!child.isSkinnedMesh) {\n            vertex.applyMatrix4(child.matrixWorld);\n          }\n          value = func(value, vertex);\n        }\n      }\n    }\n  });\n  return value;\n}\n\n/**\n * Sorts the instances of the given instanced mesh.\n *\n * @param {InstancedMesh} mesh - The instanced mesh to sort.\n * @param {function(number, number):number} compareFn - A custom compare function for the sort.\n */\nfunction sortInstancedMesh(mesh, compareFn) {\n  // store copy of instanced attributes for lookups\n\n  const instanceMatrixRef = deepCloneAttribute(mesh.instanceMatrix);\n  const instanceColorRef = mesh.instanceColor ? deepCloneAttribute(mesh.instanceColor) : null;\n  const attributeRefs = new Map();\n  for (const name in mesh.geometry.attributes) {\n    const attribute = mesh.geometry.attributes[name];\n    if (attribute.isInstancedBufferAttribute) {\n      attributeRefs.set(attribute, deepCloneAttribute(attribute));\n    }\n  }\n\n  // compute sort order\n\n  const tokens = [];\n  for (let i = 0; i < mesh.count; i++) tokens.push(i);\n  tokens.sort(compareFn);\n\n  // apply sort order\n\n  for (let i = 0; i < tokens.length; i++) {\n    const refIndex = tokens[i];\n    _matrix.fromArray(instanceMatrixRef.array, refIndex * mesh.instanceMatrix.itemSize);\n    _matrix.toArray(mesh.instanceMatrix.array, i * mesh.instanceMatrix.itemSize);\n    if (mesh.instanceColor) {\n      _color.fromArray(instanceColorRef.array, refIndex * mesh.instanceColor.itemSize);\n      _color.toArray(mesh.instanceColor.array, i * mesh.instanceColor.itemSize);\n    }\n    for (const name in mesh.geometry.attributes) {\n      const attribute = mesh.geometry.attributes[name];\n      if (attribute.isInstancedBufferAttribute) {\n        const attributeRef = attributeRefs.get(attribute);\n        attribute.setX(i, attributeRef.getX(refIndex));\n        if (attribute.itemSize > 1) attribute.setY(i, attributeRef.getY(refIndex));\n        if (attribute.itemSize > 2) attribute.setZ(i, attributeRef.getZ(refIndex));\n        if (attribute.itemSize > 3) attribute.setW(i, attributeRef.getW(refIndex));\n      }\n    }\n  }\n}\n\n/**\n * Generator based alternative to {@link Object3D#traverse}.\n *\n * @param {Object3D} object - Object to traverse.\n * @yields {Object3D} Objects that passed the filter condition.\n */\nfunction* traverseGenerator(object) {\n  yield object;\n  const children = object.children;\n  for (let i = 0, l = children.length; i < l; i++) {\n    yield* traverseGenerator(children[i]);\n  }\n}\n\n/**\n * Generator based alternative to {@link Object3D#traverseVisible}.\n *\n * @param {Object3D} object Object to traverse.\n * @yields {Object3D} Objects that passed the filter condition.\n */\nfunction* traverseVisibleGenerator(object) {\n  if (object.visible === false) return;\n  yield object;\n  const children = object.children;\n  for (let i = 0, l = children.length; i < l; i++) {\n    yield* traverseVisibleGenerator(children[i]);\n  }\n}\n\n/**\n * Generator based alternative to {@link Object3D#traverseAncestors}.\n *\n * @param {Object3D} object Object to traverse.\n * @yields {Object3D} Objects that passed the filter condition.\n */\nfunction* traverseAncestorsGenerator(object) {\n  const parent = object.parent;\n  if (parent !== null) {\n    yield parent;\n    yield* traverseAncestorsGenerator(parent);\n  }\n}\nexport { createMeshesFromInstancedMesh, createMeshesFromMultiMaterialMesh, createMultiMaterialObject, reduceVertices, sortInstancedMesh, traverseGenerator, traverseVisibleGenerator, traverseAncestorsGenerator };", "import { BufferAttribute, ClampToEdgeWrapping, Color, DoubleSide, InterpolateDiscrete, InterpolateLinear, NoColorSpace, LinearFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, MathUtils, Matrix4, MirroredRepeatWrapping, NearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, PropertyBinding, RGBAFormat, RepeatWrapping, Scene, Source, SRGBColorSpace, CompressedTexture, Vector3, Quaternion, REVISION, ImageUtils } from 'three';\n\n/**\n * The KHR_mesh_quantization extension allows these extra attribute component types\n *\n * @see https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Khronos/KHR_mesh_quantization/README.md#extending-mesh-attributes\n */\nconst KHR_mesh_quantization_ExtraAttrTypes = {\n  POSITION: ['byte', 'byte normalized', 'unsigned byte', 'unsigned byte normalized', 'short', 'short normalized', 'unsigned short', 'unsigned short normalized'],\n  NORMAL: ['byte normalized', 'short normalized'],\n  TANGENT: ['byte normalized', 'short normalized'],\n  TEXCOORD: ['byte', 'byte normalized', 'unsigned byte', 'short', 'short normalized', 'unsigned short']\n};\n\n/**\n * An exporter for `glTF` 2.0.\n *\n * glTF (GL Transmission Format) is an [open format specification]{@link https://github.com/KhronosGroup/glTF/tree/master/specification/2.0}\n * for efficient delivery and loading of 3D content. Assets may be provided either in JSON (.gltf)\n * or binary (.glb) format. External files store textures (.jpg, .png) and additional binary\n * data (.bin). A glTF asset may deliver one or more scenes, including meshes, materials,\n * textures, skins, skeletons, morph targets, animations, lights, and/or cameras.\n *\n * GLTFExporter supports the [glTF 2.0 extensions]{@link https://github.com/KhronosGroup/glTF/tree/master/extensions/}:\n *\n * - KHR_lights_punctual\n * - KHR_materials_clearcoat\n * - KHR_materials_dispersion\n * - KHR_materials_emissive_strength\n * - KHR_materials_ior\n * - KHR_materials_iridescence\n * - KHR_materials_specular\n * - KHR_materials_sheen\n * - KHR_materials_transmission\n * - KHR_materials_unlit\n * - KHR_materials_volume\n * - KHR_mesh_quantization\n * - KHR_texture_transform\n * - EXT_materials_bump\n * - EXT_mesh_gpu_instancing\n *\n * The following glTF 2.0 extension is supported by an external user plugin:\n *\n * - [KHR_materials_variants]{@link https://github.com/takahirox/three-gltf-extensions}\n *\n * ```js\n * const exporter = new GLTFExporter();\n * const data = await exporter.parseAsync( scene, options );\n * ```\n *\n * @three_import import { GLTFExporter } from 'three/addons/exporters/GLTFExporter.js';\n */\nclass GLTFExporter {\n  /**\n   * Constructs a new glTF exporter.\n   */\n  constructor() {\n    /**\n     * A reference to a texture utils module.\n     *\n     * @type {?(WebGLTextureUtils|WebGPUTextureUtils)}\n     * @default null\n     */\n    this.textureUtils = null;\n    this.pluginCallbacks = [];\n    this.register(function (writer) {\n      return new GLTFLightExtension(writer);\n    });\n    this.register(function (writer) {\n      return new GLTFMaterialsUnlitExtension(writer);\n    });\n    this.register(function (writer) {\n      return new GLTFMaterialsTransmissionExtension(writer);\n    });\n    this.register(function (writer) {\n      return new GLTFMaterialsVolumeExtension(writer);\n    });\n    this.register(function (writer) {\n      return new GLTFMaterialsIorExtension(writer);\n    });\n    this.register(function (writer) {\n      return new GLTFMaterialsSpecularExtension(writer);\n    });\n    this.register(function (writer) {\n      return new GLTFMaterialsClearcoatExtension(writer);\n    });\n    this.register(function (writer) {\n      return new GLTFMaterialsDispersionExtension(writer);\n    });\n    this.register(function (writer) {\n      return new GLTFMaterialsIridescenceExtension(writer);\n    });\n    this.register(function (writer) {\n      return new GLTFMaterialsSheenExtension(writer);\n    });\n    this.register(function (writer) {\n      return new GLTFMaterialsAnisotropyExtension(writer);\n    });\n    this.register(function (writer) {\n      return new GLTFMaterialsEmissiveStrengthExtension(writer);\n    });\n    this.register(function (writer) {\n      return new GLTFMaterialsBumpExtension(writer);\n    });\n    this.register(function (writer) {\n      return new GLTFMeshGpuInstancing(writer);\n    });\n  }\n\n  /**\n   * Registers a plugin callback. This API is internally used to implement the various\n   * glTF extensions but can also used by third-party code to add additional logic\n   * to the exporter.\n   *\n   * @param {function(writer:GLTFWriter)} callback - The callback function to register.\n   * @return {GLTFExporter} A reference to this exporter.\n   */\n  register(callback) {\n    if (this.pluginCallbacks.indexOf(callback) === -1) {\n      this.pluginCallbacks.push(callback);\n    }\n    return this;\n  }\n\n  /**\n   * Unregisters a plugin callback.\n   *\n   * @param {Function} callback - The callback function to unregister.\n   * @return {GLTFExporter} A reference to this exporter.\n   */\n  unregister(callback) {\n    if (this.pluginCallbacks.indexOf(callback) !== -1) {\n      this.pluginCallbacks.splice(this.pluginCallbacks.indexOf(callback), 1);\n    }\n    return this;\n  }\n\n  /**\n   * Sets the texture utils for this exporter. Only relevant when compressed textures have to be exported.\n   *\n   * Depending on whether you use {@link WebGLRenderer} or {@link WebGPURenderer}, you must inject the\n   * corresponding texture utils {@link WebGLTextureUtils} or {@link WebGPUTextureUtils}.\n   *\n   * @param {WebGLTextureUtils|WebGPUTextureUtils} utils - The texture utils.\n   * @return {GLTFExporter} A reference to this exporter.\n   */\n  setTextureUtils(utils) {\n    this.textureUtils = utils;\n    return this;\n  }\n\n  /**\n   * Parses the given scenes and generates the glTF output.\n   *\n   * @param {Scene|Array<Scene>} input - A scene or an array of scenes.\n   * @param {GLTFExporter~OnDone} onDone - A callback function that is executed when the export has finished.\n   * @param {GLTFExporter~OnError} onError - A callback function that is executed when an error happens.\n   * @param {GLTFExporter~Options} options - options\n   */\n  parse(input, onDone, onError, options) {\n    const writer = new GLTFWriter();\n    const plugins = [];\n    for (let i = 0, il = this.pluginCallbacks.length; i < il; i++) {\n      plugins.push(this.pluginCallbacks[i](writer));\n    }\n    writer.setPlugins(plugins);\n    writer.setTextureUtils(this.textureUtils);\n    writer.writeAsync(input, onDone, options).catch(onError);\n  }\n\n  /**\n   * Async version of {@link GLTFExporter#parse}.\n   *\n   * @param {Scene|Array<Scene>} input - A scene or an array of scenes.\n   * @param {GLTFExporter~Options} options - options.\n   * @return {Promise<ArrayBuffer|string>} A Promise that resolved with the exported glTF data.\n   */\n  parseAsync(input, options) {\n    const scope = this;\n    return new Promise(function (resolve, reject) {\n      scope.parse(input, resolve, reject, options);\n    });\n  }\n}\n\n//------------------------------------------------------------------------------\n// Constants\n//------------------------------------------------------------------------------\n\nconst WEBGL_CONSTANTS = {\n  POINTS: 0x0000,\n  LINES: 0x0001,\n  LINE_LOOP: 0x0002,\n  LINE_STRIP: 0x0003,\n  TRIANGLES: 0x0004,\n  TRIANGLE_STRIP: 0x0005,\n  TRIANGLE_FAN: 0x0006,\n  BYTE: 0x1400,\n  UNSIGNED_BYTE: 0x1401,\n  SHORT: 0x1402,\n  UNSIGNED_SHORT: 0x1403,\n  INT: 0x1404,\n  UNSIGNED_INT: 0x1405,\n  FLOAT: 0x1406,\n  ARRAY_BUFFER: 0x8892,\n  ELEMENT_ARRAY_BUFFER: 0x8893,\n  NEAREST: 0x2600,\n  LINEAR: 0x2601,\n  NEAREST_MIPMAP_NEAREST: 0x2700,\n  LINEAR_MIPMAP_NEAREST: 0x2701,\n  NEAREST_MIPMAP_LINEAR: 0x2702,\n  LINEAR_MIPMAP_LINEAR: 0x2703,\n  CLAMP_TO_EDGE: 33071,\n  MIRRORED_REPEAT: 33648,\n  REPEAT: 10497\n};\nconst KHR_MESH_QUANTIZATION = 'KHR_mesh_quantization';\nconst THREE_TO_WEBGL = {};\nTHREE_TO_WEBGL[NearestFilter] = WEBGL_CONSTANTS.NEAREST;\nTHREE_TO_WEBGL[NearestMipmapNearestFilter] = WEBGL_CONSTANTS.NEAREST_MIPMAP_NEAREST;\nTHREE_TO_WEBGL[NearestMipmapLinearFilter] = WEBGL_CONSTANTS.NEAREST_MIPMAP_LINEAR;\nTHREE_TO_WEBGL[LinearFilter] = WEBGL_CONSTANTS.LINEAR;\nTHREE_TO_WEBGL[LinearMipmapNearestFilter] = WEBGL_CONSTANTS.LINEAR_MIPMAP_NEAREST;\nTHREE_TO_WEBGL[LinearMipmapLinearFilter] = WEBGL_CONSTANTS.LINEAR_MIPMAP_LINEAR;\nTHREE_TO_WEBGL[ClampToEdgeWrapping] = WEBGL_CONSTANTS.CLAMP_TO_EDGE;\nTHREE_TO_WEBGL[RepeatWrapping] = WEBGL_CONSTANTS.REPEAT;\nTHREE_TO_WEBGL[MirroredRepeatWrapping] = WEBGL_CONSTANTS.MIRRORED_REPEAT;\nconst PATH_PROPERTIES = {\n  scale: 'scale',\n  position: 'translation',\n  quaternion: 'rotation',\n  morphTargetInfluences: 'weights'\n};\nconst DEFAULT_SPECULAR_COLOR = new Color();\n\n// GLB constants\n// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#glb-file-format-specification\n\nconst GLB_HEADER_BYTES = 12;\nconst GLB_HEADER_MAGIC = 0x46546C67;\nconst GLB_VERSION = 2;\nconst GLB_CHUNK_PREFIX_BYTES = 8;\nconst GLB_CHUNK_TYPE_JSON = 0x4E4F534A;\nconst GLB_CHUNK_TYPE_BIN = 0x004E4942;\n\n//------------------------------------------------------------------------------\n// Utility functions\n//------------------------------------------------------------------------------\n\n/**\n * Compare two arrays\n *\n * @private\n * @param {Array} array1 Array 1 to compare\n * @param {Array} array2 Array 2 to compare\n * @return {boolean}        Returns true if both arrays are equal\n */\nfunction equalArray(array1, array2) {\n  return array1.length === array2.length && array1.every(function (element, index) {\n    return element === array2[index];\n  });\n}\n\n/**\n * Converts a string to an ArrayBuffer.\n *\n * @private\n * @param {string} text\n * @return {ArrayBuffer}\n */\nfunction stringToArrayBuffer(text) {\n  return new TextEncoder().encode(text).buffer;\n}\n\n/**\n * Is identity matrix\n *\n * @private\n * @param {Matrix4} matrix\n * @returns {boolean} Returns true, if parameter is identity matrix\n */\nfunction isIdentityMatrix(matrix) {\n  return equalArray(matrix.elements, [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\n}\n\n/**\n * Get the min and max vectors from the given attribute\n *\n * @private\n * @param {BufferAttribute} attribute Attribute to find the min/max in range from start to start + count\n * @param {number} start Start index\n * @param {number} count Range to cover\n * @return {Object} Object containing the `min` and `max` values (As an array of attribute.itemSize components)\n */\nfunction getMinMax(attribute, start, count) {\n  const output = {\n    min: new Array(attribute.itemSize).fill(Number.POSITIVE_INFINITY),\n    max: new Array(attribute.itemSize).fill(Number.NEGATIVE_INFINITY)\n  };\n  for (let i = start; i < start + count; i++) {\n    for (let a = 0; a < attribute.itemSize; a++) {\n      let value;\n      if (attribute.itemSize > 4) {\n        // no support for interleaved data for itemSize > 4\n\n        value = attribute.array[i * attribute.itemSize + a];\n      } else {\n        if (a === 0) value = attribute.getX(i);else if (a === 1) value = attribute.getY(i);else if (a === 2) value = attribute.getZ(i);else if (a === 3) value = attribute.getW(i);\n        if (attribute.normalized === true) {\n          value = MathUtils.normalize(value, attribute.array);\n        }\n      }\n      output.min[a] = Math.min(output.min[a], value);\n      output.max[a] = Math.max(output.max[a], value);\n    }\n  }\n  return output;\n}\n\n/**\n * Get the required size + padding for a buffer, rounded to the next 4-byte boundary.\n * https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#data-alignment\n *\n * @private\n * @param {number} bufferSize The size the original buffer. Should be an integer.\n * @returns {number} new buffer size with required padding as an integer.\n *\n */\nfunction getPaddedBufferSize(bufferSize) {\n  return Math.ceil(bufferSize / 4) * 4;\n}\n\n/**\n * Returns a buffer aligned to 4-byte boundary.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer Buffer to pad\n * @param {number} [paddingByte=0] Should be an integer\n * @returns {ArrayBuffer} The same buffer if it's already aligned to 4-byte boundary or a new buffer\n */\nfunction getPaddedArrayBuffer(arrayBuffer, paddingByte = 0) {\n  const paddedLength = getPaddedBufferSize(arrayBuffer.byteLength);\n  if (paddedLength !== arrayBuffer.byteLength) {\n    const array = new Uint8Array(paddedLength);\n    array.set(new Uint8Array(arrayBuffer));\n    if (paddingByte !== 0) {\n      for (let i = arrayBuffer.byteLength; i < paddedLength; i++) {\n        array[i] = paddingByte;\n      }\n    }\n    return array.buffer;\n  }\n  return arrayBuffer;\n}\nfunction getCanvas() {\n  if (typeof document === 'undefined' && typeof OffscreenCanvas !== 'undefined') {\n    return new OffscreenCanvas(1, 1);\n  }\n  return document.createElement('canvas');\n}\nfunction getToBlobPromise(canvas, mimeType) {\n  if (canvas.toBlob !== undefined) {\n    return new Promise(resolve => canvas.toBlob(resolve, mimeType));\n  }\n  let quality;\n\n  // Blink's implementation of convertToBlob seems to default to a quality level of 100%\n  // Use the Blink default quality levels of toBlob instead so that file sizes are comparable.\n  if (mimeType === 'image/jpeg') {\n    quality = 0.92;\n  } else if (mimeType === 'image/webp') {\n    quality = 0.8;\n  }\n  return canvas.convertToBlob({\n    type: mimeType,\n    quality: quality\n  });\n}\n\n/**\n * Writer\n *\n * @private\n */\nclass GLTFWriter {\n  constructor() {\n    this.plugins = [];\n    this.options = {};\n    this.pending = [];\n    this.buffers = [];\n    this.byteOffset = 0;\n    this.buffers = [];\n    this.nodeMap = new Map();\n    this.skins = [];\n    this.extensionsUsed = {};\n    this.extensionsRequired = {};\n    this.uids = new Map();\n    this.uid = 0;\n    this.json = {\n      asset: {\n        version: '2.0',\n        generator: 'THREE.GLTFExporter r' + REVISION\n      }\n    };\n    this.cache = {\n      meshes: new Map(),\n      attributes: new Map(),\n      attributesNormalized: new Map(),\n      materials: new Map(),\n      textures: new Map(),\n      images: new Map()\n    };\n    this.textureUtils = null;\n  }\n  setPlugins(plugins) {\n    this.plugins = plugins;\n  }\n  setTextureUtils(utils) {\n    this.textureUtils = utils;\n  }\n\n  /**\n   * Parse scenes and generate GLTF output\n   *\n   * @param {Scene|Array<Scene>} input Scene or Array of THREE.Scenes\n   * @param {Function} onDone Callback on completed\n   * @param {Object} options options\n   */\n  async writeAsync(input, onDone, options = {}) {\n    this.options = Object.assign({\n      // default options\n      binary: false,\n      trs: false,\n      onlyVisible: true,\n      maxTextureSize: Infinity,\n      animations: [],\n      includeCustomExtensions: false\n    }, options);\n    if (this.options.animations.length > 0) {\n      // Only TRS properties, and not matrices, may be targeted by animation.\n      this.options.trs = true;\n    }\n    await this.processInputAsync(input);\n    await Promise.all(this.pending);\n    const writer = this;\n    const buffers = writer.buffers;\n    const json = writer.json;\n    options = writer.options;\n    const extensionsUsed = writer.extensionsUsed;\n    const extensionsRequired = writer.extensionsRequired;\n\n    // Merge buffers.\n    const blob = new Blob(buffers, {\n      type: 'application/octet-stream'\n    });\n\n    // Declare extensions.\n    const extensionsUsedList = Object.keys(extensionsUsed);\n    const extensionsRequiredList = Object.keys(extensionsRequired);\n    if (extensionsUsedList.length > 0) json.extensionsUsed = extensionsUsedList;\n    if (extensionsRequiredList.length > 0) json.extensionsRequired = extensionsRequiredList;\n\n    // Update bytelength of the single buffer.\n    if (json.buffers && json.buffers.length > 0) json.buffers[0].byteLength = blob.size;\n    if (options.binary === true) {\n      // https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#glb-file-format-specification\n\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(blob);\n      reader.onloadend = function () {\n        // Binary chunk.\n        const binaryChunk = getPaddedArrayBuffer(reader.result);\n        const binaryChunkPrefix = new DataView(new ArrayBuffer(GLB_CHUNK_PREFIX_BYTES));\n        binaryChunkPrefix.setUint32(0, binaryChunk.byteLength, true);\n        binaryChunkPrefix.setUint32(4, GLB_CHUNK_TYPE_BIN, true);\n\n        // JSON chunk.\n        const jsonChunk = getPaddedArrayBuffer(stringToArrayBuffer(JSON.stringify(json)), 0x20);\n        const jsonChunkPrefix = new DataView(new ArrayBuffer(GLB_CHUNK_PREFIX_BYTES));\n        jsonChunkPrefix.setUint32(0, jsonChunk.byteLength, true);\n        jsonChunkPrefix.setUint32(4, GLB_CHUNK_TYPE_JSON, true);\n\n        // GLB header.\n        const header = new ArrayBuffer(GLB_HEADER_BYTES);\n        const headerView = new DataView(header);\n        headerView.setUint32(0, GLB_HEADER_MAGIC, true);\n        headerView.setUint32(4, GLB_VERSION, true);\n        const totalByteLength = GLB_HEADER_BYTES + jsonChunkPrefix.byteLength + jsonChunk.byteLength + binaryChunkPrefix.byteLength + binaryChunk.byteLength;\n        headerView.setUint32(8, totalByteLength, true);\n        const glbBlob = new Blob([header, jsonChunkPrefix, jsonChunk, binaryChunkPrefix, binaryChunk], {\n          type: 'application/octet-stream'\n        });\n        const glbReader = new FileReader();\n        glbReader.readAsArrayBuffer(glbBlob);\n        glbReader.onloadend = function () {\n          onDone(glbReader.result);\n        };\n      };\n    } else {\n      if (json.buffers && json.buffers.length > 0) {\n        const reader = new FileReader();\n        reader.readAsDataURL(blob);\n        reader.onloadend = function () {\n          const base64data = reader.result;\n          json.buffers[0].uri = base64data;\n          onDone(json);\n        };\n      } else {\n        onDone(json);\n      }\n    }\n  }\n\n  /**\n   * Serializes a userData.\n   *\n   * @param {THREE.Object3D|THREE.Material} object\n   * @param {Object} objectDef\n   */\n  serializeUserData(object, objectDef) {\n    if (Object.keys(object.userData).length === 0) return;\n    const options = this.options;\n    const extensionsUsed = this.extensionsUsed;\n    try {\n      const json = JSON.parse(JSON.stringify(object.userData));\n      if (options.includeCustomExtensions && json.gltfExtensions) {\n        if (objectDef.extensions === undefined) objectDef.extensions = {};\n        for (const extensionName in json.gltfExtensions) {\n          objectDef.extensions[extensionName] = json.gltfExtensions[extensionName];\n          extensionsUsed[extensionName] = true;\n        }\n        delete json.gltfExtensions;\n      }\n      if (Object.keys(json).length > 0) objectDef.extras = json;\n    } catch (error) {\n      console.warn('THREE.GLTFExporter: userData of \\'' + object.name + '\\' ' + 'won\\'t be serialized because of JSON.stringify error - ' + error.message);\n    }\n  }\n\n  /**\n   * Returns ids for buffer attributes.\n   *\n   * @param {Object} attribute\n   * @param {boolean} [isRelativeCopy=false]\n   * @return {number} An integer\n   */\n  getUID(attribute, isRelativeCopy = false) {\n    if (this.uids.has(attribute) === false) {\n      const uids = new Map();\n      uids.set(true, this.uid++);\n      uids.set(false, this.uid++);\n      this.uids.set(attribute, uids);\n    }\n    const uids = this.uids.get(attribute);\n    return uids.get(isRelativeCopy);\n  }\n\n  /**\n   * Checks if normal attribute values are normalized.\n   *\n   * @param {BufferAttribute} normal\n   * @returns {boolean}\n   */\n  isNormalizedNormalAttribute(normal) {\n    const cache = this.cache;\n    if (cache.attributesNormalized.has(normal)) return false;\n    const v = new Vector3();\n    for (let i = 0, il = normal.count; i < il; i++) {\n      // 0.0005 is from glTF-validator\n      if (Math.abs(v.fromBufferAttribute(normal, i).length() - 1.0) > 0.0005) return false;\n    }\n    return true;\n  }\n\n  /**\n   * Creates normalized normal buffer attribute.\n   *\n   * @param {BufferAttribute} normal\n   * @returns {BufferAttribute}\n   *\n   */\n  createNormalizedNormalAttribute(normal) {\n    const cache = this.cache;\n    if (cache.attributesNormalized.has(normal)) return cache.attributesNormalized.get(normal);\n    const attribute = normal.clone();\n    const v = new Vector3();\n    for (let i = 0, il = attribute.count; i < il; i++) {\n      v.fromBufferAttribute(attribute, i);\n      if (v.x === 0 && v.y === 0 && v.z === 0) {\n        // if values can't be normalized set (1, 0, 0)\n        v.setX(1.0);\n      } else {\n        v.normalize();\n      }\n      attribute.setXYZ(i, v.x, v.y, v.z);\n    }\n    cache.attributesNormalized.set(normal, attribute);\n    return attribute;\n  }\n\n  /**\n   * Applies a texture transform, if present, to the map definition. Requires\n   * the KHR_texture_transform extension.\n   *\n   * @param {Object} mapDef\n   * @param {THREE.Texture} texture\n   */\n  applyTextureTransform(mapDef, texture) {\n    let didTransform = false;\n    const transformDef = {};\n    if (texture.offset.x !== 0 || texture.offset.y !== 0) {\n      transformDef.offset = texture.offset.toArray();\n      didTransform = true;\n    }\n    if (texture.rotation !== 0) {\n      transformDef.rotation = texture.rotation;\n      didTransform = true;\n    }\n    if (texture.repeat.x !== 1 || texture.repeat.y !== 1) {\n      transformDef.scale = texture.repeat.toArray();\n      didTransform = true;\n    }\n    if (didTransform) {\n      mapDef.extensions = mapDef.extensions || {};\n      mapDef.extensions['KHR_texture_transform'] = transformDef;\n      this.extensionsUsed['KHR_texture_transform'] = true;\n    }\n  }\n  async buildMetalRoughTextureAsync(metalnessMap, roughnessMap) {\n    if (metalnessMap === roughnessMap) return metalnessMap;\n    function getEncodingConversion(map) {\n      if (map.colorSpace === SRGBColorSpace) {\n        return function SRGBToLinear(c) {\n          return c < 0.04045 ? c * 0.0773993808 : Math.pow(c * 0.9478672986 + 0.0521327014, 2.4);\n        };\n      }\n      return function LinearToLinear(c) {\n        return c;\n      };\n    }\n    if (metalnessMap instanceof CompressedTexture) {\n      metalnessMap = await this.decompressTextureAsync(metalnessMap);\n    }\n    if (roughnessMap instanceof CompressedTexture) {\n      roughnessMap = await this.decompressTextureAsync(roughnessMap);\n    }\n    const metalness = metalnessMap ? metalnessMap.image : null;\n    const roughness = roughnessMap ? roughnessMap.image : null;\n    const width = Math.max(metalness ? metalness.width : 0, roughness ? roughness.width : 0);\n    const height = Math.max(metalness ? metalness.height : 0, roughness ? roughness.height : 0);\n    const canvas = getCanvas();\n    canvas.width = width;\n    canvas.height = height;\n    const context = canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    context.fillStyle = '#00ffff';\n    context.fillRect(0, 0, width, height);\n    const composite = context.getImageData(0, 0, width, height);\n    if (metalness) {\n      context.drawImage(metalness, 0, 0, width, height);\n      const convert = getEncodingConversion(metalnessMap);\n      const data = context.getImageData(0, 0, width, height).data;\n      for (let i = 2; i < data.length; i += 4) {\n        composite.data[i] = convert(data[i] / 256) * 256;\n      }\n    }\n    if (roughness) {\n      context.drawImage(roughness, 0, 0, width, height);\n      const convert = getEncodingConversion(roughnessMap);\n      const data = context.getImageData(0, 0, width, height).data;\n      for (let i = 1; i < data.length; i += 4) {\n        composite.data[i] = convert(data[i] / 256) * 256;\n      }\n    }\n    context.putImageData(composite, 0, 0);\n\n    //\n\n    const reference = metalnessMap || roughnessMap;\n    const texture = reference.clone();\n    texture.source = new Source(canvas);\n    texture.colorSpace = NoColorSpace;\n    texture.channel = (metalnessMap || roughnessMap).channel;\n    if (metalnessMap && roughnessMap && metalnessMap.channel !== roughnessMap.channel) {\n      console.warn('THREE.GLTFExporter: UV channels for metalnessMap and roughnessMap textures must match.');\n    }\n    console.warn('THREE.GLTFExporter: Merged metalnessMap and roughnessMap textures.');\n    return texture;\n  }\n  async decompressTextureAsync(texture, maxTextureSize = Infinity) {\n    if (this.textureUtils === null) {\n      throw new Error('THREE.GLTFExporter: setTextureUtils() must be called to process compressed textures.');\n    }\n    return await this.textureUtils.decompress(texture, maxTextureSize);\n  }\n\n  /**\n   * Process a buffer to append to the default one.\n   * @param {ArrayBuffer} buffer\n   * @return {0}\n   */\n  processBuffer(buffer) {\n    const json = this.json;\n    const buffers = this.buffers;\n    if (!json.buffers) json.buffers = [{\n      byteLength: 0\n    }];\n\n    // All buffers are merged before export.\n    buffers.push(buffer);\n    return 0;\n  }\n\n  /**\n   * Process and generate a BufferView\n   * @param {BufferAttribute} attribute\n   * @param {number} componentType\n   * @param {number} start\n   * @param {number} count\n   * @param {number} [target] Target usage of the BufferView\n   * @return {Object}\n   */\n  processBufferView(attribute, componentType, start, count, target) {\n    const json = this.json;\n    if (!json.bufferViews) json.bufferViews = [];\n\n    // Create a new dataview and dump the attribute's array into it\n\n    let componentSize;\n    switch (componentType) {\n      case WEBGL_CONSTANTS.BYTE:\n      case WEBGL_CONSTANTS.UNSIGNED_BYTE:\n        componentSize = 1;\n        break;\n      case WEBGL_CONSTANTS.SHORT:\n      case WEBGL_CONSTANTS.UNSIGNED_SHORT:\n        componentSize = 2;\n        break;\n      default:\n        componentSize = 4;\n    }\n    let byteStride = attribute.itemSize * componentSize;\n    if (target === WEBGL_CONSTANTS.ARRAY_BUFFER) {\n      // Each element of a vertex attribute MUST be aligned to 4-byte boundaries\n      // inside a bufferView\n      byteStride = Math.ceil(byteStride / 4) * 4;\n    }\n    const byteLength = getPaddedBufferSize(count * byteStride);\n    const dataView = new DataView(new ArrayBuffer(byteLength));\n    let offset = 0;\n    for (let i = start; i < start + count; i++) {\n      for (let a = 0; a < attribute.itemSize; a++) {\n        let value;\n        if (attribute.itemSize > 4) {\n          // no support for interleaved data for itemSize > 4\n\n          value = attribute.array[i * attribute.itemSize + a];\n        } else {\n          if (a === 0) value = attribute.getX(i);else if (a === 1) value = attribute.getY(i);else if (a === 2) value = attribute.getZ(i);else if (a === 3) value = attribute.getW(i);\n          if (attribute.normalized === true) {\n            value = MathUtils.normalize(value, attribute.array);\n          }\n        }\n        if (componentType === WEBGL_CONSTANTS.FLOAT) {\n          dataView.setFloat32(offset, value, true);\n        } else if (componentType === WEBGL_CONSTANTS.INT) {\n          dataView.setInt32(offset, value, true);\n        } else if (componentType === WEBGL_CONSTANTS.UNSIGNED_INT) {\n          dataView.setUint32(offset, value, true);\n        } else if (componentType === WEBGL_CONSTANTS.SHORT) {\n          dataView.setInt16(offset, value, true);\n        } else if (componentType === WEBGL_CONSTANTS.UNSIGNED_SHORT) {\n          dataView.setUint16(offset, value, true);\n        } else if (componentType === WEBGL_CONSTANTS.BYTE) {\n          dataView.setInt8(offset, value);\n        } else if (componentType === WEBGL_CONSTANTS.UNSIGNED_BYTE) {\n          dataView.setUint8(offset, value);\n        }\n        offset += componentSize;\n      }\n      if (offset % byteStride !== 0) {\n        offset += byteStride - offset % byteStride;\n      }\n    }\n    const bufferViewDef = {\n      buffer: this.processBuffer(dataView.buffer),\n      byteOffset: this.byteOffset,\n      byteLength: byteLength\n    };\n    if (target !== undefined) bufferViewDef.target = target;\n    if (target === WEBGL_CONSTANTS.ARRAY_BUFFER) {\n      // Only define byteStride for vertex attributes.\n      bufferViewDef.byteStride = byteStride;\n    }\n    this.byteOffset += byteLength;\n    json.bufferViews.push(bufferViewDef);\n\n    // @TODO Merge bufferViews where possible.\n    const output = {\n      id: json.bufferViews.length - 1,\n      byteLength: 0\n    };\n    return output;\n  }\n\n  /**\n   * Process and generate a BufferView from an image Blob.\n   * @param {Blob} blob\n   * @return {Promise<number>} An integer\n   */\n  processBufferViewImage(blob) {\n    const writer = this;\n    const json = writer.json;\n    if (!json.bufferViews) json.bufferViews = [];\n    return new Promise(function (resolve) {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(blob);\n      reader.onloadend = function () {\n        const buffer = getPaddedArrayBuffer(reader.result);\n        const bufferViewDef = {\n          buffer: writer.processBuffer(buffer),\n          byteOffset: writer.byteOffset,\n          byteLength: buffer.byteLength\n        };\n        writer.byteOffset += buffer.byteLength;\n        resolve(json.bufferViews.push(bufferViewDef) - 1);\n      };\n    });\n  }\n\n  /**\n   * Process attribute to generate an accessor\n   * @param {BufferAttribute} attribute Attribute to process\n   * @param {?BufferGeometry} [geometry] Geometry used for truncated draw range\n   * @param {number} [start=0]\n   * @param {number} [count=Infinity]\n   * @return {?number} Index of the processed accessor on the \"accessors\" array\n   */\n  processAccessor(attribute, geometry, start, count) {\n    const json = this.json;\n    const types = {\n      1: 'SCALAR',\n      2: 'VEC2',\n      3: 'VEC3',\n      4: 'VEC4',\n      9: 'MAT3',\n      16: 'MAT4'\n    };\n    let componentType;\n\n    // Detect the component type of the attribute array\n    if (attribute.array.constructor === Float32Array) {\n      componentType = WEBGL_CONSTANTS.FLOAT;\n    } else if (attribute.array.constructor === Int32Array) {\n      componentType = WEBGL_CONSTANTS.INT;\n    } else if (attribute.array.constructor === Uint32Array) {\n      componentType = WEBGL_CONSTANTS.UNSIGNED_INT;\n    } else if (attribute.array.constructor === Int16Array) {\n      componentType = WEBGL_CONSTANTS.SHORT;\n    } else if (attribute.array.constructor === Uint16Array) {\n      componentType = WEBGL_CONSTANTS.UNSIGNED_SHORT;\n    } else if (attribute.array.constructor === Int8Array) {\n      componentType = WEBGL_CONSTANTS.BYTE;\n    } else if (attribute.array.constructor === Uint8Array) {\n      componentType = WEBGL_CONSTANTS.UNSIGNED_BYTE;\n    } else {\n      throw new Error('THREE.GLTFExporter: Unsupported bufferAttribute component type: ' + attribute.array.constructor.name);\n    }\n    if (start === undefined) start = 0;\n    if (count === undefined || count === Infinity) count = attribute.count;\n\n    // Skip creating an accessor if the attribute doesn't have data to export\n    if (count === 0) return null;\n    const minMax = getMinMax(attribute, start, count);\n    let bufferViewTarget;\n\n    // If geometry isn't provided, don't infer the target usage of the bufferView. For\n    // animation samplers, target must not be set.\n    if (geometry !== undefined) {\n      bufferViewTarget = attribute === geometry.index ? WEBGL_CONSTANTS.ELEMENT_ARRAY_BUFFER : WEBGL_CONSTANTS.ARRAY_BUFFER;\n    }\n    const bufferView = this.processBufferView(attribute, componentType, start, count, bufferViewTarget);\n    const accessorDef = {\n      bufferView: bufferView.id,\n      byteOffset: bufferView.byteOffset,\n      componentType: componentType,\n      count: count,\n      max: minMax.max,\n      min: minMax.min,\n      type: types[attribute.itemSize]\n    };\n    if (attribute.normalized === true) accessorDef.normalized = true;\n    if (!json.accessors) json.accessors = [];\n    return json.accessors.push(accessorDef) - 1;\n  }\n\n  /**\n   * Process image\n   * @param {Image} image to process\n   * @param {number} format Identifier of the format (RGBAFormat)\n   * @param {boolean} flipY before writing out the image\n   * @param {string} mimeType export format\n   * @return {number}     Index of the processed texture in the \"images\" array\n   */\n  processImage(image, format, flipY, mimeType = 'image/png') {\n    if (image !== null) {\n      const writer = this;\n      const cache = writer.cache;\n      const json = writer.json;\n      const options = writer.options;\n      const pending = writer.pending;\n      if (!cache.images.has(image)) cache.images.set(image, {});\n      const cachedImages = cache.images.get(image);\n      const key = mimeType + ':flipY/' + flipY.toString();\n      if (cachedImages[key] !== undefined) return cachedImages[key];\n      if (!json.images) json.images = [];\n      const imageDef = {\n        mimeType: mimeType\n      };\n      const canvas = getCanvas();\n      canvas.width = Math.min(image.width, options.maxTextureSize);\n      canvas.height = Math.min(image.height, options.maxTextureSize);\n      const ctx = canvas.getContext('2d', {\n        willReadFrequently: true\n      });\n      if (flipY === true) {\n        ctx.translate(0, canvas.height);\n        ctx.scale(1, -1);\n      }\n      if (image.data !== undefined) {\n        // THREE.DataTexture\n\n        if (format !== RGBAFormat) {\n          console.error('GLTFExporter: Only RGBAFormat is supported.', format);\n        }\n        if (image.width > options.maxTextureSize || image.height > options.maxTextureSize) {\n          console.warn('GLTFExporter: Image size is bigger than maxTextureSize', image);\n        }\n        const data = new Uint8ClampedArray(image.height * image.width * 4);\n        for (let i = 0; i < data.length; i += 4) {\n          data[i + 0] = image.data[i + 0];\n          data[i + 1] = image.data[i + 1];\n          data[i + 2] = image.data[i + 2];\n          data[i + 3] = image.data[i + 3];\n        }\n        ctx.putImageData(new ImageData(data, image.width, image.height), 0, 0);\n      } else {\n        if (typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement || typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement || typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap || typeof OffscreenCanvas !== 'undefined' && image instanceof OffscreenCanvas) {\n          ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n        } else {\n          throw new Error('THREE.GLTFExporter: Invalid image type. Use HTMLImageElement, HTMLCanvasElement, ImageBitmap or OffscreenCanvas.');\n        }\n      }\n      if (options.binary === true) {\n        pending.push(getToBlobPromise(canvas, mimeType).then(blob => writer.processBufferViewImage(blob)).then(bufferViewIndex => {\n          imageDef.bufferView = bufferViewIndex;\n        }));\n      } else {\n        imageDef.uri = ImageUtils.getDataURL(canvas, mimeType);\n      }\n      const index = json.images.push(imageDef) - 1;\n      cachedImages[key] = index;\n      return index;\n    } else {\n      throw new Error('THREE.GLTFExporter: No valid image data found. Unable to process texture.');\n    }\n  }\n\n  /**\n   * Process sampler\n   * @param {Texture} map Texture to process\n   * @return {number}      Index of the processed texture in the \"samplers\" array\n   */\n  processSampler(map) {\n    const json = this.json;\n    if (!json.samplers) json.samplers = [];\n    const samplerDef = {\n      magFilter: THREE_TO_WEBGL[map.magFilter],\n      minFilter: THREE_TO_WEBGL[map.minFilter],\n      wrapS: THREE_TO_WEBGL[map.wrapS],\n      wrapT: THREE_TO_WEBGL[map.wrapT]\n    };\n    return json.samplers.push(samplerDef) - 1;\n  }\n\n  /**\n   * Process texture\n   * @param {Texture} map Map to process\n   * @return {Promise<number>} Index of the processed texture in the \"textures\" array\n   */\n  async processTextureAsync(map) {\n    const writer = this;\n    const options = writer.options;\n    const cache = this.cache;\n    const json = this.json;\n    if (cache.textures.has(map)) return cache.textures.get(map);\n    if (!json.textures) json.textures = [];\n\n    // make non-readable textures (e.g. CompressedTexture) readable by blitting them into a new texture\n    if (map instanceof CompressedTexture) {\n      map = await this.decompressTextureAsync(map, options.maxTextureSize);\n    }\n    let mimeType = map.userData.mimeType;\n    if (mimeType === 'image/webp') mimeType = 'image/png';\n    const textureDef = {\n      sampler: this.processSampler(map),\n      source: this.processImage(map.image, map.format, map.flipY, mimeType)\n    };\n    if (map.name) textureDef.name = map.name;\n    await this._invokeAllAsync(async function (ext) {\n      ext.writeTexture && (await ext.writeTexture(map, textureDef));\n    });\n    const index = json.textures.push(textureDef) - 1;\n    cache.textures.set(map, index);\n    return index;\n  }\n\n  /**\n   * Process material\n   * @param {THREE.Material} material Material to process\n   * @return {Promise<number|null>} Index of the processed material in the \"materials\" array\n   */\n  async processMaterialAsync(material) {\n    const cache = this.cache;\n    const json = this.json;\n    if (cache.materials.has(material)) return cache.materials.get(material);\n    if (material.isShaderMaterial) {\n      console.warn('GLTFExporter: THREE.ShaderMaterial not supported.');\n      return null;\n    }\n    if (!json.materials) json.materials = [];\n\n    // @QUESTION Should we avoid including any attribute that has the default value?\n    const materialDef = {\n      pbrMetallicRoughness: {}\n    };\n    if (material.isMeshStandardMaterial !== true && material.isMeshBasicMaterial !== true) {\n      console.warn('GLTFExporter: Use MeshStandardMaterial or MeshBasicMaterial for best results.');\n    }\n\n    // pbrMetallicRoughness.baseColorFactor\n    const color = material.color.toArray().concat([material.opacity]);\n    if (!equalArray(color, [1, 1, 1, 1])) {\n      materialDef.pbrMetallicRoughness.baseColorFactor = color;\n    }\n    if (material.isMeshStandardMaterial) {\n      materialDef.pbrMetallicRoughness.metallicFactor = material.metalness;\n      materialDef.pbrMetallicRoughness.roughnessFactor = material.roughness;\n    } else {\n      materialDef.pbrMetallicRoughness.metallicFactor = 0;\n      materialDef.pbrMetallicRoughness.roughnessFactor = 1;\n    }\n\n    // pbrMetallicRoughness.metallicRoughnessTexture\n    if (material.metalnessMap || material.roughnessMap) {\n      const metalRoughTexture = await this.buildMetalRoughTextureAsync(material.metalnessMap, material.roughnessMap);\n      const metalRoughMapDef = {\n        index: await this.processTextureAsync(metalRoughTexture),\n        texCoord: metalRoughTexture.channel\n      };\n      this.applyTextureTransform(metalRoughMapDef, metalRoughTexture);\n      materialDef.pbrMetallicRoughness.metallicRoughnessTexture = metalRoughMapDef;\n    }\n\n    // pbrMetallicRoughness.baseColorTexture\n    if (material.map) {\n      const baseColorMapDef = {\n        index: await this.processTextureAsync(material.map),\n        texCoord: material.map.channel\n      };\n      this.applyTextureTransform(baseColorMapDef, material.map);\n      materialDef.pbrMetallicRoughness.baseColorTexture = baseColorMapDef;\n    }\n    if (material.emissive) {\n      const emissive = material.emissive;\n      const maxEmissiveComponent = Math.max(emissive.r, emissive.g, emissive.b);\n      if (maxEmissiveComponent > 0) {\n        materialDef.emissiveFactor = material.emissive.toArray();\n      }\n\n      // emissiveTexture\n      if (material.emissiveMap) {\n        const emissiveMapDef = {\n          index: await this.processTextureAsync(material.emissiveMap),\n          texCoord: material.emissiveMap.channel\n        };\n        this.applyTextureTransform(emissiveMapDef, material.emissiveMap);\n        materialDef.emissiveTexture = emissiveMapDef;\n      }\n    }\n\n    // normalTexture\n    if (material.normalMap) {\n      const normalMapDef = {\n        index: await this.processTextureAsync(material.normalMap),\n        texCoord: material.normalMap.channel\n      };\n      if (material.normalScale && material.normalScale.x !== 1) {\n        // glTF normal scale is univariate. Ignore `y`, which may be flipped.\n        // Context: https://github.com/mrdoob/three.js/issues/11438#issuecomment-507003995\n        normalMapDef.scale = material.normalScale.x;\n      }\n      this.applyTextureTransform(normalMapDef, material.normalMap);\n      materialDef.normalTexture = normalMapDef;\n    }\n\n    // occlusionTexture\n    if (material.aoMap) {\n      const occlusionMapDef = {\n        index: await this.processTextureAsync(material.aoMap),\n        texCoord: material.aoMap.channel\n      };\n      if (material.aoMapIntensity !== 1.0) {\n        occlusionMapDef.strength = material.aoMapIntensity;\n      }\n      this.applyTextureTransform(occlusionMapDef, material.aoMap);\n      materialDef.occlusionTexture = occlusionMapDef;\n    }\n\n    // alphaMode\n    if (material.transparent) {\n      materialDef.alphaMode = 'BLEND';\n    } else {\n      if (material.alphaTest > 0.0) {\n        materialDef.alphaMode = 'MASK';\n        materialDef.alphaCutoff = material.alphaTest;\n      }\n    }\n\n    // doubleSided\n    if (material.side === DoubleSide) materialDef.doubleSided = true;\n    if (material.name !== '') materialDef.name = material.name;\n    this.serializeUserData(material, materialDef);\n    await this._invokeAllAsync(async function (ext) {\n      ext.writeMaterialAsync && (await ext.writeMaterialAsync(material, materialDef));\n    });\n    const index = json.materials.push(materialDef) - 1;\n    cache.materials.set(material, index);\n    return index;\n  }\n\n  /**\n   * Process mesh\n   * @param {THREE.Mesh} mesh Mesh to process\n   * @return {Promise<number|null>} Index of the processed mesh in the \"meshes\" array\n   */\n  async processMeshAsync(mesh) {\n    const cache = this.cache;\n    const json = this.json;\n    const meshCacheKeyParts = [mesh.geometry.uuid];\n    if (Array.isArray(mesh.material)) {\n      for (let i = 0, l = mesh.material.length; i < l; i++) {\n        meshCacheKeyParts.push(mesh.material[i].uuid);\n      }\n    } else {\n      meshCacheKeyParts.push(mesh.material.uuid);\n    }\n    const meshCacheKey = meshCacheKeyParts.join(':');\n    if (cache.meshes.has(meshCacheKey)) return cache.meshes.get(meshCacheKey);\n    const geometry = mesh.geometry;\n    let mode;\n\n    // Use the correct mode\n    if (mesh.isLineSegments) {\n      mode = WEBGL_CONSTANTS.LINES;\n    } else if (mesh.isLineLoop) {\n      mode = WEBGL_CONSTANTS.LINE_LOOP;\n    } else if (mesh.isLine) {\n      mode = WEBGL_CONSTANTS.LINE_STRIP;\n    } else if (mesh.isPoints) {\n      mode = WEBGL_CONSTANTS.POINTS;\n    } else {\n      mode = mesh.material.wireframe ? WEBGL_CONSTANTS.LINES : WEBGL_CONSTANTS.TRIANGLES;\n    }\n    const meshDef = {};\n    const attributes = {};\n    const primitives = [];\n    const targets = [];\n\n    // Conversion between attributes names in threejs and gltf spec\n    const nameConversion = {\n      uv: 'TEXCOORD_0',\n      uv1: 'TEXCOORD_1',\n      uv2: 'TEXCOORD_2',\n      uv3: 'TEXCOORD_3',\n      color: 'COLOR_0',\n      skinWeight: 'WEIGHTS_0',\n      skinIndex: 'JOINTS_0'\n    };\n    const originalNormal = geometry.getAttribute('normal');\n    if (originalNormal !== undefined && !this.isNormalizedNormalAttribute(originalNormal)) {\n      console.warn('THREE.GLTFExporter: Creating normalized normal attribute from the non-normalized one.');\n      geometry.setAttribute('normal', this.createNormalizedNormalAttribute(originalNormal));\n    }\n\n    // @QUESTION Detect if .vertexColors = true?\n    // For every attribute create an accessor\n    let modifiedAttribute = null;\n    for (let attributeName in geometry.attributes) {\n      // Ignore morph target attributes, which are exported later.\n      if (attributeName.slice(0, 5) === 'morph') continue;\n      const attribute = geometry.attributes[attributeName];\n      attributeName = nameConversion[attributeName] || attributeName.toUpperCase();\n\n      // Prefix all geometry attributes except the ones specifically\n      // listed in the spec; non-spec attributes are considered custom.\n      const validVertexAttributes = /^(POSITION|NORMAL|TANGENT|TEXCOORD_\\d+|COLOR_\\d+|JOINTS_\\d+|WEIGHTS_\\d+)$/;\n      if (!validVertexAttributes.test(attributeName)) attributeName = '_' + attributeName;\n      if (cache.attributes.has(this.getUID(attribute))) {\n        attributes[attributeName] = cache.attributes.get(this.getUID(attribute));\n        continue;\n      }\n\n      // Enforce glTF vertex attribute requirements:\n      // - JOINTS_0 must be UNSIGNED_BYTE or UNSIGNED_SHORT\n      // - Only custom attributes may be INT or UNSIGNED_INT\n      modifiedAttribute = null;\n      const array = attribute.array;\n      if (attributeName === 'JOINTS_0' && !(array instanceof Uint16Array) && !(array instanceof Uint8Array)) {\n        console.warn('GLTFExporter: Attribute \"skinIndex\" converted to type UNSIGNED_SHORT.');\n        modifiedAttribute = new BufferAttribute(new Uint16Array(array), attribute.itemSize, attribute.normalized);\n      } else if ((array instanceof Uint32Array || array instanceof Int32Array) && !attributeName.startsWith('_')) {\n        console.warn(`GLTFExporter: Attribute \"${attributeName}\" converted to type FLOAT.`);\n        modifiedAttribute = GLTFExporter.Utils.toFloat32BufferAttribute(attribute);\n      }\n      const accessor = this.processAccessor(modifiedAttribute || attribute, geometry);\n      if (accessor !== null) {\n        if (!attributeName.startsWith('_')) {\n          this.detectMeshQuantization(attributeName, attribute);\n        }\n        attributes[attributeName] = accessor;\n        cache.attributes.set(this.getUID(attribute), accessor);\n      }\n    }\n    if (originalNormal !== undefined) geometry.setAttribute('normal', originalNormal);\n\n    // Skip if no exportable attributes found\n    if (Object.keys(attributes).length === 0) return null;\n\n    // Morph targets\n    if (mesh.morphTargetInfluences !== undefined && mesh.morphTargetInfluences.length > 0) {\n      const weights = [];\n      const targetNames = [];\n      const reverseDictionary = {};\n      if (mesh.morphTargetDictionary !== undefined) {\n        for (const key in mesh.morphTargetDictionary) {\n          reverseDictionary[mesh.morphTargetDictionary[key]] = key;\n        }\n      }\n      for (let i = 0; i < mesh.morphTargetInfluences.length; ++i) {\n        const target = {};\n        let warned = false;\n        for (const attributeName in geometry.morphAttributes) {\n          // glTF 2.0 morph supports only POSITION/NORMAL/TANGENT.\n          // Three.js doesn't support TANGENT yet.\n\n          if (attributeName !== 'position' && attributeName !== 'normal') {\n            if (!warned) {\n              console.warn('GLTFExporter: Only POSITION and NORMAL morph are supported.');\n              warned = true;\n            }\n            continue;\n          }\n          const attribute = geometry.morphAttributes[attributeName][i];\n          const gltfAttributeName = attributeName.toUpperCase();\n\n          // Three.js morph attribute has absolute values while the one of glTF has relative values.\n          //\n          // glTF 2.0 Specification:\n          // https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#morph-targets\n\n          const baseAttribute = geometry.attributes[attributeName];\n          if (cache.attributes.has(this.getUID(attribute, true))) {\n            target[gltfAttributeName] = cache.attributes.get(this.getUID(attribute, true));\n            continue;\n          }\n\n          // Clones attribute not to override\n          const relativeAttribute = attribute.clone();\n          if (!geometry.morphTargetsRelative) {\n            for (let j = 0, jl = attribute.count; j < jl; j++) {\n              for (let a = 0; a < attribute.itemSize; a++) {\n                if (a === 0) relativeAttribute.setX(j, attribute.getX(j) - baseAttribute.getX(j));\n                if (a === 1) relativeAttribute.setY(j, attribute.getY(j) - baseAttribute.getY(j));\n                if (a === 2) relativeAttribute.setZ(j, attribute.getZ(j) - baseAttribute.getZ(j));\n                if (a === 3) relativeAttribute.setW(j, attribute.getW(j) - baseAttribute.getW(j));\n              }\n            }\n          }\n          target[gltfAttributeName] = this.processAccessor(relativeAttribute, geometry);\n          cache.attributes.set(this.getUID(baseAttribute, true), target[gltfAttributeName]);\n        }\n        targets.push(target);\n        weights.push(mesh.morphTargetInfluences[i]);\n        if (mesh.morphTargetDictionary !== undefined) targetNames.push(reverseDictionary[i]);\n      }\n      meshDef.weights = weights;\n      if (targetNames.length > 0) {\n        meshDef.extras = {};\n        meshDef.extras.targetNames = targetNames;\n      }\n    }\n    const isMultiMaterial = Array.isArray(mesh.material);\n    if (isMultiMaterial && geometry.groups.length === 0) return null;\n    let didForceIndices = false;\n    if (isMultiMaterial && geometry.index === null) {\n      const indices = [];\n      for (let i = 0, il = geometry.attributes.position.count; i < il; i++) {\n        indices[i] = i;\n      }\n      geometry.setIndex(indices);\n      didForceIndices = true;\n    }\n    const materials = isMultiMaterial ? mesh.material : [mesh.material];\n    const groups = isMultiMaterial ? geometry.groups : [{\n      materialIndex: 0,\n      start: undefined,\n      count: undefined\n    }];\n    for (let i = 0, il = groups.length; i < il; i++) {\n      const primitive = {\n        mode: mode,\n        attributes: attributes\n      };\n      this.serializeUserData(geometry, primitive);\n      if (targets.length > 0) primitive.targets = targets;\n      if (geometry.index !== null) {\n        let cacheKey = this.getUID(geometry.index);\n        if (groups[i].start !== undefined || groups[i].count !== undefined) {\n          cacheKey += ':' + groups[i].start + ':' + groups[i].count;\n        }\n        if (cache.attributes.has(cacheKey)) {\n          primitive.indices = cache.attributes.get(cacheKey);\n        } else {\n          primitive.indices = this.processAccessor(geometry.index, geometry, groups[i].start, groups[i].count);\n          cache.attributes.set(cacheKey, primitive.indices);\n        }\n        if (primitive.indices === null) delete primitive.indices;\n      }\n      const material = await this.processMaterialAsync(materials[groups[i].materialIndex]);\n      if (material !== null) primitive.material = material;\n      primitives.push(primitive);\n    }\n    if (didForceIndices === true) {\n      geometry.setIndex(null);\n    }\n    meshDef.primitives = primitives;\n    if (!json.meshes) json.meshes = [];\n    await this._invokeAllAsync(function (ext) {\n      ext.writeMesh && ext.writeMesh(mesh, meshDef);\n    });\n    const index = json.meshes.push(meshDef) - 1;\n    cache.meshes.set(meshCacheKey, index);\n    return index;\n  }\n\n  /**\n   * If a vertex attribute with a\n   * [non-standard data type](https://registry.khronos.org/glTF/specs/2.0/glTF-2.0.html#meshes-overview)\n   * is used, it is checked whether it is a valid data type according to the\n   * [KHR_mesh_quantization](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Khronos/KHR_mesh_quantization/README.md)\n   * extension.\n   * In this case the extension is automatically added to the list of used extensions.\n   *\n   * @param {string} attributeName\n   * @param {THREE.BufferAttribute} attribute\n   */\n  detectMeshQuantization(attributeName, attribute) {\n    if (this.extensionsUsed[KHR_MESH_QUANTIZATION]) return;\n    let attrType = undefined;\n    switch (attribute.array.constructor) {\n      case Int8Array:\n        attrType = 'byte';\n        break;\n      case Uint8Array:\n        attrType = 'unsigned byte';\n        break;\n      case Int16Array:\n        attrType = 'short';\n        break;\n      case Uint16Array:\n        attrType = 'unsigned short';\n        break;\n      default:\n        return;\n    }\n    if (attribute.normalized) attrType += ' normalized';\n    const attrNamePrefix = attributeName.split('_', 1)[0];\n    if (KHR_mesh_quantization_ExtraAttrTypes[attrNamePrefix] && KHR_mesh_quantization_ExtraAttrTypes[attrNamePrefix].includes(attrType)) {\n      this.extensionsUsed[KHR_MESH_QUANTIZATION] = true;\n      this.extensionsRequired[KHR_MESH_QUANTIZATION] = true;\n    }\n  }\n\n  /**\n   * Process camera\n   * @param {THREE.Camera} camera Camera to process\n   * @return {number} Index of the processed mesh in the \"camera\" array\n   */\n  processCamera(camera) {\n    const json = this.json;\n    if (!json.cameras) json.cameras = [];\n    const isOrtho = camera.isOrthographicCamera;\n    const cameraDef = {\n      type: isOrtho ? 'orthographic' : 'perspective'\n    };\n    if (isOrtho) {\n      cameraDef.orthographic = {\n        xmag: camera.right * 2,\n        ymag: camera.top * 2,\n        zfar: camera.far <= 0 ? 0.001 : camera.far,\n        znear: camera.near < 0 ? 0 : camera.near\n      };\n    } else {\n      cameraDef.perspective = {\n        aspectRatio: camera.aspect,\n        yfov: MathUtils.degToRad(camera.fov),\n        zfar: camera.far <= 0 ? 0.001 : camera.far,\n        znear: camera.near < 0 ? 0 : camera.near\n      };\n    }\n\n    // Question: Is saving \"type\" as name intentional?\n    if (camera.name !== '') cameraDef.name = camera.type;\n    return json.cameras.push(cameraDef) - 1;\n  }\n\n  /**\n   * Creates glTF animation entry from AnimationClip object.\n   *\n   * Status:\n   * - Only properties listed in PATH_PROPERTIES may be animated.\n   *\n   * @param {THREE.AnimationClip} clip\n   * @param {THREE.Object3D} root\n   * @return {number|null}\n   */\n  processAnimation(clip, root) {\n    const json = this.json;\n    const nodeMap = this.nodeMap;\n    if (!json.animations) json.animations = [];\n    clip = GLTFExporter.Utils.mergeMorphTargetTracks(clip.clone(), root);\n    const tracks = clip.tracks;\n    const channels = [];\n    const samplers = [];\n    for (let i = 0; i < tracks.length; ++i) {\n      const track = tracks[i];\n      const trackBinding = PropertyBinding.parseTrackName(track.name);\n      let trackNode = PropertyBinding.findNode(root, trackBinding.nodeName);\n      const trackProperty = PATH_PROPERTIES[trackBinding.propertyName];\n      if (trackBinding.objectName === 'bones') {\n        if (trackNode.isSkinnedMesh === true) {\n          trackNode = trackNode.skeleton.getBoneByName(trackBinding.objectIndex);\n        } else {\n          trackNode = undefined;\n        }\n      }\n      if (!trackNode || !trackProperty) {\n        console.warn('THREE.GLTFExporter: Could not export animation track \"%s\".', track.name);\n        continue;\n      }\n      const inputItemSize = 1;\n      let outputItemSize = track.values.length / track.times.length;\n      if (trackProperty === PATH_PROPERTIES.morphTargetInfluences) {\n        outputItemSize /= trackNode.morphTargetInfluences.length;\n      }\n      let interpolation;\n\n      // @TODO export CubicInterpolant(InterpolateSmooth) as CUBICSPLINE\n\n      // Detecting glTF cubic spline interpolant by checking factory method's special property\n      // GLTFCubicSplineInterpolant is a custom interpolant and track doesn't return\n      // valid value from .getInterpolation().\n      if (track.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline === true) {\n        interpolation = 'CUBICSPLINE';\n\n        // itemSize of CUBICSPLINE keyframe is 9\n        // (VEC3 * 3: inTangent, splineVertex, and outTangent)\n        // but needs to be stored as VEC3 so dividing by 3 here.\n        outputItemSize /= 3;\n      } else if (track.getInterpolation() === InterpolateDiscrete) {\n        interpolation = 'STEP';\n      } else {\n        interpolation = 'LINEAR';\n      }\n      samplers.push({\n        input: this.processAccessor(new BufferAttribute(track.times, inputItemSize)),\n        output: this.processAccessor(new BufferAttribute(track.values, outputItemSize)),\n        interpolation: interpolation\n      });\n      channels.push({\n        sampler: samplers.length - 1,\n        target: {\n          node: nodeMap.get(trackNode),\n          path: trackProperty\n        }\n      });\n    }\n    json.animations.push({\n      name: clip.name || 'clip_' + json.animations.length,\n      samplers: samplers,\n      channels: channels\n    });\n    return json.animations.length - 1;\n  }\n\n  /**\n   * @param {THREE.Object3D} object\n   * @return {number|null}\n   */\n  processSkin(object) {\n    const json = this.json;\n    const nodeMap = this.nodeMap;\n    const node = json.nodes[nodeMap.get(object)];\n    const skeleton = object.skeleton;\n    if (skeleton === undefined) return null;\n    const rootJoint = object.skeleton.bones[0];\n    if (rootJoint === undefined) return null;\n    const joints = [];\n    const inverseBindMatrices = new Float32Array(skeleton.bones.length * 16);\n    const temporaryBoneInverse = new Matrix4();\n    for (let i = 0; i < skeleton.bones.length; ++i) {\n      joints.push(nodeMap.get(skeleton.bones[i]));\n      temporaryBoneInverse.copy(skeleton.boneInverses[i]);\n      temporaryBoneInverse.multiply(object.bindMatrix).toArray(inverseBindMatrices, i * 16);\n    }\n    if (json.skins === undefined) json.skins = [];\n    json.skins.push({\n      inverseBindMatrices: this.processAccessor(new BufferAttribute(inverseBindMatrices, 16)),\n      joints: joints,\n      skeleton: nodeMap.get(rootJoint)\n    });\n    const skinIndex = node.skin = json.skins.length - 1;\n    return skinIndex;\n  }\n\n  /**\n   * Process Object3D node\n   * @param {THREE.Object3D} object Object3D to processNodeAsync\n   * @return {Promise<number>} Index of the node in the nodes list\n   */\n  async processNodeAsync(object) {\n    const json = this.json;\n    const options = this.options;\n    const nodeMap = this.nodeMap;\n    if (!json.nodes) json.nodes = [];\n    const nodeDef = {};\n    if (options.trs) {\n      const rotation = object.quaternion.toArray();\n      const position = object.position.toArray();\n      const scale = object.scale.toArray();\n      if (!equalArray(rotation, [0, 0, 0, 1])) {\n        nodeDef.rotation = rotation;\n      }\n      if (!equalArray(position, [0, 0, 0])) {\n        nodeDef.translation = position;\n      }\n      if (!equalArray(scale, [1, 1, 1])) {\n        nodeDef.scale = scale;\n      }\n    } else {\n      if (object.matrixAutoUpdate) {\n        object.updateMatrix();\n      }\n      if (isIdentityMatrix(object.matrix) === false) {\n        nodeDef.matrix = object.matrix.elements;\n      }\n    }\n\n    // We don't export empty strings name because it represents no-name in Three.js.\n    if (object.name !== '') nodeDef.name = String(object.name);\n    this.serializeUserData(object, nodeDef);\n    if (object.isMesh || object.isLine || object.isPoints) {\n      const meshIndex = await this.processMeshAsync(object);\n      if (meshIndex !== null) nodeDef.mesh = meshIndex;\n    } else if (object.isCamera) {\n      nodeDef.camera = this.processCamera(object);\n    }\n    if (object.isSkinnedMesh) this.skins.push(object);\n    const nodeIndex = json.nodes.push(nodeDef) - 1;\n    nodeMap.set(object, nodeIndex);\n    if (object.children.length > 0) {\n      const children = [];\n      for (let i = 0, l = object.children.length; i < l; i++) {\n        const child = object.children[i];\n        if (child.visible || options.onlyVisible === false) {\n          const childNodeIndex = await this.processNodeAsync(child);\n          if (childNodeIndex !== null) children.push(childNodeIndex);\n        }\n      }\n      if (children.length > 0) nodeDef.children = children;\n    }\n    await this._invokeAllAsync(function (ext) {\n      ext.writeNode && ext.writeNode(object, nodeDef);\n    });\n    return nodeIndex;\n  }\n\n  /**\n   * Process Scene\n   * @param {Scene} scene Scene to process\n   */\n  async processSceneAsync(scene) {\n    const json = this.json;\n    const options = this.options;\n    if (!json.scenes) {\n      json.scenes = [];\n      json.scene = 0;\n    }\n    const sceneDef = {};\n    if (scene.name !== '') sceneDef.name = scene.name;\n    json.scenes.push(sceneDef);\n    const nodes = [];\n    for (let i = 0, l = scene.children.length; i < l; i++) {\n      const child = scene.children[i];\n      if (child.visible || options.onlyVisible === false) {\n        const nodeIndex = await this.processNodeAsync(child);\n        if (nodeIndex !== null) nodes.push(nodeIndex);\n      }\n    }\n    if (nodes.length > 0) sceneDef.nodes = nodes;\n    this.serializeUserData(scene, sceneDef);\n  }\n\n  /**\n   * Creates a Scene to hold a list of objects and parse it\n   * @param {Array<THREE.Object3D>} objects List of objects to process\n   */\n  async processObjectsAsync(objects) {\n    const scene = new Scene();\n    scene.name = 'AuxScene';\n    for (let i = 0; i < objects.length; i++) {\n      // We push directly to children instead of calling `add` to prevent\n      // modify the .parent and break its original scene and hierarchy\n      scene.children.push(objects[i]);\n    }\n    await this.processSceneAsync(scene);\n  }\n\n  /**\n   * @param {THREE.Object3D|Array<THREE.Object3D>} input\n   */\n  async processInputAsync(input) {\n    const options = this.options;\n    input = input instanceof Array ? input : [input];\n    await this._invokeAllAsync(function (ext) {\n      ext.beforeParse && ext.beforeParse(input);\n    });\n    const objectsWithoutScene = [];\n    for (let i = 0; i < input.length; i++) {\n      if (input[i] instanceof Scene) {\n        await this.processSceneAsync(input[i]);\n      } else {\n        objectsWithoutScene.push(input[i]);\n      }\n    }\n    if (objectsWithoutScene.length > 0) {\n      await this.processObjectsAsync(objectsWithoutScene);\n    }\n    for (let i = 0; i < this.skins.length; ++i) {\n      this.processSkin(this.skins[i]);\n    }\n    for (let i = 0; i < options.animations.length; ++i) {\n      this.processAnimation(options.animations[i], input[0]);\n    }\n    await this._invokeAllAsync(function (ext) {\n      ext.afterParse && ext.afterParse(input);\n    });\n  }\n  async _invokeAllAsync(func) {\n    for (let i = 0, il = this.plugins.length; i < il; i++) {\n      await func(this.plugins[i]);\n    }\n  }\n}\n\n/**\n * Punctual Lights Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n *\n * @private\n */\nclass GLTFLightExtension {\n  constructor(writer) {\n    this.writer = writer;\n    this.name = 'KHR_lights_punctual';\n  }\n  writeNode(light, nodeDef) {\n    if (!light.isLight) return;\n    if (!light.isDirectionalLight && !light.isPointLight && !light.isSpotLight) {\n      console.warn('THREE.GLTFExporter: Only directional, point, and spot lights are supported.', light);\n      return;\n    }\n    const writer = this.writer;\n    const json = writer.json;\n    const extensionsUsed = writer.extensionsUsed;\n    const lightDef = {};\n    if (light.name) lightDef.name = light.name;\n    lightDef.color = light.color.toArray();\n    lightDef.intensity = light.intensity;\n    if (light.isDirectionalLight) {\n      lightDef.type = 'directional';\n    } else if (light.isPointLight) {\n      lightDef.type = 'point';\n      if (light.distance > 0) lightDef.range = light.distance;\n    } else if (light.isSpotLight) {\n      lightDef.type = 'spot';\n      if (light.distance > 0) lightDef.range = light.distance;\n      lightDef.spot = {};\n      lightDef.spot.innerConeAngle = (1.0 - light.penumbra) * light.angle;\n      lightDef.spot.outerConeAngle = light.angle;\n    }\n    if (light.decay !== undefined && light.decay !== 2) {\n      console.warn('THREE.GLTFExporter: Light decay may be lost. glTF is physically-based, ' + 'and expects light.decay=2.');\n    }\n    if (light.target && (light.target.parent !== light || light.target.position.x !== 0 || light.target.position.y !== 0 || light.target.position.z !== -1)) {\n      console.warn('THREE.GLTFExporter: Light direction may be lost. For best results, ' + 'make light.target a child of the light with position 0,0,-1.');\n    }\n    if (!extensionsUsed[this.name]) {\n      json.extensions = json.extensions || {};\n      json.extensions[this.name] = {\n        lights: []\n      };\n      extensionsUsed[this.name] = true;\n    }\n    const lights = json.extensions[this.name].lights;\n    lights.push(lightDef);\n    nodeDef.extensions = nodeDef.extensions || {};\n    nodeDef.extensions[this.name] = {\n      light: lights.length - 1\n    };\n  }\n}\n\n/**\n * Unlit Materials Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit\n *\n * @private\n */\nclass GLTFMaterialsUnlitExtension {\n  constructor(writer) {\n    this.writer = writer;\n    this.name = 'KHR_materials_unlit';\n  }\n  async writeMaterialAsync(material, materialDef) {\n    if (!material.isMeshBasicMaterial) return;\n    const writer = this.writer;\n    const extensionsUsed = writer.extensionsUsed;\n    materialDef.extensions = materialDef.extensions || {};\n    materialDef.extensions[this.name] = {};\n    extensionsUsed[this.name] = true;\n    materialDef.pbrMetallicRoughness.metallicFactor = 0.0;\n    materialDef.pbrMetallicRoughness.roughnessFactor = 0.9;\n  }\n}\n\n/**\n * Clearcoat Materials Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_clearcoat\n *\n * @private\n */\nclass GLTFMaterialsClearcoatExtension {\n  constructor(writer) {\n    this.writer = writer;\n    this.name = 'KHR_materials_clearcoat';\n  }\n  async writeMaterialAsync(material, materialDef) {\n    if (!material.isMeshPhysicalMaterial || material.clearcoat === 0) return;\n    const writer = this.writer;\n    const extensionsUsed = writer.extensionsUsed;\n    const extensionDef = {};\n    extensionDef.clearcoatFactor = material.clearcoat;\n    if (material.clearcoatMap) {\n      const clearcoatMapDef = {\n        index: await writer.processTextureAsync(material.clearcoatMap),\n        texCoord: material.clearcoatMap.channel\n      };\n      writer.applyTextureTransform(clearcoatMapDef, material.clearcoatMap);\n      extensionDef.clearcoatTexture = clearcoatMapDef;\n    }\n    extensionDef.clearcoatRoughnessFactor = material.clearcoatRoughness;\n    if (material.clearcoatRoughnessMap) {\n      const clearcoatRoughnessMapDef = {\n        index: await writer.processTextureAsync(material.clearcoatRoughnessMap),\n        texCoord: material.clearcoatRoughnessMap.channel\n      };\n      writer.applyTextureTransform(clearcoatRoughnessMapDef, material.clearcoatRoughnessMap);\n      extensionDef.clearcoatRoughnessTexture = clearcoatRoughnessMapDef;\n    }\n    if (material.clearcoatNormalMap) {\n      const clearcoatNormalMapDef = {\n        index: await writer.processTextureAsync(material.clearcoatNormalMap),\n        texCoord: material.clearcoatNormalMap.channel\n      };\n      if (material.clearcoatNormalScale.x !== 1) clearcoatNormalMapDef.scale = material.clearcoatNormalScale.x;\n      writer.applyTextureTransform(clearcoatNormalMapDef, material.clearcoatNormalMap);\n      extensionDef.clearcoatNormalTexture = clearcoatNormalMapDef;\n    }\n    materialDef.extensions = materialDef.extensions || {};\n    materialDef.extensions[this.name] = extensionDef;\n    extensionsUsed[this.name] = true;\n  }\n}\n\n/**\n * Materials dispersion Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_dispersion\n *\n * @private\n */\nclass GLTFMaterialsDispersionExtension {\n  constructor(writer) {\n    this.writer = writer;\n    this.name = 'KHR_materials_dispersion';\n  }\n  async writeMaterialAsync(material, materialDef) {\n    if (!material.isMeshPhysicalMaterial || material.dispersion === 0) return;\n    const writer = this.writer;\n    const extensionsUsed = writer.extensionsUsed;\n    const extensionDef = {};\n    extensionDef.dispersion = material.dispersion;\n    materialDef.extensions = materialDef.extensions || {};\n    materialDef.extensions[this.name] = extensionDef;\n    extensionsUsed[this.name] = true;\n  }\n}\n\n/**\n * Iridescence Materials Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_iridescence\n *\n * @private\n */\nclass GLTFMaterialsIridescenceExtension {\n  constructor(writer) {\n    this.writer = writer;\n    this.name = 'KHR_materials_iridescence';\n  }\n  async writeMaterialAsync(material, materialDef) {\n    if (!material.isMeshPhysicalMaterial || material.iridescence === 0) return;\n    const writer = this.writer;\n    const extensionsUsed = writer.extensionsUsed;\n    const extensionDef = {};\n    extensionDef.iridescenceFactor = material.iridescence;\n    if (material.iridescenceMap) {\n      const iridescenceMapDef = {\n        index: await writer.processTextureAsync(material.iridescenceMap),\n        texCoord: material.iridescenceMap.channel\n      };\n      writer.applyTextureTransform(iridescenceMapDef, material.iridescenceMap);\n      extensionDef.iridescenceTexture = iridescenceMapDef;\n    }\n    extensionDef.iridescenceIor = material.iridescenceIOR;\n    extensionDef.iridescenceThicknessMinimum = material.iridescenceThicknessRange[0];\n    extensionDef.iridescenceThicknessMaximum = material.iridescenceThicknessRange[1];\n    if (material.iridescenceThicknessMap) {\n      const iridescenceThicknessMapDef = {\n        index: await writer.processTextureAsync(material.iridescenceThicknessMap),\n        texCoord: material.iridescenceThicknessMap.channel\n      };\n      writer.applyTextureTransform(iridescenceThicknessMapDef, material.iridescenceThicknessMap);\n      extensionDef.iridescenceThicknessTexture = iridescenceThicknessMapDef;\n    }\n    materialDef.extensions = materialDef.extensions || {};\n    materialDef.extensions[this.name] = extensionDef;\n    extensionsUsed[this.name] = true;\n  }\n}\n\n/**\n * Transmission Materials Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_transmission\n *\n * @private\n */\nclass GLTFMaterialsTransmissionExtension {\n  constructor(writer) {\n    this.writer = writer;\n    this.name = 'KHR_materials_transmission';\n  }\n  async writeMaterialAsync(material, materialDef) {\n    if (!material.isMeshPhysicalMaterial || material.transmission === 0) return;\n    const writer = this.writer;\n    const extensionsUsed = writer.extensionsUsed;\n    const extensionDef = {};\n    extensionDef.transmissionFactor = material.transmission;\n    if (material.transmissionMap) {\n      const transmissionMapDef = {\n        index: await writer.processTextureAsync(material.transmissionMap),\n        texCoord: material.transmissionMap.channel\n      };\n      writer.applyTextureTransform(transmissionMapDef, material.transmissionMap);\n      extensionDef.transmissionTexture = transmissionMapDef;\n    }\n    materialDef.extensions = materialDef.extensions || {};\n    materialDef.extensions[this.name] = extensionDef;\n    extensionsUsed[this.name] = true;\n  }\n}\n\n/**\n * Materials Volume Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_volume\n *\n * @private\n */\nclass GLTFMaterialsVolumeExtension {\n  constructor(writer) {\n    this.writer = writer;\n    this.name = 'KHR_materials_volume';\n  }\n  async writeMaterialAsync(material, materialDef) {\n    if (!material.isMeshPhysicalMaterial || material.transmission === 0) return;\n    const writer = this.writer;\n    const extensionsUsed = writer.extensionsUsed;\n    const extensionDef = {};\n    extensionDef.thicknessFactor = material.thickness;\n    if (material.thicknessMap) {\n      const thicknessMapDef = {\n        index: await writer.processTextureAsync(material.thicknessMap),\n        texCoord: material.thicknessMap.channel\n      };\n      writer.applyTextureTransform(thicknessMapDef, material.thicknessMap);\n      extensionDef.thicknessTexture = thicknessMapDef;\n    }\n    if (material.attenuationDistance !== Infinity) {\n      extensionDef.attenuationDistance = material.attenuationDistance;\n    }\n    extensionDef.attenuationColor = material.attenuationColor.toArray();\n    materialDef.extensions = materialDef.extensions || {};\n    materialDef.extensions[this.name] = extensionDef;\n    extensionsUsed[this.name] = true;\n  }\n}\n\n/**\n * Materials ior Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_ior\n *\n * @private\n */\nclass GLTFMaterialsIorExtension {\n  constructor(writer) {\n    this.writer = writer;\n    this.name = 'KHR_materials_ior';\n  }\n  async writeMaterialAsync(material, materialDef) {\n    if (!material.isMeshPhysicalMaterial || material.ior === 1.5) return;\n    const writer = this.writer;\n    const extensionsUsed = writer.extensionsUsed;\n    const extensionDef = {};\n    extensionDef.ior = material.ior;\n    materialDef.extensions = materialDef.extensions || {};\n    materialDef.extensions[this.name] = extensionDef;\n    extensionsUsed[this.name] = true;\n  }\n}\n\n/**\n * Materials specular Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_specular\n *\n * @private\n */\nclass GLTFMaterialsSpecularExtension {\n  constructor(writer) {\n    this.writer = writer;\n    this.name = 'KHR_materials_specular';\n  }\n  async writeMaterialAsync(material, materialDef) {\n    if (!material.isMeshPhysicalMaterial || material.specularIntensity === 1.0 && material.specularColor.equals(DEFAULT_SPECULAR_COLOR) && !material.specularIntensityMap && !material.specularColorMap) return;\n    const writer = this.writer;\n    const extensionsUsed = writer.extensionsUsed;\n    const extensionDef = {};\n    if (material.specularIntensityMap) {\n      const specularIntensityMapDef = {\n        index: await writer.processTextureAsync(material.specularIntensityMap),\n        texCoord: material.specularIntensityMap.channel\n      };\n      writer.applyTextureTransform(specularIntensityMapDef, material.specularIntensityMap);\n      extensionDef.specularTexture = specularIntensityMapDef;\n    }\n    if (material.specularColorMap) {\n      const specularColorMapDef = {\n        index: await writer.processTextureAsync(material.specularColorMap),\n        texCoord: material.specularColorMap.channel\n      };\n      writer.applyTextureTransform(specularColorMapDef, material.specularColorMap);\n      extensionDef.specularColorTexture = specularColorMapDef;\n    }\n    extensionDef.specularFactor = material.specularIntensity;\n    extensionDef.specularColorFactor = material.specularColor.toArray();\n    materialDef.extensions = materialDef.extensions || {};\n    materialDef.extensions[this.name] = extensionDef;\n    extensionsUsed[this.name] = true;\n  }\n}\n\n/**\n * Sheen Materials Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/main/extensions/2.0/Khronos/KHR_materials_sheen\n *\n * @private\n */\nclass GLTFMaterialsSheenExtension {\n  constructor(writer) {\n    this.writer = writer;\n    this.name = 'KHR_materials_sheen';\n  }\n  async writeMaterialAsync(material, materialDef) {\n    if (!material.isMeshPhysicalMaterial || material.sheen == 0.0) return;\n    const writer = this.writer;\n    const extensionsUsed = writer.extensionsUsed;\n    const extensionDef = {};\n    if (material.sheenRoughnessMap) {\n      const sheenRoughnessMapDef = {\n        index: await writer.processTextureAsync(material.sheenRoughnessMap),\n        texCoord: material.sheenRoughnessMap.channel\n      };\n      writer.applyTextureTransform(sheenRoughnessMapDef, material.sheenRoughnessMap);\n      extensionDef.sheenRoughnessTexture = sheenRoughnessMapDef;\n    }\n    if (material.sheenColorMap) {\n      const sheenColorMapDef = {\n        index: await writer.processTextureAsync(material.sheenColorMap),\n        texCoord: material.sheenColorMap.channel\n      };\n      writer.applyTextureTransform(sheenColorMapDef, material.sheenColorMap);\n      extensionDef.sheenColorTexture = sheenColorMapDef;\n    }\n    extensionDef.sheenRoughnessFactor = material.sheenRoughness;\n    extensionDef.sheenColorFactor = material.sheenColor.toArray();\n    materialDef.extensions = materialDef.extensions || {};\n    materialDef.extensions[this.name] = extensionDef;\n    extensionsUsed[this.name] = true;\n  }\n}\n\n/**\n * Anisotropy Materials Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/main/extensions/2.0/Khronos/KHR_materials_anisotropy\n *\n * @private\n */\nclass GLTFMaterialsAnisotropyExtension {\n  constructor(writer) {\n    this.writer = writer;\n    this.name = 'KHR_materials_anisotropy';\n  }\n  async writeMaterialAsync(material, materialDef) {\n    if (!material.isMeshPhysicalMaterial || material.anisotropy == 0.0) return;\n    const writer = this.writer;\n    const extensionsUsed = writer.extensionsUsed;\n    const extensionDef = {};\n    if (material.anisotropyMap) {\n      const anisotropyMapDef = {\n        index: await writer.processTextureAsync(material.anisotropyMap)\n      };\n      writer.applyTextureTransform(anisotropyMapDef, material.anisotropyMap);\n      extensionDef.anisotropyTexture = anisotropyMapDef;\n    }\n    extensionDef.anisotropyStrength = material.anisotropy;\n    extensionDef.anisotropyRotation = material.anisotropyRotation;\n    materialDef.extensions = materialDef.extensions || {};\n    materialDef.extensions[this.name] = extensionDef;\n    extensionsUsed[this.name] = true;\n  }\n}\n\n/**\n * Materials Emissive Strength Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/blob/5768b3ce0ef32bc39cdf1bef10b948586635ead3/extensions/2.0/Khronos/KHR_materials_emissive_strength/README.md\n *\n * @private\n */\nclass GLTFMaterialsEmissiveStrengthExtension {\n  constructor(writer) {\n    this.writer = writer;\n    this.name = 'KHR_materials_emissive_strength';\n  }\n  async writeMaterialAsync(material, materialDef) {\n    if (!material.isMeshStandardMaterial || material.emissiveIntensity === 1.0) return;\n    const writer = this.writer;\n    const extensionsUsed = writer.extensionsUsed;\n    const extensionDef = {};\n    extensionDef.emissiveStrength = material.emissiveIntensity;\n    materialDef.extensions = materialDef.extensions || {};\n    materialDef.extensions[this.name] = extensionDef;\n    extensionsUsed[this.name] = true;\n  }\n}\n\n/**\n * Materials bump Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/EXT_materials_bump\n *\n * @private\n */\nclass GLTFMaterialsBumpExtension {\n  constructor(writer) {\n    this.writer = writer;\n    this.name = 'EXT_materials_bump';\n  }\n  async writeMaterialAsync(material, materialDef) {\n    if (!material.isMeshStandardMaterial || material.bumpScale === 1 && !material.bumpMap) return;\n    const writer = this.writer;\n    const extensionsUsed = writer.extensionsUsed;\n    const extensionDef = {};\n    if (material.bumpMap) {\n      const bumpMapDef = {\n        index: await writer.processTextureAsync(material.bumpMap),\n        texCoord: material.bumpMap.channel\n      };\n      writer.applyTextureTransform(bumpMapDef, material.bumpMap);\n      extensionDef.bumpTexture = bumpMapDef;\n    }\n    extensionDef.bumpFactor = material.bumpScale;\n    materialDef.extensions = materialDef.extensions || {};\n    materialDef.extensions[this.name] = extensionDef;\n    extensionsUsed[this.name] = true;\n  }\n}\n\n/**\n * GPU Instancing Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/EXT_mesh_gpu_instancing\n *\n * @private\n */\nclass GLTFMeshGpuInstancing {\n  constructor(writer) {\n    this.writer = writer;\n    this.name = 'EXT_mesh_gpu_instancing';\n  }\n  writeNode(object, nodeDef) {\n    if (!object.isInstancedMesh) return;\n    const writer = this.writer;\n    const mesh = object;\n    const translationAttr = new Float32Array(mesh.count * 3);\n    const rotationAttr = new Float32Array(mesh.count * 4);\n    const scaleAttr = new Float32Array(mesh.count * 3);\n    const matrix = new Matrix4();\n    const position = new Vector3();\n    const quaternion = new Quaternion();\n    const scale = new Vector3();\n    for (let i = 0; i < mesh.count; i++) {\n      mesh.getMatrixAt(i, matrix);\n      matrix.decompose(position, quaternion, scale);\n      position.toArray(translationAttr, i * 3);\n      quaternion.toArray(rotationAttr, i * 4);\n      scale.toArray(scaleAttr, i * 3);\n    }\n    const attributes = {\n      TRANSLATION: writer.processAccessor(new BufferAttribute(translationAttr, 3)),\n      ROTATION: writer.processAccessor(new BufferAttribute(rotationAttr, 4)),\n      SCALE: writer.processAccessor(new BufferAttribute(scaleAttr, 3))\n    };\n    if (mesh.instanceColor) attributes._COLOR_0 = writer.processAccessor(mesh.instanceColor);\n    nodeDef.extensions = nodeDef.extensions || {};\n    nodeDef.extensions[this.name] = {\n      attributes\n    };\n    writer.extensionsUsed[this.name] = true;\n    writer.extensionsRequired[this.name] = true;\n  }\n}\n\n/**\n * Static utility functions\n *\n * @private\n */\nGLTFExporter.Utils = {\n  insertKeyframe: function (track, time) {\n    const tolerance = 0.001; // 1ms\n    const valueSize = track.getValueSize();\n    const times = new track.TimeBufferType(track.times.length + 1);\n    const values = new track.ValueBufferType(track.values.length + valueSize);\n    const interpolant = track.createInterpolant(new track.ValueBufferType(valueSize));\n    let index;\n    if (track.times.length === 0) {\n      times[0] = time;\n      for (let i = 0; i < valueSize; i++) {\n        values[i] = 0;\n      }\n      index = 0;\n    } else if (time < track.times[0]) {\n      if (Math.abs(track.times[0] - time) < tolerance) return 0;\n      times[0] = time;\n      times.set(track.times, 1);\n      values.set(interpolant.evaluate(time), 0);\n      values.set(track.values, valueSize);\n      index = 0;\n    } else if (time > track.times[track.times.length - 1]) {\n      if (Math.abs(track.times[track.times.length - 1] - time) < tolerance) {\n        return track.times.length - 1;\n      }\n      times[times.length - 1] = time;\n      times.set(track.times, 0);\n      values.set(track.values, 0);\n      values.set(interpolant.evaluate(time), track.values.length);\n      index = times.length - 1;\n    } else {\n      for (let i = 0; i < track.times.length; i++) {\n        if (Math.abs(track.times[i] - time) < tolerance) return i;\n        if (track.times[i] < time && track.times[i + 1] > time) {\n          times.set(track.times.slice(0, i + 1), 0);\n          times[i + 1] = time;\n          times.set(track.times.slice(i + 1), i + 2);\n          values.set(track.values.slice(0, (i + 1) * valueSize), 0);\n          values.set(interpolant.evaluate(time), (i + 1) * valueSize);\n          values.set(track.values.slice((i + 1) * valueSize), (i + 2) * valueSize);\n          index = i + 1;\n          break;\n        }\n      }\n    }\n    track.times = times;\n    track.values = values;\n    return index;\n  },\n  mergeMorphTargetTracks: function (clip, root) {\n    const tracks = [];\n    const mergedTracks = {};\n    const sourceTracks = clip.tracks;\n    for (let i = 0; i < sourceTracks.length; ++i) {\n      let sourceTrack = sourceTracks[i];\n      const sourceTrackBinding = PropertyBinding.parseTrackName(sourceTrack.name);\n      const sourceTrackNode = PropertyBinding.findNode(root, sourceTrackBinding.nodeName);\n      if (sourceTrackBinding.propertyName !== 'morphTargetInfluences' || sourceTrackBinding.propertyIndex === undefined) {\n        // Tracks that don't affect morph targets, or that affect all morph targets together, can be left as-is.\n        tracks.push(sourceTrack);\n        continue;\n      }\n      if (sourceTrack.createInterpolant !== sourceTrack.InterpolantFactoryMethodDiscrete && sourceTrack.createInterpolant !== sourceTrack.InterpolantFactoryMethodLinear) {\n        if (sourceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline) {\n          // This should never happen, because glTF morph target animations\n          // affect all targets already.\n          throw new Error('THREE.GLTFExporter: Cannot merge tracks with glTF CUBICSPLINE interpolation.');\n        }\n        console.warn('THREE.GLTFExporter: Morph target interpolation mode not yet supported. Using LINEAR instead.');\n        sourceTrack = sourceTrack.clone();\n        sourceTrack.setInterpolation(InterpolateLinear);\n      }\n      const targetCount = sourceTrackNode.morphTargetInfluences.length;\n      const targetIndex = sourceTrackNode.morphTargetDictionary[sourceTrackBinding.propertyIndex];\n      if (targetIndex === undefined) {\n        throw new Error('THREE.GLTFExporter: Morph target name not found: ' + sourceTrackBinding.propertyIndex);\n      }\n      let mergedTrack;\n\n      // If this is the first time we've seen this object, create a new\n      // track to store merged keyframe data for each morph target.\n      if (mergedTracks[sourceTrackNode.uuid] === undefined) {\n        mergedTrack = sourceTrack.clone();\n        const values = new mergedTrack.ValueBufferType(targetCount * mergedTrack.times.length);\n        for (let j = 0; j < mergedTrack.times.length; j++) {\n          values[j * targetCount + targetIndex] = mergedTrack.values[j];\n        }\n\n        // We need to take into consideration the intended target node\n        // of our original un-merged morphTarget animation.\n        mergedTrack.name = (sourceTrackBinding.nodeName || '') + '.morphTargetInfluences';\n        mergedTrack.values = values;\n        mergedTracks[sourceTrackNode.uuid] = mergedTrack;\n        tracks.push(mergedTrack);\n        continue;\n      }\n      const sourceInterpolant = sourceTrack.createInterpolant(new sourceTrack.ValueBufferType(1));\n      mergedTrack = mergedTracks[sourceTrackNode.uuid];\n\n      // For every existing keyframe of the merged track, write a (possibly\n      // interpolated) value from the source track.\n      for (let j = 0; j < mergedTrack.times.length; j++) {\n        mergedTrack.values[j * targetCount + targetIndex] = sourceInterpolant.evaluate(mergedTrack.times[j]);\n      }\n\n      // For every existing keyframe of the source track, write a (possibly\n      // new) keyframe to the merged track. Values from the previous loop may\n      // be written again, but keyframes are de-duplicated.\n      for (let j = 0; j < sourceTrack.times.length; j++) {\n        const keyframeIndex = this.insertKeyframe(mergedTrack, sourceTrack.times[j]);\n        mergedTrack.values[keyframeIndex * targetCount + targetIndex] = sourceTrack.values[j];\n      }\n    }\n    clip.tracks = tracks;\n    return clip;\n  },\n  toFloat32BufferAttribute: function (srcAttribute) {\n    const dstAttribute = new BufferAttribute(new Float32Array(srcAttribute.count * srcAttribute.itemSize), srcAttribute.itemSize, false);\n    if (!srcAttribute.normalized && !srcAttribute.isInterleavedBufferAttribute) {\n      dstAttribute.array.set(srcAttribute.array);\n      return dstAttribute;\n    }\n    for (let i = 0, il = srcAttribute.count; i < il; i++) {\n      for (let j = 0; j < srcAttribute.itemSize; j++) {\n        dstAttribute.setComponent(i, j, srcAttribute.getComponent(i, j));\n      }\n    }\n    return dstAttribute;\n  }\n};\n\n/**\n * Export options of `GLTFExporter`.\n *\n * @typedef {Object} GLTFExporter~Options\n * @property {boolean} [trs=false] - Export position, rotation and scale instead of matrix per node.\n * @property {boolean} [onlyVisible=true] - Export only visible 3D objects.\n * @property {boolean} [binary=false] - Export in binary (.glb) format, returning an ArrayBuffer.\n * @property {number} [maxTextureSize=Infinity] - Restricts the image maximum size (both width and height) to the given value.\n * @property {Array<AnimationClip>} [animations=[]] - List of animations to be included in the export.\n * @property {boolean} [includeCustomExtensions=false] - Export custom glTF extensions defined on an object's `userData.gltfExtensions` property.\n **/\n\n/**\n * onDone callback of `GLTFExporter`.\n *\n * @callback GLTFExporter~OnDone\n * @param {ArrayBuffer|string} result - The generated .gltf (JSON) or .glb (binary).\n */\n\n/**\n * onError callback of `GLTFExporter`.\n *\n * @callback GLTFExporter~OnError\n * @param {Error} error - The error object.\n */\n\nexport { GLTFExporter };", "/* @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @param object {THREE.Object3D}\n * @return {boolean}\n */\nconst compatibleObject = object => {\n  // @TODO: Need properer variantMaterials format validation?\n  return object.material !== undefined &&\n  // easier than (!object.isMesh && !object.isLine &&\n  // !object.isPoints)\n  object.userData &&\n  // just in case\n  object.userData.variantMaterials &&\n  // Is this line costly?\n  !!Array.from(object.userData.variantMaterials.values()).filter(m => compatibleMaterial(m.material));\n};\n/**\n * @param material {THREE.Material}\n * @return {boolean}\n */\nconst compatibleMaterial = material => {\n  // @TODO: support multi materials?\n  return material && material.isMaterial && !Array.isArray(material);\n};\nexport default class GLTFExporterMaterialsVariantsExtension {\n  constructor(writer) {\n    this.writer = writer;\n    this.name = 'KHR_materials_variants';\n    this.variantNames = [];\n  }\n  beforeParse(objects) {\n    // Find all variant names and store them to the table\n    const variantNameSet = new Set();\n    const addVariantNames = o => {\n      if (!compatibleObject(o)) {\n        return;\n      }\n      const variantMaterials = o.userData.variantMaterials;\n      const variantDataMap = o.userData.variantData;\n      for (const [variantName, variantData] of variantDataMap) {\n        const variantMaterial = variantMaterials.get(variantData.index);\n        // Ignore unloaded variant materials\n        if (variantMaterial && compatibleMaterial(variantMaterial.material)) {\n          variantNameSet.add(variantName);\n        }\n      }\n    };\n    if (Array.isArray(objects)) {\n      for (const object of objects) {\n        object.traverse(addVariantNames);\n      }\n    } else {\n      objects.traverse(addVariantNames);\n    }\n    // We may want to sort?\n    variantNameSet.forEach(name => this.variantNames.push(name));\n  }\n  async writeMesh(mesh, meshDef) {\n    if (!compatibleObject(mesh)) {\n      return;\n    }\n    const userData = mesh.userData;\n    const variantMaterials = userData.variantMaterials;\n    const variantDataMap = userData.variantData;\n    const mappingTable = new Map();\n    // Removes gaps in the variant indices list (caused by deleting variants).\n    const reIndexedVariants = new Map();\n    const variants = Array.from(variantDataMap.values()).sort((a, b) => {\n      return a.index - b.index;\n    });\n    for (const [i, variantData] of variants.entries()) {\n      reIndexedVariants.set(variantData.index, i);\n    }\n    for (const variantData of variantDataMap.values()) {\n      const variantInstance = variantMaterials.get(variantData.index);\n      if (!variantInstance || !compatibleMaterial(variantInstance.material)) {\n        continue;\n      }\n      const materialIndex = await this.writer.processMaterialAsync(variantInstance.material);\n      if (!mappingTable.has(materialIndex)) {\n        mappingTable.set(materialIndex, {\n          material: materialIndex,\n          variants: []\n        });\n      }\n      mappingTable.get(materialIndex).variants.push(reIndexedVariants.get(variantData.index));\n    }\n    const mappingsDef = Array.from(mappingTable.values()).map(m => {\n      return m.variants.sort((a, b) => a - b) && m;\n    }).sort((a, b) => a.material - b.material);\n    if (mappingsDef.length === 0) {\n      return;\n    }\n    const originalMaterialIndex = compatibleMaterial(userData.originalMaterial) ? await this.writer.processMaterialAsync(userData.originalMaterial) : -1;\n    for (const primitiveDef of meshDef.primitives) {\n      // Override primitiveDef.material with original material.\n      if (originalMaterialIndex >= 0) {\n        primitiveDef.material = originalMaterialIndex;\n      }\n      primitiveDef.extensions = primitiveDef.extensions || {};\n      primitiveDef.extensions[this.name] = {\n        mappings: mappingsDef\n      };\n    }\n  }\n  afterParse() {\n    if (this.variantNames.length === 0) {\n      return;\n    }\n    const root = this.writer.json;\n    root.extensions = root.extensions || {};\n    const variantsDef = this.variantNames.map(n => {\n      return {\n        name: n\n      };\n    });\n    root.extensions[this.name] = {\n      variants: variantsDef\n    };\n    this.writer.extensionsUsed[this.name] = true;\n  }\n}\n", "import { DirectionalLight, Group, LightProbe, WebGLCubeRenderTarget } from 'three';\nclass SessionLightProbe {\n  constructor(xrLight, renderer, lightProbe, environmentEstimation, estimationStartCallback) {\n    this.xrLight = xrLight;\n    this.renderer = renderer;\n    this.lightProbe = lightProbe;\n    this.xrWebGLBinding = null;\n    this.estimationStartCallback = estimationStartCallback;\n    this.frameCallback = this.onXRFrame.bind(this);\n    const session = renderer.xr.getSession();\n\n    // If the XRWebGLBinding class is available then we can also query an\n    // estimated reflection cube map.\n    if (environmentEstimation && 'XRWebGLBinding' in window) {\n      // This is the simplest way I know of to initialize a WebGL cubemap in Three.\n      const cubeRenderTarget = new WebGLCubeRenderTarget(16);\n      xrLight.environment = cubeRenderTarget.texture;\n      const gl = renderer.getContext();\n\n      // Ensure that we have any extensions needed to use the preferred cube map format.\n      switch (session.preferredReflectionFormat) {\n        case 'srgba8':\n          gl.getExtension('EXT_sRGB');\n          break;\n        case 'rgba16f':\n          gl.getExtension('OES_texture_half_float');\n          break;\n      }\n      this.xrWebGLBinding = new XRWebGLBinding(session, gl);\n      this.lightProbe.addEventListener('reflectionchange', () => {\n        this.updateReflection();\n      });\n    }\n\n    // Start monitoring the XR animation frame loop to look for lighting\n    // estimation changes.\n    session.requestAnimationFrame(this.frameCallback);\n  }\n  updateReflection() {\n    const textureProperties = this.renderer.properties.get(this.xrLight.environment);\n    if (textureProperties) {\n      const cubeMap = this.xrWebGLBinding.getReflectionCubeMap(this.lightProbe);\n      if (cubeMap) {\n        textureProperties.__webglTexture = cubeMap;\n        this.xrLight.environment.needsPMREMUpdate = true;\n      }\n    }\n  }\n  onXRFrame(time, xrFrame) {\n    // If either this object or the XREstimatedLight has been destroyed, stop\n    // running the frame loop.\n    if (!this.xrLight) {\n      return;\n    }\n    const session = xrFrame.session;\n    session.requestAnimationFrame(this.frameCallback);\n    const lightEstimate = xrFrame.getLightEstimate(this.lightProbe);\n    if (lightEstimate) {\n      // We can copy the estimate's spherical harmonics array directly into the light probe.\n      this.xrLight.lightProbe.sh.fromArray(lightEstimate.sphericalHarmonicsCoefficients);\n      this.xrLight.lightProbe.intensity = 1.0;\n\n      // For the directional light we have to normalize the color and set the scalar as the\n      // intensity, since WebXR can return color values that exceed 1.0.\n      const intensityScalar = Math.max(1.0, Math.max(lightEstimate.primaryLightIntensity.x, Math.max(lightEstimate.primaryLightIntensity.y, lightEstimate.primaryLightIntensity.z)));\n      this.xrLight.directionalLight.color.setRGB(lightEstimate.primaryLightIntensity.x / intensityScalar, lightEstimate.primaryLightIntensity.y / intensityScalar, lightEstimate.primaryLightIntensity.z / intensityScalar);\n      this.xrLight.directionalLight.intensity = intensityScalar;\n      this.xrLight.directionalLight.position.copy(lightEstimate.primaryLightDirection);\n      if (this.estimationStartCallback) {\n        this.estimationStartCallback();\n        this.estimationStartCallback = null;\n      }\n    }\n  }\n  dispose() {\n    this.xrLight = null;\n    this.renderer = null;\n    this.lightProbe = null;\n    this.xrWebGLBinding = null;\n  }\n}\n\n/**\n * This class can be used to represent the environmental light of\n * a XR session. It relies on the WebXR Lighting Estimation API.\n *\n * @augments Group\n * @three_import import { XREstimatedLight } from 'three/addons/webxr/XREstimatedLight.js';\n */\nexport class XREstimatedLight extends Group {\n  /**\n   * Constructs a new light.\n   *\n   * @param {WebGLRenderer} renderer - The renderer.\n   * @param {boolean} [environmentEstimation=true] - Whether to use environment estimation or not.\n   */\n  constructor(renderer, environmentEstimation = true) {\n    super();\n\n    /**\n     * The light probe that represents the estimated light.\n     *\n     * @type {LightProbe}\n     */\n    this.lightProbe = new LightProbe();\n    this.lightProbe.intensity = 0;\n    this.add(this.lightProbe);\n\n    /**\n     * Represents the primary light from the XR environment.\n     *\n     * @type {DirectionalLight}\n     */\n    this.directionalLight = new DirectionalLight();\n    this.directionalLight.intensity = 0;\n    this.add(this.directionalLight);\n\n    /**\n     * Will be set to a cube map in the SessionLightProbe if environment estimation is\n     * available and requested.\n     *\n     * @type {?Texture}\n     * @default null\n     */\n    this.environment = null;\n    let sessionLightProbe = null;\n    let estimationStarted = false;\n    renderer.xr.addEventListener('sessionstart', () => {\n      const session = renderer.xr.getSession();\n      if ('requestLightProbe' in session) {\n        session.requestLightProbe({\n          reflectionFormat: session.preferredReflectionFormat\n        }).then(probe => {\n          sessionLightProbe = new SessionLightProbe(this, renderer, probe, environmentEstimation, () => {\n            estimationStarted = true;\n\n            // Fired to indicate that the estimated lighting values are now being updated.\n            this.dispatchEvent({\n              type: 'estimationstart'\n            });\n          });\n        });\n      }\n    });\n    renderer.xr.addEventListener('sessionend', () => {\n      if (sessionLightProbe) {\n        sessionLightProbe.dispose();\n        sessionLightProbe = null;\n      }\n      if (estimationStarted) {\n        // Fired to indicate that the estimated lighting values are no longer being updated.\n        this.dispatchEvent({\n          type: 'estimationend'\n        });\n      }\n    });\n\n    /**\n     * Frees the GPU-related resources allocated by this instance. Call this\n     * method whenever this instance is no longer used in your app.\n     */\n    this.dispose = () => {\n      if (sessionLightProbe) {\n        sessionLightProbe.dispose();\n        sessionLightProbe = null;\n      }\n      this.remove(this.lightProbe);\n      this.lightProbe = null;\n      this.remove(this.directionalLight);\n      this.directionalLight = null;\n      this.environment = null;\n    };\n  }\n}", "/* @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const SETTLING_TIME = 10000; // plenty long enough\nconst MIN_DECAY_MILLISECONDS = 0.001;\nexport const DECAY_MILLISECONDS = 50;\n/**\n * The Damper class is a generic second-order critically damped system that does\n * one linear step of the desired length of time. The only parameter is\n * DECAY_MILLISECONDS. This common parameter makes all states converge at the\n * same rate regardless of scale. xNormalization is a number to provide the\n * rough scale of x, such that NIL_SPEED clamping also happens at roughly the\n * same convergence for all states.\n */\nexport class Damper {\n  constructor(decayMilliseconds = DECAY_MILLISECONDS) {\n    this.velocity = 0;\n    this.naturalFrequency = 0;\n    this.setDecayTime(decayMilliseconds);\n  }\n  setDecayTime(decayMilliseconds) {\n    this.naturalFrequency = 1 / Math.max(MIN_DECAY_MILLISECONDS, decayMilliseconds);\n  }\n  update(x, xGoal, timeStepMilliseconds, xNormalization) {\n    const nilSpeed = 0.0002 * this.naturalFrequency;\n    if (x == null || xNormalization === 0) {\n      return xGoal;\n    }\n    if (x === xGoal && this.velocity === 0) {\n      return xGoal;\n    }\n    if (timeStepMilliseconds < 0) {\n      return x;\n    }\n    // Exact solution to a critically damped second-order system, where:\n    // acceleration = this.naturalFrequency * this.naturalFrequency * (xGoal\n    // - x) - 2 * this.naturalFrequency * this.velocity;\n    const deltaX = x - xGoal;\n    const intermediateVelocity = this.velocity + this.naturalFrequency * deltaX;\n    const intermediateX = deltaX + timeStepMilliseconds * intermediateVelocity;\n    const decay = Math.exp(-this.naturalFrequency * timeStepMilliseconds);\n    const newVelocity = (intermediateVelocity - this.naturalFrequency * intermediateX) * decay;\n    const acceleration = -this.naturalFrequency * (newVelocity + intermediateVelocity * decay);\n    if (Math.abs(newVelocity) < nilSpeed * Math.abs(xNormalization) && acceleration * deltaX >= 0) {\n      // This ensures the controls settle and stop calling this function instead\n      // of asymptotically approaching their goal.\n      this.velocity = 0;\n      return xGoal;\n    } else {\n      this.velocity = newVelocity;\n      return xGoal + intermediateX * decay;\n    }\n  }\n}\n", "/* @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { BoxGeometry, BufferGeometry, DoubleSide, Float32BufferAttribute, Mesh, PlaneGeometry, Vector2 } from 'three';\nimport { Damper } from './Damper.js';\nconst RADIUS = 0.2;\nconst LINE_WIDTH = 0.03;\nconst MAX_OPACITY = 0.75;\nconst SEGMENTS = 12;\nconst DELTA_PHI = Math.PI / (2 * SEGMENTS);\nconst vector2 = new Vector2();\n/**\n * Adds a quarter-annulus of vertices to the array, centered on cornerX,\n * cornerY.\n */\nconst addCorner = (vertices, cornerX, cornerY) => {\n  let phi = cornerX > 0 ? cornerY > 0 ? 0 : -Math.PI / 2 : cornerY > 0 ? Math.PI / 2 : Math.PI;\n  for (let i = 0; i <= SEGMENTS; ++i) {\n    vertices.push(cornerX + (RADIUS - LINE_WIDTH) * Math.cos(phi), cornerY + (RADIUS - LINE_WIDTH) * Math.sin(phi), 0, cornerX + RADIUS * Math.cos(phi), cornerY + RADIUS * Math.sin(phi), 0);\n    phi += DELTA_PHI;\n  }\n};\n/**\n * This class is a set of two coincident planes. The first is just a cute box\n * outline with rounded corners and damped opacity to indicate the floor extents\n * of a scene. It is purposely larger than the scene's bounding box by RADIUS on\n * all sides so that small scenes are still visible / selectable. Its center is\n * actually carved out by vertices to ensure its fragment shader doesn't add\n * much time.\n *\n * The child plane is a simple plane with the same extents for use in hit\n * testing (translation is triggered when the touch hits the plane, rotation\n * otherwise).\n */\nexport class PlacementBox extends Mesh {\n  constructor(scene, side) {\n    const geometry = new BufferGeometry();\n    const triangles = [];\n    const vertices = [];\n    const {\n      size,\n      boundingBox\n    } = scene;\n    const x = size.x / 2;\n    const y = (side === 'back' ? size.y : size.z) / 2;\n    addCorner(vertices, x, y);\n    addCorner(vertices, -x, y);\n    addCorner(vertices, -x, -y);\n    addCorner(vertices, x, -y);\n    const numVertices = vertices.length / 3;\n    for (let i = 0; i < numVertices - 2; i += 2) {\n      triangles.push(i, i + 1, i + 3, i, i + 3, i + 2);\n    }\n    const i = numVertices - 2;\n    triangles.push(i, i + 1, 1, i, 1, 0);\n    geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    geometry.setIndex(triangles);\n    super(geometry);\n    this.side = side;\n    const material = this.material;\n    material.side = DoubleSide;\n    material.transparent = true;\n    material.opacity = 0;\n    this.goalOpacity = 0;\n    this.opacityDamper = new Damper();\n    this.hitPlane = new Mesh(new PlaneGeometry(2 * (x + RADIUS), 2 * (y + RADIUS)));\n    this.hitPlane.visible = false;\n    this.hitPlane.material.side = DoubleSide;\n    this.add(this.hitPlane);\n    // The box matches the dimensions of the plane (extra radius all around),\n    // but only the top is expanded by radius, not the bottom.\n    this.hitBox = new Mesh(new BoxGeometry(size.x + 2 * RADIUS, size.y + RADIUS, size.z + 2 * RADIUS));\n    this.hitBox.visible = false;\n    this.hitBox.material.side = DoubleSide;\n    this.add(this.hitBox);\n    boundingBox.getCenter(this.position);\n    switch (side) {\n      case 'bottom':\n        this.rotateX(-Math.PI / 2);\n        this.shadowHeight = boundingBox.min.y;\n        this.position.y = this.shadowHeight;\n        break;\n      case 'back':\n        this.shadowHeight = boundingBox.min.z;\n        this.position.z = this.shadowHeight;\n    }\n    scene.target.add(this);\n    this.hitBox.position.y = (size.y + RADIUS) / 2 + boundingBox.min.y;\n    scene.target.add(this.hitBox);\n    this.offsetHeight = 0;\n  }\n  /**\n   * Get the world hit position if the touch coordinates hit the box, and null\n   * otherwise. Pass the scene in to get access to its raycaster.\n   */\n  getHit(scene, screenX, screenY) {\n    vector2.set(screenX, -screenY);\n    this.hitPlane.visible = true;\n    const hitResult = scene.positionAndNormalFromPoint(vector2, this.hitPlane);\n    this.hitPlane.visible = false;\n    return hitResult == null ? null : hitResult.position;\n  }\n  getExpandedHit(scene, screenX, screenY) {\n    this.hitPlane.scale.set(1000, 1000, 1000);\n    this.hitPlane.updateMatrixWorld();\n    const hitResult = this.getHit(scene, screenX, screenY);\n    this.hitPlane.scale.set(1, 1, 1);\n    return hitResult;\n  }\n  controllerIntersection(scene, controller) {\n    this.hitBox.visible = true;\n    const hitResult = scene.hitFromController(controller, this.hitBox);\n    this.hitBox.visible = false;\n    return hitResult;\n  }\n  /**\n   * Offset the height of the box relative to the bottom of the scene. Positive\n   * is up, so generally only negative values are used.\n   */\n  set offsetHeight(offset) {\n    offset -= 0.001; // push 1 mm below shadow to avoid z-fighting\n    if (this.side === 'back') {\n      this.position.z = this.shadowHeight + offset;\n    } else {\n      this.position.y = this.shadowHeight + offset;\n    }\n  }\n  get offsetHeight() {\n    if (this.side === 'back') {\n      return this.position.z - this.shadowHeight;\n    } else {\n      return this.position.y - this.shadowHeight;\n    }\n  }\n  /**\n   * Set the box's visibility; it will fade in and out.\n   */\n  set show(visible) {\n    this.goalOpacity = visible ? MAX_OPACITY : 0;\n  }\n  /**\n   * Call on each frame with the frame delta to fade the box.\n   */\n  updateOpacity(delta) {\n    const material = this.material;\n    material.opacity = this.opacityDamper.update(material.opacity, this.goalOpacity, delta, 1);\n    this.visible = material.opacity > 0;\n  }\n  /**\n   * Call this to clean up Three's cache when you remove the box.\n   */\n  dispose() {\n    const {\n      geometry,\n      material\n    } = this.hitPlane;\n    geometry.dispose();\n    material.dispose();\n    this.hitBox.geometry.dispose();\n    this.hitBox.material.dispose();\n    this.geometry.dispose();\n    this.material.dispose();\n    this.hitBox.removeFromParent();\n    this.removeFromParent();\n  }\n}\n", "/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const numberNode = (value, unit) => ({\n  type: 'number',\n  number: value,\n  unit\n});\n/**\n * Given a string representing a comma-separated set of CSS-like expressions,\n * parses and returns an array of ASTs that correspond to those expressions.\n *\n * Currently supported syntax includes:\n *\n *  - functions (top-level and nested)\n *  - calc() arithmetic operators\n *  - numbers with units\n *  - hexadecimal-encoded colors in 3, 6 or 8 digit form\n *  - idents\n *\n * All syntax is intended to match the parsing rules and semantics of the actual\n * CSS spec as closely as possible.\n *\n * @see https://www.w3.org/TR/CSS2/\n * @see https://www.w3.org/TR/css-values-3/\n */\nexport const parseExpressions = (() => {\n  const cache = {};\n  const MAX_PARSE_ITERATIONS = 1000; // Arbitrarily large\n  return inputString => {\n    const cacheKey = inputString;\n    if (cacheKey in cache) {\n      return cache[cacheKey];\n    }\n    const expressions = [];\n    let parseIterations = 0;\n    while (inputString) {\n      if (++parseIterations > MAX_PARSE_ITERATIONS) {\n        // Avoid a potentially infinite loop due to typos:\n        inputString = '';\n        break;\n      }\n      const expressionParseResult = parseExpression(inputString);\n      const expression = expressionParseResult.nodes[0];\n      if (expression == null || expression.terms.length === 0) {\n        break;\n      }\n      expressions.push(expression);\n      inputString = expressionParseResult.remainingInput;\n    }\n    return cache[cacheKey] = expressions;\n  };\n})();\n/**\n * Parse a single expression. For the purposes of our supported syntax, an\n * expression is the set of semantically meaningful terms that appear before the\n * next comma, or between the parens of a function invocation.\n */\nconst parseExpression = (() => {\n  const IS_IDENT_RE = /^(\\-\\-|[a-z\\u0240-\\uffff])/i;\n  const IS_OPERATOR_RE = /^([\\*\\+\\/]|[\\-]\\s)/i;\n  const IS_EXPRESSION_END_RE = /^[\\),]/;\n  const FUNCTION_ARGUMENTS_FIRST_TOKEN = '(';\n  const HEX_FIRST_TOKEN = '#';\n  return inputString => {\n    const terms = [];\n    while (inputString.length) {\n      inputString = inputString.trim();\n      if (IS_EXPRESSION_END_RE.test(inputString)) {\n        break;\n      } else if (inputString[0] === FUNCTION_ARGUMENTS_FIRST_TOKEN) {\n        const {\n          nodes,\n          remainingInput\n        } = parseFunctionArguments(inputString);\n        inputString = remainingInput;\n        terms.push({\n          type: 'function',\n          name: {\n            type: 'ident',\n            value: 'calc'\n          },\n          arguments: nodes\n        });\n      } else if (IS_IDENT_RE.test(inputString)) {\n        const identParseResult = parseIdent(inputString);\n        const identNode = identParseResult.nodes[0];\n        inputString = identParseResult.remainingInput;\n        if (inputString[0] === FUNCTION_ARGUMENTS_FIRST_TOKEN) {\n          const {\n            nodes,\n            remainingInput\n          } = parseFunctionArguments(inputString);\n          terms.push({\n            type: 'function',\n            name: identNode,\n            arguments: nodes\n          });\n          inputString = remainingInput;\n        } else {\n          terms.push(identNode);\n        }\n      } else if (IS_OPERATOR_RE.test(inputString)) {\n        // Operators are always a single character, so just pluck them out:\n        terms.push({\n          type: 'operator',\n          value: inputString[0]\n        });\n        inputString = inputString.slice(1);\n      } else {\n        const {\n          nodes,\n          remainingInput\n        } = inputString[0] === HEX_FIRST_TOKEN ? parseHex(inputString) : parseNumber(inputString);\n        // The remaining string may not have had any meaningful content. Exit\n        // early if this is the case:\n        if (nodes.length === 0) {\n          break;\n        }\n        terms.push(nodes[0]);\n        inputString = remainingInput;\n      }\n    }\n    return {\n      nodes: [{\n        type: 'expression',\n        terms\n      }],\n      remainingInput: inputString\n    };\n  };\n})();\n/**\n * An ident is something like a function name or the keyword \"auto\".\n */\nconst parseIdent = (() => {\n  const NOT_IDENT_RE = /[^a-z0-9_\\-\\u0240-\\uffff]/i;\n  return inputString => {\n    const match = inputString.match(NOT_IDENT_RE);\n    const ident = match == null ? inputString : inputString.substr(0, match.index);\n    const remainingInput = match == null ? '' : inputString.substr(match.index);\n    return {\n      nodes: [{\n        type: 'ident',\n        value: ident\n      }],\n      remainingInput\n    };\n  };\n})();\n/**\n * Parses a number. A number value can be expressed with an integer or\n * non-integer syntax, and usually includes a unit (but does not strictly\n * require one for our purposes).\n */\nconst parseNumber = (() => {\n  // @see https://www.w3.org/TR/css-syntax/#number-token-diagram\n  const VALUE_RE = /[\\+\\-]?(\\d+[\\.]\\d+|\\d+|[\\.]\\d+)([eE][\\+\\-]?\\d+)?/;\n  const UNIT_RE = /^[a-z%]+/i;\n  const ALLOWED_UNITS = /^(m|mm|cm|rad|deg|[%])$/;\n  return inputString => {\n    const valueMatch = inputString.match(VALUE_RE);\n    const value = valueMatch == null ? '0' : valueMatch[0];\n    inputString = value == null ? inputString : inputString.slice(value.length);\n    const unitMatch = inputString.match(UNIT_RE);\n    let unit = unitMatch != null && unitMatch[0] !== '' ? unitMatch[0] : null;\n    const remainingInput = unitMatch == null ? inputString : inputString.slice(unit.length);\n    if (unit != null && !ALLOWED_UNITS.test(unit)) {\n      unit = null;\n    }\n    return {\n      nodes: [{\n        type: 'number',\n        number: parseFloat(value) || 0,\n        unit: unit\n      }],\n      remainingInput\n    };\n  };\n})();\n/**\n * Parses a hexadecimal-encoded color in 3, 6 or 8 digit form.\n */\nconst parseHex = (() => {\n  // TODO(cdata): right now we don't actually enforce the number of digits\n  const HEX_RE = /^[a-f0-9]*/i;\n  return inputString => {\n    inputString = inputString.slice(1).trim();\n    const hexMatch = inputString.match(HEX_RE);\n    const nodes = hexMatch == null ? [] : [{\n      type: 'hex',\n      value: hexMatch[0]\n    }];\n    return {\n      nodes,\n      remainingInput: hexMatch == null ? inputString : inputString.slice(hexMatch[0].length)\n    };\n  };\n})();\n/**\n * Parses arguments passed to a function invocation (e.g., the expressions\n * within a matched set of parens).\n */\nconst parseFunctionArguments = inputString => {\n  const expressionNodes = [];\n  // Consume the opening paren\n  inputString = inputString.slice(1).trim();\n  while (inputString.length) {\n    const expressionParseResult = parseExpression(inputString);\n    expressionNodes.push(expressionParseResult.nodes[0]);\n    inputString = expressionParseResult.remainingInput.trim();\n    if (inputString[0] === ',') {\n      inputString = inputString.slice(1).trim();\n    } else if (inputString[0] === ')') {\n      // Consume the closing paren and stop parsing\n      inputString = inputString.slice(1);\n      break;\n    }\n  }\n  return {\n    nodes: expressionNodes,\n    remainingInput: inputString\n  };\n};\nconst $visitedTypes = Symbol('visitedTypes');\n/**\n * An ASTWalker walks an array of ASTs such as the type produced by\n * parseExpressions and invokes a callback for a configured set of nodes that\n * the user wishes to \"visit\" during the walk.\n */\nexport class ASTWalker {\n  constructor(visitedTypes) {\n    this[$visitedTypes] = visitedTypes;\n  }\n  /**\n   * Walk the given set of ASTs, and invoke the provided callback for nodes that\n   * match the filtered set that the ASTWalker was constructed with.\n   */\n  walk(ast, callback) {\n    const remaining = ast.slice();\n    while (remaining.length) {\n      const next = remaining.shift();\n      if (this[$visitedTypes].indexOf(next.type) > -1) {\n        callback(next);\n      }\n      switch (next.type) {\n        case 'expression':\n          remaining.unshift(...next.terms);\n          break;\n        case 'function':\n          remaining.unshift(next.name, ...next.arguments);\n          break;\n      }\n    }\n  }\n}\nexport const ZERO = Object.freeze({\n  type: 'number',\n  number: 0,\n  unit: null\n});\n", "/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ZERO } from './parsers.js';\n/**\n * Ensures that a given number is expressed in radians. If the number is already\n * in radians, does nothing. If the value is in degrees, converts it to radians.\n * If the value has no specified unit, the unit is assumed to be radians. If the\n * value is not in radians or degrees, the value is resolved as 0 radians.\n *\n * Also accepts a second argument that is a default value to use if the input\n * numberNode number is NaN or Infinity.\n */\nexport const degreesToRadians = (numberNode, fallbackRadianValue = 0) => {\n  let {\n    number,\n    unit\n  } = numberNode;\n  if (!isFinite(number)) {\n    number = fallbackRadianValue;\n    unit = 'rad';\n  } else if (numberNode.unit === 'rad' || numberNode.unit == null) {\n    return numberNode;\n  }\n  const valueIsDegrees = unit === 'deg' && number != null;\n  const value = valueIsDegrees ? number : 0;\n  const radians = value * Math.PI / 180;\n  return {\n    type: 'number',\n    number: radians,\n    unit: 'rad'\n  };\n};\n/**\n * Ensures that a given number is expressed in degrees. If the number is already\n * in degrees, does nothing. If the value is in radians or has no specified\n * unit, converts it to degrees. If the value is not in radians or degrees, the\n * value is resolved as 0 degrees.\n *\n * Also accepts a second argument that is a default value to use if the input\n * numberNode number is NaN or Infinity.\n */\nexport const radiansToDegrees = (numberNode, fallbackDegreeValue = 0) => {\n  let {\n    number,\n    unit\n  } = numberNode;\n  if (!isFinite(number)) {\n    number = fallbackDegreeValue;\n    unit = 'deg';\n  } else if (numberNode.unit === 'deg') {\n    return numberNode;\n  }\n  const valueIsRadians = (unit === null || unit === 'rad') && number != null;\n  const value = valueIsRadians ? number : 0;\n  const degrees = value * 180 / Math.PI;\n  return {\n    type: 'number',\n    number: degrees,\n    unit: 'deg'\n  };\n};\n/**\n * Converts a given length to meters. Currently supported input units are\n * meters, centimeters and millimeters.\n *\n * Also accepts a second argument that is a default value to use if the input\n * numberNode number is NaN or Infinity.\n */\nexport const lengthToBaseMeters = (numberNode, fallbackMeterValue = 0) => {\n  let {\n    number,\n    unit\n  } = numberNode;\n  if (!isFinite(number)) {\n    number = fallbackMeterValue;\n    unit = 'm';\n  } else if (numberNode.unit === 'm') {\n    return numberNode;\n  }\n  let scale;\n  switch (unit) {\n    default:\n      scale = 1;\n      break;\n    case 'cm':\n      scale = 1 / 100;\n      break;\n    case 'mm':\n      scale = 1 / 1000;\n      break;\n  }\n  const value = scale * number;\n  return {\n    type: 'number',\n    number: value,\n    unit: 'm'\n  };\n};\n/**\n * Normalizes the unit of a given input number so that it is expressed in a\n * preferred unit. For length nodes, the return value will be expressed in\n * meters. For angle nodes, the return value will be expressed in radians.\n *\n * Also takes a fallback number that is used when the number value is not a\n * valid number or when the unit of the given number cannot be normalized.\n */\nexport const normalizeUnit = (() => {\n  const identity = node => node;\n  const unitNormalizers = {\n    'rad': identity,\n    'deg': degreesToRadians,\n    'm': identity,\n    'mm': lengthToBaseMeters,\n    'cm': lengthToBaseMeters\n  };\n  return (node, fallback = ZERO) => {\n    if (!isFinite(node.number)) {\n      node.number = fallback.number;\n      node.unit = fallback.unit;\n    }\n    const {\n      unit\n    } = node;\n    if (unit == null) {\n      return node;\n    }\n    const normalize = unitNormalizers[unit];\n    if (normalize == null) {\n      return fallback;\n    }\n    return normalize(node);\n  };\n})();\n", "/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _a, _b, _c;\nimport { normalizeUnit } from './conversions.js';\nimport { numberNode, ZERO } from './parsers.js';\nconst $evaluate = Symbol('evaluate');\nconst $lastValue = Symbol('lastValue');\n/**\n * An Evaluator is used to derive a computed style from part (or all) of a CSS\n * expression AST. This construct is particularly useful for complex ASTs\n * containing function calls such as calc, var and env. Such styles could be\n * costly to re-evaluate on every frame (and in some cases we may try to do\n * that). The Evaluator construct allows us to mark sub-trees of the AST as\n * constant, so that only the dynamic parts are re-evaluated. It also separates\n * one-time AST preparation work from work that necessarily has to happen upon\n * each evaluation.\n */\nexport class Evaluator {\n  constructor() {\n    this[_a] = null;\n  }\n  /**\n   * An Evaluatable is a NumberNode or an Evaluator that evaluates a NumberNode\n   * as the result of invoking its evaluate method. This is mainly used to\n   * ensure that CSS function nodes are cast to the corresponding Evaluators\n   * that will resolve the result of the function, but is also used to ensure\n   * that a percentage nested at arbitrary depth in the expression will always\n   * be evaluated against the correct basis.\n   */\n  static evaluatableFor(node, basis = ZERO) {\n    if (node instanceof Evaluator) {\n      return node;\n    }\n    if (node.type === 'number') {\n      if (node.unit === '%') {\n        return new PercentageEvaluator(node, basis);\n      }\n      return node;\n    }\n    switch (node.name.value) {\n      case 'calc':\n        return new CalcEvaluator(node, basis);\n      case 'env':\n        return new EnvEvaluator(node);\n    }\n    return ZERO;\n  }\n  /**\n   * If the input is an Evaluator, returns the result of evaluating it.\n   * Otherwise, returns the input.\n   *\n   * This is a helper to aide in resolving a NumberNode without conditionally\n   * checking if the Evaluatable is an Evaluator everywhere.\n   */\n  static evaluate(evaluatable) {\n    if (evaluatable instanceof Evaluator) {\n      return evaluatable.evaluate();\n    }\n    return evaluatable;\n  }\n  /**\n   * If the input is an Evaluator, returns the value of its isConstant property.\n   * Returns true for all other input values.\n   */\n  static isConstant(evaluatable) {\n    if (evaluatable instanceof Evaluator) {\n      return evaluatable.isConstant;\n    }\n    return true;\n  }\n  /**\n   * This method applies a set of structured intrinsic metadata to an evaluated\n   * result from a parsed CSS-like string of expressions. Intrinsics provide\n   * sufficient metadata (e.g., basis values, analogs for keywords) such that\n   * omitted values in the input string can be backfilled, and keywords can be\n   * converted to concrete numbers.\n   *\n   * The result of applying intrinsics is a tuple of NumberNode values whose\n   * units match the units used by the basis of the intrinsics.\n   *\n   * The following is a high-level description of how intrinsics are applied:\n   *\n   *  1. Determine the value of 'auto' for the current term\n   *  2. If there is no corresponding input value for this term, substitute the\n   *     'auto' value.\n   *  3. If the term is an IdentNode, treat it as a keyword and perform the\n   *     appropriate substitution.\n   *  4. If the term is still null, fallback to the 'auto' value\n   *  5. If the term is a percentage, apply it to the basis and return that\n   *     value\n   *  6. Normalize the unit of the term\n   *  7. If the term's unit does not match the basis unit, return the basis\n   *     value\n   *  8. Return the term as is\n   */\n  static applyIntrinsics(evaluated, intrinsics) {\n    const {\n      basis,\n      keywords\n    } = intrinsics;\n    const {\n      auto\n    } = keywords;\n    return basis.map((basisNode, index) => {\n      // Use an auto value if we have it, otherwise the auto value is the basis:\n      const autoSubstituteNode = auto[index] == null ? basisNode : auto[index];\n      // If the evaluated nodes do not have a node at the current\n      // index, fallback to the \"auto\" substitute right away:\n      let evaluatedNode = evaluated[index] ? evaluated[index] : autoSubstituteNode;\n      // Any ident node is considered a keyword:\n      if (evaluatedNode.type === 'ident') {\n        const keyword = evaluatedNode.value;\n        // Substitute any keywords for concrete values first:\n        if (keyword in keywords) {\n          evaluatedNode = keywords[keyword][index];\n        }\n      }\n      // If we don't have a NumberNode at this point, fall back to whatever\n      // is specified for auto:\n      if (evaluatedNode == null || evaluatedNode.type === 'ident') {\n        evaluatedNode = autoSubstituteNode;\n      }\n      // For percentages, we always apply the percentage to the basis value:\n      if (evaluatedNode.unit === '%') {\n        return numberNode(evaluatedNode.number / 100 * basisNode.number, basisNode.unit);\n      }\n      // Otherwise, normalize whatever we have:\n      evaluatedNode = normalizeUnit(evaluatedNode, basisNode);\n      // If the normalized units do not match, return the basis as a fallback:\n      if (evaluatedNode.unit !== basisNode.unit) {\n        return basisNode;\n      }\n      // Finally, return the evaluated node with intrinsics applied:\n      return evaluatedNode;\n    });\n  }\n  /**\n   * If true, the Evaluator will only evaluate its AST one time. If false, the\n   * Evaluator will re-evaluate the AST each time that the public evaluate\n   * method is invoked.\n   */\n  get isConstant() {\n    return false;\n  }\n  /**\n   * Evaluate the Evaluator and return the result. If the Evaluator is constant,\n   * the corresponding AST will only be evaluated once, and the result of\n   * evaluating it the first time will be returned on all subsequent\n   * evaluations.\n   */\n  evaluate() {\n    if (!this.isConstant || this[$lastValue] == null) {\n      this[$lastValue] = this[$evaluate]();\n    }\n    return this[$lastValue];\n  }\n}\n_a = $lastValue;\nconst $percentage = Symbol('percentage');\nconst $basis = Symbol('basis');\n/**\n * A PercentageEvaluator scales a given basis value by a given percentage value.\n * The evaluated result is always considered to be constant.\n */\nexport class PercentageEvaluator extends Evaluator {\n  constructor(percentage, basis) {\n    super();\n    this[$percentage] = percentage;\n    this[$basis] = basis;\n  }\n  get isConstant() {\n    return true;\n  }\n  [$evaluate]() {\n    return numberNode(this[$percentage].number / 100 * this[$basis].number, this[$basis].unit);\n  }\n}\nconst $identNode = Symbol('identNode');\n/**\n * Evaluator for CSS-like env() functions. Currently, only one environment\n * variable is accepted as an argument for such functions: window-scroll-y.\n *\n * The env() Evaluator is explicitly dynamic because it always refers to\n * external state that changes as the user scrolls, so it should always be\n * re-evaluated to ensure we get the most recent value.\n *\n * Some important notes about this feature include:\n *\n *  - There is no such thing as a \"window-scroll-y\" CSS environment variable in\n *    any stable browser at the time that this comment is being written.\n *  - The actual CSS env() function accepts a second argument as a fallback for\n *    the case that the specified first argument isn't set; our syntax does not\n *    support this second argument.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/env\n */\nexport class EnvEvaluator extends Evaluator {\n  constructor(envFunction) {\n    super();\n    this[_b] = null;\n    const identNode = envFunction.arguments.length ? envFunction.arguments[0].terms[0] : null;\n    if (identNode != null && identNode.type === 'ident') {\n      this[$identNode] = identNode;\n    }\n  }\n  get isConstant() {\n    return false;\n  }\n  [(_b = $identNode, $evaluate)]() {\n    if (this[$identNode] != null) {\n      switch (this[$identNode].value) {\n        case 'window-scroll-y':\n          const verticalScrollPosition = window.pageYOffset;\n          const verticalScrollMax = Math.max(document.body.scrollHeight, document.body.offsetHeight, document.documentElement.clientHeight, document.documentElement.scrollHeight, document.documentElement.offsetHeight);\n          const scrollY = verticalScrollPosition / (verticalScrollMax - window.innerHeight) || 0;\n          return {\n            type: 'number',\n            number: scrollY,\n            unit: null\n          };\n      }\n    }\n    return ZERO;\n  }\n}\nconst IS_MULTIPLICATION_RE = /[\\*\\/]/;\nconst $evaluator = Symbol('evaluator');\n/**\n * Evaluator for CSS-like calc() functions. Our implementation of calc()\n * evaluation currently support nested function calls, an unlimited number of\n * terms, and all four algebraic operators (+, -, * and /).\n *\n * The Evaluator is marked as constant unless the calc expression contains an\n * internal env expression at any depth, in which case it will be marked as\n * dynamic.\n *\n * @see https://www.w3.org/TR/css-values-3/#calc-syntax\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/calc\n */\nexport class CalcEvaluator extends Evaluator {\n  constructor(calcFunction, basis = ZERO) {\n    super();\n    this[_c] = null;\n    if (calcFunction.arguments.length !== 1) {\n      return;\n    }\n    const terms = calcFunction.arguments[0].terms.slice();\n    const secondOrderTerms = [];\n    while (terms.length) {\n      const term = terms.shift();\n      if (secondOrderTerms.length > 0) {\n        const previousTerm = secondOrderTerms[secondOrderTerms.length - 1];\n        if (previousTerm.type === 'operator' && IS_MULTIPLICATION_RE.test(previousTerm.value)) {\n          const operator = secondOrderTerms.pop();\n          const leftValue = secondOrderTerms.pop();\n          if (leftValue == null) {\n            return;\n          }\n          secondOrderTerms.push(new OperatorEvaluator(operator, Evaluator.evaluatableFor(leftValue, basis), Evaluator.evaluatableFor(term, basis)));\n          continue;\n        }\n      }\n      secondOrderTerms.push(term.type === 'operator' ? term : Evaluator.evaluatableFor(term, basis));\n    }\n    while (secondOrderTerms.length > 2) {\n      const [left, operator, right] = secondOrderTerms.splice(0, 3);\n      if (operator.type !== 'operator') {\n        return;\n      }\n      secondOrderTerms.unshift(new OperatorEvaluator(operator, Evaluator.evaluatableFor(left, basis), Evaluator.evaluatableFor(right, basis)));\n    }\n    // There should only be one combined evaluator at this point:\n    if (secondOrderTerms.length === 1) {\n      this[$evaluator] = secondOrderTerms[0];\n    }\n  }\n  get isConstant() {\n    return this[$evaluator] == null || Evaluator.isConstant(this[$evaluator]);\n  }\n  [(_c = $evaluator, $evaluate)]() {\n    return this[$evaluator] != null ? Evaluator.evaluate(this[$evaluator]) : ZERO;\n  }\n}\nconst $operator = Symbol('operator');\nconst $left = Symbol('left');\nconst $right = Symbol('right');\n/**\n * An Evaluator for the operators found inside CSS calc() functions.\n * The evaluator accepts an operator and left/right operands. The operands can\n * be any valid expression term typically allowed inside a CSS calc function.\n *\n * As detail of this implementation, the only supported unit types are angles\n * expressed as radians or degrees, and lengths expressed as meters, centimeters\n * or millimeters.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/calc\n */\nexport class OperatorEvaluator extends Evaluator {\n  constructor(operator, left, right) {\n    super();\n    this[$operator] = operator;\n    this[$left] = left;\n    this[$right] = right;\n  }\n  get isConstant() {\n    return Evaluator.isConstant(this[$left]) && Evaluator.isConstant(this[$right]);\n  }\n  [$evaluate]() {\n    const leftNode = normalizeUnit(Evaluator.evaluate(this[$left]));\n    const rightNode = normalizeUnit(Evaluator.evaluate(this[$right]));\n    const {\n      number: leftValue,\n      unit: leftUnit\n    } = leftNode;\n    const {\n      number: rightValue,\n      unit: rightUnit\n    } = rightNode;\n    // Disallow operations for mismatched normalized units e.g., m and rad:\n    if (rightUnit != null && leftUnit != null && rightUnit != leftUnit) {\n      return ZERO;\n    }\n    // NOTE(cdata): rules for calc type checking are defined here\n    // https://drafts.csswg.org/css-values-3/#calc-type-checking\n    // This is a simplification and may not hold up once we begin to support\n    // additional unit types:\n    const unit = leftUnit || rightUnit;\n    let value;\n    switch (this[$operator].value) {\n      case '+':\n        value = leftValue + rightValue;\n        break;\n      case '-':\n        value = leftValue - rightValue;\n        break;\n      case '/':\n        value = leftValue / rightValue;\n        break;\n      case '*':\n        value = leftValue * rightValue;\n        break;\n      default:\n        return ZERO;\n    }\n    return {\n      type: 'number',\n      number: value,\n      unit\n    };\n  }\n}\nconst $evaluatables = Symbol('evaluatables');\nconst $intrinsics = Symbol('intrinsics');\n/**\n * A VectorEvaluator evaluates a series of numeric terms that usually represent\n * a data structure such as a multi-dimensional vector or a spherical\n *\n * The form of the evaluator's result is determined by the Intrinsics that are\n * given to it when it is constructed. For example, spherical intrinsics would\n * establish two angle terms and a length term, so the result of evaluating the\n * evaluator that is configured with spherical intrinsics is a three element\n * array where the first two elements represent angles in radians and the third\n * element representing a length in meters.\n */\nexport class StyleEvaluator extends Evaluator {\n  constructor(expressions, intrinsics) {\n    super();\n    this[$intrinsics] = intrinsics;\n    const firstExpression = expressions[0];\n    const terms = firstExpression != null ? firstExpression.terms : [];\n    this[$evaluatables] = intrinsics.basis.map((basisNode, index) => {\n      const term = terms[index];\n      if (term == null) {\n        return {\n          type: 'ident',\n          value: 'auto'\n        };\n      }\n      if (term.type === 'ident') {\n        return term;\n      }\n      return Evaluator.evaluatableFor(term, basisNode);\n    });\n  }\n  get isConstant() {\n    for (const evaluatable of this[$evaluatables]) {\n      if (!Evaluator.isConstant(evaluatable)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  [$evaluate]() {\n    const evaluated = this[$evaluatables].map(evaluatable => Evaluator.evaluate(evaluatable));\n    return Evaluator.applyIntrinsics(evaluated, this[$intrinsics]).map(numberNode => numberNode.number);\n  }\n}\n", "/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _a, _b, _c, _d;\nimport { ASTWalker } from './parsers.js';\nconst $instances = Symbol('instances');\nconst $activateListener = Symbol('activateListener');\nconst $deactivateListener = Symbol('deactivateListener');\nconst $notifyInstances = Symbol('notifyInstances');\nconst $notify = Symbol('notify');\nconst $scrollCallback = Symbol('callback');\n/**\n * This internal helper is intended to work as a reference-counting manager of\n * scroll event listeners. Only one scroll listener is ever registered for all\n * instances of the class, and when the last ScrollObserver \"disconnects\", that\n * event listener is removed. This spares us from thrashing\n * the {add,remove}EventListener API (the binding cost of these methods has been\n * known to show up in performance analyses) as well as potential memory leaks.\n */\nclass ScrollObserver {\n  static [$notifyInstances]() {\n    for (const instance of ScrollObserver[$instances]) {\n      instance[$notify]();\n    }\n  }\n  static [(_a = $instances, $activateListener)]() {\n    window.addEventListener('scroll', this[$notifyInstances], {\n      passive: true\n    });\n  }\n  static [$deactivateListener]() {\n    window.removeEventListener('scroll', this[$notifyInstances]);\n  }\n  constructor(callback) {\n    this[$scrollCallback] = callback;\n  }\n  /**\n   * Listen for scroll events. The configured callback (passed to the\n   * constructor) will be invoked for subsequent global scroll events.\n   */\n  observe() {\n    if (ScrollObserver[$instances].size === 0) {\n      ScrollObserver[$activateListener]();\n    }\n    ScrollObserver[$instances].add(this);\n  }\n  /**\n   * Stop listening for scroll events.\n   */\n  disconnect() {\n    ScrollObserver[$instances].delete(this);\n    if (ScrollObserver[$instances].size === 0) {\n      ScrollObserver[$deactivateListener]();\n    }\n  }\n  [$notify]() {\n    this[$scrollCallback]();\n  }\n}\nScrollObserver[_a] = new Set();\nconst $computeStyleCallback = Symbol('computeStyleCallback');\nconst $astWalker = Symbol('astWalker');\nconst $dependencies = Symbol('dependencies');\nconst $onScroll = Symbol('onScroll');\n/**\n * The StyleEffector is configured with a callback that will be invoked at the\n * optimal time that some array of CSS expression ASTs ought to be evaluated.\n *\n * For example, our CSS-like expression syntax supports usage of the env()\n * function to incorporate the current top-level scroll position into a CSS\n * expression: env(window-scroll-y).\n *\n * This \"environment variable\" will change dynamically as the user scrolls the\n * page. If an AST contains such a usage of env(), we would have to evaluate the\n * AST on every frame in order to be sure that the computed style stays up to\n * date.\n *\n * The StyleEffector spares us from evaluating the expressions on every frame by\n * correlating specific parts of an AST with observers of the external effects\n * that they refer to (if any). So, if the AST contains env(window-scroll-y),\n * the StyleEffector manages the lifetime of a global scroll event listener and\n * notifies the user at the optimal time to evaluate the computed style.\n */\nexport class StyleEffector {\n  constructor(callback) {\n    this[_b] = {};\n    this[_c] = new ASTWalker(['function']);\n    this[_d] = () => {\n      this[$computeStyleCallback]({\n        relatedState: 'window-scroll'\n      });\n    };\n    this[$computeStyleCallback] = callback;\n  }\n  /**\n   * Sets the expressions that govern when the StyleEffector callback will be\n   * invoked.\n   */\n  observeEffectsFor(ast) {\n    const newDependencies = {};\n    const oldDependencies = this[$dependencies];\n    this[$astWalker].walk(ast, functionNode => {\n      const {\n        name\n      } = functionNode;\n      const firstArgument = functionNode.arguments[0];\n      const firstTerm = firstArgument.terms[0];\n      if (name.value !== 'env' || firstTerm == null || firstTerm.type !== 'ident') {\n        return;\n      }\n      switch (firstTerm.value) {\n        case 'window-scroll-y':\n          if (newDependencies['window-scroll'] == null) {\n            const observer = 'window-scroll' in oldDependencies ? oldDependencies['window-scroll'] : new ScrollObserver(this[$onScroll]);\n            observer.observe();\n            delete oldDependencies['window-scroll'];\n            newDependencies['window-scroll'] = observer;\n          }\n          break;\n      }\n    });\n    for (const environmentState in oldDependencies) {\n      const observer = oldDependencies[environmentState];\n      observer.disconnect();\n    }\n    this[$dependencies] = newDependencies;\n  }\n  /**\n   * Disposes of the StyleEffector by disconnecting all observers of external\n   * effects.\n   */\n  dispose() {\n    for (const environmentState in this[$dependencies]) {\n      const observer = this[$dependencies][environmentState];\n      observer.disconnect();\n    }\n  }\n}\n_b = $dependencies, _c = $astWalker, _d = $onScroll;\n", "/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { StyleEvaluator } from './styles/evaluators.js';\nimport { parseExpressions } from './styles/parsers.js';\nimport { StyleEffector } from './styles/style-effector.js';\n/**\n * The @style decorator is responsible for coordinating the conversion of a\n * CSS-like string property value into numbers that can be applied to\n * lower-level constructs. It also can optionally manage the lifecycle of a\n * StyleEffector which allows automatic updates for styles that use env() or\n * var() functions.\n *\n * The decorator is configured with Intrinsics and the property key for a\n * method that handles updates. The named update handler is invoked with the\n * result of parsing and evaluating the raw property string value. The format of\n * the evaluated result is derived from the basis of the configured Intrinsics,\n * and is always an array of numbers of fixed length.\n *\n * NOTE: This decorator depends on the property updating mechanism defined by\n * UpdatingElement as exported by the lit-element module. That means it *must*\n * be used in conjunction with the @property decorator, or equivalent\n * JavaScript.\n *\n * Supported configurations are:\n *\n *  - `intrinsics`: An Intrinsics struct that describes how to interpret a\n * serialized style attribute. For more detail on intrinsics see\n * ./styles/evaluators.ts\n *  - `updateHandler`: A string or Symbol that is the key of a method to be\n * invoked with the result of parsing and evaluating a serialized style string.\n *  - `observeEffects`: Optional, if set to true then styles that use env() will\n * cause their update handlers to be invoked every time the corresponding\n * environment variable changes (even if the style attribute itself remains\n * static).\n */\nexport const style = config => {\n  const observeEffects = config.observeEffects || false;\n  const getIntrinsics = config.intrinsics instanceof Function ? config.intrinsics : () => config.intrinsics;\n  return (proto, propertyName) => {\n    const originalUpdated = proto.updated;\n    const originalConnectedCallback = proto.connectedCallback;\n    const originalDisconnectedCallback = proto.disconnectedCallback;\n    const $styleEffector = Symbol(`${propertyName}StyleEffector`);\n    const $styleEvaluator = Symbol(`${propertyName}StyleEvaluator`);\n    const $updateEvaluator = Symbol(`${propertyName}UpdateEvaluator`);\n    const $evaluateAndSync = Symbol(`${propertyName}EvaluateAndSync`);\n    Object.defineProperties(proto, {\n      [$styleEffector]: {\n        value: null,\n        writable: true\n      },\n      [$styleEvaluator]: {\n        value: null,\n        writable: true\n      },\n      [$updateEvaluator]: {\n        value: function () {\n          const ast = parseExpressions(this[propertyName]);\n          this[$styleEvaluator] = new StyleEvaluator(ast, getIntrinsics(this));\n          if (this[$styleEffector] == null && observeEffects) {\n            this[$styleEffector] = new StyleEffector(() => this[$evaluateAndSync]());\n          }\n          if (this[$styleEffector] != null) {\n            this[$styleEffector].observeEffectsFor(ast);\n          }\n        }\n      },\n      [$evaluateAndSync]: {\n        value: function () {\n          if (this[$styleEvaluator] == null) {\n            return;\n          }\n          const result = this[$styleEvaluator].evaluate();\n          // @see https://github.com/microsoft/TypeScript/pull/30769\n          // @see https://github.com/Microsoft/TypeScript/issues/1863\n          this[config.updateHandler](result);\n        }\n      },\n      updated: {\n        value: function (changedProperties) {\n          // Always invoke updates to styles first. This gives a class that\n          // uses this decorator the opportunity to override the effect, or\n          // respond to it, in its own implementation of `updated`.\n          if (changedProperties.has(propertyName)) {\n            this[$updateEvaluator]();\n            this[$evaluateAndSync]();\n          }\n          originalUpdated.call(this, changedProperties);\n        }\n      },\n      connectedCallback: {\n        value: function () {\n          originalConnectedCallback.call(this);\n          this.requestUpdate(propertyName, this[propertyName]);\n        }\n      },\n      disconnectedCallback: {\n        value: function () {\n          originalDisconnectedCallback.call(this);\n          if (this[$styleEffector] != null) {\n            this[$styleEffector].dispose();\n            this[$styleEffector] = null;\n          }\n        }\n      }\n    });\n  };\n};\n", "/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { clamp } from '../utilities.js';\n// Adapted from https://gist.github.com/gre/1650294\nexport const easeInOutQuad = t => t < .5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\n/**\n * Creates a TimingFunction that uses a given ease to interpolate between\n * two configured number values.\n */\nexport const interpolate = (start, end, ease = easeInOutQuad) => time => start + (end - start) * ease(time);\n/**\n * Creates a TimingFunction that interpolates through a weighted list\n * of other TimingFunctions (\"tracks\"). Tracks are interpolated in order, and\n * allocated a percentage of the total time based on their relative weight.\n */\nexport const sequence = (tracks, weights) => {\n  const cumulativeSum = sum => value => sum += value;\n  const times = weights.map(cumulativeSum(0));\n  return time => {\n    time = clamp(time, 0, 1);\n    time *= times[times.length - 1];\n    const i = times.findIndex(val => val >= time);\n    const start = i < 1 ? 0 : times[i - 1];\n    const end = times[i];\n    return tracks[i]((time - start) / (end - start));\n  };\n};\n/**\n * Creates a \"timeline\" TimingFunction out of an initial value and a series of\n * Keyframes. The timeline function accepts value from 0-1 and returns the\n * current value based on keyframe interpolation across the total number of\n * frames. Frames are only used to indicate the relative length of each keyframe\n * transition, so interpolated values will be computed for fractional frames.\n */\nexport const timeline = path => {\n  const tracks = [];\n  const weights = [];\n  let lastValue = path.initialValue;\n  for (let i = 0; i < path.keyframes.length; ++i) {\n    const keyframe = path.keyframes[i];\n    const {\n      value,\n      frames\n    } = keyframe;\n    const ease = keyframe.ease || easeInOutQuad;\n    const track = interpolate(lastValue, value, ease);\n    tracks.push(track);\n    weights.push(frames);\n    lastValue = value;\n  }\n  return sequence(tracks, weights);\n};\n", "/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { property } from 'lit/decorators.js';\nimport { Spherical, Vector3 } from 'three';\nimport { style } from '../decorators.js';\nimport { $ariaLabel, $container, $getModelIsVisible, $loadedTime, $needsRender, $onModelLoad, $onResize, $renderer, $scene, $tick, $updateStatus, $userInputElement, toVector3D } from '../model-viewer-base.js';\nimport { degreesToRadians, normalizeUnit } from '../styles/conversions.js';\nimport { StyleEvaluator } from '../styles/evaluators.js';\nimport { numberNode, parseExpressions } from '../styles/parsers.js';\nimport { DECAY_MILLISECONDS } from '../three-components/Damper.js';\nimport { ChangeSource, SmoothControls } from '../three-components/SmoothControls.js';\nimport { timeline } from '../utilities/animation.js';\n// NOTE(cdata): The following \"animation\" timing functions are deliberately\n// being used in favor of CSS animations. In Safari 12.1 and 13, CSS animations\n// would cause the interaction prompt to glitch unexpectedly\n// @see https://github.com/google/model-viewer/issues/839\nconst PROMPT_ANIMATION_TIME = 5000;\n// For timing purposes, a \"frame\" is a timing agnostic relative unit of time\n// and a \"value\" is a target value for the Frame.\nconst wiggle = timeline({\n  initialValue: 0,\n  keyframes: [{\n    frames: 5,\n    value: -1\n  }, {\n    frames: 1,\n    value: -1\n  }, {\n    frames: 8,\n    value: 1\n  }, {\n    frames: 1,\n    value: 1\n  }, {\n    frames: 5,\n    value: 0\n  }, {\n    frames: 18,\n    value: 0\n  }]\n});\nconst fade = timeline({\n  initialValue: 0,\n  keyframes: [{\n    frames: 1,\n    value: 1\n  }, {\n    frames: 5,\n    value: 1\n  }, {\n    frames: 1,\n    value: 0\n  }, {\n    frames: 6,\n    value: 0\n  }]\n});\nexport const DEFAULT_FOV_DEG = 30;\nexport const DEFAULT_MIN_FOV_DEG = 12;\nexport const DEFAULT_CAMERA_ORBIT = '0deg 75deg 105%';\nconst DEFAULT_CAMERA_TARGET = 'auto auto auto';\nconst DEFAULT_FIELD_OF_VIEW = 'auto';\nconst MINIMUM_RADIUS_RATIO = 2.2;\nconst AZIMUTHAL_QUADRANT_LABELS = ['front', 'right', 'back', 'left'];\nconst POLAR_TRIENT_LABELS = ['upper-', '', 'lower-'];\nexport const DEFAULT_INTERACTION_PROMPT_THRESHOLD = 3000;\nexport const INTERACTION_PROMPT = '. Use mouse, touch or arrow keys to move.';\nexport const InteractionPromptStrategy = {\n  AUTO: 'auto',\n  NONE: 'none'\n};\nexport const InteractionPromptStyle = {\n  BASIC: 'basic',\n  WIGGLE: 'wiggle'\n};\nexport const TouchAction = {\n  PAN_Y: 'pan-y',\n  PAN_X: 'pan-x',\n  NONE: 'none'\n};\nexport const fieldOfViewIntrinsics = () => {\n  return {\n    basis: [degreesToRadians(numberNode(DEFAULT_FOV_DEG, 'deg'))],\n    keywords: {\n      auto: [null]\n    }\n  };\n};\nconst minFieldOfViewIntrinsics = () => {\n  return {\n    basis: [degreesToRadians(numberNode(DEFAULT_MIN_FOV_DEG, 'deg'))],\n    keywords: {\n      auto: [null]\n    }\n  };\n};\nexport const cameraOrbitIntrinsics = (() => {\n  const defaultTerms = parseExpressions(DEFAULT_CAMERA_ORBIT)[0].terms;\n  const theta = normalizeUnit(defaultTerms[0]);\n  const phi = normalizeUnit(defaultTerms[1]);\n  return element => {\n    const radius = element[$scene].idealCameraDistance();\n    return {\n      basis: [theta, phi, numberNode(radius, 'm')],\n      keywords: {\n        auto: [null, null, numberNode(105, '%')]\n      }\n    };\n  };\n})();\nconst minCameraOrbitIntrinsics = element => {\n  const radius = MINIMUM_RADIUS_RATIO * element[$scene].boundingSphere.radius;\n  return {\n    basis: [numberNode(-Infinity, 'rad'), numberNode(0, 'rad'), numberNode(radius, 'm')],\n    keywords: {\n      auto: [null, null, null]\n    }\n  };\n};\nconst maxCameraOrbitIntrinsics = element => {\n  const orbitIntrinsics = cameraOrbitIntrinsics(element);\n  const evaluator = new StyleEvaluator([], orbitIntrinsics);\n  const defaultRadius = evaluator.evaluate()[2];\n  return {\n    basis: [numberNode(Infinity, 'rad'), numberNode(Math.PI, 'rad'), numberNode(defaultRadius, 'm')],\n    keywords: {\n      auto: [null, null, null]\n    }\n  };\n};\nexport const cameraTargetIntrinsics = element => {\n  const center = element[$scene].boundingBox.getCenter(new Vector3());\n  return {\n    basis: [numberNode(center.x, 'm'), numberNode(center.y, 'm'), numberNode(center.z, 'm')],\n    keywords: {\n      auto: [null, null, null]\n    }\n  };\n};\nconst HALF_PI = Math.PI / 2.0;\nconst THIRD_PI = Math.PI / 3.0;\nconst QUARTER_PI = HALF_PI / 2.0;\nconst TAU = 2.0 * Math.PI;\nexport const $controls = Symbol('controls');\nexport const $panElement = Symbol('panElement');\nexport const $promptElement = Symbol('promptElement');\nexport const $promptAnimatedContainer = Symbol('promptAnimatedContainer');\nexport const $fingerAnimatedContainers = Symbol('fingerAnimatedContainers');\nconst $deferInteractionPrompt = Symbol('deferInteractionPrompt');\nconst $updateAria = Symbol('updateAria');\nconst $a11y = Symbol('a11y');\nconst $updateA11y = Symbol('updateA11y');\nconst $updateCameraForRadius = Symbol('updateCameraForRadius');\nconst $cancelPrompts = Symbol('cancelPrompts');\nconst $onChange = Symbol('onChange');\nconst $onPointerChange = Symbol('onPointerChange');\nconst $waitingToPromptUser = Symbol('waitingToPromptUser');\nconst $userHasInteracted = Symbol('userHasInteracted');\nconst $promptElementVisibleTime = Symbol('promptElementVisibleTime');\nconst $lastPromptOffset = Symbol('lastPromptOffset');\nconst $cancellationSource = Symbol('cancellationSource');\nconst $lastSpherical = Symbol('lastSpherical');\nconst $jumpCamera = Symbol('jumpCamera');\nconst $initialized = Symbol('initialized');\nconst $maintainThetaPhi = Symbol('maintainThetaPhi');\nconst $syncCameraOrbit = Symbol('syncCameraOrbit');\nconst $syncFieldOfView = Symbol('syncFieldOfView');\nconst $syncCameraTarget = Symbol('syncCameraTarget');\nconst $syncMinCameraOrbit = Symbol('syncMinCameraOrbit');\nconst $syncMaxCameraOrbit = Symbol('syncMaxCameraOrbit');\nconst $syncMinFieldOfView = Symbol('syncMinFieldOfView');\nconst $syncMaxFieldOfView = Symbol('syncMaxFieldOfView');\nexport const ControlsMixin = ModelViewerElement => {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t;\n  class ControlsModelViewerElement extends ModelViewerElement {\n    constructor() {\n      super(...arguments);\n      this.cameraControls = false;\n      this.cameraOrbit = DEFAULT_CAMERA_ORBIT;\n      this.cameraTarget = DEFAULT_CAMERA_TARGET;\n      this.fieldOfView = DEFAULT_FIELD_OF_VIEW;\n      this.minCameraOrbit = 'auto';\n      this.maxCameraOrbit = 'auto';\n      this.minFieldOfView = 'auto';\n      this.maxFieldOfView = 'auto';\n      this.interactionPromptThreshold = DEFAULT_INTERACTION_PROMPT_THRESHOLD;\n      this.interactionPrompt = InteractionPromptStrategy.AUTO;\n      this.interactionPromptStyle = InteractionPromptStyle.WIGGLE;\n      this.orbitSensitivity = 1;\n      this.zoomSensitivity = 1;\n      this.panSensitivity = 1;\n      this.touchAction = TouchAction.NONE;\n      this.disableZoom = false;\n      this.disablePan = false;\n      this.disableTap = false;\n      this.interpolationDecay = DECAY_MILLISECONDS;\n      this.a11y = null;\n      this[_a] = this.shadowRoot.querySelector('.interaction-prompt');\n      this[_b] = this.shadowRoot.querySelector('#prompt');\n      this[_c] = [this.shadowRoot.querySelector('#finger0'), this.shadowRoot.querySelector('#finger1')];\n      this[_d] = this.shadowRoot.querySelector('.pan-target');\n      this[_e] = 0;\n      this[_f] = Infinity;\n      this[_g] = false;\n      this[_h] = false;\n      this[_j] = ChangeSource.AUTOMATIC;\n      this[_k] = new SmoothControls(this[$scene].camera, this[$userInputElement], this[$scene]);\n      this[_l] = new Spherical();\n      this[_m] = false;\n      this[_o] = false;\n      this[_p] = false;\n      this[_q] = {};\n      this[_r] = () => {\n        const source = this[$controls].changeSource;\n        this[$cancellationSource] = source;\n        if (source === ChangeSource.USER_INTERACTION) {\n          this[$userHasInteracted] = true;\n          this[$deferInteractionPrompt]();\n        }\n      };\n      this[_s] = () => {\n        this[$updateAria]();\n        this[$needsRender]();\n        const source = this[$controls].changeSource;\n        this.dispatchEvent(new CustomEvent('camera-change', {\n          detail: {\n            source\n          }\n        }));\n      };\n      this[_t] = event => {\n        this[$container].classList.toggle('pointer-tumbling', event.type === 'pointer-change-start');\n      };\n    }\n    get inputSensitivity() {\n      return this[$controls].inputSensitivity;\n    }\n    set inputSensitivity(value) {\n      this[$controls].inputSensitivity = value;\n    }\n    getCameraOrbit() {\n      const {\n        theta,\n        phi,\n        radius\n      } = this[$lastSpherical];\n      return {\n        theta,\n        phi,\n        radius,\n        toString() {\n          return `${this.theta}rad ${this.phi}rad ${this.radius}m`;\n        }\n      };\n    }\n    getCameraTarget() {\n      return toVector3D(this[$renderer].isPresenting ? this[$renderer].arRenderer.target : this[$scene].getDynamicTarget());\n    }\n    getFieldOfView() {\n      return this[$controls].getFieldOfView();\n    }\n    // Provided so user code does not have to parse these from attributes.\n    getMinimumFieldOfView() {\n      return this[$controls].options.minimumFieldOfView;\n    }\n    getMaximumFieldOfView() {\n      return this[$controls].options.maximumFieldOfView;\n    }\n    getIdealAspect() {\n      return this[$scene].idealAspect;\n    }\n    jumpCameraToGoal() {\n      this[$jumpCamera] = true;\n      this.requestUpdate($jumpCamera, false);\n    }\n    resetInteractionPrompt() {\n      this[$lastPromptOffset] = 0;\n      this[$promptElementVisibleTime] = Infinity;\n      this[$userHasInteracted] = false;\n      this[$waitingToPromptUser] = this.interactionPrompt === InteractionPromptStrategy.AUTO && this.cameraControls;\n    }\n    zoom(keyPresses) {\n      const event = new WheelEvent('wheel', {\n        deltaY: -30 * keyPresses\n      });\n      this[$userInputElement].dispatchEvent(event);\n    }\n    connectedCallback() {\n      super.connectedCallback();\n      this[$controls].addEventListener('user-interaction', this[$cancelPrompts]);\n      this[$controls].addEventListener('pointer-change-start', this[$onPointerChange]);\n      this[$controls].addEventListener('pointer-change-end', this[$onPointerChange]);\n    }\n    disconnectedCallback() {\n      super.disconnectedCallback();\n      this[$controls].removeEventListener('user-interaction', this[$cancelPrompts]);\n      this[$controls].removeEventListener('pointer-change-start', this[$onPointerChange]);\n      this[$controls].removeEventListener('pointer-change-end', this[$onPointerChange]);\n    }\n    updated(changedProperties) {\n      super.updated(changedProperties);\n      const controls = this[$controls];\n      const scene = this[$scene];\n      if (changedProperties.has('cameraControls')) {\n        if (this.cameraControls) {\n          controls.enableInteraction();\n          if (this.interactionPrompt === InteractionPromptStrategy.AUTO) {\n            this[$waitingToPromptUser] = true;\n          }\n        } else {\n          controls.disableInteraction();\n          this[$deferInteractionPrompt]();\n        }\n        this[$userInputElement].setAttribute('aria-label', this[$ariaLabel]);\n      }\n      if (changedProperties.has('disableZoom')) {\n        controls.disableZoom = this.disableZoom;\n      }\n      if (changedProperties.has('disablePan')) {\n        controls.enablePan = !this.disablePan;\n      }\n      if (changedProperties.has('disableTap')) {\n        controls.enableTap = !this.disableTap;\n      }\n      if (changedProperties.has('interactionPrompt') || changedProperties.has('cameraControls') || changedProperties.has('src')) {\n        if (this.interactionPrompt === InteractionPromptStrategy.AUTO && this.cameraControls && !this[$userHasInteracted]) {\n          this[$waitingToPromptUser] = true;\n        } else {\n          this[$deferInteractionPrompt]();\n        }\n      }\n      if (changedProperties.has('interactionPromptStyle')) {\n        this[$promptAnimatedContainer].style.opacity = this.interactionPromptStyle == InteractionPromptStyle.BASIC ? '1' : '0';\n      }\n      if (changedProperties.has('touchAction')) {\n        const touchAction = this.touchAction;\n        controls.applyOptions({\n          touchAction\n        });\n        controls.updateTouchActionStyle();\n      }\n      if (changedProperties.has('orbitSensitivity')) {\n        controls.orbitSensitivity = this.orbitSensitivity;\n      }\n      if (changedProperties.has('zoomSensitivity')) {\n        controls.zoomSensitivity = this.zoomSensitivity;\n      }\n      if (changedProperties.has('panSensitivity')) {\n        controls.panSensitivity = this.panSensitivity;\n      }\n      if (changedProperties.has('interpolationDecay')) {\n        controls.setDamperDecayTime(this.interpolationDecay);\n        scene.setTargetDamperDecayTime(this.interpolationDecay);\n      }\n      if (changedProperties.has('a11y')) {\n        this[$updateA11y]();\n      }\n      if (this[$jumpCamera] === true) {\n        Promise.resolve().then(() => {\n          controls.jumpToGoal();\n          scene.jumpToGoal();\n          this[$onChange]();\n          this[$jumpCamera] = false;\n        });\n      }\n    }\n    async updateFraming() {\n      const scene = this[$scene];\n      const oldFramedFoV = scene.adjustedFoV(scene.framedFoVDeg);\n      await scene.updateFraming();\n      const newFramedFoV = scene.adjustedFoV(scene.framedFoVDeg);\n      const zoom = this[$controls].getFieldOfView() / oldFramedFoV;\n      this[$controls].setFieldOfView(newFramedFoV * zoom);\n      this[$maintainThetaPhi] = true;\n      this.requestUpdate('maxFieldOfView');\n      this.requestUpdate('fieldOfView');\n      this.requestUpdate('minCameraOrbit');\n      this.requestUpdate('maxCameraOrbit');\n      this.requestUpdate('cameraOrbit');\n      await this.updateComplete;\n    }\n    interact(duration, finger0, finger1) {\n      const inputElement = this[$userInputElement];\n      const fingerElements = this[$fingerAnimatedContainers];\n      if (fingerElements[0].style.opacity === '1') {\n        console.warn('interact() failed because an existing interaction is running.');\n        return;\n      }\n      const xy = new Array();\n      xy.push({\n        x: timeline(finger0.x),\n        y: timeline(finger0.y)\n      });\n      const positions = [{\n        x: xy[0].x(0),\n        y: xy[0].y(0)\n      }];\n      if (finger1 != null) {\n        xy.push({\n          x: timeline(finger1.x),\n          y: timeline(finger1.y)\n        });\n        positions.push({\n          x: xy[1].x(0),\n          y: xy[1].y(0)\n        });\n      }\n      let startTime = performance.now();\n      const {\n        width,\n        height\n      } = this[$scene];\n      const rect = this.getBoundingClientRect();\n      const dispatchTouches = type => {\n        for (const [i, position] of positions.entries()) {\n          const {\n            style\n          } = fingerElements[i];\n          style.transform = `translateX(${width * position.x}px) translateY(${height * position.y}px)`;\n          if (type === 'pointerdown') {\n            style.opacity = '1';\n          } else if (type === 'pointerup') {\n            style.opacity = '0';\n          }\n          const init = {\n            pointerId: i - 5678,\n            // help ensure uniqueness\n            pointerType: 'touch',\n            target: inputElement,\n            clientX: width * position.x + rect.x,\n            clientY: height * position.y + rect.y,\n            altKey: true // flag that this is not a user interaction\n          };\n          inputElement.dispatchEvent(new PointerEvent(type, init));\n        }\n      };\n      const moveTouches = () => {\n        // Cancel interaction if something else moves the camera or input is\n        // removed from the DOM.\n        const changeSource = this[$cancellationSource];\n        if (changeSource !== ChangeSource.AUTOMATIC || !inputElement.isConnected) {\n          for (const fingerElement of this[$fingerAnimatedContainers]) {\n            fingerElement.style.opacity = '0';\n          }\n          dispatchTouches('pointercancel');\n          this.dispatchEvent(new CustomEvent('interact-stopped', {\n            detail: {\n              source: changeSource\n            }\n          }));\n          document.removeEventListener('visibilitychange', onVisibilityChange);\n          return;\n        }\n        const time = Math.min(1, (performance.now() - startTime) / duration);\n        for (const [i, position] of positions.entries()) {\n          position.x = xy[i].x(time);\n          position.y = xy[i].y(time);\n        }\n        dispatchTouches('pointermove');\n        if (time < 1) {\n          requestAnimationFrame(moveTouches);\n        } else {\n          dispatchTouches('pointerup');\n          this.dispatchEvent(new CustomEvent('interact-stopped', {\n            detail: {\n              source: ChangeSource.AUTOMATIC\n            }\n          }));\n          document.removeEventListener('visibilitychange', onVisibilityChange);\n        }\n      };\n      const onVisibilityChange = () => {\n        let elapsed = 0;\n        if (document.visibilityState === 'hidden') {\n          elapsed = performance.now() - startTime;\n        } else {\n          startTime = performance.now() - elapsed;\n        }\n      };\n      document.addEventListener('visibilitychange', onVisibilityChange);\n      dispatchTouches('pointerdown');\n      this[$cancellationSource] = ChangeSource.AUTOMATIC;\n      requestAnimationFrame(moveTouches);\n    }\n    [(_a = $promptElement, _b = $promptAnimatedContainer, _c = $fingerAnimatedContainers, _d = $panElement, _e = $lastPromptOffset, _f = $promptElementVisibleTime, _g = $userHasInteracted, _h = $waitingToPromptUser, _j = $cancellationSource, _k = $controls, _l = $lastSpherical, _m = $jumpCamera, _o = $initialized, _p = $maintainThetaPhi, _q = $a11y, $syncFieldOfView)](style) {\n      const controls = this[$controls];\n      const scene = this[$scene];\n      scene.framedFoVDeg = style[0] * 180 / Math.PI;\n      controls.changeSource = ChangeSource.NONE;\n      controls.setFieldOfView(scene.adjustedFoV(scene.framedFoVDeg));\n      this[$cancelPrompts]();\n    }\n    [$syncCameraOrbit](style) {\n      const controls = this[$controls];\n      if (this[$maintainThetaPhi]) {\n        const {\n          theta,\n          phi\n        } = this.getCameraOrbit();\n        style[0] = theta;\n        style[1] = phi;\n        this[$maintainThetaPhi] = false;\n      }\n      controls.changeSource = ChangeSource.NONE;\n      controls.setOrbit(style[0], style[1], style[2]);\n      this[$cancelPrompts]();\n    }\n    [$syncMinCameraOrbit](style) {\n      this[$controls].applyOptions({\n        minimumAzimuthalAngle: style[0],\n        minimumPolarAngle: style[1],\n        minimumRadius: style[2]\n      });\n      this.jumpCameraToGoal();\n    }\n    [$syncMaxCameraOrbit](style) {\n      this[$controls].applyOptions({\n        maximumAzimuthalAngle: style[0],\n        maximumPolarAngle: style[1],\n        maximumRadius: style[2]\n      });\n      this[$updateCameraForRadius](style[2]);\n      this.jumpCameraToGoal();\n    }\n    [$syncMinFieldOfView](style) {\n      this[$controls].applyOptions({\n        minimumFieldOfView: style[0] * 180 / Math.PI\n      });\n      this.jumpCameraToGoal();\n    }\n    [$syncMaxFieldOfView](style) {\n      const fov = this[$scene].adjustedFoV(style[0] * 180 / Math.PI);\n      this[$controls].applyOptions({\n        maximumFieldOfView: fov\n      });\n      this.jumpCameraToGoal();\n    }\n    [$syncCameraTarget](style) {\n      const [x, y, z] = style;\n      if (!this[$renderer].arRenderer.isPresenting) {\n        this[$scene].setTarget(x, y, z);\n      }\n      this[$controls].changeSource = ChangeSource.NONE;\n      this[$renderer].arRenderer.updateTarget();\n      this[$cancelPrompts]();\n    }\n    [$tick](time, delta) {\n      super[$tick](time, delta);\n      if (this[$renderer].isPresenting || !this[$getModelIsVisible]()) {\n        return;\n      }\n      const controls = this[$controls];\n      const scene = this[$scene];\n      const now = performance.now();\n      if (this[$waitingToPromptUser]) {\n        if (this.loaded && now > this[$loadedTime] + this.interactionPromptThreshold) {\n          this[$waitingToPromptUser] = false;\n          this[$promptElementVisibleTime] = now;\n          this[$promptElement].classList.add('visible');\n        }\n      }\n      if (isFinite(this[$promptElementVisibleTime]) && this.interactionPromptStyle === InteractionPromptStyle.WIGGLE) {\n        const animationTime = (now - this[$promptElementVisibleTime]) / PROMPT_ANIMATION_TIME % 1;\n        const offset = wiggle(animationTime);\n        const opacity = fade(animationTime);\n        this[$promptAnimatedContainer].style.opacity = `${opacity}`;\n        if (offset !== this[$lastPromptOffset]) {\n          const xOffset = offset * scene.width * 0.05;\n          const deltaTheta = (offset - this[$lastPromptOffset]) * Math.PI / 16;\n          this[$promptAnimatedContainer].style.transform = `translateX(${xOffset}px)`;\n          controls.changeSource = ChangeSource.AUTOMATIC;\n          controls.adjustOrbit(deltaTheta, 0, 0);\n          this[$lastPromptOffset] = offset;\n        }\n      }\n      const cameraMoved = controls.update(time, delta);\n      const targetMoved = scene.updateTarget(delta);\n      if (cameraMoved || targetMoved) {\n        this[$onChange]();\n      }\n    }\n    [$deferInteractionPrompt]() {\n      // Effectively cancel the timer waiting for user interaction:\n      this[$waitingToPromptUser] = false;\n      this[$promptElement].classList.remove('visible');\n      this[$promptElementVisibleTime] = Infinity;\n    }\n    /**\n     * Updates the camera's near and far planes to enclose the scene when\n     * orbiting at the supplied radius.\n     */\n    [$updateCameraForRadius](radius) {\n      const maximumRadius = Math.max(this[$scene].farRadius(), radius);\n      const near = 0;\n      const far = Math.abs(2 * maximumRadius);\n      this[$controls].updateNearFar(near, far);\n    }\n    [$updateAria]() {\n      const {\n        theta,\n        phi\n      } = this[$controls].getCameraSpherical(this[$lastSpherical]);\n      const azimuthalQuadrant = (4 + Math.floor((theta % TAU + QUARTER_PI) / HALF_PI)) % 4;\n      const polarTrient = Math.floor(phi / THIRD_PI);\n      const azimuthalQuadrantLabel = AZIMUTHAL_QUADRANT_LABELS[azimuthalQuadrant];\n      const polarTrientLabel = POLAR_TRIENT_LABELS[polarTrient];\n      const position = `${polarTrientLabel}${azimuthalQuadrantLabel}`;\n      const key = position;\n      if (key in this[$a11y]) {\n        this[$updateStatus](this[$a11y][key]);\n      } else {\n        this[$updateStatus](`View from stage ${position}`);\n      }\n    }\n    get [$ariaLabel]() {\n      let interactionPrompt = INTERACTION_PROMPT;\n      if ('interaction-prompt' in this[$a11y]) {\n        interactionPrompt = `. ${this[$a11y]['interaction-prompt']}`;\n      }\n      return super[$ariaLabel].replace(/\\.$/, '') + (this.cameraControls ? interactionPrompt : '');\n    }\n    async [$onResize](event) {\n      const controls = this[$controls];\n      const scene = this[$scene];\n      const oldFramedFoV = scene.adjustedFoV(scene.framedFoVDeg);\n      // The super of $onResize may update the scene's adjustedFoV, so we\n      // compare the before and after to calculate the proper zoom.\n      super[$onResize](event);\n      const fovRatio = scene.adjustedFoV(scene.framedFoVDeg) / oldFramedFoV;\n      const fov = controls.getFieldOfView() * (isFinite(fovRatio) ? fovRatio : 1);\n      controls.updateAspect(this[$scene].aspect);\n      this.requestUpdate('maxFieldOfView', this.maxFieldOfView);\n      await this.updateComplete;\n      this[$controls].setFieldOfView(fov);\n      this.jumpCameraToGoal();\n    }\n    [$onModelLoad]() {\n      super[$onModelLoad]();\n      if (this[$initialized]) {\n        this[$maintainThetaPhi] = true;\n      } else {\n        this[$initialized] = true;\n      }\n      this.requestUpdate('maxFieldOfView', this.maxFieldOfView);\n      this.requestUpdate('fieldOfView', this.fieldOfView);\n      this.requestUpdate('minCameraOrbit', this.minCameraOrbit);\n      this.requestUpdate('maxCameraOrbit', this.maxCameraOrbit);\n      this.requestUpdate('cameraOrbit', this.cameraOrbit);\n      this.requestUpdate('cameraTarget', this.cameraTarget);\n      this.jumpCameraToGoal();\n    }\n    [(_r = $cancelPrompts, _s = $onChange, _t = $onPointerChange, $updateA11y)]() {\n      if (typeof this.a11y === 'string') {\n        if (this.a11y.startsWith('{')) {\n          try {\n            this[$a11y] = JSON.parse(this.a11y);\n          } catch (error) {\n            console.warn('Error parsing a11y JSON:', error);\n          }\n        } else if (this.a11y.length > 0) {\n          console.warn('Error not supported format, should be a JSON string:', this.a11y);\n        } else {\n          this[$a11y] = {};\n        }\n      } else if (typeof this.a11y === 'object' && this.a11y != null) {\n        this[$a11y] = Object.assign({}, this.a11y);\n      } else {\n        this[$a11y] = {};\n      }\n      this[$userInputElement].setAttribute('aria-label', this[$ariaLabel]);\n    }\n  }\n  __decorate([property({\n    type: Boolean,\n    attribute: 'camera-controls'\n  })], ControlsModelViewerElement.prototype, \"cameraControls\", void 0);\n  __decorate([style({\n    intrinsics: cameraOrbitIntrinsics,\n    observeEffects: true,\n    updateHandler: $syncCameraOrbit\n  }), property({\n    type: String,\n    attribute: 'camera-orbit',\n    hasChanged: () => true\n  })], ControlsModelViewerElement.prototype, \"cameraOrbit\", void 0);\n  __decorate([style({\n    intrinsics: cameraTargetIntrinsics,\n    observeEffects: true,\n    updateHandler: $syncCameraTarget\n  }), property({\n    type: String,\n    attribute: 'camera-target',\n    hasChanged: () => true\n  })], ControlsModelViewerElement.prototype, \"cameraTarget\", void 0);\n  __decorate([style({\n    intrinsics: fieldOfViewIntrinsics,\n    observeEffects: true,\n    updateHandler: $syncFieldOfView\n  }), property({\n    type: String,\n    attribute: 'field-of-view',\n    hasChanged: () => true\n  })], ControlsModelViewerElement.prototype, \"fieldOfView\", void 0);\n  __decorate([style({\n    intrinsics: minCameraOrbitIntrinsics,\n    updateHandler: $syncMinCameraOrbit\n  }), property({\n    type: String,\n    attribute: 'min-camera-orbit',\n    hasChanged: () => true\n  })], ControlsModelViewerElement.prototype, \"minCameraOrbit\", void 0);\n  __decorate([style({\n    intrinsics: maxCameraOrbitIntrinsics,\n    updateHandler: $syncMaxCameraOrbit\n  }), property({\n    type: String,\n    attribute: 'max-camera-orbit',\n    hasChanged: () => true\n  })], ControlsModelViewerElement.prototype, \"maxCameraOrbit\", void 0);\n  __decorate([style({\n    intrinsics: minFieldOfViewIntrinsics,\n    updateHandler: $syncMinFieldOfView\n  }), property({\n    type: String,\n    attribute: 'min-field-of-view',\n    hasChanged: () => true\n  })], ControlsModelViewerElement.prototype, \"minFieldOfView\", void 0);\n  __decorate([style({\n    intrinsics: fieldOfViewIntrinsics,\n    updateHandler: $syncMaxFieldOfView\n  }), property({\n    type: String,\n    attribute: 'max-field-of-view',\n    hasChanged: () => true\n  })], ControlsModelViewerElement.prototype, \"maxFieldOfView\", void 0);\n  __decorate([property({\n    type: Number,\n    attribute: 'interaction-prompt-threshold'\n  })], ControlsModelViewerElement.prototype, \"interactionPromptThreshold\", void 0);\n  __decorate([property({\n    type: String,\n    attribute: 'interaction-prompt'\n  })], ControlsModelViewerElement.prototype, \"interactionPrompt\", void 0);\n  __decorate([property({\n    type: String,\n    attribute: 'interaction-prompt-style'\n  })], ControlsModelViewerElement.prototype, \"interactionPromptStyle\", void 0);\n  __decorate([property({\n    type: Number,\n    attribute: 'orbit-sensitivity'\n  })], ControlsModelViewerElement.prototype, \"orbitSensitivity\", void 0);\n  __decorate([property({\n    type: Number,\n    attribute: 'zoom-sensitivity'\n  })], ControlsModelViewerElement.prototype, \"zoomSensitivity\", void 0);\n  __decorate([property({\n    type: Number,\n    attribute: 'pan-sensitivity'\n  })], ControlsModelViewerElement.prototype, \"panSensitivity\", void 0);\n  __decorate([property({\n    type: String,\n    attribute: 'touch-action'\n  })], ControlsModelViewerElement.prototype, \"touchAction\", void 0);\n  __decorate([property({\n    type: Boolean,\n    attribute: 'disable-zoom'\n  })], ControlsModelViewerElement.prototype, \"disableZoom\", void 0);\n  __decorate([property({\n    type: Boolean,\n    attribute: 'disable-pan'\n  })], ControlsModelViewerElement.prototype, \"disablePan\", void 0);\n  __decorate([property({\n    type: Boolean,\n    attribute: 'disable-tap'\n  })], ControlsModelViewerElement.prototype, \"disableTap\", void 0);\n  __decorate([property({\n    type: Number,\n    attribute: 'interpolation-decay'\n  })], ControlsModelViewerElement.prototype, \"interpolationDecay\", void 0);\n  __decorate([property()], ControlsModelViewerElement.prototype, \"a11y\", void 0);\n  return ControlsModelViewerElement;\n};\n", "/* @license\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Euler, EventDispatcher, Matrix3, Spherical, Vector2, Vector3 } from 'three';\nimport { $panElement } from '../features/controls.js';\nimport { clamp } from '../utilities.js';\nimport { Damper, SETTLING_TIME } from './Damper.js';\nconst PAN_SENSITIVITY = 0.018;\nconst TAP_DISTANCE = 2;\nconst TAP_MS = 300;\nconst vector2 = new Vector2();\nconst vector3 = new Vector3();\nexport const DEFAULT_OPTIONS = Object.freeze({\n  minimumRadius: 0,\n  maximumRadius: Infinity,\n  minimumPolarAngle: 0,\n  maximumPolarAngle: Math.PI,\n  minimumAzimuthalAngle: -Infinity,\n  maximumAzimuthalAngle: Infinity,\n  minimumFieldOfView: 10,\n  maximumFieldOfView: 45,\n  touchAction: 'none'\n});\n// Constants\nconst KEYBOARD_ORBIT_INCREMENT = Math.PI / 8;\nconst ZOOM_SENSITIVITY = 0.04;\n// The move size on pan key event\nconst PAN_KEY_INCREMENT = 10;\nexport const KeyCode = {\n  PAGE_UP: 33,\n  PAGE_DOWN: 34,\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\nexport const ChangeSource = {\n  USER_INTERACTION: 'user-interaction',\n  NONE: 'none',\n  AUTOMATIC: 'automatic'\n};\n/**\n * SmoothControls is a Three.js helper for adding delightful pointer and\n * keyboard-based input to a staged Three.js scene. Its API is very similar to\n * OrbitControls, but it offers more opinionated (subjectively more delightful)\n * defaults, easy extensibility and subjectively better out-of-the-box keyboard\n * support.\n *\n * One important change compared to OrbitControls is that the `update` method\n * of SmoothControls must be invoked on every frame, otherwise the controls\n * will not have an effect.\n *\n * Another notable difference compared to OrbitControls is that SmoothControls\n * does not currently support panning (but probably will in a future revision).\n *\n * Like OrbitControls, SmoothControls assumes that the orientation of the camera\n * has been set in terms of position, rotation and scale, so it is important to\n * ensure that the camera's matrixWorld is in sync before using SmoothControls.\n */\nexport class SmoothControls extends EventDispatcher {\n  constructor(camera, element, scene) {\n    super();\n    this.camera = camera;\n    this.element = element;\n    this.scene = scene;\n    this.orbitSensitivity = 1;\n    this.zoomSensitivity = 1;\n    this.panSensitivity = 1;\n    this.inputSensitivity = 1;\n    this.changeSource = ChangeSource.NONE;\n    this._interactionEnabled = false;\n    this._disableZoom = false;\n    this.isUserPointing = false;\n    // Pan state\n    this.enablePan = true;\n    this.enableTap = true;\n    this.panProjection = new Matrix3();\n    this.panPerPixel = 0;\n    // Internal orbital position state\n    this.spherical = new Spherical();\n    this.goalSpherical = new Spherical();\n    this.thetaDamper = new Damper();\n    this.phiDamper = new Damper();\n    this.radiusDamper = new Damper();\n    this.logFov = Math.log(DEFAULT_OPTIONS.maximumFieldOfView);\n    this.goalLogFov = this.logFov;\n    this.fovDamper = new Damper();\n    // Pointer state\n    this.touchMode = null;\n    this.pointers = [];\n    this.startTime = 0;\n    this.startPointerPosition = {\n      clientX: 0,\n      clientY: 0\n    };\n    this.lastSeparation = 0;\n    this.touchDecided = false;\n    this.onContext = event => {\n      if (this.enablePan) {\n        event.preventDefault();\n      } else {\n        for (const pointer of this.pointers) {\n          // Required because of a common browser bug where the context menu never\n          // fires a pointercancel event.\n          this.onPointerUp(new PointerEvent('pointercancel', Object.assign(Object.assign({}, this.startPointerPosition), {\n            pointerId: pointer.id\n          })));\n        }\n      }\n    };\n    this.touchModeZoom = (dx, dy) => {\n      if (!this._disableZoom) {\n        const touchDistance = this.twoTouchDistance(this.pointers[0], this.pointers[1]);\n        const deltaZoom = ZOOM_SENSITIVITY * this.zoomSensitivity * (this.lastSeparation - touchDistance) * 50 / this.scene.height;\n        this.lastSeparation = touchDistance;\n        this.userAdjustOrbit(0, 0, deltaZoom);\n      }\n      if (this.panPerPixel > 0) {\n        this.movePan(dx, dy);\n      }\n    };\n    // We implement our own version of the browser's CSS touch-action, enforced by\n    // this function, because the iOS implementation of pan-y is bad and doesn't\n    // match Android. Specifically, even if a touch gesture begins by panning X,\n    // iOS will switch to scrolling as soon as the gesture moves in the Y, rather\n    // than staying in the same mode until the end of the gesture.\n    this.disableScroll = event => {\n      event.preventDefault();\n    };\n    this.touchModeRotate = (dx, dy) => {\n      const {\n        touchAction\n      } = this._options;\n      if (!this.touchDecided && touchAction !== 'none') {\n        this.touchDecided = true;\n        const dxMag = Math.abs(dx);\n        const dyMag = Math.abs(dy);\n        // If motion is mostly vertical, assume scrolling is the intent.\n        if (this.changeSource === ChangeSource.USER_INTERACTION && (touchAction === 'pan-y' && dyMag > dxMag || touchAction === 'pan-x' && dxMag > dyMag)) {\n          this.touchMode = null;\n          return;\n        } else {\n          this.element.addEventListener('touchmove', this.disableScroll, {\n            passive: false\n          });\n        }\n      }\n      this.handleSinglePointerMove(dx, dy);\n    };\n    this.onPointerDown = event => {\n      if (this.pointers.length > 2) {\n        return;\n      }\n      const {\n        element\n      } = this;\n      if (this.pointers.length === 0) {\n        element.addEventListener('pointermove', this.onPointerMove);\n        element.addEventListener('pointerup', this.onPointerUp);\n        this.touchMode = null;\n        this.touchDecided = false;\n        this.startPointerPosition.clientX = event.clientX;\n        this.startPointerPosition.clientY = event.clientY;\n        this.startTime = performance.now();\n      }\n      try {\n        element.setPointerCapture(event.pointerId);\n      } catch (_a) {}\n      this.pointers.push({\n        clientX: event.clientX,\n        clientY: event.clientY,\n        id: event.pointerId\n      });\n      this.isUserPointing = false;\n      if (event.pointerType === 'touch') {\n        this.changeSource = event.altKey ?\n        // set by interact() in controls.ts\n        ChangeSource.AUTOMATIC : ChangeSource.USER_INTERACTION;\n        this.onTouchChange(event);\n      } else {\n        this.changeSource = ChangeSource.USER_INTERACTION;\n        this.onMouseDown(event);\n      }\n      if (this.changeSource === ChangeSource.USER_INTERACTION) {\n        this.dispatchEvent({\n          type: 'user-interaction'\n        });\n      }\n    };\n    this.onPointerMove = event => {\n      const pointer = this.pointers.find(pointer => pointer.id === event.pointerId);\n      if (pointer == null) {\n        return;\n      }\n      // In case no one gave us a pointerup or pointercancel event.\n      if (event.pointerType === 'mouse' && event.buttons === 0) {\n        this.onPointerUp(event);\n        return;\n      }\n      const numTouches = this.pointers.length;\n      const dx = (event.clientX - pointer.clientX) / numTouches;\n      const dy = (event.clientY - pointer.clientY) / numTouches;\n      if (dx === 0 && dy === 0) {\n        return;\n      }\n      pointer.clientX = event.clientX;\n      pointer.clientY = event.clientY;\n      if (event.pointerType === 'touch') {\n        this.changeSource = event.altKey ?\n        // set by interact() in controls.ts\n        ChangeSource.AUTOMATIC : ChangeSource.USER_INTERACTION;\n        if (this.touchMode !== null) {\n          this.touchMode(dx, dy);\n        }\n      } else {\n        this.changeSource = ChangeSource.USER_INTERACTION;\n        if (this.panPerPixel > 0) {\n          this.movePan(dx, dy);\n        } else {\n          this.handleSinglePointerMove(dx, dy);\n        }\n      }\n    };\n    this.onPointerUp = event => {\n      const {\n        element\n      } = this;\n      const index = this.pointers.findIndex(pointer => pointer.id === event.pointerId);\n      if (index !== -1) {\n        this.pointers.splice(index, 1);\n      }\n      // altKey indicates an interaction prompt; don't reset radius in this case\n      // as it will cause the camera to drift.\n      if (this.panPerPixel > 0 && !event.altKey) {\n        this.resetRadius();\n      }\n      if (this.pointers.length === 0) {\n        element.removeEventListener('pointermove', this.onPointerMove);\n        element.removeEventListener('pointerup', this.onPointerUp);\n        element.removeEventListener('touchmove', this.disableScroll);\n        if (this.enablePan && this.enableTap) {\n          this.recenter(event);\n        }\n      } else if (this.touchMode !== null) {\n        this.onTouchChange(event);\n      }\n      this.scene.element[$panElement].style.opacity = 0;\n      element.style.cursor = 'grab';\n      this.panPerPixel = 0;\n      if (this.isUserPointing) {\n        this.dispatchEvent({\n          type: 'pointer-change-end'\n        });\n      }\n    };\n    this.onWheel = event => {\n      this.changeSource = ChangeSource.USER_INTERACTION;\n      const deltaZoom = event.deltaY * (event.deltaMode == 1 ? 18 : 1) * ZOOM_SENSITIVITY * this.zoomSensitivity / 30;\n      this.userAdjustOrbit(0, 0, deltaZoom);\n      event.preventDefault();\n      this.dispatchEvent({\n        type: 'user-interaction'\n      });\n    };\n    this.onKeyDown = event => {\n      // We track if the key is actually one we respond to, so as not to\n      // accidentally clobber unrelated key inputs when the <model-viewer> has\n      // focus.\n      const {\n        changeSource\n      } = this;\n      this.changeSource = ChangeSource.USER_INTERACTION;\n      const relevantKey = event.shiftKey && this.enablePan ? this.panKeyCodeHandler(event) : this.orbitZoomKeyCodeHandler(event);\n      if (relevantKey) {\n        event.preventDefault();\n        this.dispatchEvent({\n          type: 'user-interaction'\n        });\n      } else {\n        this.changeSource = changeSource;\n      }\n    };\n    this._options = Object.assign({}, DEFAULT_OPTIONS);\n    this.setOrbit(0, Math.PI / 2, 1);\n    this.setFieldOfView(100);\n    this.jumpToGoal();\n  }\n  get interactionEnabled() {\n    return this._interactionEnabled;\n  }\n  enableInteraction() {\n    if (this._interactionEnabled === false) {\n      const {\n        element\n      } = this;\n      element.addEventListener('pointerdown', this.onPointerDown);\n      element.addEventListener('pointercancel', this.onPointerUp);\n      if (!this._disableZoom) {\n        element.addEventListener('wheel', this.onWheel);\n      }\n      element.addEventListener('keydown', this.onKeyDown);\n      // This little beauty is to work around a WebKit bug that otherwise makes\n      // touch events randomly not cancelable.\n      element.addEventListener('touchmove', () => {}, {\n        passive: false\n      });\n      element.addEventListener('contextmenu', this.onContext);\n      this.element.style.cursor = 'grab';\n      this._interactionEnabled = true;\n      this.updateTouchActionStyle();\n    }\n  }\n  disableInteraction() {\n    if (this._interactionEnabled === true) {\n      const {\n        element\n      } = this;\n      element.removeEventListener('pointerdown', this.onPointerDown);\n      element.removeEventListener('pointermove', this.onPointerMove);\n      element.removeEventListener('pointerup', this.onPointerUp);\n      element.removeEventListener('pointercancel', this.onPointerUp);\n      element.removeEventListener('wheel', this.onWheel);\n      element.removeEventListener('keydown', this.onKeyDown);\n      element.removeEventListener('contextmenu', this.onContext);\n      element.style.cursor = '';\n      this.touchMode = null;\n      this._interactionEnabled = false;\n      this.updateTouchActionStyle();\n    }\n  }\n  /**\n   * The options that are currently configured for the controls instance.\n   */\n  get options() {\n    return this._options;\n  }\n  set disableZoom(disable) {\n    if (this._disableZoom != disable) {\n      this._disableZoom = disable;\n      if (disable === true) {\n        this.element.removeEventListener('wheel', this.onWheel);\n      } else {\n        this.element.addEventListener('wheel', this.onWheel);\n      }\n      this.updateTouchActionStyle();\n    }\n  }\n  /**\n   * Copy the spherical values that represent the current camera orbital\n   * position relative to the configured target into a provided Spherical\n   * instance. If no Spherical is provided, a new Spherical will be allocated\n   * to copy the values into. The Spherical that values are copied into is\n   * returned.\n   */\n  getCameraSpherical(target = new Spherical()) {\n    return target.copy(this.spherical);\n  }\n  /**\n   * Returns the camera's current vertical field of view in degrees.\n   */\n  getFieldOfView() {\n    return this.camera.fov;\n  }\n  /**\n   * Configure the _options of the controls. Configured _options will be\n   * merged with whatever _options have already been configured for this\n   * controls instance.\n   */\n  applyOptions(_options) {\n    Object.assign(this._options, _options);\n    // Re-evaluates clamping based on potentially new values for min/max\n    // polar, azimuth and radius:\n    this.setOrbit();\n    this.setFieldOfView(Math.exp(this.goalLogFov));\n  }\n  /**\n   * Sets the near and far planes of the camera.\n   */\n  updateNearFar(nearPlane, farPlane) {\n    this.camera.far = farPlane === 0 ? 2 : farPlane;\n    this.camera.near = Math.max(nearPlane, this.camera.far / 1000);\n    this.camera.updateProjectionMatrix();\n  }\n  /**\n   * Sets the aspect ratio of the camera\n   */\n  updateAspect(aspect) {\n    this.camera.aspect = aspect;\n    this.camera.updateProjectionMatrix();\n  }\n  /**\n   * Set the absolute orbital goal of the camera. The change will be\n   * applied over a number of frames depending on configured acceleration and\n   * dampening _options.\n   *\n   * Returns true if invoking the method will result in the camera changing\n   * position and/or rotation, otherwise false.\n   */\n  setOrbit(goalTheta = this.goalSpherical.theta, goalPhi = this.goalSpherical.phi, goalRadius = this.goalSpherical.radius) {\n    const {\n      minimumAzimuthalAngle,\n      maximumAzimuthalAngle,\n      minimumPolarAngle,\n      maximumPolarAngle,\n      minimumRadius,\n      maximumRadius\n    } = this._options;\n    const {\n      theta,\n      phi,\n      radius\n    } = this.goalSpherical;\n    const nextTheta = clamp(goalTheta, minimumAzimuthalAngle, maximumAzimuthalAngle);\n    if (!isFinite(minimumAzimuthalAngle) && !isFinite(maximumAzimuthalAngle)) {\n      this.spherical.theta = this.wrapAngle(this.spherical.theta - nextTheta) + nextTheta;\n    }\n    const nextPhi = clamp(goalPhi, minimumPolarAngle, maximumPolarAngle);\n    const nextRadius = clamp(goalRadius, minimumRadius, maximumRadius);\n    if (nextTheta === theta && nextPhi === phi && nextRadius === radius) {\n      return false;\n    }\n    if (!isFinite(nextTheta) || !isFinite(nextPhi) || !isFinite(nextRadius)) {\n      return false;\n    }\n    this.goalSpherical.theta = nextTheta;\n    this.goalSpherical.phi = nextPhi;\n    this.goalSpherical.radius = nextRadius;\n    this.goalSpherical.makeSafe();\n    return true;\n  }\n  /**\n   * Subset of setOrbit() above, which only sets the camera's radius.\n   */\n  setRadius(radius) {\n    this.goalSpherical.radius = radius;\n    this.setOrbit();\n  }\n  /**\n   * Sets the goal field of view for the camera\n   */\n  setFieldOfView(fov) {\n    const {\n      minimumFieldOfView,\n      maximumFieldOfView\n    } = this._options;\n    fov = clamp(fov, minimumFieldOfView, maximumFieldOfView);\n    this.goalLogFov = Math.log(fov);\n  }\n  /**\n   * Sets the smoothing decay time.\n   */\n  setDamperDecayTime(decayMilliseconds) {\n    this.thetaDamper.setDecayTime(decayMilliseconds);\n    this.phiDamper.setDecayTime(decayMilliseconds);\n    this.radiusDamper.setDecayTime(decayMilliseconds);\n    this.fovDamper.setDecayTime(decayMilliseconds);\n  }\n  /**\n   * Adjust the orbital position of the camera relative to its current orbital\n   * position. Does not let the theta goal get more than pi ahead of the current\n   * theta, which ensures interpolation continues in the direction of the delta.\n   * The deltaZoom parameter adjusts both the field of view and the orbit radius\n   * such that they progress across their allowed ranges in sync.\n   */\n  adjustOrbit(deltaTheta, deltaPhi, deltaZoom) {\n    const {\n      theta,\n      phi,\n      radius\n    } = this.goalSpherical;\n    const {\n      minimumRadius,\n      maximumRadius,\n      minimumFieldOfView,\n      maximumFieldOfView\n    } = this._options;\n    const dTheta = this.spherical.theta - theta;\n    const dThetaLimit = Math.PI - 0.001;\n    const goalTheta = theta - clamp(deltaTheta, -dThetaLimit - dTheta, dThetaLimit - dTheta);\n    const goalPhi = phi - deltaPhi;\n    const deltaRatio = deltaZoom === 0 ? 0 : ((deltaZoom > 0 ? maximumRadius : minimumRadius) - radius) / (Math.log(deltaZoom > 0 ? maximumFieldOfView : minimumFieldOfView) - this.goalLogFov);\n    const goalRadius = radius + deltaZoom * (isFinite(deltaRatio) ? deltaRatio : (maximumRadius - minimumRadius) * 2);\n    this.setOrbit(goalTheta, goalPhi, goalRadius);\n    if (deltaZoom !== 0) {\n      const goalLogFov = this.goalLogFov + deltaZoom;\n      this.setFieldOfView(Math.exp(goalLogFov));\n    }\n  }\n  /**\n   * Move the camera instantly instead of accelerating toward the goal\n   * parameters.\n   */\n  jumpToGoal() {\n    this.update(0, SETTLING_TIME);\n  }\n  /**\n   * Update controls. In most cases, this will result in the camera\n   * interpolating its position and rotation until it lines up with the\n   * designated goal orbital position. Returns false if the camera did not move.\n   *\n   * Time and delta are measured in milliseconds.\n   */\n  update(_time, delta) {\n    if (this.isStationary()) {\n      return false;\n    }\n    const {\n      maximumPolarAngle,\n      maximumRadius\n    } = this._options;\n    const dTheta = this.spherical.theta - this.goalSpherical.theta;\n    if (Math.abs(dTheta) > Math.PI && !isFinite(this._options.minimumAzimuthalAngle) && !isFinite(this._options.maximumAzimuthalAngle)) {\n      this.spherical.theta -= Math.sign(dTheta) * 2 * Math.PI;\n    }\n    this.spherical.theta = this.thetaDamper.update(this.spherical.theta, this.goalSpherical.theta, delta, Math.PI);\n    this.spherical.phi = this.phiDamper.update(this.spherical.phi, this.goalSpherical.phi, delta, maximumPolarAngle);\n    this.spherical.radius = this.radiusDamper.update(this.spherical.radius, this.goalSpherical.radius, delta, maximumRadius);\n    this.logFov = this.fovDamper.update(this.logFov, this.goalLogFov, delta, 1);\n    this.moveCamera();\n    return true;\n  }\n  updateTouchActionStyle() {\n    const {\n      style\n    } = this.element;\n    if (this._interactionEnabled) {\n      const {\n        touchAction\n      } = this._options;\n      if (this._disableZoom && touchAction !== 'none') {\n        style.touchAction = 'manipulation';\n      } else {\n        style.touchAction = touchAction;\n      }\n    } else {\n      style.touchAction = '';\n    }\n  }\n  isStationary() {\n    return this.goalSpherical.theta === this.spherical.theta && this.goalSpherical.phi === this.spherical.phi && this.goalSpherical.radius === this.spherical.radius && this.goalLogFov === this.logFov;\n  }\n  moveCamera() {\n    // Derive the new camera position from the updated spherical:\n    this.spherical.makeSafe();\n    this.camera.position.setFromSpherical(this.spherical);\n    this.camera.setRotationFromEuler(new Euler(this.spherical.phi - Math.PI / 2, this.spherical.theta, 0, 'YXZ'));\n    if (this.camera.fov !== Math.exp(this.logFov)) {\n      this.camera.fov = Math.exp(this.logFov);\n      this.camera.updateProjectionMatrix();\n    }\n  }\n  userAdjustOrbit(deltaTheta, deltaPhi, deltaZoom) {\n    this.adjustOrbit(deltaTheta * this.orbitSensitivity * this.inputSensitivity, deltaPhi * this.orbitSensitivity * this.inputSensitivity, deltaZoom * this.inputSensitivity);\n  }\n  // Wraps to between -pi and pi\n  wrapAngle(radians) {\n    const normalized = (radians + Math.PI) / (2 * Math.PI);\n    const wrapped = normalized - Math.floor(normalized);\n    return wrapped * 2 * Math.PI - Math.PI;\n  }\n  pixelLengthToSphericalAngle(pixelLength) {\n    return 2 * Math.PI * pixelLength / this.scene.height;\n  }\n  twoTouchDistance(touchOne, touchTwo) {\n    const {\n      clientX: xOne,\n      clientY: yOne\n    } = touchOne;\n    const {\n      clientX: xTwo,\n      clientY: yTwo\n    } = touchTwo;\n    const xDelta = xTwo - xOne;\n    const yDelta = yTwo - yOne;\n    return Math.sqrt(xDelta * xDelta + yDelta * yDelta);\n  }\n  handleSinglePointerMove(dx, dy) {\n    const deltaTheta = this.pixelLengthToSphericalAngle(dx);\n    const deltaPhi = this.pixelLengthToSphericalAngle(dy);\n    if (this.isUserPointing === false) {\n      this.isUserPointing = true;\n      this.dispatchEvent({\n        type: 'pointer-change-start'\n      });\n    }\n    this.userAdjustOrbit(deltaTheta, deltaPhi, 0);\n  }\n  initializePan() {\n    const {\n      theta,\n      phi\n    } = this.spherical;\n    const psi = theta - this.scene.yaw;\n    this.panPerPixel = PAN_SENSITIVITY * this.panSensitivity / this.scene.height;\n    this.panProjection.set(-Math.cos(psi), -Math.cos(phi) * Math.sin(psi), 0, 0, Math.sin(phi), 0, Math.sin(psi), -Math.cos(phi) * Math.cos(psi), 0);\n  }\n  movePan(dx, dy) {\n    const {\n      scene\n    } = this;\n    const dxy = vector3.set(dx, dy, 0).multiplyScalar(this.inputSensitivity);\n    const metersPerPixel = this.spherical.radius * Math.exp(this.logFov) * this.panPerPixel;\n    dxy.multiplyScalar(metersPerPixel);\n    const target = scene.getTarget();\n    target.add(dxy.applyMatrix3(this.panProjection));\n    scene.boundingSphere.clampPoint(target, target);\n    scene.setTarget(target.x, target.y, target.z);\n  }\n  recenter(pointer) {\n    if (performance.now() > this.startTime + TAP_MS || Math.abs(pointer.clientX - this.startPointerPosition.clientX) > TAP_DISTANCE || Math.abs(pointer.clientY - this.startPointerPosition.clientY) > TAP_DISTANCE) {\n      return;\n    }\n    const {\n      scene\n    } = this;\n    const hit = scene.positionAndNormalFromPoint(scene.getNDC(pointer.clientX, pointer.clientY));\n    if (hit == null) {\n      const {\n        cameraTarget\n      } = scene.element;\n      scene.element.cameraTarget = '';\n      scene.element.cameraTarget = cameraTarget;\n      // Zoom all the way out.\n      this.userAdjustOrbit(0, 0, 1);\n    } else {\n      scene.target.worldToLocal(hit.position);\n      scene.setTarget(hit.position.x, hit.position.y, hit.position.z);\n    }\n  }\n  resetRadius() {\n    const {\n      scene\n    } = this;\n    const hit = scene.positionAndNormalFromPoint(vector2.set(0, 0));\n    if (hit == null) {\n      return;\n    }\n    scene.target.worldToLocal(hit.position);\n    const goalTarget = scene.getTarget();\n    const {\n      theta,\n      phi\n    } = this.spherical;\n    // Set target to surface hit point, except the target is still settling,\n    // so offset the goal accordingly so the transition is smooth even though\n    // this will drift the target slightly away from the hit point.\n    const psi = theta - scene.yaw;\n    const n = vector3.set(Math.sin(phi) * Math.sin(psi), Math.cos(phi), Math.sin(phi) * Math.cos(psi));\n    const dr = n.dot(hit.position.sub(goalTarget));\n    goalTarget.add(n.multiplyScalar(dr));\n    scene.setTarget(goalTarget.x, goalTarget.y, goalTarget.z);\n    // Change the camera radius to match the change in target so that the\n    // camera itself does not move, unless it hits a radius bound.\n    this.setOrbit(undefined, undefined, this.goalSpherical.radius - dr);\n  }\n  onTouchChange(event) {\n    if (this.pointers.length === 1) {\n      this.touchMode = this.touchModeRotate;\n    } else {\n      if (this._disableZoom) {\n        this.touchMode = null;\n        this.element.removeEventListener('touchmove', this.disableScroll);\n        return;\n      }\n      this.touchMode = this.touchDecided && this.touchMode === null ? null : this.touchModeZoom;\n      this.touchDecided = true;\n      this.element.addEventListener('touchmove', this.disableScroll, {\n        passive: false\n      });\n      this.lastSeparation = this.twoTouchDistance(this.pointers[0], this.pointers[1]);\n      if (this.enablePan && this.touchMode != null) {\n        this.initializePan();\n        if (!event.altKey) {\n          // user interaction, not prompt\n          this.scene.element[$panElement].style.opacity = 1;\n        }\n      }\n    }\n  }\n  onMouseDown(event) {\n    this.panPerPixel = 0;\n    if (this.enablePan && (event.button === 2 || event.ctrlKey || event.metaKey || event.shiftKey)) {\n      this.initializePan();\n      this.scene.element[$panElement].style.opacity = 1;\n    }\n    this.element.style.cursor = 'grabbing';\n  }\n  /**\n   * Handles the orbit and Zoom key presses\n   * Uses constants for the increment.\n   * @param event The keyboard event for the .key value\n   * @returns boolean to indicate if the key event has been handled\n   */\n  orbitZoomKeyCodeHandler(event) {\n    let relevantKey = true;\n    switch (event.key) {\n      case 'PageUp':\n        this.userAdjustOrbit(0, 0, ZOOM_SENSITIVITY * this.zoomSensitivity);\n        break;\n      case 'PageDown':\n        this.userAdjustOrbit(0, 0, -1 * ZOOM_SENSITIVITY * this.zoomSensitivity);\n        break;\n      case 'ArrowUp':\n        this.userAdjustOrbit(0, -KEYBOARD_ORBIT_INCREMENT, 0);\n        break;\n      case 'ArrowDown':\n        this.userAdjustOrbit(0, KEYBOARD_ORBIT_INCREMENT, 0);\n        break;\n      case 'ArrowLeft':\n        this.userAdjustOrbit(-KEYBOARD_ORBIT_INCREMENT, 0, 0);\n        break;\n      case 'ArrowRight':\n        this.userAdjustOrbit(KEYBOARD_ORBIT_INCREMENT, 0, 0);\n        break;\n      default:\n        relevantKey = false;\n        break;\n    }\n    return relevantKey;\n  }\n  /**\n   * Handles the Pan key presses\n   * Uses constants for the increment.\n   * @param event The keyboard event for the .key value\n   * @returns boolean to indicate if the key event has been handled\n   */\n  panKeyCodeHandler(event) {\n    this.initializePan();\n    let relevantKey = true;\n    switch (event.key) {\n      case 'ArrowUp':\n        this.movePan(0, -1 * PAN_KEY_INCREMENT); // This is the negative one so that the\n        // model appears to move as the arrow\n        // direction rather than the view moving\n        break;\n      case 'ArrowDown':\n        this.movePan(0, PAN_KEY_INCREMENT);\n        break;\n      case 'ArrowLeft':\n        this.movePan(-1 * PAN_KEY_INCREMENT, 0);\n        break;\n      case 'ArrowRight':\n        this.movePan(PAN_KEY_INCREMENT, 0);\n        break;\n      default:\n        relevantKey = false;\n        break;\n    }\n    return relevantKey;\n  }\n}\n", "/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { BoxGeometry, BufferGeometry, EventDispatcher, Line, Matrix4, Mesh, PerspectiveCamera, Quaternion, Vector3 } from 'three';\nimport { XREstimatedLight } from 'three/examples/jsm/webxr/XREstimatedLight.js';\nimport { $currentBackground, $currentEnvironmentMap } from '../features/environment.js';\nimport { assertIsArCandidate } from '../utilities.js';\nimport { Damper } from './Damper.js';\nimport { PlacementBox } from './PlacementBox.js';\nimport { ChangeSource } from './SmoothControls.js';\n// number of initial null pose XRFrames allowed before we post not-tracking\nconst INIT_FRAMES = 30;\n// AR shadow is not user-configurable. This is to pave the way for AR lighting\n// estimation, which will be used once available in WebXR.\nconst AR_SHADOW_INTENSITY = 0.8;\nconst ROTATION_RATE = 1.5;\n// Angle down (towards bottom of screen) from camera center ray to use for hit\n// testing against the floor. This makes placement faster and more intuitive\n// assuming the phone is in portrait mode. This seems to be a reasonable\n// assumption for the start of the session and UI will lack landscape mode to\n// encourage upright use.\nconst HIT_ANGLE_DEG = 20;\nconst SCALE_SNAP = 0.2;\n// For automatic dynamic viewport scaling, don't let the scale drop below this\n// limit.\nconst MIN_VIEWPORT_SCALE = 0.25;\n// Furthest away you can move an object (meters).\nconst MAX_DISTANCE = 10;\n// Damper decay in milliseconds for the headset - screen uses default.\nconst DECAY = 150;\n// Longer controller/hand indicator line (meters).\nconst MAX_LINE_LENGTH = 5;\n// Maximum dimension of rotation indicator box on controller (meters).\nconst BOX_SIZE = 0.1;\nexport const ARStatus = {\n  NOT_PRESENTING: 'not-presenting',\n  SESSION_STARTED: 'session-started',\n  OBJECT_PLACED: 'object-placed',\n  FAILED: 'failed'\n};\nexport const ARTracking = {\n  TRACKING: 'tracking',\n  NOT_TRACKING: 'not-tracking'\n};\nconst vector3 = new Vector3();\nconst quaternion = new Quaternion();\nconst matrix4 = new Matrix4();\nconst hitPosition = new Vector3();\nconst camera = new PerspectiveCamera(45, 1, 0.1, 100);\nconst lineGeometry = new BufferGeometry().setFromPoints([new Vector3(0, 0, 0), new Vector3(0, 0, -1)]);\nconst boxGeometry = new BoxGeometry();\nexport class ARRenderer extends EventDispatcher {\n  constructor(renderer) {\n    super();\n    this.renderer = renderer;\n    this.currentSession = null;\n    this.placeOnWall = false;\n    this.placementBox = null;\n    this.lastTick = null;\n    this.turntableRotation = null;\n    this.oldShadowIntensity = null;\n    this.frame = null;\n    this.initialHitSource = null;\n    this.transientHitTestSource = null;\n    this.inputSource = null;\n    this._presentedScene = null;\n    this.resolveCleanup = null;\n    this.exitWebXRButtonContainer = null;\n    this.overlay = null;\n    this.xrLight = null;\n    this.xrMode = null;\n    this.controller1 = null;\n    this.controller2 = null;\n    this.selectedController = null;\n    this.tracking = true;\n    this.frames = 0;\n    this.initialized = false;\n    this.oldTarget = new Vector3();\n    this.placementComplete = false;\n    this.isTranslating = false;\n    this.isRotating = false;\n    this.isTwoFingering = false;\n    this.lastDragPosition = new Vector3();\n    this.relativeOrientation = new Quaternion();\n    this.scaleLine = new Line(lineGeometry);\n    this.firstRatio = 0;\n    this.lastAngle = 0;\n    this.goalPosition = new Vector3();\n    this.goalYaw = 0;\n    this.goalScale = 1;\n    this.xDamper = new Damper();\n    this.yDamper = new Damper();\n    this.zDamper = new Damper();\n    this.yawDamper = new Damper();\n    this.pitchDamper = new Damper();\n    this.rollDamper = new Damper();\n    this.scaleDamper = new Damper();\n    this.onExitWebXRButtonContainerClick = () => this.stopPresenting();\n    this.onControllerSelectStart = event => {\n      const scene = this.presentedScene;\n      const controller = event.target;\n      if (this.placementBox.controllerIntersection(scene, controller) != null) {\n        if (this.selectedController != null) {\n          this.selectedController.userData.line.visible = false;\n          if (scene.canScale) {\n            this.isTwoFingering = true;\n            this.firstRatio = this.controllerSeparation() / scene.pivot.scale.x;\n            this.scaleLine.visible = true;\n          }\n        }\n        controller.attach(scene.pivot);\n        this.selectedController = controller;\n        scene.setShadowIntensity(0.01);\n      } else {\n        const otherController = controller === this.controller1 ? this.controller2 : this.controller1;\n        this.relativeOrientation.copy(controller.quaternion).invert().multiply(scene.pivot.getWorldQuaternion(quaternion));\n        otherController.userData.turning = false;\n        controller.userData.turning = true;\n        controller.userData.line.visible = false;\n      }\n    };\n    this.onControllerSelectEnd = event => {\n      const controller = event.target;\n      controller.userData.turning = false;\n      controller.userData.line.visible = true;\n      this.isTwoFingering = false;\n      this.scaleLine.visible = false;\n      if (this.selectedController != null && this.selectedController != controller) {\n        return;\n      }\n      const scene = this.presentedScene;\n      // drop on floor\n      scene.attach(scene.pivot);\n      this.selectedController = null;\n      this.goalYaw = Math.atan2(scene.pivot.matrix.elements[8], scene.pivot.matrix.elements[10]);\n      this.goalPosition.x = scene.pivot.position.x;\n      this.goalPosition.z = scene.pivot.position.z;\n    };\n    this.onUpdateScene = () => {\n      if (this.placementBox != null && this.isPresenting) {\n        this.placementBox.dispose();\n        this.placementBox = new PlacementBox(this.presentedScene, this.placeOnWall ? 'back' : 'bottom');\n      }\n    };\n    this.onSelectStart = event => {\n      const hitSource = this.transientHitTestSource;\n      if (hitSource == null) {\n        return;\n      }\n      const fingers = this.frame.getHitTestResultsForTransientInput(hitSource);\n      const scene = this.presentedScene;\n      const box = this.placementBox;\n      if (fingers.length === 1) {\n        this.inputSource = event.inputSource;\n        const {\n          axes\n        } = this.inputSource.gamepad;\n        const hitPosition = box.getHit(this.presentedScene, axes[0], axes[1]);\n        box.show = true;\n        if (hitPosition != null) {\n          this.isTranslating = true;\n          this.lastDragPosition.copy(hitPosition);\n        } else if (this.placeOnWall === false) {\n          this.isRotating = true;\n          this.lastAngle = axes[0] * ROTATION_RATE;\n        }\n      } else if (fingers.length === 2) {\n        box.show = true;\n        this.isTwoFingering = true;\n        const {\n          separation\n        } = this.fingerPolar(fingers);\n        this.firstRatio = separation / scene.pivot.scale.x;\n      }\n    };\n    this.onSelectEnd = () => {\n      this.isTranslating = false;\n      this.isRotating = false;\n      this.isTwoFingering = false;\n      this.inputSource = null;\n      this.goalPosition.y += this.placementBox.offsetHeight * this.presentedScene.scale.x;\n      this.placementBox.show = false;\n    };\n    this.threeRenderer = renderer.threeRenderer;\n    this.threeRenderer.xr.enabled = true;\n  }\n  async resolveARSession() {\n    assertIsArCandidate();\n    const session = await navigator.xr.requestSession('immersive-ar', {\n      requiredFeatures: [],\n      optionalFeatures: ['hit-test', 'dom-overlay', 'light-estimation'],\n      domOverlay: this.overlay ? {\n        root: this.overlay\n      } : undefined\n    });\n    this.threeRenderer.xr.setReferenceSpaceType('local');\n    await this.threeRenderer.xr.setSession(session);\n    this.threeRenderer.xr.cameraAutoUpdate = false;\n    return session;\n  }\n  /**\n   * The currently presented scene, if any\n   */\n  get presentedScene() {\n    return this._presentedScene;\n  }\n  /**\n   * Resolves to true if the renderer has detected all the necessary qualities\n   * to support presentation in AR.\n   */\n  async supportsPresentation() {\n    try {\n      assertIsArCandidate();\n      return await navigator.xr.isSessionSupported('immersive-ar');\n    } catch (error) {\n      console.warn('Request to present in WebXR denied:');\n      console.warn(error);\n      console.warn('Falling back to next ar-mode');\n      return false;\n    }\n  }\n  /**\n   * Present a scene in AR\n   */\n  async present(scene, environmentEstimation = false) {\n    if (this.isPresenting) {\n      console.warn('Cannot present while a model is already presenting');\n    }\n    let waitForAnimationFrame = new Promise((resolve, _reject) => {\n      requestAnimationFrame(() => resolve());\n    });\n    scene.setHotspotsVisibility(false);\n    scene.queueRender();\n    // Render a frame to turn off the hotspots\n    await waitForAnimationFrame;\n    // This sets isPresenting to true\n    this._presentedScene = scene;\n    this.overlay = scene.element.shadowRoot.querySelector('div.default');\n    if (environmentEstimation === true) {\n      this.xrLight = new XREstimatedLight(this.threeRenderer);\n      this.xrLight.addEventListener('estimationstart', () => {\n        if (!this.isPresenting || this.xrLight == null) {\n          return;\n        }\n        const scene = this.presentedScene;\n        scene.add(this.xrLight);\n        scene.environment = this.xrLight.environment;\n      });\n    }\n    const currentSession = await this.resolveARSession();\n    currentSession.addEventListener('end', () => {\n      this.postSessionCleanup();\n    }, {\n      once: true\n    });\n    const exitButton = scene.element.shadowRoot.querySelector('.slot.exit-webxr-ar-button');\n    exitButton.classList.add('enabled');\n    exitButton.addEventListener('click', this.onExitWebXRButtonContainerClick);\n    this.exitWebXRButtonContainer = exitButton;\n    const viewerRefSpace = await currentSession.requestReferenceSpace('viewer');\n    this.xrMode = currentSession.interactionMode;\n    this.tracking = true;\n    this.frames = 0;\n    this.initialized = false;\n    this.turntableRotation = scene.yaw;\n    this.goalYaw = scene.yaw;\n    this.goalScale = 1;\n    scene.setBackground(null);\n    this.oldShadowIntensity = scene.shadowIntensity;\n    scene.setShadowIntensity(0.01); // invisible, but not changing the shader\n    this.oldTarget.copy(scene.getTarget());\n    scene.element.addEventListener('load', this.onUpdateScene);\n    const radians = HIT_ANGLE_DEG * Math.PI / 180;\n    const ray = this.placeOnWall === true ? undefined : new XRRay(new DOMPoint(0, 0, 0), {\n      x: 0,\n      y: -Math.sin(radians),\n      z: -Math.cos(radians)\n    });\n    currentSession.requestHitTestSource({\n      space: viewerRefSpace,\n      offsetRay: ray\n    }).then(hitTestSource => {\n      this.initialHitSource = hitTestSource;\n    });\n    if (this.xrMode !== 'screen-space') {\n      this.setupControllers();\n      this.xDamper.setDecayTime(DECAY);\n      this.yDamper.setDecayTime(DECAY);\n      this.zDamper.setDecayTime(DECAY);\n      this.yawDamper.setDecayTime(DECAY);\n      this.pitchDamper.setDecayTime(DECAY);\n      this.rollDamper.setDecayTime(DECAY);\n    }\n    this.currentSession = currentSession;\n    this.placementBox = new PlacementBox(scene, this.placeOnWall ? 'back' : 'bottom');\n    this.placementComplete = false;\n    this.lastTick = performance.now();\n    this.dispatchEvent({\n      type: 'status',\n      status: ARStatus.SESSION_STARTED\n    });\n  }\n  setupControllers() {\n    this.controller1 = this.threeRenderer.xr.getController(0);\n    this.controller1.addEventListener('selectstart', this.onControllerSelectStart);\n    this.controller1.addEventListener('selectend', this.onControllerSelectEnd);\n    this.controller2 = this.threeRenderer.xr.getController(1);\n    this.controller2.addEventListener('selectstart', this.onControllerSelectStart);\n    this.controller2.addEventListener('selectend', this.onControllerSelectEnd);\n    const scene = this.presentedScene;\n    scene.add(this.controller1);\n    scene.add(this.controller2);\n    if (!this.controller1.userData.line) {\n      const line = new Line(lineGeometry);\n      line.name = 'line';\n      line.scale.z = MAX_LINE_LENGTH;\n      this.controller1.userData.turning = false;\n      this.controller1.userData.line = line;\n      this.controller1.add(line);\n      this.controller2.userData.turning = false;\n      const line2 = line.clone();\n      this.controller2.userData.line = line2;\n      this.controller2.add(line2);\n      this.scaleLine.name = 'scale line';\n      this.scaleLine.visible = false;\n      this.controller1.add(this.scaleLine);\n      const {\n        size\n      } = scene;\n      const scale = BOX_SIZE / Math.max(size.x, size.y, size.z);\n      const box = new Mesh(boxGeometry);\n      box.name = 'box';\n      box.scale.copy(size).multiplyScalar(scale);\n      box.visible = false;\n      this.controller1.userData.box = box;\n      scene.add(box);\n      const box2 = box.clone();\n      this.controller2.userData.box = box2;\n      scene.add(box2);\n    }\n  }\n  hover(controller) {\n    // Do not highlight in mobile-ar\n    if (this.xrMode === 'screen-space' || this.selectedController == controller) {\n      return false;\n    }\n    const scene = this.presentedScene;\n    const intersection = this.placementBox.controllerIntersection(scene, controller);\n    controller.userData.box.visible = (intersection == null || controller.userData.turning) && !this.isTwoFingering;\n    controller.userData.line.scale.z = intersection == null ? MAX_LINE_LENGTH : intersection.distance;\n    return intersection != null;\n  }\n  controllerSeparation() {\n    return this.controller1.position.distanceTo(this.controller2.position);\n  }\n  /**\n   * If currently presenting a scene in AR, stops presentation and exits AR.\n   */\n  async stopPresenting() {\n    if (!this.isPresenting) {\n      return;\n    }\n    const cleanupPromise = new Promise(resolve => {\n      this.resolveCleanup = resolve;\n    });\n    try {\n      await this.currentSession.end();\n      await cleanupPromise;\n    } catch (error) {\n      console.warn('Error while trying to end WebXR AR session');\n      console.warn(error);\n      this.postSessionCleanup();\n    }\n  }\n  /**\n   * True if a scene is currently in the process of being presented in AR\n   */\n  get isPresenting() {\n    return this.presentedScene != null;\n  }\n  get target() {\n    return this.oldTarget;\n  }\n  updateTarget() {\n    const scene = this.presentedScene;\n    if (scene != null) {\n      const target = scene.getTarget();\n      this.oldTarget.copy(target);\n      if (this.placeOnWall) {\n        // Move the scene's target to the center of the back of the model's\n        // bounding box.\n        target.z = scene.boundingBox.min.z;\n      } else {\n        // Move the scene's target to the model's floor height.\n        target.y = scene.boundingBox.min.y;\n      }\n      scene.setTarget(target.x, target.y, target.z);\n    }\n  }\n  postSessionCleanup() {\n    const session = this.currentSession;\n    if (session != null) {\n      session.removeEventListener('selectstart', this.onSelectStart);\n      session.removeEventListener('selectend', this.onSelectEnd);\n      this.currentSession = null;\n    }\n    const scene = this.presentedScene;\n    this._presentedScene = null;\n    if (scene != null) {\n      const {\n        element\n      } = scene;\n      if (this.xrLight != null) {\n        scene.remove(this.xrLight);\n        this.xrLight.dispose();\n        this.xrLight = null;\n      }\n      scene.add(scene.pivot);\n      scene.pivot.quaternion.set(0, 0, 0, 1);\n      scene.pivot.position.set(0, 0, 0);\n      scene.pivot.scale.set(1, 1, 1);\n      scene.setShadowOffset(0);\n      const yaw = this.turntableRotation;\n      if (yaw != null) {\n        scene.yaw = yaw;\n      }\n      const intensity = this.oldShadowIntensity;\n      if (intensity != null) {\n        scene.setShadowIntensity(intensity);\n      }\n      scene.setEnvironmentAndSkybox(element[$currentEnvironmentMap], element[$currentBackground]);\n      const point = this.oldTarget;\n      scene.setTarget(point.x, point.y, point.z);\n      scene.xrCamera = null;\n      scene.element.removeEventListener('load', this.onUpdateScene);\n      scene.orientHotspots(0);\n      const {\n        width,\n        height\n      } = element.getBoundingClientRect();\n      scene.setSize(width, height);\n      requestAnimationFrame(() => {\n        scene.element.dispatchEvent(new CustomEvent('camera-change', {\n          detail: {\n            source: ChangeSource.NONE\n          }\n        }));\n      });\n    }\n    // Force the Renderer to update its size\n    this.renderer.height = 0;\n    const exitButton = this.exitWebXRButtonContainer;\n    if (exitButton != null) {\n      exitButton.classList.remove('enabled');\n      exitButton.removeEventListener('click', this.onExitWebXRButtonContainerClick);\n      this.exitWebXRButtonContainer = null;\n    }\n    const hitSource = this.transientHitTestSource;\n    if (hitSource != null) {\n      hitSource.cancel();\n      this.transientHitTestSource = null;\n    }\n    const hitSourceInitial = this.initialHitSource;\n    if (hitSourceInitial != null) {\n      hitSourceInitial.cancel();\n      this.initialHitSource = null;\n    }\n    if (this.placementBox != null) {\n      this.placementBox.dispose();\n      this.placementBox = null;\n    }\n    if (this.xrMode !== 'screen-space') {\n      if (this.controller1 != null) {\n        this.controller1.userData.turning = false;\n        this.controller1.userData.box.visible = false;\n        this.controller1.userData.line.visible = true;\n        this.controller1.removeEventListener('selectstart', this.onControllerSelectStart);\n        this.controller1.removeEventListener('selectend', this.onControllerSelectEnd);\n        this.controller1.removeFromParent();\n        this.controller1 = null;\n      }\n      if (this.controller2 != null) {\n        this.controller2.userData.turning = false;\n        this.controller2.userData.box.visible = false;\n        this.controller2.userData.line.visible = true;\n        this.controller2.removeEventListener('selectstart', this.onControllerSelectStart);\n        this.controller2.removeEventListener('selectend', this.onControllerSelectEnd);\n        this.controller2.removeFromParent();\n        this.controller2 = null;\n      }\n      this.selectedController = null;\n      this.scaleLine.visible = false;\n    }\n    this.isTranslating = false;\n    this.isRotating = false;\n    this.isTwoFingering = false;\n    this.lastTick = null;\n    this.turntableRotation = null;\n    this.oldShadowIntensity = null;\n    this.frame = null;\n    this.inputSource = null;\n    this.overlay = null;\n    if (this.resolveCleanup != null) {\n      this.resolveCleanup();\n    }\n    this.dispatchEvent({\n      type: 'status',\n      status: ARStatus.NOT_PRESENTING\n    });\n  }\n  updateView(view) {\n    const scene = this.presentedScene;\n    const xr = this.threeRenderer.xr;\n    xr.updateCamera(camera);\n    scene.xrCamera = xr.getCamera();\n    const {\n      elements\n    } = scene.getCamera().matrixWorld;\n    scene.orientHotspots(Math.atan2(elements[1], elements[5]));\n    if (!this.initialized) {\n      this.placeInitially();\n      this.initialized = true;\n    }\n    // Use automatic dynamic viewport scaling if supported.\n    if (view.requestViewportScale && view.recommendedViewportScale) {\n      const scale = view.recommendedViewportScale;\n      view.requestViewportScale(Math.max(scale, MIN_VIEWPORT_SCALE));\n    }\n    const layer = xr.getBaseLayer();\n    if (layer != null) {\n      const viewport = layer instanceof XRWebGLLayer ? layer.getViewport(view) : xr.getBinding().getViewSubImage(layer, view).viewport;\n      this.threeRenderer.setViewport(viewport.x, viewport.y, viewport.width, viewport.height);\n    }\n  }\n  placeInitially() {\n    const scene = this.presentedScene;\n    const {\n      pivot,\n      element\n    } = scene;\n    const {\n      position\n    } = pivot;\n    const xrCamera = scene.getCamera();\n    const {\n      width,\n      height\n    } = this.overlay.getBoundingClientRect();\n    scene.setSize(width, height);\n    xrCamera.projectionMatrixInverse.copy(xrCamera.projectionMatrix).invert();\n    const {\n      theta\n    } = element.getCameraOrbit();\n    // Orient model to match the 3D camera view\n    const cameraDirection = xrCamera.getWorldDirection(vector3);\n    scene.yaw = Math.atan2(-cameraDirection.x, -cameraDirection.z) - theta;\n    this.goalYaw = scene.yaw;\n    const radius = Math.max(1, 2 * scene.boundingSphere.radius);\n    position.copy(xrCamera.position).add(cameraDirection.multiplyScalar(radius));\n    this.updateTarget();\n    const target = scene.getTarget();\n    position.add(target).sub(this.oldTarget);\n    this.goalPosition.copy(position);\n    scene.setHotspotsVisibility(true);\n    if (this.xrMode === 'screen-space') {\n      const {\n        session\n      } = this.frame;\n      session.addEventListener('selectstart', this.onSelectStart);\n      session.addEventListener('selectend', this.onSelectEnd);\n      session.requestHitTestSourceForTransientInput({\n        profile: 'generic-touchscreen'\n      }).then(hitTestSource => {\n        this.transientHitTestSource = hitTestSource;\n      });\n    }\n  }\n  getTouchLocation() {\n    const {\n      axes\n    } = this.inputSource.gamepad;\n    let location = this.placementBox.getExpandedHit(this.presentedScene, axes[0], axes[1]);\n    if (location != null) {\n      vector3.copy(location).sub(this.presentedScene.getCamera().position);\n      if (vector3.length() > MAX_DISTANCE) return null;\n    }\n    return location;\n  }\n  getHitPoint(hitResult) {\n    const refSpace = this.threeRenderer.xr.getReferenceSpace();\n    const pose = hitResult.getPose(refSpace);\n    if (pose == null) {\n      return null;\n    }\n    const hitMatrix = matrix4.fromArray(pose.transform.matrix);\n    if (this.placeOnWall === true) {\n      // Orient the model to the wall's normal vector.\n      this.goalYaw = Math.atan2(hitMatrix.elements[4], hitMatrix.elements[6]);\n    }\n    // Check that the y-coordinate of the normal is large enough that the normal\n    // is pointing up for floor placement; opposite for wall placement.\n    return hitMatrix.elements[5] > 0.75 !== this.placeOnWall ? hitPosition.setFromMatrixPosition(hitMatrix) : null;\n  }\n  moveToFloor(frame) {\n    const hitSource = this.initialHitSource;\n    if (hitSource == null) {\n      return;\n    }\n    const hitTestResults = frame.getHitTestResults(hitSource);\n    if (hitTestResults.length == 0) {\n      return;\n    }\n    const hit = hitTestResults[0];\n    const hitPoint = this.getHitPoint(hit);\n    if (hitPoint == null) {\n      return;\n    }\n    this.placementBox.show = true;\n    // If the user is translating, let the finger hit-ray take precedence and\n    // ignore this hit result.\n    if (!this.isTranslating) {\n      if (this.placeOnWall) {\n        this.goalPosition.copy(hitPoint);\n      } else {\n        this.goalPosition.y = hitPoint.y;\n      }\n    }\n    hitSource.cancel();\n    this.initialHitSource = null;\n    this.dispatchEvent({\n      type: 'status',\n      status: ARStatus.OBJECT_PLACED\n    });\n  }\n  fingerPolar(fingers) {\n    const fingerOne = fingers[0].inputSource.gamepad.axes;\n    const fingerTwo = fingers[1].inputSource.gamepad.axes;\n    const deltaX = fingerTwo[0] - fingerOne[0];\n    const deltaY = fingerTwo[1] - fingerOne[1];\n    const angle = Math.atan2(deltaY, deltaX);\n    let deltaYaw = this.lastAngle - angle;\n    if (deltaYaw > Math.PI) {\n      deltaYaw -= 2 * Math.PI;\n    } else if (deltaYaw < -Math.PI) {\n      deltaYaw += 2 * Math.PI;\n    }\n    this.lastAngle = angle;\n    return {\n      separation: Math.sqrt(deltaX * deltaX + deltaY * deltaY),\n      deltaYaw: deltaYaw\n    };\n  }\n  setScale(separation) {\n    const scale = separation / this.firstRatio;\n    this.goalScale = Math.abs(scale - 1) < SCALE_SNAP ? 1 : scale;\n  }\n  processInput(frame) {\n    const hitSource = this.transientHitTestSource;\n    if (hitSource == null) {\n      return;\n    }\n    if (!this.isTranslating && !this.isTwoFingering && !this.isRotating) {\n      return;\n    }\n    const fingers = frame.getHitTestResultsForTransientInput(hitSource);\n    const scene = this.presentedScene;\n    const scale = scene.pivot.scale.x;\n    // Rotating, translating and scaling are mutually exclusive operations; only\n    // one can happen at a time, but we can switch during a gesture.\n    if (this.isTwoFingering) {\n      if (fingers.length < 2) {\n        // If we lose the second finger, stop scaling (in fact, stop processing\n        // input altogether until a new gesture starts).\n        this.isTwoFingering = false;\n      } else {\n        const {\n          separation,\n          deltaYaw\n        } = this.fingerPolar(fingers);\n        if (this.placeOnWall === false) {\n          this.goalYaw += deltaYaw;\n        }\n        if (scene.canScale) {\n          this.setScale(separation);\n        }\n      }\n      return;\n    } else if (fingers.length === 2) {\n      // If we were rotating or translating and we get a second finger, switch\n      // to scaling instead.\n      this.isTranslating = false;\n      this.isRotating = false;\n      this.isTwoFingering = true;\n      const {\n        separation\n      } = this.fingerPolar(fingers);\n      this.firstRatio = separation / scale;\n      return;\n    }\n    if (this.isRotating) {\n      const angle = this.inputSource.gamepad.axes[0] * ROTATION_RATE;\n      this.goalYaw += angle - this.lastAngle;\n      this.lastAngle = angle;\n    } else if (this.isTranslating) {\n      fingers.forEach(finger => {\n        if (finger.inputSource !== this.inputSource) {\n          return;\n        }\n        let hit = null;\n        if (finger.results.length > 0) {\n          hit = this.getHitPoint(finger.results[0]);\n        }\n        if (hit == null) {\n          hit = this.getTouchLocation();\n        }\n        if (hit == null) {\n          return;\n        }\n        this.goalPosition.sub(this.lastDragPosition);\n        if (this.placeOnWall === false) {\n          const offset = hit.y - this.lastDragPosition.y;\n          // When a lower floor is found, keep the model at the same height, but\n          // drop the placement box to the floor. The model falls on select end.\n          if (offset < 0) {\n            this.placementBox.offsetHeight = offset / scale;\n            this.presentedScene.setShadowOffset(offset);\n            // Interpolate hit ray up to drag plane\n            const cameraPosition = vector3.copy(scene.getCamera().position);\n            const alpha = -offset / (cameraPosition.y - hit.y);\n            cameraPosition.multiplyScalar(alpha);\n            hit.multiplyScalar(1 - alpha).add(cameraPosition);\n          }\n        }\n        this.goalPosition.add(hit);\n        this.lastDragPosition.copy(hit);\n      });\n    }\n  }\n  moveScene(delta) {\n    const scene = this.presentedScene;\n    const {\n      pivot\n    } = scene;\n    const box = this.placementBox;\n    box.updateOpacity(delta);\n    if (this.controller1) {\n      if (this.controller1.userData.turning) {\n        pivot.quaternion.copy(this.controller1.quaternion).multiply(this.relativeOrientation);\n        if (this.selectedController && this.selectedController === this.controller2) {\n          pivot.quaternion.premultiply(quaternion.copy(this.controller2.quaternion).invert());\n        }\n      }\n      this.controller1.userData.box.position.copy(this.controller1.position);\n      pivot.getWorldQuaternion(this.controller1.userData.box.quaternion);\n    }\n    if (this.controller2) {\n      if (this.controller2.userData.turning) {\n        pivot.quaternion.copy(this.controller2.quaternion).multiply(this.relativeOrientation);\n        if (this.selectedController && this.selectedController === this.controller1) {\n          pivot.quaternion.premultiply(quaternion.copy(this.controller1.quaternion).invert());\n        }\n      }\n      this.controller2.userData.box.position.copy(this.controller2.position);\n      pivot.getWorldQuaternion(this.controller2.userData.box.quaternion);\n    }\n    if (this.controller1 && this.controller2 && this.isTwoFingering) {\n      const dist = this.controllerSeparation();\n      this.setScale(dist);\n      this.scaleLine.scale.z = -dist;\n      this.scaleLine.lookAt(this.controller2.position);\n    }\n    const oldScale = scene.pivot.scale.x;\n    if (this.goalScale !== oldScale) {\n      const newScale = this.scaleDamper.update(oldScale, this.goalScale, delta, 1);\n      scene.pivot.scale.set(newScale, newScale, newScale);\n    }\n    if (pivot.parent !== scene) {\n      return; // attached to controller instead\n    }\n    const {\n      position\n    } = pivot;\n    const boundingRadius = scene.boundingSphere.radius;\n    const goal = this.goalPosition;\n    let source = ChangeSource.NONE;\n    if (!goal.equals(position)) {\n      source = ChangeSource.USER_INTERACTION;\n      let {\n        x,\n        y,\n        z\n      } = position;\n      x = this.xDamper.update(x, goal.x, delta, boundingRadius);\n      y = this.yDamper.update(y, goal.y, delta, boundingRadius);\n      z = this.zDamper.update(z, goal.z, delta, boundingRadius);\n      position.set(x, y, z);\n      if (this.xrMode === 'screen-space' && !this.isTranslating) {\n        const offset = goal.y - y;\n        if (this.placementComplete && this.placeOnWall === false) {\n          box.offsetHeight = offset / scene.pivot.scale.x;\n          scene.setShadowOffset(offset);\n        } else if (offset === 0) {\n          this.placementComplete = true;\n          box.show = false;\n          scene.setShadowIntensity(AR_SHADOW_INTENSITY);\n        }\n      }\n      if (this.xrMode !== 'screen-space' && goal.equals(position)) {\n        scene.setShadowIntensity(AR_SHADOW_INTENSITY);\n      }\n    }\n    scene.updateTarget(delta);\n    // yaw must be updated last, since this also updates the shadow position.\n    quaternion.setFromAxisAngle(vector3.set(0, 1, 0), this.goalYaw);\n    const angle = scene.pivot.quaternion.angleTo(quaternion);\n    const angleStep = angle - this.yawDamper.update(angle, 0, delta, Math.PI);\n    scene.pivot.quaternion.rotateTowards(quaternion, angleStep);\n    // camera changes on every frame - user-interaction only if touching the\n    // screen, plus damping time.\n    scene.element.dispatchEvent(new CustomEvent('camera-change', {\n      detail: {\n        source\n      }\n    }));\n  }\n  /**\n   * Only public to make it testable.\n   */\n  onWebXRFrame(time, frame) {\n    if (this.xrMode !== 'screen-space') {\n      const over1 = this.hover(this.controller1);\n      const over2 = this.hover(this.controller2);\n      this.placementBox.show = (over1 || over2) && !this.isTwoFingering;\n    }\n    this.frame = frame;\n    ++this.frames;\n    const refSpace = this.threeRenderer.xr.getReferenceSpace();\n    const pose = frame.getViewerPose(refSpace);\n    if (pose == null && this.tracking === true && this.frames > INIT_FRAMES) {\n      this.tracking = false;\n      this.dispatchEvent({\n        type: 'tracking',\n        status: ARTracking.NOT_TRACKING\n      });\n    }\n    const scene = this.presentedScene;\n    if (pose == null || scene == null || !scene.element.loaded) {\n      this.threeRenderer.clear();\n      return;\n    }\n    if (this.tracking === false) {\n      this.tracking = true;\n      this.dispatchEvent({\n        type: 'tracking',\n        status: ARTracking.TRACKING\n      });\n    }\n    // WebXR may return multiple views, i.e. for headset AR. This\n    // isn't really supported at this point, but make a best-effort\n    // attempt to render other views also, using the first view\n    // as the main viewpoint.\n    let isFirstView = true;\n    for (const view of pose.views) {\n      this.updateView(view);\n      if (isFirstView) {\n        this.moveToFloor(frame);\n        this.processInput(frame);\n        const delta = time - this.lastTick;\n        this.moveScene(delta);\n        this.renderer.preRender(scene, time, delta);\n        this.lastTick = time;\n        scene.renderShadow(this.threeRenderer);\n      }\n      this.threeRenderer.render(scene, scene.getCamera());\n      isFirstView = false;\n    }\n  }\n}\n", "import { AnimationClip, AnimationMixer, Matrix4, Quaternion, QuaternionKeyframeTrack, SkeletonHelper, Vector3, VectorKeyframeTrack } from 'three';\n\n/**\n * @module SkeletonUtils\n * @three_import import * as SkeletonUtils from 'three/addons/utils/SkeletonUtils.js';\n */\n\nfunction getBoneName(bone, options) {\n  if (options.getBoneName !== undefined) {\n    return options.getBoneName(bone);\n  }\n  return options.names[bone.name];\n}\n\n/**\n * Retargets the skeleton from the given source 3D object to the\n * target 3D object.\n *\n * @param {Object3D} target - The target 3D object.\n * @param {Object3D} source - The source 3D object.\n * @param {module:SkeletonUtils~RetargetOptions} options - The options.\n */\nfunction retarget(target, source, options = {}) {\n  const quat = new Quaternion(),\n    scale = new Vector3(),\n    relativeMatrix = new Matrix4(),\n    globalMatrix = new Matrix4();\n  options.preserveBoneMatrix = options.preserveBoneMatrix !== undefined ? options.preserveBoneMatrix : true;\n  options.preserveBonePositions = options.preserveBonePositions !== undefined ? options.preserveBonePositions : true;\n  options.useTargetMatrix = options.useTargetMatrix !== undefined ? options.useTargetMatrix : false;\n  options.hip = options.hip !== undefined ? options.hip : 'hip';\n  options.hipInfluence = options.hipInfluence !== undefined ? options.hipInfluence : new Vector3(1, 1, 1);\n  options.scale = options.scale !== undefined ? options.scale : 1;\n  options.names = options.names || {};\n  const sourceBones = source.isObject3D ? source.skeleton.bones : getBones(source),\n    bones = target.isObject3D ? target.skeleton.bones : getBones(target);\n  let bone, name, boneTo, bonesPosition;\n\n  // reset bones\n\n  if (target.isObject3D) {\n    target.skeleton.pose();\n  } else {\n    options.useTargetMatrix = true;\n    options.preserveBoneMatrix = false;\n  }\n  if (options.preserveBonePositions) {\n    bonesPosition = [];\n    for (let i = 0; i < bones.length; i++) {\n      bonesPosition.push(bones[i].position.clone());\n    }\n  }\n  if (options.preserveBoneMatrix) {\n    // reset matrix\n\n    target.updateMatrixWorld();\n    target.matrixWorld.identity();\n\n    // reset children matrix\n\n    for (let i = 0; i < target.children.length; ++i) {\n      target.children[i].updateMatrixWorld(true);\n    }\n  }\n  for (let i = 0; i < bones.length; ++i) {\n    bone = bones[i];\n    name = getBoneName(bone, options);\n    boneTo = getBoneByName(name, sourceBones);\n    globalMatrix.copy(bone.matrixWorld);\n    if (boneTo) {\n      boneTo.updateMatrixWorld();\n      if (options.useTargetMatrix) {\n        relativeMatrix.copy(boneTo.matrixWorld);\n      } else {\n        relativeMatrix.copy(target.matrixWorld).invert();\n        relativeMatrix.multiply(boneTo.matrixWorld);\n      }\n\n      // ignore scale to extract rotation\n\n      scale.setFromMatrixScale(relativeMatrix);\n      relativeMatrix.scale(scale.set(1 / scale.x, 1 / scale.y, 1 / scale.z));\n\n      // apply to global matrix\n\n      globalMatrix.makeRotationFromQuaternion(quat.setFromRotationMatrix(relativeMatrix));\n      if (target.isObject3D) {\n        if (options.localOffsets) {\n          if (options.localOffsets[bone.name]) {\n            globalMatrix.multiply(options.localOffsets[bone.name]);\n          }\n        }\n      }\n      globalMatrix.copyPosition(relativeMatrix);\n    }\n    if (name === options.hip) {\n      globalMatrix.elements[12] *= options.scale * options.hipInfluence.x;\n      globalMatrix.elements[13] *= options.scale * options.hipInfluence.y;\n      globalMatrix.elements[14] *= options.scale * options.hipInfluence.z;\n      if (options.hipPosition !== undefined) {\n        globalMatrix.elements[12] += options.hipPosition.x * options.scale;\n        globalMatrix.elements[13] += options.hipPosition.y * options.scale;\n        globalMatrix.elements[14] += options.hipPosition.z * options.scale;\n      }\n    }\n    if (bone.parent) {\n      bone.matrix.copy(bone.parent.matrixWorld).invert();\n      bone.matrix.multiply(globalMatrix);\n    } else {\n      bone.matrix.copy(globalMatrix);\n    }\n    bone.matrix.decompose(bone.position, bone.quaternion, bone.scale);\n    bone.updateMatrixWorld();\n  }\n  if (options.preserveBonePositions) {\n    for (let i = 0; i < bones.length; ++i) {\n      bone = bones[i];\n      name = getBoneName(bone, options) || bone.name;\n      if (name !== options.hip) {\n        bone.position.copy(bonesPosition[i]);\n      }\n    }\n  }\n  if (options.preserveBoneMatrix) {\n    // restore matrix\n\n    target.updateMatrixWorld(true);\n  }\n}\n\n/**\n * Retargets the animation clip of the source object to the\n * target 3D object.\n *\n * @param {Object3D} target - The target 3D object.\n * @param {Object3D} source - The source 3D object.\n * @param {AnimationClip} clip - The animation clip.\n * @param {module:SkeletonUtils~RetargetOptions} options - The options.\n * @return {AnimationClip} The retargeted animation clip.\n */\nfunction retargetClip(target, source, clip, options = {}) {\n  options.useFirstFramePosition = options.useFirstFramePosition !== undefined ? options.useFirstFramePosition : false;\n\n  // Calculate the fps from the source clip based on the track with the most frames, unless fps is already provided.\n  options.fps = options.fps !== undefined ? options.fps : Math.max(...clip.tracks.map(track => track.times.length)) / clip.duration;\n  options.names = options.names || [];\n  if (!source.isObject3D) {\n    source = getHelperFromSkeleton(source);\n  }\n  const numFrames = Math.round(clip.duration * (options.fps / 1000) * 1000),\n    delta = clip.duration / (numFrames - 1),\n    convertedTracks = [],\n    mixer = new AnimationMixer(source),\n    bones = getBones(target.skeleton),\n    boneDatas = [];\n  let positionOffset, bone, boneTo, boneData, name;\n  mixer.clipAction(clip).play();\n\n  // trim\n\n  let start = 0,\n    end = numFrames;\n  if (options.trim !== undefined) {\n    start = Math.round(options.trim[0] * options.fps);\n    end = Math.min(Math.round(options.trim[1] * options.fps), numFrames) - start;\n    mixer.update(options.trim[0]);\n  } else {\n    mixer.update(0);\n  }\n  source.updateMatrixWorld();\n\n  //\n\n  for (let frame = 0; frame < end; ++frame) {\n    const time = frame * delta;\n    retarget(target, source, options);\n    for (let j = 0; j < bones.length; ++j) {\n      bone = bones[j];\n      name = getBoneName(bone, options) || bone.name;\n      boneTo = getBoneByName(name, source.skeleton);\n      if (boneTo) {\n        boneData = boneDatas[j] = boneDatas[j] || {\n          bone: bone\n        };\n        if (options.hip === name) {\n          if (!boneData.pos) {\n            boneData.pos = {\n              times: new Float32Array(end),\n              values: new Float32Array(end * 3)\n            };\n          }\n          if (options.useFirstFramePosition) {\n            if (frame === 0) {\n              positionOffset = bone.position.clone();\n            }\n            bone.position.sub(positionOffset);\n          }\n          boneData.pos.times[frame] = time;\n          bone.position.toArray(boneData.pos.values, frame * 3);\n        }\n        if (!boneData.quat) {\n          boneData.quat = {\n            times: new Float32Array(end),\n            values: new Float32Array(end * 4)\n          };\n        }\n        boneData.quat.times[frame] = time;\n        bone.quaternion.toArray(boneData.quat.values, frame * 4);\n      }\n    }\n    if (frame === end - 2) {\n      // last mixer update before final loop iteration\n      // make sure we do not go over or equal to clip duration\n      mixer.update(delta - 0.0000001);\n    } else {\n      mixer.update(delta);\n    }\n    source.updateMatrixWorld();\n  }\n  for (let i = 0; i < boneDatas.length; ++i) {\n    boneData = boneDatas[i];\n    if (boneData) {\n      if (boneData.pos) {\n        convertedTracks.push(new VectorKeyframeTrack('.bones[' + boneData.bone.name + '].position', boneData.pos.times, boneData.pos.values));\n      }\n      convertedTracks.push(new QuaternionKeyframeTrack('.bones[' + boneData.bone.name + '].quaternion', boneData.quat.times, boneData.quat.values));\n    }\n  }\n  mixer.uncacheAction(clip);\n  return new AnimationClip(clip.name, -1, convertedTracks);\n}\n\n/**\n * Clones the given 3D object and its descendants, ensuring that any `SkinnedMesh` instances are\n * correctly associated with their bones. Bones are also cloned, and must be descendants of the\n * object passed to this method. Other data, like geometries and materials, are reused by reference.\n *\n * @param {Object3D} source - The 3D object to clone.\n * @return {Object3D} The cloned 3D object.\n */\nfunction clone(source) {\n  const sourceLookup = new Map();\n  const cloneLookup = new Map();\n  const clone = source.clone();\n  parallelTraverse(source, clone, function (sourceNode, clonedNode) {\n    sourceLookup.set(clonedNode, sourceNode);\n    cloneLookup.set(sourceNode, clonedNode);\n  });\n  clone.traverse(function (node) {\n    if (!node.isSkinnedMesh) return;\n    const clonedMesh = node;\n    const sourceMesh = sourceLookup.get(node);\n    const sourceBones = sourceMesh.skeleton.bones;\n    clonedMesh.skeleton = sourceMesh.skeleton.clone();\n    clonedMesh.bindMatrix.copy(sourceMesh.bindMatrix);\n    clonedMesh.skeleton.bones = sourceBones.map(function (bone) {\n      return cloneLookup.get(bone);\n    });\n    clonedMesh.bind(clonedMesh.skeleton, clonedMesh.bindMatrix);\n  });\n  return clone;\n}\n\n// internal helper\n\nfunction getBoneByName(name, skeleton) {\n  for (let i = 0, bones = getBones(skeleton); i < bones.length; i++) {\n    if (name === bones[i].name) return bones[i];\n  }\n}\nfunction getBones(skeleton) {\n  return Array.isArray(skeleton) ? skeleton : skeleton.bones;\n}\nfunction getHelperFromSkeleton(skeleton) {\n  const source = new SkeletonHelper(skeleton.bones[0]);\n  source.skeleton = skeleton;\n  return source;\n}\nfunction parallelTraverse(a, b, callback) {\n  callback(a, b);\n  for (let i = 0; i < a.children.length; i++) {\n    parallelTraverse(a.children[i], b.children[i], callback);\n  }\n}\n\n/**\n * Retarget options of `SkeletonUtils`.\n *\n * @typedef {Object} module:SkeletonUtils~RetargetOptions\n * @property {boolean} [useFirstFramePosition=false] - Whether to use the position of the first frame or not.\n * @property {number} [fps] - The FPS of the clip.\n * @property {Object<string,string>} [names] - A dictionary for mapping target to source bone names.\n * @property {function(string):string} [getBoneName] - A function for mapping bone names. Alternative to `names`.\n * @property {Array<number>} [trim] - Whether to trim the clip or not. If set the array should hold two values for the start and end.\n * @property {boolean} [preserveBoneMatrix=true] - Whether to preserve bone matrices or not.\n * @property {boolean} [preserveBonePositions=true] - Whether to preserve bone positions or not.\n * @property {boolean} [useTargetMatrix=false] - Whether to use the target matrix or not.\n * @property {string} [hip='hip'] - The name of the source's hip bone.\n * @property {Vector3} [hipInfluence=(1,1,1)] - The hip influence.\n * @property {number} [scale=1] - The scale.\n **/\n\nexport { retarget, retargetClip, clone };", "/* @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Texture } from 'three';\nimport * as SkeletonUtils from 'three/examples/jsm/utils/SkeletonUtils.js';\nexport const $prepared = Symbol('prepared');\nexport const $prepare = Symbol('prepare');\nexport const $preparedGLTF = Symbol('preparedGLTF');\nexport const $clone = Symbol('clone');\n/**\n * Represents the preparation and enhancement of the output of a Three.js\n * GLTFLoader (a Three.js-flavor \"GLTF\"), to make it suitable for optimal,\n * correct viewing in a given presentation context and also make the cloning\n * process more explicit and legible.\n *\n * A GLTFInstance is API-compatible with a Three.js-flavor \"GLTF\", so it should\n * be considered to be interchangeable with the loaded result of a GLTFLoader.\n *\n * This basic implementation only implements trivial preparation and enhancement\n * of a GLTF. These operations are intended to be enhanced by inheriting\n * classes.\n */\nexport class GLTFInstance {\n  /**\n   * Prepares a given GLTF for presentation and future cloning. A GLTF that is\n   * prepared can safely have this method invoked on it multiple times; it will\n   * only be prepared once, including after being cloned.\n   */\n  static prepare(source) {\n    if (source.scene == null) {\n      throw new Error('Model does not have a scene');\n    }\n    if (source[$prepared]) {\n      return source;\n    }\n    const prepared = this[$prepare](source);\n    // NOTE: ES5 Symbol polyfill is not compatible with spread operator\n    // so {...prepared, [$prepared]: true} does not work\n    prepared[$prepared] = true;\n    return prepared;\n  }\n  /**\n   * Override in an inheriting class to apply specialty one-time preparations\n   * for a given input GLTF.\n   */\n  static [$prepare](source) {\n    // TODO(#195,#1003): We don't currently support multiple scenes, so we don't\n    // bother preparing extra scenes for now:\n    const {\n      scene\n    } = source;\n    const scenes = [scene];\n    return Object.assign(Object.assign({}, source), {\n      scene,\n      scenes\n    });\n  }\n  get parser() {\n    return this[$preparedGLTF].parser;\n  }\n  get animations() {\n    return this[$preparedGLTF].animations;\n  }\n  get scene() {\n    return this[$preparedGLTF].scene;\n  }\n  get scenes() {\n    return this[$preparedGLTF].scenes;\n  }\n  get cameras() {\n    return this[$preparedGLTF].cameras;\n  }\n  get asset() {\n    return this[$preparedGLTF].asset;\n  }\n  get userData() {\n    return this[$preparedGLTF].userData;\n  }\n  constructor(preparedGLTF) {\n    this[$preparedGLTF] = preparedGLTF;\n  }\n  /**\n   * Creates and returns a copy of this instance.\n   */\n  clone() {\n    const GLTFInstanceConstructor = this.constructor;\n    const clonedGLTF = this[$clone]();\n    return new GLTFInstanceConstructor(clonedGLTF);\n  }\n  /**\n   * Cleans up any retained memory that might not otherwise be released when\n   * this instance is done being used.\n   */\n  dispose() {\n    this.scenes.forEach(scene => {\n      scene.traverse(object => {\n        const mesh = object;\n        if (!mesh.material) {\n          return;\n        }\n        const materials = Array.isArray(mesh.material) ? mesh.material : [mesh.material];\n        materials.forEach(material => {\n          // Explicitly dispose any textures assigned to this material\n          for (const propertyName in material) {\n            const texture = material[propertyName];\n            if (texture instanceof Texture) {\n              const image = texture.source.data;\n              if (image.close != null) {\n                image.close();\n              }\n              texture.dispose();\n            }\n          }\n          material.dispose();\n        });\n        mesh.geometry.dispose();\n      });\n    });\n  }\n  /**\n   * Override in an inheriting class to implement specialized cloning strategies\n   */\n  [$clone]() {\n    const source = this[$preparedGLTF];\n    // TODO(#195,#1003): We don't currently support multiple scenes, so we don't\n    // bother cloning extra scenes for now:\n    const scene = SkeletonUtils.clone(this.scene);\n    cloneVariantMaterials(scene, this.scene);\n    const scenes = [scene];\n    const userData = source.userData ? Object.assign({}, source.userData) : {};\n    return Object.assign(Object.assign({}, source), {\n      scene,\n      scenes,\n      userData\n    });\n  }\n}\n// Variant materials and original material instances are stored under\n// object.userData.variantMaterials/originalMaterial.\n// Three.js Object3D.clone() doesn't clone Three.js objects under\n// .userData so this function is a workaround.\nconst cloneVariantMaterials = (dst, src) => {\n  traversePair(dst, src, (dst, src) => {\n    if (src.userData.variantMaterials !== undefined) {\n      dst.userData.variantMaterials = new Map(src.userData.variantMaterials);\n    }\n    if (src.userData.variantData !== undefined) {\n      dst.userData.variantData = src.userData.variantData;\n    }\n    if (src.userData.originalMaterial !== undefined) {\n      dst.userData.originalMaterial = src.userData.originalMaterial;\n    }\n  });\n};\nconst traversePair = (obj1, obj2, callback) => {\n  callback(obj1, obj2);\n  // Assume obj1 and obj2 have the same tree structure\n  for (let i = 0; i < obj1.children.length; i++) {\n    traversePair(obj1.children[i], obj2.children[i], callback);\n  }\n};\n", "import { Material } from 'three';\nconst $threeGLTF = Symbol('threeGLTF');\nconst $gltf = Symbol('gltf');\nconst $gltfElementMap = Symbol('gltfElementMap');\nconst $threeObjectMap = Symbol('threeObjectMap');\nconst $parallelTraverseThreeScene = Symbol('parallelTraverseThreeScene');\nconst $correlateOriginalThreeGLTF = Symbol('correlateOriginalThreeGLTF');\nconst $correlateCloneThreeGLTF = Symbol('correlateCloneThreeGLTF');\n/**\n * The Three.js GLTFLoader provides us with an in-memory representation\n * of a glTF in terms of Three.js constructs. It also provides us with a copy\n * of the deserialized glTF without any Three.js decoration, and a mapping of\n * glTF elements to their corresponding Three.js constructs.\n *\n * A CorrelatedSceneGraph exposes a synchronously available mapping of glTF\n * element references to their corresponding Three.js constructs.\n */\nexport class CorrelatedSceneGraph {\n  /**\n   * Produce a CorrelatedSceneGraph from a naturally generated Three.js GLTF.\n   * Such GLTFs are produced by Three.js' GLTFLoader, and contain cached\n   * details that expedite the correlation step.\n   *\n   * If a CorrelatedSceneGraph is provided as the second argument, re-correlates\n   * a cloned Three.js GLTF with a clone of the glTF hierarchy used to produce\n   * the upstream Three.js GLTF that the clone was created from. The result\n   * CorrelatedSceneGraph is representative of the cloned hierarchy.\n   */\n  static from(threeGLTF, upstreamCorrelatedSceneGraph) {\n    if (upstreamCorrelatedSceneGraph != null) {\n      return this[$correlateCloneThreeGLTF](threeGLTF, upstreamCorrelatedSceneGraph);\n    } else {\n      return this[$correlateOriginalThreeGLTF](threeGLTF);\n    }\n  }\n  static [$correlateOriginalThreeGLTF](threeGLTF) {\n    const gltf = threeGLTF.parser.json;\n    const associations = threeGLTF.parser.associations;\n    const gltfElementMap = new Map();\n    const defaultMaterial = {\n      name: 'Default'\n    };\n    const defaultReference = {\n      type: 'materials',\n      index: -1\n    };\n    for (const threeMaterial of associations.keys()) {\n      // Note: GLTFLoader creates a \"default\" material that has no\n      // corresponding glTF element in the case that no materials are\n      // specified in the source glTF. In this case we append a default\n      // material to allow this to be operated upon.\n      if (threeMaterial instanceof Material && associations.get(threeMaterial) == null) {\n        if (defaultReference.index < 0) {\n          if (gltf.materials == null) {\n            gltf.materials = [];\n          }\n          defaultReference.index = gltf.materials.length;\n          gltf.materials.push(defaultMaterial);\n        }\n        threeMaterial.name = defaultMaterial.name;\n        associations.set(threeMaterial, {\n          materials: defaultReference.index\n        });\n      }\n    }\n    // Creates a reverse look up map (gltf-object to Three-object)\n    for (const [threeObject, gltfMappings] of associations) {\n      if (gltfMappings) {\n        threeObject.userData = threeObject.userData || {};\n        threeObject.userData.associations = gltfMappings;\n      }\n      for (const mapping in gltfMappings) {\n        if (mapping != null && mapping !== 'primitives') {\n          const type = mapping;\n          const elementArray = gltf[type] || [];\n          const gltfElement = elementArray[gltfMappings[type]];\n          if (gltfElement == null) {\n            // TODO: Maybe throw here...\n            continue;\n          }\n          let threeObjects = gltfElementMap.get(gltfElement);\n          if (threeObjects == null) {\n            threeObjects = new Set();\n            gltfElementMap.set(gltfElement, threeObjects);\n          }\n          threeObjects.add(threeObject);\n        }\n      }\n    }\n    return new CorrelatedSceneGraph(threeGLTF, gltf, associations, gltfElementMap);\n  }\n  /**\n   * Transfers the association between a raw glTF and a Three.js scene graph\n   * to a clone of the Three.js scene graph, resolved as a new\n   * CorrelatedSceneGraph instance.\n   */\n  static [$correlateCloneThreeGLTF](cloneThreeGLTF, upstreamCorrelatedSceneGraph) {\n    const originalThreeGLTF = upstreamCorrelatedSceneGraph.threeGLTF;\n    const originalGLTF = upstreamCorrelatedSceneGraph.gltf;\n    const cloneGLTF = JSON.parse(JSON.stringify(originalGLTF));\n    const cloneThreeObjectMap = new Map();\n    const cloneGLTFElementMap = new Map();\n    for (let i = 0; i < originalThreeGLTF.scenes.length; i++) {\n      this[$parallelTraverseThreeScene](originalThreeGLTF.scenes[i], cloneThreeGLTF.scenes[i], (object, cloneObject) => {\n        const elementReference = upstreamCorrelatedSceneGraph.threeObjectMap.get(object);\n        if (elementReference == null) {\n          return;\n        }\n        for (const mapping in elementReference) {\n          if (mapping != null && mapping !== 'primitives') {\n            const type = mapping;\n            const index = elementReference[type];\n            const cloneElement = cloneGLTF[type][index];\n            const mappings = cloneThreeObjectMap.get(cloneObject) || {};\n            mappings[type] = index;\n            cloneThreeObjectMap.set(cloneObject, mappings);\n            const cloneObjects = cloneGLTFElementMap.get(cloneElement) || new Set();\n            cloneObjects.add(cloneObject);\n            cloneGLTFElementMap.set(cloneElement, cloneObjects);\n          }\n        }\n      });\n    }\n    return new CorrelatedSceneGraph(cloneThreeGLTF, cloneGLTF, cloneThreeObjectMap, cloneGLTFElementMap);\n  }\n  /**\n   * Traverses two presumably identical Three.js scenes, and invokes a\n   * callback for each Object3D or Material encountered, including the initial\n   * scene. Adapted from\n   * https://github.com/mrdoob/three.js/blob/7c1424c5819ab622a346dd630ee4e6431388021e/examples/jsm/utils/SkeletonUtils.js#L586-L596\n   */\n  static [$parallelTraverseThreeScene](sceneOne, sceneTwo, callback) {\n    const traverse = (a, b) => {\n      callback(a, b);\n      if (a.isObject3D) {\n        const meshA = a;\n        const meshB = b;\n        if (meshA.material) {\n          if (Array.isArray(meshA.material)) {\n            for (let i = 0; i < meshA.material.length; ++i) {\n              callback(meshA.material[i], meshB.material[i]);\n            }\n          } else {\n            callback(meshA.material, meshB.material);\n          }\n        }\n        for (let i = 0; i < a.children.length; ++i) {\n          traverse(a.children[i], b.children[i]);\n        }\n      }\n    };\n    traverse(sceneOne, sceneTwo);\n  }\n  /**\n   * The source Three.js GLTF result given to us by a Three.js GLTFLoader.\n   */\n  get threeGLTF() {\n    return this[$threeGLTF];\n  }\n  /**\n   * The in-memory deserialized source glTF.\n   */\n  get gltf() {\n    return this[$gltf];\n  }\n  /**\n   * A Map of glTF element references to arrays of corresponding Three.js\n   * object references. Three.js objects are kept in arrays to account for\n   * cases where more than one Three.js object corresponds to a single glTF\n   * element.\n   */\n  get gltfElementMap() {\n    return this[$gltfElementMap];\n  }\n  /**\n   * A map of individual Three.js objects to corresponding elements in the\n   * source glTF.\n   */\n  get threeObjectMap() {\n    return this[$threeObjectMap];\n  }\n  constructor(threeGLTF, gltf, threeObjectMap, gltfElementMap) {\n    this[$threeGLTF] = threeGLTF;\n    this[$gltf] = gltf;\n    this[$gltfElementMap] = gltfElementMap;\n    this[$threeObjectMap] = threeObjectMap;\n  }\n}\n", "/* @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { FrontSide, Sphere } from 'three';\nimport { $clone, $prepare, $preparedGLTF, GLTFInstance } from '../GLTFInstance.js';\nimport { CorrelatedSceneGraph } from './correlated-scene-graph.js';\nconst $correlatedSceneGraph = Symbol('correlatedSceneGraph');\n/**\n * This specialization of GLTFInstance collects all of the processing needed\n * to prepare a model and to clone it making special considerations for\n * <model-viewer> use cases.\n */\nexport class ModelViewerGLTFInstance extends GLTFInstance {\n  /**\n   * @override\n   */\n  static [$prepare](source) {\n    const prepared = super[$prepare](source);\n    if (prepared[$correlatedSceneGraph] == null) {\n      prepared[$correlatedSceneGraph] = CorrelatedSceneGraph.from(prepared);\n    }\n    const {\n      scene\n    } = prepared;\n    const nullSphere = new Sphere(undefined, Infinity);\n    scene.traverse(node => {\n      // Set a high renderOrder while we're here to ensure the model\n      // always renders on top of the sky sphere\n      node.renderOrder = 1000;\n      // Three.js seems to cull some animated models incorrectly. Since we\n      // expect to view our whole scene anyway, we turn off the frustum\n      // culling optimization here.\n      node.frustumCulled = false;\n      // Animations for objects without names target their UUID instead. When\n      // objects are cloned, they get new UUIDs which the animation can't\n      // find. To fix this, we assign their UUID as their name.\n      if (!node.name) {\n        node.name = node.uuid;\n      }\n      const mesh = node;\n      if (mesh.material) {\n        const {\n          geometry\n        } = mesh;\n        mesh.castShadow = true;\n        if (mesh.isSkinnedMesh) {\n          // Akin to disabling frustum culling above, we have to also manually\n          // disable the bounds to make raycasting correct for skinned meshes.\n          geometry.boundingSphere = nullSphere;\n          // The bounding box is set in GLTFLoader by the accessor bounds, which\n          // are not updated with animation.\n          geometry.boundingBox = null;\n        }\n        const material = mesh.material;\n        if (material.isMeshBasicMaterial === true) {\n          material.toneMapped = false;\n        }\n        // This makes shadows better for non-manifold meshes\n        material.shadowSide = FrontSide;\n        // Fixes an edge case with unused extra UV-coords being incorrectly\n        // referenced by three.js; remove when\n        // https://github.com/mrdoob/three.js/pull/23974 is merged.\n        if (material.aoMap) {\n          const {\n            gltf,\n            threeObjectMap\n          } = prepared[$correlatedSceneGraph];\n          const gltfRef = threeObjectMap.get(material);\n          if (gltf.materials != null && gltfRef != null && gltfRef.materials != null) {\n            const gltfMaterial = gltf.materials[gltfRef.materials];\n            if (gltfMaterial.occlusionTexture && gltfMaterial.occlusionTexture.texCoord === 0 && geometry.attributes.uv != null) {\n              geometry.setAttribute('uv2', geometry.attributes.uv);\n            }\n          }\n        }\n      }\n    });\n    return prepared;\n  }\n  get correlatedSceneGraph() {\n    return this[$preparedGLTF][$correlatedSceneGraph];\n  }\n  /**\n   * @override\n   */\n  [$clone]() {\n    const clone = super[$clone]();\n    const sourceUUIDToClonedMaterial = new Map();\n    clone.scene.traverse(node => {\n      // Materials aren't cloned when cloning meshes; geometry\n      // and materials are copied by reference. This is necessary\n      // for the same model to be used twice with different\n      // scene-graph operations.\n      const mesh = node;\n      if (mesh.material) {\n        const material = mesh.material;\n        if (material != null) {\n          if (sourceUUIDToClonedMaterial.has(material.uuid)) {\n            mesh.material = sourceUUIDToClonedMaterial.get(material.uuid);\n            return;\n          }\n          mesh.material = material.clone();\n          sourceUUIDToClonedMaterial.set(material.uuid, mesh.material);\n        }\n      }\n      const light = node;\n      if (light.target !== undefined) {\n        // The target's parent is lost in the cloning process, but in\n        // GLTFLoader, all light targets are children of their light.\n        light.add(light.target);\n      }\n    });\n    // Cross-correlate the scene graph by relying on information in the\n    // current scene graph; without this step, relationships between the\n    // Three.js object graph and the glTF scene graph will be lost.\n    clone[$correlatedSceneGraph] = CorrelatedSceneGraph.from(clone, this.correlatedSceneGraph);\n    return clone;\n  }\n}\n", "/**\n * @monogrid/gainmap-js v3.1.0\n * With ❤️, by MONOGRID <rnd@monogrid.com>\n */\n\nimport { RGBAFormat, LinearFilter, ClampToEdgeWrapping, Scene, OrthographicCamera, HalfFloatType, FloatType, Mesh, PlaneGeometry, WebGLRenderTarget, UVMapping, WebGLRenderer, DataTexture, LinearSRGBColorSpace, ShaderMaterial, Texture, IntType, ShortType, ByteType, UnsignedIntType, UnsignedByteType, MeshBasicMaterial } from 'three';\nconst getBufferForType = (type, width, height) => {\n  let out;\n  switch (type) {\n    case UnsignedByteType:\n      out = new Uint8ClampedArray(width * height * 4);\n      break;\n    case HalfFloatType:\n      out = new Uint16Array(width * height * 4);\n      break;\n    case UnsignedIntType:\n      out = new Uint32Array(width * height * 4);\n      break;\n    case ByteType:\n      out = new Int8Array(width * height * 4);\n      break;\n    case ShortType:\n      out = new Int16Array(width * height * 4);\n      break;\n    case IntType:\n      out = new Int32Array(width * height * 4);\n      break;\n    case FloatType:\n      out = new Float32Array(width * height * 4);\n      break;\n    default:\n      throw new Error('Unsupported data type');\n  }\n  return out;\n};\nlet _canReadPixelsResult;\n/**\n * Test if this browser implementation can correctly read pixels from the specified\n * Render target type.\n *\n * Runs only once\n *\n * @param type\n * @param renderer\n * @param camera\n * @param renderTargetOptions\n * @returns\n */\nconst canReadPixels = (type, renderer, camera, renderTargetOptions) => {\n  if (_canReadPixelsResult !== undefined) return _canReadPixelsResult;\n  const testRT = new WebGLRenderTarget(1, 1, renderTargetOptions);\n  renderer.setRenderTarget(testRT);\n  const mesh = new Mesh(new PlaneGeometry(), new MeshBasicMaterial({\n    color: 0xffffff\n  }));\n  renderer.render(mesh, camera);\n  renderer.setRenderTarget(null);\n  const out = getBufferForType(type, testRT.width, testRT.height);\n  renderer.readRenderTargetPixels(testRT, 0, 0, testRT.width, testRT.height, out);\n  testRT.dispose();\n  mesh.geometry.dispose();\n  mesh.material.dispose();\n  _canReadPixelsResult = out[0] !== 0;\n  return _canReadPixelsResult;\n};\n/**\n * Utility class used for rendering a texture with a material\n *\n * @category Core\n * @group Core\n */\nclass QuadRenderer {\n  /**\n   * Constructs a new QuadRenderer\n   *\n   * @param options Parameters for this QuadRenderer\n   */\n  constructor(options) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r;\n    this._rendererIsDisposable = false;\n    this._supportsReadPixels = true;\n    /**\n     * Renders the input texture using the specified material\n     */\n    this.render = () => {\n      this._renderer.setRenderTarget(this._renderTarget);\n      try {\n        this._renderer.render(this._scene, this._camera);\n      } catch (e) {\n        this._renderer.setRenderTarget(null);\n        throw e;\n      }\n      this._renderer.setRenderTarget(null);\n    };\n    this._width = options.width;\n    this._height = options.height;\n    this._type = options.type;\n    this._colorSpace = options.colorSpace;\n    const rtOptions = {\n      // fixed options\n      format: RGBAFormat,\n      depthBuffer: false,\n      stencilBuffer: false,\n      // user options\n      type: this._type,\n      // set in class property\n      colorSpace: this._colorSpace,\n      // set in class property\n      anisotropy: ((_a = options.renderTargetOptions) === null || _a === void 0 ? void 0 : _a.anisotropy) !== undefined ? (_b = options.renderTargetOptions) === null || _b === void 0 ? void 0 : _b.anisotropy : 1,\n      generateMipmaps: ((_c = options.renderTargetOptions) === null || _c === void 0 ? void 0 : _c.generateMipmaps) !== undefined ? (_d = options.renderTargetOptions) === null || _d === void 0 ? void 0 : _d.generateMipmaps : false,\n      magFilter: ((_e = options.renderTargetOptions) === null || _e === void 0 ? void 0 : _e.magFilter) !== undefined ? (_f = options.renderTargetOptions) === null || _f === void 0 ? void 0 : _f.magFilter : LinearFilter,\n      minFilter: ((_g = options.renderTargetOptions) === null || _g === void 0 ? void 0 : _g.minFilter) !== undefined ? (_h = options.renderTargetOptions) === null || _h === void 0 ? void 0 : _h.minFilter : LinearFilter,\n      samples: ((_j = options.renderTargetOptions) === null || _j === void 0 ? void 0 : _j.samples) !== undefined ? (_k = options.renderTargetOptions) === null || _k === void 0 ? void 0 : _k.samples : undefined,\n      wrapS: ((_l = options.renderTargetOptions) === null || _l === void 0 ? void 0 : _l.wrapS) !== undefined ? (_m = options.renderTargetOptions) === null || _m === void 0 ? void 0 : _m.wrapS : ClampToEdgeWrapping,\n      wrapT: ((_o = options.renderTargetOptions) === null || _o === void 0 ? void 0 : _o.wrapT) !== undefined ? (_p = options.renderTargetOptions) === null || _p === void 0 ? void 0 : _p.wrapT : ClampToEdgeWrapping\n    };\n    this._material = options.material;\n    if (options.renderer) {\n      this._renderer = options.renderer;\n    } else {\n      this._renderer = QuadRenderer.instantiateRenderer();\n      this._rendererIsDisposable = true;\n    }\n    this._scene = new Scene();\n    this._camera = new OrthographicCamera();\n    this._camera.position.set(0, 0, 10);\n    this._camera.left = -0.5;\n    this._camera.right = 0.5;\n    this._camera.top = 0.5;\n    this._camera.bottom = -0.5;\n    this._camera.updateProjectionMatrix();\n    if (!canReadPixels(this._type, this._renderer, this._camera, rtOptions)) {\n      let alternativeType;\n      switch (this._type) {\n        case HalfFloatType:\n          alternativeType = this._renderer.extensions.has('EXT_color_buffer_float') ? FloatType : undefined;\n          break;\n      }\n      if (alternativeType !== undefined) {\n        console.warn(`This browser does not support reading pixels from ${this._type} RenderTargets, switching to ${FloatType}`);\n        this._type = alternativeType;\n      } else {\n        this._supportsReadPixels = false;\n        console.warn('This browser dos not support toArray or toDataTexture, calls to those methods will result in an error thrown');\n      }\n    }\n    this._quad = new Mesh(new PlaneGeometry(), this._material);\n    this._quad.geometry.computeBoundingBox();\n    this._scene.add(this._quad);\n    this._renderTarget = new WebGLRenderTarget(this.width, this.height, rtOptions);\n    this._renderTarget.texture.mapping = ((_q = options.renderTargetOptions) === null || _q === void 0 ? void 0 : _q.mapping) !== undefined ? (_r = options.renderTargetOptions) === null || _r === void 0 ? void 0 : _r.mapping : UVMapping;\n  }\n  /**\n   * Instantiates a temporary renderer\n   *\n   * @returns\n   */\n  static instantiateRenderer() {\n    const renderer = new WebGLRenderer();\n    renderer.setSize(128, 128);\n    // renderer.outputColorSpace = SRGBColorSpace\n    // renderer.toneMapping = LinearToneMapping\n    // renderer.debug.checkShaderErrors = false\n    // this._rendererIsDisposable = true\n    return renderer;\n  }\n  /**\n   * Obtains a Buffer containing the rendered texture.\n   *\n   * @throws Error if the browser cannot read pixels from this RenderTarget type.\n   * @returns a TypedArray containing RGBA values from this renderer\n   */\n  toArray() {\n    if (!this._supportsReadPixels) throw new Error('Can\\'t read pixels in this browser');\n    const out = getBufferForType(this._type, this._width, this._height);\n    this._renderer.readRenderTargetPixels(this._renderTarget, 0, 0, this._width, this._height, out);\n    return out;\n  }\n  /**\n   * Performs a readPixel operation in the renderTarget\n   * and returns a DataTexture containing the read data\n   *\n   * @param options options\n   * @returns\n   */\n  toDataTexture(options) {\n    const returnValue = new DataTexture(\n    // fixed values\n    this.toArray(), this.width, this.height, RGBAFormat, this._type,\n    // user values\n    (options === null || options === void 0 ? void 0 : options.mapping) || UVMapping, (options === null || options === void 0 ? void 0 : options.wrapS) || ClampToEdgeWrapping, (options === null || options === void 0 ? void 0 : options.wrapT) || ClampToEdgeWrapping, (options === null || options === void 0 ? void 0 : options.magFilter) || LinearFilter, (options === null || options === void 0 ? void 0 : options.minFilter) || LinearFilter, (options === null || options === void 0 ? void 0 : options.anisotropy) || 1,\n    // fixed value\n    LinearSRGBColorSpace);\n    // set this afterwards, we can't set it in constructor\n    returnValue.generateMipmaps = (options === null || options === void 0 ? void 0 : options.generateMipmaps) !== undefined ? options === null || options === void 0 ? void 0 : options.generateMipmaps : false;\n    return returnValue;\n  }\n  /**\n   * If using a disposable renderer, it will dispose it.\n   */\n  disposeOnDemandRenderer() {\n    this._renderer.setRenderTarget(null);\n    if (this._rendererIsDisposable) {\n      this._renderer.dispose();\n      this._renderer.forceContextLoss();\n    }\n  }\n  /**\n   * Will dispose of **all** assets used by this renderer.\n   *\n   *\n   * @param disposeRenderTarget will dispose of the renderTarget which will not be usable later\n   * set this to true if you passed the `renderTarget.texture` to a `PMREMGenerator`\n   * or are otherwise done with it.\n   *\n   * @example\n   * ```js\n   * const loader = new HDRJPGLoader(renderer)\n   * const result = await loader.loadAsync('gainmap.jpeg')\n   * const mesh = new Mesh(geometry, new MeshBasicMaterial({ map: result.renderTarget.texture }) )\n   * // DO NOT dispose the renderTarget here,\n   * // it is used directly in the material\n   * result.dispose()\n   * ```\n   *\n   * @example\n   * ```js\n   * const loader = new HDRJPGLoader(renderer)\n   * const pmremGenerator = new PMREMGenerator( renderer );\n   * const result = await loader.loadAsync('gainmap.jpeg')\n   * const envMap = pmremGenerator.fromEquirectangular(result.renderTarget.texture)\n   * const mesh = new Mesh(geometry, new MeshStandardMaterial({ envMap }) )\n   * // renderTarget can be disposed here\n   * // because it was used to generate a PMREM texture\n   * result.dispose(true)\n   * ```\n   */\n  dispose(disposeRenderTarget) {\n    this.disposeOnDemandRenderer();\n    if (disposeRenderTarget) {\n      this.renderTarget.dispose();\n    }\n    // dispose shader material texture uniforms\n    if (this.material instanceof ShaderMaterial) {\n      Object.values(this.material.uniforms).forEach(v => {\n        if (v.value instanceof Texture) v.value.dispose();\n      });\n    }\n    // dispose other material properties\n    Object.values(this.material).forEach(value => {\n      if (value instanceof Texture) value.dispose();\n    });\n    this.material.dispose();\n    this._quad.geometry.dispose();\n  }\n  /**\n   * Width of the texture\n   */\n  get width() {\n    return this._width;\n  }\n  set width(value) {\n    this._width = value;\n    this._renderTarget.setSize(this._width, this._height);\n  }\n  /**\n   * Height of the texture\n   */\n  get height() {\n    return this._height;\n  }\n  set height(value) {\n    this._height = value;\n    this._renderTarget.setSize(this._width, this._height);\n  }\n  /**\n   * The renderer used\n   */\n  get renderer() {\n    return this._renderer;\n  }\n  /**\n   * The `WebGLRenderTarget` used.\n   */\n  get renderTarget() {\n    return this._renderTarget;\n  }\n  set renderTarget(value) {\n    this._renderTarget = value;\n    this._width = value.width;\n    this._height = value.height;\n    // this._type = value.texture.type\n  }\n  /**\n   * The `Material` used.\n   */\n  get material() {\n    return this._material;\n  }\n  /**\n   *\n   */\n  get type() {\n    return this._type;\n  }\n  get colorSpace() {\n    return this._colorSpace;\n  }\n}\nexport { QuadRenderer as Q };", "/**\n * @monogrid/gainmap-js v3.1.0\n * With ❤️, by MONOGRID <rnd@monogrid.com>\n */\n\nimport { Q as QuadRenderer } from './QuadRenderer-DuOPRGA4.js';\nimport { ShaderMaterial, Vector3, NoBlending, SRGBColorSpace, LinearSRGBColorSpace, HalfFloatType, Loader, LoadingManager, Texture, UVMapping, ClampToEdgeWrapping, LinearFilter, LinearMipMapLinearFilter, RGBAFormat, UnsignedByteType, FileLoader } from 'three';\nconst vertexShader = /* glsl */`\nvarying vec2 vUv;\n\nvoid main() {\n  vUv = uv;\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}\n`;\nconst fragmentShader = /* glsl */`\n// min half float value\n#define HALF_FLOAT_MIN vec3( -65504, -65504, -65504 )\n// max half float value\n#define HALF_FLOAT_MAX vec3( 65504, 65504, 65504 )\n\nuniform sampler2D sdr;\nuniform sampler2D gainMap;\nuniform vec3 gamma;\nuniform vec3 offsetHdr;\nuniform vec3 offsetSdr;\nuniform vec3 gainMapMin;\nuniform vec3 gainMapMax;\nuniform float weightFactor;\n\nvarying vec2 vUv;\n\nvoid main() {\n  vec3 rgb = texture2D( sdr, vUv ).rgb;\n  vec3 recovery = texture2D( gainMap, vUv ).rgb;\n  vec3 logRecovery = pow( recovery, gamma );\n  vec3 logBoost = gainMapMin * ( 1.0 - logRecovery ) + gainMapMax * logRecovery;\n  vec3 hdrColor = (rgb + offsetSdr) * exp2( logBoost * weightFactor ) - offsetHdr;\n  vec3 clampedHdrColor = max( HALF_FLOAT_MIN, min( HALF_FLOAT_MAX, hdrColor ));\n  gl_FragColor = vec4( clampedHdrColor , 1.0 );\n}\n`;\n/**\n * A Material which is able to decode the Gainmap into a full HDR Representation\n *\n * @category Materials\n * @group Materials\n */\nclass GainMapDecoderMaterial extends ShaderMaterial {\n  /**\n   *\n   * @param params\n   */\n  constructor({\n    gamma,\n    offsetHdr,\n    offsetSdr,\n    gainMapMin,\n    gainMapMax,\n    maxDisplayBoost,\n    hdrCapacityMin,\n    hdrCapacityMax,\n    sdr,\n    gainMap\n  }) {\n    super({\n      name: 'GainMapDecoderMaterial',\n      vertexShader,\n      fragmentShader,\n      uniforms: {\n        sdr: {\n          value: sdr\n        },\n        gainMap: {\n          value: gainMap\n        },\n        gamma: {\n          value: new Vector3(1.0 / gamma[0], 1.0 / gamma[1], 1.0 / gamma[2])\n        },\n        offsetHdr: {\n          value: new Vector3().fromArray(offsetHdr)\n        },\n        offsetSdr: {\n          value: new Vector3().fromArray(offsetSdr)\n        },\n        gainMapMin: {\n          value: new Vector3().fromArray(gainMapMin)\n        },\n        gainMapMax: {\n          value: new Vector3().fromArray(gainMapMax)\n        },\n        weightFactor: {\n          value: (Math.log2(maxDisplayBoost) - hdrCapacityMin) / (hdrCapacityMax - hdrCapacityMin)\n        }\n      },\n      blending: NoBlending,\n      depthTest: false,\n      depthWrite: false\n    });\n    this._maxDisplayBoost = maxDisplayBoost;\n    this._hdrCapacityMin = hdrCapacityMin;\n    this._hdrCapacityMax = hdrCapacityMax;\n    this.needsUpdate = true;\n    this.uniformsNeedUpdate = true;\n  }\n  get sdr() {\n    return this.uniforms.sdr.value;\n  }\n  set sdr(value) {\n    this.uniforms.sdr.value = value;\n  }\n  get gainMap() {\n    return this.uniforms.gainMap.value;\n  }\n  set gainMap(value) {\n    this.uniforms.gainMap.value = value;\n  }\n  /**\n   * @see {@link GainMapMetadata.offsetHdr}\n   */\n  get offsetHdr() {\n    return this.uniforms.offsetHdr.value.toArray();\n  }\n  set offsetHdr(value) {\n    this.uniforms.offsetHdr.value.fromArray(value);\n  }\n  /**\n   * @see {@link GainMapMetadata.offsetSdr}\n   */\n  get offsetSdr() {\n    return this.uniforms.offsetSdr.value.toArray();\n  }\n  set offsetSdr(value) {\n    this.uniforms.offsetSdr.value.fromArray(value);\n  }\n  /**\n   * @see {@link GainMapMetadata.gainMapMin}\n   */\n  get gainMapMin() {\n    return this.uniforms.gainMapMin.value.toArray();\n  }\n  set gainMapMin(value) {\n    this.uniforms.gainMapMin.value.fromArray(value);\n  }\n  /**\n   * @see {@link GainMapMetadata.gainMapMax}\n   */\n  get gainMapMax() {\n    return this.uniforms.gainMapMax.value.toArray();\n  }\n  set gainMapMax(value) {\n    this.uniforms.gainMapMax.value.fromArray(value);\n  }\n  /**\n   * @see {@link GainMapMetadata.gamma}\n   */\n  get gamma() {\n    const g = this.uniforms.gamma.value;\n    return [1 / g.x, 1 / g.y, 1 / g.z];\n  }\n  set gamma(value) {\n    const g = this.uniforms.gamma.value;\n    g.x = 1.0 / value[0];\n    g.y = 1.0 / value[1];\n    g.z = 1.0 / value[2];\n  }\n  /**\n   * @see {@link GainMapMetadata.hdrCapacityMin}\n   * @remarks Logarithmic space\n   */\n  get hdrCapacityMin() {\n    return this._hdrCapacityMin;\n  }\n  set hdrCapacityMin(value) {\n    this._hdrCapacityMin = value;\n    this.calculateWeight();\n  }\n  /**\n   * @see {@link GainMapMetadata.hdrCapacityMin}\n   * @remarks Logarithmic space\n   */\n  get hdrCapacityMax() {\n    return this._hdrCapacityMax;\n  }\n  set hdrCapacityMax(value) {\n    this._hdrCapacityMax = value;\n    this.calculateWeight();\n  }\n  /**\n   * @see {@link GainmapDecodingParameters.maxDisplayBoost}\n   * @remarks Non Logarithmic space\n   */\n  get maxDisplayBoost() {\n    return this._maxDisplayBoost;\n  }\n  set maxDisplayBoost(value) {\n    this._maxDisplayBoost = Math.max(1, Math.min(65504, value));\n    this.calculateWeight();\n  }\n  calculateWeight() {\n    const val = (Math.log2(this._maxDisplayBoost) - this._hdrCapacityMin) / (this._hdrCapacityMax - this._hdrCapacityMin);\n    this.uniforms.weightFactor.value = Math.max(0, Math.min(1, val));\n  }\n}\n\n/**\n * Decodes a gain map using a WebGLRenderTarget\n *\n * @category Decoding Functions\n * @group Decoding Functions\n * @example\n * import { decode } from '@monogrid/gainmap-js'\n * import {\n *   Mesh,\n *   MeshBasicMaterial,\n *   PerspectiveCamera,\n *   PlaneGeometry,\n *   Scene,\n *   TextureLoader,\n *   WebGLRenderer\n * } from 'three'\n *\n * const renderer = new WebGLRenderer()\n *\n * const textureLoader = new TextureLoader()\n *\n * // load SDR Representation\n * const sdr = await textureLoader.loadAsync('sdr.jpg')\n * // load Gain map recovery image\n * const gainMap = await textureLoader.loadAsync('gainmap.jpg')\n * // load metadata\n * const metadata = await (await fetch('metadata.json')).json()\n *\n * const result = await decode({\n *   sdr,\n *   gainMap,\n *   // this allows to use `result.renderTarget.texture` directly\n *   renderer,\n *   // this will restore the full HDR range\n *   maxDisplayBoost: Math.pow(2, metadata.hdrCapacityMax),\n *   ...metadata\n * })\n *\n * const scene = new Scene()\n * // `result` can be used to populate a Texture\n * const mesh = new Mesh(\n *   new PlaneGeometry(),\n *   new MeshBasicMaterial({ map: result.renderTarget.texture })\n * )\n * scene.add(mesh)\n * renderer.render(scene, new PerspectiveCamera())\n *\n * // result must be manually disposed\n * // when you are done using it\n * result.dispose()\n *\n * @param params\n * @returns\n * @throws {Error} if the WebGLRenderer fails to render the gain map\n */\nconst decode = params => {\n  const {\n    sdr,\n    gainMap,\n    renderer\n  } = params;\n  if (sdr.colorSpace !== SRGBColorSpace) {\n    console.warn('SDR Colorspace needs to be *SRGBColorSpace*, setting it automatically');\n    sdr.colorSpace = SRGBColorSpace;\n  }\n  sdr.needsUpdate = true;\n  if (gainMap.colorSpace !== LinearSRGBColorSpace) {\n    console.warn('Gainmap Colorspace needs to be *LinearSRGBColorSpace*, setting it automatically');\n    gainMap.colorSpace = LinearSRGBColorSpace;\n  }\n  gainMap.needsUpdate = true;\n  const material = new GainMapDecoderMaterial({\n    ...params,\n    sdr,\n    gainMap\n  });\n  const quadRenderer = new QuadRenderer({\n    // TODO: three types are generic, eslint complains here, see how we can solve\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n    width: sdr.image.width,\n    // TODO: three types are generic, eslint complains here, see how we can solve\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n    height: sdr.image.height,\n    type: HalfFloatType,\n    colorSpace: LinearSRGBColorSpace,\n    material,\n    renderer,\n    renderTargetOptions: params.renderTargetOptions\n  });\n  try {\n    quadRenderer.render();\n  } catch (e) {\n    quadRenderer.disposeOnDemandRenderer();\n    throw e;\n  }\n  return quadRenderer;\n};\nclass GainMapNotFoundError extends Error {}\nclass XMPMetadataNotFoundError extends Error {}\nconst getXMLValue = (xml, tag, defaultValue) => {\n  // Check for attribute format first: tag=\"value\"\n  const attributeMatch = new RegExp(`${tag}=\"([^\"]*)\"`, 'i').exec(xml);\n  if (attributeMatch) return attributeMatch[1];\n  // Check for tag format: <tag>value</tag> or <tag><rdf:li>value</rdf:li>...</tag>\n  const tagMatch = new RegExp(`<${tag}[^>]*>([\\\\s\\\\S]*?)</${tag}>`, 'i').exec(xml);\n  if (tagMatch) {\n    // Check if it contains rdf:li elements\n    const liValues = tagMatch[1].match(/<rdf:li>([^<]*)<\\/rdf:li>/g);\n    if (liValues && liValues.length === 3) {\n      return liValues.map(v => v.replace(/<\\/?rdf:li>/g, ''));\n    }\n    return tagMatch[1].trim();\n  }\n  if (defaultValue !== undefined) return defaultValue;\n  throw new Error(`Can't find ${tag} in gainmap metadata`);\n};\nconst extractXMP = input => {\n  let str;\n  // support node test environment\n  if (typeof TextDecoder !== 'undefined') str = new TextDecoder().decode(input);else str = input.toString();\n  let start = str.indexOf('<x:xmpmeta');\n  while (start !== -1) {\n    const end = str.indexOf('x:xmpmeta>', start);\n    const xmpBlock = str.slice(start, end + 10);\n    try {\n      const gainMapMin = getXMLValue(xmpBlock, 'hdrgm:GainMapMin', '0');\n      const gainMapMax = getXMLValue(xmpBlock, 'hdrgm:GainMapMax');\n      const gamma = getXMLValue(xmpBlock, 'hdrgm:Gamma', '1');\n      const offsetSDR = getXMLValue(xmpBlock, 'hdrgm:OffsetSDR', '0.015625');\n      const offsetHDR = getXMLValue(xmpBlock, 'hdrgm:OffsetHDR', '0.015625');\n      // These are always attributes, so we can use a simpler regex\n      const hdrCapacityMinMatch = /hdrgm:HDRCapacityMin=\"([^\"]*)\"/.exec(xmpBlock);\n      const hdrCapacityMin = hdrCapacityMinMatch ? hdrCapacityMinMatch[1] : '0';\n      const hdrCapacityMaxMatch = /hdrgm:HDRCapacityMax=\"([^\"]*)\"/.exec(xmpBlock);\n      if (!hdrCapacityMaxMatch) throw new Error('Incomplete gainmap metadata');\n      const hdrCapacityMax = hdrCapacityMaxMatch[1];\n      return {\n        gainMapMin: Array.isArray(gainMapMin) ? gainMapMin.map(v => parseFloat(v)) : [parseFloat(gainMapMin), parseFloat(gainMapMin), parseFloat(gainMapMin)],\n        gainMapMax: Array.isArray(gainMapMax) ? gainMapMax.map(v => parseFloat(v)) : [parseFloat(gainMapMax), parseFloat(gainMapMax), parseFloat(gainMapMax)],\n        gamma: Array.isArray(gamma) ? gamma.map(v => parseFloat(v)) : [parseFloat(gamma), parseFloat(gamma), parseFloat(gamma)],\n        offsetSdr: Array.isArray(offsetSDR) ? offsetSDR.map(v => parseFloat(v)) : [parseFloat(offsetSDR), parseFloat(offsetSDR), parseFloat(offsetSDR)],\n        offsetHdr: Array.isArray(offsetHDR) ? offsetHDR.map(v => parseFloat(v)) : [parseFloat(offsetHDR), parseFloat(offsetHDR), parseFloat(offsetHDR)],\n        hdrCapacityMin: parseFloat(hdrCapacityMin),\n        hdrCapacityMax: parseFloat(hdrCapacityMax)\n      };\n    } catch (e) {\n      // Continue searching for another xmpmeta block if this one fails\n    }\n    start = str.indexOf('<x:xmpmeta', end);\n  }\n};\n\n/**\n * MPF Extractor (Multi Picture Format Extractor)\n * By Henrik S Nilsson 2019\n *\n * Extracts images stored in images based on the MPF format (found here: https://www.cipa.jp/e/std/std-sec.html\n * under \"CIPA DC-007-Translation-2021 Multi-Picture Format\"\n *\n * Overly commented, and without intention of being complete or production ready.\n * Created to extract depth maps from iPhone images, and to learn about image metadata.\n * Kudos to: Phil Harvey (exiftool), Jaume Sanchez (android-lens-blur-depth-extractor)\n */\nclass MPFExtractor {\n  constructor(options) {\n    this.options = {\n      debug: options && options.debug !== undefined ? options.debug : false,\n      extractFII: options && options.extractFII !== undefined ? options.extractFII : true,\n      extractNonFII: options && options.extractNonFII !== undefined ? options.extractNonFII : true\n    };\n  }\n  extract(imageArrayBuffer) {\n    return new Promise((resolve, reject) => {\n      const debug = this.options.debug;\n      const dataView = new DataView(imageArrayBuffer.buffer);\n      // If you're executing this line on a big endian machine, it'll be reversed.\n      // bigEnd further down though, refers to the endianness of the image itself.\n      if (dataView.getUint16(0) !== 0xffd8) {\n        reject(new Error('Not a valid jpeg'));\n        return;\n      }\n      const length = dataView.byteLength;\n      let offset = 2;\n      let loops = 0;\n      let marker; // APP# marker\n      while (offset < length) {\n        if (++loops > 250) {\n          reject(new Error(`Found no marker after ${loops} loops 😵`));\n          return;\n        }\n        if (dataView.getUint8(offset) !== 0xff) {\n          reject(new Error(`Not a valid marker at offset 0x${offset.toString(16)}, found: 0x${dataView.getUint8(offset).toString(16)}`));\n          return;\n        }\n        marker = dataView.getUint8(offset + 1);\n        if (debug) console.log(`Marker: ${marker.toString(16)}`);\n        if (marker === 0xe2) {\n          if (debug) console.log('Found APP2 marker (0xffe2)');\n          // Works for iPhone 8 Plus, X, and XSMax. Or any photos of MPF format.\n          // Great way to visualize image information in html is using Exiftool. E.g.:\n          // ./exiftool.exe -htmldump -wantTrailer photo.jpg > photo.html\n          const formatPt = offset + 4;\n          /*\n           *  Structure of the MP Format Identifier\n           *\n           *  Offset Addr.  | Code (Hex)  | Description\n           *  +00             ff            Marker Prefix      <-- offset\n           *  +01             e2            APP2\n           *  +02             #n            APP2 Field Length\n           *  +03             #n            APP2 Field Length\n           *  +04             4d            'M'                <-- formatPt\n           *  +05             50            'P'\n           *  +06             46            'F'\n           *  +07             00            NULL\n           *                                                   <-- tiffOffset\n           */\n          if (dataView.getUint32(formatPt) === 0x4d504600) {\n            // Found MPF tag, so we start dig out sub images\n            const tiffOffset = formatPt + 4;\n            let bigEnd; // Endianness from TIFF header\n            // Test for TIFF validity and endianness\n            // 0x4949 and 0x4D4D ('II' and 'MM') marks Little Endian and Big Endian\n            if (dataView.getUint16(tiffOffset) === 0x4949) {\n              bigEnd = false;\n            } else if (dataView.getUint16(tiffOffset) === 0x4d4d) {\n              bigEnd = true;\n            } else {\n              reject(new Error('No valid endianness marker found in TIFF header'));\n              return;\n            }\n            if (dataView.getUint16(tiffOffset + 2, !bigEnd) !== 0x002a) {\n              reject(new Error('Not valid TIFF data! (no 0x002A marker)'));\n              return;\n            }\n            // 32 bit number stating the offset from the start of the 8 Byte MP Header\n            // to MP Index IFD Least possible value is thus 8 (means 0 offset)\n            const firstIFDOffset = dataView.getUint32(tiffOffset + 4, !bigEnd);\n            if (firstIFDOffset < 0x00000008) {\n              reject(new Error('Not valid TIFF data! (First offset less than 8)'));\n              return;\n            }\n            // Move ahead to MP Index IFD\n            // Assume we're at the first IFD, so firstIFDOffset points to\n            // MP Index IFD and not MP Attributes IFD. (If we try extract from a sub image,\n            // we fail silently here due to this assumption)\n            // Count (2 Byte) | MP Index Fields a.k.a. MP Entries (count * 12 Byte) | Offset of Next IFD (4 Byte)\n            const dirStart = tiffOffset + firstIFDOffset; // Start of IFD (Image File Directory)\n            const count = dataView.getUint16(dirStart, !bigEnd); // Count of MPEntries (2 Byte)\n            // Extract info from MPEntries (starting after Count)\n            const entriesStart = dirStart + 2;\n            let numberOfImages = 0;\n            for (let i = entriesStart; i < entriesStart + 12 * count; i += 12) {\n              // Each entry is 12 Bytes long\n              // Check MP Index IFD tags, here we only take tag 0xb001 = Number of images\n              if (dataView.getUint16(i, !bigEnd) === 0xb001) {\n                // stored in Last 4 bytes of its 12 Byte entry.\n                numberOfImages = dataView.getUint32(i + 8, !bigEnd);\n              }\n            }\n            const nextIFDOffsetLen = 4; // 4 Byte offset field that appears after MP Index IFD tags\n            const MPImageListValPt = dirStart + 2 + count * 12 + nextIFDOffsetLen;\n            const images = [];\n            for (let i = MPImageListValPt; i < MPImageListValPt + numberOfImages * 16; i += 16) {\n              const image = {\n                MPType: dataView.getUint32(i, !bigEnd),\n                size: dataView.getUint32(i + 4, !bigEnd),\n                // This offset is specified relative to the address of the MP Endian\n                // field in the MP Header, unless the image is a First Individual Image,\n                // in which case the value of the offset shall be NULL (0x00000000).\n                dataOffset: dataView.getUint32(i + 8, !bigEnd),\n                dependantImages: dataView.getUint32(i + 12, !bigEnd),\n                start: -1,\n                end: -1,\n                isFII: false\n              };\n              if (!image.dataOffset) {\n                // dataOffset is 0x00000000 for First Individual Image\n                image.start = 0;\n                image.isFII = true;\n              } else {\n                image.start = tiffOffset + image.dataOffset;\n                image.isFII = false;\n              }\n              image.end = image.start + image.size;\n              images.push(image);\n            }\n            if (this.options.extractNonFII && images.length) {\n              const bufferBlob = new Blob([dataView]);\n              const imgs = [];\n              for (const image of images) {\n                if (image.isFII && !this.options.extractFII) {\n                  continue; // Skip FII\n                }\n                const imageBlob = bufferBlob.slice(image.start, image.end + 1, 'image/jpeg');\n                // we don't need this\n                // const imageUrl = URL.createObjectURL(imageBlob)\n                // image.img = document.createElement('img')\n                // image.img.src = imageUrl\n                imgs.push(imageBlob);\n              }\n              resolve(imgs);\n            }\n          }\n        }\n        offset += 2 + dataView.getUint16(offset + 2);\n      }\n    });\n  }\n}\n\n/**\n * Extracts XMP Metadata and the gain map recovery image\n * from a single JPEG file.\n *\n * @category Decoding Functions\n * @group Decoding Functions\n * @param jpegFile an `Uint8Array` containing and encoded JPEG file\n * @returns an sdr `Uint8Array` compressed in JPEG, a gainMap `Uint8Array` compressed in JPEG and the XMP parsed XMP metadata\n * @throws Error if XMP Metadata is not found\n * @throws Error if Gain map image is not found\n * @example\n * import { FileLoader } from 'three'\n * import { extractGainmapFromJPEG } from '@monogrid/gainmap-js'\n *\n * const jpegFile = await new FileLoader()\n *  .setResponseType('arraybuffer')\n *  .loadAsync('image.jpg')\n *\n * const { sdr, gainMap, metadata } = extractGainmapFromJPEG(jpegFile)\n */\nconst extractGainmapFromJPEG = async jpegFile => {\n  const metadata = extractXMP(jpegFile);\n  if (!metadata) throw new XMPMetadataNotFoundError('Gain map XMP metadata not found');\n  const mpfExtractor = new MPFExtractor({\n    extractFII: true,\n    extractNonFII: true\n  });\n  const images = await mpfExtractor.extract(jpegFile);\n  if (images.length !== 2) throw new GainMapNotFoundError('Gain map recovery image not found');\n  return {\n    sdr: new Uint8Array(await images[0].arrayBuffer()),\n    gainMap: new Uint8Array(await images[1].arrayBuffer()),\n    metadata\n  };\n};\n\n/**\n * private function, async get image from blob\n *\n * @param blob\n * @returns\n */\nconst getHTMLImageFromBlob = blob => {\n  return new Promise((resolve, reject) => {\n    const img = document.createElement('img');\n    img.onload = () => {\n      resolve(img);\n    };\n    img.onerror = e => {\n      reject(e);\n    };\n    img.src = URL.createObjectURL(blob);\n  });\n};\nclass LoaderBase extends Loader {\n  /**\n   *\n   * @param renderer\n   * @param manager\n   */\n  constructor(renderer, manager) {\n    super(manager);\n    if (renderer) this._renderer = renderer;\n    this._internalLoadingManager = new LoadingManager();\n  }\n  /**\n   * Specify the renderer to use when rendering the gain map\n   *\n   * @param renderer\n   * @returns\n   */\n  setRenderer(renderer) {\n    this._renderer = renderer;\n    return this;\n  }\n  /**\n   * Specify the renderTarget options to use when rendering the gain map\n   *\n   * @param options\n   * @returns\n   */\n  setRenderTargetOptions(options) {\n    this._renderTargetOptions = options;\n    return this;\n  }\n  /**\n   * @private\n   * @returns\n   */\n  prepareQuadRenderer() {\n    if (!this._renderer) console.warn('WARNING: An existing WebGL Renderer was not passed to this Loader constructor or in setRenderer, the result of this Loader will need to be converted to a Data Texture with toDataTexture() before you can use it in your renderer.');\n    // temporary values\n    const material = new GainMapDecoderMaterial({\n      gainMapMax: [1, 1, 1],\n      gainMapMin: [0, 0, 0],\n      gamma: [1, 1, 1],\n      offsetHdr: [1, 1, 1],\n      offsetSdr: [1, 1, 1],\n      hdrCapacityMax: 1,\n      hdrCapacityMin: 0,\n      maxDisplayBoost: 1,\n      gainMap: new Texture(),\n      sdr: new Texture()\n    });\n    return new QuadRenderer({\n      width: 16,\n      height: 16,\n      type: HalfFloatType,\n      colorSpace: LinearSRGBColorSpace,\n      material,\n      renderer: this._renderer,\n      renderTargetOptions: this._renderTargetOptions\n    });\n  }\n  /**\n  * @private\n  * @param quadRenderer\n  * @param metadata\n  * @param sdrBuffer\n  * @param gainMapBuffer\n  */\n  async render(quadRenderer, metadata, sdrBuffer, gainMapBuffer) {\n    // this is optional, will render a black gain-map if not present\n    const gainMapBlob = gainMapBuffer ? new Blob([gainMapBuffer], {\n      type: 'image/jpeg'\n    }) : undefined;\n    const sdrBlob = new Blob([sdrBuffer], {\n      type: 'image/jpeg'\n    });\n    let sdrImage;\n    let gainMapImage;\n    let needsFlip = false;\n    if (typeof createImageBitmap === 'undefined') {\n      const res = await Promise.all([gainMapBlob ? getHTMLImageFromBlob(gainMapBlob) : Promise.resolve(undefined), getHTMLImageFromBlob(sdrBlob)]);\n      gainMapImage = res[0];\n      sdrImage = res[1];\n      needsFlip = true;\n    } else {\n      const res = await Promise.all([gainMapBlob ? createImageBitmap(gainMapBlob, {\n        imageOrientation: 'flipY'\n      }) : Promise.resolve(undefined), createImageBitmap(sdrBlob, {\n        imageOrientation: 'flipY'\n      })]);\n      gainMapImage = res[0];\n      sdrImage = res[1];\n    }\n    const gainMap = new Texture(gainMapImage || new ImageData(2, 2), UVMapping, ClampToEdgeWrapping, ClampToEdgeWrapping, LinearFilter, LinearMipMapLinearFilter, RGBAFormat, UnsignedByteType, 1, LinearSRGBColorSpace);\n    gainMap.flipY = needsFlip;\n    gainMap.needsUpdate = true;\n    const sdr = new Texture(sdrImage, UVMapping, ClampToEdgeWrapping, ClampToEdgeWrapping, LinearFilter, LinearMipMapLinearFilter, RGBAFormat, UnsignedByteType, 1, SRGBColorSpace);\n    sdr.flipY = needsFlip;\n    sdr.needsUpdate = true;\n    quadRenderer.width = sdrImage.width;\n    quadRenderer.height = sdrImage.height;\n    quadRenderer.material.gainMap = gainMap;\n    quadRenderer.material.sdr = sdr;\n    quadRenderer.material.gainMapMin = metadata.gainMapMin;\n    quadRenderer.material.gainMapMax = metadata.gainMapMax;\n    quadRenderer.material.offsetHdr = metadata.offsetHdr;\n    quadRenderer.material.offsetSdr = metadata.offsetSdr;\n    quadRenderer.material.gamma = metadata.gamma;\n    quadRenderer.material.hdrCapacityMin = metadata.hdrCapacityMin;\n    quadRenderer.material.hdrCapacityMax = metadata.hdrCapacityMax;\n    quadRenderer.material.maxDisplayBoost = Math.pow(2, metadata.hdrCapacityMax);\n    quadRenderer.material.needsUpdate = true;\n    quadRenderer.render();\n  }\n}\n\n/**\n * A Three.js Loader for the gain map format.\n *\n * @category Loaders\n * @group Loaders\n *\n * @example\n * import { GainMapLoader } from '@monogrid/gainmap-js'\n * import {\n *   EquirectangularReflectionMapping,\n *   LinearFilter,\n *   Mesh,\n *   MeshBasicMaterial,\n *   PerspectiveCamera,\n *   PlaneGeometry,\n *   Scene,\n *   WebGLRenderer\n * } from 'three'\n *\n * const renderer = new WebGLRenderer()\n *\n * const loader = new GainMapLoader(renderer)\n *\n * const result = await loader.loadAsync(['sdr.jpeg', 'gainmap.jpeg', 'metadata.json'])\n * // `result` can be used to populate a Texture\n *\n * const scene = new Scene()\n * const mesh = new Mesh(\n *   new PlaneGeometry(),\n *   new MeshBasicMaterial({ map: result.renderTarget.texture })\n * )\n * scene.add(mesh)\n * renderer.render(scene, new PerspectiveCamera())\n *\n * // Starting from three.js r159\n * // `result.renderTarget.texture` can\n * // also be used as Equirectangular scene background\n * //\n * // it was previously needed to convert it\n * // to a DataTexture with `result.toDataTexture()`\n * scene.background = result.renderTarget.texture\n * scene.background.mapping = EquirectangularReflectionMapping\n *\n * // result must be manually disposed\n * // when you are done using it\n * result.dispose()\n *\n */\nclass GainMapLoader extends LoaderBase {\n  /**\n   * Loads a gainmap using separate data\n   * * sdr image\n   * * gain map image\n   * * metadata json\n   *\n   * useful for webp gain maps\n   *\n   * @param urls An array in the form of [sdr.jpg, gainmap.jpg, metadata.json]\n   * @param onLoad Load complete callback, will receive the result\n   * @param onProgress Progress callback, will receive a {@link ProgressEvent}\n   * @param onError Error callback\n   * @returns\n   */\n  load([sdrUrl, gainMapUrl, metadataUrl], onLoad, onProgress, onError) {\n    const quadRenderer = this.prepareQuadRenderer();\n    let sdr;\n    let gainMap;\n    let metadata;\n    const loadCheck = async () => {\n      if (sdr && gainMap && metadata) {\n        // solves #16\n        try {\n          await this.render(quadRenderer, metadata, sdr, gainMap);\n        } catch (error) {\n          this.manager.itemError(sdrUrl);\n          this.manager.itemError(gainMapUrl);\n          this.manager.itemError(metadataUrl);\n          if (typeof onError === 'function') onError(error);\n          quadRenderer.disposeOnDemandRenderer();\n          return;\n        }\n        if (typeof onLoad === 'function') onLoad(quadRenderer);\n        this.manager.itemEnd(sdrUrl);\n        this.manager.itemEnd(gainMapUrl);\n        this.manager.itemEnd(metadataUrl);\n        quadRenderer.disposeOnDemandRenderer();\n      }\n    };\n    let sdrLengthComputable = true;\n    let sdrTotal = 0;\n    let sdrLoaded = 0;\n    let gainMapLengthComputable = true;\n    let gainMapTotal = 0;\n    let gainMapLoaded = 0;\n    let metadataLengthComputable = true;\n    let metadataTotal = 0;\n    let metadataLoaded = 0;\n    const progressHandler = () => {\n      if (typeof onProgress === 'function') {\n        const total = sdrTotal + gainMapTotal + metadataTotal;\n        const loaded = sdrLoaded + gainMapLoaded + metadataLoaded;\n        const lengthComputable = sdrLengthComputable && gainMapLengthComputable && metadataLengthComputable;\n        onProgress(new ProgressEvent('progress', {\n          lengthComputable,\n          loaded,\n          total\n        }));\n      }\n    };\n    this.manager.itemStart(sdrUrl);\n    this.manager.itemStart(gainMapUrl);\n    this.manager.itemStart(metadataUrl);\n    const sdrLoader = new FileLoader(this._internalLoadingManager);\n    sdrLoader.setResponseType('arraybuffer');\n    sdrLoader.setRequestHeader(this.requestHeader);\n    sdrLoader.setPath(this.path);\n    sdrLoader.setWithCredentials(this.withCredentials);\n    sdrLoader.load(sdrUrl, async buffer => {\n      /* istanbul ignore if\n       this condition exists only because of three.js types + strict mode\n      */\n      if (typeof buffer === 'string') throw new Error('Invalid sdr buffer');\n      sdr = buffer;\n      await loadCheck();\n    }, e => {\n      sdrLengthComputable = e.lengthComputable;\n      sdrLoaded = e.loaded;\n      sdrTotal = e.total;\n      progressHandler();\n    }, error => {\n      this.manager.itemError(sdrUrl);\n      if (typeof onError === 'function') onError(error);\n    });\n    const gainMapLoader = new FileLoader(this._internalLoadingManager);\n    gainMapLoader.setResponseType('arraybuffer');\n    gainMapLoader.setRequestHeader(this.requestHeader);\n    gainMapLoader.setPath(this.path);\n    gainMapLoader.setWithCredentials(this.withCredentials);\n    gainMapLoader.load(gainMapUrl, async buffer => {\n      /* istanbul ignore if\n       this condition exists only because of three.js types + strict mode\n      */\n      if (typeof buffer === 'string') throw new Error('Invalid gainmap buffer');\n      gainMap = buffer;\n      await loadCheck();\n    }, e => {\n      gainMapLengthComputable = e.lengthComputable;\n      gainMapLoaded = e.loaded;\n      gainMapTotal = e.total;\n      progressHandler();\n    }, error => {\n      this.manager.itemError(gainMapUrl);\n      if (typeof onError === 'function') onError(error);\n    });\n    const metadataLoader = new FileLoader(this._internalLoadingManager);\n    // metadataLoader.setResponseType('json')\n    metadataLoader.setRequestHeader(this.requestHeader);\n    metadataLoader.setPath(this.path);\n    metadataLoader.setWithCredentials(this.withCredentials);\n    metadataLoader.load(metadataUrl, async json => {\n      /* istanbul ignore if\n       this condition exists only because of three.js types + strict mode\n      */\n      if (typeof json !== 'string') throw new Error('Invalid metadata string');\n      // TODO: implement check on JSON file and remove this eslint disable\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      metadata = JSON.parse(json);\n      await loadCheck();\n    }, e => {\n      metadataLengthComputable = e.lengthComputable;\n      metadataLoaded = e.loaded;\n      metadataTotal = e.total;\n      progressHandler();\n    }, error => {\n      this.manager.itemError(metadataUrl);\n      if (typeof onError === 'function') onError(error);\n    });\n    return quadRenderer;\n  }\n}\n\n/**\n * A Three.js Loader for a JPEG with embedded gainmap metadata.\n *\n * @category Loaders\n * @group Loaders\n *\n * @example\n * import { HDRJPGLoader } from '@monogrid/gainmap-js'\n * import {\n *   EquirectangularReflectionMapping,\n *   LinearFilter,\n *   Mesh,\n *   MeshBasicMaterial,\n *   PerspectiveCamera,\n *   PlaneGeometry,\n *   Scene,\n *   WebGLRenderer\n * } from 'three'\n *\n * const renderer = new WebGLRenderer()\n *\n * const loader = new HDRJPGLoader(renderer)\n *\n * const result = await loader.loadAsync('gainmap.jpeg')\n * // `result` can be used to populate a Texture\n *\n * const scene = new Scene()\n * const mesh = new Mesh(\n *   new PlaneGeometry(),\n *   new MeshBasicMaterial({ map: result.renderTarget.texture })\n * )\n * scene.add(mesh)\n * renderer.render(scene, new PerspectiveCamera())\n *\n * // Starting from three.js r159\n * // `result.renderTarget.texture` can\n * // also be used as Equirectangular scene background\n * //\n * // it was previously needed to convert it\n * // to a DataTexture with `result.toDataTexture()`\n * scene.background = result.renderTarget.texture\n * scene.background.mapping = EquirectangularReflectionMapping\n *\n * // result must be manually disposed\n * // when you are done using it\n * result.dispose()\n *\n */\nclass HDRJPGLoader extends LoaderBase {\n  /**\n   * Loads a JPEG containing gain map metadata\n   * Renders a normal SDR image if gainmap data is not found\n   *\n   * @param url An array in the form of [sdr.jpg, gainmap.jpg, metadata.json]\n   * @param onLoad Load complete callback, will receive the result\n   * @param onProgress Progress callback, will receive a {@link ProgressEvent}\n   * @param onError Error callback\n   * @returns\n   */\n  load(url, onLoad, onProgress, onError) {\n    const quadRenderer = this.prepareQuadRenderer();\n    const loader = new FileLoader(this._internalLoadingManager);\n    loader.setResponseType('arraybuffer');\n    loader.setRequestHeader(this.requestHeader);\n    loader.setPath(this.path);\n    loader.setWithCredentials(this.withCredentials);\n    this.manager.itemStart(url);\n    loader.load(url, async jpeg => {\n      /* istanbul ignore if\n       this condition exists only because of three.js types + strict mode\n      */\n      if (typeof jpeg === 'string') throw new Error('Invalid buffer, received [string], was expecting [ArrayBuffer]');\n      const jpegBuffer = new Uint8Array(jpeg);\n      let sdrJPEG;\n      let gainMapJPEG;\n      let metadata;\n      try {\n        const extractionResult = await extractGainmapFromJPEG(jpegBuffer);\n        // gain map is successfully reconstructed\n        sdrJPEG = extractionResult.sdr;\n        gainMapJPEG = extractionResult.gainMap;\n        metadata = extractionResult.metadata;\n      } catch (e) {\n        // render the SDR version if this is not a gainmap\n        if (e instanceof XMPMetadataNotFoundError || e instanceof GainMapNotFoundError) {\n          console.warn(`Failure to reconstruct an HDR image from ${url}: Gain map metadata not found in the file, HDRJPGLoader will render the SDR jpeg`);\n          metadata = {\n            gainMapMin: [0, 0, 0],\n            gainMapMax: [1, 1, 1],\n            gamma: [1, 1, 1],\n            hdrCapacityMin: 0,\n            hdrCapacityMax: 1,\n            offsetHdr: [0, 0, 0],\n            offsetSdr: [0, 0, 0]\n          };\n          sdrJPEG = jpegBuffer;\n        } else {\n          throw e;\n        }\n      }\n      // solves #16\n      try {\n        await this.render(quadRenderer, metadata, sdrJPEG, gainMapJPEG);\n      } catch (error) {\n        this.manager.itemError(url);\n        if (typeof onError === 'function') onError(error);\n        quadRenderer.disposeOnDemandRenderer();\n        return;\n      }\n      if (typeof onLoad === 'function') onLoad(quadRenderer);\n      this.manager.itemEnd(url);\n      quadRenderer.disposeOnDemandRenderer();\n    }, onProgress, error => {\n      this.manager.itemError(url);\n      if (typeof onError === 'function') onError(error);\n    });\n    return quadRenderer;\n  }\n}\nexport { GainMapDecoderMaterial, GainMapLoader, HDRJPGLoader, HDRJPGLoader as JPEGRLoader, MPFExtractor, QuadRenderer, decode, extractGainmapFromJPEG, extractXMP };", "import { DataTextureLoader, DataUtils, FloatType, HalfFloatType, LinearFilter, LinearSRGBColorSpace } from 'three';\n\n/**\n * A loader for the RGBE HDR texture format.\n *\n * ```js\n * const loader = new RGBELoader();\n * const envMap = await loader.loadAsync( 'textures/equirectangular/blouberg_sunrise_2_1k.hdr' );\n * envMap.mapping = THREE.EquirectangularReflectionMapping;\n *\n * scene.environment = envMap;\n * ```\n *\n * @augments DataTextureLoader\n * @three_import import { RGBELoader } from 'three/addons/loaders/RGBELoader.js';\n */\nclass RGBELoader extends DataTextureLoader {\n  /**\n   * Constructs a new RGBE loader.\n   *\n   * @param {LoadingManager} [manager] - The loading manager.\n   */\n  constructor(manager) {\n    super(manager);\n\n    /**\n     * The texture type.\n     *\n     * @type {(HalfFloatType|FloatType)}\n     * @default HalfFloatType\n     */\n    this.type = HalfFloatType;\n  }\n\n  /**\n   * Parses the given RGBE texture data.\n   *\n   * @param {ArrayBuffer} buffer - The raw texture data.\n   * @return {DataTextureLoader~TexData} An object representing the parsed texture data.\n   */\n  parse(buffer) {\n    // adapted from http://www.graphics.cornell.edu/~bjw/rgbe.html\n\n    const /* default error routine.  change this to change error handling */\n      rgbe_read_error = 1,\n      rgbe_write_error = 2,\n      rgbe_format_error = 3,\n      rgbe_memory_error = 4,\n      rgbe_error = function (rgbe_error_code, msg) {\n        switch (rgbe_error_code) {\n          case rgbe_read_error:\n            throw new Error('THREE.RGBELoader: Read Error: ' + (msg || ''));\n          case rgbe_write_error:\n            throw new Error('THREE.RGBELoader: Write Error: ' + (msg || ''));\n          case rgbe_format_error:\n            throw new Error('THREE.RGBELoader: Bad File Format: ' + (msg || ''));\n          default:\n          case rgbe_memory_error:\n            throw new Error('THREE.RGBELoader: Memory Error: ' + (msg || ''));\n        }\n      },\n      /* offsets to red, green, and blue components in a data (float) pixel */\n      //RGBE_DATA_RED = 0,\n      //RGBE_DATA_GREEN = 1,\n      //RGBE_DATA_BLUE = 2,\n\n      /* number of floats per pixel, use 4 since stored in rgba image format */\n      //RGBE_DATA_SIZE = 4,\n\n      /* flags indicating which fields in an rgbe_header_info are valid */\n      RGBE_VALID_PROGRAMTYPE = 1,\n      RGBE_VALID_FORMAT = 2,\n      RGBE_VALID_DIMENSIONS = 4,\n      NEWLINE = '\\n',\n      fgets = function (buffer, lineLimit, consume) {\n        const chunkSize = 128;\n        lineLimit = !lineLimit ? 1024 : lineLimit;\n        let p = buffer.pos,\n          i = -1,\n          len = 0,\n          s = '',\n          chunk = String.fromCharCode.apply(null, new Uint16Array(buffer.subarray(p, p + chunkSize)));\n        while (0 > (i = chunk.indexOf(NEWLINE)) && len < lineLimit && p < buffer.byteLength) {\n          s += chunk;\n          len += chunk.length;\n          p += chunkSize;\n          chunk += String.fromCharCode.apply(null, new Uint16Array(buffer.subarray(p, p + chunkSize)));\n        }\n        if (-1 < i) {\n          /*for (i=l-1; i>=0; i--) {\n          \tbyteCode = m.charCodeAt(i);\n          \tif (byteCode > 0x7f && byteCode <= 0x7ff) byteLen++;\n          \telse if (byteCode > 0x7ff && byteCode <= 0xffff) byteLen += 2;\n          \tif (byteCode >= 0xDC00 && byteCode <= 0xDFFF) i--; //trail surrogate\n          }*/\n          if (false !== consume) buffer.pos += len + i + 1;\n          return s + chunk.slice(0, i);\n        }\n        return false;\n      },\n      /* minimal header reading.  modify if you want to parse more information */\n      RGBE_ReadHeader = function (buffer) {\n        // regexes to parse header info fields\n        const magic_token_re = /^#\\?(\\S+)/,\n          gamma_re = /^\\s*GAMMA\\s*=\\s*(\\d+(\\.\\d+)?)\\s*$/,\n          exposure_re = /^\\s*EXPOSURE\\s*=\\s*(\\d+(\\.\\d+)?)\\s*$/,\n          format_re = /^\\s*FORMAT=(\\S+)\\s*$/,\n          dimensions_re = /^\\s*\\-Y\\s+(\\d+)\\s+\\+X\\s+(\\d+)\\s*$/,\n          // RGBE format header struct\n          header = {\n            valid: 0,\n            /* indicate which fields are valid */\n\n            string: '',\n            /* the actual header string */\n\n            comments: '',\n            /* comments found in header */\n\n            programtype: 'RGBE',\n            /* listed at beginning of file to identify it after \"#?\". defaults to \"RGBE\" */\n\n            format: '',\n            /* RGBE format, default 32-bit_rle_rgbe */\n\n            gamma: 1.0,\n            /* image has already been gamma corrected with given gamma. defaults to 1.0 (no correction) */\n\n            exposure: 1.0,\n            /* a value of 1.0 in an image corresponds to <exposure> watts/steradian/m^2. defaults to 1.0 */\n\n            width: 0,\n            height: 0 /* image dimensions, width/height */\n          };\n        let line, match;\n        if (buffer.pos >= buffer.byteLength || !(line = fgets(buffer))) {\n          rgbe_error(rgbe_read_error, 'no header found');\n        }\n\n        /* if you want to require the magic token then uncomment the next line */\n        if (!(match = line.match(magic_token_re))) {\n          rgbe_error(rgbe_format_error, 'bad initial token');\n        }\n        header.valid |= RGBE_VALID_PROGRAMTYPE;\n        header.programtype = match[1];\n        header.string += line + '\\n';\n        while (true) {\n          line = fgets(buffer);\n          if (false === line) break;\n          header.string += line + '\\n';\n          if ('#' === line.charAt(0)) {\n            header.comments += line + '\\n';\n            continue; // comment line\n          }\n          if (match = line.match(gamma_re)) {\n            header.gamma = parseFloat(match[1]);\n          }\n          if (match = line.match(exposure_re)) {\n            header.exposure = parseFloat(match[1]);\n          }\n          if (match = line.match(format_re)) {\n            header.valid |= RGBE_VALID_FORMAT;\n            header.format = match[1]; //'32-bit_rle_rgbe';\n          }\n          if (match = line.match(dimensions_re)) {\n            header.valid |= RGBE_VALID_DIMENSIONS;\n            header.height = parseInt(match[1], 10);\n            header.width = parseInt(match[2], 10);\n          }\n          if (header.valid & RGBE_VALID_FORMAT && header.valid & RGBE_VALID_DIMENSIONS) break;\n        }\n        if (!(header.valid & RGBE_VALID_FORMAT)) {\n          rgbe_error(rgbe_format_error, 'missing format specifier');\n        }\n        if (!(header.valid & RGBE_VALID_DIMENSIONS)) {\n          rgbe_error(rgbe_format_error, 'missing image size specifier');\n        }\n        return header;\n      },\n      RGBE_ReadPixels_RLE = function (buffer, w, h) {\n        const scanline_width = w;\n        if (\n        // run length encoding is not allowed so read flat\n        scanline_width < 8 || scanline_width > 0x7fff ||\n        // this file is not run length encoded\n        2 !== buffer[0] || 2 !== buffer[1] || buffer[2] & 0x80) {\n          // return the flat buffer\n          return new Uint8Array(buffer);\n        }\n        if (scanline_width !== (buffer[2] << 8 | buffer[3])) {\n          rgbe_error(rgbe_format_error, 'wrong scanline width');\n        }\n        const data_rgba = new Uint8Array(4 * w * h);\n        if (!data_rgba.length) {\n          rgbe_error(rgbe_memory_error, 'unable to allocate buffer space');\n        }\n        let offset = 0,\n          pos = 0;\n        const ptr_end = 4 * scanline_width;\n        const rgbeStart = new Uint8Array(4);\n        const scanline_buffer = new Uint8Array(ptr_end);\n        let num_scanlines = h;\n\n        // read in each successive scanline\n        while (num_scanlines > 0 && pos < buffer.byteLength) {\n          if (pos + 4 > buffer.byteLength) {\n            rgbe_error(rgbe_read_error);\n          }\n          rgbeStart[0] = buffer[pos++];\n          rgbeStart[1] = buffer[pos++];\n          rgbeStart[2] = buffer[pos++];\n          rgbeStart[3] = buffer[pos++];\n          if (2 != rgbeStart[0] || 2 != rgbeStart[1] || (rgbeStart[2] << 8 | rgbeStart[3]) != scanline_width) {\n            rgbe_error(rgbe_format_error, 'bad rgbe scanline format');\n          }\n\n          // read each of the four channels for the scanline into the buffer\n          // first red, then green, then blue, then exponent\n          let ptr = 0,\n            count;\n          while (ptr < ptr_end && pos < buffer.byteLength) {\n            count = buffer[pos++];\n            const isEncodedRun = count > 128;\n            if (isEncodedRun) count -= 128;\n            if (0 === count || ptr + count > ptr_end) {\n              rgbe_error(rgbe_format_error, 'bad scanline data');\n            }\n            if (isEncodedRun) {\n              // a (encoded) run of the same value\n              const byteValue = buffer[pos++];\n              for (let i = 0; i < count; i++) {\n                scanline_buffer[ptr++] = byteValue;\n              }\n              //ptr += count;\n            } else {\n              // a literal-run\n              scanline_buffer.set(buffer.subarray(pos, pos + count), ptr);\n              ptr += count;\n              pos += count;\n            }\n          }\n\n          // now convert data from buffer into rgba\n          // first red, then green, then blue, then exponent (alpha)\n          const l = scanline_width; //scanline_buffer.byteLength;\n          for (let i = 0; i < l; i++) {\n            let off = 0;\n            data_rgba[offset] = scanline_buffer[i + off];\n            off += scanline_width; //1;\n            data_rgba[offset + 1] = scanline_buffer[i + off];\n            off += scanline_width; //1;\n            data_rgba[offset + 2] = scanline_buffer[i + off];\n            off += scanline_width; //1;\n            data_rgba[offset + 3] = scanline_buffer[i + off];\n            offset += 4;\n          }\n          num_scanlines--;\n        }\n        return data_rgba;\n      };\n    const RGBEByteToRGBFloat = function (sourceArray, sourceOffset, destArray, destOffset) {\n      const e = sourceArray[sourceOffset + 3];\n      const scale = Math.pow(2.0, e - 128.0) / 255.0;\n      destArray[destOffset + 0] = sourceArray[sourceOffset + 0] * scale;\n      destArray[destOffset + 1] = sourceArray[sourceOffset + 1] * scale;\n      destArray[destOffset + 2] = sourceArray[sourceOffset + 2] * scale;\n      destArray[destOffset + 3] = 1;\n    };\n    const RGBEByteToRGBHalf = function (sourceArray, sourceOffset, destArray, destOffset) {\n      const e = sourceArray[sourceOffset + 3];\n      const scale = Math.pow(2.0, e - 128.0) / 255.0;\n\n      // clamping to 65504, the maximum representable value in float16\n      destArray[destOffset + 0] = DataUtils.toHalfFloat(Math.min(sourceArray[sourceOffset + 0] * scale, 65504));\n      destArray[destOffset + 1] = DataUtils.toHalfFloat(Math.min(sourceArray[sourceOffset + 1] * scale, 65504));\n      destArray[destOffset + 2] = DataUtils.toHalfFloat(Math.min(sourceArray[sourceOffset + 2] * scale, 65504));\n      destArray[destOffset + 3] = DataUtils.toHalfFloat(1);\n    };\n    const byteArray = new Uint8Array(buffer);\n    byteArray.pos = 0;\n    const rgbe_header_info = RGBE_ReadHeader(byteArray);\n    const w = rgbe_header_info.width,\n      h = rgbe_header_info.height,\n      image_rgba_data = RGBE_ReadPixels_RLE(byteArray.subarray(byteArray.pos), w, h);\n    let data, type;\n    let numElements;\n    switch (this.type) {\n      case FloatType:\n        numElements = image_rgba_data.length / 4;\n        const floatArray = new Float32Array(numElements * 4);\n        for (let j = 0; j < numElements; j++) {\n          RGBEByteToRGBFloat(image_rgba_data, j * 4, floatArray, j * 4);\n        }\n        data = floatArray;\n        type = FloatType;\n        break;\n      case HalfFloatType:\n        numElements = image_rgba_data.length / 4;\n        const halfArray = new Uint16Array(numElements * 4);\n        for (let j = 0; j < numElements; j++) {\n          RGBEByteToRGBHalf(image_rgba_data, j * 4, halfArray, j * 4);\n        }\n        data = halfArray;\n        type = HalfFloatType;\n        break;\n      default:\n        throw new Error('THREE.RGBELoader: Unsupported type: ' + this.type);\n        break;\n    }\n    return {\n      width: w,\n      height: h,\n      data: data,\n      header: rgbe_header_info.string,\n      gamma: rgbe_header_info.gamma,\n      exposure: rgbe_header_info.exposure,\n      type: type\n    };\n  }\n\n  /**\n   * Sets the texture type.\n   *\n   * @param {(HalfFloatType|FloatType)} value - The texture type to set.\n   * @return {RGBELoader} A reference to this loader.\n   */\n  setDataType(value) {\n    this.type = value;\n    return this;\n  }\n  load(url, onLoad, onProgress, onError) {\n    function onLoadCallback(texture, texData) {\n      switch (texture.type) {\n        case FloatType:\n        case HalfFloatType:\n          texture.colorSpace = LinearSRGBColorSpace;\n          texture.minFilter = LinearFilter;\n          texture.magFilter = LinearFilter;\n          texture.generateMipmaps = false;\n          texture.flipY = true;\n          break;\n      }\n      if (onLoad) onLoad(texture, texData);\n    }\n    return super.load(url, onLoadCallback, onProgress, onError);\n  }\n}\nexport { RGBELoader };", "/* @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { BackSide, BoxGeometry, Mesh, MeshBasicMaterial, MeshStandardMaterial, PointLight, Scene } from 'three';\nconst legacy = {\n  topLight: {\n    intensity: 500,\n    position: [0.418, 16.199, 0.300]\n  },\n  room: {\n    position: [-0.757, 13.219, 0.717],\n    scale: [31.713, 28.305, 28.591]\n  },\n  boxes: [{\n    position: [-10.906, 2.009, 1.846],\n    rotation: -0.195,\n    scale: [2.328, 7.905, 4.651]\n  }, {\n    position: [-5.607, -0.754, -0.758],\n    rotation: 0.994,\n    scale: [1.970, 1.534, 3.955]\n  }, {\n    position: [6.167, 0.857, 7.803],\n    rotation: 0.561,\n    scale: [3.927, 6.285, 3.687]\n  }, {\n    position: [-2.017, 0.018, 6.124],\n    rotation: 0.333,\n    scale: [2.002, 4.566, 2.064]\n  }, {\n    position: [2.291, -0.756, -2.621],\n    rotation: -0.286,\n    scale: [1.546, 1.552, 1.496]\n  }, {\n    position: [-2.193, -0.369, -5.547],\n    rotation: 0.516,\n    scale: [3.875, 3.487, 2.986]\n  }],\n  lights: [{\n    intensity: 50,\n    position: [-16.116, 14.37, 8.208],\n    scale: [0.1, 2.428, 2.739]\n  }, {\n    intensity: 50,\n    position: [-16.109, 18.021, -8.207],\n    scale: [0.1, 2.425, 2.751]\n  }, {\n    intensity: 17,\n    position: [14.904, 12.198, -1.832],\n    scale: [0.15, 4.265, 6.331]\n  }, {\n    intensity: 43,\n    position: [-0.462, 8.89, 14.520],\n    scale: [4.38, 5.441, 0.088]\n  }, {\n    intensity: 20,\n    position: [3.235, 11.486, -12.541],\n    scale: [2.5, 2.0, 0.1]\n  }, {\n    intensity: 100,\n    position: [0.0, 20.0, 0.0],\n    scale: [1.0, 0.1, 1.0]\n  }]\n};\nconst neutral = {\n  topLight: {\n    intensity: 400,\n    position: [0.5, 14.0, 0.5]\n  },\n  room: {\n    position: [0.0, 13.2, 0.0],\n    scale: [31.5, 28.5, 31.5]\n  },\n  boxes: [{\n    position: [-10.906, -1.0, 1.846],\n    rotation: -0.195,\n    scale: [2.328, 7.905, 4.651]\n  }, {\n    position: [-5.607, -0.754, -0.758],\n    rotation: 0.994,\n    scale: [1.970, 1.534, 3.955]\n  }, {\n    position: [6.167, -0.16, 7.803],\n    rotation: 0.561,\n    scale: [3.927, 6.285, 3.687]\n  }, {\n    position: [-2.017, 0.018, 6.124],\n    rotation: 0.333,\n    scale: [2.002, 4.566, 2.064]\n  }, {\n    position: [2.291, -0.756, -2.621],\n    rotation: -0.286,\n    scale: [1.546, 1.552, 1.496]\n  }, {\n    position: [-2.193, -0.369, -5.547],\n    rotation: 0.516,\n    scale: [3.875, 3.487, 2.986]\n  }],\n  lights: [{\n    intensity: 80,\n    position: [-14.0, 10.0, 8.0],\n    scale: [0.1, 2.5, 2.5]\n  }, {\n    intensity: 80,\n    position: [-14.0, 14.0, -4.0],\n    scale: [0.1, 2.5, 2.5]\n  }, {\n    intensity: 23,\n    position: [14.0, 12.0, 0.0],\n    scale: [0.1, 5.0, 5.0]\n  }, {\n    intensity: 16,\n    position: [0.0, 9.0, 14.0],\n    scale: [5.0, 5.0, 0.1]\n  }, {\n    intensity: 80,\n    position: [7.0, 8.0, -14.0],\n    scale: [2.5, 2.5, 0.1]\n  }, {\n    intensity: 80,\n    position: [-7.0, 16.0, -14.0],\n    scale: [2.5, 2.5, 0.1]\n  }, {\n    intensity: 1,\n    position: [0.0, 20.0, 0.0],\n    scale: [0.1, 0.1, 0.1]\n  }]\n};\nexport default class EnvironmentScene extends Scene {\n  constructor(name) {\n    super();\n    this.position.y = -3.5;\n    const geometry = new BoxGeometry();\n    geometry.deleteAttribute('uv');\n    const roomMaterial = new MeshStandardMaterial({\n      metalness: 0,\n      side: BackSide\n    });\n    const boxMaterial = new MeshStandardMaterial({\n      metalness: 0\n    });\n    const data = name == 'legacy' ? legacy : neutral;\n    const mainLight = new PointLight(0xffffff, data.topLight.intensity, 28, 2);\n    mainLight.position.set(...data.topLight.position);\n    this.add(mainLight);\n    const room = new Mesh(geometry, roomMaterial);\n    room.position.set(...data.room.position);\n    room.scale.set(...data.room.scale);\n    this.add(room);\n    for (const box of data.boxes) {\n      const box1 = new Mesh(geometry, boxMaterial);\n      box1.position.set(...box.position);\n      box1.rotation.set(0, box.rotation, 0);\n      box1.scale.set(...box.scale);\n      this.add(box1);\n    }\n    for (const light of data.lights) {\n      const light1 = new Mesh(geometry, this.createAreaLightMaterial(light.intensity));\n      light1.position.set(...light.position);\n      light1.scale.set(...light.scale);\n      this.add(light1);\n    }\n  }\n  createAreaLightMaterial(intensity) {\n    const material = new MeshBasicMaterial();\n    material.color.setScalar(intensity);\n    return material;\n  }\n}\n", "/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { HDRJPGLoader } from '@monogrid/gainmap-js';\nimport { BackSide, BoxGeometry, CubeCamera, EquirectangularReflectionMapping, HalfFloatType, LinearSRGBColorSpace, Mesh, NoBlending, NoToneMapping, RGBAFormat, Scene, ShaderMaterial, SRGBColorSpace, TextureLoader, Vector3, WebGLCubeRenderTarget } from 'three';\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader.js';\nimport { deserializeUrl, timePasses } from '../utilities.js';\nimport EnvironmentScene from './EnvironmentScene.js';\nconst GENERATED_SIGMA = 0.04;\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\nconst HDR_FILE_RE = /\\.hdr(\\.js)?$/;\nexport default class TextureUtils {\n  constructor(threeRenderer) {\n    this.threeRenderer = threeRenderer;\n    this.lottieLoaderUrl = '';\n    this._ldrLoader = null;\n    this._imageLoader = null;\n    this._hdrLoader = null;\n    this._lottieLoader = null;\n    this.generatedEnvironmentMap = null;\n    this.generatedEnvironmentMapAlt = null;\n    this.skyboxCache = new Map();\n    this.blurMaterial = null;\n    this.blurScene = null;\n  }\n  ldrLoader(withCredentials) {\n    if (this._ldrLoader == null) {\n      this._ldrLoader = new TextureLoader();\n    }\n    this._ldrLoader.setWithCredentials(withCredentials);\n    return this._ldrLoader;\n  }\n  imageLoader(withCredentials) {\n    if (this._imageLoader == null) {\n      this._imageLoader = new HDRJPGLoader(this.threeRenderer);\n    }\n    this._imageLoader.setWithCredentials(withCredentials);\n    return this._imageLoader;\n  }\n  hdrLoader(withCredentials) {\n    if (this._hdrLoader == null) {\n      this._hdrLoader = new RGBELoader();\n      this._hdrLoader.setDataType(HalfFloatType);\n    }\n    this._hdrLoader.setWithCredentials(withCredentials);\n    return this._hdrLoader;\n  }\n  async getLottieLoader(withCredentials) {\n    if (this._lottieLoader == null) {\n      const {\n        LottieLoader\n      } = await import(/* webpackIgnore: true */this.lottieLoaderUrl);\n      this._lottieLoader = new LottieLoader();\n    }\n    this._lottieLoader.setWithCredentials(withCredentials);\n    return this._lottieLoader;\n  }\n  async loadImage(url, withCredentials) {\n    const texture = await new Promise((resolve, reject) => this.ldrLoader(withCredentials).load(url, resolve, () => {}, reject));\n    texture.name = url;\n    texture.flipY = false;\n    return texture;\n  }\n  async loadLottie(url, quality, withCredentials) {\n    const loader = await this.getLottieLoader(withCredentials);\n    loader.setQuality(quality);\n    const texture = await new Promise((resolve, reject) => loader.load(url, resolve, () => {}, reject));\n    texture.name = url;\n    return texture;\n  }\n  async loadEquirect(url, withCredentials = false, progressCallback = () => {}) {\n    try {\n      const isHDR = HDR_FILE_RE.test(url);\n      const loader = isHDR ? this.hdrLoader(withCredentials) : this.imageLoader(withCredentials);\n      const texture = await new Promise((resolve, reject) => loader.load(url, result => {\n        const {\n          renderTarget\n        } = result;\n        if (renderTarget != null) {\n          const {\n            texture\n          } = renderTarget;\n          result.dispose(false);\n          resolve(texture);\n        } else {\n          resolve(result);\n        }\n      }, event => {\n        progressCallback(event.loaded / event.total * 0.9);\n      }, reject));\n      progressCallback(1.0);\n      texture.name = url;\n      texture.mapping = EquirectangularReflectionMapping;\n      if (!isHDR) {\n        texture.colorSpace = SRGBColorSpace;\n      }\n      return texture;\n    } finally {\n      if (progressCallback) {\n        progressCallback(1);\n      }\n    }\n  }\n  /**\n   * Returns a { skybox, environmentMap } object with the targets/textures\n   * accordingly. `skybox` is a WebGLRenderCubeTarget, and `environmentMap`\n   * is a Texture from a WebGLRenderCubeTarget.\n   */\n  async generateEnvironmentMapAndSkybox(skyboxUrl = null, environmentMapUrl = null, progressCallback = () => {}, withCredentials = false) {\n    const useAltEnvironment = environmentMapUrl !== 'legacy';\n    if (environmentMapUrl === 'legacy' || environmentMapUrl === 'neutral') {\n      environmentMapUrl = null;\n    }\n    environmentMapUrl = deserializeUrl(environmentMapUrl);\n    let skyboxLoads = Promise.resolve(null);\n    let environmentMapLoads;\n    // If we have a skybox URL, attempt to load it as a cubemap\n    if (!!skyboxUrl) {\n      skyboxLoads = this.loadEquirectFromUrl(skyboxUrl, withCredentials, progressCallback);\n    }\n    if (!!environmentMapUrl) {\n      // We have an available environment map URL\n      environmentMapLoads = this.loadEquirectFromUrl(environmentMapUrl, withCredentials, progressCallback);\n    } else if (!!skyboxUrl) {\n      // Fallback to deriving the environment map from an available skybox\n      environmentMapLoads = this.loadEquirectFromUrl(skyboxUrl, withCredentials, progressCallback);\n    } else {\n      // Fallback to generating the environment map\n      environmentMapLoads = useAltEnvironment ? this.loadGeneratedEnvironmentMapAlt() : this.loadGeneratedEnvironmentMap();\n    }\n    const [environmentMap, skybox] = await Promise.all([environmentMapLoads, skyboxLoads]);\n    if (environmentMap == null) {\n      throw new Error('Failed to load environment map.');\n    }\n    return {\n      environmentMap,\n      skybox\n    };\n  }\n  /**\n   * Loads an equirect Texture from a given URL, for use as a skybox.\n   */\n  async loadEquirectFromUrl(url, withCredentials, progressCallback) {\n    if (!this.skyboxCache.has(url)) {\n      const skyboxMapLoads = this.loadEquirect(url, withCredentials, progressCallback);\n      this.skyboxCache.set(url, skyboxMapLoads);\n    }\n    return this.skyboxCache.get(url);\n  }\n  async GenerateEnvironmentMap(scene, name) {\n    await timePasses();\n    const renderer = this.threeRenderer;\n    const cubeTarget = new WebGLCubeRenderTarget(256, {\n      generateMipmaps: false,\n      type: HalfFloatType,\n      format: RGBAFormat,\n      colorSpace: LinearSRGBColorSpace,\n      depthBuffer: true\n    });\n    const cubeCamera = new CubeCamera(0.1, 100, cubeTarget);\n    const generatedEnvironmentMap = cubeCamera.renderTarget.texture;\n    generatedEnvironmentMap.name = name;\n    const outputColorSpace = renderer.outputColorSpace;\n    const toneMapping = renderer.toneMapping;\n    renderer.toneMapping = NoToneMapping;\n    renderer.outputColorSpace = LinearSRGBColorSpace;\n    cubeCamera.update(renderer, scene);\n    this.blurCubemap(cubeTarget, GENERATED_SIGMA);\n    renderer.toneMapping = toneMapping;\n    renderer.outputColorSpace = outputColorSpace;\n    return generatedEnvironmentMap;\n  }\n  /**\n   * Loads a dynamically generated environment map.\n   */\n  async loadGeneratedEnvironmentMap() {\n    if (this.generatedEnvironmentMap == null) {\n      this.generatedEnvironmentMap = this.GenerateEnvironmentMap(new EnvironmentScene('legacy'), 'legacy');\n    }\n    return this.generatedEnvironmentMap;\n  }\n  /**\n   * Loads a dynamically generated environment map, designed to be neutral and\n   * color-preserving. Shows less contrast around the different sides of the\n   * object.\n   */\n  async loadGeneratedEnvironmentMapAlt() {\n    if (this.generatedEnvironmentMapAlt == null) {\n      this.generatedEnvironmentMapAlt = this.GenerateEnvironmentMap(new EnvironmentScene('neutral'), 'neutral');\n    }\n    return this.generatedEnvironmentMapAlt;\n  }\n  blurCubemap(cubeTarget, sigma) {\n    if (this.blurMaterial == null) {\n      this.blurMaterial = this.getBlurShader(MAX_SAMPLES);\n      const box = new BoxGeometry();\n      const blurMesh = new Mesh(box, this.blurMaterial);\n      this.blurScene = new Scene();\n      this.blurScene.add(blurMesh);\n    }\n    const tempTarget = cubeTarget.clone();\n    this.halfblur(cubeTarget, tempTarget, sigma, 'latitudinal');\n    this.halfblur(tempTarget, cubeTarget, sigma, 'longitudinal');\n    // Disposing this target after we're done with it somehow corrupts Safari's\n    // whole graphics driver. It's random, but occurs more frequently on\n    // lower-powered GPUs (macbooks with intel graphics, older iPhones). It goes\n    // beyond just messing up the PMREM, as it also occasionally causes\n    // visible corruption on the canvas and even on the rest of the page.\n    /** tempTarget.dispose(); */\n  }\n  halfblur(targetIn, targetOut, sigmaRadians, direction) {\n    // Number of standard deviations at which to cut off the discrete\n    // approximation.\n    const STANDARD_DEVIATIONS = 3;\n    const pixels = targetIn.width;\n    const radiansPerPixel = isFinite(sigmaRadians) ? Math.PI / (2 * pixels) : 2 * Math.PI / (2 * MAX_SAMPLES - 1);\n    const sigmaPixels = sigmaRadians / radiansPerPixel;\n    const samples = isFinite(sigmaRadians) ? 1 + Math.floor(STANDARD_DEVIATIONS * sigmaPixels) : MAX_SAMPLES;\n    if (samples > MAX_SAMPLES) {\n      console.warn(`sigmaRadians, ${sigmaRadians}, is too large and will clip, as it requested ${samples} samples when the maximum is set to ${MAX_SAMPLES}`);\n    }\n    const weights = [];\n    let sum = 0;\n    for (let i = 0; i < MAX_SAMPLES; ++i) {\n      const x = i / sigmaPixels;\n      const weight = Math.exp(-x * x / 2);\n      weights.push(weight);\n      if (i == 0) {\n        sum += weight;\n      } else if (i < samples) {\n        sum += 2 * weight;\n      }\n    }\n    for (let i = 0; i < weights.length; i++) {\n      weights[i] = weights[i] / sum;\n    }\n    const blurUniforms = this.blurMaterial.uniforms;\n    blurUniforms['envMap'].value = targetIn.texture;\n    blurUniforms['samples'].value = samples;\n    blurUniforms['weights'].value = weights;\n    blurUniforms['latitudinal'].value = direction === 'latitudinal';\n    blurUniforms['dTheta'].value = radiansPerPixel;\n    const cubeCamera = new CubeCamera(0.1, 100, targetOut);\n    cubeCamera.update(this.threeRenderer, this.blurScene);\n  }\n  getBlurShader(maxSamples) {\n    const weights = new Float32Array(maxSamples);\n    const poleAxis = new Vector3(0, 1, 0);\n    const shaderMaterial = new ShaderMaterial({\n      name: 'SphericalGaussianBlur',\n      defines: {\n        'n': maxSamples\n      },\n      uniforms: {\n        'envMap': {\n          value: null\n        },\n        'samples': {\n          value: 1\n        },\n        'weights': {\n          value: weights\n        },\n        'latitudinal': {\n          value: false\n        },\n        'dTheta': {\n          value: 0\n        },\n        'poleAxis': {\n          value: poleAxis\n        }\n      },\n      vertexShader: /* glsl */`\n      \n      varying vec3 vOutputDirection;\n  \n      void main() {\n  \n        vOutputDirection = vec3( position );\n        gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n  \n      }\n    `,\n      fragmentShader: /* glsl */`\n        varying vec3 vOutputDirection;\n  \n        uniform samplerCube envMap;\n        uniform int samples;\n        uniform float weights[ n ];\n        uniform bool latitudinal;\n        uniform float dTheta;\n        uniform vec3 poleAxis;\n  \n        vec3 getSample( float theta, vec3 axis ) {\n  \n          float cosTheta = cos( theta );\n          // Rodrigues' axis-angle rotation\n          vec3 sampleDirection = vOutputDirection * cosTheta\n            + cross( axis, vOutputDirection ) * sin( theta )\n            + axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n  \n          return vec3( textureCube( envMap, sampleDirection ) );\n  \n        }\n  \n        void main() {\n  \n          vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n  \n          if ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n  \n            axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n  \n          }\n  \n          axis = normalize( axis );\n  \n          gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n          gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n  \n          for ( int i = 1; i < n; i++ ) {\n  \n            if ( i >= samples ) {\n  \n              break;\n  \n            }\n  \n            float theta = dTheta * float( i );\n            gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n            gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n  \n          }\n        }\n      `,\n      blending: NoBlending,\n      depthTest: false,\n      depthWrite: false,\n      side: BackSide\n    });\n    return shaderMaterial;\n  }\n  async dispose() {\n    for (const [, promise] of this.skyboxCache) {\n      const skybox = await promise;\n      skybox.dispose();\n    }\n    if (this.generatedEnvironmentMap != null) {\n      (await this.generatedEnvironmentMap).dispose();\n      this.generatedEnvironmentMap = null;\n    }\n    if (this.generatedEnvironmentMapAlt != null) {\n      (await this.generatedEnvironmentMapAlt).dispose();\n      this.generatedEnvironmentMapAlt = null;\n    }\n    if (this.blurMaterial != null) {\n      this.blurMaterial.dispose();\n    }\n  }\n}\n", "/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EventDispatcher, NeutralToneMapping, Vector2, WebGLRenderer } from 'three';\nimport { $updateEnvironment } from '../features/environment.js';\nimport { $canvas, $tick, $updateSize } from '../model-viewer-base.js';\nimport { clamp, isDebugMode } from '../utilities.js';\nimport { ARRenderer } from './ARRenderer.js';\nimport { CachingGLTFLoader } from './CachingGLTFLoader.js';\nimport { ModelViewerGLTFInstance } from './gltf-instance/ModelViewerGLTFInstance.js';\nimport TextureUtils from './TextureUtils.js';\n// Between 0 and 1: larger means the average responds faster and is less smooth.\nconst DURATION_DECAY = 0.2;\nconst LOW_FRAME_DURATION_MS = 40;\nconst HIGH_FRAME_DURATION_MS = 60;\nconst MAX_AVG_CHANGE_MS = 5;\nconst SCALE_STEPS = [1, 0.79, 0.62, 0.5, 0.4, 0.31, 0.25];\nconst DEFAULT_LAST_STEP = 3;\nexport const DEFAULT_POWER_PREFERENCE = 'high-performance';\nconst COMMERCE_EXPOSURE = 1.3;\n/**\n * Registers canvases with Canvas2DRenderingContexts and renders them\n * all in the same WebGLRenderingContext, spitting out textures to apply\n * to the canvases. Creates a fullscreen WebGL canvas that is not added\n * to the DOM, and on each frame, renders each registered canvas on a portion\n * of the WebGL canvas, and applies the texture on the registered canvas.\n *\n * In the future, can use ImageBitmapRenderingContext instead of\n * Canvas2DRenderingContext if supported for cheaper transferring of\n * the texture.\n */\nexport class Renderer extends EventDispatcher {\n  static get singleton() {\n    if (!this._singleton) {\n      this._singleton = new Renderer({\n        powerPreference: (self.ModelViewerElement || {}).powerPreference || DEFAULT_POWER_PREFERENCE,\n        debug: isDebugMode()\n      });\n    }\n    return this._singleton;\n  }\n  static resetSingleton() {\n    const elements = this._singleton.dispose();\n    for (const element of elements) {\n      element.disconnectedCallback();\n    }\n    this._singleton = new Renderer({\n      powerPreference: (self.ModelViewerElement || {}).powerPreference || DEFAULT_POWER_PREFERENCE,\n      debug: isDebugMode()\n    });\n    for (const element of elements) {\n      element.connectedCallback();\n    }\n  }\n  get canRender() {\n    return this.threeRenderer != null;\n  }\n  get scaleFactor() {\n    return SCALE_STEPS[this.scaleStep];\n  }\n  set minScale(scale) {\n    let i = 1;\n    while (i < SCALE_STEPS.length) {\n      if (SCALE_STEPS[i] < scale) {\n        break;\n      }\n      ++i;\n    }\n    this.lastStep = i - 1;\n  }\n  constructor(options) {\n    super();\n    this.loader = new CachingGLTFLoader(ModelViewerGLTFInstance);\n    this.width = 0;\n    this.height = 0;\n    this.dpr = 1;\n    this.scenes = new Set();\n    this.multipleScenesVisible = false;\n    this.lastTick = performance.now();\n    this.renderedLastFrame = false;\n    this.scaleStep = 0;\n    this.lastStep = DEFAULT_LAST_STEP;\n    this.avgFrameDuration = (HIGH_FRAME_DURATION_MS + LOW_FRAME_DURATION_MS) / 2;\n    this.onWebGLContextLost = event => {\n      this.dispatchEvent({\n        type: 'contextlost',\n        sourceEvent: event\n      });\n    };\n    this.onWebGLContextRestored = () => {\n      var _a;\n      (_a = this.textureUtils) === null || _a === void 0 ? void 0 : _a.dispose();\n      this.textureUtils = new TextureUtils(this.threeRenderer);\n      for (const scene of this.scenes) {\n        scene.element[$updateEnvironment]();\n      }\n    };\n    this.dpr = window.devicePixelRatio;\n    this.canvas3D = document.createElement('canvas');\n    this.canvas3D.id = 'webgl-canvas';\n    this.canvas3D.classList.add('show');\n    try {\n      this.threeRenderer = new WebGLRenderer({\n        canvas: this.canvas3D,\n        alpha: true,\n        antialias: true,\n        powerPreference: options.powerPreference,\n        preserveDrawingBuffer: true\n      });\n      this.threeRenderer.autoClear = true;\n      this.threeRenderer.setPixelRatio(1); // handle pixel ratio externally\n      this.threeRenderer.debug = {\n        checkShaderErrors: !!options.debug,\n        onShaderError: null\n      };\n      // ACESFilmicToneMapping appears to be the most \"saturated\",\n      // and similar to Filament's gltf-viewer.\n      this.threeRenderer.toneMapping = NeutralToneMapping;\n    } catch (error) {\n      console.warn(error);\n    }\n    this.arRenderer = new ARRenderer(this);\n    this.textureUtils = this.canRender ? new TextureUtils(this.threeRenderer) : null;\n    CachingGLTFLoader.initializeKTX2Loader(this.threeRenderer);\n    this.canvas3D.addEventListener('webglcontextlost', this.onWebGLContextLost);\n    this.canvas3D.addEventListener('webglcontextrestored', this.onWebGLContextRestored);\n    this.updateRendererSize();\n  }\n  registerScene(scene) {\n    this.scenes.add(scene);\n    scene.forceRescale();\n    const size = new Vector2();\n    this.threeRenderer.getSize(size);\n    scene.canvas.width = size.x;\n    scene.canvas.height = size.y;\n    if (this.canRender && this.scenes.size > 0) {\n      this.threeRenderer.setAnimationLoop((time, frame) => this.render(time, frame));\n    }\n  }\n  unregisterScene(scene) {\n    this.scenes.delete(scene);\n    if (this.canvas3D.parentElement === scene.canvas.parentElement) {\n      scene.canvas.parentElement.removeChild(this.canvas3D);\n    }\n    if (this.canRender && this.scenes.size === 0) {\n      this.threeRenderer.setAnimationLoop(null);\n    }\n  }\n  displayCanvas(scene) {\n    return scene.element.modelIsVisible && !this.multipleScenesVisible ? this.canvas3D : scene.element[$canvas];\n  }\n  /**\n   * The function enables an optimization, where when there is only a single\n   * <model-viewer> element, we can use the renderer's 3D canvas directly for\n   * display. Otherwise we need to use the element's 2D canvas and copy the\n   * renderer's result into it.\n   */\n  countVisibleScenes() {\n    const {\n      canvas3D\n    } = this;\n    let visibleScenes = 0;\n    let canvas3DScene = null;\n    for (const scene of this.scenes) {\n      const {\n        element\n      } = scene;\n      if (element.modelIsVisible && scene.externalRenderer == null) {\n        ++visibleScenes;\n      }\n      if (canvas3D.parentElement === scene.canvas.parentElement) {\n        canvas3DScene = scene;\n      }\n    }\n    const multipleScenesVisible = visibleScenes > 1;\n    if (canvas3DScene != null) {\n      const newlyMultiple = multipleScenesVisible && !this.multipleScenesVisible;\n      const disappearing = !canvas3DScene.element.modelIsVisible;\n      if (newlyMultiple || disappearing) {\n        const {\n          width,\n          height\n        } = this.sceneSize(canvas3DScene);\n        this.copyPixels(canvas3DScene, width, height);\n        canvas3D.parentElement.removeChild(canvas3D);\n      }\n    }\n    this.multipleScenesVisible = multipleScenesVisible;\n  }\n  /**\n   * Updates the renderer's size based on the largest scene and any changes to\n   * device pixel ratio.\n   */\n  updateRendererSize() {\n    var _a;\n    const dpr = window.devicePixelRatio;\n    if (dpr !== this.dpr) {\n      // If the device pixel ratio has changed due to page zoom, elements\n      // specified by % width do not fire a resize event even though their CSS\n      // pixel dimensions change, so we force them to update their size here.\n      for (const scene of this.scenes) {\n        const {\n          element\n        } = scene;\n        element[$updateSize](element.getBoundingClientRect());\n      }\n    }\n    // Make the renderer the size of the largest scene\n    let width = 0;\n    let height = 0;\n    for (const scene of this.scenes) {\n      width = Math.max(width, scene.width);\n      height = Math.max(height, scene.height);\n    }\n    if (width === this.width && height === this.height && dpr === this.dpr) {\n      return;\n    }\n    this.width = width;\n    this.height = height;\n    this.dpr = dpr;\n    width = Math.ceil(width * dpr);\n    height = Math.ceil(height * dpr);\n    if (this.canRender) {\n      this.threeRenderer.setSize(width, height, false);\n    }\n    // Each scene's canvas must match the renderer size. In general they can be\n    // larger than the element that contains them, but the overflow is hidden\n    // and only the portion that is shown is copied over.\n    for (const scene of this.scenes) {\n      const {\n        canvas\n      } = scene;\n      canvas.width = width;\n      canvas.height = height;\n      scene.forceRescale();\n      (_a = scene.effectRenderer) === null || _a === void 0 ? void 0 : _a.setSize(width, height);\n    }\n  }\n  updateRendererScale(delta) {\n    const scaleStep = this.scaleStep;\n    this.avgFrameDuration += clamp(DURATION_DECAY * (delta - this.avgFrameDuration), -MAX_AVG_CHANGE_MS, MAX_AVG_CHANGE_MS);\n    if (this.avgFrameDuration > HIGH_FRAME_DURATION_MS) {\n      ++this.scaleStep;\n    } else if (this.avgFrameDuration < LOW_FRAME_DURATION_MS && this.scaleStep > 0) {\n      --this.scaleStep;\n    }\n    this.scaleStep = Math.min(this.scaleStep, this.lastStep);\n    if (scaleStep !== this.scaleStep) {\n      this.avgFrameDuration = (HIGH_FRAME_DURATION_MS + LOW_FRAME_DURATION_MS) / 2;\n    }\n  }\n  shouldRender(scene) {\n    if (!scene.shouldRender()) {\n      // The first frame we stop rendering the scene (because it stops moving),\n      // trigger one extra render at full scale.\n      if (scene.scaleStep != 0) {\n        scene.scaleStep = 0;\n        this.rescaleCanvas(scene);\n      } else {\n        return false;\n      }\n    } else if (scene.scaleStep != this.scaleStep) {\n      // Update render scale\n      scene.scaleStep = this.scaleStep;\n      this.rescaleCanvas(scene);\n    }\n    return true;\n  }\n  rescaleCanvas(scene) {\n    const scale = SCALE_STEPS[scene.scaleStep];\n    const width = Math.ceil(this.width / scale);\n    const height = Math.ceil(this.height / scale);\n    const {\n      style\n    } = scene.canvas;\n    style.width = `${width}px`;\n    style.height = `${height}px`;\n    this.canvas3D.style.width = `${width}px`;\n    this.canvas3D.style.height = `${height}px`;\n    const renderedDpr = this.dpr * scale;\n    const reason = scale < 1 ? 'GPU throttling' : this.dpr !== window.devicePixelRatio ? 'No meta viewport tag' : '';\n    scene.element.dispatchEvent(new CustomEvent('render-scale', {\n      detail: {\n        reportedDpr: window.devicePixelRatio,\n        renderedDpr: renderedDpr,\n        minimumDpr: this.dpr * SCALE_STEPS[this.lastStep],\n        pixelWidth: Math.ceil(scene.width * renderedDpr),\n        pixelHeight: Math.ceil(scene.height * renderedDpr),\n        reason: reason\n      }\n    }));\n  }\n  sceneSize(scene) {\n    const {\n      dpr\n    } = this;\n    const scaleFactor = SCALE_STEPS[scene.scaleStep];\n    // We avoid using the Three.js PixelRatio and handle it ourselves here so\n    // that we can do proper rounding and avoid white boundary pixels.\n    const width = Math.min(Math.ceil(scene.width * scaleFactor * dpr), this.canvas3D.width);\n    const height = Math.min(Math.ceil(scene.height * scaleFactor * dpr), this.canvas3D.height);\n    return {\n      width,\n      height\n    };\n  }\n  copyPixels(scene, width, height) {\n    const context2D = scene.context;\n    if (context2D == null) {\n      console.log('could not acquire 2d context');\n      return;\n    }\n    context2D.clearRect(0, 0, width, height);\n    context2D.drawImage(this.canvas3D, 0, 0, width, height, 0, 0, width, height);\n    scene.canvas.classList.add('show');\n  }\n  /**\n   * Returns an array version of this.scenes where the non-visible ones are\n   * first. This allows eager scenes to be rendered before they are visible,\n   * without needing the multi-canvas render path.\n   */\n  orderedScenes() {\n    const scenes = [];\n    for (const visible of [false, true]) {\n      for (const scene of this.scenes) {\n        if (scene.element.modelIsVisible === visible) {\n          scenes.push(scene);\n        }\n      }\n    }\n    return scenes;\n  }\n  get isPresenting() {\n    return this.arRenderer.isPresenting;\n  }\n  /**\n   * This method takes care of updating the element and renderer state based on\n   * the time that has passed since the last rendered frame.\n   */\n  preRender(scene, t, delta) {\n    const {\n      element,\n      exposure,\n      toneMapping\n    } = scene;\n    element[$tick](t, delta);\n    const exposureIsNumber = typeof exposure === 'number' && !Number.isNaN(exposure);\n    const env = element.environmentImage;\n    const sky = element.skyboxImage;\n    const compensateExposure = toneMapping === NeutralToneMapping && (env === 'neutral' || env === 'legacy' || !env && !sky);\n    this.threeRenderer.toneMappingExposure = (exposureIsNumber ? exposure : 1.0) * (compensateExposure ? COMMERCE_EXPOSURE : 1.0);\n  }\n  render(t, frame) {\n    if (frame != null) {\n      this.arRenderer.onWebXRFrame(t, frame);\n      return;\n    }\n    const delta = t - this.lastTick;\n    this.lastTick = t;\n    if (!this.canRender || this.isPresenting) {\n      return;\n    }\n    this.countVisibleScenes();\n    this.updateRendererSize();\n    if (this.renderedLastFrame) {\n      this.updateRendererScale(delta);\n      this.renderedLastFrame = false;\n    }\n    const {\n      canvas3D\n    } = this;\n    for (const scene of this.orderedScenes()) {\n      const {\n        element\n      } = scene;\n      if (!element.loaded || !element.modelIsVisible && scene.renderCount > 0) {\n        continue;\n      }\n      this.preRender(scene, t, delta);\n      if (!this.shouldRender(scene)) {\n        continue;\n      }\n      if (scene.externalRenderer != null) {\n        const camera = scene.getCamera();\n        camera.updateMatrix();\n        const {\n          matrix,\n          projectionMatrix\n        } = camera;\n        const viewMatrix = matrix.elements.slice();\n        const target = scene.getTarget();\n        viewMatrix[12] += target.x;\n        viewMatrix[13] += target.y;\n        viewMatrix[14] += target.z;\n        scene.externalRenderer.render({\n          viewMatrix: viewMatrix,\n          projectionMatrix: projectionMatrix.elements\n        });\n        continue;\n      }\n      if (!element.modelIsVisible && !this.multipleScenesVisible) {\n        // Here we are pre-rendering on the visible canvas, so we must mark the\n        // visible scene dirty to ensure it overwrites us.\n        for (const visibleScene of this.scenes) {\n          if (visibleScene.element.modelIsVisible) {\n            visibleScene.queueRender();\n          }\n        }\n      }\n      const {\n        width,\n        height\n      } = this.sceneSize(scene);\n      scene.renderShadow(this.threeRenderer);\n      // Need to set the render target in order to prevent\n      // clearing the depth from a different buffer\n      this.threeRenderer.setRenderTarget(null);\n      this.threeRenderer.setViewport(0, Math.ceil(this.height * this.dpr) - height, width, height);\n      if (scene.effectRenderer != null) {\n        scene.effectRenderer.render(delta);\n      } else {\n        this.threeRenderer.autoClear = true; // this might get reset by the effectRenderer\n        this.threeRenderer.toneMapping = scene.toneMapping;\n        this.threeRenderer.render(scene, scene.camera);\n      }\n      if (this.multipleScenesVisible || !scene.element.modelIsVisible && scene.renderCount === 0) {\n        this.copyPixels(scene, width, height);\n      } else if (canvas3D.parentElement !== scene.canvas.parentElement) {\n        scene.canvas.parentElement.appendChild(canvas3D);\n        scene.canvas.classList.remove('show');\n      }\n      scene.hasRendered();\n      ++scene.renderCount;\n      this.renderedLastFrame = true;\n    }\n  }\n  dispose() {\n    if (this.textureUtils != null) {\n      this.textureUtils.dispose();\n    }\n    if (this.threeRenderer != null) {\n      this.threeRenderer.dispose();\n    }\n    this.textureUtils = null;\n    this.threeRenderer = null;\n    const elements = [];\n    for (const scene of this.scenes) {\n      elements.push(scene.element);\n    }\n    this.canvas3D.removeEventListener('webglcontextlost', this.onWebGLContextLost);\n    this.canvas3D.removeEventListener('webglcontextrestored', this.onWebGLContextRestored);\n    return elements;\n  }\n}\n", "/* @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const $correlatedObjects = Symbol('correlatedObjects');\nexport const $onUpdate = Symbol('onUpdate');\n/**\n * A SerializableThreeDOMElement is the common primitive of all scene graph\n * elements that have been facaded in the host execution context. It adds\n * a common interface to these elements in support of convenient\n * serializability.\n */\nexport class ThreeDOMElement {\n  constructor(onUpdate, correlatedObjects) {\n    this[$onUpdate] = onUpdate;\n    this[$correlatedObjects] = correlatedObjects;\n  }\n}\n", "/* @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Mesh, MeshBasicMaterial, OrthographicCamera, PlaneGeometry, Scene, WebGLRenderTarget } from 'three';\nimport { blobCanvas } from '../../model-viewer-base.js';\nimport { Renderer } from '../../three-components/Renderer.js';\nimport { $correlatedObjects, $onUpdate, ThreeDOMElement } from './three-dom-element.js';\nconst quadMaterial = new MeshBasicMaterial();\nconst quad = new PlaneGeometry(2, 2);\nlet adhocNum = 0;\nexport const $threeTexture = Symbol('threeTexture');\nexport const $threeTextures = Symbol('threeTextures');\nexport const $applyTexture = Symbol('applyTexture');\n/**\n * Image facade implementation for Three.js textures\n */\nexport class Image extends ThreeDOMElement {\n  get [$threeTexture]() {\n    var _a;\n    return (_a = this[$correlatedObjects]) === null || _a === void 0 ? void 0 : _a.values().next().value;\n  }\n  get [$threeTextures]() {\n    return this[$correlatedObjects];\n  }\n  constructor(onUpdate, texture) {\n    super(onUpdate, new Set(texture ? [texture] : []));\n    if (!this[$threeTexture].image.src) {\n      this[$threeTexture].image.src = texture.name ? texture.name : 'adhoc_image' + adhocNum++;\n    }\n    if (!this[$threeTexture].image.name) {\n      this[$threeTexture].image.name = texture && texture.image && texture.image.src ? texture.image.src.split('/').pop() : 'adhoc_image';\n    }\n  }\n  get name() {\n    return this[$threeTexture].image.name || '';\n  }\n  get uri() {\n    return this[$threeTexture].image.src;\n  }\n  get bufferView() {\n    return this[$threeTexture].image.bufferView;\n  }\n  get element() {\n    const texture = this[$threeTexture];\n    if (texture && (texture.isCanvasTexture || texture.isVideoTexture)) {\n      return texture.image;\n    }\n    return;\n  }\n  get animation() {\n    const texture = this[$threeTexture];\n    if (texture && texture.isCanvasTexture && texture.animation) {\n      return texture.animation;\n    }\n    return;\n  }\n  get type() {\n    return this.uri != null ? 'external' : 'embedded';\n  }\n  set name(name) {\n    for (const texture of this[$threeTextures]) {\n      texture.image.name = name;\n    }\n  }\n  update() {\n    const texture = this[$threeTexture];\n    // Applies to non-Lottie canvas textures only\n    if (texture && texture.isCanvasTexture && !texture.animation) {\n      this[$threeTexture].needsUpdate = true;\n      this[$onUpdate]();\n    }\n  }\n  async createThumbnail(width, height) {\n    const scene = new Scene();\n    quadMaterial.map = this[$threeTexture];\n    const mesh = new Mesh(quad, quadMaterial);\n    scene.add(mesh);\n    const camera = new OrthographicCamera(-1, 1, 1, -1, 0, 1);\n    const {\n      threeRenderer\n    } = Renderer.singleton;\n    const renderTarget = new WebGLRenderTarget(width, height);\n    threeRenderer.setRenderTarget(renderTarget);\n    threeRenderer.render(scene, camera);\n    threeRenderer.setRenderTarget(null);\n    const buffer = new Uint8Array(width * height * 4);\n    threeRenderer.readRenderTargetPixels(renderTarget, 0, 0, width, height, buffer);\n    blobCanvas.width = width;\n    blobCanvas.height = height;\n    const blobContext = blobCanvas.getContext('2d');\n    const imageData = blobContext.createImageData(width, height);\n    imageData.data.set(buffer);\n    blobContext.putImageData(imageData, 0, 0);\n    return new Promise(async (resolve, reject) => {\n      blobCanvas.toBlob(blob => {\n        if (!blob) {\n          return reject('Failed to capture thumbnail.');\n        }\n        resolve(URL.createObjectURL(blob));\n      }, 'image/png');\n    });\n  }\n}\n", "export var Filter;\n(function (Filter) {\n  Filter[Filter[\"Nearest\"] = 9728] = \"Nearest\";\n  Filter[Filter[\"Linear\"] = 9729] = \"Linear\";\n  Filter[Filter[\"NearestMipmapNearest\"] = 9984] = \"NearestMipmapNearest\";\n  Filter[Filter[\"LinearMipmapNearest\"] = 9985] = \"LinearMipmapNearest\";\n  Filter[Filter[\"NearestMipmapLinear\"] = 9986] = \"NearestMipmapLinear\";\n  Filter[Filter[\"LinearMipmapLinear\"] = 9987] = \"LinearMipmapLinear\";\n})(Filter || (Filter = {}));\nexport var Wrap;\n(function (Wrap) {\n  Wrap[Wrap[\"ClampToEdge\"] = 33071] = \"ClampToEdge\";\n  Wrap[Wrap[\"MirroredRepeat\"] = 33648] = \"MirroredRepeat\";\n  Wrap[Wrap[\"Repeat\"] = 10497] = \"Repeat\";\n})(Wrap || (Wrap = {}));\n", "/* @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ClampToEdgeWrapping, LinearFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, MirroredRepeatWrapping, NearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, RepeatWrapping, Vector2 } from 'three';\nimport { toVector2D } from '../../model-viewer-base.js';\nimport { Filter, Wrap } from '../../three-components/gltf-instance/gltf-2.0.js';\nimport { $correlatedObjects, $onUpdate, ThreeDOMElement } from './three-dom-element.js';\n// Convertion between gltf standards and threejs standards.\nconst wrapModeToWrapping = new Map([[Wrap.Repeat, RepeatWrapping], [Wrap.ClampToEdge, ClampToEdgeWrapping], [Wrap.MirroredRepeat, MirroredRepeatWrapping]]);\nconst wrappingToWrapMode = new Map([[RepeatWrapping, Wrap.Repeat], [ClampToEdgeWrapping, Wrap.ClampToEdge], [MirroredRepeatWrapping, Wrap.MirroredRepeat]]);\nconst minFilterToMinification = new Map([[Filter.Nearest, NearestFilter], [Filter.Linear, LinearFilter], [Filter.NearestMipmapNearest, NearestMipmapNearestFilter], [Filter.LinearMipmapNearest, LinearMipmapNearestFilter], [Filter.NearestMipmapLinear, NearestMipmapLinearFilter], [Filter.LinearMipmapLinear, LinearMipmapLinearFilter]]);\nconst minificationToMinFilter = new Map([[NearestFilter, Filter.Nearest], [LinearFilter, Filter.Linear], [NearestMipmapNearestFilter, Filter.NearestMipmapNearest], [LinearMipmapNearestFilter, Filter.LinearMipmapNearest], [NearestMipmapLinearFilter, Filter.NearestMipmapLinear], [LinearMipmapLinearFilter, Filter.LinearMipmapLinear]]);\nconst magFilterToMagnification = new Map([[Filter.Nearest, NearestFilter], [Filter.Linear, LinearFilter]]);\nconst magnificationToMagFilter = new Map([[NearestFilter, Filter.Nearest], [LinearFilter, Filter.Linear]]);\n// Checks for threejs standards.\nconst isMinFilter = (() => {\n  return value => minificationToMinFilter.has(value);\n})();\nconst isMagFilter = (() => {\n  return value => magnificationToMagFilter.has(value);\n})();\nconst isWrapping = (() => {\n  return value => wrappingToWrapMode.has(value);\n})();\nconst isValidSamplerValue = (property, value) => {\n  switch (property) {\n    case 'minFilter':\n      return isMinFilter(value);\n    case 'magFilter':\n      return isMagFilter(value);\n    case 'wrapS':\n    case 'wrapT':\n      return isWrapping(value);\n    case 'rotation':\n    case 'repeat':\n    case 'offset':\n      return true;\n    default:\n      throw new Error(`Cannot configure property \"${property}\" on Sampler`);\n  }\n};\nconst $threeTexture = Symbol('threeTexture');\nconst $threeTextures = Symbol('threeTextures');\nconst $setProperty = Symbol('setProperty');\n/**\n * Sampler facade implementation for Three.js textures\n */\nexport class Sampler extends ThreeDOMElement {\n  get [$threeTexture]() {\n    var _a;\n    return (_a = this[$correlatedObjects]) === null || _a === void 0 ? void 0 : _a.values().next().value;\n  }\n  get [$threeTextures]() {\n    return this[$correlatedObjects];\n  }\n  constructor(onUpdate, texture) {\n    super(onUpdate, new Set(texture ? [texture] : []));\n  }\n  get name() {\n    return this[$threeTexture].name || '';\n  }\n  get minFilter() {\n    return minificationToMinFilter.get(this[$threeTexture].minFilter);\n  }\n  get magFilter() {\n    return magnificationToMagFilter.get(this[$threeTexture].magFilter);\n  }\n  get wrapS() {\n    return wrappingToWrapMode.get(this[$threeTexture].wrapS);\n  }\n  get wrapT() {\n    return wrappingToWrapMode.get(this[$threeTexture].wrapT);\n  }\n  get rotation() {\n    return this[$threeTexture].rotation;\n  }\n  get scale() {\n    return toVector2D(this[$threeTexture].repeat);\n  }\n  get offset() {\n    return toVector2D(this[$threeTexture].offset);\n  }\n  setMinFilter(filter) {\n    this[$setProperty]('minFilter', minFilterToMinification.get(filter));\n  }\n  setMagFilter(filter) {\n    this[$setProperty]('magFilter', magFilterToMagnification.get(filter));\n  }\n  setWrapS(mode) {\n    this[$setProperty]('wrapS', wrapModeToWrapping.get(mode));\n  }\n  setWrapT(mode) {\n    this[$setProperty]('wrapT', wrapModeToWrapping.get(mode));\n  }\n  setRotation(rotation) {\n    if (rotation == null) {\n      // Reset rotation.\n      rotation = 0;\n    }\n    this[$setProperty]('rotation', rotation);\n  }\n  setScale(scale) {\n    if (scale == null) {\n      // Reset scale.\n      scale = {\n        u: 1,\n        v: 1\n      };\n    }\n    this[$setProperty]('repeat', new Vector2(scale.u, scale.v));\n  }\n  setOffset(offset) {\n    if (offset == null) {\n      // Reset offset.\n      offset = {\n        u: 0,\n        v: 0\n      };\n    }\n    this[$setProperty]('offset', new Vector2(offset.u, offset.v));\n  }\n  [$setProperty](property, value) {\n    if (isValidSamplerValue(property, value)) {\n      for (const texture of this[$threeTextures]) {\n        texture[property] = value;\n        texture.needsUpdate = true;\n      }\n    }\n    this[$onUpdate]();\n  }\n}\n", "/* @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Image } from './image.js';\nimport { Sampler } from './sampler.js';\nimport { $correlatedObjects, ThreeDOMElement } from './three-dom-element.js';\nconst $image = Symbol('image');\nconst $sampler = Symbol('sampler');\nconst $threeTexture = Symbol('threeTexture');\n/**\n * Material facade implementation for Three.js materials\n */\nexport class Texture extends ThreeDOMElement {\n  get [$threeTexture]() {\n    var _a;\n    return (_a = this[$correlatedObjects]) === null || _a === void 0 ? void 0 : _a.values().next().value;\n  }\n  constructor(onUpdate, threeTexture) {\n    super(onUpdate, new Set(threeTexture ? [threeTexture] : []));\n    this[$sampler] = new Sampler(onUpdate, threeTexture);\n    this[$image] = new Image(onUpdate, threeTexture);\n  }\n  get name() {\n    return this[$threeTexture].name || '';\n  }\n  set name(name) {\n    for (const texture of this[$correlatedObjects]) {\n      texture.name = name;\n    }\n  }\n  get sampler() {\n    return this[$sampler];\n  }\n  get source() {\n    return this[$image];\n  }\n}\n", "/* @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _a, _b, _c;\nimport { LinearSRGBColorSpace, SRGBColorSpace, Vector2 } from 'three';\nimport { $threeTexture } from './image.js';\nimport { Texture } from './texture.js';\nconst $texture = Symbol('texture');\nconst $transform = Symbol('transform');\nexport const $materials = Symbol('materials');\nexport const $usage = Symbol('usage');\nconst $onUpdate = Symbol('onUpdate');\nconst $activeVideo = Symbol('activeVideo');\n// Defines what a texture will be used for.\nexport var TextureUsage;\n(function (TextureUsage) {\n  TextureUsage[TextureUsage[\"Base\"] = 0] = \"Base\";\n  TextureUsage[TextureUsage[\"MetallicRoughness\"] = 1] = \"MetallicRoughness\";\n  TextureUsage[TextureUsage[\"Normal\"] = 2] = \"Normal\";\n  TextureUsage[TextureUsage[\"Occlusion\"] = 3] = \"Occlusion\";\n  TextureUsage[TextureUsage[\"Emissive\"] = 4] = \"Emissive\";\n  TextureUsage[TextureUsage[\"Clearcoat\"] = 5] = \"Clearcoat\";\n  TextureUsage[TextureUsage[\"ClearcoatRoughness\"] = 6] = \"ClearcoatRoughness\";\n  TextureUsage[TextureUsage[\"ClearcoatNormal\"] = 7] = \"ClearcoatNormal\";\n  TextureUsage[TextureUsage[\"SheenColor\"] = 8] = \"SheenColor\";\n  TextureUsage[TextureUsage[\"SheenRoughness\"] = 9] = \"SheenRoughness\";\n  TextureUsage[TextureUsage[\"Transmission\"] = 10] = \"Transmission\";\n  TextureUsage[TextureUsage[\"Thickness\"] = 11] = \"Thickness\";\n  TextureUsage[TextureUsage[\"Specular\"] = 12] = \"Specular\";\n  TextureUsage[TextureUsage[\"SpecularColor\"] = 13] = \"SpecularColor\";\n  TextureUsage[TextureUsage[\"Iridescence\"] = 14] = \"Iridescence\";\n  TextureUsage[TextureUsage[\"IridescenceThickness\"] = 15] = \"IridescenceThickness\";\n  TextureUsage[TextureUsage[\"Anisotropy\"] = 16] = \"Anisotropy\";\n})(TextureUsage || (TextureUsage = {}));\n/**\n * TextureInfo facade implementation for Three.js materials\n */\nexport class TextureInfo {\n  constructor(onUpdate, usage, threeTexture, material) {\n    this[_a] = null;\n    this[_b] = {\n      rotation: 0,\n      scale: new Vector2(1, 1),\n      offset: new Vector2(0, 0)\n    };\n    this[_c] = false;\n    // Creates image, sampler, and texture if valid texture info is provided.\n    if (threeTexture) {\n      this[$transform].rotation = threeTexture.rotation;\n      this[$transform].scale.copy(threeTexture.repeat);\n      this[$transform].offset.copy(threeTexture.offset);\n      this[$texture] = new Texture(onUpdate, threeTexture);\n    }\n    this[$onUpdate] = onUpdate;\n    this[$materials] = material;\n    this[$usage] = usage;\n  }\n  get texture() {\n    return this[$texture];\n  }\n  setTexture(texture) {\n    var _d, _e;\n    const threeTexture = texture != null ? texture.source[$threeTexture] : null;\n    const oldTexture = (_d = this[$texture]) === null || _d === void 0 ? void 0 : _d.source[$threeTexture];\n    if (oldTexture != null && oldTexture.isVideoTexture) {\n      this[$activeVideo] = false;\n    } else if ((_e = this[$texture]) === null || _e === void 0 ? void 0 : _e.source.animation) {\n      this[$texture].source.animation.removeEventListener('enterFrame', this[$onUpdate]);\n    }\n    this[$texture] = texture;\n    if (threeTexture != null && threeTexture.isVideoTexture) {\n      const element = threeTexture.image;\n      this[$activeVideo] = true;\n      if (element.requestVideoFrameCallback != null) {\n        const update = () => {\n          if (!this[$activeVideo]) {\n            return;\n          }\n          this[$onUpdate]();\n          element.requestVideoFrameCallback(update);\n        };\n        element.requestVideoFrameCallback(update);\n      } else {\n        const update = () => {\n          if (!this[$activeVideo]) {\n            return;\n          }\n          this[$onUpdate]();\n          requestAnimationFrame(update);\n        };\n        requestAnimationFrame(update);\n      }\n    } else if ((texture === null || texture === void 0 ? void 0 : texture.source.animation) != null) {\n      texture.source.animation.addEventListener('enterFrame', this[$onUpdate]);\n    }\n    let colorSpace = SRGBColorSpace;\n    if (this[$materials]) {\n      for (const material of this[$materials]) {\n        switch (this[$usage]) {\n          case TextureUsage.Base:\n            material.map = threeTexture;\n            break;\n          case TextureUsage.MetallicRoughness:\n            colorSpace = LinearSRGBColorSpace;\n            material.metalnessMap = threeTexture;\n            material.roughnessMap = threeTexture;\n            break;\n          case TextureUsage.Normal:\n            colorSpace = LinearSRGBColorSpace;\n            material.normalMap = threeTexture;\n            break;\n          case TextureUsage.Occlusion:\n            colorSpace = LinearSRGBColorSpace;\n            material.aoMap = threeTexture;\n            break;\n          case TextureUsage.Emissive:\n            material.emissiveMap = threeTexture;\n            break;\n          case TextureUsage.Clearcoat:\n            material.clearcoatMap = threeTexture;\n            break;\n          case TextureUsage.ClearcoatRoughness:\n            material.clearcoatRoughnessMap = threeTexture;\n            break;\n          case TextureUsage.ClearcoatNormal:\n            material.clearcoatNormalMap = threeTexture;\n            break;\n          case TextureUsage.SheenColor:\n            material.sheenColorMap = threeTexture;\n            break;\n          case TextureUsage.SheenRoughness:\n            material.sheenRoughnessMap = threeTexture;\n            break;\n          case TextureUsage.Transmission:\n            material.transmissionMap = threeTexture;\n            break;\n          case TextureUsage.Thickness:\n            material.thicknessMap = threeTexture;\n            break;\n          case TextureUsage.Specular:\n            material.specularIntensityMap = threeTexture;\n            break;\n          case TextureUsage.SpecularColor:\n            material.specularColorMap = threeTexture;\n            break;\n          case TextureUsage.Iridescence:\n            material.iridescenceMap = threeTexture;\n            break;\n          case TextureUsage.IridescenceThickness:\n            material.iridescenceThicknessMap = threeTexture;\n            break;\n          case TextureUsage.Anisotropy:\n            material.anisotropyMap = threeTexture;\n            break;\n          default:\n        }\n        material.needsUpdate = true;\n      }\n    }\n    if (threeTexture) {\n      // Updates the colorSpace for the texture, affects all references.\n      threeTexture.colorSpace = colorSpace;\n      threeTexture.rotation = this[$transform].rotation;\n      threeTexture.repeat = this[$transform].scale;\n      threeTexture.offset = this[$transform].offset;\n    }\n    this[$onUpdate]();\n  }\n}\n_a = $texture, _b = $transform, _c = $activeVideo;\n", "/* @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Color } from 'three';\nimport { TextureInfo, TextureUsage } from './texture-info.js';\nimport { $correlatedObjects, $onUpdate, ThreeDOMElement } from './three-dom-element.js';\nconst $threeMaterial = Symbol('threeMaterial');\nconst $threeMaterials = Symbol('threeMaterials');\nconst $baseColorTexture = Symbol('baseColorTexture');\nconst $metallicRoughnessTexture = Symbol('metallicRoughnessTexture');\n/**\n * PBR material properties facade implementation for Three.js materials\n */\nexport class PBRMetallicRoughness extends ThreeDOMElement {\n  get [$threeMaterials]() {\n    return this[$correlatedObjects];\n  }\n  get [$threeMaterial]() {\n    var _a;\n    return (_a = this[$correlatedObjects]) === null || _a === void 0 ? void 0 : _a.values().next().value;\n  }\n  constructor(onUpdate, correlatedMaterials) {\n    super(onUpdate, correlatedMaterials);\n    const {\n      map,\n      metalnessMap\n    } = correlatedMaterials.values().next().value;\n    this[$baseColorTexture] = new TextureInfo(onUpdate, TextureUsage.Base, map, correlatedMaterials);\n    this[$metallicRoughnessTexture] = new TextureInfo(onUpdate, TextureUsage.MetallicRoughness, metalnessMap, correlatedMaterials);\n  }\n  get baseColorFactor() {\n    const rgba = [0, 0, 0, this[$threeMaterial].opacity];\n    this[$threeMaterial].color.toArray(rgba);\n    return rgba;\n  }\n  get metallicFactor() {\n    return this[$threeMaterial].metalness;\n  }\n  get roughnessFactor() {\n    return this[$threeMaterial].roughness;\n  }\n  get baseColorTexture() {\n    return this[$baseColorTexture];\n  }\n  get metallicRoughnessTexture() {\n    return this[$metallicRoughnessTexture];\n  }\n  setBaseColorFactor(rgba) {\n    const color = new Color();\n    if (rgba instanceof Array) {\n      color.fromArray(rgba);\n    } else {\n      color.set(rgba);\n    }\n    for (const material of this[$threeMaterials]) {\n      material.color.set(color);\n      if (rgba instanceof Array && rgba.length > 3) {\n        material.opacity = rgba[3];\n      } else {\n        rgba = [0, 0, 0, material.opacity];\n        color.toArray(rgba);\n      }\n    }\n    this[$onUpdate]();\n  }\n  setMetallicFactor(value) {\n    for (const material of this[$threeMaterials]) {\n      material.metalness = value;\n    }\n    this[$onUpdate]();\n  }\n  setRoughnessFactor(value) {\n    for (const material of this[$threeMaterials]) {\n      material.roughness = value;\n    }\n    this[$onUpdate]();\n  }\n}\n", "/* @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _a, _b;\nimport { Color, DoubleSide, FrontSide, Vector2 } from 'three';\nimport { PBRMetallicRoughness } from './pbr-metallic-roughness.js';\nimport { TextureInfo, TextureUsage } from './texture-info.js';\nimport { $correlatedObjects, $onUpdate, ThreeDOMElement } from './three-dom-element.js';\nconst $pbrMetallicRoughness = Symbol('pbrMetallicRoughness');\nconst $normalTexture = Symbol('normalTexture');\nconst $occlusionTexture = Symbol('occlusionTexture');\nconst $emissiveTexture = Symbol('emissiveTexture');\nconst $backingThreeMaterial = Symbol('backingThreeMaterial');\nconst $applyAlphaCutoff = Symbol('applyAlphaCutoff');\nconst $getAlphaMode = Symbol('getAlphaMode');\nexport const $lazyLoadGLTFInfo = Symbol('lazyLoadGLTFInfo');\nconst $initialize = Symbol('initialize');\nexport const $getLoadedMaterial = Symbol('getLoadedMaterial');\nexport const $ensureMaterialIsLoaded = Symbol('ensureMaterialIsLoaded');\nexport const $gltfIndex = Symbol('gltfIndex');\nexport const $setActive = Symbol('setActive');\nexport const $variantIndices = Symbol('variantIndices');\nconst $isActive = Symbol('isActive');\nconst $modelVariants = Symbol('modelVariants');\nconst $name = Symbol('name');\nconst $pbrTextures = Symbol('pbrTextures');\n/**\n * Material facade implementation for Three.js materials\n */\nexport class Material extends ThreeDOMElement {\n  get [(_a = $variantIndices, _b = $pbrTextures, $backingThreeMaterial)]() {\n    return this[$correlatedObjects].values().next().value;\n  }\n  constructor(onUpdate, gltfIndex, isActive, modelVariants, correlatedMaterials, name, lazyLoadInfo = undefined) {\n    super(onUpdate, correlatedMaterials);\n    this[_a] = new Set();\n    this[_b] = new Map();\n    this[$gltfIndex] = gltfIndex;\n    this[$isActive] = isActive;\n    this[$modelVariants] = modelVariants;\n    this[$name] = name;\n    if (lazyLoadInfo == null) {\n      this[$initialize]();\n    } else {\n      this[$lazyLoadGLTFInfo] = lazyLoadInfo;\n    }\n  }\n  [$initialize]() {\n    const onUpdate = this[$onUpdate];\n    const correlatedMaterials = this[$correlatedObjects];\n    this[$pbrMetallicRoughness] = new PBRMetallicRoughness(onUpdate, correlatedMaterials);\n    const {\n      normalMap,\n      aoMap,\n      emissiveMap\n    } = correlatedMaterials.values().next().value;\n    this[$normalTexture] = new TextureInfo(onUpdate, TextureUsage.Normal, normalMap, correlatedMaterials);\n    this[$occlusionTexture] = new TextureInfo(onUpdate, TextureUsage.Occlusion, aoMap, correlatedMaterials);\n    this[$emissiveTexture] = new TextureInfo(onUpdate, TextureUsage.Emissive, emissiveMap, correlatedMaterials);\n    const createTextureInfo = usage => {\n      this[$pbrTextures].set(usage, new TextureInfo(onUpdate, usage, null, correlatedMaterials));\n    };\n    createTextureInfo(TextureUsage.Clearcoat);\n    createTextureInfo(TextureUsage.ClearcoatRoughness);\n    createTextureInfo(TextureUsage.ClearcoatNormal);\n    createTextureInfo(TextureUsage.SheenColor);\n    createTextureInfo(TextureUsage.SheenRoughness);\n    createTextureInfo(TextureUsage.Transmission);\n    createTextureInfo(TextureUsage.Thickness);\n    createTextureInfo(TextureUsage.Specular);\n    createTextureInfo(TextureUsage.SpecularColor);\n    createTextureInfo(TextureUsage.Iridescence);\n    createTextureInfo(TextureUsage.IridescenceThickness);\n    createTextureInfo(TextureUsage.Anisotropy);\n  }\n  async [$getLoadedMaterial]() {\n    if (this[$lazyLoadGLTFInfo] != null) {\n      const material = await this[$lazyLoadGLTFInfo].doLazyLoad();\n      this[$initialize]();\n      // Releases lazy load info.\n      this[$lazyLoadGLTFInfo] = undefined;\n      // Redefines the method as a noop method.\n      this.ensureLoaded = async () => {};\n      return material;\n    }\n    return null;\n  }\n  colorFromRgb(rgb) {\n    const color = new Color();\n    if (rgb instanceof Array) {\n      color.fromArray(rgb);\n    } else {\n      color.set(rgb);\n    }\n    return color;\n  }\n  [$ensureMaterialIsLoaded]() {\n    if (this[$lazyLoadGLTFInfo] == null) {\n      return;\n    }\n    throw new Error(`Material \"${this.name}\" has not been loaded, call 'await\n    myMaterial.ensureLoaded()' before using an unloaded material.`);\n  }\n  async ensureLoaded() {\n    await this[$getLoadedMaterial]();\n  }\n  get isLoaded() {\n    return this[$lazyLoadGLTFInfo] == null;\n  }\n  get isActive() {\n    return this[$isActive];\n  }\n  [$setActive](isActive) {\n    this[$isActive] = isActive;\n  }\n  get name() {\n    return this[$name] || '';\n  }\n  set name(name) {\n    this[$name] = name;\n    if (this[$correlatedObjects] != null) {\n      for (const threeMaterial of this[$correlatedObjects]) {\n        threeMaterial.name = name;\n      }\n    }\n  }\n  get pbrMetallicRoughness() {\n    this[$ensureMaterialIsLoaded]();\n    return this[$pbrMetallicRoughness];\n  }\n  get normalTexture() {\n    this[$ensureMaterialIsLoaded]();\n    return this[$normalTexture];\n  }\n  get occlusionTexture() {\n    this[$ensureMaterialIsLoaded]();\n    return this[$occlusionTexture];\n  }\n  get emissiveTexture() {\n    this[$ensureMaterialIsLoaded]();\n    return this[$emissiveTexture];\n  }\n  get emissiveFactor() {\n    this[$ensureMaterialIsLoaded]();\n    return this[$backingThreeMaterial].emissive.toArray();\n  }\n  get index() {\n    return this[$gltfIndex];\n  }\n  hasVariant(name) {\n    const variantData = this[$modelVariants].get(name);\n    return variantData != null && this[$variantIndices].has(variantData.index);\n  }\n  setEmissiveFactor(rgb) {\n    this[$ensureMaterialIsLoaded]();\n    const color = this.colorFromRgb(rgb);\n    for (const material of this[$correlatedObjects]) {\n      material.emissive.set(color);\n    }\n    this[$onUpdate]();\n  }\n  [$getAlphaMode]() {\n    // Follows implementation of GLTFExporter from three.js\n    if (this[$backingThreeMaterial].transparent) {\n      return 'BLEND';\n    } else {\n      if (this[$backingThreeMaterial].alphaTest > 0.0) {\n        return 'MASK';\n      }\n    }\n    return 'OPAQUE';\n  }\n  [$applyAlphaCutoff]() {\n    this[$ensureMaterialIsLoaded]();\n    for (const material of this[$correlatedObjects]) {\n      if (this[$getAlphaMode]() === 'MASK') {\n        if (material.alphaTest == undefined) {\n          material.alphaTest = 0.5;\n        }\n      } else {\n        material.alphaTest = undefined;\n      }\n      material.needsUpdate = true;\n    }\n  }\n  setAlphaCutoff(cutoff) {\n    this[$ensureMaterialIsLoaded]();\n    for (const material of this[$correlatedObjects]) {\n      material.alphaTest = cutoff;\n      material.needsUpdate = true;\n    }\n    // Set AlphaCutoff to undefined if AlphaMode is not MASK.\n    this[$applyAlphaCutoff]();\n    this[$onUpdate]();\n  }\n  getAlphaCutoff() {\n    this[$ensureMaterialIsLoaded]();\n    return this[$backingThreeMaterial].alphaTest;\n  }\n  setDoubleSided(doubleSided) {\n    this[$ensureMaterialIsLoaded]();\n    for (const material of this[$correlatedObjects]) {\n      // When double-sided is disabled gltf spec dictates that Back-Face culling\n      // must be disabled, in three.js parlance that would mean FrontSide\n      // rendering only.\n      // https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#double-sided\n      material.side = doubleSided ? DoubleSide : FrontSide;\n      material.needsUpdate = true;\n    }\n    this[$onUpdate]();\n  }\n  getDoubleSided() {\n    this[$ensureMaterialIsLoaded]();\n    return this[$backingThreeMaterial].side == DoubleSide;\n  }\n  setAlphaMode(alphaMode) {\n    this[$ensureMaterialIsLoaded]();\n    const enableTransparency = (material, enabled) => {\n      material.transparent = enabled;\n      material.depthWrite = !enabled;\n    };\n    for (const material of this[$correlatedObjects]) {\n      enableTransparency(material, alphaMode === 'BLEND');\n      if (alphaMode === 'MASK') {\n        material.alphaTest = 0.5;\n      } else {\n        material.alphaTest = undefined;\n      }\n      material.needsUpdate = true;\n    }\n    this[$onUpdate]();\n  }\n  getAlphaMode() {\n    this[$ensureMaterialIsLoaded]();\n    return this[$getAlphaMode]();\n  }\n  /**\n   * PBR Next properties.\n   */\n  // KHR_materials_emissive_strength\n  get emissiveStrength() {\n    this[$ensureMaterialIsLoaded]();\n    return this[$backingThreeMaterial].emissiveIntensity;\n  }\n  setEmissiveStrength(emissiveStrength) {\n    this[$ensureMaterialIsLoaded]();\n    for (const material of this[$correlatedObjects]) {\n      material.emissiveIntensity = emissiveStrength;\n    }\n    this[$onUpdate]();\n  }\n  // KHR_materials_clearcoat\n  get clearcoatFactor() {\n    this[$ensureMaterialIsLoaded]();\n    return this[$backingThreeMaterial].clearcoat;\n  }\n  get clearcoatRoughnessFactor() {\n    this[$ensureMaterialIsLoaded]();\n    return this[$backingThreeMaterial].clearcoatRoughness;\n  }\n  get clearcoatTexture() {\n    this[$ensureMaterialIsLoaded]();\n    return this[$pbrTextures].get(TextureUsage.Clearcoat);\n  }\n  get clearcoatRoughnessTexture() {\n    this[$ensureMaterialIsLoaded]();\n    return this[$pbrTextures].get(TextureUsage.ClearcoatRoughness);\n  }\n  get clearcoatNormalTexture() {\n    this[$ensureMaterialIsLoaded]();\n    return this[$pbrTextures].get(TextureUsage.ClearcoatNormal);\n  }\n  get clearcoatNormalScale() {\n    this[$ensureMaterialIsLoaded]();\n    return this[$backingThreeMaterial].clearcoatNormalScale.x;\n  }\n  setClearcoatFactor(clearcoatFactor) {\n    this[$ensureMaterialIsLoaded]();\n    for (const material of this[$correlatedObjects]) {\n      material.clearcoat = clearcoatFactor;\n    }\n    this[$onUpdate]();\n  }\n  setClearcoatRoughnessFactor(clearcoatRoughnessFactor) {\n    this[$ensureMaterialIsLoaded]();\n    for (const material of this[$correlatedObjects]) {\n      material.clearcoatRoughness = clearcoatRoughnessFactor;\n    }\n    this[$onUpdate]();\n  }\n  setClearcoatNormalScale(clearcoatNormalScale) {\n    this[$ensureMaterialIsLoaded]();\n    for (const material of this[$correlatedObjects]) {\n      material.clearcoatNormalScale = new Vector2(clearcoatNormalScale, clearcoatNormalScale);\n    }\n    this[$onUpdate]();\n  }\n  // KHR_materials_ior\n  get ior() {\n    this[$ensureMaterialIsLoaded]();\n    return this[$backingThreeMaterial].ior;\n  }\n  setIor(ior) {\n    this[$ensureMaterialIsLoaded]();\n    for (const material of this[$correlatedObjects]) {\n      material.ior = ior;\n    }\n    this[$onUpdate]();\n  }\n  // KHR_materials_sheen\n  get sheenColorFactor() {\n    this[$ensureMaterialIsLoaded]();\n    return this[$backingThreeMaterial].sheenColor.toArray();\n  }\n  get sheenColorTexture() {\n    this[$ensureMaterialIsLoaded]();\n    return this[$pbrTextures].get(TextureUsage.SheenColor);\n  }\n  get sheenRoughnessFactor() {\n    this[$ensureMaterialIsLoaded]();\n    return this[$backingThreeMaterial].sheenRoughness;\n  }\n  get sheenRoughnessTexture() {\n    this[$ensureMaterialIsLoaded]();\n    return this[$pbrTextures].get(TextureUsage.SheenRoughness);\n  }\n  setSheenColorFactor(rgb) {\n    this[$ensureMaterialIsLoaded]();\n    const color = this.colorFromRgb(rgb);\n    for (const material of this[$correlatedObjects]) {\n      material.sheenColor.set(color);\n      // Three.js GLTFExporter checks for internal sheen value.\n      material.sheen = 1;\n    }\n    this[$onUpdate]();\n  }\n  setSheenRoughnessFactor(roughness) {\n    this[$ensureMaterialIsLoaded]();\n    for (const material of this[$correlatedObjects]) {\n      material.sheenRoughness = roughness;\n      // Three.js GLTFExporter checks for internal sheen value.\n      material.sheen = 1;\n    }\n    this[$onUpdate]();\n  }\n  // KHR_materials_transmission\n  get transmissionFactor() {\n    this[$ensureMaterialIsLoaded]();\n    return this[$backingThreeMaterial].transmission;\n  }\n  get transmissionTexture() {\n    this[$ensureMaterialIsLoaded]();\n    return this[$pbrTextures].get(TextureUsage.Transmission);\n  }\n  setTransmissionFactor(transmission) {\n    this[$ensureMaterialIsLoaded]();\n    for (const material of this[$correlatedObjects]) {\n      material.transmission = transmission;\n    }\n    this[$onUpdate]();\n  }\n  // KHR_materials_volume\n  get thicknessFactor() {\n    this[$ensureMaterialIsLoaded]();\n    return this[$backingThreeMaterial].thickness;\n  }\n  get thicknessTexture() {\n    this[$ensureMaterialIsLoaded]();\n    return this[$pbrTextures].get(TextureUsage.Thickness);\n  }\n  get attenuationDistance() {\n    this[$ensureMaterialIsLoaded]();\n    return this[$backingThreeMaterial].attenuationDistance;\n  }\n  get attenuationColor() {\n    this[$ensureMaterialIsLoaded]();\n    return this[$backingThreeMaterial].attenuationColor.toArray();\n  }\n  setThicknessFactor(thickness) {\n    this[$ensureMaterialIsLoaded]();\n    for (const material of this[$correlatedObjects]) {\n      material.thickness = thickness;\n    }\n    this[$onUpdate]();\n  }\n  setAttenuationDistance(attenuationDistance) {\n    this[$ensureMaterialIsLoaded]();\n    for (const material of this[$correlatedObjects]) {\n      material.attenuationDistance = attenuationDistance;\n    }\n    this[$onUpdate]();\n  }\n  setAttenuationColor(rgb) {\n    this[$ensureMaterialIsLoaded]();\n    const color = this.colorFromRgb(rgb);\n    for (const material of this[$correlatedObjects]) {\n      material.attenuationColor.set(color);\n    }\n    this[$onUpdate]();\n  }\n  // KHR_materials_specular\n  get specularFactor() {\n    this[$ensureMaterialIsLoaded]();\n    return this[$backingThreeMaterial].specularIntensity;\n  }\n  get specularTexture() {\n    this[$ensureMaterialIsLoaded]();\n    return this[$pbrTextures].get(TextureUsage.Specular);\n  }\n  get specularColorFactor() {\n    this[$ensureMaterialIsLoaded]();\n    return this[$backingThreeMaterial].specularColor.toArray();\n  }\n  get specularColorTexture() {\n    this[$ensureMaterialIsLoaded]();\n    return this[$pbrTextures].get(TextureUsage.SheenColor);\n  }\n  setSpecularFactor(specularFactor) {\n    this[$ensureMaterialIsLoaded]();\n    for (const material of this[$correlatedObjects]) {\n      material.specularIntensity = specularFactor;\n    }\n    this[$onUpdate]();\n  }\n  setSpecularColorFactor(rgb) {\n    this[$ensureMaterialIsLoaded]();\n    const color = this.colorFromRgb(rgb);\n    for (const material of this[$correlatedObjects]) {\n      material.specularColor.set(color);\n    }\n    this[$onUpdate]();\n  }\n  // KHR_materials_iridescence\n  get iridescenceFactor() {\n    this[$ensureMaterialIsLoaded]();\n    return this[$backingThreeMaterial].iridescence;\n  }\n  get iridescenceTexture() {\n    this[$ensureMaterialIsLoaded]();\n    return this[$pbrTextures].get(TextureUsage.Iridescence);\n  }\n  get iridescenceIor() {\n    this[$ensureMaterialIsLoaded]();\n    return this[$backingThreeMaterial].iridescenceIOR;\n  }\n  get iridescenceThicknessMinimum() {\n    this[$ensureMaterialIsLoaded]();\n    return this[$backingThreeMaterial].iridescenceThicknessRange[0];\n  }\n  get iridescenceThicknessMaximum() {\n    this[$ensureMaterialIsLoaded]();\n    return this[$backingThreeMaterial].iridescenceThicknessRange[1];\n  }\n  get iridescenceThicknessTexture() {\n    this[$ensureMaterialIsLoaded]();\n    return this[$pbrTextures].get(TextureUsage.IridescenceThickness);\n  }\n  setIridescenceFactor(iridescence) {\n    this[$ensureMaterialIsLoaded]();\n    for (const material of this[$correlatedObjects]) {\n      material.iridescence = iridescence;\n    }\n    this[$onUpdate]();\n  }\n  setIridescenceIor(ior) {\n    this[$ensureMaterialIsLoaded]();\n    for (const material of this[$correlatedObjects]) {\n      material.iridescenceIOR = ior;\n    }\n    this[$onUpdate]();\n  }\n  setIridescenceThicknessMinimum(thicknessMin) {\n    this[$ensureMaterialIsLoaded]();\n    for (const material of this[$correlatedObjects]) {\n      material.iridescenceThicknessRange[0] = thicknessMin;\n    }\n    this[$onUpdate]();\n  }\n  setIridescenceThicknessMaximum(thicknessMax) {\n    this[$ensureMaterialIsLoaded]();\n    for (const material of this[$correlatedObjects]) {\n      material.iridescenceThicknessRange[1] = thicknessMax;\n    }\n    this[$onUpdate]();\n  }\n  // KHR_materials_anisotropy\n  get anisotropyStrength() {\n    this[$ensureMaterialIsLoaded]();\n    return this[$backingThreeMaterial].anisotropy;\n  }\n  get anisotropyRotation() {\n    this[$ensureMaterialIsLoaded]();\n    return this[$backingThreeMaterial].anisotropyRotation;\n  }\n  get anisotropyTexture() {\n    this[$ensureMaterialIsLoaded]();\n    return this[$pbrTextures].get(TextureUsage.Anisotropy);\n  }\n  setAnisotropyStrength(strength) {\n    this[$ensureMaterialIsLoaded]();\n    for (const material of this[$correlatedObjects]) {\n      material.anisotropy = strength;\n    }\n    this[$onUpdate]();\n  }\n  setAnisotropyRotation(rotation) {\n    this[$ensureMaterialIsLoaded]();\n    for (const material of this[$correlatedObjects]) {\n      material.anisotropyRotation = rotation;\n    }\n    this[$onUpdate]();\n  }\n}\n", "import { $getLoadedMaterial, $variantIndices } from '../material.js';\nimport { $correlatedObjects } from '../three-dom-element.js';\n// Defines the base level node methods and data.\nexport class Node {\n  constructor(name) {\n    this.name = '';\n    this.children = new Array();\n    this.name = name;\n  }\n}\n// Represents a primitive in a glTF mesh.\nexport class PrimitiveNode extends Node {\n  constructor(mesh, mvMaterials, modelVariants, correlatedSceneGraph) {\n    super(mesh.name);\n    // Maps glTF material index number to a material that this primitive supports.\n    this.materials = new Map();\n    // Maps variant index to material.\n    this.variantToMaterialMap = new Map();\n    this.initialMaterialIdx = 0;\n    this.activeMaterialIdx = 0;\n    this.mesh = mesh;\n    const {\n      gltf,\n      threeGLTF,\n      threeObjectMap\n    } = correlatedSceneGraph;\n    this.parser = threeGLTF.parser;\n    this.modelVariants = modelVariants;\n    this.mesh.userData.variantData = modelVariants;\n    // Captures the primitive's initial material.\n    const materialMappings = threeObjectMap.get(mesh.material);\n    if (materialMappings.materials != null) {\n      this.initialMaterialIdx = this.activeMaterialIdx = materialMappings.materials;\n    } else {\n      console.error(`Primitive (${mesh.name}) missing initial material reference.`);\n    }\n    // Gets the mesh index from the node.\n    const associations = mesh.userData.associations || {};\n    if (associations.meshes == null) {\n      console.error('Mesh is missing primitive index association');\n      return;\n    }\n    // The gltf mesh array to sample from.\n    const meshElementArray = gltf['meshes'] || [];\n    // List of primitives under the mesh.\n    const gltfPrimitives = meshElementArray[associations.meshes].primitives || [];\n    const gltfPrimitive = gltfPrimitives[associations.primitives];\n    if (gltfPrimitive == null) {\n      console.error('Mesh primitive definition is missing.');\n      return;\n    }\n    // Maps the gltfPrimitive default to a material.\n    if (gltfPrimitive.material != null) {\n      this.materials.set(gltfPrimitive.material, mvMaterials[gltfPrimitive.material]);\n    } else {\n      const defaultIdx = mvMaterials.findIndex(mat => {\n        return mat.name === 'Default';\n      });\n      if (defaultIdx >= 0) {\n        this.materials.set(defaultIdx, mvMaterials[defaultIdx]);\n      } else {\n        console.warn('gltfPrimitive has no material!');\n      }\n    }\n    if (gltfPrimitive.extensions && gltfPrimitive.extensions['KHR_materials_variants']) {\n      const variantsExtension = gltfPrimitive.extensions['KHR_materials_variants'];\n      const extensions = threeGLTF.parser.json.extensions;\n      const variantNames = extensions['KHR_materials_variants'].variants;\n      // Provides definition now that we know there are variants to\n      // support.\n      for (const mapping of variantsExtension.mappings) {\n        const mvMaterial = mvMaterials[mapping.material];\n        // Maps variant indices to Materials.\n        this.materials.set(mapping.material, mvMaterial);\n        for (const variant of mapping.variants) {\n          const {\n            name\n          } = variantNames[variant];\n          this.variantToMaterialMap.set(variant, mvMaterial);\n          // Provides variant info for material self lookup.\n          mvMaterial[$variantIndices].add(variant);\n          // Updates the models variant data.\n          if (!modelVariants.has(name)) {\n            modelVariants.set(name, {\n              name,\n              index: variant\n            });\n          }\n        }\n      }\n    }\n  }\n  async setActiveMaterial(material) {\n    const mvMaterial = this.materials.get(material);\n    if (material !== this.activeMaterialIdx) {\n      const backingMaterials = mvMaterial[$correlatedObjects];\n      const baseMaterial = await mvMaterial[$getLoadedMaterial]();\n      if (baseMaterial != null) {\n        this.mesh.material = baseMaterial;\n      } else {\n        this.mesh.material = backingMaterials.values().next().value;\n      }\n      this.parser.assignFinalMaterial(this.mesh);\n      backingMaterials.add(this.mesh.material);\n      this.activeMaterialIdx = material;\n    }\n    return this.mesh.material;\n  }\n  getActiveMaterial() {\n    return this.materials.get(this.activeMaterialIdx);\n  }\n  getMaterial(index) {\n    return this.materials.get(index);\n  }\n  async enableVariant(name) {\n    if (name == null) {\n      return this.setActiveMaterial(this.initialMaterialIdx);\n    }\n    if (this.variantToMaterialMap != null && this.modelVariants.has(name)) {\n      const modelVariants = this.modelVariants.get(name);\n      return this.enableVariantHelper(modelVariants.index);\n    }\n    return null;\n  }\n  async enableVariantHelper(index) {\n    if (this.variantToMaterialMap != null && index != null) {\n      const material = this.variantToMaterialMap.get(index);\n      if (material != null) {\n        return this.setActiveMaterial(material.index);\n      }\n    }\n    return null;\n  }\n  async instantiateVariants() {\n    if (this.variantToMaterialMap == null) {\n      return;\n    }\n    for (const index of this.variantToMaterialMap.keys()) {\n      const variantMaterial = this.mesh.userData.variantMaterials.get(index);\n      if (variantMaterial.material != null) {\n        continue;\n      }\n      const threeMaterial = await this.enableVariantHelper(index);\n      if (threeMaterial != null) {\n        variantMaterial.material = threeMaterial;\n      }\n    }\n  }\n  get variantInfo() {\n    return this.variantToMaterialMap;\n  }\n  addVariant(materialVariant, variantName) {\n    if (!this.ensureVariantIsUnused(variantName)) {\n      return false;\n    }\n    // Adds the variant to the model variants if needed.\n    if (!this.modelVariants.has(variantName)) {\n      this.modelVariants.set(variantName, {\n        name: variantName,\n        index: this.modelVariants.size\n      });\n    }\n    const modelVariantData = this.modelVariants.get(variantName);\n    const variantIndex = modelVariantData.index;\n    // Updates materials mapped to the variant.\n    materialVariant[$variantIndices].add(variantIndex);\n    // Updates internal mappings.\n    this.variantToMaterialMap.set(variantIndex, materialVariant);\n    this.materials.set(materialVariant.index, materialVariant);\n    this.updateVariantUserData(variantIndex, materialVariant);\n    return true;\n  }\n  deleteVariant(variantIndex) {\n    if (this.variantInfo.has(variantIndex)) {\n      this.variantInfo.delete(variantIndex);\n      const userDataMap = this.mesh.userData.variantMaterials;\n      if (userDataMap != null) {\n        userDataMap.delete(variantIndex);\n      }\n    }\n  }\n  updateVariantUserData(variantIndex, materialVariant) {\n    // Adds variants name to material variants set.\n    materialVariant[$variantIndices].add(variantIndex);\n    this.mesh.userData.variantData = this.modelVariants;\n    // Updates import data (see VariantMaterialLoaderPlugin.ts).\n    this.mesh.userData.variantMaterials = this.mesh.userData.variantMaterials || new Map();\n    const map = this.mesh.userData.variantMaterials;\n    map.set(variantIndex, {\n      material: materialVariant[$correlatedObjects].values().next().value,\n      gltfMaterialIndex: materialVariant.index\n    });\n  }\n  ensureVariantIsUnused(variantName) {\n    const modelVariants = this.modelVariants.get(variantName);\n    if (modelVariants != null && this.variantInfo.has(modelVariants.index)) {\n      console.warn(`Primitive cannot add variant '${variantName}' for this material, it already exists.`);\n      return false;\n    }\n    return true;\n  }\n}\n", "/* @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _a, _b, _c, _d, _e, _f;\nimport { Mesh } from 'three';\nimport { $setActive, $variantIndices, Material } from './material.js';\nimport { Node, PrimitiveNode } from './nodes/primitive-node.js';\nimport { $correlatedObjects } from './three-dom-element.js';\nexport const $materials = Symbol('materials');\nconst $hierarchy = Symbol('hierarchy');\nconst $roots = Symbol('roots');\nexport const $primitivesList = Symbol('primitives');\nexport const $loadVariant = Symbol('loadVariant');\nexport const $prepareVariantsForExport = Symbol('prepareVariantsForExport');\nexport const $switchVariant = Symbol('switchVariant');\nexport const $materialFromPoint = Symbol('materialFromPoint');\nexport const $nodeFromPoint = Symbol('nodeFromPoint');\nexport const $nodeFromIndex = Symbol('nodeFromIndex');\nexport const $variantData = Symbol('variantData');\nexport const $availableVariants = Symbol('availableVariants');\nconst $modelOnUpdate = Symbol('modelOnUpdate');\nconst $cloneMaterial = Symbol('cloneMaterial');\n// Holds onto temporary scene context information needed to perform lazy loading\n// of a resource.\nexport class LazyLoader {\n  constructor(gltf, gltfElementMap, mapKey, doLazyLoad) {\n    this.gltf = gltf;\n    this.gltfElementMap = gltfElementMap;\n    this.mapKey = mapKey;\n    this.doLazyLoad = doLazyLoad;\n  }\n}\n/**\n * A Model facades the top-level GLTF object returned by Three.js' GLTFLoader.\n * Currently, the model only bothers itself with the materials in the Three.js\n * scene graph.\n */\nexport class Model {\n  constructor(correlatedSceneGraph, onUpdate = () => {}) {\n    this[_a] = new Array();\n    this[_b] = new Array();\n    this[_c] = new Array();\n    this[_d] = new Array();\n    this[_e] = () => {};\n    this[_f] = new Map();\n    this[$modelOnUpdate] = onUpdate;\n    const {\n      gltf,\n      threeGLTF,\n      gltfElementMap\n    } = correlatedSceneGraph;\n    for (const [i, material] of gltf.materials.entries()) {\n      const correlatedMaterial = gltfElementMap.get(material);\n      if (correlatedMaterial != null) {\n        this[$materials].push(new Material(onUpdate, i, true, this[$variantData], correlatedMaterial, material.name));\n      } else {\n        const elementArray = gltf['materials'] || [];\n        const gltfMaterialDef = elementArray[i];\n        const threeMaterialSet = new Set();\n        gltfElementMap.set(gltfMaterialDef, threeMaterialSet);\n        const materialLoadCallback = async () => {\n          const threeMaterial = await threeGLTF.parser.getDependency('material', i);\n          threeMaterialSet.add(threeMaterial);\n          return threeMaterial;\n        };\n        // Configures the material for lazy loading.\n        this[$materials].push(new Material(onUpdate, i, false, this[$variantData], threeMaterialSet, material.name, new LazyLoader(gltf, gltfElementMap, gltfMaterialDef, materialLoadCallback)));\n      }\n    }\n    // Creates a hierarchy of Nodes. Allows not just for switching which\n    // material is applied to a mesh but also exposes a way to provide API\n    // for switching materials and general assignment/modification.\n    // Prepares for scene iteration.\n    const parentMap = new Map();\n    const nodeStack = new Array();\n    for (const object of threeGLTF.scene.children) {\n      nodeStack.push(object);\n    }\n    // Walks the hierarchy and creates a node tree.\n    while (nodeStack.length > 0) {\n      const object = nodeStack.pop();\n      let node = null;\n      if (object instanceof Mesh) {\n        node = new PrimitiveNode(object, this.materials, this[$variantData], correlatedSceneGraph);\n        this[$primitivesList].push(node);\n      } else {\n        node = new Node(object.name);\n      }\n      const parent = parentMap.get(object);\n      if (parent != null) {\n        parent.children.push(node);\n      } else {\n        this[$roots].push(node);\n      }\n      this[$hierarchy].push(node);\n      for (const child of object.children) {\n        nodeStack.push(child);\n        parentMap.set(object, node);\n      }\n    }\n  }\n  /**\n   * Materials are listed in the order of the GLTF materials array, plus a\n   * default material at the end if one is used.\n   *\n   * TODO(#1003): How do we handle non-active scenes?\n   */\n  get materials() {\n    return this[$materials];\n  }\n  [(_a = $materials, _b = $hierarchy, _c = $roots, _d = $primitivesList, _e = $modelOnUpdate, _f = $variantData, $availableVariants)]() {\n    const variants = Array.from(this[$variantData].values());\n    variants.sort((a, b) => {\n      return a.index - b.index;\n    });\n    return variants.map(data => {\n      return data.name;\n    });\n  }\n  getMaterialByName(name) {\n    const matches = this[$materials].filter(material => {\n      return material.name === name;\n    });\n    if (matches.length > 0) {\n      return matches[0];\n    }\n    return null;\n  }\n  [$nodeFromIndex](mesh, primitive) {\n    const found = this[$hierarchy].find(node => {\n      if (node instanceof PrimitiveNode) {\n        const {\n          meshes,\n          primitives\n        } = node.mesh.userData.associations;\n        if (meshes == mesh && primitives == primitive) {\n          return true;\n        }\n      }\n      return false;\n    });\n    return found == null ? null : found;\n  }\n  [$nodeFromPoint](hit) {\n    return this[$hierarchy].find(node => {\n      if (node instanceof PrimitiveNode) {\n        const primitive = node;\n        if (primitive.mesh === hit.object) {\n          return true;\n        }\n      }\n      return false;\n    });\n  }\n  /**\n   * Intersects a ray with the Model and returns the first material whose\n   * object was intersected.\n   */\n  [$materialFromPoint](hit) {\n    return this[$nodeFromPoint](hit).getActiveMaterial();\n  }\n  /**\n   * Switches model variant to the variant name provided, or switches to\n   * default/initial materials if 'null' is provided.\n   */\n  async [$switchVariant](variantName) {\n    for (const primitive of this[$primitivesList]) {\n      await primitive.enableVariant(variantName);\n    }\n    for (const material of this.materials) {\n      material[$setActive](false);\n    }\n    // Marks the materials that are now in use after the variant switch.\n    for (const primitive of this[$primitivesList]) {\n      this.materials[primitive.getActiveMaterial().index][$setActive](true);\n    }\n  }\n  async [$prepareVariantsForExport]() {\n    const promises = new Array();\n    for (const primitive of this[$primitivesList]) {\n      promises.push(primitive.instantiateVariants());\n    }\n    await Promise.all(promises);\n  }\n  [$cloneMaterial](index, newMaterialName) {\n    const material = this.materials[index];\n    if (!material.isLoaded) {\n      console.error(`Cloning an unloaded material,\n           call 'material.ensureLoaded() before cloning the material.`);\n    }\n    const threeMaterialSet = material[$correlatedObjects];\n    const clonedSet = new Set();\n    for (const [i, threeMaterial] of threeMaterialSet.entries()) {\n      const clone = threeMaterial.clone();\n      clone.name = newMaterialName + (threeMaterialSet.size > 1 ? '_inst' + i : '');\n      clonedSet.add(clone);\n    }\n    const clonedMaterial = new Material(this[$modelOnUpdate], this[$materials].length, false,\n    // Cloned as inactive.\n    this[$variantData], clonedSet, newMaterialName);\n    this[$materials].push(clonedMaterial);\n    return clonedMaterial;\n  }\n  createMaterialInstanceForVariant(originalMaterialIndex, newMaterialName, variantName, activateVariant = true) {\n    let variantMaterialInstance = null;\n    for (const primitive of this[$primitivesList]) {\n      const variantData = this[$variantData].get(variantName);\n      // Skips the primitive if the variant already exists.\n      if (variantData != null && primitive.variantInfo.has(variantData.index)) {\n        continue;\n      }\n      // Skips the primitive if the source/original material does not exist.\n      if (primitive.getMaterial(originalMaterialIndex) == null) {\n        continue;\n      }\n      if (!this.hasVariant(variantName)) {\n        this.createVariant(variantName);\n      }\n      if (variantMaterialInstance == null) {\n        variantMaterialInstance = this[$cloneMaterial](originalMaterialIndex, newMaterialName);\n      }\n      primitive.addVariant(variantMaterialInstance, variantName);\n    }\n    if (activateVariant && variantMaterialInstance != null) {\n      variantMaterialInstance[$setActive](true);\n      this.materials[originalMaterialIndex][$setActive](false);\n      for (const primitive of this[$primitivesList]) {\n        primitive.enableVariant(variantName);\n      }\n    }\n    return variantMaterialInstance;\n  }\n  createVariant(variantName) {\n    if (!this[$variantData].has(variantName)) {\n      // Adds the name if it's not already in the list.\n      this[$variantData].set(variantName, {\n        name: variantName,\n        index: this[$variantData].size\n      });\n    } else {\n      console.warn(`Variant '${variantName}'' already exists`);\n    }\n  }\n  hasVariant(variantName) {\n    return this[$variantData].has(variantName);\n  }\n  setMaterialToVariant(materialIndex, targetVariantName) {\n    if (this[$availableVariants]().find(name => name === targetVariantName) == null) {\n      console.warn(`Can't add material to '${targetVariantName}', the variant does not exist.'`);\n      return;\n    }\n    if (materialIndex < 0 || materialIndex >= this.materials.length) {\n      console.error(`setMaterialToVariant(): materialIndex is out of bounds.`);\n      return;\n    }\n    for (const primitive of this[$primitivesList]) {\n      const material = primitive.getMaterial(materialIndex);\n      // Ensures the material exists on the primitive before setting it to a\n      // variant.\n      if (material != null) {\n        primitive.addVariant(material, targetVariantName);\n      }\n    }\n  }\n  updateVariantName(currentName, newName) {\n    const variantData = this[$variantData].get(currentName);\n    if (variantData == null) {\n      return;\n    }\n    variantData.name = newName;\n    this[$variantData].set(newName, variantData);\n    this[$variantData].delete(currentName);\n  }\n  deleteVariant(variantName) {\n    const variant = this[$variantData].get(variantName);\n    if (variant == null) {\n      return;\n    }\n    for (const material of this.materials) {\n      if (material.hasVariant(variantName)) {\n        material[$variantIndices].delete(variant.index);\n      }\n    }\n    for (const primitive of this[$primitivesList]) {\n      primitive.deleteVariant(variant.index);\n    }\n    this[$variantData].delete(variantName);\n  }\n}\n", "/* @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { property } from 'lit/decorators.js';\nimport { CanvasTexture, RepeatWrapping, SRGBColorSpace, VideoTexture } from 'three';\nimport { GLTFExporter } from 'three/examples/jsm/exporters/GLTFExporter.js';\nimport { $needsRender, $onModelLoad, $progressTracker, $renderer, $scene } from '../model-viewer-base.js';\nimport GLTFExporterMaterialsVariantsExtension from '../three-components/gltf-instance/VariantMaterialExporterPlugin.js';\nimport { $availableVariants, $materialFromPoint, $prepareVariantsForExport, $switchVariant, Model } from './scene-graph/model.js';\nimport { Texture as ModelViewerTexture } from './scene-graph/texture.js';\nexport const $currentGLTF = Symbol('currentGLTF');\nexport const $originalGltfJson = Symbol('originalGltfJson');\nexport const $model = Symbol('model');\nconst $getOnUpdateMethod = Symbol('getOnUpdateMethod');\nconst $buildTexture = Symbol('buildTexture');\n/**\n * SceneGraphMixin manages exposes a model API in order to support operations on\n * the <model-viewer> scene graph.\n */\nexport const SceneGraphMixin = ModelViewerElement => {\n  var _a, _b, _c;\n  class SceneGraphModelViewerElement extends ModelViewerElement {\n    constructor() {\n      super(...arguments);\n      this[_a] = undefined;\n      this[_b] = null;\n      this[_c] = null;\n      this.variantName = null;\n      this.orientation = '0 0 0';\n      this.scale = '1 1 1';\n    }\n    // Scene-graph API:\n    /** @export */\n    get model() {\n      return this[$model];\n    }\n    get availableVariants() {\n      return this.model ? this.model[$availableVariants]() : [];\n    }\n    /**\n     * Returns a deep copy of the gltf JSON as loaded. It will not reflect\n     * changes to the scene-graph, nor will editing it have any effect.\n     */\n    get originalGltfJson() {\n      return this[$originalGltfJson];\n    }\n    [(_a = $model, _b = $currentGLTF, _c = $originalGltfJson, $getOnUpdateMethod)]() {\n      return () => {\n        this[$needsRender]();\n      };\n    }\n    [$buildTexture](texture) {\n      // Applies glTF default settings.\n      texture.colorSpace = SRGBColorSpace;\n      texture.wrapS = RepeatWrapping;\n      texture.wrapT = RepeatWrapping;\n      return new ModelViewerTexture(this[$getOnUpdateMethod](), texture);\n    }\n    async createTexture(uri, type = 'image/png') {\n      const {\n        textureUtils\n      } = this[$renderer];\n      const texture = await textureUtils.loadImage(uri, this.withCredentials);\n      texture.userData.mimeType = type;\n      return this[$buildTexture](texture);\n    }\n    async createLottieTexture(uri, quality = 1) {\n      const {\n        textureUtils\n      } = this[$renderer];\n      const texture = await textureUtils.loadLottie(uri, quality, this.withCredentials);\n      return this[$buildTexture](texture);\n    }\n    createVideoTexture(uri) {\n      const video = document.createElement('video');\n      video.crossOrigin = this.withCredentials ? 'use-credentials' : 'anonymous';\n      video.src = uri;\n      video.muted = true;\n      video.playsInline = true;\n      video.loop = true;\n      video.play();\n      const texture = new VideoTexture(video);\n      return this[$buildTexture](texture);\n    }\n    createCanvasTexture() {\n      const canvas = document.createElement('canvas');\n      const texture = new CanvasTexture(canvas);\n      return this[$buildTexture](texture);\n    }\n    async updated(changedProperties) {\n      super.updated(changedProperties);\n      if (changedProperties.has('variantName')) {\n        const updateVariantProgress = this[$progressTracker].beginActivity('variant-update');\n        updateVariantProgress(0.1);\n        const model = this[$model];\n        const {\n          variantName\n        } = this;\n        if (model != null) {\n          await model[$switchVariant](variantName);\n          this[$needsRender]();\n          this.dispatchEvent(new CustomEvent('variant-applied'));\n        }\n        updateVariantProgress(1.0);\n      }\n      if (changedProperties.has('orientation') || changedProperties.has('scale')) {\n        if (!this.loaded) {\n          return;\n        }\n        const scene = this[$scene];\n        scene.applyTransform();\n        scene.updateBoundingBox();\n        scene.updateShadow();\n        this[$renderer].arRenderer.onUpdateScene();\n        this[$needsRender]();\n      }\n    }\n    [$onModelLoad]() {\n      super[$onModelLoad]();\n      const {\n        currentGLTF\n      } = this[$scene];\n      if (currentGLTF != null) {\n        const {\n          correlatedSceneGraph\n        } = currentGLTF;\n        if (correlatedSceneGraph != null && currentGLTF !== this[$currentGLTF]) {\n          this[$model] = new Model(correlatedSceneGraph, this[$getOnUpdateMethod]());\n          this[$originalGltfJson] = JSON.parse(JSON.stringify(correlatedSceneGraph.gltf));\n        }\n        // KHR_materials_variants extension spec:\n        // https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_variants\n        if ('variants' in currentGLTF.userData) {\n          this.requestUpdate('variantName');\n        }\n      }\n      this[$currentGLTF] = currentGLTF;\n    }\n    /** @export */\n    async exportScene(options) {\n      const scene = this[$scene];\n      return new Promise(async (resolve, reject) => {\n        // Defaults\n        const opts = {\n          binary: true,\n          onlyVisible: true,\n          maxTextureSize: Infinity,\n          includeCustomExtensions: false,\n          forceIndices: false\n        };\n        Object.assign(opts, options);\n        // Not configurable\n        opts.animations = scene.animations;\n        opts.truncateDrawRange = true;\n        const shadow = scene.shadow;\n        let visible = false;\n        // Remove shadow from export\n        if (shadow != null) {\n          visible = shadow.visible;\n          shadow.visible = false;\n        }\n        await this[$model][$prepareVariantsForExport]();\n        const exporter = new GLTFExporter().register(writer => new GLTFExporterMaterialsVariantsExtension(writer));\n        exporter.parse(scene.model, gltf => {\n          return resolve(new Blob([opts.binary ? gltf : JSON.stringify(gltf)], {\n            type: opts.binary ? 'application/octet-stream' : 'application/json'\n          }));\n        }, () => {\n          return reject('glTF export failed');\n        }, opts);\n        if (shadow != null) {\n          shadow.visible = visible;\n        }\n      });\n    }\n    materialFromPoint(pixelX, pixelY) {\n      const model = this[$model];\n      if (model == null) {\n        return null;\n      }\n      const scene = this[$scene];\n      const ndcCoords = scene.getNDC(pixelX, pixelY);\n      const hit = scene.hitFromPoint(ndcCoords);\n      if (hit == null || hit.face == null) {\n        return null;\n      }\n      return model[$materialFromPoint](hit);\n    }\n  }\n  __decorate([property({\n    type: String,\n    attribute: 'variant-name'\n  })], SceneGraphModelViewerElement.prototype, \"variantName\", void 0);\n  __decorate([property({\n    type: String,\n    attribute: 'orientation'\n  })], SceneGraphModelViewerElement.prototype, \"orientation\", void 0);\n  __decorate([property({\n    type: String,\n    attribute: 'scale'\n  })], SceneGraphModelViewerElement.prototype, \"scale\", void 0);\n  return SceneGraphModelViewerElement;\n};\n", "/* @license\n * Copyright 2023 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Mesh, MeshBasicMaterial, SphereGeometry, Vector3 } from 'three';\nexport class GroundedSkybox extends Mesh {\n  constructor() {\n    super(undefined, new MeshBasicMaterial({\n      depthWrite: false\n    }));\n    this.height = 0;\n    this.radius = 0;\n    this.resolution = 0;\n    this.userData.noHit = true;\n  }\n  get map() {\n    return this.material.map;\n  }\n  set map(skybox) {\n    this.material.map = skybox;\n  }\n  isUsable() {\n    return this.height > 0 && this.radius > 0 && this.geometry != null && this.map != null;\n  }\n  updateGeometry(height = this.height, radius = this.radius, resolution = 128) {\n    if (height != this.height || radius != this.radius || resolution != this.resolution) {\n      this.height = height;\n      this.radius = radius;\n      this.resolution = resolution;\n      if (height > 0 && radius > 0) {\n        this.geometry.dispose();\n        this.geometry = makeGeometry(height, radius, resolution);\n      }\n    }\n  }\n}\nfunction makeGeometry(height, radius, resolution) {\n  const geometry = new SphereGeometry(radius, 2 * resolution, resolution);\n  geometry.scale(1, 1, -1);\n  const pos = geometry.getAttribute('position');\n  const tmp = new Vector3();\n  for (let i = 0; i < pos.count; ++i) {\n    tmp.fromBufferAttribute(pos, i);\n    if (tmp.y < 0) {\n      // Smooth out the transition from flat floor to sphere:\n      const y1 = -height * 3 / 2;\n      const f = tmp.y < y1 ? -height / tmp.y : 1 - tmp.y * tmp.y / (3 * y1 * y1);\n      tmp.multiplyScalar(f);\n      tmp.toArray(pos.array, 3 * i);\n    }\n  }\n  pos.needsUpdate = true;\n  return geometry;\n}\n", "/* @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Matrix3, Quaternion, Triangle, Vector3 } from 'three';\nimport { CSS2DObject } from 'three/examples/jsm/renderers/CSS2DRenderer.js';\nimport { normalizeUnit } from '../styles/conversions.js';\nimport { parseExpressions } from '../styles/parsers.js';\nconst a = new Vector3();\nconst b = new Vector3();\nconst c = new Vector3();\nconst mat = new Matrix3();\nconst triangle = new Triangle();\nconst quat = new Quaternion();\n/**\n * The Hotspot object is a reference-counted slot. If decrement() returns true,\n * it should be removed from the tree so it can be garbage-collected.\n */\nexport class Hotspot extends CSS2DObject {\n  constructor(config) {\n    super(document.createElement('div'));\n    this.normal = new Vector3(0, 1, 0);\n    this.initialized = false;\n    this.referenceCount = 1;\n    this.pivot = document.createElement('div');\n    this.slot = document.createElement('slot');\n    this.element.classList.add('annotation-wrapper');\n    this.slot.name = config.name;\n    this.element.appendChild(this.pivot);\n    this.pivot.appendChild(this.slot);\n    this.updatePosition(config.position);\n    this.updateNormal(config.normal);\n    this.surface = config.surface;\n  }\n  get facingCamera() {\n    return !this.element.classList.contains('hide');\n  }\n  /**\n   * Sets the hotspot to be in the highly visible foreground state.\n   */\n  show() {\n    if (!this.facingCamera || !this.initialized) {\n      this.updateVisibility(true);\n    }\n  }\n  /**\n   * Sets the hotspot to be in the diminished background state.\n   */\n  hide() {\n    if (this.facingCamera || !this.initialized) {\n      this.updateVisibility(false);\n    }\n  }\n  /**\n   * Call this when adding elements to the same slot to keep track.\n   */\n  increment() {\n    this.referenceCount++;\n  }\n  /**\n   * Call this when removing elements from the slot; returns true when the slot\n   * is unused.\n   */\n  decrement() {\n    if (this.referenceCount > 0) {\n      --this.referenceCount;\n    }\n    return this.referenceCount === 0;\n  }\n  /**\n   * Change the position of the hotspot to the input string, in the same format\n   * as the data-position attribute.\n   */\n  updatePosition(position) {\n    if (position == null) return;\n    const positionNodes = parseExpressions(position)[0].terms;\n    for (let i = 0; i < 3; ++i) {\n      this.position.setComponent(i, normalizeUnit(positionNodes[i]).number);\n    }\n    this.updateMatrixWorld();\n  }\n  /**\n   * Change the hotspot's normal to the input string, in the same format as the\n   * data-normal attribute.\n   */\n  updateNormal(normal) {\n    if (normal == null) return;\n    const normalNodes = parseExpressions(normal)[0].terms;\n    for (let i = 0; i < 3; ++i) {\n      this.normal.setComponent(i, normalNodes[i].number);\n    }\n  }\n  updateSurface() {\n    const {\n      mesh,\n      tri,\n      bary\n    } = this;\n    if (mesh == null || tri == null || bary == null) {\n      return;\n    }\n    mesh.getVertexPosition(tri.x, a);\n    mesh.getVertexPosition(tri.y, b);\n    mesh.getVertexPosition(tri.z, c);\n    a.toArray(mat.elements, 0);\n    b.toArray(mat.elements, 3);\n    c.toArray(mat.elements, 6);\n    this.position.copy(bary).applyMatrix3(mat);\n    const target = this.parent;\n    target.worldToLocal(mesh.localToWorld(this.position));\n    triangle.set(a, b, c);\n    triangle.getNormal(this.normal).transformDirection(mesh.matrixWorld);\n    const pivot = target.parent;\n    quat.setFromAxisAngle(a.set(0, 1, 0), -pivot.rotation.y);\n    this.normal.applyQuaternion(quat);\n  }\n  orient(radians) {\n    this.pivot.style.transform = `rotate(${radians}rad)`;\n  }\n  updateVisibility(show) {\n    this.element.classList.toggle('hide', !show);\n    // NOTE: ShadyDOM doesn't support slot.assignedElements, otherwise we could\n    // use that here.\n    this.slot.assignedNodes().forEach(node => {\n      if (node.nodeType !== Node.ELEMENT_NODE) {\n        return;\n      }\n      const element = node;\n      // Visibility attribute can be configured per-node in the hotspot:\n      const visibilityAttribute = element.dataset.visibilityAttribute;\n      if (visibilityAttribute != null) {\n        const attributeName = `data-${visibilityAttribute}`;\n        element.toggleAttribute(attributeName, show);\n      }\n      element.dispatchEvent(new CustomEvent('hotspot-visibility', {\n        detail: {\n          visible: show\n        }\n      }));\n    });\n    this.initialized = true;\n  }\n}\n", "/**\n * @module HorizontalBlurShader\n * @three_import import { HorizontalBlurShader } from 'three/addons/shaders/HorizontalBlurShader.js';\n */\n\n/**\n * Two pass Gaussian blur filter (horizontal and vertical blur shaders).\n *\n * References:\n * - {@link http://www.cake23.de/traveling-wavefronts-lit-up.html}.\n *\n * - 9 samples per pass\n * - standard deviation 2.7\n * - \"h\" and \"v\" parameters should be set to \"1 / width\" and \"1 / height\"\n *\n * @constant\n * @type {ShaderMaterial~Shader}\n */\nconst HorizontalBlurShader = {\n  name: 'HorizontalBlurShader',\n  uniforms: {\n    'tDiffuse': {\n      value: null\n    },\n    'h': {\n      value: 1.0 / 512.0\n    }\n  },\n  vertexShader: /* glsl */`\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`,\n  fragmentShader: /* glsl */`\n\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform float h;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec4 sum = vec4( 0.0 );\n\n\t\t\tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * h, vUv.y ) ) * 0.051;\n\t\t\tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * h, vUv.y ) ) * 0.0918;\n\t\t\tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * h, vUv.y ) ) * 0.12245;\n\t\t\tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * h, vUv.y ) ) * 0.1531;\n\t\t\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\n\t\t\tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * h, vUv.y ) ) * 0.1531;\n\t\t\tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * h, vUv.y ) ) * 0.12245;\n\t\t\tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * h, vUv.y ) ) * 0.0918;\n\t\t\tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * h, vUv.y ) ) * 0.051;\n\n\t\t\tgl_FragColor = sum;\n\n\t\t}`\n};\nexport { HorizontalBlurShader };", "/**\n * @module VerticalBlurShader\n * @three_import import { VerticalBlurShader } from 'three/addons/shaders/VerticalBlurShader.js';\n */\n\n/**\n * Two pass Gaussian blur filter (horizontal and vertical blur shaders)\n * - see {@link http://www.cake23.de/traveling-wavefronts-lit-up.html}\n *\n * - 9 samples per pass\n * - standard deviation 2.7\n * - \"h\" and \"v\" parameters should be set to \"1 / width\" and \"1 / height\"\n *\n * @constant\n * @type {ShaderMaterial~Shader}\n */\nconst VerticalBlurShader = {\n  name: 'VerticalBlurShader',\n  uniforms: {\n    'tDiffuse': {\n      value: null\n    },\n    'v': {\n      value: 1.0 / 512.0\n    }\n  },\n  vertexShader: /* glsl */`\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`,\n  fragmentShader: /* glsl */`\n\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform float v;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec4 sum = vec4( 0.0 );\n\n\t\t\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * v ) ) * 0.051;\n\t\t\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * v ) ) * 0.0918;\n\t\t\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * v ) ) * 0.12245;\n\t\t\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * v ) ) * 0.1531;\n\t\t\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\n\t\t\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * v ) ) * 0.1531;\n\t\t\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * v ) ) * 0.12245;\n\t\t\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * v ) ) * 0.0918;\n\t\t\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * v ) ) * 0.051;\n\n\t\t\tgl_FragColor = sum;\n\n\t\t}`\n};\nexport { VerticalBlurShader };", "const _lut = ['00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff'];\nlet _seed = 1234567;\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n/**\n * Generate a [UUID]{@link https://en.wikipedia.org/wiki/Universally_unique_identifier}\n * (universally unique identifier).\n *\n * @return {string} The UUID.\n */\nfunction generateUUID() {\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n  const d0 = Math.random() * 0xffffffff | 0;\n  const d1 = Math.random() * 0xffffffff | 0;\n  const d2 = Math.random() * 0xffffffff | 0;\n  const d3 = Math.random() * 0xffffffff | 0;\n  const uuid = _lut[d0 & 0xff] + _lut[d0 >> 8 & 0xff] + _lut[d0 >> 16 & 0xff] + _lut[d0 >> 24 & 0xff] + '-' + _lut[d1 & 0xff] + _lut[d1 >> 8 & 0xff] + '-' + _lut[d1 >> 16 & 0x0f | 0x40] + _lut[d1 >> 24 & 0xff] + '-' + _lut[d2 & 0x3f | 0x80] + _lut[d2 >> 8 & 0xff] + '-' + _lut[d2 >> 16 & 0xff] + _lut[d2 >> 24 & 0xff] + _lut[d3 & 0xff] + _lut[d3 >> 8 & 0xff] + _lut[d3 >> 16 & 0xff] + _lut[d3 >> 24 & 0xff];\n\n  // .toLowerCase() here flattens concatenated strings to save heap memory space.\n  return uuid.toLowerCase();\n}\n\n/**\n * Clamps the given value between min and max.\n *\n * @param {number} value - The value to clamp.\n * @param {number} min - The min value.\n * @param {number} max - The max value.\n * @return {number} The clamped value.\n */\nfunction clamp(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * Computes the Euclidean modulo of the given parameters that\n * is `( ( n % m ) + m ) % m`.\n *\n * @param {number} n - The first parameter.\n * @param {number} m - The second parameter.\n * @return {number} The Euclidean modulo.\n */\nfunction euclideanModulo(n, m) {\n  // https://en.wikipedia.org/wiki/Modulo_operation\n\n  return (n % m + m) % m;\n}\n\n/**\n * Performs a linear mapping from range `<a1, a2>` to range `<b1, b2>`\n * for the given value.\n *\n * @param {number} x - The value to be mapped.\n * @param {number} a1 - Minimum value for range A.\n * @param {number} a2 - Maximum value for range A.\n * @param {number} b1 - Minimum value for range B.\n * @param {number} b2 - Maximum value for range B.\n * @return {number} The mapped value.\n */\nfunction mapLinear(x, a1, a2, b1, b2) {\n  return b1 + (x - a1) * (b2 - b1) / (a2 - a1);\n}\n\n/**\n * Returns the percentage in the closed interval `[0, 1]` of the given value\n * between the start and end point.\n *\n * @param {number} x - The start point\n * @param {number} y - The end point.\n * @param {number} value - A value between start and end.\n * @return {number} The interpolation factor.\n */\nfunction inverseLerp(x, y, value) {\n  // https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\n\n  if (x !== y) {\n    return (value - x) / (y - x);\n  } else {\n    return 0;\n  }\n}\n\n/**\n * Returns a value linearly interpolated from two known points based on the given interval -\n * `t = 0` will return `x` and `t = 1` will return `y`.\n *\n * @param {number} x - The start point\n * @param {number} y - The end point.\n * @param {number} t - The interpolation factor in the closed interval `[0, 1]`.\n * @return {number} The interpolated value.\n */\nfunction lerp(x, y, t) {\n  return (1 - t) * x + t * y;\n}\n\n/**\n * Smoothly interpolate a number from `x` to `y` in  a spring-like manner using a delta\n * time to maintain frame rate independent movement. For details, see\n * [Frame rate independent damping using lerp]{@link http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/}.\n *\n * @param {number} x - The current point.\n * @param {number} y - The target point.\n * @param {number} lambda - A higher lambda value will make the movement more sudden,\n * and a lower value will make the movement more gradual.\n * @param {number} dt - Delta time in seconds.\n * @return {number} The interpolated value.\n */\nfunction damp(x, y, lambda, dt) {\n  return lerp(x, y, 1 - Math.exp(-lambda * dt));\n}\n\n/**\n * Returns a value that alternates between `0` and the given `length` parameter.\n *\n * @param {number} x - The value to pingpong.\n * @param {number} [length=1] - The positive value the function will pingpong to.\n * @return {number} The alternated value.\n */\nfunction pingpong(x, length = 1) {\n  // https://www.desmos.com/calculator/vcsjnyz7x4\n\n  return length - Math.abs(euclideanModulo(x, length * 2) - length);\n}\n\n/**\n * Returns a value in the range `[0,1]` that represents the percentage that `x` has\n * moved between `min` and `max`, but smoothed or slowed down the closer `x` is to\n * the `min` and `max`.\n *\n * See [Smoothstep]{@link http://en.wikipedia.org/wiki/Smoothstep} for more details.\n *\n * @param {number} x - The value to evaluate based on its position between min and max.\n * @param {number} min - The min value. Any x value below min will be `0`.\n * @param {number} max - The max value. Any x value above max will be `1`.\n * @return {number} The alternated value.\n */\nfunction smoothstep(x, min, max) {\n  if (x <= min) return 0;\n  if (x >= max) return 1;\n  x = (x - min) / (max - min);\n  return x * x * (3 - 2 * x);\n}\n\n/**\n * A [variation on smoothstep]{@link https://en.wikipedia.org/wiki/Smoothstep#Variations}\n * that has zero 1st and 2nd order derivatives at x=0 and x=1.\n *\n * @param {number} x - The value to evaluate based on its position between min and max.\n * @param {number} min - The min value. Any x value below min will be `0`.\n * @param {number} max - The max value. Any x value above max will be `1`.\n * @return {number} The alternated value.\n */\nfunction smootherstep(x, min, max) {\n  if (x <= min) return 0;\n  if (x >= max) return 1;\n  x = (x - min) / (max - min);\n  return x * x * x * (x * (x * 6 - 15) + 10);\n}\n\n/**\n * Returns a random integer from `<low, high>` interval.\n *\n * @param {number} low - The lower value boundary.\n * @param {number} high - The upper value boundary\n * @return {number} A random integer.\n */\nfunction randInt(low, high) {\n  return low + Math.floor(Math.random() * (high - low + 1));\n}\n\n/**\n * Returns a random float from `<low, high>` interval.\n *\n * @param {number} low - The lower value boundary.\n * @param {number} high - The upper value boundary\n * @return {number} A random float.\n */\nfunction randFloat(low, high) {\n  return low + Math.random() * (high - low);\n}\n\n/**\n * Returns a random integer from `<-range/2, range/2>` interval.\n *\n * @param {number} range - Defines the value range.\n * @return {number} A random float.\n */\nfunction randFloatSpread(range) {\n  return range * (0.5 - Math.random());\n}\n\n/**\n * Returns a deterministic pseudo-random float in the interval `[0, 1]`.\n *\n * @param {number} [s] - The integer seed.\n * @return {number} A random float.\n */\nfunction seededRandom(s) {\n  if (s !== undefined) _seed = s;\n\n  // Mulberry32 generator\n\n  let t = _seed += 0x6D2B79F5;\n  t = Math.imul(t ^ t >>> 15, t | 1);\n  t ^= t + Math.imul(t ^ t >>> 7, t | 61);\n  return ((t ^ t >>> 14) >>> 0) / 4294967296;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} degrees - A value in degrees.\n * @return {number} The converted value in radians.\n */\nfunction degToRad(degrees) {\n  return degrees * DEG2RAD;\n}\n\n/**\n * Converts radians to degrees.\n *\n * @param {number} radians - A value in radians.\n * @return {number} The converted value in degrees.\n */\nfunction radToDeg(radians) {\n  return radians * RAD2DEG;\n}\n\n/**\n * Returns `true` if the given number is a power of two.\n *\n * @param {number} value - The value to check.\n * @return {boolean} Whether the given number is a power of two or not.\n */\nfunction isPowerOfTwo(value) {\n  return (value & value - 1) === 0 && value !== 0;\n}\n\n/**\n * Returns the smallest power of two that is greater than or equal to the given number.\n *\n * @param {number} value - The value to find a POT for.\n * @return {number} The smallest power of two that is greater than or equal to the given number.\n */\nfunction ceilPowerOfTwo(value) {\n  return Math.pow(2, Math.ceil(Math.log(value) / Math.LN2));\n}\n\n/**\n * Returns the largest power of two that is less than or equal to the given number.\n *\n * @param {number} value - The value to find a POT for.\n * @return {number} The largest power of two that is less than or equal to the given number.\n */\nfunction floorPowerOfTwo(value) {\n  return Math.pow(2, Math.floor(Math.log(value) / Math.LN2));\n}\n\n/**\n * Sets the given quaternion from the [Intrinsic Proper Euler Angles]{@link https://en.wikipedia.org/wiki/Euler_angles}\n * defined by the given angles and order.\n *\n * Rotations are applied to the axes in the order specified by order:\n * rotation by angle `a` is applied first, then by angle `b`, then by angle `c`.\n *\n * @param {Quaternion} q - The quaternion to set.\n * @param {number} a - The rotation applied to the first axis, in radians.\n * @param {number} b - The rotation applied to the second axis, in radians.\n * @param {number} c - The rotation applied to the third axis, in radians.\n * @param {('XYX'|'XZX'|'YXY'|'YZY'|'ZXZ'|'ZYZ')} order - A string specifying the axes order.\n */\nfunction setQuaternionFromProperEuler(q, a, b, c, order) {\n  const cos = Math.cos;\n  const sin = Math.sin;\n  const c2 = cos(b / 2);\n  const s2 = sin(b / 2);\n  const c13 = cos((a + c) / 2);\n  const s13 = sin((a + c) / 2);\n  const c1_3 = cos((a - c) / 2);\n  const s1_3 = sin((a - c) / 2);\n  const c3_1 = cos((c - a) / 2);\n  const s3_1 = sin((c - a) / 2);\n  switch (order) {\n    case 'XYX':\n      q.set(c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13);\n      break;\n    case 'YZY':\n      q.set(s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13);\n      break;\n    case 'ZXZ':\n      q.set(s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13);\n      break;\n    case 'XZX':\n      q.set(c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13);\n      break;\n    case 'YXY':\n      q.set(s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13);\n      break;\n    case 'ZYZ':\n      q.set(s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13);\n      break;\n    default:\n      console.warn('THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order);\n  }\n}\n\n/**\n * Denormalizes the given value according to the given typed array.\n *\n * @param {number} value - The value to denormalize.\n * @param {TypedArray} array - The typed array that defines the data type of the value.\n * @return {number} The denormalize (float) value in the range `[0,1]`.\n */\nfunction denormalize(value, array) {\n  switch (array.constructor) {\n    case Float32Array:\n      return value;\n    case Uint32Array:\n      return value / 4294967295.0;\n    case Uint16Array:\n      return value / 65535.0;\n    case Uint8Array:\n      return value / 255.0;\n    case Int32Array:\n      return Math.max(value / 2147483647.0, -1.0);\n    case Int16Array:\n      return Math.max(value / 32767.0, -1.0);\n    case Int8Array:\n      return Math.max(value / 127.0, -1.0);\n    default:\n      throw new Error('Invalid component type.');\n  }\n}\n\n/**\n * Normalizes the given value according to the given typed array.\n *\n * @param {number} value - The float value in the range `[0,1]` to normalize.\n * @param {TypedArray} array - The typed array that defines the data type of the value.\n * @return {number} The normalize value.\n */\nfunction normalize(value, array) {\n  switch (array.constructor) {\n    case Float32Array:\n      return value;\n    case Uint32Array:\n      return Math.round(value * 4294967295.0);\n    case Uint16Array:\n      return Math.round(value * 65535.0);\n    case Uint8Array:\n      return Math.round(value * 255.0);\n    case Int32Array:\n      return Math.round(value * 2147483647.0);\n    case Int16Array:\n      return Math.round(value * 32767.0);\n    case Int8Array:\n      return Math.round(value * 127.0);\n    default:\n      throw new Error('Invalid component type.');\n  }\n}\n\n/**\n * @class\n * @classdesc A collection of math utility functions.\n * @hideconstructor\n */\nconst MathUtils = {\n  DEG2RAD: DEG2RAD,\n  RAD2DEG: RAD2DEG,\n  /**\n   * Generate a [UUID]{@link https://en.wikipedia.org/wiki/Universally_unique_identifier}\n   * (universally unique identifier).\n   *\n   * @static\n   * @method\n   * @return {string} The UUID.\n   */\n  generateUUID: generateUUID,\n  /**\n   * Clamps the given value between min and max.\n   *\n   * @static\n   * @method\n   * @param {number} value - The value to clamp.\n   * @param {number} min - The min value.\n   * @param {number} max - The max value.\n   * @return {number} The clamped value.\n   */\n  clamp: clamp,\n  /**\n   * Computes the Euclidean modulo of the given parameters that\n   * is `( ( n % m ) + m ) % m`.\n   *\n   * @static\n   * @method\n   * @param {number} n - The first parameter.\n   * @param {number} m - The second parameter.\n   * @return {number} The Euclidean modulo.\n   */\n  euclideanModulo: euclideanModulo,\n  /**\n   * Performs a linear mapping from range `<a1, a2>` to range `<b1, b2>`\n   * for the given value.\n   *\n   * @static\n   * @method\n   * @param {number} x - The value to be mapped.\n   * @param {number} a1 - Minimum value for range A.\n   * @param {number} a2 - Maximum value for range A.\n   * @param {number} b1 - Minimum value for range B.\n   * @param {number} b2 - Maximum value for range B.\n   * @return {number} The mapped value.\n   */\n  mapLinear: mapLinear,\n  /**\n   * Returns the percentage in the closed interval `[0, 1]` of the given value\n   * between the start and end point.\n   *\n   * @static\n   * @method\n   * @param {number} x - The start point\n   * @param {number} y - The end point.\n   * @param {number} value - A value between start and end.\n   * @return {number} The interpolation factor.\n   */\n  inverseLerp: inverseLerp,\n  /**\n   * Returns a value linearly interpolated from two known points based on the given interval -\n   * `t = 0` will return `x` and `t = 1` will return `y`.\n   *\n   * @static\n   * @method\n   * @param {number} x - The start point\n   * @param {number} y - The end point.\n   * @param {number} t - The interpolation factor in the closed interval `[0, 1]`.\n   * @return {number} The interpolated value.\n   */\n  lerp: lerp,\n  /**\n   * Smoothly interpolate a number from `x` to `y` in  a spring-like manner using a delta\n   * time to maintain frame rate independent movement. For details, see\n   * [Frame rate independent damping using lerp]{@link http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/}.\n   *\n   * @static\n   * @method\n   * @param {number} x - The current point.\n   * @param {number} y - The target point.\n   * @param {number} lambda - A higher lambda value will make the movement more sudden,\n   * and a lower value will make the movement more gradual.\n   * @param {number} dt - Delta time in seconds.\n   * @return {number} The interpolated value.\n   */\n  damp: damp,\n  /**\n   * Returns a value that alternates between `0` and the given `length` parameter.\n   *\n   * @static\n   * @method\n   * @param {number} x - The value to pingpong.\n   * @param {number} [length=1] - The positive value the function will pingpong to.\n   * @return {number} The alternated value.\n   */\n  pingpong: pingpong,\n  /**\n   * Returns a value in the range `[0,1]` that represents the percentage that `x` has\n   * moved between `min` and `max`, but smoothed or slowed down the closer `x` is to\n   * the `min` and `max`.\n   *\n   * See [Smoothstep]{@link http://en.wikipedia.org/wiki/Smoothstep} for more details.\n   *\n   * @static\n   * @method\n   * @param {number} x - The value to evaluate based on its position between min and max.\n   * @param {number} min - The min value. Any x value below min will be `0`.\n   * @param {number} max - The max value. Any x value above max will be `1`.\n   * @return {number} The alternated value.\n   */\n  smoothstep: smoothstep,\n  /**\n   * A [variation on smoothstep]{@link https://en.wikipedia.org/wiki/Smoothstep#Variations}\n   * that has zero 1st and 2nd order derivatives at x=0 and x=1.\n   *\n   * @static\n   * @method\n   * @param {number} x - The value to evaluate based on its position between min and max.\n   * @param {number} min - The min value. Any x value below min will be `0`.\n   * @param {number} max - The max value. Any x value above max will be `1`.\n   * @return {number} The alternated value.\n   */\n  smootherstep: smootherstep,\n  /**\n   * Returns a random integer from `<low, high>` interval.\n   *\n   * @static\n   * @method\n   * @param {number} low - The lower value boundary.\n   * @param {number} high - The upper value boundary\n   * @return {number} A random integer.\n   */\n  randInt: randInt,\n  /**\n   * Returns a random float from `<low, high>` interval.\n   *\n   * @static\n   * @method\n   * @param {number} low - The lower value boundary.\n   * @param {number} high - The upper value boundary\n   * @return {number} A random float.\n   */\n  randFloat: randFloat,\n  /**\n   * Returns a random integer from `<-range/2, range/2>` interval.\n   *\n   * @static\n   * @method\n   * @param {number} range - Defines the value range.\n   * @return {number} A random float.\n   */\n  randFloatSpread: randFloatSpread,\n  /**\n   * Returns a deterministic pseudo-random float in the interval `[0, 1]`.\n   *\n   * @static\n   * @method\n   * @param {number} [s] - The integer seed.\n   * @return {number} A random float.\n   */\n  seededRandom: seededRandom,\n  /**\n   * Converts degrees to radians.\n   *\n   * @static\n   * @method\n   * @param {number} degrees - A value in degrees.\n   * @return {number} The converted value in radians.\n   */\n  degToRad: degToRad,\n  /**\n   * Converts radians to degrees.\n   *\n   * @static\n   * @method\n   * @param {number} radians - A value in radians.\n   * @return {number} The converted value in degrees.\n   */\n  radToDeg: radToDeg,\n  /**\n   * Returns `true` if the given number is a power of two.\n   *\n   * @static\n   * @method\n   * @param {number} value - The value to check.\n   * @return {boolean} Whether the given number is a power of two or not.\n   */\n  isPowerOfTwo: isPowerOfTwo,\n  /**\n   * Returns the smallest power of two that is greater than or equal to the given number.\n   *\n   * @static\n   * @method\n   * @param {number} value - The value to find a POT for.\n   * @return {number} The smallest power of two that is greater than or equal to the given number.\n   */\n  ceilPowerOfTwo: ceilPowerOfTwo,\n  /**\n   * Returns the largest power of two that is less than or equal to the given number.\n   *\n   * @static\n   * @method\n   * @param {number} value - The value to find a POT for.\n   * @return {number} The largest power of two that is less than or equal to the given number.\n   */\n  floorPowerOfTwo: floorPowerOfTwo,\n  /**\n   * Sets the given quaternion from the [Intrinsic Proper Euler Angles]{@link https://en.wikipedia.org/wiki/Euler_angles}\n   * defined by the given angles and order.\n   *\n   * Rotations are applied to the axes in the order specified by order:\n   * rotation by angle `a` is applied first, then by angle `b`, then by angle `c`.\n   *\n   * @static\n   * @method\n   * @param {Quaternion} q - The quaternion to set.\n   * @param {number} a - The rotation applied to the first axis, in radians.\n   * @param {number} b - The rotation applied to the second axis, in radians.\n   * @param {number} c - The rotation applied to the third axis, in radians.\n   * @param {('XYX'|'XZX'|'YXY'|'YZY'|'ZXZ'|'ZYZ')} order - A string specifying the axes order.\n   */\n  setQuaternionFromProperEuler: setQuaternionFromProperEuler,\n  /**\n   * Normalizes the given value according to the given typed array.\n   *\n   * @static\n   * @method\n   * @param {number} value - The float value in the range `[0,1]` to normalize.\n   * @param {TypedArray} array - The typed array that defines the data type of the value.\n   * @return {number} The normalize value.\n   */\n  normalize: normalize,\n  /**\n   * Denormalizes the given value according to the given typed array.\n   *\n   * @static\n   * @method\n   * @param {number} value - The value to denormalize.\n   * @param {TypedArray} array - The typed array that defines the data type of the value.\n   * @return {number} The denormalize (float) value in the range `[0,1]`.\n   */\n  denormalize: denormalize\n};\nexport { DEG2RAD, RAD2DEG, generateUUID, clamp, euclideanModulo, mapLinear, inverseLerp, lerp, damp, pingpong, smoothstep, smootherstep, randInt, randFloat, randFloatSpread, seededRandom, degToRad, radToDeg, isPowerOfTwo, ceilPowerOfTwo, floorPowerOfTwo, setQuaternionFromProperEuler, normalize, denormalize, MathUtils };", "/* @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { BackSide, DoubleSide, Box3, Mesh, MeshBasicMaterial, MeshDepthMaterial, Object3D, OrthographicCamera, PlaneGeometry, RGBAFormat, ShaderMaterial, Vector3, WebGLRenderTarget } from 'three';\nimport { HorizontalBlurShader } from 'three/examples/jsm/shaders/HorizontalBlurShader.js';\nimport { VerticalBlurShader } from 'three/examples/jsm/shaders/VerticalBlurShader.js';\nimport { lerp } from 'three/src/math/MathUtils.js';\n// The softness [0, 1] of the shadow is mapped to a resolution between\n// 2^LOG_MAX_RESOLUTION and 2^LOG_MIN_RESOLUTION.\nconst LOG_MAX_RESOLUTION = 9;\nconst LOG_MIN_RESOLUTION = 6;\n// Animated models are not in general contained in their bounding box, as this\n// is calculated only for their resting pose. We create a cubic shadow volume\n// for animated models sized to their largest bounding box dimension multiplied\n// by this scale factor.\nconst ANIMATION_SCALING = 2;\n// Since hard shadows are not lightened by blurring and depth, set a lower\n// default intensity to make them more perceptually similar to the intensity of\n// the soft shadows.\nconst DEFAULT_HARD_INTENSITY = 0.3;\n/**\n * The Shadow class creates a shadow that fits a given scene and follows a\n * target. This shadow will follow the scene without any updates needed so long\n * as the shadow and scene are both parented to the same object (call it the\n * scene) and this scene is passed as the target parameter to the shadow's\n * constructor. We also must constrain the scene to motion within the horizontal\n * plane and call the setRotation() method whenever the scene's Y-axis rotation\n * changes. For motion outside of the horizontal plane, this.needsUpdate must be\n * set to true.\n *\n * The softness of the shadow is controlled by changing its resolution, making\n * softer shadows faster, but less precise.\n */\nexport class Shadow extends Object3D {\n  constructor(scene, softness, side) {\n    super();\n    this.camera = new OrthographicCamera();\n    // private cameraHelper = new CameraHelper(this.camera);\n    this.renderTarget = null;\n    this.renderTargetBlur = null;\n    this.depthMaterial = new MeshDepthMaterial();\n    this.horizontalBlurMaterial = new ShaderMaterial(HorizontalBlurShader);\n    this.verticalBlurMaterial = new ShaderMaterial(VerticalBlurShader);\n    this.intensity = 0;\n    this.softness = 1;\n    this.boundingBox = new Box3();\n    this.size = new Vector3();\n    this.maxDimension = 0;\n    this.isAnimated = false;\n    this.needsUpdate = false;\n    const {\n      camera\n    } = this;\n    camera.rotation.x = Math.PI / 2;\n    camera.left = -0.5;\n    camera.right = 0.5;\n    camera.bottom = -0.5;\n    camera.top = 0.5;\n    this.add(camera);\n    // this.add(this.cameraHelper);\n    // this.cameraHelper.updateMatrixWorld = function() {\n    //   this.matrixWorld = this.camera.matrixWorld;\n    // };\n    const plane = new PlaneGeometry();\n    const shadowMaterial = new MeshBasicMaterial({\n      // color: new Color(1, 0, 0),\n      opacity: 1,\n      transparent: true,\n      side: BackSide\n    });\n    this.floor = new Mesh(plane, shadowMaterial);\n    this.floor.userData.noHit = true;\n    camera.add(this.floor);\n    // the plane onto which to blur the texture\n    this.blurPlane = new Mesh(plane);\n    this.blurPlane.visible = false;\n    camera.add(this.blurPlane);\n    scene.target.add(this);\n    // like MeshDepthMaterial, but goes from black to transparent\n    this.depthMaterial.onBeforeCompile = function (shader) {\n      shader.fragmentShader = shader.fragmentShader.replace('gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );', 'gl_FragColor = vec4( vec3( 0.0 ), ( 1.0 - fragCoordZ ) * opacity );');\n    };\n    // Render both sides, back sides face the light source and\n    // front sides supply depth information for soft shadows\n    this.depthMaterial.side = DoubleSide;\n    this.horizontalBlurMaterial.depthTest = false;\n    this.verticalBlurMaterial.depthTest = false;\n    this.setScene(scene, softness, side);\n  }\n  /**\n   * Update the shadow's size and position for a new scene. Softness is also\n   * needed, as this controls the shadow's resolution.\n   */\n  setScene(scene, softness, side) {\n    const {\n      boundingBox,\n      size,\n      rotation,\n      position\n    } = this;\n    this.isAnimated = scene.animationNames.length > 0;\n    this.boundingBox.copy(scene.boundingBox);\n    this.size.copy(scene.size);\n    this.maxDimension = Math.max(size.x, size.y, size.z) * (this.isAnimated ? ANIMATION_SCALING : 1);\n    this.boundingBox.getCenter(position);\n    if (side === 'back') {\n      const {\n        min,\n        max\n      } = boundingBox;\n      [min.y, min.z] = [min.z, min.y];\n      [max.y, max.z] = [max.z, max.y];\n      [size.y, size.z] = [size.z, size.y];\n      rotation.x = Math.PI / 2;\n      rotation.y = Math.PI;\n    } else {\n      rotation.x = 0;\n      rotation.y = 0;\n    }\n    if (this.isAnimated) {\n      const minY = boundingBox.min.y;\n      const maxY = boundingBox.max.y;\n      size.y = this.maxDimension;\n      boundingBox.expandByVector(size.subScalar(this.maxDimension).multiplyScalar(-0.5));\n      boundingBox.min.y = minY;\n      boundingBox.max.y = maxY;\n      size.set(this.maxDimension, maxY - minY, this.maxDimension);\n    }\n    if (side === 'bottom') {\n      position.y = boundingBox.min.y;\n    } else {\n      position.z = boundingBox.min.y;\n    }\n    this.setSoftness(softness);\n  }\n  /**\n   * Update the shadow's resolution based on softness (between 0 and 1). Should\n   * not be called frequently, as this results in reallocation.\n   */\n  setSoftness(softness) {\n    this.softness = softness;\n    const {\n      size,\n      camera\n    } = this;\n    const scaleY = this.isAnimated ? ANIMATION_SCALING : 1;\n    const resolution = scaleY * Math.pow(2, LOG_MAX_RESOLUTION - softness * (LOG_MAX_RESOLUTION - LOG_MIN_RESOLUTION));\n    this.setMapSize(resolution);\n    const softFar = size.y / 2;\n    const hardFar = size.y * scaleY;\n    camera.near = 0;\n    camera.far = lerp(hardFar, softFar, softness);\n    // we have co-opted opacity to scale the depth to clip\n    this.depthMaterial.opacity = 1.0 / softness;\n    camera.updateProjectionMatrix();\n    // this.cameraHelper.update();\n    this.setIntensity(this.intensity);\n    this.setOffset(0);\n  }\n  /**\n   * Lower-level version of the above function.\n   */\n  setMapSize(maxMapSize) {\n    const {\n      size\n    } = this;\n    if (this.isAnimated) {\n      maxMapSize *= ANIMATION_SCALING;\n    }\n    const baseWidth = Math.floor(size.x > size.z ? maxMapSize : maxMapSize * size.x / size.z);\n    const baseHeight = Math.floor(size.x > size.z ? maxMapSize * size.z / size.x : maxMapSize);\n    // width of blur filter in pixels (not adjustable)\n    const TAP_WIDTH = 10;\n    const width = TAP_WIDTH + baseWidth;\n    const height = TAP_WIDTH + baseHeight;\n    if (this.renderTarget != null && (this.renderTarget.width !== width || this.renderTarget.height !== height)) {\n      this.renderTarget.dispose();\n      this.renderTarget = null;\n      this.renderTargetBlur.dispose();\n      this.renderTargetBlur = null;\n    }\n    if (this.renderTarget == null) {\n      const params = {\n        format: RGBAFormat\n      };\n      this.renderTarget = new WebGLRenderTarget(width, height, params);\n      this.renderTargetBlur = new WebGLRenderTarget(width, height, params);\n      this.floor.material.map = this.renderTarget.texture;\n    }\n    // These pads account for the softening radius around the shadow.\n    this.camera.scale.set(size.x * (1 + TAP_WIDTH / baseWidth), size.z * (1 + TAP_WIDTH / baseHeight), 1);\n    this.needsUpdate = true;\n  }\n  /**\n   * Set the shadow's intensity (0 to 1), which is just its opacity. Turns off\n   * shadow rendering if zero.\n   */\n  setIntensity(intensity) {\n    this.intensity = intensity;\n    if (intensity > 0) {\n      this.visible = true;\n      this.floor.visible = true;\n      this.floor.material.opacity = intensity * lerp(DEFAULT_HARD_INTENSITY, 1, this.softness * this.softness);\n    } else {\n      this.visible = false;\n      this.floor.visible = false;\n    }\n  }\n  getIntensity() {\n    return this.intensity;\n  }\n  /**\n   * An offset can be specified to move the\n   * shadow vertically relative to the bottom of the scene. Positive is up, so\n   * values are generally negative. A small offset keeps our shadow from\n   * z-fighting with any baked-in shadow plane.\n   */\n  setOffset(offset) {\n    this.floor.position.z = -offset + this.gap();\n  }\n  gap() {\n    return 0.001 * this.maxDimension;\n  }\n  render(renderer, scene) {\n    // this.cameraHelper.visible = false;\n    // force the depthMaterial to everything\n    scene.overrideMaterial = this.depthMaterial;\n    // set renderer clear alpha\n    const initialClearAlpha = renderer.getClearAlpha();\n    renderer.setClearAlpha(0);\n    this.floor.visible = false;\n    // disable XR for offscreen rendering\n    const xrEnabled = renderer.xr.enabled;\n    renderer.xr.enabled = false;\n    // render to the render target to get the depths\n    const oldRenderTarget = renderer.getRenderTarget();\n    renderer.setRenderTarget(this.renderTarget);\n    renderer.render(scene, this.camera);\n    // and reset the override material\n    scene.overrideMaterial = null;\n    this.floor.visible = true;\n    this.blurShadow(renderer);\n    // reset and render the normal scene\n    renderer.xr.enabled = xrEnabled;\n    renderer.setRenderTarget(oldRenderTarget);\n    renderer.setClearAlpha(initialClearAlpha);\n    // this.cameraHelper.visible = true;\n  }\n  blurShadow(renderer) {\n    const {\n      camera,\n      horizontalBlurMaterial,\n      verticalBlurMaterial,\n      renderTarget,\n      renderTargetBlur,\n      blurPlane\n    } = this;\n    blurPlane.visible = true;\n    // blur horizontally and draw in the renderTargetBlur\n    blurPlane.material = horizontalBlurMaterial;\n    horizontalBlurMaterial.uniforms.h.value = 1 / this.renderTarget.width;\n    horizontalBlurMaterial.uniforms.tDiffuse.value = this.renderTarget.texture;\n    renderer.setRenderTarget(renderTargetBlur);\n    renderer.render(blurPlane, camera);\n    // blur vertically and draw in the main renderTarget\n    blurPlane.material = verticalBlurMaterial;\n    verticalBlurMaterial.uniforms.v.value = 1 / this.renderTarget.height;\n    verticalBlurMaterial.uniforms.tDiffuse.value = this.renderTargetBlur.texture;\n    renderer.setRenderTarget(renderTarget);\n    renderer.render(blurPlane, camera);\n    blurPlane.visible = false;\n  }\n  dispose() {\n    if (this.renderTarget != null) {\n      this.renderTarget.dispose();\n    }\n    if (this.renderTargetBlur != null) {\n      this.renderTargetBlur.dispose();\n    }\n    this.depthMaterial.dispose();\n    this.horizontalBlurMaterial.dispose();\n    this.verticalBlurMaterial.dispose();\n    this.floor.material.dispose();\n    this.floor.geometry.dispose();\n    this.blurPlane.geometry.dispose();\n    this.removeFromParent();\n  }\n}\n", "/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { AnimationMixer, Box3, Euler, LoopOnce, LoopPingPong, LoopRepeat, Matrix3, NeutralToneMapping, Object3D, PerspectiveCamera, Raycaster, Scene, Sphere, Triangle, Vector2, Vector3 } from 'three';\nimport { CSS2DRenderer } from 'three/examples/jsm/renderers/CSS2DRenderer.js';\nimport { reduceVertices } from 'three/examples/jsm/utils/SceneUtils.js';\nimport { $currentGLTF, $model, $originalGltfJson } from '../features/scene-graph.js';\nimport { $nodeFromIndex, $nodeFromPoint } from '../features/scene-graph/model.js';\nimport { $renderer, $scene } from '../model-viewer-base.js';\nimport { normalizeUnit } from '../styles/conversions.js';\nimport { parseExpressions } from '../styles/parsers.js';\nimport { Damper, SETTLING_TIME } from './Damper.js';\nimport { GroundedSkybox } from './GroundedSkybox.js';\nimport { Hotspot } from './Hotspot.js';\nimport { Shadow } from './Shadow.js';\nexport const GROUNDED_SKYBOX_SIZE = 10;\nconst MIN_SHADOW_RATIO = 100;\nexport const IlluminationRole = {\n  Primary: 'primary',\n  Secondary: 'secondary'\n};\nconst view = new Vector3();\nconst target = new Vector3();\nconst normalWorld = new Vector3();\nconst raycaster = new Raycaster();\nconst vector3 = new Vector3();\nconst ndc = new Vector2();\n/**\n * A THREE.Scene object that takes a Model and CanvasHTMLElement and\n * constructs a framed scene based off of the canvas dimensions.\n * Provides lights and cameras to be used in a renderer.\n */\nexport class ModelScene extends Scene {\n  constructor({\n    canvas,\n    element,\n    width,\n    height\n  }) {\n    super();\n    this.annotationRenderer = new CSS2DRenderer();\n    this.effectRenderer = null;\n    this.schemaElement = document.createElement('script');\n    this.width = 1;\n    this.height = 1;\n    this.aspect = 1;\n    this.scaleStep = 0;\n    this.renderCount = 0;\n    this.externalRenderer = null;\n    this.appendedAnimations = [];\n    this.markedAnimations = [];\n    // These default camera values are never used, as they are reset once the\n    // model is loaded and framing is computed.\n    this.camera = new PerspectiveCamera(45, 1, 0.1, 100);\n    this.xrCamera = null;\n    this.url = null;\n    this.pivot = new Object3D();\n    this.target = new Object3D();\n    this.animationNames = [];\n    this.boundingBox = new Box3();\n    this.boundingSphere = new Sphere();\n    this.size = new Vector3();\n    this.idealAspect = 0;\n    this.framedFoVDeg = 0;\n    this.shadow = null;\n    this.shadowIntensity = 0;\n    this.shadowSoftness = 1;\n    this.bakedShadows = new Set();\n    this.exposure = 1;\n    this.toneMapping = NeutralToneMapping;\n    this.canScale = true;\n    this.isDirty = false;\n    this.goalTarget = new Vector3();\n    this.targetDamperX = new Damper();\n    this.targetDamperY = new Damper();\n    this.targetDamperZ = new Damper();\n    this._currentGLTF = null;\n    this._model = null;\n    this.cancelPendingSourceChange = null;\n    this.animationsByName = new Map();\n    this.currentAnimationAction = null;\n    this.groundedSkybox = new GroundedSkybox();\n    this.name = 'ModelScene';\n    this.element = element;\n    this.canvas = canvas;\n    // These default camera values are never used, as they are reset once the\n    // model is loaded and framing is computed.\n    this.camera = new PerspectiveCamera(45, 1, 0.1, 100);\n    this.camera.name = 'MainCamera';\n    this.add(this.pivot);\n    this.pivot.name = 'Pivot';\n    this.pivot.add(this.target);\n    this.setSize(width, height);\n    this.target.name = 'Target';\n    this.mixer = new AnimationMixer(this.target);\n    const {\n      domElement\n    } = this.annotationRenderer;\n    const {\n      style\n    } = domElement;\n    style.display = 'none';\n    style.pointerEvents = 'none';\n    style.position = 'absolute';\n    style.top = '0';\n    this.element.shadowRoot.querySelector('.default').appendChild(domElement);\n    this.schemaElement.setAttribute('type', 'application/ld+json');\n  }\n  /**\n   * Function to create the context lazily, as when there is only one\n   * <model-viewer> element, the renderer's 3D context can be displayed\n   * directly. This extra context is necessary to copy the renderings into when\n   * there are more than one.\n   */\n  get context() {\n    return this.canvas.getContext('2d');\n  }\n  getCamera() {\n    return this.xrCamera != null ? this.xrCamera : this.camera;\n  }\n  queueRender() {\n    this.isDirty = true;\n  }\n  shouldRender() {\n    return this.isDirty;\n  }\n  hasRendered() {\n    this.isDirty = false;\n  }\n  forceRescale() {\n    this.scaleStep = -1;\n    this.queueRender();\n  }\n  /**\n   * Pass in a THREE.Object3D to be controlled\n   * by this model.\n   */\n  async setObject(model) {\n    this.reset();\n    this._model = model;\n    this.target.add(model);\n    await this.setupScene();\n  }\n  /**\n   * Sets the model via URL.\n   */\n  async setSource(url, progressCallback = () => {}) {\n    if (!url || url === this.url) {\n      progressCallback(1);\n      return;\n    }\n    this.reset();\n    this.url = url;\n    if (this.externalRenderer != null) {\n      const framingInfo = await this.externalRenderer.load(progressCallback);\n      this.boundingSphere.radius = framingInfo.framedRadius;\n      this.idealAspect = framingInfo.fieldOfViewAspect;\n      return;\n    }\n    // If we have pending work due to a previous source change in progress,\n    // cancel it so that we do not incur a race condition:\n    if (this.cancelPendingSourceChange != null) {\n      this.cancelPendingSourceChange();\n      this.cancelPendingSourceChange = null;\n    }\n    let gltf;\n    try {\n      gltf = await new Promise(async (resolve, reject) => {\n        this.cancelPendingSourceChange = () => reject();\n        try {\n          const result = await this.element[$renderer].loader.load(url, this.element, progressCallback);\n          resolve(result);\n        } catch (error) {\n          reject(error);\n        }\n      });\n    } catch (error) {\n      if (error == null) {\n        // Loading was cancelled, so silently return\n        return;\n      }\n      throw error;\n    }\n    this.cancelPendingSourceChange = null;\n    this.reset();\n    this.url = url;\n    this._currentGLTF = gltf;\n    if (gltf != null) {\n      this._model = gltf.scene;\n      this.target.add(gltf.scene);\n    }\n    const {\n      animations\n    } = gltf;\n    const animationsByName = new Map();\n    const animationNames = [];\n    for (const animation of animations) {\n      animationsByName.set(animation.name, animation);\n      animationNames.push(animation.name);\n    }\n    this.animations = animations;\n    this.animationsByName = animationsByName;\n    this.animationNames = animationNames;\n    await this.setupScene();\n  }\n  async setupScene() {\n    this.applyTransform();\n    this.updateBoundingBox();\n    await this.updateFraming();\n    this.updateShadow();\n    this.setShadowIntensity(this.shadowIntensity);\n    this.setGroundedSkybox();\n  }\n  reset() {\n    this.url = null;\n    this.renderCount = 0;\n    this.queueRender();\n    if (this.shadow != null) {\n      this.shadow.setIntensity(0);\n    }\n    this.bakedShadows.clear();\n    const {\n      _model\n    } = this;\n    if (_model != null) {\n      _model.removeFromParent();\n      this._model = null;\n    }\n    const gltf = this._currentGLTF;\n    if (gltf != null) {\n      gltf.dispose();\n      this._currentGLTF = null;\n    }\n    if (this.currentAnimationAction != null) {\n      this.currentAnimationAction.stop();\n      this.currentAnimationAction = null;\n    }\n    this.mixer.stopAllAction();\n    this.mixer.uncacheRoot(this);\n  }\n  dispose() {\n    this.reset();\n    if (this.shadow != null) {\n      this.shadow.dispose();\n      this.shadow = null;\n    }\n    this.element[$currentGLTF] = null;\n    this.element[$originalGltfJson] = null;\n    this.element[$model] = null;\n  }\n  get currentGLTF() {\n    return this._currentGLTF;\n  }\n  /**\n   * Updates the ModelScene for a new container size in CSS pixels.\n   */\n  setSize(width, height) {\n    if (this.width === width && this.height === height) {\n      return;\n    }\n    this.width = Math.max(width, 1);\n    this.height = Math.max(height, 1);\n    this.annotationRenderer.setSize(width, height);\n    this.aspect = this.width / this.height;\n    if (this.externalRenderer != null) {\n      const dpr = window.devicePixelRatio;\n      this.externalRenderer.resize(width * dpr, height * dpr);\n    }\n    this.queueRender();\n  }\n  markBakedShadow(mesh) {\n    mesh.userData.noHit = true;\n    this.bakedShadows.add(mesh);\n  }\n  unmarkBakedShadow(mesh) {\n    mesh.userData.noHit = false;\n    mesh.visible = true;\n    this.bakedShadows.delete(mesh);\n    this.boundingBox.expandByObject(mesh);\n  }\n  findBakedShadows(group) {\n    const boundingBox = new Box3();\n    group.traverse(object => {\n      const mesh = object;\n      if (!mesh.material) {\n        return;\n      }\n      const material = mesh.material;\n      if (!material.transparent) {\n        return;\n      }\n      boundingBox.setFromObject(mesh);\n      const size = boundingBox.getSize(vector3);\n      const minDim = Math.min(size.x, size.y, size.z);\n      const maxDim = Math.max(size.x, size.y, size.z);\n      if (maxDim < MIN_SHADOW_RATIO * minDim) {\n        return;\n      }\n      this.markBakedShadow(mesh);\n    });\n  }\n  checkBakedShadows() {\n    const {\n      min,\n      max\n    } = this.boundingBox;\n    const shadowBox = new Box3();\n    this.boundingBox.getSize(this.size);\n    for (const mesh of this.bakedShadows) {\n      shadowBox.setFromObject(mesh);\n      if (shadowBox.min.y < min.y + this.size.y / MIN_SHADOW_RATIO && shadowBox.min.x <= min.x && shadowBox.max.x >= max.x && shadowBox.min.z <= min.z && shadowBox.max.z >= max.z) {\n        // floor shadow\n        continue;\n      }\n      if (shadowBox.min.z < min.z + this.size.z / MIN_SHADOW_RATIO && shadowBox.min.x <= min.x && shadowBox.max.x >= max.x && shadowBox.min.y <= min.y && shadowBox.max.y >= max.y) {\n        // wall shadow\n        continue;\n      }\n      this.unmarkBakedShadow(mesh);\n    }\n  }\n  applyTransform() {\n    const {\n      model\n    } = this;\n    if (model == null) {\n      return;\n    }\n    const orientation = parseExpressions(this.element.orientation)[0].terms;\n    const roll = normalizeUnit(orientation[0]).number;\n    const pitch = normalizeUnit(orientation[1]).number;\n    const yaw = normalizeUnit(orientation[2]).number;\n    model.quaternion.setFromEuler(new Euler(pitch, yaw, roll, 'YXZ'));\n    const scale = parseExpressions(this.element.scale)[0].terms;\n    model.scale.set(scale[0].number, scale[1].number, scale[2].number);\n  }\n  updateBoundingBox() {\n    const {\n      model\n    } = this;\n    if (model == null) {\n      return;\n    }\n    this.target.remove(model);\n    this.findBakedShadows(model);\n    const bound = (box, vertex) => {\n      return box.expandByPoint(vertex);\n    };\n    this.setBakedShadowVisibility(false);\n    this.boundingBox = reduceVertices(model, bound, new Box3());\n    // If there's nothing but the baked shadow, then it's not a baked shadow.\n    if (this.boundingBox.isEmpty()) {\n      this.setBakedShadowVisibility(true);\n      this.bakedShadows.forEach(mesh => this.unmarkBakedShadow(mesh));\n      this.boundingBox = reduceVertices(model, bound, new Box3());\n    }\n    this.checkBakedShadows();\n    this.setBakedShadowVisibility();\n    this.boundingBox.getSize(this.size);\n    this.target.add(model);\n  }\n  /**\n   * Calculates the boundingSphere and idealAspect that allows the 3D\n   * object to be framed tightly in a 2D window of any aspect ratio without\n   * clipping at any camera orbit. The camera's center target point can be\n   * optionally specified. If no center is specified, it defaults to the center\n   * of the bounding box, which means asymmetric models will tend to be tight on\n   * one side instead of both. Proper choice of center can correct this.\n   */\n  async updateFraming() {\n    const {\n      model\n    } = this;\n    if (model == null) {\n      return;\n    }\n    this.target.remove(model);\n    this.setBakedShadowVisibility(false);\n    const {\n      center\n    } = this.boundingSphere;\n    this.element.requestUpdate('cameraTarget');\n    await this.element.updateComplete;\n    center.copy(this.getTarget());\n    const radiusSquared = (value, vertex) => {\n      return Math.max(value, center.distanceToSquared(vertex));\n    };\n    this.boundingSphere.radius = Math.sqrt(reduceVertices(model, radiusSquared, 0));\n    const horizontalTanFov = (value, vertex) => {\n      vertex.sub(center);\n      const radiusXZ = Math.sqrt(vertex.x * vertex.x + vertex.z * vertex.z);\n      return Math.max(value, radiusXZ / (this.idealCameraDistance() - Math.abs(vertex.y)));\n    };\n    this.idealAspect = reduceVertices(model, horizontalTanFov, 0) / Math.tan(this.framedFoVDeg / 2 * Math.PI / 180);\n    this.setBakedShadowVisibility();\n    this.target.add(model);\n  }\n  setBakedShadowVisibility(visible = this.shadowIntensity <= 0) {\n    for (const shadow of this.bakedShadows) {\n      shadow.visible = visible;\n    }\n  }\n  idealCameraDistance() {\n    const halfFovRad = this.framedFoVDeg / 2 * Math.PI / 180;\n    return this.boundingSphere.radius / Math.sin(halfFovRad);\n  }\n  /**\n   * Set's the framedFieldOfView based on the aspect ratio of the window in\n   * order to keep the model fully visible at any camera orientation.\n   */\n  adjustedFoV(fovDeg) {\n    const vertical = Math.tan(fovDeg / 2 * Math.PI / 180) * Math.max(1, this.idealAspect / this.aspect);\n    return 2 * Math.atan(vertical) * 180 / Math.PI;\n  }\n  getNDC(clientX, clientY) {\n    if (this.xrCamera != null) {\n      ndc.set(clientX / window.screen.width, clientY / window.screen.height);\n    } else {\n      const rect = this.element.getBoundingClientRect();\n      ndc.set((clientX - rect.x) / this.width, (clientY - rect.y) / this.height);\n    }\n    ndc.multiplyScalar(2).subScalar(1);\n    ndc.y *= -1;\n    return ndc;\n  }\n  /**\n   * Returns the size of the corresponding canvas element.\n   */\n  getSize() {\n    return {\n      width: this.width,\n      height: this.height\n    };\n  }\n  setEnvironmentAndSkybox(environment, skybox) {\n    if (this.element[$renderer].arRenderer.presentedScene === this) {\n      return;\n    }\n    this.environment = environment;\n    this.setBackground(skybox);\n    this.queueRender();\n  }\n  setBackground(skybox) {\n    this.groundedSkybox.map = skybox;\n    if (this.groundedSkybox.isUsable()) {\n      this.target.add(this.groundedSkybox);\n      this.background = null;\n    } else {\n      this.target.remove(this.groundedSkybox);\n      this.background = skybox;\n    }\n  }\n  farRadius() {\n    return this.boundingSphere.radius * (this.groundedSkybox.parent != null ? GROUNDED_SKYBOX_SIZE : 1);\n  }\n  setGroundedSkybox() {\n    const heightNode = parseExpressions(this.element.skyboxHeight)[0].terms[0];\n    const height = normalizeUnit(heightNode).number;\n    const radius = GROUNDED_SKYBOX_SIZE * this.boundingSphere.radius;\n    this.groundedSkybox.updateGeometry(height, radius);\n    this.groundedSkybox.position.y = height - (this.shadow ? 2 * this.shadow.gap() : 0);\n    this.setBackground(this.groundedSkybox.map);\n  }\n  /**\n   * Sets the point in model coordinates the model should orbit/pivot around.\n   */\n  setTarget(modelX, modelY, modelZ) {\n    this.goalTarget.set(-modelX, -modelY, -modelZ);\n  }\n  /**\n   * Set the decay time of, affects the speed of target transitions.\n   */\n  setTargetDamperDecayTime(decayMilliseconds) {\n    this.targetDamperX.setDecayTime(decayMilliseconds);\n    this.targetDamperY.setDecayTime(decayMilliseconds);\n    this.targetDamperZ.setDecayTime(decayMilliseconds);\n  }\n  /**\n   * Gets the point in model coordinates the model should orbit/pivot around.\n   */\n  getTarget() {\n    return this.goalTarget.clone().multiplyScalar(-1);\n  }\n  /**\n   * Gets the current target point, which may not equal the goal returned by\n   * getTarget() due to finite input decay smoothing.\n   */\n  getDynamicTarget() {\n    return this.target.position.clone().multiplyScalar(-1);\n  }\n  /**\n   * Shifts the model to the target point immediately instead of easing in.\n   */\n  jumpToGoal() {\n    this.updateTarget(SETTLING_TIME);\n  }\n  /**\n   * This should be called every frame with the frame delta to cause the target\n   * to transition to its set point.\n   */\n  updateTarget(delta) {\n    const goal = this.goalTarget;\n    const target = this.target.position;\n    if (!goal.equals(target)) {\n      const normalization = this.boundingSphere.radius / 10;\n      let {\n        x,\n        y,\n        z\n      } = target;\n      x = this.targetDamperX.update(x, goal.x, delta, normalization);\n      y = this.targetDamperY.update(y, goal.y, delta, normalization);\n      z = this.targetDamperZ.update(z, goal.z, delta, normalization);\n      this.groundedSkybox.position.x = -x;\n      this.groundedSkybox.position.z = -z;\n      this.target.position.set(x, y, z);\n      this.target.updateMatrixWorld();\n      this.queueRender();\n      return true;\n    } else {\n      return false;\n    }\n  }\n  /**\n   * Yaw the +z (front) of the model toward the indicated world coordinates.\n   */\n  pointTowards(worldX, worldZ) {\n    const {\n      x,\n      z\n    } = this.position;\n    this.yaw = Math.atan2(worldX - x, worldZ - z);\n  }\n  get model() {\n    return this._model;\n  }\n  /**\n   * Yaw is the scene's orientation about the y-axis, around the rotation\n   * center.\n   */\n  set yaw(radiansY) {\n    this.pivot.rotation.y = radiansY;\n    this.groundedSkybox.rotation.y = -radiansY;\n    this.queueRender();\n  }\n  get yaw() {\n    return this.pivot.rotation.y;\n  }\n  set animationTime(value) {\n    this.mixer.setTime(value);\n    this.queueShadowRender();\n  }\n  get animationTime() {\n    if (this.currentAnimationAction != null) {\n      const loopCount = Math.max(this.currentAnimationAction._loopCount, 0);\n      if (this.currentAnimationAction.loop === LoopPingPong && (loopCount & 1) === 1) {\n        return this.duration - this.currentAnimationAction.time;\n      } else {\n        return this.currentAnimationAction.time;\n      }\n    }\n    return 0;\n  }\n  set animationTimeScale(value) {\n    this.mixer.timeScale = value;\n  }\n  get animationTimeScale() {\n    return this.mixer.timeScale;\n  }\n  get duration() {\n    if (this.currentAnimationAction != null && this.currentAnimationAction.getClip()) {\n      return this.currentAnimationAction.getClip().duration;\n    }\n    return 0;\n  }\n  get hasActiveAnimation() {\n    return this.currentAnimationAction != null;\n  }\n  /**\n   * Plays an animation if there are any associated with the current model.\n   * Accepts an optional string name of an animation to play. If no name is\n   * provided, or if no animation is found by the given name, always falls back\n   * to playing the first animation.\n   */\n  playAnimation(name = null, crossfadeTime = 0, loopMode = LoopRepeat, repetitionCount = Infinity) {\n    if (this._currentGLTF == null) {\n      return;\n    }\n    const {\n      animations\n    } = this;\n    if (animations == null || animations.length === 0) {\n      return;\n    }\n    let animationClip = null;\n    if (name != null) {\n      animationClip = this.animationsByName.get(name);\n      if (animationClip == null) {\n        const parsedAnimationIndex = parseInt(name);\n        if (!isNaN(parsedAnimationIndex) && parsedAnimationIndex >= 0 && parsedAnimationIndex < animations.length) {\n          animationClip = animations[parsedAnimationIndex];\n        }\n      }\n    }\n    if (animationClip == null) {\n      animationClip = animations[0];\n    }\n    try {\n      const {\n        currentAnimationAction: lastAnimationAction\n      } = this;\n      const action = this.mixer.clipAction(animationClip, this);\n      // Reset animationAction timeScale\n      if (action.timeScale != this.element.timeScale) {\n        action.timeScale = this.element.timeScale;\n      }\n      this.currentAnimationAction = action;\n      if (this.element.paused) {\n        this.mixer.stopAllAction();\n      } else {\n        action.paused = false;\n        if (lastAnimationAction != null && action !== lastAnimationAction) {\n          action.crossFadeFrom(lastAnimationAction, crossfadeTime, false);\n        } else if (this.animationTimeScale > 0 && this.animationTime == this.duration) {\n          // This is a workaround for what I believe is a three.js bug.\n          this.animationTime = 0;\n        }\n      }\n      action.setLoop(loopMode, repetitionCount);\n      action.enabled = true;\n      action.clampWhenFinished = true;\n      action.play();\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  appendAnimation(name = '', loopMode = LoopRepeat, repetitionCount = Infinity, weight = 1, timeScale = 1, fade = false, warp = false, relativeWarp = true, time = null, needsToStop = false) {\n    if (this._currentGLTF == null || name === this.element.animationName) {\n      return;\n    }\n    const {\n      animations\n    } = this;\n    if (animations == null || animations.length === 0) {\n      return;\n    }\n    let animationClip = null;\n    const defaultFade = 1.25;\n    if (name) {\n      animationClip = this.animationsByName.get(name);\n    }\n    if (animationClip == null) {\n      return;\n    }\n    // validate function parameters\n    if (typeof repetitionCount === 'string') {\n      if (!isNaN(repetitionCount)) {\n        repetitionCount = Math.max(parseInt(repetitionCount), 1);\n      } else {\n        repetitionCount = Infinity;\n        console.warn('Invalid repetitionCount value, repetitionCount is set to Infinity');\n      }\n    } else if (typeof repetitionCount === 'number' && repetitionCount < 1) {\n      repetitionCount = 1;\n    }\n    if (repetitionCount === 1 && loopMode !== LoopOnce) {\n      loopMode = LoopOnce;\n    }\n    if (typeof weight === 'string') {\n      if (!isNaN(weight)) {\n        weight = parseFloat(weight);\n      } else {\n        weight = 1;\n        console.warn('Invalid weight value, weight is set to 1');\n      }\n    }\n    if (typeof timeScale === 'string') {\n      if (!isNaN(timeScale)) {\n        timeScale = parseFloat(timeScale);\n      } else {\n        timeScale = 1;\n        console.warn('Invalid timeScale value, timeScale is set to 1');\n      }\n    }\n    if (typeof fade === 'string') {\n      // @ts-ignore: Unreachable code error\n      if (fade.toLowerCase().trim() === 'true') {\n        fade = true;\n        // @ts-ignore: Unreachable code error\n      } else if (fade.toLowerCase().trim() === 'false') {\n        fade = false;\n      } else if (!isNaN(fade)) {\n        fade = parseFloat(fade);\n      } else {\n        fade = false;\n        console.warn('Invalid fade value, fade is set to false');\n      }\n    }\n    if (typeof warp === 'string') {\n      // @ts-ignore: Unreachable code error\n      if (warp.toLowerCase().trim() === 'true') {\n        warp = true;\n        // @ts-ignore: Unreachable code error\n      } else if (warp.toLowerCase().trim() === 'false') {\n        warp = false;\n      } else if (!isNaN(warp)) {\n        warp = parseFloat(warp);\n      } else {\n        warp = false;\n        console.warn('Invalid warp value, warp is set to false');\n      }\n    }\n    if (typeof time === 'string') {\n      if (!isNaN(time)) {\n        time = parseFloat(time);\n      }\n    }\n    try {\n      const action = this.mixer.existingAction(animationClip) || this.mixer.clipAction(animationClip, this);\n      const currentTimeScale = action.timeScale;\n      if (needsToStop && this.appendedAnimations.includes(name)) {\n        if (!this.markedAnimations.map(e => e.name).includes(name)) {\n          this.markedAnimations.push({\n            name,\n            loopMode,\n            repetitionCount\n          });\n        }\n      }\n      if (typeof time === 'number') {\n        action.time = Math.min(Math.max(time, 0), animationClip.duration);\n      }\n      if (typeof fade === 'boolean' && fade) {\n        action.fadeIn(defaultFade);\n      } else if (typeof fade === 'number') {\n        action.fadeIn(Math.max(fade, 0));\n      } else {\n        if (weight >= 0) {\n          action.weight = Math.min(Math.max(weight, 0), 1);\n        }\n      }\n      if (typeof warp === 'boolean' && warp) {\n        action.warp(relativeWarp ? currentTimeScale : 0, timeScale, defaultFade);\n      } else if (typeof warp === 'number') {\n        action.warp(relativeWarp ? currentTimeScale : 0, timeScale, Math.max(warp, 0));\n      } else {\n        action.timeScale = timeScale;\n      }\n      if (!action.isRunning()) {\n        if (action.time == animationClip.duration) {\n          action.stop();\n        }\n        action.setLoop(loopMode, repetitionCount);\n        action.paused = false;\n        action.enabled = true;\n        action.clampWhenFinished = true;\n        action.play();\n      }\n      if (!this.appendedAnimations.includes(name)) {\n        this.element[$scene].appendedAnimations.push(name);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  detachAnimation(name = '', fade = true) {\n    if (this._currentGLTF == null || name === this.element.animationName) {\n      return;\n    }\n    const {\n      animations\n    } = this;\n    if (animations == null || animations.length === 0) {\n      return;\n    }\n    let animationClip = null;\n    const defaultFade = 1.5;\n    if (name) {\n      animationClip = this.animationsByName.get(name);\n    }\n    if (animationClip == null) {\n      return;\n    }\n    if (typeof fade === 'string') {\n      // @ts-ignore: Unreachable code error\n      if (fade.toLowerCase().trim() === 'true') {\n        fade = true;\n        // @ts-ignore: Unreachable code error\n      } else if (fade.toLowerCase().trim() === 'false') {\n        fade = false;\n      } else if (!isNaN(fade)) {\n        fade = parseFloat(fade);\n      } else {\n        fade = true;\n        console.warn('Invalid fade value, fade is set to true');\n      }\n    }\n    try {\n      const action = this.mixer.existingAction(animationClip) || this.mixer.clipAction(animationClip, this);\n      if (typeof fade === 'boolean' && fade) {\n        action.fadeOut(defaultFade);\n      } else if (typeof fade === 'number') {\n        action.fadeOut(Math.max(fade, 0));\n      } else {\n        action.stop();\n      }\n      const result = this.element[$scene].appendedAnimations.filter(i => i !== name);\n      this.element[$scene].appendedAnimations = result;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  updateAnimationLoop(name = '', loopMode = LoopRepeat, repetitionCount = Infinity) {\n    if (this._currentGLTF == null || name === this.element.animationName) {\n      return;\n    }\n    const {\n      animations\n    } = this;\n    if (animations == null || animations.length === 0) {\n      return;\n    }\n    let animationClip = null;\n    if (name) {\n      animationClip = this.animationsByName.get(name);\n    }\n    if (animationClip == null) {\n      return;\n    }\n    try {\n      const action = this.mixer.existingAction(animationClip) || this.mixer.clipAction(animationClip, this);\n      action.stop();\n      action.setLoop(loopMode, repetitionCount);\n      action.play();\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  stopAnimation() {\n    this.currentAnimationAction = null;\n    this.mixer.stopAllAction();\n  }\n  updateAnimation(step) {\n    this.mixer.update(step);\n    this.queueShadowRender();\n  }\n  subscribeMixerEvent(event, callback) {\n    this.mixer.addEventListener(event, callback);\n  }\n  /**\n   * Call if the object has been changed in such a way that the shadow's\n   * shape has changed (not a rotation about the Y axis).\n   */\n  updateShadow() {\n    const shadow = this.shadow;\n    if (shadow != null) {\n      const side = this.element.arPlacement === 'wall' ? 'back' : 'bottom';\n      shadow.setScene(this, this.shadowSoftness, side);\n      shadow.needsUpdate = true;\n    }\n  }\n  renderShadow(renderer) {\n    const shadow = this.shadow;\n    if (shadow != null && shadow.needsUpdate == true) {\n      shadow.render(renderer, this);\n      shadow.needsUpdate = false;\n    }\n  }\n  queueShadowRender() {\n    if (this.shadow != null) {\n      this.shadow.needsUpdate = true;\n    }\n  }\n  /**\n   * Sets the shadow's intensity, lazily creating the shadow as necessary.\n   */\n  setShadowIntensity(shadowIntensity) {\n    this.shadowIntensity = shadowIntensity;\n    if (this._currentGLTF == null) {\n      return;\n    }\n    this.setBakedShadowVisibility();\n    if (shadowIntensity <= 0 && this.shadow == null) {\n      return;\n    }\n    if (this.shadow == null) {\n      const side = this.element.arPlacement === 'wall' ? 'back' : 'bottom';\n      this.shadow = new Shadow(this, this.shadowSoftness, side);\n    }\n    this.shadow.setIntensity(shadowIntensity);\n  }\n  /**\n   * Sets the shadow's softness by mapping a [0, 1] softness parameter to\n   * the shadow's resolution. This involves reallocation, so it should not\n   * be changed frequently. Softer shadows are cheaper to render.\n   */\n  setShadowSoftness(softness) {\n    this.shadowSoftness = softness;\n    const shadow = this.shadow;\n    if (shadow != null) {\n      shadow.setSoftness(softness);\n    }\n  }\n  /**\n   * Shift the floor vertically from the bottom of the model's bounding box\n   * by offset (should generally be negative).\n   */\n  setShadowOffset(offset) {\n    const shadow = this.shadow;\n    if (shadow != null) {\n      shadow.setOffset(offset);\n    }\n  }\n  getHit(object = this) {\n    const hits = raycaster.intersectObject(object, true);\n    return hits.find(hit => hit.object.visible && !hit.object.userData.noHit);\n  }\n  hitFromController(controller, object = this) {\n    raycaster.setFromXRController(controller);\n    return this.getHit(object);\n  }\n  hitFromPoint(ndcPosition, object = this) {\n    raycaster.setFromCamera(ndcPosition, this.getCamera());\n    return this.getHit(object);\n  }\n  /**\n   * This method returns the world position, model-space normal and texture\n   * coordinate of the point on the mesh corresponding to the input pixel\n   * coordinates given relative to the model-viewer element. If the mesh\n   * is not hit, the result is null.\n   */\n  positionAndNormalFromPoint(ndcPosition, object = this) {\n    var _a;\n    const hit = this.hitFromPoint(ndcPosition, object);\n    if (hit == null) {\n      return null;\n    }\n    const position = hit.point;\n    const normal = hit.face != null ? hit.face.normal.clone().applyNormalMatrix(new Matrix3().getNormalMatrix(hit.object.matrixWorld)) : raycaster.ray.direction.clone().multiplyScalar(-1);\n    const uv = (_a = hit.uv) !== null && _a !== void 0 ? _a : null;\n    return {\n      position,\n      normal,\n      uv\n    };\n  }\n  /**\n   * This method returns a dynamic hotspot ID string of the point on the\n   * mesh corresponding to the input pixel coordinates given relative to the\n   * model-viewer element. The ID string can be used in the data-surface\n   * attribute of the hotspot to make it follow this point on the surface\n   * even as the model animates. If the mesh is not hit, the result is null.\n   */\n  surfaceFromPoint(ndcPosition, object = this) {\n    const model = this.element.model;\n    if (model == null) {\n      return null;\n    }\n    const hit = this.hitFromPoint(ndcPosition, object);\n    if (hit == null || hit.face == null) {\n      return null;\n    }\n    const node = model[$nodeFromPoint](hit);\n    const {\n      meshes,\n      primitives\n    } = node.mesh.userData.associations;\n    const va = new Vector3();\n    const vb = new Vector3();\n    const vc = new Vector3();\n    const {\n      a,\n      b,\n      c\n    } = hit.face;\n    const mesh = hit.object;\n    mesh.getVertexPosition(a, va);\n    mesh.getVertexPosition(b, vb);\n    mesh.getVertexPosition(c, vc);\n    const tri = new Triangle(va, vb, vc);\n    const uvw = new Vector3();\n    tri.getBarycoord(mesh.worldToLocal(hit.point), uvw);\n    return `${meshes} ${primitives} ${a} ${b} ${c} ${uvw.x.toFixed(3)} ${uvw.y.toFixed(3)} ${uvw.z.toFixed(3)}`;\n  }\n  /**\n   * The following methods are for operating on the set of Hotspot objects\n   * attached to the scene. These come from DOM elements, provided to slots\n   * by the Annotation Mixin.\n   */\n  addHotspot(hotspot) {\n    this.target.add(hotspot);\n    // This happens automatically in render(), but we do it early so that\n    // the slots appear in the shadow DOM and the elements get attached,\n    // allowing us to dispatch events on them.\n    this.annotationRenderer.domElement.appendChild(hotspot.element);\n    this.updateSurfaceHotspot(hotspot);\n  }\n  removeHotspot(hotspot) {\n    this.target.remove(hotspot);\n  }\n  /**\n   * Helper method to apply a function to all hotspots.\n   */\n  forHotspots(func) {\n    const {\n      children\n    } = this.target;\n    for (let i = 0, l = children.length; i < l; i++) {\n      const hotspot = children[i];\n      if (hotspot instanceof Hotspot) {\n        func(hotspot);\n      }\n    }\n  }\n  /**\n   * Lazy initializer for surface hotspots - will only run once.\n   */\n  updateSurfaceHotspot(hotspot) {\n    if (hotspot.surface == null || this.element.model == null) {\n      return;\n    }\n    const nodes = parseExpressions(hotspot.surface)[0].terms;\n    if (nodes.length != 8) {\n      console.warn(hotspot.surface + ' does not have exactly 8 numbers.');\n      return;\n    }\n    const primitiveNode = this.element.model[$nodeFromIndex](nodes[0].number, nodes[1].number);\n    if (primitiveNode == null) {\n      console.warn(hotspot.surface + ' does not match a node/primitive in this glTF! Skipping this hotspot.');\n      return;\n    }\n    const numVert = primitiveNode.mesh.geometry.attributes.position.count;\n    const tri = new Vector3(nodes[2].number, nodes[3].number, nodes[4].number);\n    if (tri.x >= numVert || tri.y >= numVert || tri.z >= numVert) {\n      console.warn(hotspot.surface + ' vertex indices out of range in this glTF! Skipping this hotspot.');\n      return;\n    }\n    const bary = new Vector3(nodes[5].number, nodes[6].number, nodes[7].number);\n    hotspot.mesh = primitiveNode.mesh;\n    hotspot.tri = tri;\n    hotspot.bary = bary;\n    hotspot.updateSurface();\n  }\n  /**\n   * Update positions of surface hotspots to follow model animation.\n   */\n  animateSurfaceHotspots() {\n    if (this.element.paused) {\n      return;\n    }\n    this.forHotspots(hotspot => {\n      hotspot.updateSurface();\n    });\n  }\n  /**\n   * Update the CSS visibility of the hotspots based on whether their\n   * normals point toward the camera.\n   */\n  updateHotspotsVisibility(viewerPosition) {\n    this.forHotspots(hotspot => {\n      view.copy(viewerPosition);\n      target.setFromMatrixPosition(hotspot.matrixWorld);\n      view.sub(target);\n      normalWorld.copy(hotspot.normal).transformDirection(this.target.matrixWorld);\n      if (view.dot(normalWorld) < 0) {\n        hotspot.hide();\n      } else {\n        hotspot.show();\n      }\n    });\n  }\n  /**\n   * Rotate all hotspots to an absolute orientation given by the input\n   * number of radians. Zero returns them to upright.\n   */\n  orientHotspots(radians) {\n    this.forHotspots(hotspot => {\n      hotspot.orient(radians);\n    });\n  }\n  /**\n   * Set the rendering visibility of all hotspots. This is used to hide them\n   * during transitions and such.\n   */\n  setHotspotsVisibility(visible) {\n    this.forHotspots(hotspot => {\n      hotspot.visible = visible;\n    });\n  }\n  updateSchema(src) {\n    var _a;\n    const {\n      schemaElement,\n      element\n    } = this;\n    const {\n      alt,\n      poster,\n      iosSrc\n    } = element;\n    if (src != null) {\n      const encoding = [{\n        '@type': 'MediaObject',\n        contentUrl: src,\n        encodingFormat: ((_a = src.split('.').pop()) === null || _a === void 0 ? void 0 : _a.toLowerCase()) === 'gltf' ? 'model/gltf+json' : 'model/gltf-binary'\n      }];\n      if (iosSrc) {\n        encoding.push({\n          '@type': 'MediaObject',\n          contentUrl: iosSrc,\n          encodingFormat: 'model/vnd.usdz+zip'\n        });\n      }\n      const structuredData = {\n        '@context': 'http://schema.org/',\n        '@type': '3DModel',\n        image: poster !== null && poster !== void 0 ? poster : undefined,\n        name: alt !== null && alt !== void 0 ? alt : undefined,\n        encoding\n      };\n      schemaElement.textContent = JSON.stringify(structuredData);\n      document.head.appendChild(schemaElement);\n    } else if (schemaElement.parentElement != null) {\n      schemaElement.parentElement.removeChild(schemaElement);\n    }\n  }\n}\n", "/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { clamp } from '../utilities.js';\n/**\n * ProgressTracker is an event emitter that helps to track the ongoing progress\n * of many simultaneous actions.\n *\n * ProgressTracker reports progress activity in the form of a progress event.\n * The event.detail.totalProgress value indicates the elapsed progress of all\n * activities being tracked by the ProgressTracker.\n *\n * The value of totalProgress is a number that progresses from 0 to 1. The\n * ProgressTracker allows for the lazy accumulation of tracked actions, so the\n * total progress represents an abstract, non-absolute progress towards the\n * completion of all currently tracked events.\n *\n * When all currently tracked activities are finished, the ProgressTracker\n * emits one final progress event and then resets the list of its currently\n * tracked activities. This means that from an observer's perspective,\n * ongoing activities will accumulate and collectively contribute to the notion\n * of total progress until all currently tracked ongoing activities have\n * completed.\n */\nexport class ProgressTracker extends EventTarget {\n  constructor() {\n    super(...arguments);\n    this.ongoingActivities = new Set();\n    this.totalProgress = 0;\n  }\n  /**\n   * The total number of activities currently being tracked.\n   */\n  get ongoingActivityCount() {\n    return this.ongoingActivities.size;\n  }\n  /**\n   * Registers a new activity to be tracked by the progress tracker. The method\n   * returns a special callback that should be invoked whenever new progress is\n   * ready to be reported. The progress should be reported as a value between 0\n   * and 1, where 0 would represent the beginning of the action and 1 would\n   * represent its completion.\n   *\n   * There is no built-in notion of a time-out for ongoing activities, so once\n   * an ongoing activity is begun, it is up to the consumer of this API to\n   * update the progress until that activity is no longer ongoing.\n   *\n   * Progress is only allowed to move forward for any given activity. If a lower\n   * progress is reported than the previously reported progress, it will be\n   * ignored.\n   */\n  beginActivity(reason) {\n    const activity = {\n      progress: 0,\n      completed: false\n    };\n    this.ongoingActivities.add(activity);\n    if (this.ongoingActivityCount === 1) {\n      // Announce the first progress event (which should always be 0 / 1\n      // total progress):\n      this.announceTotalProgress(activity, 0, reason);\n    }\n    return progress => {\n      let nextProgress;\n      nextProgress = Math.max(clamp(progress, 0, 1), activity.progress);\n      if (nextProgress !== activity.progress) {\n        this.announceTotalProgress(activity, nextProgress, reason);\n      }\n      return activity.progress;\n    };\n  }\n  announceTotalProgress(updatedActivity, nextProgress, reason) {\n    let progressLeft = 0;\n    let completedActivities = 0;\n    if (nextProgress == 1.0) updatedActivity.completed = true;\n    for (const activity of this.ongoingActivities) {\n      const {\n        progress\n      } = activity;\n      progressLeft += 1.0 - progress;\n      if (activity.completed) {\n        completedActivities++;\n      }\n    }\n    const lastProgress = updatedActivity.progress;\n    updatedActivity.progress = nextProgress;\n    // Advance the total progress by the fraction of total remaining progress\n    // due to this activity.\n    this.totalProgress += (nextProgress - lastProgress) * (1.0 - this.totalProgress) / progressLeft;\n    const totalProgress = completedActivities === this.ongoingActivityCount ? 1.0 : this.totalProgress;\n    this.dispatchEvent(new CustomEvent('progress', {\n      detail: {\n        totalProgress,\n        reason\n      }\n    }));\n    if (completedActivities === this.ongoingActivityCount) {\n      this.totalProgress = 0.0;\n      this.ongoingActivities.clear();\n    }\n  }\n}\n", "/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\nimport { ReactiveElement } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { HAS_INTERSECTION_OBSERVER, HAS_RESIZE_OBSERVER } from './constants.js';\nimport { $updateEnvironment } from './features/environment.js';\nimport { makeTemplate } from './template.js';\nimport { $evictionPolicy, CachingGLTFLoader } from './three-components/CachingGLTFLoader.js';\nimport { ModelScene } from './three-components/ModelScene.js';\nimport { Renderer } from './three-components/Renderer.js';\nimport { clamp, debounce } from './utilities.js';\nimport { ProgressTracker } from './utilities/progress-tracker.js';\nconst CLEAR_MODEL_TIMEOUT_MS = 10;\nconst FALLBACK_SIZE_UPDATE_THRESHOLD_MS = 50;\nconst ANNOUNCE_MODEL_VISIBILITY_DEBOUNCE_THRESHOLD = 0;\nconst UNSIZED_MEDIA_WIDTH = 300;\nconst UNSIZED_MEDIA_HEIGHT = 150;\nexport const blobCanvas = document.createElement('canvas');\nconst $fallbackResizeHandler = Symbol('fallbackResizeHandler');\nconst $defaultAriaLabel = Symbol('defaultAriaLabel');\nconst $resizeObserver = Symbol('resizeObserver');\nconst $clearModelTimeout = Symbol('clearModelTimeout');\nconst $onContextLost = Symbol('onContextLost');\nconst $loaded = Symbol('loaded');\nconst $status = Symbol('status');\nconst $onFocus = Symbol('onFocus');\nconst $onBlur = Symbol('onBlur');\nexport const $updateSize = Symbol('updateSize');\nexport const $intersectionObserver = Symbol('intersectionObserver');\nexport const $isElementInViewport = Symbol('isElementInViewport');\nexport const $announceModelVisibility = Symbol('announceModelVisibility');\nexport const $ariaLabel = Symbol('ariaLabel');\nexport const $altDefaulted = Symbol('altDefaulted');\nexport const $statusElement = Symbol('statusElement');\nexport const $updateStatus = Symbol('updateStatus');\nexport const $loadedTime = Symbol('loadedTime');\nexport const $updateSource = Symbol('updateSource');\nexport const $markLoaded = Symbol('markLoaded');\nexport const $container = Symbol('container');\nexport const $userInputElement = Symbol('input');\nexport const $canvas = Symbol('canvas');\nexport const $scene = Symbol('scene');\nexport const $needsRender = Symbol('needsRender');\nexport const $tick = Symbol('tick');\nexport const $onModelLoad = Symbol('onModelLoad');\nexport const $onResize = Symbol('onResize');\nexport const $renderer = Symbol('renderer');\nexport const $progressTracker = Symbol('progressTracker');\nexport const $getLoaded = Symbol('getLoaded');\nexport const $getModelIsVisible = Symbol('getModelIsVisible');\nexport const $shouldAttemptPreload = Symbol('shouldAttemptPreload');\nexport const toVector3D = v => {\n  return {\n    x: v.x,\n    y: v.y,\n    z: v.z,\n    toString() {\n      return `${this.x}m ${this.y}m ${this.z}m`;\n    }\n  };\n};\nexport const toVector2D = v => {\n  return {\n    u: v.x,\n    v: v.y,\n    toString() {\n      return `${this.u} ${this.v}`;\n    }\n  };\n};\n/**\n * Definition for a basic <model-viewer> element.\n */\nexport default class ModelViewerElementBase extends ReactiveElement {\n  static get is() {\n    return 'model-viewer';\n  }\n  /** @export */\n  static set modelCacheSize(value) {\n    CachingGLTFLoader[$evictionPolicy].evictionThreshold = value;\n  }\n  /** @export */\n  static get modelCacheSize() {\n    return CachingGLTFLoader[$evictionPolicy].evictionThreshold;\n  }\n  /** @export */\n  static set minimumRenderScale(value) {\n    if (value > 1) {\n      console.warn('<model-viewer> minimumRenderScale has been clamped to a maximum value of 1.');\n    }\n    if (value <= 0) {\n      console.warn('<model-viewer> minimumRenderScale has been clamped to a minimum value of 0.25.');\n    }\n    Renderer.singleton.minScale = value;\n  }\n  /** @export */\n  static get minimumRenderScale() {\n    return Renderer.singleton.minScale;\n  }\n  /** @export */\n  get loaded() {\n    return this[$getLoaded]();\n  }\n  get [(_a = $isElementInViewport, _b = $loaded, _c = $loadedTime, _d = $status, _e = $clearModelTimeout, _f = $fallbackResizeHandler, _g = $announceModelVisibility, _h = $resizeObserver, _j = $intersectionObserver, _k = $progressTracker, $renderer)]() {\n    return Renderer.singleton;\n  }\n  /** @export */\n  get modelIsVisible() {\n    return this[$getModelIsVisible]();\n  }\n  /**\n   * Creates a new ModelViewerElement.\n   */\n  constructor() {\n    super();\n    this.alt = null;\n    this.src = null;\n    this.withCredentials = false;\n    /**\n     * Generates a 3D model schema https://schema.org/3DModel associated with\n     * the loaded src and inserts it into the header of the page for search\n     * engines to crawl.\n     */\n    this.generateSchema = false;\n    this[_a] = false;\n    this[_b] = false;\n    this[_c] = 0;\n    this[_d] = '';\n    this[_e] = null;\n    this[_f] = debounce(() => {\n      const boundingRect = this.getBoundingClientRect();\n      this[$updateSize](boundingRect);\n    }, FALLBACK_SIZE_UPDATE_THRESHOLD_MS);\n    this[_g] = debounce(oldVisibility => {\n      const newVisibility = this.modelIsVisible;\n      if (newVisibility !== oldVisibility) {\n        this.dispatchEvent(new CustomEvent('model-visibility', {\n          detail: {\n            visible: newVisibility\n          }\n        }));\n      }\n    }, ANNOUNCE_MODEL_VISIBILITY_DEBOUNCE_THRESHOLD);\n    this[_h] = null;\n    this[_j] = null;\n    this[_k] = new ProgressTracker();\n    this[_l] = () => {\n      this[$statusElement].textContent = this[$status];\n    };\n    this[_m] = () => {\n      this[$statusElement].textContent = '';\n    };\n    this[_o] = event => {\n      this.dispatchEvent(new CustomEvent('error', {\n        detail: {\n          type: 'webglcontextlost',\n          sourceError: event.sourceEvent\n        }\n      }));\n    };\n    this.attachShadow({\n      mode: 'open'\n    });\n    const shadowRoot = this.shadowRoot;\n    makeTemplate(shadowRoot);\n    this[$container] = shadowRoot.querySelector('.container');\n    this[$userInputElement] = shadowRoot.querySelector('.userInput');\n    this[$canvas] = shadowRoot.querySelector('canvas');\n    this[$statusElement] = shadowRoot.querySelector('#status');\n    this[$defaultAriaLabel] = this[$userInputElement].getAttribute('aria-label');\n    // Because of potential race conditions related to invoking the constructor\n    // we only use the bounding rect to set the initial size if the element is\n    // already connected to the document:\n    let width, height;\n    if (this.isConnected) {\n      const rect = this.getBoundingClientRect();\n      width = rect.width;\n      height = rect.height;\n    } else {\n      width = UNSIZED_MEDIA_WIDTH;\n      height = UNSIZED_MEDIA_HEIGHT;\n    }\n    // Create the underlying ModelScene.\n    this[$scene] = new ModelScene({\n      canvas: this[$canvas],\n      element: this,\n      width,\n      height\n    });\n    // Update initial size on microtask timing so that subclasses have a\n    // chance to initialize\n    Promise.resolve().then(() => {\n      this[$updateSize](this.getBoundingClientRect());\n    });\n    if (HAS_RESIZE_OBSERVER) {\n      // Set up a resize observer so we can scale our canvas\n      // if our <model-viewer> changes\n      this[$resizeObserver] = new ResizeObserver(entries => {\n        // Don't resize anything if in AR mode; otherwise the canvas\n        // scaling to fullscreen on entering AR will clobber the flat/2d\n        // dimensions of the element.\n        if (this[$renderer].isPresenting) {\n          return;\n        }\n        for (let entry of entries) {\n          if (entry.target === this) {\n            this[$updateSize](entry.contentRect);\n          }\n        }\n      });\n    }\n    if (HAS_INTERSECTION_OBSERVER) {\n      this[$intersectionObserver] = new IntersectionObserver(entries => {\n        for (let entry of entries) {\n          if (entry.target === this) {\n            const oldVisibility = this.modelIsVisible;\n            this[$isElementInViewport] = entry.isIntersecting;\n            this[$announceModelVisibility](oldVisibility);\n            if (this[$isElementInViewport] && !this.loaded) {\n              this[$updateSource]();\n            }\n          }\n        }\n      }, {\n        root: null,\n        // We used to have margin here, but it was causing animated models below\n        // the fold to steal the frame budget. Weirder still, it would also\n        // cause input events to be swallowed, sometimes for seconds on the\n        // model above the fold, but only when the animated model was completely\n        // below. Setting this margin to zero fixed it.\n        rootMargin: '0px',\n        // With zero threshold, an element adjacent to but not intersecting the\n        // viewport will be reported as intersecting, which will cause\n        // unnecessary rendering. Any slight positive threshold alleviates this.\n        threshold: 0.00001\n      });\n    } else {\n      // If there is no intersection observer, then all models should be visible\n      // at all times:\n      this[$isElementInViewport] = true;\n    }\n  }\n  connectedCallback() {\n    super.connectedCallback && super.connectedCallback();\n    if (HAS_RESIZE_OBSERVER) {\n      this[$resizeObserver].observe(this);\n    } else {\n      self.addEventListener('resize', this[$fallbackResizeHandler]);\n    }\n    if (HAS_INTERSECTION_OBSERVER) {\n      this[$intersectionObserver].observe(this);\n    }\n    this.addEventListener('focus', this[$onFocus]);\n    this.addEventListener('blur', this[$onBlur]);\n    const renderer = this[$renderer];\n    renderer.addEventListener('contextlost', this[$onContextLost]);\n    renderer.registerScene(this[$scene]);\n    if (this[$clearModelTimeout] != null) {\n      self.clearTimeout(this[$clearModelTimeout]);\n      this[$clearModelTimeout] = null;\n      // Force an update in case the model has been evicted from our GLTF cache\n      // @see https://lit-element.polymer-project.org/guide/lifecycle#requestupdate\n      this.requestUpdate('src', null);\n    }\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback && super.disconnectedCallback();\n    if (HAS_RESIZE_OBSERVER) {\n      this[$resizeObserver].unobserve(this);\n    } else {\n      self.removeEventListener('resize', this[$fallbackResizeHandler]);\n    }\n    if (HAS_INTERSECTION_OBSERVER) {\n      this[$intersectionObserver].unobserve(this);\n    }\n    this.removeEventListener('focus', this[$onFocus]);\n    this.removeEventListener('blur', this[$onBlur]);\n    const renderer = this[$renderer];\n    renderer.removeEventListener('contextlost', this[$onContextLost]);\n    renderer.unregisterScene(this[$scene]);\n    this[$clearModelTimeout] = self.setTimeout(() => {\n      this[$scene].dispose();\n      this[$clearModelTimeout] = null;\n    }, CLEAR_MODEL_TIMEOUT_MS);\n  }\n  updated(changedProperties) {\n    super.updated(changedProperties);\n    // NOTE(cdata): If a property changes from values A -> B -> A in the space\n    // of a microtask, LitElement/UpdatingElement will notify of a change even\n    // though the value has effectively not changed, so we need to check to make\n    // sure that the value has actually changed before changing the loaded flag.\n    if (changedProperties.has('src')) {\n      if (this.src == null) {\n        this[$loaded] = false;\n        this[$loadedTime] = 0;\n        this[$scene].reset();\n      } else if (this.src !== this[$scene].url) {\n        this[$loaded] = false;\n        this[$loadedTime] = 0;\n        this[$updateSource]();\n      }\n    }\n    if (changedProperties.has('alt')) {\n      this[$userInputElement].setAttribute('aria-label', this[$ariaLabel]);\n    }\n    if (changedProperties.has('generateSchema')) {\n      if (this.generateSchema) {\n        this[$scene].updateSchema(this.src);\n      } else {\n        this[$scene].updateSchema(null);\n      }\n    }\n  }\n  /** @export */\n  toDataURL(type, encoderOptions) {\n    return this[$renderer].displayCanvas(this[$scene]).toDataURL(type, encoderOptions);\n  }\n  /** @export */\n  async toBlob(options) {\n    const mimeType = options ? options.mimeType : undefined;\n    const qualityArgument = options ? options.qualityArgument : undefined;\n    const useIdealAspect = options ? options.idealAspect : undefined;\n    const {\n      width,\n      height,\n      idealAspect,\n      aspect\n    } = this[$scene];\n    const {\n      dpr,\n      scaleFactor\n    } = this[$renderer];\n    let outputWidth = width * scaleFactor * dpr;\n    let outputHeight = height * scaleFactor * dpr;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (useIdealAspect === true) {\n      if (idealAspect > aspect) {\n        const oldHeight = outputHeight;\n        outputHeight = Math.round(outputWidth / idealAspect);\n        offsetY = (oldHeight - outputHeight) / 2;\n      } else {\n        const oldWidth = outputWidth;\n        outputWidth = Math.round(outputHeight * idealAspect);\n        offsetX = (oldWidth - outputWidth) / 2;\n      }\n    }\n    blobCanvas.width = outputWidth;\n    blobCanvas.height = outputHeight;\n    try {\n      return new Promise(async (resolve, reject) => {\n        blobCanvas.getContext('2d').drawImage(this[$renderer].displayCanvas(this[$scene]), offsetX, offsetY, outputWidth, outputHeight, 0, 0, outputWidth, outputHeight);\n        blobCanvas.toBlob(blob => {\n          if (!blob) {\n            return reject(new Error('Unable to retrieve canvas blob'));\n          }\n          resolve(blob);\n        }, mimeType, qualityArgument);\n      });\n    } finally {\n      this[$updateSize]({\n        width,\n        height\n      });\n    }\n    ;\n  }\n  /**\n   * Registers a new EffectComposer as the main rendering pipeline,\n   * instead of the default ThreeJs renderer.\n   * This method also calls setRenderer, setMainScene, and setMainCamera on\n   * your effectComposer.\n   * @param effectComposer An EffectComposer from `pmndrs/postprocessing`\n   */\n  registerEffectComposer(effectComposer) {\n    effectComposer.setRenderer(this[$renderer].threeRenderer);\n    effectComposer.setMainCamera(this[$scene].getCamera());\n    effectComposer.setMainScene(this[$scene]);\n    this[$scene].effectRenderer = effectComposer;\n  }\n  /**\n   * Removes the registered EffectComposer\n   */\n  unregisterEffectComposer() {\n    this[$scene].effectRenderer = null;\n  }\n  registerRenderer(renderer) {\n    this[$scene].externalRenderer = renderer;\n  }\n  unregisterRenderer() {\n    this[$scene].externalRenderer = null;\n  }\n  get [$ariaLabel]() {\n    return this[$altDefaulted];\n  }\n  get [$altDefaulted]() {\n    return this.alt == null || this.alt === 'null' ? this[$defaultAriaLabel] : this.alt;\n  }\n  // NOTE(cdata): Although this may seem extremely redundant, it is required in\n  // order to support overloading when TypeScript is compiled to ES5\n  // @see https://github.com/Polymer/lit-element/pull/745\n  // @see https://github.com/microsoft/TypeScript/issues/338\n  [$getLoaded]() {\n    return this[$loaded];\n  }\n  // @see [$getLoaded]\n  [$getModelIsVisible]() {\n    return this.loaded && this[$isElementInViewport];\n  }\n  [$shouldAttemptPreload]() {\n    return !!this.src && this[$isElementInViewport];\n  }\n  /**\n   * Called on initialization and when the resize observer fires.\n   */\n  [$updateSize]({\n    width,\n    height\n  }) {\n    if (width === 0 || height === 0) {\n      return;\n    }\n    this[$container].style.width = `${width}px`;\n    this[$container].style.height = `${height}px`;\n    this[$onResize]({\n      width,\n      height\n    });\n  }\n  [$tick](time, delta) {\n    var _p;\n    (_p = this[$scene].effectRenderer) === null || _p === void 0 ? void 0 : _p.beforeRender(time, delta);\n  }\n  [$markLoaded]() {\n    if (this[$loaded]) {\n      return;\n    }\n    this[$loaded] = true;\n    this[$loadedTime] = performance.now();\n  }\n  [$needsRender]() {\n    this[$scene].queueRender();\n  }\n  [$onModelLoad]() {}\n  [$updateStatus](status) {\n    this[$status] = status;\n    const rootNode = this.getRootNode();\n    // Only change the aria-label if <model-viewer> is currently focused:\n    if (rootNode != null && rootNode.activeElement === this && this[$statusElement].textContent != status) {\n      this[$statusElement].textContent = status;\n    }\n  }\n  [(_l = $onFocus, _m = $onBlur, $onResize)](e) {\n    this[$scene].setSize(e.width, e.height);\n  }\n  /**\n   * Parses the element for an appropriate source URL and\n   * sets the views to use the new model based.\n   */\n  async [(_o = $onContextLost, $updateSource)]() {\n    const scene = this[$scene];\n    if (this.loaded || !this[$shouldAttemptPreload]() || this.src === scene.url) {\n      return;\n    }\n    if (this.generateSchema) {\n      scene.updateSchema(this.src);\n    }\n    this[$updateStatus]('Loading');\n    // If we are loading a new model, we need to stop the animation of\n    // the current one (if any is playing). Otherwise, we might lose\n    // the reference to the scene root and running actions start to\n    // throw exceptions and/or behave in unexpected ways:\n    scene.stopAnimation();\n    const updateSourceProgress = this[$progressTracker].beginActivity('model-load');\n    const source = this.src;\n    try {\n      const srcUpdated = scene.setSource(source, progress => updateSourceProgress(clamp(progress, 0, 1) * 0.95));\n      const envUpdated = this[$updateEnvironment]();\n      await Promise.all([srcUpdated, envUpdated]);\n      this[$markLoaded]();\n      this[$onModelLoad]();\n      this.updateComplete.then(() => {\n        this.dispatchEvent(new CustomEvent('before-render'));\n      });\n      // Wait for shaders to compile and pixels to be drawn.\n      await new Promise(resolve => {\n        requestAnimationFrame(() => {\n          requestAnimationFrame(() => {\n            this.dispatchEvent(new CustomEvent('load', {\n              detail: {\n                url: source\n              }\n            }));\n            resolve();\n          });\n        });\n      });\n    } catch (error) {\n      this.dispatchEvent(new CustomEvent('error', {\n        detail: {\n          type: 'loadfailure',\n          sourceError: error\n        }\n      }));\n    } finally {\n      updateSourceProgress(1.0);\n    }\n  }\n}\n__decorate([property({\n  type: String\n})], ModelViewerElementBase.prototype, \"alt\", void 0);\n__decorate([property({\n  type: String\n})], ModelViewerElementBase.prototype, \"src\", void 0);\n__decorate([property({\n  type: Boolean,\n  attribute: 'with-credentials'\n})], ModelViewerElementBase.prototype, \"withCredentials\", void 0);\n__decorate([property({\n  type: Boolean,\n  attribute: 'generate-schema'\n})], ModelViewerElementBase.prototype, \"generateSchema\", void 0);\n", "/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { property } from 'lit/decorators.js';\nimport { LoopOnce, LoopPingPong, LoopRepeat } from 'three';\nimport { $getModelIsVisible, $needsRender, $onModelLoad, $renderer, $scene, $tick } from '../model-viewer-base.js';\nconst MILLISECONDS_PER_SECOND = 1000.0;\nconst $changeAnimation = Symbol('changeAnimation');\nconst $appendAnimation = Symbol('appendAnimation');\nconst $detachAnimation = Symbol('detachAnimation');\nconst $paused = Symbol('paused');\nconst DEFAULT_PLAY_OPTIONS = {\n  repetitions: Infinity,\n  pingpong: false\n};\nconst DEFAULT_APPEND_OPTIONS = {\n  pingpong: false,\n  repetitions: null,\n  weight: 1,\n  timeScale: 1,\n  fade: false,\n  warp: false,\n  relativeWarp: true,\n  time: null\n};\nconst DEFAULT_DETACH_OPTIONS = {\n  fade: true\n};\nexport const AnimationMixin = ModelViewerElement => {\n  var _a;\n  class AnimationModelViewerElement extends ModelViewerElement {\n    constructor(...args) {\n      super(args);\n      this.autoplay = false;\n      this.animationName = undefined;\n      this.animationCrossfadeDuration = 300;\n      this[_a] = true;\n      this[$scene].subscribeMixerEvent('loop', e => {\n        const count = e.action._loopCount;\n        const name = e.action._clip.name;\n        const uuid = e.action._clip.uuid;\n        const targetAnimation = this[$scene].markedAnimations.find(e => e.name === name);\n        if (targetAnimation) {\n          this[$scene].updateAnimationLoop(targetAnimation.name, targetAnimation.loopMode, targetAnimation.repetitionCount);\n          const filtredArr = this[$scene].markedAnimations.filter(e => e.name !== name);\n          this[$scene].markedAnimations = filtredArr;\n        }\n        this.dispatchEvent(new CustomEvent('loop', {\n          detail: {\n            count,\n            name,\n            uuid\n          }\n        }));\n      });\n      this[$scene].subscribeMixerEvent('finished', e => {\n        if (!this[$scene].appendedAnimations.includes(e.action._clip.name)) {\n          this[$paused] = true;\n        } else {\n          const filterdList = this[$scene].appendedAnimations.filter(i => i !== e.action._clip.name);\n          this[$scene].appendedAnimations = filterdList;\n        }\n        this.dispatchEvent(new CustomEvent('finished'));\n      });\n    }\n    /**\n     * Returns an array\n     */\n    get availableAnimations() {\n      if (this.loaded) {\n        return this[$scene].animationNames;\n      }\n      return [];\n    }\n    get duration() {\n      return this[$scene].duration;\n    }\n    get paused() {\n      return this[$paused];\n    }\n    get currentTime() {\n      return this[$scene].animationTime;\n    }\n    get appendedAnimations() {\n      return this[$scene].appendedAnimations;\n    }\n    set currentTime(value) {\n      this[$scene].animationTime = value;\n      this[$needsRender]();\n    }\n    get timeScale() {\n      return this[$scene].animationTimeScale;\n    }\n    set timeScale(value) {\n      this[$scene].animationTimeScale = value;\n    }\n    pause() {\n      if (this[$paused]) {\n        return;\n      }\n      this[$paused] = true;\n      this.dispatchEvent(new CustomEvent('pause'));\n    }\n    play(options) {\n      if (this.availableAnimations.length > 0) {\n        this[$paused] = false;\n        this[$changeAnimation](options);\n        this.dispatchEvent(new CustomEvent('play'));\n      }\n    }\n    appendAnimation(animationName, options) {\n      if (this.availableAnimations.length > 0) {\n        this[$paused] = false;\n        this[$appendAnimation](animationName, options);\n        this.dispatchEvent(new CustomEvent('append-animation'));\n      }\n    }\n    detachAnimation(animationName, options) {\n      if (this.availableAnimations.length > 0) {\n        this[$paused] = false;\n        this[$detachAnimation](animationName, options);\n        this.dispatchEvent(new CustomEvent('detach-animation'));\n      }\n    }\n    [(_a = $paused, $onModelLoad)]() {\n      super[$onModelLoad]();\n      this[$paused] = true;\n      if (this.animationName != null) {\n        this[$changeAnimation]();\n      }\n      if (this.autoplay) {\n        this.play();\n      }\n    }\n    [$tick](_time, delta) {\n      super[$tick](_time, delta);\n      if (this[$paused] || !this[$getModelIsVisible]() && !this[$renderer].isPresenting) {\n        return;\n      }\n      this[$scene].updateAnimation(delta / MILLISECONDS_PER_SECOND);\n      this[$needsRender]();\n    }\n    updated(changedProperties) {\n      super.updated(changedProperties);\n      if (changedProperties.has('autoplay') && this.autoplay) {\n        this.play();\n      }\n      if (changedProperties.has('animationName')) {\n        this[$changeAnimation]();\n      }\n    }\n    [$changeAnimation](options = DEFAULT_PLAY_OPTIONS) {\n      var _b;\n      const repetitions = (_b = options.repetitions) !== null && _b !== void 0 ? _b : Infinity;\n      const mode = options.pingpong ? LoopPingPong : repetitions === 1 ? LoopOnce : LoopRepeat;\n      this[$scene].playAnimation(this.animationName, this.animationCrossfadeDuration / MILLISECONDS_PER_SECOND, mode, repetitions);\n      // If we are currently paused, we need to force a render so that\n      // the scene updates to the first frame of the new animation\n      if (this[$paused]) {\n        this[$scene].updateAnimation(0);\n        this[$needsRender]();\n      }\n    }\n    [$appendAnimation](animationName = '', options = DEFAULT_APPEND_OPTIONS) {\n      var _b;\n      const repetitions = (_b = options.repetitions) !== null && _b !== void 0 ? _b : Infinity;\n      const mode = options.pingpong ? LoopPingPong : repetitions === 1 ? LoopOnce : LoopRepeat;\n      const needsToStop = !!options.repetitions || 'pingpong' in options;\n      this[$scene].appendAnimation(animationName ? animationName : this.animationName, mode, repetitions, options.weight, options.timeScale, options.fade, options.warp, options.relativeWarp, options.time, needsToStop);\n      // If we are currently paused, we need to force a render so that\n      // the scene updates to the first frame of the new animation\n      if (this[$paused]) {\n        this[$scene].updateAnimation(0);\n        this[$needsRender]();\n      }\n    }\n    [$detachAnimation](animationName = '', options = DEFAULT_DETACH_OPTIONS) {\n      this[$scene].detachAnimation(animationName ? animationName : this.animationName, options.fade);\n      // If we are currently paused, we need to force a render so that\n      // the scene updates to the first frame of the new animation\n      if (this[$paused]) {\n        this[$scene].updateAnimation(0);\n        this[$needsRender]();\n      }\n    }\n  }\n  __decorate([property({\n    type: Boolean\n  })], AnimationModelViewerElement.prototype, \"autoplay\", void 0);\n  __decorate([property({\n    type: String,\n    attribute: 'animation-name'\n  })], AnimationModelViewerElement.prototype, \"animationName\", void 0);\n  __decorate([property({\n    type: Number,\n    attribute: 'animation-crossfade-duration'\n  })], AnimationModelViewerElement.prototype, \"animationCrossfadeDuration\", void 0);\n  return AnimationModelViewerElement;\n};\n", "/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Matrix4, Vector3 } from 'three';\nimport { $needsRender, $onModelLoad, $scene, $tick, toVector2D, toVector3D } from '../model-viewer-base.js';\nimport { Hotspot } from '../three-components/Hotspot.js';\nconst $hotspotMap = Symbol('hotspotMap');\nconst $mutationCallback = Symbol('mutationCallback');\nconst $observer = Symbol('observer');\nconst $addHotspot = Symbol('addHotspot');\nconst $removeHotspot = Symbol('removeHotspot');\nconst worldToModel = new Matrix4();\n/**\n * AnnotationMixin implements a declarative API to add hotspots and annotations.\n * Child elements of the <model-viewer> element that have a slot name that\n * begins with \"hotspot\" and data-position and data-normal attributes in\n * the format of the camera-target attribute will be added to the scene and\n * track the specified model coordinates.\n */\nexport const AnnotationMixin = ModelViewerElement => {\n  var _a, _b, _c;\n  class AnnotationModelViewerElement extends ModelViewerElement {\n    constructor() {\n      super(...arguments);\n      this[_a] = new Map();\n      this[_b] = mutations => {\n        mutations.forEach(mutation => {\n          // NOTE: Be wary that in ShadyDOM cases, the MutationRecord\n          // only has addedNodes and removedNodes (and no other details).\n          if (!(mutation instanceof MutationRecord) || mutation.type === 'childList') {\n            mutation.addedNodes.forEach(node => {\n              this[$addHotspot](node);\n            });\n            mutation.removedNodes.forEach(node => {\n              this[$removeHotspot](node);\n            });\n            this[$needsRender]();\n          }\n        });\n      };\n      this[_c] = new MutationObserver(this[$mutationCallback]);\n    }\n    connectedCallback() {\n      super.connectedCallback();\n      for (let i = 0; i < this.children.length; ++i) {\n        this[$addHotspot](this.children[i]);\n      }\n      const {\n        ShadyDOM\n      } = self;\n      if (ShadyDOM == null) {\n        this[$observer].observe(this, {\n          childList: true\n        });\n      } else {\n        this[$observer] = ShadyDOM.observeChildren(this, this[$mutationCallback]);\n      }\n    }\n    disconnectedCallback() {\n      super.disconnectedCallback();\n      const {\n        ShadyDOM\n      } = self;\n      if (ShadyDOM == null) {\n        this[$observer].disconnect();\n      } else {\n        ShadyDOM.unobserveChildren(this[$observer]);\n      }\n    }\n    [(_a = $hotspotMap, _b = $mutationCallback, _c = $observer, $onModelLoad)]() {\n      super[$onModelLoad]();\n      const scene = this[$scene];\n      scene.forHotspots(hotspot => {\n        scene.updateSurfaceHotspot(hotspot);\n      });\n    }\n    [$tick](time, delta) {\n      super[$tick](time, delta);\n      const scene = this[$scene];\n      const {\n        annotationRenderer\n      } = scene;\n      const camera = scene.getCamera();\n      if (scene.shouldRender()) {\n        scene.animateSurfaceHotspots();\n        scene.updateHotspotsVisibility(camera.position);\n        annotationRenderer.domElement.style.display = '';\n        annotationRenderer.render(scene, camera);\n      }\n    }\n    /**\n     * Since the data-position and data-normal attributes are not observed, use\n     * this method to move a hotspot. Keep in mind that all hotspots with the\n     * same slot name use a single location and the first definition takes\n     * precedence, until updated with this method.\n     */\n    updateHotspot(config) {\n      const hotspot = this[$hotspotMap].get(config.name);\n      if (hotspot == null) {\n        return;\n      }\n      hotspot.updatePosition(config.position);\n      hotspot.updateNormal(config.normal);\n      hotspot.surface = config.surface;\n      this[$scene].updateSurfaceHotspot(hotspot);\n      this[$needsRender]();\n    }\n    /**\n     * This method returns in-scene data about a requested hotspot including\n     * its position in screen (canvas) space and its current visibility.\n     */\n    queryHotspot(name) {\n      const hotspot = this[$hotspotMap].get(name);\n      if (hotspot == null) {\n        return null;\n      }\n      const position = toVector3D(hotspot.position);\n      const normal = toVector3D(hotspot.normal);\n      const facingCamera = hotspot.facingCamera;\n      const scene = this[$scene];\n      const camera = scene.getCamera();\n      const vector = new Vector3();\n      vector.setFromMatrixPosition(hotspot.matrixWorld);\n      vector.project(camera);\n      const widthHalf = scene.width / 2;\n      const heightHalf = scene.height / 2;\n      vector.x = vector.x * widthHalf + widthHalf;\n      vector.y = -(vector.y * heightHalf) + heightHalf;\n      const canvasPosition = toVector3D(new Vector3(vector.x, vector.y, vector.z));\n      if (!Number.isFinite(canvasPosition.x) || !Number.isFinite(canvasPosition.y)) {\n        return null;\n      }\n      return {\n        position,\n        normal,\n        canvasPosition,\n        facingCamera\n      };\n    }\n    /**\n     * This method returns the model position, normal and texture coordinate\n     * of the point on the mesh corresponding to the input pixel coordinates\n     * given relative to the model-viewer element. The position and normal\n     * are returned as strings in the format suitable for putting in a\n     * hotspot's data-position and data-normal attributes. If the mesh is\n     * not hit, the result is null.\n     */\n    positionAndNormalFromPoint(pixelX, pixelY) {\n      const scene = this[$scene];\n      const ndcPosition = scene.getNDC(pixelX, pixelY);\n      const hit = scene.positionAndNormalFromPoint(ndcPosition);\n      if (hit == null) {\n        return null;\n      }\n      worldToModel.copy(scene.target.matrixWorld).invert();\n      const position = toVector3D(hit.position.applyMatrix4(worldToModel));\n      const normal = toVector3D(hit.normal.transformDirection(worldToModel));\n      let uv = null;\n      if (hit.uv != null) {\n        uv = toVector2D(hit.uv);\n      }\n      return {\n        position: position,\n        normal: normal,\n        uv: uv\n      };\n    }\n    /**\n     * This method returns a dynamic hotspot ID string of the point on the mesh\n     * corresponding to the input pixel coordinates given relative to the\n     * model-viewer element. The ID string can be used in the data-surface\n     * attribute of the hotspot to make it follow this point on the surface even\n     * as the model animates. If the mesh is not hit, the result is null.\n     */\n    surfaceFromPoint(pixelX, pixelY) {\n      const scene = this[$scene];\n      const ndcPosition = scene.getNDC(pixelX, pixelY);\n      return scene.surfaceFromPoint(ndcPosition);\n    }\n    [$addHotspot](node) {\n      if (!(node instanceof HTMLElement && node.slot.indexOf('hotspot') === 0)) {\n        return;\n      }\n      let hotspot = this[$hotspotMap].get(node.slot);\n      if (hotspot != null) {\n        hotspot.increment();\n      } else {\n        hotspot = new Hotspot({\n          name: node.slot,\n          position: node.dataset.position,\n          normal: node.dataset.normal,\n          surface: node.dataset.surface\n        });\n        this[$hotspotMap].set(node.slot, hotspot);\n        this[$scene].addHotspot(hotspot);\n      }\n      this[$scene].queueRender();\n    }\n    [$removeHotspot](node) {\n      if (!(node instanceof HTMLElement)) {\n        return;\n      }\n      const hotspot = this[$hotspotMap].get(node.slot);\n      if (!hotspot) {\n        return;\n      }\n      if (hotspot.decrement()) {\n        this[$scene].removeHotspot(hotspot);\n        this[$hotspotMap].delete(node.slot);\n      }\n      this[$scene].queueRender();\n    }\n  }\n  return AnnotationModelViewerElement;\n};\n", "/*!\nfflate - fast JavaScript compression/decompression\n<https://101arrowz.github.io/fflate>\nLicensed under MIT. https://github.com/101arrowz/fflate/blob/master/LICENSE\nversion 0.8.2\n*/\n\n// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\nvar ch2 = {};\nvar wk = function (c, id, msg, transfer, cb) {\n  var w = new Worker(ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([c + ';addEventListener(\"error\",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'], {\n    type: 'text/javascript'\n  }))));\n  w.onmessage = function (e) {\n    var d = e.data,\n      ed = d.$e$;\n    if (ed) {\n      var err = new Error(ed[0]);\n      err['code'] = ed[1];\n      err.stack = ed[2];\n      cb(err, null);\n    } else cb(null, d);\n  };\n  w.postMessage(msg, transfer);\n  return w;\n};\n\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array,\n  u16 = Uint16Array,\n  i32 = Int32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */0, 0, /* impossible */0]);\n// fixed distance extra bits\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n  var b = new u16(31);\n  for (var i = 0; i < 31; ++i) {\n    b[i] = start += 1 << eb[i - 1];\n  }\n  // numbers here are at max 18 bits\n  var r = new i32(b[30]);\n  for (var i = 1; i < 30; ++i) {\n    for (var j = b[i]; j < b[i + 1]; ++j) {\n      r[j] = j - b[i] << 5 | i;\n    }\n  }\n  return {\n    b: b,\n    r: r\n  };\n};\nvar _a = freb(fleb, 2),\n  fl = _a.b,\n  revfl = _a.r;\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0),\n  fd = _b.b,\n  revfd = _b.r;\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var i = 0; i < 32768; ++i) {\n  // reverse table algorithm from SO\n  var x = (i & 0xAAAA) >> 1 | (i & 0x5555) << 1;\n  x = (x & 0xCCCC) >> 2 | (x & 0x3333) << 2;\n  x = (x & 0xF0F0) >> 4 | (x & 0x0F0F) << 4;\n  rev[i] = ((x & 0xFF00) >> 8 | (x & 0x00FF) << 8) >> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = function (cd, mb, r) {\n  var s = cd.length;\n  // index\n  var i = 0;\n  // u16 \"map\": index -> # of codes with bit length = index\n  var l = new u16(mb);\n  // length of cd must be 288 (total # of codes)\n  for (; i < s; ++i) {\n    if (cd[i]) ++l[cd[i] - 1];\n  }\n  // u16 \"map\": index -> minimum code for bit length = index\n  var le = new u16(mb);\n  for (i = 1; i < mb; ++i) {\n    le[i] = le[i - 1] + l[i - 1] << 1;\n  }\n  var co;\n  if (r) {\n    // u16 \"map\": index -> number of actual bits, symbol for code\n    co = new u16(1 << mb);\n    // bits to remove for reverser\n    var rvb = 15 - mb;\n    for (i = 0; i < s; ++i) {\n      // ignore 0 lengths\n      if (cd[i]) {\n        // num encoding both symbol and bits read\n        var sv = i << 4 | cd[i];\n        // free bits\n        var r_1 = mb - cd[i];\n        // start value\n        var v = le[cd[i] - 1]++ << r_1;\n        // m is end value\n        for (var m = v | (1 << r_1) - 1; v <= m; ++v) {\n          // every 16 bit value starting with the code yields the same result\n          co[rev[v] >> rvb] = sv;\n        }\n      }\n    }\n  } else {\n    co = new u16(s);\n    for (i = 0; i < s; ++i) {\n      if (cd[i]) {\n        co[i] = rev[le[cd[i] - 1]++] >> 15 - cd[i];\n      }\n    }\n  }\n  return co;\n};\n// fixed length tree\nvar flt = new u8(288);\nfor (var i = 0; i < 144; ++i) flt[i] = 8;\nfor (var i = 144; i < 256; ++i) flt[i] = 9;\nfor (var i = 256; i < 280; ++i) flt[i] = 7;\nfor (var i = 280; i < 288; ++i) flt[i] = 8;\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var i = 0; i < 32; ++i) fdt[i] = 5;\n// fixed length map\nvar flm = /*#__PURE__*/hMap(flt, 9, 0),\n  flrm = /*#__PURE__*/hMap(flt, 9, 1);\n// fixed distance map\nvar fdm = /*#__PURE__*/hMap(fdt, 5, 0),\n  fdrm = /*#__PURE__*/hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n  var m = a[0];\n  for (var i = 1; i < a.length; ++i) {\n    if (a[i] > m) m = a[i];\n  }\n  return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n  var o = p / 8 | 0;\n  return (d[o] | d[o + 1] << 8) >> (p & 7) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n  var o = p / 8 | 0;\n  return (d[o] | d[o + 1] << 8 | d[o + 2] << 16) >> (p & 7);\n};\n// get end of byte\nvar shft = function (p) {\n  return (p + 7) / 8 | 0;\n};\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n  if (s == null || s < 0) s = 0;\n  if (e == null || e > v.length) e = v.length;\n  // can't use .constructor in case user-supplied\n  return new u8(v.subarray(s, e));\n};\n/**\n * Codes for errors generated within this library\n */\nexport var FlateErrorCode = {\n  UnexpectedEOF: 0,\n  InvalidBlockType: 1,\n  InvalidLengthLiteral: 2,\n  InvalidDistance: 3,\n  StreamFinished: 4,\n  NoStreamHandler: 5,\n  InvalidHeader: 6,\n  NoCallback: 7,\n  InvalidUTF8: 8,\n  ExtraFieldTooLong: 9,\n  InvalidDate: 10,\n  FilenameTooLong: 11,\n  StreamFinishing: 12,\n  InvalidZipData: 13,\n  UnknownCompressionMethod: 14\n};\n// error codes\nvar ec = ['unexpected EOF', 'invalid block type', 'invalid length/literal', 'invalid distance', 'stream finished', 'no stream handler',, 'no callback', 'invalid UTF-8 data', 'extra field too long', 'date not in range 1980-2099', 'filename too long', 'stream finishing', 'invalid zip data'\n// determined by unknown compression method\n];\n;\nvar err = function (ind, msg, nt) {\n  var e = new Error(msg || ec[ind]);\n  e.code = ind;\n  if (Error.captureStackTrace) Error.captureStackTrace(e, err);\n  if (!nt) throw e;\n  return e;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, st, buf, dict) {\n  // source length       dict length\n  var sl = dat.length,\n    dl = dict ? dict.length : 0;\n  if (!sl || st.f && !st.l) return buf || new u8(0);\n  var noBuf = !buf;\n  // have to estimate size\n  var resize = noBuf || st.i != 2;\n  // no state\n  var noSt = st.i;\n  // Assumes roughly 33% compression ratio average\n  if (noBuf) buf = new u8(sl * 3);\n  // ensure buffer can fit at least l elements\n  var cbuf = function (l) {\n    var bl = buf.length;\n    // need to increase size to fit\n    if (l > bl) {\n      // Double or set to necessary, whichever is greater\n      var nbuf = new u8(Math.max(bl * 2, l));\n      nbuf.set(buf);\n      buf = nbuf;\n    }\n  };\n  //  last chunk         bitpos           bytes\n  var final = st.f || 0,\n    pos = st.p || 0,\n    bt = st.b || 0,\n    lm = st.l,\n    dm = st.d,\n    lbt = st.m,\n    dbt = st.n;\n  // total bits\n  var tbts = sl * 8;\n  do {\n    if (!lm) {\n      // BFINAL - this is only 1 when last chunk is next\n      final = bits(dat, pos, 1);\n      // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n      var type = bits(dat, pos + 1, 3);\n      pos += 3;\n      if (!type) {\n        // go to end of byte boundary\n        var s = shft(pos) + 4,\n          l = dat[s - 4] | dat[s - 3] << 8,\n          t = s + l;\n        if (t > sl) {\n          if (noSt) err(0);\n          break;\n        }\n        // ensure size\n        if (resize) cbuf(bt + l);\n        // Copy over uncompressed data\n        buf.set(dat.subarray(s, t), bt);\n        // Get new bitpos, update byte count\n        st.b = bt += l, st.p = pos = t * 8, st.f = final;\n        continue;\n      } else if (type == 1) lm = flrm, dm = fdrm, lbt = 9, dbt = 5;else if (type == 2) {\n        //  literal                            lengths\n        var hLit = bits(dat, pos, 31) + 257,\n          hcLen = bits(dat, pos + 10, 15) + 4;\n        var tl = hLit + bits(dat, pos + 5, 31) + 1;\n        pos += 14;\n        // length+distance tree\n        var ldt = new u8(tl);\n        // code length tree\n        var clt = new u8(19);\n        for (var i = 0; i < hcLen; ++i) {\n          // use index map to get real code\n          clt[clim[i]] = bits(dat, pos + i * 3, 7);\n        }\n        pos += hcLen * 3;\n        // code lengths bits\n        var clb = max(clt),\n          clbmsk = (1 << clb) - 1;\n        // code lengths map\n        var clm = hMap(clt, clb, 1);\n        for (var i = 0; i < tl;) {\n          var r = clm[bits(dat, pos, clbmsk)];\n          // bits read\n          pos += r & 15;\n          // symbol\n          var s = r >> 4;\n          // code length to copy\n          if (s < 16) {\n            ldt[i++] = s;\n          } else {\n            //  copy   count\n            var c = 0,\n              n = 0;\n            if (s == 16) n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];else if (s == 17) n = 3 + bits(dat, pos, 7), pos += 3;else if (s == 18) n = 11 + bits(dat, pos, 127), pos += 7;\n            while (n--) ldt[i++] = c;\n          }\n        }\n        //    length tree                 distance tree\n        var lt = ldt.subarray(0, hLit),\n          dt = ldt.subarray(hLit);\n        // max length bits\n        lbt = max(lt);\n        // max dist bits\n        dbt = max(dt);\n        lm = hMap(lt, lbt, 1);\n        dm = hMap(dt, dbt, 1);\n      } else err(1);\n      if (pos > tbts) {\n        if (noSt) err(0);\n        break;\n      }\n    }\n    // Make sure the buffer can hold this + the largest possible addition\n    // Maximum chunk size (practically, theoretically infinite) is 2^17\n    if (resize) cbuf(bt + 131072);\n    var lms = (1 << lbt) - 1,\n      dms = (1 << dbt) - 1;\n    var lpos = pos;\n    for (;; lpos = pos) {\n      // bits read, code\n      var c = lm[bits16(dat, pos) & lms],\n        sym = c >> 4;\n      pos += c & 15;\n      if (pos > tbts) {\n        if (noSt) err(0);\n        break;\n      }\n      if (!c) err(2);\n      if (sym < 256) buf[bt++] = sym;else if (sym == 256) {\n        lpos = pos, lm = null;\n        break;\n      } else {\n        var add = sym - 254;\n        // no extra bits needed if less\n        if (sym > 264) {\n          // index\n          var i = sym - 257,\n            b = fleb[i];\n          add = bits(dat, pos, (1 << b) - 1) + fl[i];\n          pos += b;\n        }\n        // dist\n        var d = dm[bits16(dat, pos) & dms],\n          dsym = d >> 4;\n        if (!d) err(3);\n        pos += d & 15;\n        var dt = fd[dsym];\n        if (dsym > 3) {\n          var b = fdeb[dsym];\n          dt += bits16(dat, pos) & (1 << b) - 1, pos += b;\n        }\n        if (pos > tbts) {\n          if (noSt) err(0);\n          break;\n        }\n        if (resize) cbuf(bt + 131072);\n        var end = bt + add;\n        if (bt < dt) {\n          var shift = dl - dt,\n            dend = Math.min(dt, end);\n          if (shift + bt < 0) err(3);\n          for (; bt < dend; ++bt) buf[bt] = dict[shift + bt];\n        }\n        for (; bt < end; ++bt) buf[bt] = buf[bt - dt];\n      }\n    }\n    st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n    if (lm) final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n  } while (!final);\n  // don't reallocate for streams or user buffers\n  return bt != buf.length && noBuf ? slc(buf, 0, bt) : buf.subarray(0, bt);\n};\n// starting at p, write the minimum number of bits that can hold v to d\nvar wbits = function (d, p, v) {\n  v <<= p & 7;\n  var o = p / 8 | 0;\n  d[o] |= v;\n  d[o + 1] |= v >> 8;\n};\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nvar wbits16 = function (d, p, v) {\n  v <<= p & 7;\n  var o = p / 8 | 0;\n  d[o] |= v;\n  d[o + 1] |= v >> 8;\n  d[o + 2] |= v >> 16;\n};\n// creates code lengths from a frequency table\nvar hTree = function (d, mb) {\n  // Need extra info to make a tree\n  var t = [];\n  for (var i = 0; i < d.length; ++i) {\n    if (d[i]) t.push({\n      s: i,\n      f: d[i]\n    });\n  }\n  var s = t.length;\n  var t2 = t.slice();\n  if (!s) return {\n    t: et,\n    l: 0\n  };\n  if (s == 1) {\n    var v = new u8(t[0].s + 1);\n    v[t[0].s] = 1;\n    return {\n      t: v,\n      l: 1\n    };\n  }\n  t.sort(function (a, b) {\n    return a.f - b.f;\n  });\n  // after i2 reaches last ind, will be stopped\n  // freq must be greater than largest possible number of symbols\n  t.push({\n    s: -1,\n    f: 25001\n  });\n  var l = t[0],\n    r = t[1],\n    i0 = 0,\n    i1 = 1,\n    i2 = 2;\n  t[0] = {\n    s: -1,\n    f: l.f + r.f,\n    l: l,\n    r: r\n  };\n  // efficient algorithm from UZIP.js\n  // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n  // symbols that combined have high freq, will start processing i2 (high-freq,\n  // non-composite) symbols instead\n  // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n  while (i1 != s - 1) {\n    l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n    r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n    t[i1++] = {\n      s: -1,\n      f: l.f + r.f,\n      l: l,\n      r: r\n    };\n  }\n  var maxSym = t2[0].s;\n  for (var i = 1; i < s; ++i) {\n    if (t2[i].s > maxSym) maxSym = t2[i].s;\n  }\n  // code lengths\n  var tr = new u16(maxSym + 1);\n  // max bits in tree\n  var mbt = ln(t[i1 - 1], tr, 0);\n  if (mbt > mb) {\n    // more algorithms from UZIP.js\n    // TODO: find out how this code works (debt)\n    //  ind    debt\n    var i = 0,\n      dt = 0;\n    //    left            cost\n    var lft = mbt - mb,\n      cst = 1 << lft;\n    t2.sort(function (a, b) {\n      return tr[b.s] - tr[a.s] || a.f - b.f;\n    });\n    for (; i < s; ++i) {\n      var i2_1 = t2[i].s;\n      if (tr[i2_1] > mb) {\n        dt += cst - (1 << mbt - tr[i2_1]);\n        tr[i2_1] = mb;\n      } else break;\n    }\n    dt >>= lft;\n    while (dt > 0) {\n      var i2_2 = t2[i].s;\n      if (tr[i2_2] < mb) dt -= 1 << mb - tr[i2_2]++ - 1;else ++i;\n    }\n    for (; i >= 0 && dt; --i) {\n      var i2_3 = t2[i].s;\n      if (tr[i2_3] == mb) {\n        --tr[i2_3];\n        ++dt;\n      }\n    }\n    mbt = mb;\n  }\n  return {\n    t: new u8(tr),\n    l: mbt\n  };\n};\n// get the max length and assign length codes\nvar ln = function (n, l, d) {\n  return n.s == -1 ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1)) : l[n.s] = d;\n};\n// length codes generation\nvar lc = function (c) {\n  var s = c.length;\n  // Note that the semicolon was intentional\n  while (s && !c[--s]);\n  var cl = new u16(++s);\n  //  ind      num         streak\n  var cli = 0,\n    cln = c[0],\n    cls = 1;\n  var w = function (v) {\n    cl[cli++] = v;\n  };\n  for (var i = 1; i <= s; ++i) {\n    if (c[i] == cln && i != s) ++cls;else {\n      if (!cln && cls > 2) {\n        for (; cls > 138; cls -= 138) w(32754);\n        if (cls > 2) {\n          w(cls > 10 ? cls - 11 << 5 | 28690 : cls - 3 << 5 | 12305);\n          cls = 0;\n        }\n      } else if (cls > 3) {\n        w(cln), --cls;\n        for (; cls > 6; cls -= 6) w(8304);\n        if (cls > 2) w(cls - 3 << 5 | 8208), cls = 0;\n      }\n      while (cls--) w(cln);\n      cls = 1;\n      cln = c[i];\n    }\n  }\n  return {\n    c: cl.subarray(0, cli),\n    n: s\n  };\n};\n// calculate the length of output from tree, code lengths\nvar clen = function (cf, cl) {\n  var l = 0;\n  for (var i = 0; i < cl.length; ++i) l += cf[i] * cl[i];\n  return l;\n};\n// writes a fixed block\n// returns the new bit pos\nvar wfblk = function (out, pos, dat) {\n  // no need to write 00 as type: TypedArray defaults to 0\n  var s = dat.length;\n  var o = shft(pos + 2);\n  out[o] = s & 255;\n  out[o + 1] = s >> 8;\n  out[o + 2] = out[o] ^ 255;\n  out[o + 3] = out[o + 1] ^ 255;\n  for (var i = 0; i < s; ++i) out[o + i + 4] = dat[i];\n  return (o + 4 + s) * 8;\n};\n// writes a block\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n  wbits(out, p++, final);\n  ++lf[256];\n  var _a = hTree(lf, 15),\n    dlt = _a.t,\n    mlb = _a.l;\n  var _b = hTree(df, 15),\n    ddt = _b.t,\n    mdb = _b.l;\n  var _c = lc(dlt),\n    lclt = _c.c,\n    nlc = _c.n;\n  var _d = lc(ddt),\n    lcdt = _d.c,\n    ndc = _d.n;\n  var lcfreq = new u16(19);\n  for (var i = 0; i < lclt.length; ++i) ++lcfreq[lclt[i] & 31];\n  for (var i = 0; i < lcdt.length; ++i) ++lcfreq[lcdt[i] & 31];\n  var _e = hTree(lcfreq, 7),\n    lct = _e.t,\n    mlcb = _e.l;\n  var nlcc = 19;\n  for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc);\n  var flen = bl + 5 << 3;\n  var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n  var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + 2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18];\n  if (bs >= 0 && flen <= ftlen && flen <= dtlen) return wfblk(out, p, dat.subarray(bs, bs + bl));\n  var lm, ll, dm, dl;\n  wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n  if (dtlen < ftlen) {\n    lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n    var llm = hMap(lct, mlcb, 0);\n    wbits(out, p, nlc - 257);\n    wbits(out, p + 5, ndc - 1);\n    wbits(out, p + 10, nlcc - 4);\n    p += 14;\n    for (var i = 0; i < nlcc; ++i) wbits(out, p + 3 * i, lct[clim[i]]);\n    p += 3 * nlcc;\n    var lcts = [lclt, lcdt];\n    for (var it = 0; it < 2; ++it) {\n      var clct = lcts[it];\n      for (var i = 0; i < clct.length; ++i) {\n        var len = clct[i] & 31;\n        wbits(out, p, llm[len]), p += lct[len];\n        if (len > 15) wbits(out, p, clct[i] >> 5 & 127), p += clct[i] >> 12;\n      }\n    }\n  } else {\n    lm = flm, ll = flt, dm = fdm, dl = fdt;\n  }\n  for (var i = 0; i < li; ++i) {\n    var sym = syms[i];\n    if (sym > 255) {\n      var len = sym >> 18 & 31;\n      wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n      if (len > 7) wbits(out, p, sym >> 23 & 31), p += fleb[len];\n      var dst = sym & 31;\n      wbits16(out, p, dm[dst]), p += dl[dst];\n      if (dst > 3) wbits16(out, p, sym >> 5 & 8191), p += fdeb[dst];\n    } else {\n      wbits16(out, p, lm[sym]), p += ll[sym];\n    }\n  }\n  wbits16(out, p, lm[256]);\n  return p + ll[256];\n};\n// deflate options (nice << 13) | chain\nvar deo = /*#__PURE__*/new i32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n// empty\nvar et = /*#__PURE__*/new u8(0);\n// compresses data into a raw DEFLATE buffer\nvar dflt = function (dat, lvl, plvl, pre, post, st) {\n  var s = st.z || dat.length;\n  var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n  // writing to this writes to the output buffer\n  var w = o.subarray(pre, o.length - post);\n  var lst = st.l;\n  var pos = (st.r || 0) & 7;\n  if (lvl) {\n    if (pos) w[0] = st.r >> 3;\n    var opt = deo[lvl - 1];\n    var n = opt >> 13,\n      c = opt & 8191;\n    var msk_1 = (1 << plvl) - 1;\n    //    prev 2-byte val map    curr 2-byte val map\n    var prev = st.p || new u16(32768),\n      head = st.h || new u16(msk_1 + 1);\n    var bs1_1 = Math.ceil(plvl / 3),\n      bs2_1 = 2 * bs1_1;\n    var hsh = function (i) {\n      return (dat[i] ^ dat[i + 1] << bs1_1 ^ dat[i + 2] << bs2_1) & msk_1;\n    };\n    // 24576 is an arbitrary number of maximum symbols per block\n    // 424 buffer for last block\n    var syms = new i32(25000);\n    // length/literal freq   distance freq\n    var lf = new u16(288),\n      df = new u16(32);\n    //  l/lcnt  exbits  index          l/lind  waitdx          blkpos\n    var lc_1 = 0,\n      eb = 0,\n      i = st.i || 0,\n      li = 0,\n      wi = st.w || 0,\n      bs = 0;\n    for (; i + 2 < s; ++i) {\n      // hash value\n      var hv = hsh(i);\n      // index mod 32768    previous index mod\n      var imod = i & 32767,\n        pimod = head[hv];\n      prev[imod] = pimod;\n      head[hv] = imod;\n      // We always should modify head and prev, but only add symbols if\n      // this data is not yet processed (\"wait\" for wait index)\n      if (wi <= i) {\n        // bytes remaining\n        var rem = s - i;\n        if ((lc_1 > 7000 || li > 24576) && (rem > 423 || !lst)) {\n          pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n          li = lc_1 = eb = 0, bs = i;\n          for (var j = 0; j < 286; ++j) lf[j] = 0;\n          for (var j = 0; j < 30; ++j) df[j] = 0;\n        }\n        //  len    dist   chain\n        var l = 2,\n          d = 0,\n          ch_1 = c,\n          dif = imod - pimod & 32767;\n        if (rem > 2 && hv == hsh(i - dif)) {\n          var maxn = Math.min(n, rem) - 1;\n          var maxd = Math.min(32767, i);\n          // max possible length\n          // not capped at dif because decompressors implement \"rolling\" index population\n          var ml = Math.min(258, rem);\n          while (dif <= maxd && --ch_1 && imod != pimod) {\n            if (dat[i + l] == dat[i + l - dif]) {\n              var nl = 0;\n              for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl);\n              if (nl > l) {\n                l = nl, d = dif;\n                // break out early when we reach \"nice\" (we are satisfied enough)\n                if (nl > maxn) break;\n                // now, find the rarest 2-byte sequence within this\n                // length of literals and search for that instead.\n                // Much faster than just using the start\n                var mmd = Math.min(dif, nl - 2);\n                var md = 0;\n                for (var j = 0; j < mmd; ++j) {\n                  var ti = i - dif + j & 32767;\n                  var pti = prev[ti];\n                  var cd = ti - pti & 32767;\n                  if (cd > md) md = cd, pimod = ti;\n                }\n              }\n            }\n            // check the previous match\n            imod = pimod, pimod = prev[imod];\n            dif += imod - pimod & 32767;\n          }\n        }\n        // d will be nonzero only when a match was found\n        if (d) {\n          // store both dist and len data in one int32\n          // Make sure this is recognized as a len/dist with 28th bit (2^28)\n          syms[li++] = 268435456 | revfl[l] << 18 | revfd[d];\n          var lin = revfl[l] & 31,\n            din = revfd[d] & 31;\n          eb += fleb[lin] + fdeb[din];\n          ++lf[257 + lin];\n          ++df[din];\n          wi = i + l;\n          ++lc_1;\n        } else {\n          syms[li++] = dat[i];\n          ++lf[dat[i]];\n        }\n      }\n    }\n    for (i = Math.max(i, wi); i < s; ++i) {\n      syms[li++] = dat[i];\n      ++lf[dat[i]];\n    }\n    pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n    if (!lst) {\n      st.r = pos & 7 | w[pos / 8 | 0] << 3;\n      // shft(pos) now 1 less if pos & 7 != 0\n      pos -= 7;\n      st.h = head, st.p = prev, st.i = i, st.w = wi;\n    }\n  } else {\n    for (var i = st.w || 0; i < s + lst; i += 65535) {\n      // end\n      var e = i + 65535;\n      if (e >= s) {\n        // write final block\n        w[pos / 8 | 0] = lst;\n        e = s;\n      }\n      pos = wfblk(w, pos + 1, dat.subarray(i, e));\n    }\n    st.i = s;\n  }\n  return slc(o, 0, pre + shft(pos) + post);\n};\n// CRC32 table\nvar crct = /*#__PURE__*/function () {\n  var t = new Int32Array(256);\n  for (var i = 0; i < 256; ++i) {\n    var c = i,\n      k = 9;\n    while (--k) c = (c & 1 && -306674912) ^ c >>> 1;\n    t[i] = c;\n  }\n  return t;\n}();\n// CRC32\nvar crc = function () {\n  var c = -1;\n  return {\n    p: function (d) {\n      // closures have awful performance\n      var cr = c;\n      for (var i = 0; i < d.length; ++i) cr = crct[cr & 255 ^ d[i]] ^ cr >>> 8;\n      c = cr;\n    },\n    d: function () {\n      return ~c;\n    }\n  };\n};\n// Adler32\nvar adler = function () {\n  var a = 1,\n    b = 0;\n  return {\n    p: function (d) {\n      // closures have awful performance\n      var n = a,\n        m = b;\n      var l = d.length | 0;\n      for (var i = 0; i != l;) {\n        var e = Math.min(i + 2655, l);\n        for (; i < e; ++i) m += n += d[i];\n        n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n      }\n      a = n, b = m;\n    },\n    d: function () {\n      a %= 65521, b %= 65521;\n      return (a & 255) << 24 | (a & 0xFF00) << 8 | (b & 255) << 8 | b >> 8;\n    }\n  };\n};\n;\n// deflate with opts\nvar dopt = function (dat, opt, pre, post, st) {\n  if (!st) {\n    st = {\n      l: 1\n    };\n    if (opt.dictionary) {\n      var dict = opt.dictionary.subarray(-32768);\n      var newDat = new u8(dict.length + dat.length);\n      newDat.set(dict);\n      newDat.set(dat, dict.length);\n      dat = newDat;\n      st.w = dict.length;\n    }\n  }\n  return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? st.l ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : 20 : 12 + opt.mem, pre, post, st);\n};\n// Walmart object spread\nvar mrg = function (a, b) {\n  var o = {};\n  for (var k in a) o[k] = a[k];\n  for (var k in b) o[k] = b[k];\n  return o;\n};\n// worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\nvar wcln = function (fn, fnStr, td) {\n  var dt = fn();\n  var st = fn.toString();\n  var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/\\s+/g, '').split(',');\n  for (var i = 0; i < dt.length; ++i) {\n    var v = dt[i],\n      k = ks[i];\n    if (typeof v == 'function') {\n      fnStr += ';' + k + '=';\n      var st_1 = v.toString();\n      if (v.prototype) {\n        // for global objects\n        if (st_1.indexOf('[native code]') != -1) {\n          var spInd = st_1.indexOf(' ', 8) + 1;\n          fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n        } else {\n          fnStr += st_1;\n          for (var t in v.prototype) fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n        }\n      } else fnStr += st_1;\n    } else td[k] = v;\n  }\n  return fnStr;\n};\nvar ch = [];\n// clone bufs\nvar cbfs = function (v) {\n  var tl = [];\n  for (var k in v) {\n    if (v[k].buffer) {\n      tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n    }\n  }\n  return tl;\n};\n// use a worker to execute code\nvar wrkr = function (fns, init, id, cb) {\n  if (!ch[id]) {\n    var fnStr = '',\n      td_1 = {},\n      m = fns.length - 1;\n    for (var i = 0; i < m; ++i) fnStr = wcln(fns[i], fnStr, td_1);\n    ch[id] = {\n      c: wcln(fns[m], fnStr, td_1),\n      e: td_1\n    };\n  }\n  var td = mrg({}, ch[id].e);\n  return wk(ch[id].c + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n};\n// base async inflate fn\nvar bInflt = function () {\n  return [u8, u16, i32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, ec, hMap, max, bits, bits16, shft, slc, err, inflt, inflateSync, pbf, gopt];\n};\nvar bDflt = function () {\n  return [u8, u16, i32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf];\n};\n// gzip extra\nvar gze = function () {\n  return [gzh, gzhl, wbytes, crc, crct];\n};\n// gunzip extra\nvar guze = function () {\n  return [gzs, gzl];\n};\n// zlib extra\nvar zle = function () {\n  return [zlh, wbytes, adler];\n};\n// unzlib extra\nvar zule = function () {\n  return [zls];\n};\n// post buf\nvar pbf = function (msg) {\n  return postMessage(msg, [msg.buffer]);\n};\n// get opts\nvar gopt = function (o) {\n  return o && {\n    out: o.size && new u8(o.size),\n    dictionary: o.dictionary\n  };\n};\n// async helper\nvar cbify = function (dat, opts, fns, init, id, cb) {\n  var w = wrkr(fns, init, id, function (err, dat) {\n    w.terminate();\n    cb(err, dat);\n  });\n  w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n  return function () {\n    w.terminate();\n  };\n};\n// auto stream\nvar astrm = function (strm) {\n  strm.ondata = function (dat, final) {\n    return postMessage([dat, final], [dat.buffer]);\n  };\n  return function (ev) {\n    if (ev.data.length) {\n      strm.push(ev.data[0], ev.data[1]);\n      postMessage([ev.data[0].length]);\n    } else strm.flush();\n  };\n};\n// async stream attach\nvar astrmify = function (fns, strm, opts, init, id, flush, ext) {\n  var t;\n  var w = wrkr(fns, init, id, function (err, dat) {\n    if (err) w.terminate(), strm.ondata.call(strm, err);else if (!Array.isArray(dat)) ext(dat);else if (dat.length == 1) {\n      strm.queuedSize -= dat[0];\n      if (strm.ondrain) strm.ondrain(dat[0]);\n    } else {\n      if (dat[1]) w.terminate();\n      strm.ondata.call(strm, err, dat[0], dat[1]);\n    }\n  });\n  w.postMessage(opts);\n  strm.queuedSize = 0;\n  strm.push = function (d, f) {\n    if (!strm.ondata) err(5);\n    if (t) strm.ondata(err(4, 0, 1), null, !!f);\n    strm.queuedSize += d.length;\n    w.postMessage([d, t = f], [d.buffer]);\n  };\n  strm.terminate = function () {\n    w.terminate();\n  };\n  if (flush) {\n    strm.flush = function () {\n      w.postMessage([]);\n    };\n  }\n};\n// read 2 bytes\nvar b2 = function (d, b) {\n  return d[b] | d[b + 1] << 8;\n};\n// read 4 bytes\nvar b4 = function (d, b) {\n  return (d[b] | d[b + 1] << 8 | d[b + 2] << 16 | d[b + 3] << 24) >>> 0;\n};\nvar b8 = function (d, b) {\n  return b4(d, b) + b4(d, b + 4) * 4294967296;\n};\n// write bytes\nvar wbytes = function (d, b, v) {\n  for (; v; ++b) d[b] = v, v >>>= 8;\n};\n// gzip header\nvar gzh = function (c, o) {\n  var fn = o.filename;\n  c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n  if (o.mtime != 0) wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n  if (fn) {\n    c[3] = 8;\n    for (var i = 0; i <= fn.length; ++i) c[i + 10] = fn.charCodeAt(i);\n  }\n};\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\nvar gzs = function (d) {\n  if (d[0] != 31 || d[1] != 139 || d[2] != 8) err(6, 'invalid gzip data');\n  var flg = d[3];\n  var st = 10;\n  if (flg & 4) st += (d[10] | d[11] << 8) + 2;\n  for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++]);\n  return st + (flg & 2);\n};\n// gzip length\nvar gzl = function (d) {\n  var l = d.length;\n  return (d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16 | d[l - 1] << 24) >>> 0;\n};\n// gzip header length\nvar gzhl = function (o) {\n  return 10 + (o.filename ? o.filename.length + 1 : 0);\n};\n// zlib header\nvar zlh = function (c, o) {\n  var lv = o.level,\n    fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n  c[0] = 120, c[1] = fl << 6 | (o.dictionary && 32);\n  c[1] |= 31 - (c[0] << 8 | c[1]) % 31;\n  if (o.dictionary) {\n    var h = adler();\n    h.p(o.dictionary);\n    wbytes(c, 2, h.d());\n  }\n};\n// zlib start\nvar zls = function (d, dict) {\n  if ((d[0] & 15) != 8 || d[0] >> 4 > 7 || (d[0] << 8 | d[1]) % 31) err(6, 'invalid zlib data');\n  if ((d[1] >> 5 & 1) == +!dict) err(6, 'invalid zlib data: ' + (d[1] & 32 ? 'need' : 'unexpected') + ' dictionary');\n  return (d[1] >> 3 & 4) + 2;\n};\nfunction StrmOpt(opts, cb) {\n  if (typeof opts == 'function') cb = opts, opts = {};\n  this.ondata = cb;\n  return opts;\n}\n/**\n * Streaming DEFLATE compression\n */\nvar Deflate = /*#__PURE__*/function () {\n  function Deflate(opts, cb) {\n    if (typeof opts == 'function') cb = opts, opts = {};\n    this.ondata = cb;\n    this.o = opts || {};\n    this.s = {\n      l: 0,\n      i: 32768,\n      w: 32768,\n      z: 32768\n    };\n    // Buffer length must always be 0 mod 32768 for index calculations to be correct when modifying head and prev\n    // 98304 = 32768 (lookback) + 65536 (common chunk size)\n    this.b = new u8(98304);\n    if (this.o.dictionary) {\n      var dict = this.o.dictionary.subarray(-32768);\n      this.b.set(dict, 32768 - dict.length);\n      this.s.i = 32768 - dict.length;\n    }\n  }\n  Deflate.prototype.p = function (c, f) {\n    this.ondata(dopt(c, this.o, 0, 0, this.s), f);\n  };\n  /**\n   * Pushes a chunk to be deflated\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n  Deflate.prototype.push = function (chunk, final) {\n    if (!this.ondata) err(5);\n    if (this.s.l) err(4);\n    var endLen = chunk.length + this.s.z;\n    if (endLen > this.b.length) {\n      if (endLen > 2 * this.b.length - 32768) {\n        var newBuf = new u8(endLen & -32768);\n        newBuf.set(this.b.subarray(0, this.s.z));\n        this.b = newBuf;\n      }\n      var split = this.b.length - this.s.z;\n      this.b.set(chunk.subarray(0, split), this.s.z);\n      this.s.z = this.b.length;\n      this.p(this.b, false);\n      this.b.set(this.b.subarray(-32768));\n      this.b.set(chunk.subarray(split), 32768);\n      this.s.z = chunk.length - split + 32768;\n      this.s.i = 32766, this.s.w = 32768;\n    } else {\n      this.b.set(chunk, this.s.z);\n      this.s.z += chunk.length;\n    }\n    this.s.l = final & 1;\n    if (this.s.z > this.s.w + 8191 || final) {\n      this.p(this.b, final || false);\n      this.s.w = this.s.i, this.s.i -= 2;\n    }\n  };\n  /**\n   * Flushes buffered uncompressed data. Useful to immediately retrieve the\n   * deflated output for small inputs.\n   */\n  Deflate.prototype.flush = function () {\n    if (!this.ondata) err(5);\n    if (this.s.l) err(4);\n    this.p(this.b, false);\n    this.s.w = this.s.i, this.s.i -= 2;\n  };\n  return Deflate;\n}();\nexport { Deflate };\n/**\n * Asynchronous streaming DEFLATE compression\n */\nvar AsyncDeflate = /*#__PURE__*/function () {\n  function AsyncDeflate(opts, cb) {\n    astrmify([bDflt, function () {\n      return [astrm, Deflate];\n    }], this, StrmOpt.call(this, opts, cb), function (ev) {\n      var strm = new Deflate(ev.data);\n      onmessage = astrm(strm);\n    }, 6, 1);\n  }\n  return AsyncDeflate;\n}();\nexport { AsyncDeflate };\nexport function deflate(data, opts, cb) {\n  if (!cb) cb = opts, opts = {};\n  if (typeof cb != 'function') err(7);\n  return cbify(data, opts, [bDflt], function (ev) {\n    return pbf(deflateSync(ev.data[0], ev.data[1]));\n  }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\nexport function deflateSync(data, opts) {\n  return dopt(data, opts || {}, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */\nvar Inflate = /*#__PURE__*/function () {\n  function Inflate(opts, cb) {\n    // no StrmOpt here to avoid adding to workerizer\n    if (typeof opts == 'function') cb = opts, opts = {};\n    this.ondata = cb;\n    var dict = opts && opts.dictionary && opts.dictionary.subarray(-32768);\n    this.s = {\n      i: 0,\n      b: dict ? dict.length : 0\n    };\n    this.o = new u8(32768);\n    this.p = new u8(0);\n    if (dict) this.o.set(dict);\n  }\n  Inflate.prototype.e = function (c) {\n    if (!this.ondata) err(5);\n    if (this.d) err(4);\n    if (!this.p.length) this.p = c;else if (c.length) {\n      var n = new u8(this.p.length + c.length);\n      n.set(this.p), n.set(c, this.p.length), this.p = n;\n    }\n  };\n  Inflate.prototype.c = function (final) {\n    this.s.i = +(this.d = final || false);\n    var bts = this.s.b;\n    var dt = inflt(this.p, this.s, this.o);\n    this.ondata(slc(dt, bts, this.s.b), this.d);\n    this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n    this.p = slc(this.p, this.s.p / 8 | 0), this.s.p &= 7;\n  };\n  /**\n   * Pushes a chunk to be inflated\n   * @param chunk The chunk to push\n   * @param final Whether this is the final chunk\n   */\n  Inflate.prototype.push = function (chunk, final) {\n    this.e(chunk), this.c(final);\n  };\n  return Inflate;\n}();\nexport { Inflate };\n/**\n * Asynchronous streaming DEFLATE decompression\n */\nvar AsyncInflate = /*#__PURE__*/function () {\n  function AsyncInflate(opts, cb) {\n    astrmify([bInflt, function () {\n      return [astrm, Inflate];\n    }], this, StrmOpt.call(this, opts, cb), function (ev) {\n      var strm = new Inflate(ev.data);\n      onmessage = astrm(strm);\n    }, 7, 0);\n  }\n  return AsyncInflate;\n}();\nexport { AsyncInflate };\nexport function inflate(data, opts, cb) {\n  if (!cb) cb = opts, opts = {};\n  if (typeof cb != 'function') err(7);\n  return cbify(data, opts, [bInflt], function (ev) {\n    return pbf(inflateSync(ev.data[0], gopt(ev.data[1])));\n  }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function inflateSync(data, opts) {\n  return inflt(data, {\n    i: 2\n  }, opts && opts.out, opts && opts.dictionary);\n}\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n/**\n * Streaming GZIP compression\n */\nvar Gzip = /*#__PURE__*/function () {\n  function Gzip(opts, cb) {\n    this.c = crc();\n    this.l = 0;\n    this.v = 1;\n    Deflate.call(this, opts, cb);\n  }\n  /**\n   * Pushes a chunk to be GZIPped\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n  Gzip.prototype.push = function (chunk, final) {\n    this.c.p(chunk);\n    this.l += chunk.length;\n    Deflate.prototype.push.call(this, chunk, final);\n  };\n  Gzip.prototype.p = function (c, f) {\n    var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, this.s);\n    if (this.v) gzh(raw, this.o), this.v = 0;\n    if (f) wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n    this.ondata(raw, f);\n  };\n  /**\n   * Flushes buffered uncompressed data. Useful to immediately retrieve the\n   * GZIPped output for small inputs.\n   */\n  Gzip.prototype.flush = function () {\n    Deflate.prototype.flush.call(this);\n  };\n  return Gzip;\n}();\nexport { Gzip };\n/**\n * Asynchronous streaming GZIP compression\n */\nvar AsyncGzip = /*#__PURE__*/function () {\n  function AsyncGzip(opts, cb) {\n    astrmify([bDflt, gze, function () {\n      return [astrm, Deflate, Gzip];\n    }], this, StrmOpt.call(this, opts, cb), function (ev) {\n      var strm = new Gzip(ev.data);\n      onmessage = astrm(strm);\n    }, 8, 1);\n  }\n  return AsyncGzip;\n}();\nexport { AsyncGzip };\nexport function gzip(data, opts, cb) {\n  if (!cb) cb = opts, opts = {};\n  if (typeof cb != 'function') err(7);\n  return cbify(data, opts, [bDflt, gze, function () {\n    return [gzipSync];\n  }], function (ev) {\n    return pbf(gzipSync(ev.data[0], ev.data[1]));\n  }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\nexport function gzipSync(data, opts) {\n  if (!opts) opts = {};\n  var c = crc(),\n    l = data.length;\n  c.p(data);\n  var d = dopt(data, opts, gzhl(opts), 8),\n    s = d.length;\n  return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming single or multi-member GZIP decompression\n */\nvar Gunzip = /*#__PURE__*/function () {\n  function Gunzip(opts, cb) {\n    this.v = 1;\n    this.r = 0;\n    Inflate.call(this, opts, cb);\n  }\n  /**\n   * Pushes a chunk to be GUNZIPped\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n  Gunzip.prototype.push = function (chunk, final) {\n    Inflate.prototype.e.call(this, chunk);\n    this.r += chunk.length;\n    if (this.v) {\n      var p = this.p.subarray(this.v - 1);\n      var s = p.length > 3 ? gzs(p) : 4;\n      if (s > p.length) {\n        if (!final) return;\n      } else if (this.v > 1 && this.onmember) {\n        this.onmember(this.r - p.length);\n      }\n      this.p = p.subarray(s), this.v = 0;\n    }\n    // necessary to prevent TS from using the closure value\n    // This allows for workerization to function correctly\n    Inflate.prototype.c.call(this, final);\n    // process concatenated GZIP\n    if (this.s.f && !this.s.l && !final) {\n      this.v = shft(this.s.p) + 9;\n      this.s = {\n        i: 0\n      };\n      this.o = new u8(0);\n      this.push(new u8(0), final);\n    }\n  };\n  return Gunzip;\n}();\nexport { Gunzip };\n/**\n * Asynchronous streaming single or multi-member GZIP decompression\n */\nvar AsyncGunzip = /*#__PURE__*/function () {\n  function AsyncGunzip(opts, cb) {\n    var _this = this;\n    astrmify([bInflt, guze, function () {\n      return [astrm, Inflate, Gunzip];\n    }], this, StrmOpt.call(this, opts, cb), function (ev) {\n      var strm = new Gunzip(ev.data);\n      strm.onmember = function (offset) {\n        return postMessage(offset);\n      };\n      onmessage = astrm(strm);\n    }, 9, 0, function (offset) {\n      return _this.onmember && _this.onmember(offset);\n    });\n  }\n  return AsyncGunzip;\n}();\nexport { AsyncGunzip };\nexport function gunzip(data, opts, cb) {\n  if (!cb) cb = opts, opts = {};\n  if (typeof cb != 'function') err(7);\n  return cbify(data, opts, [bInflt, guze, function () {\n    return [gunzipSync];\n  }], function (ev) {\n    return pbf(gunzipSync(ev.data[0], ev.data[1]));\n  }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function gunzipSync(data, opts) {\n  var st = gzs(data);\n  if (st + 8 > data.length) err(6, 'invalid gzip data');\n  return inflt(data.subarray(st, -8), {\n    i: 2\n  }, opts && opts.out || new u8(gzl(data)), opts && opts.dictionary);\n}\n/**\n * Streaming Zlib compression\n */\nvar Zlib = /*#__PURE__*/function () {\n  function Zlib(opts, cb) {\n    this.c = adler();\n    this.v = 1;\n    Deflate.call(this, opts, cb);\n  }\n  /**\n   * Pushes a chunk to be zlibbed\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n  Zlib.prototype.push = function (chunk, final) {\n    this.c.p(chunk);\n    Deflate.prototype.push.call(this, chunk, final);\n  };\n  Zlib.prototype.p = function (c, f) {\n    var raw = dopt(c, this.o, this.v && (this.o.dictionary ? 6 : 2), f && 4, this.s);\n    if (this.v) zlh(raw, this.o), this.v = 0;\n    if (f) wbytes(raw, raw.length - 4, this.c.d());\n    this.ondata(raw, f);\n  };\n  /**\n   * Flushes buffered uncompressed data. Useful to immediately retrieve the\n   * zlibbed output for small inputs.\n   */\n  Zlib.prototype.flush = function () {\n    Deflate.prototype.flush.call(this);\n  };\n  return Zlib;\n}();\nexport { Zlib };\n/**\n * Asynchronous streaming Zlib compression\n */\nvar AsyncZlib = /*#__PURE__*/function () {\n  function AsyncZlib(opts, cb) {\n    astrmify([bDflt, zle, function () {\n      return [astrm, Deflate, Zlib];\n    }], this, StrmOpt.call(this, opts, cb), function (ev) {\n      var strm = new Zlib(ev.data);\n      onmessage = astrm(strm);\n    }, 10, 1);\n  }\n  return AsyncZlib;\n}();\nexport { AsyncZlib };\nexport function zlib(data, opts, cb) {\n  if (!cb) cb = opts, opts = {};\n  if (typeof cb != 'function') err(7);\n  return cbify(data, opts, [bDflt, zle, function () {\n    return [zlibSync];\n  }], function (ev) {\n    return pbf(zlibSync(ev.data[0], ev.data[1]));\n  }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data, opts) {\n  if (!opts) opts = {};\n  var a = adler();\n  a.p(data);\n  var d = dopt(data, opts, opts.dictionary ? 6 : 2, 4);\n  return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */\nvar Unzlib = /*#__PURE__*/function () {\n  function Unzlib(opts, cb) {\n    Inflate.call(this, opts, cb);\n    this.v = opts && opts.dictionary ? 2 : 1;\n  }\n  /**\n   * Pushes a chunk to be unzlibbed\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n  Unzlib.prototype.push = function (chunk, final) {\n    Inflate.prototype.e.call(this, chunk);\n    if (this.v) {\n      if (this.p.length < 6 && !final) return;\n      this.p = this.p.subarray(zls(this.p, this.v - 1)), this.v = 0;\n    }\n    if (final) {\n      if (this.p.length < 4) err(6, 'invalid zlib data');\n      this.p = this.p.subarray(0, -4);\n    }\n    // necessary to prevent TS from using the closure value\n    // This allows for workerization to function correctly\n    Inflate.prototype.c.call(this, final);\n  };\n  return Unzlib;\n}();\nexport { Unzlib };\n/**\n * Asynchronous streaming Zlib decompression\n */\nvar AsyncUnzlib = /*#__PURE__*/function () {\n  function AsyncUnzlib(opts, cb) {\n    astrmify([bInflt, zule, function () {\n      return [astrm, Inflate, Unzlib];\n    }], this, StrmOpt.call(this, opts, cb), function (ev) {\n      var strm = new Unzlib(ev.data);\n      onmessage = astrm(strm);\n    }, 11, 0);\n  }\n  return AsyncUnzlib;\n}();\nexport { AsyncUnzlib };\nexport function unzlib(data, opts, cb) {\n  if (!cb) cb = opts, opts = {};\n  if (typeof cb != 'function') err(7);\n  return cbify(data, opts, [bInflt, zule, function () {\n    return [unzlibSync];\n  }], function (ev) {\n    return pbf(unzlibSync(ev.data[0], gopt(ev.data[1])));\n  }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data, opts) {\n  return inflt(data.subarray(zls(data, opts && opts.dictionary), -4), {\n    i: 2\n  }, opts && opts.out, opts && opts.dictionary);\n}\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzip as compress, AsyncGzip as AsyncCompress };\nexport { gzipSync as compressSync, Gzip as Compress };\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar Decompress = /*#__PURE__*/function () {\n  function Decompress(opts, cb) {\n    this.o = StrmOpt.call(this, opts, cb) || {};\n    this.G = Gunzip;\n    this.I = Inflate;\n    this.Z = Unzlib;\n  }\n  // init substream\n  // overriden by AsyncDecompress\n  Decompress.prototype.i = function () {\n    var _this = this;\n    this.s.ondata = function (dat, final) {\n      _this.ondata(dat, final);\n    };\n  };\n  /**\n   * Pushes a chunk to be decompressed\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n  Decompress.prototype.push = function (chunk, final) {\n    if (!this.ondata) err(5);\n    if (!this.s) {\n      if (this.p && this.p.length) {\n        var n = new u8(this.p.length + chunk.length);\n        n.set(this.p), n.set(chunk, this.p.length);\n      } else this.p = chunk;\n      if (this.p.length > 2) {\n        this.s = this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8 ? new this.G(this.o) : (this.p[0] & 15) != 8 || this.p[0] >> 4 > 7 || (this.p[0] << 8 | this.p[1]) % 31 ? new this.I(this.o) : new this.Z(this.o);\n        this.i();\n        this.s.push(this.p, final);\n        this.p = null;\n      }\n    } else this.s.push(chunk, final);\n  };\n  return Decompress;\n}();\nexport { Decompress };\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar AsyncDecompress = /*#__PURE__*/function () {\n  function AsyncDecompress(opts, cb) {\n    Decompress.call(this, opts, cb);\n    this.queuedSize = 0;\n    this.G = AsyncGunzip;\n    this.I = AsyncInflate;\n    this.Z = AsyncUnzlib;\n  }\n  AsyncDecompress.prototype.i = function () {\n    var _this = this;\n    this.s.ondata = function (err, dat, final) {\n      _this.ondata(err, dat, final);\n    };\n    this.s.ondrain = function (size) {\n      _this.queuedSize -= size;\n      if (_this.ondrain) _this.ondrain(size);\n    };\n  };\n  /**\n   * Pushes a chunk to be decompressed\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n  AsyncDecompress.prototype.push = function (chunk, final) {\n    this.queuedSize += chunk.length;\n    Decompress.prototype.push.call(this, chunk, final);\n  };\n  return AsyncDecompress;\n}();\nexport { AsyncDecompress };\nexport function decompress(data, opts, cb) {\n  if (!cb) cb = opts, opts = {};\n  if (typeof cb != 'function') err(7);\n  return data[0] == 31 && data[1] == 139 && data[2] == 8 ? gunzip(data, opts, cb) : (data[0] & 15) != 8 || data[0] >> 4 > 7 || (data[0] << 8 | data[1]) % 31 ? inflate(data, opts, cb) : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function decompressSync(data, opts) {\n  return data[0] == 31 && data[1] == 139 && data[2] == 8 ? gunzipSync(data, opts) : (data[0] & 15) != 8 || data[0] >> 4 > 7 || (data[0] << 8 | data[1]) % 31 ? inflateSync(data, opts) : unzlibSync(data, opts);\n}\n// flatten a directory structure\nvar fltn = function (d, p, t, o) {\n  for (var k in d) {\n    var val = d[k],\n      n = p + k,\n      op = o;\n    if (Array.isArray(val)) op = mrg(o, val[1]), val = val[0];\n    if (val instanceof u8) t[n] = [val, op];else {\n      t[n += '/'] = [new u8(0), op];\n      fltn(val, n, t, o);\n    }\n  }\n};\n// text encoder\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/new TextEncoder();\n// text decoder\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n  td.decode(et, {\n    stream: true\n  });\n  tds = 1;\n} catch (e) {}\n// decode UTF8\nvar dutf8 = function (d) {\n  for (var r = '', i = 0;;) {\n    var c = d[i++];\n    var eb = (c > 127) + (c > 223) + (c > 239);\n    if (i + eb > d.length) return {\n      s: r,\n      r: slc(d, i - 1)\n    };\n    if (!eb) r += String.fromCharCode(c);else if (eb == 3) {\n      c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | d[i++] & 63) - 65536, r += String.fromCharCode(55296 | c >> 10, 56320 | c & 1023);\n    } else if (eb & 1) r += String.fromCharCode((c & 31) << 6 | d[i++] & 63);else r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | d[i++] & 63);\n  }\n};\n/**\n * Streaming UTF-8 decoding\n */\nvar DecodeUTF8 = /*#__PURE__*/function () {\n  /**\n   * Creates a UTF-8 decoding stream\n   * @param cb The callback to call whenever data is decoded\n   */\n  function DecodeUTF8(cb) {\n    this.ondata = cb;\n    if (tds) this.t = new TextDecoder();else this.p = et;\n  }\n  /**\n   * Pushes a chunk to be decoded from UTF-8 binary\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n  DecodeUTF8.prototype.push = function (chunk, final) {\n    if (!this.ondata) err(5);\n    final = !!final;\n    if (this.t) {\n      this.ondata(this.t.decode(chunk, {\n        stream: true\n      }), final);\n      if (final) {\n        if (this.t.decode().length) err(8);\n        this.t = null;\n      }\n      return;\n    }\n    if (!this.p) err(4);\n    var dat = new u8(this.p.length + chunk.length);\n    dat.set(this.p);\n    dat.set(chunk, this.p.length);\n    var _a = dutf8(dat),\n      s = _a.s,\n      r = _a.r;\n    if (final) {\n      if (r.length) err(8);\n      this.p = null;\n    } else this.p = r;\n    this.ondata(s, final);\n  };\n  return DecodeUTF8;\n}();\nexport { DecodeUTF8 };\n/**\n * Streaming UTF-8 encoding\n */\nvar EncodeUTF8 = /*#__PURE__*/function () {\n  /**\n   * Creates a UTF-8 decoding stream\n   * @param cb The callback to call whenever data is encoded\n   */\n  function EncodeUTF8(cb) {\n    this.ondata = cb;\n  }\n  /**\n   * Pushes a chunk to be encoded to UTF-8\n   * @param chunk The string data to push\n   * @param final Whether this is the last chunk\n   */\n  EncodeUTF8.prototype.push = function (chunk, final) {\n    if (!this.ondata) err(5);\n    if (this.d) err(4);\n    this.ondata(strToU8(chunk), this.d = final || false);\n  };\n  return EncodeUTF8;\n}();\nexport { EncodeUTF8 };\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\nexport function strToU8(str, latin1) {\n  if (latin1) {\n    var ar_1 = new u8(str.length);\n    for (var i = 0; i < str.length; ++i) ar_1[i] = str.charCodeAt(i);\n    return ar_1;\n  }\n  if (te) return te.encode(str);\n  var l = str.length;\n  var ar = new u8(str.length + (str.length >> 1));\n  var ai = 0;\n  var w = function (v) {\n    ar[ai++] = v;\n  };\n  for (var i = 0; i < l; ++i) {\n    if (ai + 5 > ar.length) {\n      var n = new u8(ai + 8 + (l - i << 1));\n      n.set(ar);\n      ar = n;\n    }\n    var c = str.charCodeAt(i);\n    if (c < 128 || latin1) w(c);else if (c < 2048) w(192 | c >> 6), w(128 | c & 63);else if (c > 55295 && c < 57344) c = 65536 + (c & 1023 << 10) | str.charCodeAt(++i) & 1023, w(240 | c >> 18), w(128 | c >> 12 & 63), w(128 | c >> 6 & 63), w(128 | c & 63);else w(224 | c >> 12), w(128 | c >> 6 & 63), w(128 | c & 63);\n  }\n  return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\nexport function strFromU8(dat, latin1) {\n  if (latin1) {\n    var r = '';\n    for (var i = 0; i < dat.length; i += 16384) r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n    return r;\n  } else if (td) {\n    return td.decode(dat);\n  } else {\n    var _a = dutf8(dat),\n      s = _a.s,\n      r = _a.r;\n    if (r.length) err(8);\n    return s;\n  }\n}\n;\n// deflate bit flag\nvar dbf = function (l) {\n  return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0;\n};\n// skip local zip header\nvar slzh = function (d, b) {\n  return b + 30 + b2(d, b + 26) + b2(d, b + 28);\n};\n// read zip header\nvar zh = function (d, b, z) {\n  var fnl = b2(d, b + 28),\n    fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)),\n    es = b + 46 + fnl,\n    bs = b4(d, b + 20);\n  var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)],\n    sc = _a[0],\n    su = _a[1],\n    off = _a[2];\n  return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n};\n// read zip64 extra field\nvar z64e = function (d, b) {\n  for (; b2(d, b) != 1; b += 4 + b2(d, b + 2));\n  return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n};\n// extra field length\nvar exfl = function (ex) {\n  var le = 0;\n  if (ex) {\n    for (var k in ex) {\n      var l = ex[k].length;\n      if (l > 65535) err(9);\n      le += l + 4;\n    }\n  }\n  return le;\n};\n// write zip header\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\n  var fl = fn.length,\n    ex = f.extra,\n    col = co && co.length;\n  var exl = exfl(ex);\n  wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n  if (ce != null) d[b++] = 20, d[b++] = f.os;\n  d[b] = 20, b += 2; // spec compliance? what's that?\n  d[b++] = f.flag << 1 | (c < 0 && 8), d[b++] = u && 8;\n  d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n  var dt = new Date(f.mtime == null ? Date.now() : f.mtime),\n    y = dt.getFullYear() - 1980;\n  if (y < 0 || y > 119) err(10);\n  wbytes(d, b, y << 25 | dt.getMonth() + 1 << 21 | dt.getDate() << 16 | dt.getHours() << 11 | dt.getMinutes() << 5 | dt.getSeconds() >> 1), b += 4;\n  if (c != -1) {\n    wbytes(d, b, f.crc);\n    wbytes(d, b + 4, c < 0 ? -c - 2 : c);\n    wbytes(d, b + 8, f.size);\n  }\n  wbytes(d, b + 12, fl);\n  wbytes(d, b + 14, exl), b += 16;\n  if (ce != null) {\n    wbytes(d, b, col);\n    wbytes(d, b + 6, f.attrs);\n    wbytes(d, b + 10, ce), b += 14;\n  }\n  d.set(fn, b);\n  b += fl;\n  if (exl) {\n    for (var k in ex) {\n      var exf = ex[k],\n        l = exf.length;\n      wbytes(d, b, +k);\n      wbytes(d, b + 2, l);\n      d.set(exf, b + 4), b += 4 + l;\n    }\n  }\n  if (col) d.set(co, b), b += col;\n  return b;\n};\n// write zip footer (end of central directory)\nvar wzf = function (o, b, c, d, e) {\n  wbytes(o, b, 0x6054B50); // skip disk\n  wbytes(o, b + 8, c);\n  wbytes(o, b + 10, c);\n  wbytes(o, b + 12, d);\n  wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */\nvar ZipPassThrough = /*#__PURE__*/function () {\n  /**\n   * Creates a pass-through stream that can be added to ZIP archives\n   * @param filename The filename to associate with this data stream\n   */\n  function ZipPassThrough(filename) {\n    this.filename = filename;\n    this.c = crc();\n    this.size = 0;\n    this.compression = 0;\n  }\n  /**\n   * Processes a chunk and pushes to the output stream. You can override this\n   * method in a subclass for custom behavior, but by default this passes\n   * the data through. You must call this.ondata(err, chunk, final) at some\n   * point in this method.\n   * @param chunk The chunk to process\n   * @param final Whether this is the last chunk\n   */\n  ZipPassThrough.prototype.process = function (chunk, final) {\n    this.ondata(null, chunk, final);\n  };\n  /**\n   * Pushes a chunk to be added. If you are subclassing this with a custom\n   * compression algorithm, note that you must push data from the source\n   * file only, pre-compression.\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n  ZipPassThrough.prototype.push = function (chunk, final) {\n    if (!this.ondata) err(5);\n    this.c.p(chunk);\n    this.size += chunk.length;\n    if (final) this.crc = this.c.d();\n    this.process(chunk, final || false);\n  };\n  return ZipPassThrough;\n}();\nexport { ZipPassThrough };\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */\nvar ZipDeflate = /*#__PURE__*/function () {\n  /**\n   * Creates a DEFLATE stream that can be added to ZIP archives\n   * @param filename The filename to associate with this data stream\n   * @param opts The compression options\n   */\n  function ZipDeflate(filename, opts) {\n    var _this = this;\n    if (!opts) opts = {};\n    ZipPassThrough.call(this, filename);\n    this.d = new Deflate(opts, function (dat, final) {\n      _this.ondata(null, dat, final);\n    });\n    this.compression = 8;\n    this.flag = dbf(opts.level);\n  }\n  ZipDeflate.prototype.process = function (chunk, final) {\n    try {\n      this.d.push(chunk, final);\n    } catch (e) {\n      this.ondata(e, null, final);\n    }\n  };\n  /**\n   * Pushes a chunk to be deflated\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n  ZipDeflate.prototype.push = function (chunk, final) {\n    ZipPassThrough.prototype.push.call(this, chunk, final);\n  };\n  return ZipDeflate;\n}();\nexport { ZipDeflate };\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */\nvar AsyncZipDeflate = /*#__PURE__*/function () {\n  /**\n   * Creates an asynchronous DEFLATE stream that can be added to ZIP archives\n   * @param filename The filename to associate with this data stream\n   * @param opts The compression options\n   */\n  function AsyncZipDeflate(filename, opts) {\n    var _this = this;\n    if (!opts) opts = {};\n    ZipPassThrough.call(this, filename);\n    this.d = new AsyncDeflate(opts, function (err, dat, final) {\n      _this.ondata(err, dat, final);\n    });\n    this.compression = 8;\n    this.flag = dbf(opts.level);\n    this.terminate = this.d.terminate;\n  }\n  AsyncZipDeflate.prototype.process = function (chunk, final) {\n    this.d.push(chunk, final);\n  };\n  /**\n   * Pushes a chunk to be deflated\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n  AsyncZipDeflate.prototype.push = function (chunk, final) {\n    ZipPassThrough.prototype.push.call(this, chunk, final);\n  };\n  return AsyncZipDeflate;\n}();\nexport { AsyncZipDeflate };\n// TODO: Better tree shaking\n/**\n * A zippable archive to which files can incrementally be added\n */\nvar Zip = /*#__PURE__*/function () {\n  /**\n   * Creates an empty ZIP archive to which files can be added\n   * @param cb The callback to call whenever data for the generated ZIP archive\n   *           is available\n   */\n  function Zip(cb) {\n    this.ondata = cb;\n    this.u = [];\n    this.d = 1;\n  }\n  /**\n   * Adds a file to the ZIP archive\n   * @param file The file stream to add\n   */\n  Zip.prototype.add = function (file) {\n    var _this = this;\n    if (!this.ondata) err(5);\n    // finishing or finished\n    if (this.d & 2) this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, false);else {\n      var f = strToU8(file.filename),\n        fl_1 = f.length;\n      var com = file.comment,\n        o = com && strToU8(com);\n      var u = fl_1 != file.filename.length || o && com.length != o.length;\n      var hl_1 = fl_1 + exfl(file.extra) + 30;\n      if (fl_1 > 65535) this.ondata(err(11, 0, 1), null, false);\n      var header = new u8(hl_1);\n      wzh(header, 0, file, f, u, -1);\n      var chks_1 = [header];\n      var pAll_1 = function () {\n        for (var _i = 0, chks_2 = chks_1; _i < chks_2.length; _i++) {\n          var chk = chks_2[_i];\n          _this.ondata(null, chk, false);\n        }\n        chks_1 = [];\n      };\n      var tr_1 = this.d;\n      this.d = 0;\n      var ind_1 = this.u.length;\n      var uf_1 = mrg(file, {\n        f: f,\n        u: u,\n        o: o,\n        t: function () {\n          if (file.terminate) file.terminate();\n        },\n        r: function () {\n          pAll_1();\n          if (tr_1) {\n            var nxt = _this.u[ind_1 + 1];\n            if (nxt) nxt.r();else _this.d = 1;\n          }\n          tr_1 = 1;\n        }\n      });\n      var cl_1 = 0;\n      file.ondata = function (err, dat, final) {\n        if (err) {\n          _this.ondata(err, dat, final);\n          _this.terminate();\n        } else {\n          cl_1 += dat.length;\n          chks_1.push(dat);\n          if (final) {\n            var dd = new u8(16);\n            wbytes(dd, 0, 0x8074B50);\n            wbytes(dd, 4, file.crc);\n            wbytes(dd, 8, cl_1);\n            wbytes(dd, 12, file.size);\n            chks_1.push(dd);\n            uf_1.c = cl_1, uf_1.b = hl_1 + cl_1 + 16, uf_1.crc = file.crc, uf_1.size = file.size;\n            if (tr_1) uf_1.r();\n            tr_1 = 1;\n          } else if (tr_1) pAll_1();\n        }\n      };\n      this.u.push(uf_1);\n    }\n  };\n  /**\n   * Ends the process of adding files and prepares to emit the final chunks.\n   * This *must* be called after adding all desired files for the resulting\n   * ZIP file to work properly.\n   */\n  Zip.prototype.end = function () {\n    var _this = this;\n    if (this.d & 2) {\n      this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, true);\n      return;\n    }\n    if (this.d) this.e();else this.u.push({\n      r: function () {\n        if (!(_this.d & 1)) return;\n        _this.u.splice(-1, 1);\n        _this.e();\n      },\n      t: function () {}\n    });\n    this.d = 3;\n  };\n  Zip.prototype.e = function () {\n    var bt = 0,\n      l = 0,\n      tl = 0;\n    for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n      var f = _a[_i];\n      tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n    }\n    var out = new u8(tl + 22);\n    for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\n      var f = _c[_b];\n      wzh(out, bt, f, f.f, f.u, -f.c - 2, l, f.o);\n      bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n    }\n    wzf(out, bt, this.u.length, tl, l);\n    this.ondata(null, out, true);\n    this.d = 2;\n  };\n  /**\n   * A method to terminate any internal workers used by the stream. Subsequent\n   * calls to add() will fail.\n   */\n  Zip.prototype.terminate = function () {\n    for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n      var f = _a[_i];\n      f.t();\n    }\n    this.d = 2;\n  };\n  return Zip;\n}();\nexport { Zip };\nexport function zip(data, opts, cb) {\n  if (!cb) cb = opts, opts = {};\n  if (typeof cb != 'function') err(7);\n  var r = {};\n  fltn(data, '', r, opts);\n  var k = Object.keys(r);\n  var lft = k.length,\n    o = 0,\n    tot = 0;\n  var slft = lft,\n    files = new Array(lft);\n  var term = [];\n  var tAll = function () {\n    for (var i = 0; i < term.length; ++i) term[i]();\n  };\n  var cbd = function (a, b) {\n    mt(function () {\n      cb(a, b);\n    });\n  };\n  mt(function () {\n    cbd = cb;\n  });\n  var cbf = function () {\n    var out = new u8(tot + 22),\n      oe = o,\n      cdl = tot - o;\n    tot = 0;\n    for (var i = 0; i < slft; ++i) {\n      var f = files[i];\n      try {\n        var l = f.c.length;\n        wzh(out, tot, f, f.f, f.u, l);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        var loc = tot + badd;\n        out.set(f.c, loc);\n        wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n      } catch (e) {\n        return cbd(e, null);\n      }\n    }\n    wzf(out, o, files.length, cdl, oe);\n    cbd(null, out);\n  };\n  if (!lft) cbf();\n  var _loop_1 = function (i) {\n    var fn = k[i];\n    var _a = r[fn],\n      file = _a[0],\n      p = _a[1];\n    var c = crc(),\n      size = file.length;\n    c.p(file);\n    var f = strToU8(fn),\n      s = f.length;\n    var com = p.comment,\n      m = com && strToU8(com),\n      ms = m && m.length;\n    var exl = exfl(p.extra);\n    var compression = p.level == 0 ? 0 : 8;\n    var cbl = function (e, d) {\n      if (e) {\n        tAll();\n        cbd(e, null);\n      } else {\n        var l = d.length;\n        files[i] = mrg(p, {\n          size: size,\n          crc: c.d(),\n          c: d,\n          f: f,\n          m: m,\n          u: s != fn.length || m && com.length != ms,\n          compression: compression\n        });\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n        if (! --lft) cbf();\n      }\n    };\n    if (s > 65535) cbl(err(11, 0, 1), null);\n    if (!compression) cbl(null, file);else if (size < 160000) {\n      try {\n        cbl(null, deflateSync(file, p));\n      } catch (e) {\n        cbl(e, null);\n      }\n    } else term.push(deflate(file, p, cbl));\n  };\n  // Cannot use lft because it can decrease\n  for (var i = 0; i < slft; ++i) {\n    _loop_1(i);\n  }\n  return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\nexport function zipSync(data, opts) {\n  if (!opts) opts = {};\n  var r = {};\n  var files = [];\n  fltn(data, '', r, opts);\n  var o = 0;\n  var tot = 0;\n  for (var fn in r) {\n    var _a = r[fn],\n      file = _a[0],\n      p = _a[1];\n    var compression = p.level == 0 ? 0 : 8;\n    var f = strToU8(fn),\n      s = f.length;\n    var com = p.comment,\n      m = com && strToU8(com),\n      ms = m && m.length;\n    var exl = exfl(p.extra);\n    if (s > 65535) err(11);\n    var d = compression ? deflateSync(file, p) : file,\n      l = d.length;\n    var c = crc();\n    c.p(file);\n    files.push(mrg(p, {\n      size: file.length,\n      crc: c.d(),\n      c: d,\n      f: f,\n      m: m,\n      u: s != fn.length || m && com.length != ms,\n      o: o,\n      compression: compression\n    }));\n    o += 30 + s + exl + l;\n    tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n  }\n  var out = new u8(tot + 22),\n    oe = o,\n    cdl = tot - o;\n  for (var i = 0; i < files.length; ++i) {\n    var f = files[i];\n    wzh(out, f.o, f, f.f, f.u, f.c.length);\n    var badd = 30 + f.f.length + exfl(f.extra);\n    out.set(f.c, f.o + badd);\n    wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n  }\n  wzf(out, o, files.length, cdl, oe);\n  return out;\n}\n/**\n * Streaming pass-through decompression for ZIP archives\n */\nvar UnzipPassThrough = /*#__PURE__*/function () {\n  function UnzipPassThrough() {}\n  UnzipPassThrough.prototype.push = function (data, final) {\n    this.ondata(null, data, final);\n  };\n  UnzipPassThrough.compression = 0;\n  return UnzipPassThrough;\n}();\nexport { UnzipPassThrough };\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */\nvar UnzipInflate = /*#__PURE__*/function () {\n  /**\n   * Creates a DEFLATE decompression that can be used in ZIP archives\n   */\n  function UnzipInflate() {\n    var _this = this;\n    this.i = new Inflate(function (dat, final) {\n      _this.ondata(null, dat, final);\n    });\n  }\n  UnzipInflate.prototype.push = function (data, final) {\n    try {\n      this.i.push(data, final);\n    } catch (e) {\n      this.ondata(e, null, final);\n    }\n  };\n  UnzipInflate.compression = 8;\n  return UnzipInflate;\n}();\nexport { UnzipInflate };\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */\nvar AsyncUnzipInflate = /*#__PURE__*/function () {\n  /**\n   * Creates a DEFLATE decompression that can be used in ZIP archives\n   */\n  function AsyncUnzipInflate(_, sz) {\n    var _this = this;\n    if (sz < 320000) {\n      this.i = new Inflate(function (dat, final) {\n        _this.ondata(null, dat, final);\n      });\n    } else {\n      this.i = new AsyncInflate(function (err, dat, final) {\n        _this.ondata(err, dat, final);\n      });\n      this.terminate = this.i.terminate;\n    }\n  }\n  AsyncUnzipInflate.prototype.push = function (data, final) {\n    if (this.i.terminate) data = slc(data, 0);\n    this.i.push(data, final);\n  };\n  AsyncUnzipInflate.compression = 8;\n  return AsyncUnzipInflate;\n}();\nexport { AsyncUnzipInflate };\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */\nvar Unzip = /*#__PURE__*/function () {\n  /**\n   * Creates a ZIP decompression stream\n   * @param cb The callback to call whenever a file in the ZIP archive is found\n   */\n  function Unzip(cb) {\n    this.onfile = cb;\n    this.k = [];\n    this.o = {\n      0: UnzipPassThrough\n    };\n    this.p = et;\n  }\n  /**\n   * Pushes a chunk to be unzipped\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n  Unzip.prototype.push = function (chunk, final) {\n    var _this = this;\n    if (!this.onfile) err(5);\n    if (!this.p) err(4);\n    if (this.c > 0) {\n      var len = Math.min(this.c, chunk.length);\n      var toAdd = chunk.subarray(0, len);\n      this.c -= len;\n      if (this.d) this.d.push(toAdd, !this.c);else this.k[0].push(toAdd);\n      chunk = chunk.subarray(len);\n      if (chunk.length) return this.push(chunk, final);\n    } else {\n      var f = 0,\n        i = 0,\n        is = void 0,\n        buf = void 0;\n      if (!this.p.length) buf = chunk;else if (!chunk.length) buf = this.p;else {\n        buf = new u8(this.p.length + chunk.length);\n        buf.set(this.p), buf.set(chunk, this.p.length);\n      }\n      var l = buf.length,\n        oc = this.c,\n        add = oc && this.d;\n      var _loop_2 = function () {\n        var _a;\n        var sig = b4(buf, i);\n        if (sig == 0x4034B50) {\n          f = 1, is = i;\n          this_1.d = null;\n          this_1.c = 0;\n          var bf = b2(buf, i + 6),\n            cmp_1 = b2(buf, i + 8),\n            u = bf & 2048,\n            dd = bf & 8,\n            fnl = b2(buf, i + 26),\n            es = b2(buf, i + 28);\n          if (l > i + 30 + fnl + es) {\n            var chks_3 = [];\n            this_1.k.unshift(chks_3);\n            f = 2;\n            var sc_1 = b4(buf, i + 18),\n              su_1 = b4(buf, i + 22);\n            var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n            if (sc_1 == 4294967295) {\n              _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n            } else if (dd) sc_1 = -1;\n            i += es;\n            this_1.c = sc_1;\n            var d_1;\n            var file_1 = {\n              name: fn_1,\n              compression: cmp_1,\n              start: function () {\n                if (!file_1.ondata) err(5);\n                if (!sc_1) file_1.ondata(null, et, true);else {\n                  var ctr = _this.o[cmp_1];\n                  if (!ctr) file_1.ondata(err(14, 'unknown compression type ' + cmp_1, 1), null, false);\n                  d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n                  d_1.ondata = function (err, dat, final) {\n                    file_1.ondata(err, dat, final);\n                  };\n                  for (var _i = 0, chks_4 = chks_3; _i < chks_4.length; _i++) {\n                    var dat = chks_4[_i];\n                    d_1.push(dat, false);\n                  }\n                  if (_this.k[0] == chks_3 && _this.c) _this.d = d_1;else d_1.push(et, true);\n                }\n              },\n              terminate: function () {\n                if (d_1 && d_1.terminate) d_1.terminate();\n              }\n            };\n            if (sc_1 >= 0) file_1.size = sc_1, file_1.originalSize = su_1;\n            this_1.onfile(file_1);\n          }\n          return \"break\";\n        } else if (oc) {\n          if (sig == 0x8074B50) {\n            is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n            return \"break\";\n          } else if (sig == 0x2014B50) {\n            is = i -= 4, f = 3, this_1.c = 0;\n            return \"break\";\n          }\n        }\n      };\n      var this_1 = this;\n      for (; i < l - 4; ++i) {\n        var state_1 = _loop_2();\n        if (state_1 === \"break\") break;\n      }\n      this.p = et;\n      if (oc < 0) {\n        var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n        if (add) add.push(dat, !!f);else this.k[+(f == 2)].push(dat);\n      }\n      if (f & 2) return this.push(buf.subarray(i), final);\n      this.p = buf.subarray(i);\n    }\n    if (final) {\n      if (this.c) err(13);\n      this.p = null;\n    }\n  };\n  /**\n   * Registers a decoder with the stream, allowing for files compressed with\n   * the compression type provided to be expanded correctly\n   * @param decoder The decoder constructor\n   */\n  Unzip.prototype.register = function (decoder) {\n    this.o[decoder.compression] = decoder;\n  };\n  return Unzip;\n}();\nexport { Unzip };\nvar mt = typeof queueMicrotask == 'function' ? queueMicrotask : typeof setTimeout == 'function' ? setTimeout : function (fn) {\n  fn();\n};\nexport function unzip(data, opts, cb) {\n  if (!cb) cb = opts, opts = {};\n  if (typeof cb != 'function') err(7);\n  var term = [];\n  var tAll = function () {\n    for (var i = 0; i < term.length; ++i) term[i]();\n  };\n  var files = {};\n  var cbd = function (a, b) {\n    mt(function () {\n      cb(a, b);\n    });\n  };\n  mt(function () {\n    cbd = cb;\n  });\n  var e = data.length - 22;\n  for (; b4(data, e) != 0x6054B50; --e) {\n    if (!e || data.length - e > 65558) {\n      cbd(err(13, 0, 1), null);\n      return tAll;\n    }\n  }\n  ;\n  var lft = b2(data, e + 8);\n  if (lft) {\n    var c = lft;\n    var o = b4(data, e + 16);\n    var z = o == 4294967295 || c == 65535;\n    if (z) {\n      var ze = b4(data, e - 12);\n      z = b4(data, ze) == 0x6064B50;\n      if (z) {\n        c = lft = b4(data, ze + 32);\n        o = b4(data, ze + 48);\n      }\n    }\n    var fltr = opts && opts.filter;\n    var _loop_3 = function (i) {\n      var _a = zh(data, o, z),\n        c_1 = _a[0],\n        sc = _a[1],\n        su = _a[2],\n        fn = _a[3],\n        no = _a[4],\n        off = _a[5],\n        b = slzh(data, off);\n      o = no;\n      var cbl = function (e, d) {\n        if (e) {\n          tAll();\n          cbd(e, null);\n        } else {\n          if (d) files[fn] = d;\n          if (! --lft) cbd(null, files);\n        }\n      };\n      if (!fltr || fltr({\n        name: fn,\n        size: sc,\n        originalSize: su,\n        compression: c_1\n      })) {\n        if (!c_1) cbl(null, slc(data, b, b + sc));else if (c_1 == 8) {\n          var infl = data.subarray(b, b + sc);\n          // Synchronously decompress under 512KB, or barely-compressed data\n          if (su < 524288 || sc > 0.8 * su) {\n            try {\n              cbl(null, inflateSync(infl, {\n                out: new u8(su)\n              }));\n            } catch (e) {\n              cbl(e, null);\n            }\n          } else term.push(inflate(infl, {\n            size: su\n          }, cbl));\n        } else cbl(err(14, 'unknown compression type ' + c_1, 1), null);\n      } else cbl(null, null);\n    };\n    for (var i = 0; i < c; ++i) {\n      _loop_3(i);\n    }\n  } else cbd(null, {});\n  return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @param opts The ZIP extraction options\n * @returns The decompressed files\n */\nexport function unzipSync(data, opts) {\n  var files = {};\n  var e = data.length - 22;\n  for (; b4(data, e) != 0x6054B50; --e) {\n    if (!e || data.length - e > 65558) err(13);\n  }\n  ;\n  var c = b2(data, e + 8);\n  if (!c) return {};\n  var o = b4(data, e + 16);\n  var z = o == 4294967295 || c == 65535;\n  if (z) {\n    var ze = b4(data, e - 12);\n    z = b4(data, ze) == 0x6064B50;\n    if (z) {\n      c = b4(data, ze + 32);\n      o = b4(data, ze + 48);\n    }\n  }\n  var fltr = opts && opts.filter;\n  for (var i = 0; i < c; ++i) {\n    var _a = zh(data, o, z),\n      c_2 = _a[0],\n      sc = _a[1],\n      su = _a[2],\n      fn = _a[3],\n      no = _a[4],\n      off = _a[5],\n      b = slzh(data, off);\n    o = no;\n    if (!fltr || fltr({\n      name: fn,\n      size: sc,\n      originalSize: su,\n      compression: c_2\n    })) {\n      if (!c_2) files[fn] = slc(data, b, b + sc);else if (c_2 == 8) files[fn] = inflateSync(data.subarray(b, b + sc), {\n        out: new u8(su)\n      });else err(14, 'unknown compression type ' + c_2);\n    }\n  }\n  return files;\n}", "import { NoColorSpace, DoubleSide, Color } from 'three';\nimport { strToU8, zipSync } from '../libs/fflate.module.js';\n\n/**\n * An exporter for USDZ.\n *\n * ```js\n * const exporter = new USDZExporter();\n * const arraybuffer = await exporter.parseAsync( scene );\n * ```\n *\n * @three_import import { USDZExporter } from 'three/addons/exporters/USDZExporter.js';\n */\nclass USDZExporter {\n  /**\n   * Constructs a new USDZ exporter.\n   */\n  constructor() {\n    /**\n     * A reference to a texture utils module.\n     *\n     * @type {?(WebGLTextureUtils|WebGPUTextureUtils)}\n     * @default null\n     */\n    this.textureUtils = null;\n  }\n\n  /**\n   * Sets the texture utils for this exporter. Only relevant when compressed textures have to be exported.\n   *\n   * Depending on whether you use {@link WebGLRenderer} or {@link WebGPURenderer}, you must inject the\n   * corresponding texture utils {@link WebGLTextureUtils} or {@link WebGPUTextureUtils}.\n   *\n   * @param {WebGLTextureUtils|WebGPUTextureUtils} utils - The texture utils.\n   */\n  setTextureUtils(utils) {\n    this.textureUtils = utils;\n  }\n\n  /**\n   * Parse the given 3D object and generates the USDZ output.\n   *\n   * @param {Object3D} scene - The 3D object to export.\n   * @param {USDZExporter~OnDone} onDone - A callback function that is executed when the export has finished.\n   * @param {USDZExporter~OnError} onError - A callback function that is executed when an error happens.\n   * @param {USDZExporter~Options} options - The export options.\n   */\n  parse(scene, onDone, onError, options) {\n    this.parseAsync(scene, options).then(onDone).catch(onError);\n  }\n\n  /**\n   * Async version of {@link USDZExporter#parse}.\n   *\n   * @async\n   * @param {Object3D} scene - The 3D object to export.\n   * @param {USDZExporter~Options} options - The export options.\n   * @return {Promise<ArrayBuffer>} A Promise that resolved with the exported USDZ data.\n   */\n  async parseAsync(scene, options = {}) {\n    options = Object.assign({\n      ar: {\n        anchoring: {\n          type: 'plane'\n        },\n        planeAnchoring: {\n          alignment: 'horizontal'\n        }\n      },\n      includeAnchoringProperties: true,\n      quickLookCompatible: false,\n      maxTextureSize: 1024\n    }, options);\n    const files = {};\n    const modelFileName = 'model.usda';\n\n    // model file should be first in USDZ archive so we init it here\n    files[modelFileName] = null;\n    let output = buildHeader();\n    output += buildSceneStart(options);\n    const materials = {};\n    const textures = {};\n    scene.traverseVisible(object => {\n      if (object.isMesh) {\n        const geometry = object.geometry;\n        const material = object.material;\n        if (material.isMeshStandardMaterial) {\n          const geometryFileName = 'geometries/Geometry_' + geometry.id + '.usda';\n          if (!(geometryFileName in files)) {\n            const meshObject = buildMeshObject(geometry);\n            files[geometryFileName] = buildUSDFileAsString(meshObject);\n          }\n          if (!(material.uuid in materials)) {\n            materials[material.uuid] = material;\n          }\n          output += buildXform(object, geometry, materials[material.uuid]);\n        } else {\n          console.warn('THREE.USDZExporter: Unsupported material type (USDZ only supports MeshStandardMaterial)', object);\n        }\n      } else if (object.isCamera) {\n        output += buildCamera(object);\n      }\n    });\n    output += buildSceneEnd();\n    output += buildMaterials(materials, textures, options.quickLookCompatible);\n    files[modelFileName] = strToU8(output);\n    output = null;\n    for (const id in textures) {\n      let texture = textures[id];\n      if (texture.isCompressedTexture === true) {\n        if (this.textureUtils === null) {\n          throw new Error('THREE.USDZExporter: setTextureUtils() must be called to process compressed textures.');\n        } else {\n          texture = await this.textureUtils.decompress(texture);\n        }\n      }\n      const canvas = imageToCanvas(texture.image, texture.flipY, options.maxTextureSize);\n      const blob = await new Promise(resolve => canvas.toBlob(resolve, 'image/png', 1));\n      files[`textures/Texture_${id}.png`] = new Uint8Array(await blob.arrayBuffer());\n    }\n\n    // 64 byte alignment\n    // https://github.com/101arrowz/fflate/issues/39#issuecomment-777263109\n\n    let offset = 0;\n    for (const filename in files) {\n      const file = files[filename];\n      const headerSize = 34 + filename.length;\n      offset += headerSize;\n      const offsetMod64 = offset & 63;\n      if (offsetMod64 !== 4) {\n        const padLength = 64 - offsetMod64;\n        const padding = new Uint8Array(padLength);\n        files[filename] = [file, {\n          extra: {\n            12345: padding\n          }\n        }];\n      }\n      offset = file.length;\n    }\n    return zipSync(files, {\n      level: 0\n    });\n  }\n}\nfunction imageToCanvas(image, flipY, maxTextureSize) {\n  if (typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement || typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement || typeof OffscreenCanvas !== 'undefined' && image instanceof OffscreenCanvas || typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n    const scale = maxTextureSize / Math.max(image.width, image.height);\n    const canvas = document.createElement('canvas');\n    canvas.width = image.width * Math.min(1, scale);\n    canvas.height = image.height * Math.min(1, scale);\n    const context = canvas.getContext('2d');\n\n    // TODO: We should be able to do this in the UsdTransform2d?\n\n    if (flipY === true) {\n      context.translate(0, canvas.height);\n      context.scale(1, -1);\n    }\n    context.drawImage(image, 0, 0, canvas.width, canvas.height);\n    return canvas;\n  } else {\n    throw new Error('THREE.USDZExporter: No valid image data found. Unable to process texture.');\n  }\n}\n\n//\n\nconst PRECISION = 7;\nfunction buildHeader() {\n  return `#usda 1.0\n(\n\tcustomLayerData = {\n\t\tstring creator = \"Three.js USDZExporter\"\n\t}\n\tdefaultPrim = \"Root\"\n\tmetersPerUnit = 1\n\tupAxis = \"Y\"\n)\n\n`;\n}\nfunction buildSceneStart(options) {\n  const alignment = options.includeAnchoringProperties === true ? `\n\t\ttoken preliminary:anchoring:type = \"${options.ar.anchoring.type}\"\n\t\ttoken preliminary:planeAnchoring:alignment = \"${options.ar.planeAnchoring.alignment}\"\n\t` : '';\n  return `def Xform \"Root\"\n{\n\tdef Scope \"Scenes\" (\n\t\tkind = \"sceneLibrary\"\n\t)\n\t{\n\t\tdef Xform \"Scene\" (\n\t\t\tcustomData = {\n\t\t\t\tbool preliminary_collidesWithEnvironment = 0\n\t\t\t\tstring sceneName = \"Scene\"\n\t\t\t}\n\t\t\tsceneName = \"Scene\"\n\t\t)\n\t\t{${alignment}\n`;\n}\nfunction buildSceneEnd() {\n  return `\n\t\t}\n\t}\n}\n\n`;\n}\nfunction buildUSDFileAsString(dataToInsert) {\n  let output = buildHeader();\n  output += dataToInsert;\n  return strToU8(output);\n}\n\n// Xform\n\nfunction buildXform(object, geometry, material) {\n  const name = 'Object_' + object.id;\n  const transform = buildMatrix(object.matrixWorld);\n  if (object.matrixWorld.determinant() < 0) {\n    console.warn('THREE.USDZExporter: USDZ does not support negative scales', object);\n  }\n  return `\t\t\tdef Xform \"${name}\" (\n\t\t\t\tprepend references = @./geometries/Geometry_${geometry.id}.usda@</Geometry>\n\t\t\t\tprepend apiSchemas = [\"MaterialBindingAPI\"]\n\t\t\t)\n\t\t\t{\n\t\t\t\tmatrix4d xformOp:transform = ${transform}\n\t\t\t\tuniform token[] xformOpOrder = [\"xformOp:transform\"]\n\n\t\t\t\trel material:binding = </Materials/Material_${material.id}>\n\t\t\t}\n\n`;\n}\nfunction buildMatrix(matrix) {\n  const array = matrix.elements;\n  return `( ${buildMatrixRow(array, 0)}, ${buildMatrixRow(array, 4)}, ${buildMatrixRow(array, 8)}, ${buildMatrixRow(array, 12)} )`;\n}\nfunction buildMatrixRow(array, offset) {\n  return `(${array[offset + 0]}, ${array[offset + 1]}, ${array[offset + 2]}, ${array[offset + 3]})`;\n}\n\n// Mesh\n\nfunction buildMeshObject(geometry) {\n  const mesh = buildMesh(geometry);\n  return `\ndef \"Geometry\"\n{\n${mesh}\n}\n`;\n}\nfunction buildMesh(geometry) {\n  const name = 'Geometry';\n  const attributes = geometry.attributes;\n  const count = attributes.position.count;\n  return `\n\tdef Mesh \"${name}\"\n\t{\n\t\tint[] faceVertexCounts = [${buildMeshVertexCount(geometry)}]\n\t\tint[] faceVertexIndices = [${buildMeshVertexIndices(geometry)}]\n\t\tnormal3f[] normals = [${buildVector3Array(attributes.normal, count)}] (\n\t\t\tinterpolation = \"vertex\"\n\t\t)\n\t\tpoint3f[] points = [${buildVector3Array(attributes.position, count)}]\n${buildPrimvars(attributes)}\n\t\tuniform token subdivisionScheme = \"none\"\n\t}\n`;\n}\nfunction buildMeshVertexCount(geometry) {\n  const count = geometry.index !== null ? geometry.index.count : geometry.attributes.position.count;\n  return Array(count / 3).fill(3).join(', ');\n}\nfunction buildMeshVertexIndices(geometry) {\n  const index = geometry.index;\n  const array = [];\n  if (index !== null) {\n    for (let i = 0; i < index.count; i++) {\n      array.push(index.getX(i));\n    }\n  } else {\n    const length = geometry.attributes.position.count;\n    for (let i = 0; i < length; i++) {\n      array.push(i);\n    }\n  }\n  return array.join(', ');\n}\nfunction buildVector3Array(attribute, count) {\n  if (attribute === undefined) {\n    console.warn('USDZExporter: Normals missing.');\n    return Array(count).fill('(0, 0, 0)').join(', ');\n  }\n  const array = [];\n  for (let i = 0; i < attribute.count; i++) {\n    const x = attribute.getX(i);\n    const y = attribute.getY(i);\n    const z = attribute.getZ(i);\n    array.push(`(${x.toPrecision(PRECISION)}, ${y.toPrecision(PRECISION)}, ${z.toPrecision(PRECISION)})`);\n  }\n  return array.join(', ');\n}\nfunction buildVector2Array(attribute) {\n  const array = [];\n  for (let i = 0; i < attribute.count; i++) {\n    const x = attribute.getX(i);\n    const y = attribute.getY(i);\n    array.push(`(${x.toPrecision(PRECISION)}, ${1 - y.toPrecision(PRECISION)})`);\n  }\n  return array.join(', ');\n}\nfunction buildPrimvars(attributes) {\n  let string = '';\n  for (let i = 0; i < 4; i++) {\n    const id = i > 0 ? i : '';\n    const attribute = attributes['uv' + id];\n    if (attribute !== undefined) {\n      string += `\n\t\ttexCoord2f[] primvars:st${id} = [${buildVector2Array(attribute)}] (\n\t\t\tinterpolation = \"vertex\"\n\t\t)`;\n    }\n  }\n\n  // vertex colors\n\n  const colorAttribute = attributes.color;\n  if (colorAttribute !== undefined) {\n    const count = colorAttribute.count;\n    string += `\n\tcolor3f[] primvars:displayColor = [${buildVector3Array(colorAttribute, count)}] (\n\t\tinterpolation = \"vertex\"\n\t\t)`;\n  }\n  return string;\n}\n\n// Materials\n\nfunction buildMaterials(materials, textures, quickLookCompatible = false) {\n  const array = [];\n  for (const uuid in materials) {\n    const material = materials[uuid];\n    array.push(buildMaterial(material, textures, quickLookCompatible));\n  }\n  return `def \"Materials\"\n{\n${array.join('')}\n}\n\n`;\n}\nfunction buildMaterial(material, textures, quickLookCompatible = false) {\n  // https://graphics.pixar.com/usd/docs/UsdPreviewSurface-Proposal.html\n\n  const pad = '\t\t\t';\n  const inputs = [];\n  const samplers = [];\n  function buildTexture(texture, mapType, color) {\n    const id = texture.source.id + '_' + texture.flipY;\n    textures[id] = texture;\n    const uv = texture.channel > 0 ? 'st' + texture.channel : 'st';\n    const WRAPPINGS = {\n      1000: 'repeat',\n      // RepeatWrapping\n      1001: 'clamp',\n      // ClampToEdgeWrapping\n      1002: 'mirror' // MirroredRepeatWrapping\n    };\n    const repeat = texture.repeat.clone();\n    const offset = texture.offset.clone();\n    const rotation = texture.rotation;\n\n    // rotation is around the wrong point. after rotation we need to shift offset again so that we're rotating around the right spot\n    const xRotationOffset = Math.sin(rotation);\n    const yRotationOffset = Math.cos(rotation);\n\n    // texture coordinates start in the opposite corner, need to correct\n    offset.y = 1 - offset.y - repeat.y;\n\n    // turns out QuickLook is buggy and interprets texture repeat inverted/applies operations in a different order.\n    // Apple Feedback: \tFB10036297 and FB11442287\n    if (quickLookCompatible) {\n      // This is NOT correct yet in QuickLook, but comes close for a range of models.\n      // It becomes more incorrect the bigger the offset is\n\n      offset.x = offset.x / repeat.x;\n      offset.y = offset.y / repeat.y;\n      offset.x += xRotationOffset / repeat.x;\n      offset.y += yRotationOffset - 1;\n    } else {\n      // results match glTF results exactly. verified correct in usdview.\n      offset.x += xRotationOffset * repeat.x;\n      offset.y += (1 - yRotationOffset) * repeat.y;\n    }\n    return `\n\t\tdef Shader \"PrimvarReader_${mapType}\"\n\t\t{\n\t\t\tuniform token info:id = \"UsdPrimvarReader_float2\"\n\t\t\tfloat2 inputs:fallback = (0.0, 0.0)\n\t\t\ttoken inputs:varname = \"${uv}\"\n\t\t\tfloat2 outputs:result\n\t\t}\n\n\t\tdef Shader \"Transform2d_${mapType}\"\n\t\t{\n\t\t\tuniform token info:id = \"UsdTransform2d\"\n\t\t\ttoken inputs:in.connect = </Materials/Material_${material.id}/PrimvarReader_${mapType}.outputs:result>\n\t\t\tfloat inputs:rotation = ${(rotation * (180 / Math.PI)).toFixed(PRECISION)}\n\t\t\tfloat2 inputs:scale = ${buildVector2(repeat)}\n\t\t\tfloat2 inputs:translation = ${buildVector2(offset)}\n\t\t\tfloat2 outputs:result\n\t\t}\n\n\t\tdef Shader \"Texture_${texture.id}_${mapType}\"\n\t\t{\n\t\t\tuniform token info:id = \"UsdUVTexture\"\n\t\t\tasset inputs:file = @textures/Texture_${id}.png@\n\t\t\tfloat2 inputs:st.connect = </Materials/Material_${material.id}/Transform2d_${mapType}.outputs:result>\n\t\t\t${color !== undefined ? 'float4 inputs:scale = ' + buildColor4(color) : ''}\n\t\t\ttoken inputs:sourceColorSpace = \"${texture.colorSpace === NoColorSpace ? 'raw' : 'sRGB'}\"\n\t\t\ttoken inputs:wrapS = \"${WRAPPINGS[texture.wrapS]}\"\n\t\t\ttoken inputs:wrapT = \"${WRAPPINGS[texture.wrapT]}\"\n\t\t\tfloat outputs:r\n\t\t\tfloat outputs:g\n\t\t\tfloat outputs:b\n\t\t\tfloat3 outputs:rgb\n\t\t\t${material.transparent || material.alphaTest > 0.0 ? 'float outputs:a' : ''}\n\t\t}`;\n  }\n  if (material.side === DoubleSide) {\n    console.warn('THREE.USDZExporter: USDZ does not support double sided materials', material);\n  }\n  if (material.map !== null) {\n    inputs.push(`${pad}color3f inputs:diffuseColor.connect = </Materials/Material_${material.id}/Texture_${material.map.id}_diffuse.outputs:rgb>`);\n    if (material.transparent) {\n      inputs.push(`${pad}float inputs:opacity.connect = </Materials/Material_${material.id}/Texture_${material.map.id}_diffuse.outputs:a>`);\n    } else if (material.alphaTest > 0.0) {\n      inputs.push(`${pad}float inputs:opacity.connect = </Materials/Material_${material.id}/Texture_${material.map.id}_diffuse.outputs:a>`);\n      inputs.push(`${pad}float inputs:opacityThreshold = ${material.alphaTest}`);\n    }\n    samplers.push(buildTexture(material.map, 'diffuse', material.color));\n  } else {\n    inputs.push(`${pad}color3f inputs:diffuseColor = ${buildColor(material.color)}`);\n  }\n  if (material.emissiveMap !== null) {\n    inputs.push(`${pad}color3f inputs:emissiveColor.connect = </Materials/Material_${material.id}/Texture_${material.emissiveMap.id}_emissive.outputs:rgb>`);\n    samplers.push(buildTexture(material.emissiveMap, 'emissive', new Color(material.emissive.r * material.emissiveIntensity, material.emissive.g * material.emissiveIntensity, material.emissive.b * material.emissiveIntensity)));\n  } else if (material.emissive.getHex() > 0) {\n    inputs.push(`${pad}color3f inputs:emissiveColor = ${buildColor(material.emissive)}`);\n  }\n  if (material.normalMap !== null) {\n    inputs.push(`${pad}normal3f inputs:normal.connect = </Materials/Material_${material.id}/Texture_${material.normalMap.id}_normal.outputs:rgb>`);\n    samplers.push(buildTexture(material.normalMap, 'normal'));\n  }\n  if (material.aoMap !== null) {\n    inputs.push(`${pad}float inputs:occlusion.connect = </Materials/Material_${material.id}/Texture_${material.aoMap.id}_occlusion.outputs:r>`);\n    samplers.push(buildTexture(material.aoMap, 'occlusion', new Color(material.aoMapIntensity, material.aoMapIntensity, material.aoMapIntensity)));\n  }\n  if (material.roughnessMap !== null) {\n    inputs.push(`${pad}float inputs:roughness.connect = </Materials/Material_${material.id}/Texture_${material.roughnessMap.id}_roughness.outputs:g>`);\n    samplers.push(buildTexture(material.roughnessMap, 'roughness', new Color(material.roughness, material.roughness, material.roughness)));\n  } else {\n    inputs.push(`${pad}float inputs:roughness = ${material.roughness}`);\n  }\n  if (material.metalnessMap !== null) {\n    inputs.push(`${pad}float inputs:metallic.connect = </Materials/Material_${material.id}/Texture_${material.metalnessMap.id}_metallic.outputs:b>`);\n    samplers.push(buildTexture(material.metalnessMap, 'metallic', new Color(material.metalness, material.metalness, material.metalness)));\n  } else {\n    inputs.push(`${pad}float inputs:metallic = ${material.metalness}`);\n  }\n  if (material.alphaMap !== null) {\n    inputs.push(`${pad}float inputs:opacity.connect = </Materials/Material_${material.id}/Texture_${material.alphaMap.id}_opacity.outputs:r>`);\n    inputs.push(`${pad}float inputs:opacityThreshold = 0.0001`);\n    samplers.push(buildTexture(material.alphaMap, 'opacity'));\n  } else {\n    inputs.push(`${pad}float inputs:opacity = ${material.opacity}`);\n  }\n  if (material.isMeshPhysicalMaterial) {\n    if (material.clearcoatMap !== null) {\n      inputs.push(`${pad}float inputs:clearcoat.connect = </Materials/Material_${material.id}/Texture_${material.clearcoatMap.id}_clearcoat.outputs:r>`);\n      samplers.push(buildTexture(material.clearcoatMap, 'clearcoat', new Color(material.clearcoat, material.clearcoat, material.clearcoat)));\n    } else {\n      inputs.push(`${pad}float inputs:clearcoat = ${material.clearcoat}`);\n    }\n    if (material.clearcoatRoughnessMap !== null) {\n      inputs.push(`${pad}float inputs:clearcoatRoughness.connect = </Materials/Material_${material.id}/Texture_${material.clearcoatRoughnessMap.id}_clearcoatRoughness.outputs:g>`);\n      samplers.push(buildTexture(material.clearcoatRoughnessMap, 'clearcoatRoughness', new Color(material.clearcoatRoughness, material.clearcoatRoughness, material.clearcoatRoughness)));\n    } else {\n      inputs.push(`${pad}float inputs:clearcoatRoughness = ${material.clearcoatRoughness}`);\n    }\n    inputs.push(`${pad}float inputs:ior = ${material.ior}`);\n  }\n  return `\n\tdef Material \"Material_${material.id}\"\n\t{\n\t\tdef Shader \"PreviewSurface\"\n\t\t{\n\t\t\tuniform token info:id = \"UsdPreviewSurface\"\n${inputs.join('\\n')}\n\t\t\tint inputs:useSpecularWorkflow = 0\n\t\t\ttoken outputs:surface\n\t\t}\n\n\t\ttoken outputs:surface.connect = </Materials/Material_${material.id}/PreviewSurface.outputs:surface>\n\n${samplers.join('\\n')}\n\n\t}\n`;\n}\nfunction buildColor(color) {\n  return `(${color.r}, ${color.g}, ${color.b})`;\n}\nfunction buildColor4(color) {\n  return `(${color.r}, ${color.g}, ${color.b}, 1.0)`;\n}\nfunction buildVector2(vector) {\n  return `(${vector.x}, ${vector.y})`;\n}\nfunction buildCamera(camera) {\n  const name = camera.name ? camera.name : 'Camera_' + camera.id;\n  const transform = buildMatrix(camera.matrixWorld);\n  if (camera.matrixWorld.determinant() < 0) {\n    console.warn('THREE.USDZExporter: USDZ does not support negative scales', camera);\n  }\n  if (camera.isOrthographicCamera) {\n    return `def Camera \"${name}\"\n\t\t{\n\t\t\tmatrix4d xformOp:transform = ${transform}\n\t\t\tuniform token[] xformOpOrder = [\"xformOp:transform\"]\n\n\t\t\tfloat2 clippingRange = (${camera.near.toPrecision(PRECISION)}, ${camera.far.toPrecision(PRECISION)})\n\t\t\tfloat horizontalAperture = ${((Math.abs(camera.left) + Math.abs(camera.right)) * 10).toPrecision(PRECISION)}\n\t\t\tfloat verticalAperture = ${((Math.abs(camera.top) + Math.abs(camera.bottom)) * 10).toPrecision(PRECISION)}\n\t\t\ttoken projection = \"orthographic\"\n\t\t}\n\n\t`;\n  } else {\n    return `def Camera \"${name}\"\n\t\t{\n\t\t\tmatrix4d xformOp:transform = ${transform}\n\t\t\tuniform token[] xformOpOrder = [\"xformOp:transform\"]\n\n\t\t\tfloat2 clippingRange = (${camera.near.toPrecision(PRECISION)}, ${camera.far.toPrecision(PRECISION)})\n\t\t\tfloat focalLength = ${camera.getFocalLength().toPrecision(PRECISION)}\n\t\t\tfloat focusDistance = ${camera.focus.toPrecision(PRECISION)}\n\t\t\tfloat horizontalAperture = ${camera.getFilmWidth().toPrecision(PRECISION)}\n\t\t\ttoken projection = \"perspective\"\n\t\t\tfloat verticalAperture = ${camera.getFilmHeight().toPrecision(PRECISION)}\n\t\t}\n\n\t`;\n  }\n}\n\n/**\n * Export options of `USDZExporter`.\n *\n * @typedef {Object} USDZExporter~Options\n * @property {number} [maxTextureSize=1024] - The maximum texture size that is going to be exported.\n * @property {boolean} [includeAnchoringProperties=true] - Whether to include anchoring properties or not.\n * @property {Object} [ar] - If `includeAnchoringProperties` is set to `true`, the anchoring type and alignment\n * can be configured via `ar.anchoring.type` and `ar.planeAnchoring.alignment`.\n * @property {boolean} [quickLookCompatible=false] - Whether to make the exported USDZ compatible to QuickLook\n * which means the asset is modified to accommodate the bugs FB10036297 and FB11442287 (Apple Feedback).\n **/\n\n/**\n * onDone callback of `USDZExporter`.\n *\n * @callback USDZExporter~OnDone\n * @param {ArrayBuffer} result - The generated USDZ.\n */\n\n/**\n * onError callback of `USDZExporter`.\n *\n * @callback USDZExporter~OnError\n * @param {Error} error - The error object.\n */\n\nexport { USDZExporter };", "/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { parseExpressions } from './parsers.js';\n/**\n * For our purposes, an enumeration is a fixed set of CSS-expression-compatible\n * names. When serialized, a selected subset of the members may be specified as\n * whitespace-separated strings. An enumeration deserializer is a function that\n * parses a serialized subset of an enumeration and returns any members that are\n * found as a Set.\n *\n * The following example will produce a deserializer for the days of the\n * week:\n *\n * const deserializeDaysOfTheWeek = enumerationDeserializer([\n *   'Monday',\n *   'Tuesday',\n *   'Wednesday',\n *   'Thursday',\n *   'Friday',\n *   'Saturday',\n *   'Sunday'\n * ]);\n */\nexport const enumerationDeserializer = allowedNames => valueString => {\n  try {\n    const expressions = parseExpressions(valueString);\n    const names = (expressions.length ? expressions[0].terms : []).filter(valueNode => valueNode && valueNode.type === 'ident').map(valueNode => valueNode.value).filter(name => allowedNames.indexOf(name) > -1);\n    return new Set(names);\n  } catch (_error) {}\n  return new Set();\n};\n", "/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { property } from 'lit/decorators.js';\nimport { USDZExporter } from 'three/examples/jsm/exporters/USDZExporter.js';\nimport { IS_AR_QUICKLOOK_CANDIDATE, IS_SCENEVIEWER_CANDIDATE, IS_WEBXR_AR_CANDIDATE } from '../constants.js';\nimport { $needsRender, $progressTracker, $renderer, $scene, $shouldAttemptPreload, $updateSource } from '../model-viewer-base.js';\nimport { enumerationDeserializer } from '../styles/deserializers.js';\nimport { ARStatus, ARTracking } from '../three-components/ARRenderer.js';\nimport { waitForEvent } from '../utilities.js';\nlet isWebXRBlocked = false;\nlet isSceneViewerBlocked = false;\nconst noArViewerSigil = '#model-viewer-no-ar-fallback';\nconst deserializeARModes = enumerationDeserializer(['quick-look', 'scene-viewer', 'webxr', 'none']);\nconst DEFAULT_AR_MODES = 'webxr scene-viewer quick-look';\nconst ARMode = {\n  QUICK_LOOK: 'quick-look',\n  SCENE_VIEWER: 'scene-viewer',\n  WEBXR: 'webxr',\n  NONE: 'none'\n};\nconst $arButtonContainer = Symbol('arButtonContainer');\nconst $enterARWithWebXR = Symbol('enterARWithWebXR');\nexport const $openSceneViewer = Symbol('openSceneViewer');\nexport const $openIOSARQuickLook = Symbol('openIOSARQuickLook');\nconst $canActivateAR = Symbol('canActivateAR');\nconst $arMode = Symbol('arMode');\nconst $arModes = Symbol('arModes');\nconst $arAnchor = Symbol('arAnchor');\nconst $preload = Symbol('preload');\nconst $onARButtonContainerClick = Symbol('onARButtonContainerClick');\nconst $onARStatus = Symbol('onARStatus');\nconst $onARTracking = Symbol('onARTracking');\nconst $onARTap = Symbol('onARTap');\nconst $selectARMode = Symbol('selectARMode');\nconst $triggerLoad = Symbol('triggerLoad');\nexport const ARMixin = ModelViewerElement => {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n  class ARModelViewerElement extends ModelViewerElement {\n    constructor() {\n      super(...arguments);\n      this.ar = false;\n      this.arScale = 'auto';\n      this.arUsdzMaxTextureSize = 'auto';\n      this.arPlacement = 'floor';\n      this.arModes = DEFAULT_AR_MODES;\n      this.iosSrc = null;\n      this.xrEnvironment = false;\n      this[_a] = false;\n      // TODO: Add this to the shadow root as part of this mixin's\n      // implementation:\n      this[_b] = this.shadowRoot.querySelector('.ar-button');\n      this[_c] = document.createElement('a');\n      this[_d] = new Set();\n      this[_e] = ARMode.NONE;\n      this[_f] = false;\n      this[_g] = event => {\n        event.preventDefault();\n        this.activateAR();\n      };\n      this[_h] = ({\n        status\n      }) => {\n        if (status === ARStatus.NOT_PRESENTING || this[$renderer].arRenderer.presentedScene === this[$scene]) {\n          this.setAttribute('ar-status', status);\n          this.dispatchEvent(new CustomEvent('ar-status', {\n            detail: {\n              status\n            }\n          }));\n          if (status === ARStatus.NOT_PRESENTING) {\n            this.removeAttribute('ar-tracking');\n          } else if (status === ARStatus.SESSION_STARTED) {\n            this.setAttribute('ar-tracking', ARTracking.TRACKING);\n          }\n        }\n      };\n      this[_j] = ({\n        status\n      }) => {\n        this.setAttribute('ar-tracking', status);\n        this.dispatchEvent(new CustomEvent('ar-tracking', {\n          detail: {\n            status\n          }\n        }));\n      };\n      this[_k] = event => {\n        if (event.data == '_apple_ar_quicklook_button_tapped') {\n          this.dispatchEvent(new CustomEvent('quick-look-button-tapped'));\n        }\n      };\n    }\n    get canActivateAR() {\n      return this[$arMode] !== ARMode.NONE;\n    }\n    connectedCallback() {\n      super.connectedCallback();\n      this[$renderer].arRenderer.addEventListener('status', this[$onARStatus]);\n      this.setAttribute('ar-status', ARStatus.NOT_PRESENTING);\n      this[$renderer].arRenderer.addEventListener('tracking', this[$onARTracking]);\n      this[$arAnchor].addEventListener('message', this[$onARTap]);\n    }\n    disconnectedCallback() {\n      super.disconnectedCallback();\n      this[$renderer].arRenderer.removeEventListener('status', this[$onARStatus]);\n      this[$renderer].arRenderer.removeEventListener('tracking', this[$onARTracking]);\n      this[$arAnchor].removeEventListener('message', this[$onARTap]);\n    }\n    update(changedProperties) {\n      super.update(changedProperties);\n      if (changedProperties.has('arScale')) {\n        this[$scene].canScale = this.arScale !== 'fixed';\n      }\n      if (changedProperties.has('arPlacement')) {\n        this[$scene].updateShadow();\n        this[$needsRender]();\n      }\n      if (changedProperties.has('arModes')) {\n        this[$arModes] = deserializeARModes(this.arModes);\n      }\n      if (changedProperties.has('ar') || changedProperties.has('arModes') || changedProperties.has('src') || changedProperties.has('iosSrc') || changedProperties.has('arUsdzMaxTextureSize')) {\n        this[$selectARMode]();\n      }\n    }\n    /**\n     * Activates AR. Note that for any mode that is not WebXR-based, this\n     * method most likely has to be called synchronous from a user\n     * interaction handler. Otherwise, attempts to activate modes that\n     * require user interaction will most likely be ignored.\n     */\n    async activateAR() {\n      switch (this[$arMode]) {\n        case ARMode.QUICK_LOOK:\n          await this[$openIOSARQuickLook]();\n          break;\n        case ARMode.WEBXR:\n          await this[$enterARWithWebXR]();\n          break;\n        case ARMode.SCENE_VIEWER:\n          this[$openSceneViewer]();\n          break;\n        default:\n          console.warn('No AR Mode can be activated. This is probably due to missing \\\nconfiguration or device capabilities');\n          break;\n      }\n    }\n    async [(_a = $canActivateAR, _b = $arButtonContainer, _c = $arAnchor, _d = $arModes, _e = $arMode, _f = $preload, _g = $onARButtonContainerClick, _h = $onARStatus, _j = $onARTracking, _k = $onARTap, $selectARMode)]() {\n      var _l;\n      let arMode = ARMode.NONE;\n      if (this.ar) {\n        if (this.src != null) {\n          for (const value of this[$arModes]) {\n            if (value === 'webxr' && IS_WEBXR_AR_CANDIDATE && !isWebXRBlocked && (await this[$renderer].arRenderer.supportsPresentation())) {\n              arMode = ARMode.WEBXR;\n              break;\n            }\n            if (value === 'scene-viewer' && !isSceneViewerBlocked && (IS_SCENEVIEWER_CANDIDATE || navigator.userAgentData && navigator.userAgentData.getHighEntropyValues && ((_l = (await navigator.userAgentData.getHighEntropyValues(['formFactor'])).formFactor) === null || _l === void 0 ? void 0 : _l.includes('XR')))) {\n              arMode = ARMode.SCENE_VIEWER;\n              break;\n            }\n            if (value === 'quick-look' && IS_AR_QUICKLOOK_CANDIDATE) {\n              arMode = ARMode.QUICK_LOOK;\n              break;\n            }\n          }\n        }\n        // The presence of ios-src overrides the absence of quick-look\n        // ar-mode.\n        if (arMode === ARMode.NONE && this.iosSrc != null && IS_AR_QUICKLOOK_CANDIDATE) {\n          arMode = ARMode.QUICK_LOOK;\n        }\n      }\n      if (arMode !== ARMode.NONE) {\n        this[$arButtonContainer].classList.add('enabled');\n        this[$arButtonContainer].addEventListener('click', this[$onARButtonContainerClick]);\n      } else if (this[$arButtonContainer].classList.contains('enabled')) {\n        this[$arButtonContainer].removeEventListener('click', this[$onARButtonContainerClick]);\n        this[$arButtonContainer].classList.remove('enabled');\n        // If AR went from working to not, notify the element.\n        const status = ARStatus.FAILED;\n        this.setAttribute('ar-status', status);\n        this.dispatchEvent(new CustomEvent('ar-status', {\n          detail: {\n            status\n          }\n        }));\n      }\n      this[$arMode] = arMode;\n    }\n    async [$enterARWithWebXR]() {\n      console.log('Attempting to present in AR with WebXR...');\n      await this[$triggerLoad]();\n      try {\n        this[$arButtonContainer].removeEventListener('click', this[$onARButtonContainerClick]);\n        const {\n          arRenderer\n        } = this[$renderer];\n        arRenderer.placeOnWall = this.arPlacement === 'wall';\n        await arRenderer.present(this[$scene], this.xrEnvironment);\n      } catch (error) {\n        console.warn('Error while trying to present in AR with WebXR');\n        console.error(error);\n        await this[$renderer].arRenderer.stopPresenting();\n        isWebXRBlocked = true;\n        console.warn('Falling back to next ar-mode');\n        await this[$selectARMode]();\n        this.activateAR();\n      } finally {\n        this[$selectARMode]();\n      }\n    }\n    async [$triggerLoad]() {\n      if (!this.loaded) {\n        this[$preload] = true;\n        this[$updateSource]();\n        await waitForEvent(this, 'load');\n        this[$preload] = false;\n      }\n    }\n    [$shouldAttemptPreload]() {\n      return super[$shouldAttemptPreload]() || this[$preload];\n    }\n    /**\n     * Takes a URL and a title string, and attempts to launch Scene Viewer on\n     * the current device.\n     */\n    [$openSceneViewer]() {\n      const location = self.location.toString();\n      const locationUrl = new URL(location);\n      const modelUrl = new URL(this.src, location);\n      if (modelUrl.hash) modelUrl.hash = '';\n      const params = new URLSearchParams(modelUrl.search);\n      locationUrl.hash = noArViewerSigil;\n      // modelUrl can contain title/link/sound etc.\n      params.set('mode', 'ar_preferred');\n      if (!params.has('disable_occlusion')) {\n        params.set('disable_occlusion', 'true');\n      }\n      if (this.arScale === 'fixed') {\n        params.set('resizable', 'false');\n      }\n      if (this.arPlacement === 'wall') {\n        params.set('enable_vertical_placement', 'true');\n      }\n      if (params.has('sound')) {\n        const soundUrl = new URL(params.get('sound'), location);\n        params.set('sound', soundUrl.toString());\n      }\n      if (params.has('link')) {\n        const linkUrl = new URL(params.get('link'), location);\n        params.set('link', linkUrl.toString());\n      }\n      const intent = `intent://arvr.google.com/scene-viewer/1.2?${params.toString() + '&file=' + encodeURIComponent(modelUrl.toString())}#Intent;scheme=https;package=com.google.android.googlequicksearchbox;action=android.intent.action.VIEW;S.browser_fallback_url=${encodeURIComponent(locationUrl.toString())};end;`;\n      const undoHashChange = () => {\n        if (self.location.hash === noArViewerSigil) {\n          isSceneViewerBlocked = true;\n          // The new history will be the current URL with a new hash.\n          // Go back one step so that we reset to the expected URL.\n          // NOTE(cdata): this should not invoke any browser-level navigation\n          // because hash-only changes modify the URL in-place without\n          // navigating:\n          self.history.back();\n          console.warn('Error while trying to present in AR with Scene Viewer');\n          console.warn('Falling back to next ar-mode');\n          this[$selectARMode]();\n          // Would be nice to activateAR() here, but webXR fails due to not\n          // seeing a user activation.\n        }\n      };\n      self.addEventListener('hashchange', undoHashChange, {\n        once: true\n      });\n      this[$arAnchor].setAttribute('href', intent);\n      console.log('Attempting to present in AR with Scene Viewer...');\n      this[$arAnchor].click();\n    }\n    /**\n     * Takes a URL to a USDZ file and sets the appropriate fields so that\n     * Safari iOS can intent to their AR Quick Look.\n     */\n    async [$openIOSARQuickLook]() {\n      const generateUsdz = !this.iosSrc;\n      this[$arButtonContainer].classList.remove('enabled');\n      const objectURL = generateUsdz ? await this.prepareUSDZ() : this.iosSrc;\n      const modelUrl = new URL(objectURL, self.location.toString());\n      if (generateUsdz) {\n        const location = self.location.toString();\n        const locationUrl = new URL(location);\n        const srcUrl = new URL(this.src, locationUrl);\n        if (srcUrl.hash) {\n          modelUrl.hash = srcUrl.hash;\n        }\n      }\n      if (this.arScale === 'fixed') {\n        if (modelUrl.hash) {\n          modelUrl.hash += '&';\n        }\n        modelUrl.hash += 'allowsContentScaling=0';\n      }\n      const anchor = this[$arAnchor];\n      anchor.setAttribute('rel', 'ar');\n      const img = document.createElement('img');\n      anchor.appendChild(img);\n      anchor.setAttribute('href', modelUrl.toString());\n      if (generateUsdz) {\n        anchor.setAttribute('download', 'model.usdz');\n      }\n      // attach anchor to shadow DOM to ensure iOS16 ARQL banner click message\n      // event propagation\n      anchor.style.display = 'none';\n      if (!anchor.isConnected) this.shadowRoot.appendChild(anchor);\n      console.log('Attempting to present in AR with Quick Look...');\n      anchor.click();\n      anchor.removeChild(img);\n      if (generateUsdz) {\n        URL.revokeObjectURL(objectURL);\n      }\n      this[$arButtonContainer].classList.add('enabled');\n    }\n    async prepareUSDZ() {\n      const updateSourceProgress = this[$progressTracker].beginActivity('usdz-conversion');\n      await this[$triggerLoad]();\n      const {\n        model,\n        shadow,\n        target\n      } = this[$scene];\n      if (model == null) {\n        return '';\n      }\n      let visible = false;\n      // Remove shadow from export\n      if (shadow != null) {\n        visible = shadow.visible;\n        shadow.visible = false;\n      }\n      updateSourceProgress(0.2);\n      const exporter = new USDZExporter();\n      target.remove(model);\n      model.position.copy(target.position);\n      model.updateWorldMatrix(false, true);\n      const arraybuffer = await exporter.parseAsync(model, {\n        maxTextureSize: isNaN(this.arUsdzMaxTextureSize) ? Infinity : Math.max(parseInt(this.arUsdzMaxTextureSize), 16)\n      });\n      model.position.set(0, 0, 0);\n      target.add(model);\n      const blob = new Blob([arraybuffer], {\n        type: 'model/vnd.usdz+zip'\n      });\n      const url = URL.createObjectURL(blob);\n      updateSourceProgress(1);\n      if (shadow != null) {\n        shadow.visible = visible;\n      }\n      return url;\n    }\n  }\n  __decorate([property({\n    type: Boolean,\n    attribute: 'ar'\n  })], ARModelViewerElement.prototype, \"ar\", void 0);\n  __decorate([property({\n    type: String,\n    attribute: 'ar-scale'\n  })], ARModelViewerElement.prototype, \"arScale\", void 0);\n  __decorate([property({\n    type: String,\n    attribute: 'ar-usdz-max-texture-size'\n  })], ARModelViewerElement.prototype, \"arUsdzMaxTextureSize\", void 0);\n  __decorate([property({\n    type: String,\n    attribute: 'ar-placement'\n  })], ARModelViewerElement.prototype, \"arPlacement\", void 0);\n  __decorate([property({\n    type: String,\n    attribute: 'ar-modes'\n  })], ARModelViewerElement.prototype, \"arModes\", void 0);\n  __decorate([property({\n    type: String,\n    attribute: 'ios-src'\n  })], ARModelViewerElement.prototype, \"iosSrc\", void 0);\n  __decorate([property({\n    type: Boolean,\n    attribute: 'xr-environment'\n  })], ARModelViewerElement.prototype, \"xrEnvironment\", void 0);\n  return ARModelViewerElement;\n};\n", "/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { property } from 'lit/decorators.js';\nimport { Vector3 } from 'three';\nimport { $altDefaulted, $announceModelVisibility, $getModelIsVisible, $isElementInViewport, $progressTracker, $scene, $shouldAttemptPreload, $updateSource, $userInputElement, toVector3D } from '../model-viewer-base.js';\nimport { $loader, CachingGLTFLoader } from '../three-components/CachingGLTFLoader.js';\nimport { Renderer } from '../three-components/Renderer.js';\nimport { throttle } from '../utilities.js';\nexport const PROGRESS_BAR_UPDATE_THRESHOLD = 100;\nconst DEFAULT_DRACO_DECODER_LOCATION = 'https://www.gstatic.com/draco/versioned/decoders/1.5.6/';\nconst DEFAULT_KTX2_TRANSCODER_LOCATION = 'https://www.gstatic.com/basis-universal/versioned/2021-04-15-ba1c3e4/';\nconst DEFAULT_LOTTIE_LOADER_LOCATION = 'https://cdn.jsdelivr.net/npm/three@0.149.0/examples/jsm/loaders/LottieLoader.js';\nconst RevealStrategy = {\n  AUTO: 'auto',\n  MANUAL: 'manual'\n};\nconst LoadingStrategy = {\n  AUTO: 'auto',\n  LAZY: 'lazy',\n  EAGER: 'eager'\n};\nexport const $defaultProgressBarElement = Symbol('defaultProgressBarElement');\nexport const $posterContainerElement = Symbol('posterContainerElement');\nexport const $defaultPosterElement = Symbol('defaultPosterElement');\nconst $shouldDismissPoster = Symbol('shouldDismissPoster');\nconst $hidePoster = Symbol('hidePoster');\nconst $modelIsRevealed = Symbol('modelIsRevealed');\nconst $updateProgressBar = Symbol('updateProgressBar');\nconst $ariaLabelCallToAction = Symbol('ariaLabelCallToAction');\nconst $onProgress = Symbol('onProgress');\n/**\n * LoadingMixin implements features related to lazy loading, as well as\n * presentation details related to the pre-load / pre-render presentation of a\n * <model-viewer>\n *\n * This mixin implements support for models with DRACO-compressed meshes.\n * The DRACO decoder will be loaded on-demand if a glTF that uses the DRACO mesh\n * compression extension is encountered.\n *\n * By default, the DRACO decoder will be loaded from a Google CDN. It is\n * possible to customize where the decoder is loaded from by defining a global\n * configuration option for `<model-viewer>` like so:\n *\n * ```html\n * <script>\n * self.ModelViewerElement = self.ModelViewerElement || {};\n * self.ModelViewerElement.dracoDecoderLocation =\n *     'http://example.com/location/of/draco/decoder/files/';\n * </script>\n * ```\n *\n * Note that the above configuration strategy must be performed *before* the\n * first `<model-viewer>` element is created in the browser. The configuration\n * can be done anywhere, but the easiest way to ensure it is done at the right\n * time is to do it in the `<head>` of the HTML document. This is the\n * recommended way to set the location because it is most compatible with\n * scenarios where the `<model-viewer>` library is lazily loaded.\n *\n * If you absolutely have to set the DRACO decoder location *after* the first\n * `<model-viewer>` element is created, you can do it this way:\n *\n * ```html\n * <script>\n * const ModelViewerElement = customElements.get('model-viewer');\n * ModelViewerElement.dracoDecoderLocation =\n *     'http://example.com/location/of/draco/decoder/files/';\n * </script>\n * ```\n *\n * Note that the above configuration approach will not work until *after*\n * `<model-viewer>` is defined in the browser. Also note that this configuration\n * *must* be set *before* the first DRACO model is fully loaded.\n *\n * It is recommended that users who intend to take advantage of DRACO mesh\n * compression consider whether or not it is acceptable for their use case to\n * have code side-loaded from a Google CDN. If it is not acceptable, then the\n * location must be customized before loading any DRACO models in order to cause\n * the decoder to be loaded from an alternative, acceptable location.\n */\nexport const LoadingMixin = ModelViewerElement => {\n  var _a, _b, _c, _d, _e, _f, _g, _h;\n  class LoadingModelViewerElement extends ModelViewerElement {\n    static set dracoDecoderLocation(value) {\n      CachingGLTFLoader.setDRACODecoderLocation(value);\n    }\n    static get dracoDecoderLocation() {\n      return CachingGLTFLoader.getDRACODecoderLocation();\n    }\n    static set ktx2TranscoderLocation(value) {\n      CachingGLTFLoader.setKTX2TranscoderLocation(value);\n    }\n    static get ktx2TranscoderLocation() {\n      return CachingGLTFLoader.getKTX2TranscoderLocation();\n    }\n    static set meshoptDecoderLocation(value) {\n      CachingGLTFLoader.setMeshoptDecoderLocation(value);\n    }\n    static get meshoptDecoderLocation() {\n      return CachingGLTFLoader.getMeshoptDecoderLocation();\n    }\n    static set lottieLoaderLocation(value) {\n      Renderer.singleton.textureUtils.lottieLoaderUrl = value;\n    }\n    static get lottieLoaderLocation() {\n      return Renderer.singleton.textureUtils.lottieLoaderUrl;\n    }\n    /**\n     * If provided, the callback will be passed each resource URL before a\n     * request is sent. The callback may return the original URL, or a new URL\n     * to override loading behavior. This behavior can be used to load assets\n     * from .ZIP files, drag-and-drop APIs, and Data URIs.\n     */\n    static mapURLs(callback) {\n      Renderer.singleton.loader[$loader].manager.setURLModifier(callback);\n    }\n    /**\n     * Dismisses the poster, causing the model to load and render if\n     * necessary. This is currently effectively the same as interacting with\n     * the poster via user input.\n     */\n    dismissPoster() {\n      if (this.loaded) {\n        this[$hidePoster]();\n      } else {\n        this[$shouldDismissPoster] = true;\n        this[$updateSource]();\n      }\n    }\n    /**\n     * Displays the poster, hiding the 3D model. If this is called after the 3D\n     * model has been revealed, then it must be dismissed by a call to\n     * dismissPoster().\n     */\n    showPoster() {\n      const posterContainerElement = this[$posterContainerElement];\n      if (posterContainerElement.classList.contains('show')) {\n        return;\n      }\n      posterContainerElement.classList.add('show');\n      this[$userInputElement].classList.remove('show');\n      const defaultPosterElement = this[$defaultPosterElement];\n      defaultPosterElement.removeAttribute('tabindex');\n      defaultPosterElement.removeAttribute('aria-hidden');\n      const oldVisibility = this.modelIsVisible;\n      this[$modelIsRevealed] = false;\n      this[$announceModelVisibility](oldVisibility);\n    }\n    /**\n     * Returns the model's bounding box dimensions in meters, independent of\n     * turntable rotation.\n     */\n    getDimensions() {\n      return toVector3D(this[$scene].size);\n    }\n    getBoundingBoxCenter() {\n      return toVector3D(this[$scene].boundingBox.getCenter(new Vector3()));\n    }\n    constructor(...args) {\n      super(...args);\n      /**\n       * A URL pointing to the image to use as a poster in scenarios where the\n       * <model-viewer> is not ready to reveal a rendered model to the viewer.\n       */\n      this.poster = null;\n      /**\n       * An enumerable attribute describing under what conditions the\n       * <model-viewer> should reveal a model to the viewer.\n       *\n       * The default value is \"auto\". The only supported alternative values is\n       * \"manual\".\n       */\n      this.reveal = RevealStrategy.AUTO;\n      /**\n       * An enumerable attribute describing under what conditions the\n       * <model-viewer> should preload a model.\n       *\n       * The default value is \"auto\". The only supported alternative values are\n       * \"lazy\" and \"eager\". Auto is equivalent to lazy, which loads the model\n       * when it is near the viewport for reveal = \"auto\", and when interacted\n       * with for reveal = \"interaction\". Eager loads the model immediately.\n       */\n      this.loading = LoadingStrategy.AUTO;\n      this[_a] = false;\n      this[_b] = false;\n      // TODO: Add this to the shadow root as part of this mixin's\n      // implementation:\n      this[_c] = this.shadowRoot.querySelector('.slot.poster');\n      this[_d] = this.shadowRoot.querySelector('#default-poster');\n      this[_e] = this.shadowRoot.querySelector('#default-progress-bar > .bar');\n      this[_f] = this[$defaultPosterElement].getAttribute('aria-label');\n      this[_g] = throttle(progress => {\n        const parentNode = this[$defaultProgressBarElement].parentNode;\n        requestAnimationFrame(() => {\n          this[$defaultProgressBarElement].style.transform = `scaleX(${progress})`;\n          if (progress === 0) {\n            // NOTE(cdata): We remove and re-append the progress bar in this\n            // condition so that the progress bar does not appear to\n            // transition backwards from the right when we reset to 0 (or\n            // otherwise <1) progress after having already reached 1 progress\n            // previously.\n            parentNode.removeChild(this[$defaultProgressBarElement]);\n            parentNode.appendChild(this[$defaultProgressBarElement]);\n          }\n          this[$defaultProgressBarElement].classList.toggle('hide', progress === 1.0);\n        });\n      }, PROGRESS_BAR_UPDATE_THRESHOLD);\n      this[_h] = event => {\n        const progress = event.detail.totalProgress;\n        const reason = event.detail.reason;\n        if (progress === 1.0) {\n          this[$updateProgressBar].flush();\n          if (this.loaded && (this[$shouldDismissPoster] || this.reveal === RevealStrategy.AUTO)) {\n            this[$hidePoster]();\n          }\n        }\n        this[$updateProgressBar](progress);\n        this.dispatchEvent(new CustomEvent('progress', {\n          detail: {\n            totalProgress: progress,\n            reason\n          }\n        }));\n      };\n      const ModelViewerElement = self.ModelViewerElement || {};\n      const dracoDecoderLocation = ModelViewerElement.dracoDecoderLocation || DEFAULT_DRACO_DECODER_LOCATION;\n      CachingGLTFLoader.setDRACODecoderLocation(dracoDecoderLocation);\n      const ktx2TranscoderLocation = ModelViewerElement.ktx2TranscoderLocation || DEFAULT_KTX2_TRANSCODER_LOCATION;\n      CachingGLTFLoader.setKTX2TranscoderLocation(ktx2TranscoderLocation);\n      if (ModelViewerElement.meshoptDecoderLocation) {\n        CachingGLTFLoader.setMeshoptDecoderLocation(ModelViewerElement.meshoptDecoderLocation);\n      }\n      const lottieLoaderLocation = ModelViewerElement.lottieLoaderLocation || DEFAULT_LOTTIE_LOADER_LOCATION;\n      Renderer.singleton.textureUtils.lottieLoaderUrl = lottieLoaderLocation;\n    }\n    connectedCallback() {\n      super.connectedCallback();\n      if (!this.loaded) {\n        this.showPoster();\n      }\n      this[$progressTracker].addEventListener('progress', this[$onProgress]);\n    }\n    disconnectedCallback() {\n      super.disconnectedCallback();\n      this[$progressTracker].removeEventListener('progress', this[$onProgress]);\n    }\n    async updated(changedProperties) {\n      super.updated(changedProperties);\n      if (changedProperties.has('poster') && this.poster != null) {\n        this[$defaultPosterElement].style.backgroundImage = `url(${this.poster})`;\n      }\n      if (changedProperties.has('alt')) {\n        this[$defaultPosterElement].setAttribute('aria-label', this[$altDefaulted]);\n      }\n      if (changedProperties.has('reveal') || changedProperties.has('loading')) {\n        this[$updateSource]();\n      }\n    }\n    [(_a = $modelIsRevealed, _b = $shouldDismissPoster, _c = $posterContainerElement, _d = $defaultPosterElement, _e = $defaultProgressBarElement, _f = $ariaLabelCallToAction, _g = $updateProgressBar, _h = $onProgress, $shouldAttemptPreload)]() {\n      return !!this.src && (this[$shouldDismissPoster] || this.loading === LoadingStrategy.EAGER || this.reveal === RevealStrategy.AUTO && this[$isElementInViewport]);\n    }\n    [$hidePoster]() {\n      this[$shouldDismissPoster] = false;\n      const posterContainerElement = this[$posterContainerElement];\n      if (!posterContainerElement.classList.contains('show')) {\n        return;\n      }\n      posterContainerElement.classList.remove('show');\n      this[$userInputElement].classList.add('show');\n      const oldVisibility = this.modelIsVisible;\n      this[$modelIsRevealed] = true;\n      this[$announceModelVisibility](oldVisibility);\n      const root = this.getRootNode();\n      // If the <model-viewer> is still focused, forward the focus to\n      // the canvas that has just been revealed\n      if (root && root.activeElement === this) {\n        this[$userInputElement].focus();\n      }\n      // Ensure that the poster is no longer focusable or visible to\n      // screen readers\n      const defaultPosterElement = this[$defaultPosterElement];\n      defaultPosterElement.setAttribute('aria-hidden', 'true');\n      defaultPosterElement.tabIndex = -1;\n      this.dispatchEvent(new CustomEvent('poster-dismissed'));\n    }\n    [$getModelIsVisible]() {\n      return super[$getModelIsVisible]() && this[$modelIsRevealed];\n    }\n  }\n  __decorate([property({\n    type: String\n  })], LoadingModelViewerElement.prototype, \"poster\", void 0);\n  __decorate([property({\n    type: String\n  })], LoadingModelViewerElement.prototype, \"reveal\", void 0);\n  __decorate([property({\n    type: String\n  })], LoadingModelViewerElement.prototype, \"loading\", void 0);\n  return LoadingModelViewerElement;\n};\n", "/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { property } from 'lit/decorators.js';\nimport { style } from '../decorators.js';\nimport { $getModelIsVisible, $renderer, $scene, $tick } from '../model-viewer-base.js';\nimport { degreesToRadians } from '../styles/conversions.js';\nimport { numberNode } from '../styles/parsers.js';\n// How much the model will rotate per\n// second in radians:\nconst DEFAULT_ROTATION_SPEED = Math.PI / 32;\nexport const AUTO_ROTATE_DELAY_DEFAULT = 3000;\nconst rotationRateIntrinsics = {\n  basis: [degreesToRadians(numberNode(DEFAULT_ROTATION_SPEED, 'rad'))],\n  keywords: {\n    auto: [null]\n  }\n};\nconst $autoRotateStartTime = Symbol('autoRotateStartTime');\nconst $radiansPerSecond = Symbol('radiansPerSecond');\nconst $syncRotationRate = Symbol('syncRotationRate');\nconst $onCameraChange = Symbol('onCameraChange');\nexport const StagingMixin = ModelViewerElement => {\n  var _a, _b, _c;\n  class StagingModelViewerElement extends ModelViewerElement {\n    constructor() {\n      super(...arguments);\n      this.autoRotate = false;\n      this.autoRotateDelay = AUTO_ROTATE_DELAY_DEFAULT;\n      this.rotationPerSecond = 'auto';\n      this[_a] = performance.now();\n      this[_b] = 0;\n      this[_c] = event => {\n        if (!this.autoRotate) {\n          return;\n        }\n        if (event.detail.source === 'user-interaction') {\n          this[$autoRotateStartTime] = performance.now();\n        }\n      };\n    }\n    connectedCallback() {\n      super.connectedCallback();\n      this.addEventListener('camera-change', this[$onCameraChange]);\n      this[$autoRotateStartTime] = performance.now();\n    }\n    disconnectedCallback() {\n      super.disconnectedCallback();\n      this.removeEventListener('camera-change', this[$onCameraChange]);\n      this[$autoRotateStartTime] = performance.now();\n    }\n    updated(changedProperties) {\n      super.updated(changedProperties);\n      if (changedProperties.has('autoRotate')) {\n        this[$autoRotateStartTime] = performance.now();\n      }\n    }\n    [(_a = $autoRotateStartTime, _b = $radiansPerSecond, $syncRotationRate)](style) {\n      this[$radiansPerSecond] = style[0];\n    }\n    [$tick](time, delta) {\n      super[$tick](time, delta);\n      if (!this.autoRotate || !this[$getModelIsVisible]() || this[$renderer].isPresenting) {\n        return;\n      }\n      const rotationDelta = Math.min(delta, time - this[$autoRotateStartTime] - this.autoRotateDelay);\n      if (rotationDelta > 0) {\n        this[$scene].yaw = this.turntableRotation + this[$radiansPerSecond] * rotationDelta * 0.001;\n      }\n    }\n    get turntableRotation() {\n      return this[$scene].yaw;\n    }\n    resetTurntableRotation(theta = 0) {\n      this[$scene].yaw = theta;\n    }\n  }\n  _c = $onCameraChange;\n  __decorate([property({\n    type: Boolean,\n    attribute: 'auto-rotate'\n  })], StagingModelViewerElement.prototype, \"autoRotate\", void 0);\n  __decorate([property({\n    type: Number,\n    attribute: 'auto-rotate-delay'\n  })], StagingModelViewerElement.prototype, \"autoRotateDelay\", void 0);\n  __decorate([style({\n    intrinsics: rotationRateIntrinsics,\n    updateHandler: $syncRotationRate\n  }), property({\n    type: String,\n    attribute: 'rotation-per-second'\n  })], StagingModelViewerElement.prototype, \"rotationPerSecond\", void 0);\n  return StagingModelViewerElement;\n};\n", "/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { AnimationMixin } from './features/animation.js';\nimport { AnnotationMixin } from './features/annotation.js';\nimport { ARMixin } from './features/ar.js';\nimport { ControlsMixin } from './features/controls.js';\nimport { EnvironmentMixin } from './features/environment.js';\nimport { LoadingMixin } from './features/loading.js';\nimport { SceneGraphMixin } from './features/scene-graph.js';\nimport { StagingMixin } from './features/staging.js';\nimport ModelViewerElementBase from './model-viewer-base.js';\n// Export these to allow lazy-loaded LottieLoader.js to find what it needs.\n// Requires an import map - \"three\": \"path/to/model-viewer.min.js\".\nexport { CanvasTexture, FileLoader, Loader, NearestFilter } from 'three';\nexport const ModelViewerElement = AnnotationMixin(SceneGraphMixin(StagingMixin(EnvironmentMixin(ControlsMixin(ARMixin(LoadingMixin(AnimationMixin(ModelViewerElementBase))))))));\ncustomElements.define('model-viewer', ModelViewerElement);\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDO,IAAM,uBAAuB,MAAM,iBAAiB;AAAA,EACzD,IAAI,aAAa;AAIf,WAAO,KAAK,OAAO;AAAA,EACrB;AAAA,EACA,YAAY,OAAO;AACjB,SAAK,aAAa;AAClB,SAAK,mBAAmB;AACxB,SAAK,mBAAmB;AACxB,SAAK,6BAA6B;AAClC,SAAK,WAAW;AAChB,SAAK,cAAc;AACnB,SAAK,eAAe;AACpB,SAAK,eAAe;AACpB,SAAK,cAAc;AACnB,SAAK,cAAc;AACnB,SAAK,kBAAkB;AACvB,SAAK,eAAe;AACpB,SAAK,eAAe;AACpB,SAAK,eAAe;AACpB,SAAK,aAAa;AAClB,SAAK,cAAc;AACnB,SAAK,mBAAmB;AACxB,SAAK,YAAY;AACjB,SAAK,YAAY;AACjB,SAAK,WAAW;AAChB,SAAK,YAAY;AACjB,SAAK,gBAAgB;AACrB,SAAK,sBAAsB;AAC3B,SAAK,kBAAkB;AACvB,SAAK,kBAAkB;AACvB,SAAK,eAAe;AACpB,SAAK,cAAc;AACnB,SAAK,eAAe;AACpB,SAAK,eAAe;AACpB,SAAK,sBAAsB;AAC3B,SAAK,eAAe;AACpB,SAAK,eAAe;AACpB,SAAK,cAAc;AACnB,SAAK,eAAe;AACpB,SAAK,cAAc;AACnB,SAAK,WAAW;AAChB,SAAK,eAAe;AACpB,SAAK,eAAe;AACpB,SAAK,eAAe;AACpB,SAAK,gBAAgB;AACrB,SAAK,OAAO;AACZ,SAAK,OAAO;AACZ,SAAK,SAAS,CAAC;AACf,SAAK,SAAS,oBAAI,IAAI;AACtB,SAAK,oBAAoB;AACzB,SAAK,WAAW,CAAC;AACjB,SAAK,eAAe;AACpB,SAAK,SAAS;AAAA,EAChB;AAAA,EACA,gBAAgB;AAGd,YAAQ,KAAK,8FAAmG;AAChH,WAAO;AAAA,EACT;AAAA,EACA,iBAAiB;AACf,WAAO;AAAA,EACT;AAAA,EACA,eAAe;AAAA,EAAC;AAAA,EAChB,cAAc;AAAA,EAAC;AACjB;;;ACrHA,IAAI,yBAAgE,SAAU,UAAU,OAAO,OAAO,MAAM,GAAG;AAC7G,MAAI,SAAS,IAAK,OAAM,IAAI,UAAU,gCAAgC;AACtE,MAAI,SAAS,OAAO,CAAC,EAAG,OAAM,IAAI,UAAU,+CAA+C;AAC3F,MAAI,OAAO,UAAU,aAAa,aAAa,SAAS,CAAC,IAAI,CAAC,MAAM,IAAI,QAAQ,EAAG,OAAM,IAAI,UAAU,yEAAyE;AAChL,SAAO,SAAS,MAAM,EAAE,KAAK,UAAU,KAAK,IAAI,IAAI,EAAE,QAAQ,QAAQ,MAAM,IAAI,UAAU,KAAK,GAAG;AACpG;AACA,IAAI,yBAAgE,SAAU,UAAU,OAAO,MAAM,GAAG;AACtG,MAAI,SAAS,OAAO,CAAC,EAAG,OAAM,IAAI,UAAU,+CAA+C;AAC3F,MAAI,OAAO,UAAU,aAAa,aAAa,SAAS,CAAC,IAAI,CAAC,MAAM,IAAI,QAAQ,EAAG,OAAM,IAAI,UAAU,0EAA0E;AACjL,SAAO,SAAS,MAAM,IAAI,SAAS,MAAM,EAAE,KAAK,QAAQ,IAAI,IAAI,EAAE,QAAQ,MAAM,IAAI,QAAQ;AAC9F;AACA,IAAI;AAAJ,IAAuB;AAAvB,IAAuC;AAAvC,IAAwD;AAAxD,IAAiF;AAAjF,IAAmG;AAAnG,IAA8H;AAA9H,IAA2I;AAA3I,IAA0J;AAA1J,IAAoL;AAApL,IAAwL;AAAxL,IAA6M;AAC7M,IAAM,yBAAyB,aAAW,OAAO,YAAY,YAAY,UAAU,SAAS,WAAW;AAEvG,IAAM,OAAO;AACb,IAAM,kBAAkB;AACxB,IAAM,YAAY;AAClB,IAAM,iBAAiB;AAEvB,IAAMA,eAAN,MAAkB;AAAA,EAChB,cAAc;AACZ,SAAK,mBAAmB,oBAAI,IAAI;AAChC,SAAK,0BAA0B,oBAAI,IAAI;AAAA,EACzC;AAAA,EACA,iBAAiB,MAAM,UAAU,SAAS;AACxC,QAAI,aAAa,UAAa,aAAa,MAAM;AAC/C;AAAA,IACF;AACA,UAAM,oBAAoB,uBAAuB,OAAO,IAAI,KAAK,0BAA0B,KAAK;AAChG,QAAI,iBAAiB,kBAAkB,IAAI,IAAI;AAC/C,QAAI,mBAAmB,QAAW;AAChC,uBAAiB,oBAAI,IAAI;AACzB,wBAAkB,IAAI,MAAM,cAAc;AAAA,IAC5C,WAAW,eAAe,IAAI,QAAQ,GAAG;AACvC;AAAA,IACF;AACA,UAAM,oBAAoB,OAAO,YAAY,YAAY,UAAU,UAAU,CAAC;AAC9E,sBAAkB,QAAQ,iBAAiB,SAAS,MAAM,KAAK,oBAAoB,MAAM,UAAU,OAAO,CAAC;AAC3G,mBAAe,IAAI,UAAU,qBAAqB,CAAC,CAAC;AAAA,EACtD;AAAA,EACA,oBAAoB,MAAM,UAAU,SAAS;AAC3C,QAAI,aAAa,UAAa,aAAa,MAAM;AAC/C;AAAA,IACF;AACA,UAAM,oBAAoB,uBAAuB,OAAO,IAAI,KAAK,0BAA0B,KAAK;AAChG,UAAM,iBAAiB,kBAAkB,IAAI,IAAI;AACjD,QAAI,mBAAmB,QAAW;AAChC,qBAAe,OAAO,QAAQ;AAC9B,UAAI,CAAC,eAAe,MAAM;AACxB,0BAAkB,OAAO,IAAI;AAAA,MAC/B;AAAA,IACF;AAAA,EACF;AAAA,EACA,cAAc,OAAO;AACnB,UAAM,eAAe,CAAC,IAAI;AAC1B,QAAI,SAAS,KAAK;AAClB,QAAI,MAAM,UAAU;AAClB,aAAO,QAAQ;AACb,qBAAa,KAAK,MAAM;AACxB,iBAAS,OAAO;AAAA,MAClB;AAAA,IACF,OAAO;AAGL,aAAO,UAAU,WAAW,KAAK,QAAQ;AACvC,qBAAa,KAAK,MAAM;AACxB,iBAAS,OAAO;AAAA,MAClB;AAAA,IACF;AAGA,QAAI,kBAAkB;AACtB,QAAI,2BAA2B;AAC/B,QAAI,aAAa;AACjB,QAAIC,UAAS;AACb,QAAI,YAAY;AAChB,QAAI,gBAAgB;AACpB,UAAM,0BAA0B,MAAM;AACtC,UAAM,mCAAmC,MAAM;AAC/C,WAAO,iBAAiB,OAAO;AAAA,MAC7B,QAAQ;AAAA,QACN,MAAM;AACJ,iBAAOA,WAAU;AAAA,QACnB;AAAA,SACG;AAAA,MAEL,YAAY;AAAA,QACV,MAAM;AACJ,iBAAO,MAAM;AAAA,QACf;AAAA,SACG;AAAA,MAEL,eAAe;AAAA,QACb,MAAM;AACJ,iBAAO;AAAA,QACT;AAAA,SACG;AAAA,MAEL,YAAY;AAAA,QACV,MAAM;AACJ,iBAAO;AAAA,QACT;AAAA,SACG;AAAA,MAEL,cAAc;AAAA,QACZ,OAAO,MAAM;AAAA,SACV;AAAA,MAEL,iBAAiB;AAAA,QACf,OAAO,MAAM;AACX,4BAAkB;AAClB,kCAAwB,KAAK,KAAK;AAAA,QACpC;AAAA,SACG;AAAA,MAEL,0BAA0B;AAAA,QACxB,OAAO,MAAM;AACX,qCAA2B;AAC3B,2CAAiC,KAAK,KAAK;AAAA,QAC7C;AAAA,SACG;AAAA,IAEP,CAAC;AAID,UAAM,sBAAsB,CAAC,UAAU,SAAS,qBAAqB;AACnE,UAAI,OAAO,aAAa,YAAY;AAClC,iBAAS,KAAK;AAAA,MAChB,WAAW,OAAO,UAAU,gBAAgB,YAAY;AACtD,iBAAS,YAAY,KAAK;AAAA,MAC5B;AACA,UAAI,QAAQ,MAAM;AAChB,yBAAiB,OAAO,QAAQ;AAAA,MAClC;AAAA,IACF;AAMA,UAAM,iBAAiB,MAAM;AAC3B,sBAAgB;AAChB,mBAAa;AACb,aAAO,CAAC,MAAM;AAAA,IAChB;AAGA,UAAM,mBAAmB,aAAa,MAAM,EAAE,QAAQ;AAItD,IAAAA,UAAS,CAAC,KAAK,UAAU,CAAC,MAAM,WAAW,OAAO;AAClD,UAAM,WAAW,kBAAgB;AAE/B,kBAAY;AACZ,aAAO,UAAU,UAAU,aAAa,SAAS,UAAU,MAAM,GAAG;AAClE,oBAAY,UAAU;AAAA,MACxB;AAAA,IACF;AACA,eAAW,eAAe,kBAAkB;AAC1C,UAAI,CAACA,YAAW,CAAC,aAAa,cAAc,YAAY,SAAS;AAC/D,iBAAS,iBAAiB,MAAM,iBAAiB,QAAQ,WAAW,CAAC,CAAC;AAAA,MACxE;AACA,sBAAgB;AAChB,mBAAa,gBAAgB,MAAM,SAAS,YAAY;AACxD,YAAM,wBAAwB,YAAY,wBAAwB,IAAI,MAAM,IAAI;AAChF,UAAI,uBAAuB;AACzB,mBAAW,CAAC,UAAU,OAAO,KAAK,uBAAuB;AACvD,8BAAoB,UAAU,SAAS,qBAAqB;AAC5D,cAAI,0BAA0B;AAG5B,mBAAO,eAAe;AAAA,UACxB;AAAA,QACF;AAAA,MACF;AACA,UAAI,iBAAiB;AAGnB,eAAO,eAAe;AAAA,MACxB;AAAA,IACF;AACA,UAAM,kBAAkB,MAAM,UAAU,eAAe,CAAC,IAAI;AAC5D,gBAAY;AACZ,eAAW,eAAe,iBAAiB;AACzC,UAAI,CAACA,YAAW,CAAC,aAAa,gBAAgB,UAAU,SAAS;AAC/D,iBAAS,gBAAgB,MAAM,GAAG,gBAAgB,QAAQ,WAAW,IAAI,CAAC,CAAC;AAAA,MAC7E;AACA,sBAAgB;AAChB,mBAAa,gBAAgB,MAAM,SAAS,YAAY;AACxD,YAAM,wBAAwB,YAAY,iBAAiB,IAAI,MAAM,IAAI;AACzE,UAAI,uBAAuB;AACzB,mBAAW,CAAC,UAAU,OAAO,KAAK,uBAAuB;AACvD,8BAAoB,UAAU,SAAS,qBAAqB;AAC5D,cAAI,0BAA0B;AAG5B,mBAAO,eAAe;AAAA,UACxB;AAAA,QACF;AAAA,MACF;AACA,UAAI,iBAAiB;AAGnB,eAAO,eAAe;AAAA,MACxB;AAAA,IACF;AACA,WAAO,eAAe;AAAA,EACxB;AACF;AACA,IAAM,8BAA8BD;AAEpC,IAAM,qBAAqB;AAAA,EACzB,WAAW;AACb;AACA,mBAAmB,aAAa;AAChC,OAAO,OAAO,kBAAkB;AAEhC,IAAM,aAAa,KAAK,MAAME,OAAM;AAAA,EAClC,YAAY,MAAM,UAAU,CAAC,GAAG;AAC9B,sBAAkB,IAAI,MAAM,KAAK;AACjC,mBAAe,IAAI,MAAM,KAAK;AAC9B,oBAAgB,IAAI,MAAM,KAAK;AAC/B,4BAAwB,IAAI,MAAM,KAAK;AACvC,qBAAiB,IAAI,MAAM,KAAK,IAAI,CAAC;AACrC,8BAA0B,IAAI,MAAM,KAAK;AACzC,gBAAY,IAAI,MAAM,MAAM;AAC5B,kBAAc,IAAI,MAAM,MAAM;AAC9B,6BAAyB,IAAI,MAAM,MAAM;AACzC,SAAK,OAAO;AACZ,SAAK,kBAAkB;AACvB,SAAK,YAAY;AACjB,SAAK,iBAAiB;AACtB,QAAI,UAAU,WAAW,EAAG,OAAM,IAAI,MAAM,qCAAqC;AACjF,QAAI,OAAO,YAAY,YAAY,CAAC,SAAS;AAC3C,YAAM,IAAI,MAAM,0CAA0C;AAAA,IAC5D;AACA,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI;AACJ,2BAAuB,MAAM,mBAAmB,CAAC,CAAC,YAAY,GAAG;AACjE,2BAAuB,MAAM,gBAAgB,CAAC,CAAC,SAAS,GAAG;AAC3D,2BAAuB,MAAM,iBAAiB,CAAC,CAAC,UAAU,GAAG;AAC7D,2BAAuB,MAAM,aAAa,GAAG,IAAI,IAAI,GAAG;AACxD,2BAAuB,MAAM,eAAe,MAAM,GAAG;AACrD,2BAAuB,MAAM,0BAA0B,OAAO,GAAG;AAAA,EACnE;AAAA,EACA,UAAU,OAAO,UAAU,aAAa;AACtC,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC3C;AAAA,EACA,2BAA2B;AACzB,SAAK,gBAAgB;AAAA,EACvB;AAAA,EACA,iBAAiB;AACf,2BAAuB,MAAM,yBAAyB,MAAM,GAAG;AAAA,EACjE;AAAA,EACA,IAAI,SAAS;AACX,WAAO,uBAAuB,MAAM,eAAe,GAAG;AAAA,EACxD;AAAA,EACA,IAAI,gBAAgB;AAClB,WAAO,uBAAuB,MAAM,eAAe,GAAG;AAAA,EACxD;AAAA,EACA,IAAI,aAAa;AACf,WAAO,uBAAuB,MAAM,eAAe,GAAG;AAAA,EACxD;AAAA,EACA,IAAI,OAAO;AACT,WAAO,uBAAuB,MAAM,aAAa,GAAG;AAAA,EACtD;AAAA,EACA,IAAI,aAAa;AACf,WAAO,uBAAuB,MAAM,mBAAmB,GAAG;AAAA,EAC5D;AAAA,EACA,IAAI,mBAAmB;AACrB,WAAO,uBAAuB,MAAM,mBAAmB,GAAG,KAAK,uBAAuB,MAAM,yBAAyB,GAAG;AAAA,EAC1H;AAAA,EACA,IAAI,YAAY;AACd,WAAO,uBAAuB,MAAM,kBAAkB,GAAG;AAAA,EAC3D;AAAA,EACA,eAAe;AACb,WAAO,uBAAuB,MAAM,0BAA0B,GAAG,IAAI,CAAC,uBAAuB,MAAM,eAAe,GAAG,CAAC,IAAI,CAAC;AAAA,EAC7H;AAAA,EACA,IAAI,cAAc;AAChB,WAAO,CAAC,uBAAuB,MAAM,mBAAmB,GAAG,KAAK,CAAC,uBAAuB,MAAM,yBAAyB,GAAG;AAAA,EAC5H;AAAA,EACA,IAAI,UAAU;AACZ,WAAO,uBAAuB,MAAM,gBAAgB,GAAG;AAAA,EACzD;AAAA,EACA,IAAI,WAAW;AACb,WAAO,uBAAuB,MAAM,iBAAiB,GAAG;AAAA,EAC1D;AAAA,EACA,IAAI,aAAa;AACf,WAAO,uBAAuB,MAAM,0BAA0B,GAAG,IAAI,GAAG,YAAY,GAAG;AAAA,EACzF;AAAA,EACA,IAAI,eAAe;AACjB,WAAO,uBAAuB,MAAM,2BAA2B,GAAG;AAAA,EACpE;AAAA,EACA,IAAI,aAAa,OAAO;AACtB,QAAI,OAAO;AACT,6BAAuB,MAAM,2BAA2B,MAAM,GAAG;AAAA,IACnE;AAAA,EACF;AAAA,EACA,kBAAkB;AAChB,2BAAuB,MAAM,2BAA2B,MAAM,GAAG;AAAA,EACnE;AAAA,EACA,IAAI,YAAY;AACd,WAAO;AAAA,EACT;AACF,GAAG,oBAAoB,oBAAI,QAAQ,GAAG,iBAAiB,oBAAI,QAAQ,GAAG,kBAAkB,oBAAI,QAAQ,GAAG,0BAA0B,oBAAI,QAAQ,GAAG,mBAAmB,oBAAI,QAAQ,GAAG,4BAA4B,oBAAI,QAAQ,GAAG,cAAc,oBAAI,QAAQ,GAAG,gBAAgB,oBAAI,QAAQ,GAAG,2BAA2B,oBAAI,QAAQ,GAAG,GAAG,OAAO,MAAM,GAAG,kBAAkB,iBAAiB,GAAG,YAAY,WAAW,GAAG,iBAAiB,gBAAgB;AACvb,OAAO,iBAAiB,UAAU,WAAW;AAAA,EAC3C,WAAW;AAAA,EACX,0BAA0B;AAAA,EAC1B,gBAAgB;AAAA,EAChB,QAAQ;AAAA,EACR,eAAe;AAAA,EACf,YAAY;AAAA,EACZ,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,kBAAkB;AAAA,EAClB,WAAW;AAAA,EACX,cAAc;AAAA,EACd,aAAa;AAAA,EACb,SAAS;AAAA,EACT,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,cAAc;AAAA,EACd,iBAAiB;AAAA,EACjB,WAAW;AACb,CAAC;AAED,IAAM,mBAAmB,KAAK,MAAMC,qBAAoB,UAAU;AAAA,EAChE,YAAY,MAAM,UAAU,CAAC,GAAG;AAC9B,UAAM,MAAM,OAAO;AACnB,wBAAoB,IAAI,MAAM,MAAM;AACpC,2BAAuB,MAAM,qBAAqB,SAAS,UAAU,MAAM,GAAG;AAAA,EAChF;AAAA,EACA,gBAAgB,OAAO,UAAU,aAAa,SAAS;AACrD,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC3C;AAAA,EACA,IAAI,SAAS;AACX,WAAO,uBAAuB,MAAM,qBAAqB,GAAG;AAAA,EAC9D;AACF,GAAG,sBAAsB,oBAAI,QAAQ,GAAG;AACxC,OAAO,iBAAiB,gBAAgB,WAAW;AAAA,EACjD,QAAQ;AACV,CAAC;AACD,IAAM,wBAAwB;AAC9B,IAAM,8BAA8B;;;ACrVpC,WAAW,UAAU;AACrB,WAAW,gBAAgB;AAC3B,IAAM,aAAa,oBAAI,QAAQ;AAC/B,IAAM,uBAAuB,aAAW;AACtC,MAAI,QAAQ,WAAW,IAAI,OAAO;AAClC,MAAI,UAAU,QAAW;AACvB,eAAW,IAAI,SAAS,QAAQ,oBAAI,IAAI,CAAC;AAAA,EAC3C;AACA,SAAO;AACT;AAYA,IAAM,cAAc,MAAM,gBAAgB,4BAAgB;AAAA,EACxD,cAAc;AACZ,UAAM,GAAG,SAAS;AAClB,SAAK,mBAAmB;AACxB,SAAK,eAAe;AACpB,SAAK,cAAc;AAAA,EACrB;AAAA,EACA,IAAI,aAAa;AACf,WAAO,MAAM,KAAK,qBAAqB,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,MAAM,KAAK,OAAO;AAAA,MACpE;AAAA,MACA;AAAA,IACF,EAAE;AAAA,EACJ;AAAA,EACA,IAAI,aAAa;AACf,QAAI,KAAK,qBAAqB,UAAU;AACtC,aAAO;AAAA,IACT;AACA,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,YAAY;AACd,WAAO,KAAK,YAAY;AAAA,EAC1B;AAAA,EACA,IAAI,UAAU;AACZ,WAAO,KAAK,WAAW,YAAY;AAAA,EACrC;AAAA,EACA,aAAa,MAAM,OAAO;AAGxB,yBAAqB,IAAI,EAAE,IAAI,MAAM,OAAO,KAAK,CAAC;AAAA,EACpD;AAAA,EACA,gBAAgB,MAAM;AACpB,yBAAqB,IAAI,EAAE,OAAO,IAAI;AAAA,EACxC;AAAA,EACA,gBAAgB,MAAM,OAAO;AAE3B,QAAI,KAAK,aAAa,IAAI,GAAG;AAE3B,UAAI,UAAU,UAAa,CAAC,OAAO;AACjC,aAAK,gBAAgB,IAAI;AACzB,eAAO;AAAA,MACT;AAAA,IACF,OAAO;AAEL,UAAI,UAAU,UAAa,OAAO;AAEhC,aAAK,aAAa,MAAM,EAAE;AAC1B,eAAO;AAAA,MACT,OAAO;AAEL,eAAO;AAAA,MACT;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAAA,EACA,aAAa,MAAM;AACjB,WAAO,qBAAqB,IAAI,EAAE,IAAI,IAAI;AAAA,EAC5C;AAAA,EACA,aAAa,MAAM;AACjB,UAAM,aAAa;AAAA,MACjB,MAAM;AAAA,IACR;AACA,SAAK,mBAAmB,KAAK;AAC7B,QAAI,QAAQ,KAAK,SAAS,QAAQ;AAChC,WAAK,eAAe;AAAA,IACtB;AACA,WAAO;AAAA,EACT;AAAA,EACA,kBAAkB;AAChB,QAAI,KAAK,gBAAgB,MAAM;AAC7B,YAAM,IAAI,MAAM,wHAA6H;AAAA,IAC/I;AACA,UAAM,YAAY,IAAI,qBAAqB,IAAI;AAC/C,SAAK,cAAc;AACnB,WAAO;AAAA,EACT;AAAA,EACA,aAAa,MAAM;AACjB,UAAM,QAAQ,qBAAqB,IAAI,EAAE,IAAI,IAAI;AACjD,WAAO,SAAS;AAAA,EAClB;AACF;AAGA,IAAM,kBAAkB,MAAMC,qBAAoB,YAAY;AAAC;AAC/D,IAAM,8BAA8B;AAQpC,WAAW,kBAAkB,OAAO,eAAe,IAAI,4BAA4B,GAAG,aAAa;AAAA;AAAA,EAEjG,MAAM;AACJ,WAAO;AAAA,EACT;AACF,CAAC;AACD,SAAS,uBAAuB;AAC9B,MAAI;AACJ,MAAI;AACJ,QAAM,UAAU,IAAI,QAAQ,CAAC,KAAK,QAAQ;AACxC,cAAU;AACV,aAAS;AAAA,EACX,CAAC;AACD,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;AACA,IAAM,wBAAN,MAA4B;AAAA,EAC1B,cAAc;AACZ,SAAK,gBAAgB,oBAAI,IAAI;AAC7B,SAAK,uBAAuB,oBAAI,IAAI;AACpC,SAAK,wBAAwB,oBAAI,IAAI;AAAA,EACvC;AAAA,EACA,OAAO,MAAM,MAAM;AACjB,QAAI,KAAK,cAAc,IAAI,IAAI,GAAG;AAChC,UAAI,QAAQ,IAAI,aAAa,eAAe;AAC1C,gBAAQ,KAAK,wCAAwC,IAAI;AAAA,6GAAyP;AAAA,MACpT,OAAO;AACL,cAAM,IAAI,MAAM,oEAAyE,IAAI,4CAA4C;AAAA,MAC3I;AAAA,IACF;AACA,QAAI,KAAK,qBAAqB,IAAI,IAAI,GAAG;AACvC,YAAM,IAAI,MAAM,oIAA8I,KAAK,qBAAqB,IAAI,IAAI,CAAC,EAAE;AAAA,IACrM;AAEA,SAAK,cAAc;AACnB,SAAK,cAAc,IAAI,MAAM;AAAA,MAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAUA,oBAAoB,KAAK,sBAAsB,CAAC;AAAA,IAClD,CAAC;AACD,SAAK,qBAAqB,IAAI,MAAM,IAAI;AACxC,SAAK,sBAAsB,IAAI,IAAI,GAAG,QAAQ,IAAI;AAClD,SAAK,sBAAsB,OAAO,IAAI;AAAA,EACxC;AAAA,EACA,IAAI,MAAM;AACR,UAAM,aAAa,KAAK,cAAc,IAAI,IAAI;AAC9C,WAAO,YAAY;AAAA,EACrB;AAAA,EACA,QAAQ,MAAM;AACZ,WAAO,KAAK,qBAAqB,IAAI,IAAI,KAAK;AAAA,EAChD;AAAA,EACA,QAAQ,UAAU;AAEhB,UAAM,IAAI,MAAM,6FAAkG;AAAA,EACpH;AAAA,EACM,YAAY,MAAM;AAAA;AACtB,YAAM,aAAa,KAAK,cAAc,IAAI,IAAI;AAC9C,UAAI,YAAY;AACd,eAAO,WAAW;AAAA,MACpB;AACA,UAAI,gBAAgB,KAAK,sBAAsB,IAAI,IAAI;AACvD,UAAI,CAAC,eAAe;AAClB,wBAAgB,qBAAqB;AACrC,aAAK,sBAAsB,IAAI,MAAM,aAAa;AAAA,MACpD;AACA,aAAO,cAAc;AAAA,IACvB;AAAA;AACF;AACA,IAAM,wCAAwC;AAEvC,IAAMC,kBAAiB,IAAI,sCAAsC;;;ACxMxE,IAAM,SAAS;AAIf,IAAM,8BAA8B,OAAO,eAAe,OAAO,aAAa,UAAa,OAAO,SAAS,iBAAiB,wBAAwB,SAAS,aAAa,aAAa,cAAc;AACrM,IAAM,oBAAoB,OAAO;AACjC,IAAM,cAAc,oBAAI,QAAQ;AAQhC,IAAM,YAAN,MAAgB;AAAA,EACd,YAAY,SAAS,SAAS,WAAW;AAEvC,SAAK,cAAc,IAAI;AACvB,QAAI,cAAc,mBAAmB;AACnC,YAAM,IAAI,MAAM,mEAAmE;AAAA,IACrF;AACA,SAAK,UAAU;AACf,SAAK,WAAW;AAAA,EAClB;AAAA;AAAA;AAAA,EAGA,IAAI,aAAa;AAGf,QAAI,aAAa,KAAK;AACtB,UAAM,UAAU,KAAK;AACrB,QAAI,+BAA+B,eAAe,QAAW;AAC3D,YAAM,YAAY,YAAY,UAAa,QAAQ,WAAW;AAC9D,UAAI,WAAW;AACb,qBAAa,YAAY,IAAI,OAAO;AAAA,MACtC;AACA,UAAI,eAAe,QAAW;AAC5B,SAAC,KAAK,cAAc,aAAa,IAAI,cAAc,GAAG,YAAY,KAAK,OAAO;AAC9E,YAAI,WAAW;AACb,sBAAY,IAAI,SAAS,UAAU;AAAA,QACrC;AAAA,MACF;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA,EACA,WAAW;AACT,WAAO,KAAK;AAAA,EACd;AACF;AAkBA,IAAM,YAAY,WAAS,IAAI,UAAU,OAAO,UAAU,WAAW,QAAQ,OAAO,KAAK,GAAG,QAAW,iBAAiB;AAsBxH,IAAM,cAAc,CAAC,YAAY,WAAW;AAC1C,MAAI,6BAA6B;AAC/B,eAAW,qBAAqB,OAAO,IAAI,OAAK,aAAa,gBAAgB,IAAI,EAAE,UAAU;AAAA,EAC/F,OAAO;AACL,eAAW,KAAK,QAAQ;AACtB,YAAMC,SAAQ,SAAS,cAAc,OAAO;AAE5C,YAAM,QAAQ,OAAO,UAAU;AAC/B,UAAI,UAAU,QAAW;AACvB,QAAAA,OAAM,aAAa,SAAS,KAAK;AAAA,MACnC;AACA,MAAAA,OAAM,cAAc,EAAE;AACtB,iBAAW,YAAYA,MAAK;AAAA,IAC9B;AAAA,EACF;AACF;AACA,IAAM,0BAA0B,WAAS;AACvC,MAAI,UAAU;AACd,aAAW,QAAQ,MAAM,UAAU;AACjC,eAAW,KAAK;AAAA,EAClB;AACA,SAAO,UAAU,OAAO;AAC1B;AACA,IAAM,qBAAqB,+BAA+B,OAAO,kBAAkB,SAAY,OAAK,IAAI,OAAK,aAAa,gBAAgB,wBAAwB,CAAC,IAAI;;;AChHvK,IAAM;AAAA,EACJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,IAAI;AAEJ,IAAMC,UAAS;AACf;AACE,EAAAA,QAAO,mBAAmBC;AAC5B;AACA,IAAI;AACJ,IAAM,eAAeD,QAAO;AAK5B,IAAM,iCAAiC,eAAe,aAAa,cAAc;AACjF,IAAM,kBAAkBA,QAAO;AAC/B;AAGE,EAAAA,QAAO,sBAAsB,oBAAI,IAAI;AAMrC,iBAAe,CAAC,MAAM,YAAY;AAChC,eAAW,4BAA4B,IAAI;AAC3C,QAAI,CAACA,QAAO,kBAAkB,IAAI,OAAO,KAAK,CAACA,QAAO,kBAAkB,IAAI,IAAI,GAAG;AACjF,cAAQ,KAAK,OAAO;AACpB,MAAAA,QAAO,kBAAkB,IAAI,OAAO;AAAA,IACtC;AAAA,EACF;AACA,iBAAe,MAAM;AACnB,iBAAa,YAAY,qDAAqD;AAE9E,QAAIA,QAAO,UAAU,SAAS,oBAAoB,QAAW;AAC3D,mBAAa,4BAA4B,0GAA+G;AAAA,IAC1J;AAAA,EACF,CAAC;AACH;AAMA,IAAM,gBAAgB,WAAS;AAC7B,QAAM,aAAaA,QAAO;AAC1B,MAAI,CAAC,YAAY;AACf;AAAA,EACF;AACA,EAAAA,QAAO,cAAc,IAAI,YAAY,aAAa;AAAA,IAChD,QAAQ;AAAA,EACV,CAAC,CAAC;AACJ;AAQA,IAAM,4BAA4B,CAAC,MAAM,SAAS;AAClD,IAAM,mBAAmB;AAAA,EACvB,YAAY,OAAO,MAAM;AACvB,YAAQ,MAAM;AAAA,MACZ,KAAK;AACH,gBAAQ,QAAQ,iCAAiC;AACjD;AAAA,MACF,KAAK;AAAA,MACL,KAAK;AAGH,gBAAQ,SAAS,OAAO,QAAQ,KAAK,UAAU,KAAK;AACpD;AAAA,IACJ;AACA,WAAO;AAAA,EACT;AAAA,EACA,cAAc,OAAO,MAAM;AACzB,QAAI,YAAY;AAChB,YAAQ,MAAM;AAAA,MACZ,KAAK;AACH,oBAAY,UAAU;AACtB;AAAA,MACF,KAAK;AACH,oBAAY,UAAU,OAAO,OAAO,OAAO,KAAK;AAChD;AAAA,MACF,KAAK;AAAA,MACL,KAAK;AAIH,YAAI;AAEF,sBAAY,KAAK,MAAM,KAAK;AAAA,QAC9B,SAAS,GAAG;AACV,sBAAY;AAAA,QACd;AACA;AAAA,IACJ;AACA,WAAO;AAAA,EACT;AACF;AAKA,IAAM,WAAW,CAAC,OAAO,QAAQ,CAAC,GAAG,OAAO,GAAG;AAC/C,IAAM,6BAA6B;AAAA,EACjC,WAAW;AAAA,EACX,MAAM;AAAA,EACN,WAAW;AAAA,EACX,SAAS;AAAA,EACT,YAAY;AAAA,EACZ,YAAY;AACd;AAGA,OAAO,aAAa,OAAO,UAAU;AAIrCA,QAAO,wBAAwB,oBAAI,QAAQ;AAO3C,IAAM,kBAAN,eASS,WAAW,eAAe,6BAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkC9C,OAAO,eAAe,aAAa;AACjC,SAAK,UAAU;AACf,KAAC,KAAK,kBAAkB,CAAC,GAAG,KAAK,WAAW;AAAA,EAC9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,WAAW,qBAAqB;AAE9B,SAAK,SAAS;AAKd,WAAO,KAAK,4BAA4B,CAAC,GAAG,KAAK,yBAAyB,KAAK,CAAC;AAAA,EAClF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA0BA,OAAO,eAAe,MAAM,UAAU,4BAA4B;AAEhE,QAAI,QAAQ,OAAO;AACjB,cAAQ,YAAY;AAAA,IACtB;AACA,SAAK,UAAU;AAGf,QAAI,KAAK,UAAU,eAAe,IAAI,GAAG;AACvC,gBAAU,OAAO,OAAO,OAAO;AAC/B,cAAQ,UAAU;AAAA,IACpB;AACA,SAAK,kBAAkB,IAAI,MAAM,OAAO;AACxC,QAAI,CAAC,QAAQ,YAAY;AACvB,YAAM;AAAA;AAAA;AAAA,QAGN,OAAO,IAAI,GAAG,OAAO,IAAI,CAAC,sBAAsB;AAAA;AAChD,YAAM,aAAa,KAAK,sBAAsB,MAAM,KAAK,OAAO;AAChE,UAAI,eAAe,QAAW;AAC5B,uBAAe,KAAK,WAAW,MAAM,UAAU;AAAA,MACjD;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA4BA,OAAO,sBAAsB,MAAM,KAAK,SAAS;AAC/C,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,IACF,IAAI,yBAAyB,KAAK,WAAW,IAAI,KAAK;AAAA,MACpD,MAAM;AACJ,eAAO,KAAK,GAAG;AAAA,MACjB;AAAA,MACA,IAAI,GAAG;AACL,aAAK,GAAG,IAAI;AAAA,MACd;AAAA,IACF;AACA,QAAI,OAAO,MAAM;AACf,UAAI,YAAY,yBAAyB,KAAK,WAAW,IAAI,KAAK,CAAC,IAAI;AACrE,cAAM,IAAI,MAAM,SAAS,KAAK,UAAU,OAAO,IAAI,CAAC,CAAC,OAAY,KAAK,IAAI,4JAAsK;AAAA,MAClP;AACA,mBAAa,oCAAoC,SAAS,KAAK,UAAU,OAAO,IAAI,CAAC,CAAC,OAAY,KAAK,IAAI,uHAAiI;AAAA,IAC9O;AACA,WAAO;AAAA,MACL;AAAA,MACA,IAAI,OAAO;AACT,cAAM,WAAW,KAAK,KAAK,IAAI;AAC/B,aAAK,KAAK,MAAM,KAAK;AACrB,aAAK,cAAc,MAAM,UAAU,OAAO;AAAA,MAC5C;AAAA,MACA,cAAc;AAAA,MACd,YAAY;AAAA,IACd;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAeA,OAAO,mBAAmB,MAAM;AAC9B,WAAO,KAAK,kBAAkB,IAAI,IAAI,KAAK;AAAA,EAC7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYA,OAAO,YAAY;AACjB,QAAI,KAAK,eAAe,0BAA0B,mBAAmB,CAAC,GAAG;AAEvE;AAAA,IACF;AAEA,UAAM,YAAY,eAAe,IAAI;AACrC,cAAU,SAAS;AAInB,QAAI,UAAU,kBAAkB,QAAW;AACzC,WAAK,gBAAgB,CAAC,GAAG,UAAU,aAAa;AAAA,IAClD;AAEA,SAAK,oBAAoB,IAAI,IAAI,UAAU,iBAAiB;AAAA,EAC9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYA,OAAO,WAAW;AAChB,QAAI,KAAK,eAAe,0BAA0B,WAAW,CAAC,GAAG;AAC/D;AAAA,IACF;AACA,SAAK,YAAY;AACjB,SAAK,UAAU;AAEf,QAAI,KAAK,eAAe,0BAA0B,YAAY,CAAC,GAAG;AAChE,YAAM,QAAQ,KAAK;AACnB,YAAM,WAAW,CAAC,GAAG,oBAAoB,KAAK,GAAG,GAAG,sBAAsB,KAAK,CAAC;AAChF,iBAAW,KAAK,UAAU;AACxB,aAAK,eAAe,GAAG,MAAM,CAAC,CAAC;AAAA,MACjC;AAAA,IACF;AAEA,UAAM,WAAW,KAAK,OAAO,QAAQ;AACrC,QAAI,aAAa,MAAM;AACrB,YAAM,aAAa,oBAAoB,IAAI,QAAQ;AACnD,UAAI,eAAe,QAAW;AAC5B,mBAAW,CAAC,GAAG,OAAO,KAAK,YAAY;AACrC,eAAK,kBAAkB,IAAI,GAAG,OAAO;AAAA,QACvC;AAAA,MACF;AAAA,IACF;AAEA,SAAK,2BAA2B,oBAAI,IAAI;AACxC,eAAW,CAAC,GAAG,OAAO,KAAK,KAAK,mBAAmB;AACjD,YAAM,OAAO,KAAK,2BAA2B,GAAG,OAAO;AACvD,UAAI,SAAS,QAAW;AACtB,aAAK,yBAAyB,IAAI,MAAM,CAAC;AAAA,MAC3C;AAAA,IACF;AACA,SAAK,gBAAgB,KAAK,eAAe,KAAK,MAAM;AACpD;AACE,UAAI,KAAK,eAAe,gBAAgB,GAAG;AACzC,qBAAa,+BAA+B,qHAA0H;AAAA,MACxK;AACA,UAAI,KAAK,eAAe,uBAAuB,GAAG;AAChD,qBAAa,uCAAuC,4HAAiI;AAAA,MACvL;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAeA,OAAO,eAAe,QAAQ;AAC5B,UAAM,gBAAgB,CAAC;AACvB,QAAI,MAAM,QAAQ,MAAM,GAAG;AAIzB,YAAM,MAAM,IAAI,IAAI,OAAO,KAAK,QAAQ,EAAE,QAAQ,CAAC;AAEnD,iBAAW,KAAK,KAAK;AACnB,sBAAc,QAAQ,mBAAmB,CAAC,CAAC;AAAA,MAC7C;AAAA,IACF,WAAW,WAAW,QAAW;AAC/B,oBAAc,KAAK,mBAAmB,MAAM,CAAC;AAAA,IAC/C;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,2BAA2B,MAAM,SAAS;AAC/C,UAAM,YAAY,QAAQ;AAC1B,WAAO,cAAc,QAAQ,SAAY,OAAO,cAAc,WAAW,YAAY,OAAO,SAAS,WAAW,KAAK,YAAY,IAAI;AAAA,EACvI;AAAA,EACA,cAAc;AACZ,UAAM;AACN,SAAK,uBAAuB;AAM5B,SAAK,kBAAkB;AAMvB,SAAK,aAAa;AAIlB,SAAK,uBAAuB;AAC5B,SAAK,aAAa;AAAA,EACpB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,eAAe;AACb,SAAK,kBAAkB,IAAI,QAAQ,SAAO,KAAK,iBAAiB,GAAG;AACnE,SAAK,sBAAsB,oBAAI,IAAI;AAGnC,SAAK,yBAAyB;AAG9B,SAAK,cAAc;AACnB,SAAK,YAAY,eAAe,QAAQ,OAAK,EAAE,IAAI,CAAC;AAAA,EACtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,cAAc,YAAY;AACxB,KAAC,KAAK,kBAAkB,oBAAI,IAAI,GAAG,IAAI,UAAU;AAKjD,QAAI,KAAK,eAAe,UAAa,KAAK,aAAa;AACrD,iBAAW,gBAAgB;AAAA,IAC7B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,iBAAiB,YAAY;AAC3B,SAAK,eAAe,OAAO,UAAU;AAAA,EACvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,2BAA2B;AACzB,UAAM,qBAAqB,oBAAI,IAAI;AACnC,UAAM,oBAAoB,KAAK,YAAY;AAC3C,eAAW,KAAK,kBAAkB,KAAK,GAAG;AACxC,UAAI,KAAK,eAAe,CAAC,GAAG;AAC1B,2BAAmB,IAAI,GAAG,KAAK,CAAC,CAAC;AACjC,eAAO,KAAK,CAAC;AAAA,MACf;AAAA,IACF;AACA,QAAI,mBAAmB,OAAO,GAAG;AAC/B,WAAK,uBAAuB;AAAA,IAC9B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,mBAAmB;AACjB,UAAM,aAAa,KAAK,cAAc,KAAK,aAAa,KAAK,YAAY,iBAAiB;AAC1F,gBAAY,YAAY,KAAK,YAAY,aAAa;AACtD,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,oBAAoB;AAElB,SAAK,eAAe,KAAK,iBAAiB;AAC1C,SAAK,eAAe,IAAI;AACxB,SAAK,eAAe,QAAQ,CAAAE,OAAKA,GAAE,gBAAgB,CAAC;AAAA,EACtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,eAAe,kBAAkB;AAAA,EAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOlC,uBAAuB;AACrB,SAAK,eAAe,QAAQ,CAAAA,OAAKA,GAAE,mBAAmB,CAAC;AAAA,EACzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaA,yBAAyB,MAAM,MAAM,OAAO;AAC1C,SAAK,sBAAsB,MAAM,KAAK;AAAA,EACxC;AAAA,EACA,sBAAsB,MAAM,OAAO;AACjC,UAAM,iBAAiB,KAAK,YAAY;AACxC,UAAM,UAAU,eAAe,IAAI,IAAI;AACvC,UAAM,OAAO,KAAK,YAAY,2BAA2B,MAAM,OAAO;AACtE,QAAI,SAAS,UAAa,QAAQ,YAAY,MAAM;AAClD,YAAM,YAAY,QAAQ,WAAW,gBAAgB,SAAY,QAAQ,YAAY;AACrF,YAAM,YAAY,UAAU,YAAY,OAAO,QAAQ,IAAI;AAC3D,UAAI,KAAK,YAAY,gBAAgB,SAAS,WAAW,KAAK,cAAc,QAAW;AACrF,qBAAa,6BAA6B,+BAA+B,IAAI,qCAA0C,KAAK,SAAS,4HAAsI;AAAA,MAC7Q;AASA,WAAK,uBAAuB;AAC5B,UAAI,aAAa,MAAM;AACrB,aAAK,gBAAgB,IAAI;AAAA,MAC3B,OAAO;AACL,aAAK,aAAa,MAAM,SAAS;AAAA,MACnC;AAEA,WAAK,uBAAuB;AAAA,IAC9B;AAAA,EACF;AAAA;AAAA,EAEA,sBAAsB,MAAM,OAAO;AACjC,UAAM,OAAO,KAAK;AAGlB,UAAM,WAAW,KAAK,yBAAyB,IAAI,IAAI;AAGvD,QAAI,aAAa,UAAa,KAAK,yBAAyB,UAAU;AACpE,YAAM,UAAU,KAAK,mBAAmB,QAAQ;AAChD,YAAM,YAAY,OAAO,QAAQ,cAAc,aAAa;AAAA,QAC1D,eAAe,QAAQ;AAAA,MACzB,IAAI,QAAQ,WAAW,kBAAkB,SAAY,QAAQ,YAAY;AAEzE,WAAK,uBAAuB;AAC5B,YAAM,iBAAiB,UAAU,cAAc,OAAO,QAAQ,IAAI;AAClE,WAAK,QAAQ,IAAI,kBAAkB,KAAK,iBAAiB,IAAI,QAAQ;AAAA,MAErE;AAEA,WAAK,uBAAuB;AAAA,IAC9B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAeA,cAAc,MAAM,UAAU,SAAS;AAErC,QAAI,SAAS,QAAW;AACtB,UAAI,gBAAgB,OAAO;AACzB,qBAAa,IAAI,yPAAyP;AAAA,MAC5Q;AACA,YAAM,OAAO,KAAK;AAClB,YAAM,WAAW,KAAK,IAAI;AAC1B,kBAAY,KAAK,mBAAmB,IAAI;AACxC,YAAM,WAAW,QAAQ,cAAc,UAAU,UAAU,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOnE,QAAQ,cAAc,QAAQ,WAAW,aAAa,KAAK,iBAAiB,IAAI,IAAI,KAAK,CAAC,KAAK,aAAa,KAAK,2BAA2B,MAAM,OAAO,CAAC;AAC1J,UAAI,SAAS;AACX,aAAK,iBAAiB,MAAM,UAAU,OAAO;AAAA,MAC/C,OAAO;AAEL;AAAA,MACF;AAAA,IACF;AACA,QAAI,KAAK,oBAAoB,OAAO;AAClC,WAAK,kBAAkB,KAAK,gBAAgB;AAAA,IAC9C;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAIA,iBAAiB,MAAM,UAAU;AAAA,IAC/B;AAAA,IACA;AAAA,IACA;AAAA,EACF,GAAG,iBAAiB;AAGlB,QAAI,cAAc,EAAE,KAAK,oBAAoB,oBAAI,IAAI,GAAG,IAAI,IAAI,GAAG;AACjE,WAAK,gBAAgB,IAAI,MAAM,mBAAmB,YAAY,KAAK,IAAI,CAAC;AAGxE,UAAI,YAAY,QAAQ,oBAAoB,QAAW;AACrD;AAAA,MACF;AAAA,IACF;AAGA,QAAI,CAAC,KAAK,oBAAoB,IAAI,IAAI,GAAG;AAGvC,UAAI,CAAC,KAAK,cAAc,CAAC,YAAY;AACnC,mBAAW;AAAA,MACb;AACA,WAAK,oBAAoB,IAAI,MAAM,QAAQ;AAAA,IAC7C;AAKA,QAAI,YAAY,QAAQ,KAAK,yBAAyB,MAAM;AAC1D,OAAC,KAAK,2BAA2B,oBAAI,IAAI,GAAG,IAAI,IAAI;AAAA,IACtD;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAIM,kBAAkB;AAAA;AACtB,WAAK,kBAAkB;AACvB,UAAI;AAGF,cAAM,KAAK;AAAA,MACb,SAAS,GAAG;AAKV,gBAAQ,OAAO,CAAC;AAAA,MAClB;AACA,YAAM,SAAS,KAAK,eAAe;AAInC,UAAI,UAAU,MAAM;AAClB,cAAM;AAAA,MACR;AACA,aAAO,CAAC,KAAK;AAAA,IACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkBA,iBAAiB;AACf,UAAM,SAAS,KAAK,cAAc;AAClC,QAAI,KAAK,YAAY,gBAAgB,SAAS,sBAAsB,KAAK,OAAO,QAAQ,SAAS,YAAY;AAC3G,mBAAa,wBAAwB,WAAW,KAAK,SAAS,mIAA6I;AAAA,IAC7M;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,gBAAgB;AAId,QAAI,CAAC,KAAK,iBAAiB;AACzB;AAAA,IACF;AACA,oBAAgB;AAAA,MACd,MAAM;AAAA,IACR,CAAC;AACD,QAAI,CAAC,KAAK,YAAY;AAGpB,WAAK,eAAe,KAAK,iBAAiB;AAC1C;AAKE,cAAM,OAAO,KAAK;AAClB,cAAM,qBAAqB,CAAC,GAAG,KAAK,kBAAkB,KAAK,CAAC,EAAE,OAAO,OAAK,KAAK,eAAe,CAAC,KAAK,KAAK,eAAe,IAAI,CAAC;AAC7H,YAAI,mBAAmB,QAAQ;AAC7B,gBAAM,IAAI,MAAM,uCAAuC,KAAK,SAAS,kFAA4F,mBAAmB,KAAK,IAAI,CAAC,yKAA6L;AAAA,QAC7X;AAAA,MACF;AAEA,UAAI,KAAK,sBAAsB;AAG7B,mBAAW,CAAC,GAAG,KAAK,KAAK,KAAK,sBAAsB;AAClD,eAAK,CAAC,IAAI;AAAA,QACZ;AACA,aAAK,uBAAuB;AAAA,MAC9B;AAUA,YAAM,oBAAoB,KAAK,YAAY;AAC3C,UAAI,kBAAkB,OAAO,GAAG;AAC9B,mBAAW,CAAC,GAAG,OAAO,KAAK,mBAAmB;AAC5C,gBAAM;AAAA,YACJ;AAAA,UACF,IAAI;AACJ,gBAAM,QAAQ,KAAK,CAAC;AACpB,cAAI,YAAY,QAAQ,CAAC,KAAK,oBAAoB,IAAI,CAAC,KAAK,UAAU,QAAW;AAC/E,iBAAK,iBAAiB,GAAG,QAAW,SAAS,KAAK;AAAA,UACpD;AAAA,QACF;AAAA,MACF;AAAA,IACF;AACA,QAAI,eAAe;AACnB,UAAM,oBAAoB,KAAK;AAC/B,QAAI;AACF,qBAAe,KAAK,aAAa,iBAAiB;AAClD,UAAI,cAAc;AAChB,aAAK,WAAW,iBAAiB;AACjC,aAAK,eAAe,QAAQ,CAAAA,OAAKA,GAAE,aAAa,CAAC;AACjD,aAAK,OAAO,iBAAiB;AAAA,MAC/B,OAAO;AACL,aAAK,cAAc;AAAA,MACrB;AAAA,IACF,SAAS,GAAG;AAGV,qBAAe;AAEf,WAAK,cAAc;AACnB,YAAM;AAAA,IACR;AAEA,QAAI,cAAc;AAChB,WAAK,YAAY,iBAAiB;AAAA,IACpC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAsBA,WAAW,oBAAoB;AAAA,EAAC;AAAA;AAAA;AAAA,EAGhC,YAAY,mBAAmB;AAC7B,SAAK,eAAe,QAAQ,CAAAA,OAAKA,GAAE,cAAc,CAAC;AAClD,QAAI,CAAC,KAAK,YAAY;AACpB,WAAK,aAAa;AAClB,WAAK,aAAa,iBAAiB;AAAA,IACrC;AACA,SAAK,QAAQ,iBAAiB;AAC9B,QAAI,KAAK,mBAAmB,KAAK,YAAY,gBAAgB,SAAS,kBAAkB,GAAG;AACzF,mBAAa,oBAAoB,WAAW,KAAK,SAAS,8PAAkR;AAAA,IAC9U;AAAA,EACF;AAAA,EACA,gBAAgB;AACd,SAAK,sBAAsB,oBAAI,IAAI;AACnC,SAAK,kBAAkB;AAAA,EACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiBA,IAAI,iBAAiB;AACnB,WAAO,KAAK,kBAAkB;AAAA,EAChC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAwBA,oBAAoB;AAClB,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,aAAa,oBAAoB;AAC/B,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,OAAO,oBAAoB;AAIzB,SAAK,2BAA2B,KAAK,uBAAuB,QAAQ,OAAK,KAAK,sBAAsB,GAAG,KAAK,CAAC,CAAC,CAAC;AAC/G,SAAK,cAAc;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,QAAQ,oBAAoB;AAAA,EAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiB7B,aAAa,oBAAoB;AAAA,EAAC;AACpC;AAOA,gBAAgB,gBAAgB,CAAC;AAWjC,gBAAgB,oBAAoB;AAAA,EAClC,MAAM;AACR;AAIA,gBAAgB,0BAA0B,mBAAmB,CAAC,IAAI,oBAAI,IAAI;AAC1E,gBAAgB,0BAA0B,WAAW,CAAC,IAAI,oBAAI,IAAI;AAElE,kBAAkB;AAAA,EAChB;AACF,CAAC;AAED;AAEE,kBAAgB,kBAAkB,CAAC,oBAAoB,sBAAsB;AAC7E,QAAM,oBAAoB,SAAU,MAAM;AACxC,QAAI,CAAC,KAAK,eAAe,0BAA0B,iBAAiB,CAAC,GAAG;AACtE,WAAK,kBAAkB,KAAK,gBAAgB,MAAM;AAAA,IACpD;AAAA,EACF;AACA,kBAAgB,gBAAgB,SAAU,SAAS;AACjD,sBAAkB,IAAI;AACtB,QAAI,CAAC,KAAK,gBAAgB,SAAS,OAAO,GAAG;AAC3C,WAAK,gBAAgB,KAAK,OAAO;AAAA,IACnC;AAAA,EACF;AACA,kBAAgB,iBAAiB,SAAU,SAAS;AAClD,sBAAkB,IAAI;AACtB,UAAM,IAAI,KAAK,gBAAgB,QAAQ,OAAO;AAC9C,QAAI,KAAK,GAAG;AACV,WAAK,gBAAgB,OAAO,GAAG,CAAC;AAAA,IAClC;AAAA,EACF;AACF;AAAA,CAGCF,QAAO,4BAA4B,CAAC,GAAG,KAAK,OAAO;AACpD,IAAIA,QAAO,wBAAwB,SAAS,GAAG;AAC7C,iBAAe,MAAM;AACnB,iBAAa,qBAAqB,gFAAqF;AAAA,EACzH,CAAC;AACH;;;ACvgCA,IAAIG;AACJ;AAGE,aAAW,sBAAsB,oBAAI,IAAI;AAMzC,EAAAA,gBAAe,CAAC,MAAM,YAAY;AAChC,eAAW,4BAA4B,IAAI;AAC3C,QAAI,CAAC,WAAW,kBAAkB,IAAI,OAAO,KAAK,CAAC,WAAW,kBAAkB,IAAI,IAAI,GAAG;AACzF,cAAQ,KAAK,OAAO;AACpB,iBAAW,kBAAkB,IAAI,OAAO;AAAA,IAC1C;AAAA,EACF;AACF;AACA,IAAM,iBAAiB,CAAC,SAAS,OAAO,SAAS;AAC/C,QAAM,iBAAiB,MAAM,eAAe,IAAI;AAChD,QAAM,YAAY,eAAe,MAAM,OAAO;AAM9C,SAAO,iBAAiB,OAAO,yBAAyB,OAAO,IAAI,IAAI;AACzE;AAIA,IAAMC,8BAA6B;AAAA,EACjC,WAAW;AAAA,EACX,MAAM;AAAA,EACN,WAAW;AAAA,EACX,SAAS;AAAA,EACT,YAAY;AACd;AAKA,IAAM,mBAAmB,CAAC,UAAUA,6BAA4BC,SAAQ,YAAY;AAClF,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,EACF,IAAI;AACJ,MAAI,YAAY,MAAM;AACpB,IAAAF,cAAa,0BAA0B,aAAaE,OAAM,oMAAmN;AAAA,EAC/Q;AAEA,MAAI,aAAa,WAAW,oBAAoB,IAAI,QAAQ;AAC5D,MAAI,eAAe,QAAW;AAC5B,eAAW,oBAAoB,IAAI,UAAU,aAAa,oBAAI,IAAI,CAAC;AAAA,EACrE;AACA,MAAI,SAAS,UAAU;AACrB,cAAU,OAAO,OAAO,OAAO;AAC/B,YAAQ,UAAU;AAAA,EACpB;AACA,aAAW,IAAI,QAAQ,MAAM,OAAO;AACpC,MAAI,SAAS,YAAY;AAIvB,UAAM;AAAA,MACJ;AAAA,IACF,IAAI;AACJ,WAAO;AAAA,MACL,IAAI,GAAG;AACL,cAAM,WAAWA,QAAO,IAAI,KAAK,IAAI;AACrC,QAAAA,QAAO,IAAI,KAAK,MAAM,CAAC;AACvB,aAAK,cAAc,MAAM,UAAU,OAAO;AAAA,MAC5C;AAAA,MACA,KAAK,GAAG;AACN,YAAI,MAAM,QAAW;AACnB,eAAK,iBAAiB,MAAM,QAAW,SAAS,CAAC;AAAA,QACnD;AACA,eAAO;AAAA,MACT;AAAA,IACF;AAAA,EACF,WAAW,SAAS,UAAU;AAC5B,UAAM;AAAA,MACJ;AAAA,IACF,IAAI;AACJ,WAAO,SAAU,OAAO;AACtB,YAAM,WAAW,KAAK,IAAI;AAC1B,MAAAA,QAAO,KAAK,MAAM,KAAK;AACvB,WAAK,cAAc,MAAM,UAAU,OAAO;AAAA,IAC5C;AAAA,EACF;AACA,QAAM,IAAI,MAAM,mCAAmC,IAAI,EAAE;AAC3D;AAiCA,SAAS,SAAS,SAAS;AACzB,SAAO,CAAC,eAAe,kBAElB;AACH,WAAO,OAAO,kBAAkB,WAAW,iBAAiB,SAAS,eAAe,aAAa,IAAI,eAAe,SAAS,eAAe,aAAa;AAAA,EAC3J;AACF;;;ACxIA,IAAIC;AACJ;AAGE,aAAW,sBAAsB,oBAAI,IAAI;AAMzC,EAAAA,gBAAe,CAAC,MAAM,YAAY;AAChC,eAAW,OAAO,4BAA4B,IAAI,2BAA2B;AAC7E,QAAI,CAAC,WAAW,kBAAkB,IAAI,OAAO,KAAK,CAAC,WAAW,kBAAkB,IAAI,IAAI,GAAG;AACzF,cAAQ,KAAK,OAAO;AACpB,iBAAW,kBAAkB,IAAI,OAAO;AAAA,IAC1C;AAAA,EACF;AACF;;;AClBA,IAAMC,UAAS;AAMf,IAAMC,iBAAgB,WAAS;AAC7B,QAAM,aAAaD,QAAO;AAC1B,MAAI,CAAC,YAAY;AACf;AAAA,EACF;AACA,EAAAA,QAAO,cAAc,IAAI,YAAY,aAAa;AAAA,IAChD,QAAQ;AAAA,EACV,CAAC,CAAC;AACJ;AAIA,IAAI,mBAAmB;AACvB,IAAIE;AACJ;AACE,EAAAF,QAAO,sBAAsB,oBAAI,IAAI;AAMrC,EAAAE,gBAAe,CAAC,MAAM,YAAY;AAChC,eAAW,OAAO,4BAA4B,IAAI,2BAA2B;AAC7E,QAAI,CAACF,QAAO,kBAAkB,IAAI,OAAO,KAAK,CAACA,QAAO,kBAAkB,IAAI,IAAI,GAAG;AACjF,cAAQ,KAAK,OAAO;AACpB,MAAAA,QAAO,kBAAkB,IAAI,OAAO;AAAA,IACtC;AAAA,EACF;AACA,iBAAe,MAAM;AACnB,IAAAE,cAAa,YAAY,qDAAqD;AAAA,EAChF,CAAC;AACH;AACA,IAAM,OAAO,UAAQ;AACrB,IAAMC,gBAAeH,QAAO;AAS5B,IAAM,SAASG,gBAAeA,cAAa,aAAa,YAAY;AAAA,EAClE,YAAY,OAAK;AACnB,CAAC,IAAI;AACL,IAAM,mBAAmB,WAAS;AAClC,IAAM,gBAAgB,CAAC,OAAO,OAAO,UAAU;AAE/C,IAAM,eAAe,kBAAgB;AACnC,MAAI,6BAA6B,eAAe;AAC9C,UAAM,IAAI,MAAM,qHAA0H;AAAA,EAC5I;AACA,6BAA2B;AAC7B;AAIA,IAAM,gDAAgD,MAAM;AAC1D,6BAA2B;AAC7B;AACA,IAAM,kBAAkB,CAAC,MAAM,MAAM,SAAS;AAC5C,SAAO,yBAAyB,MAAM,MAAM,IAAI;AAClD;AAGA,IAAM,uBAAuB;AAK7B,IAAM,SAAS,OAAO,KAAK,OAAO,EAAE,QAAQ,CAAC,EAAE,MAAM,CAAC,CAAC;AAEvD,IAAM,cAAc,MAAM;AAG1B,IAAM,aAAa,IAAI,WAAW;AAClC,IAAM,IAAIH,QAAO,aAAa,SAAY;AAAA,EACxC,mBAAmB;AACjB,WAAO,CAAC;AAAA,EACV;AACF,IAAI;AAEJ,IAAM,eAAe,MAAM,EAAE,cAAc,EAAE;AAC7C,IAAM,cAAc,WAAS,UAAU,QAAQ,OAAO,SAAS,YAAY,OAAO,SAAS;AAC3F,IAAM,UAAU,MAAM;AACtB,IAAM,aAAa,WAAS,QAAQ,KAAK;AAEzC,OAAO,QAAQ,OAAO,QAAQ,MAAM;AACpC,IAAM,aAAa;AAAA;AACnB,IAAM,kBAAkB;AAAA;AACxB,IAAM,YAAY;AAclB,IAAM,eAAe;AACrB,IAAM,gBAAgB;AACtB,IAAM,WAAW;AACjB,IAAM,mBAAmB;AACzB,IAAM,kBAAkB;AAIxB,IAAM,mBAAmB;AAuBzB,IAAM,cAAc,IAAI,OAAO,KAAK,UAAU,OAAO,SAAS,MAAM,UAAU,KAAK,UAAU,OAAO,eAAe,gBAAgB,GAAG;AACtI,IAAM,eAAe;AACrB,IAAM,iBAAiB;AACvB,IAAM,oBAAoB;AAC1B,IAAM,aAAa;AACnB,IAAM,0BAA0B;AAChC,IAAM,0BAA0B;AAOhC,IAAM,iBAAiB;AAEvB,IAAM,cAAc;AACpB,IAAM,aAAa;AACnB,IAAM,gBAAgB;AAGtB,IAAM,iBAAiB;AACvB,IAAM,aAAa;AACnB,IAAM,gBAAgB;AACtB,IAAM,yBAAyB;AAC/B,IAAM,aAAa;AACnB,IAAM,eAAe;AACrB,IAAM,eAAe;AAKrB,IAAM,MAAM,UAAQ,CAAC,YAAY,WAAW;AAI1C,MAAI,QAAQ,KAAK,OAAK,MAAM,MAAS,GAAG;AACtC,YAAQ,KAAK,kGAAuG;AAAA,EACtH;AACA;AAIE,QAAI,OAAO,KAAK,SAAO,MAAM,cAAc,CAAC,GAAG;AAC7C,MAAAE,cAAa,IAAI;AAAA,8GAAiN;AAAA,IACpO;AAAA,EACF;AACA,SAAO;AAAA;AAAA,IAEL,CAAC,YAAY,GAAG;AAAA,IAChB;AAAA,IACA;AAAA,EACF;AACF;AAcA,IAAM,OAAO,IAAI,WAAW;AAyB5B,IAAM,MAAM,IAAI,UAAU;AAyB1B,IAAM,SAAS,IAAI,aAAa;AAKhC,IAAM,WAAW,OAAO,IAAI,cAAc;AAoB1C,IAAM,UAAU,OAAO,IAAI,aAAa;AAQxC,IAAM,gBAAgB,oBAAI,QAAQ;AAClC,IAAM,SAAS,EAAE;AAAA,EAAiB;AAAA,EAAG;AAAA;AAA2C;AAChF,IAAI,2BAA2B;AAC/B,SAAS,wBAAwB,KAAK,eAAe;AAMnD,MAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,IAAI,eAAe,KAAK,GAAG;AAC/C,QAAI,UAAU;AACd;AACE,gBAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAUN,KAAK,EAAE,QAAQ,SAAS,IAAI;AAAA,IAClC;AACA,UAAM,IAAI,MAAM,OAAO;AAAA,EACzB;AACA,SAAO,WAAW,SAAY,OAAO,WAAW,aAAa,IAAI;AACnE;AAaA,IAAM,kBAAkB,CAAC,SAAS,SAAS;AAOzC,QAAM,IAAI,QAAQ,SAAS;AAI3B,QAAM,YAAY,CAAC;AACnB,MAAIE,QAAO,SAAS,aAAa,UAAU,SAAS,gBAAgB,WAAW;AAI/E,MAAI;AAGJ,MAAI,QAAQ;AACZ,WAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,UAAM,IAAI,QAAQ,CAAC;AAMnB,QAAI,mBAAmB;AACvB,QAAI;AACJ,QAAI,YAAY;AAChB,QAAI;AAGJ,WAAO,YAAY,EAAE,QAAQ;AAE3B,YAAM,YAAY;AAClB,cAAQ,MAAM,KAAK,CAAC;AACpB,UAAI,UAAU,MAAM;AAClB;AAAA,MACF;AACA,kBAAY,MAAM;AAClB,UAAI,UAAU,cAAc;AAC1B,YAAI,MAAM,aAAa,MAAM,OAAO;AAClC,kBAAQ;AAAA,QACV,WAAW,MAAM,aAAa,MAAM,QAAW;AAE7C,kBAAQ;AAAA,QACV,WAAW,MAAM,QAAQ,MAAM,QAAW;AACxC,cAAI,eAAe,KAAK,MAAM,QAAQ,CAAC,GAAG;AAGxC,8BAAkB,IAAI,OAAO,KAAK,MAAM,QAAQ,CAAC,IAAI,GAAG;AAAA,UAC1D;AACA,kBAAQ;AAAA,QACV,WAAW,MAAM,gBAAgB,MAAM,QAAW;AAChD;AACE,kBAAM,IAAI,MAAM,kJAAuJ;AAAA,UACzK;AAAA,QACF;AAAA,MACF,WAAW,UAAU,aAAa;AAChC,YAAI,MAAM,YAAY,MAAM,KAAK;AAG/B,kBAAQ,mBAAmB;AAG3B,6BAAmB;AAAA,QACrB,WAAW,MAAM,cAAc,MAAM,QAAW;AAE9C,6BAAmB;AAAA,QACrB,OAAO;AACL,6BAAmB,MAAM,YAAY,MAAM,iBAAiB,EAAE;AAC9D,qBAAW,MAAM,cAAc;AAC/B,kBAAQ,MAAM,UAAU,MAAM,SAAY,cAAc,MAAM,UAAU,MAAM,MAAM,0BAA0B;AAAA,QAChH;AAAA,MACF,WAAW,UAAU,2BAA2B,UAAU,yBAAyB;AACjF,gBAAQ;AAAA,MACV,WAAW,UAAU,mBAAmB,UAAU,kBAAkB;AAClE,gBAAQ;AAAA,MACV,OAAO;AAGL,gBAAQ;AACR,0BAAkB;AAAA,MACpB;AAAA,IACF;AACA;AAIE,cAAQ,OAAO,qBAAqB,MAAM,UAAU,eAAe,UAAU,2BAA2B,UAAU,yBAAyB,0BAA0B;AAAA,IACvK;AAaA,UAAM,MAAM,UAAU,eAAe,QAAQ,IAAI,CAAC,EAAE,WAAW,IAAI,IAAI,MAAM;AAC7E,IAAAA,SAAQ,UAAU,eAAe,IAAI,aAAa,oBAAoB,KAAK,UAAU,KAAK,QAAQ,GAAG,EAAE,MAAM,GAAG,gBAAgB,IAAI,uBAAuB,EAAE,MAAM,gBAAgB,KAAK,SAAS,MAAM,IAAI,UAAU,qBAAqB,KAAK,IAAI;AAAA,EACrP;AACA,QAAM,aAAaA,SAAQ,QAAQ,CAAC,KAAK,UAAU,SAAS,aAAa,WAAW,SAAS,gBAAgB,YAAY;AAEzH,SAAO,CAAC,wBAAwB,SAAS,UAAU,GAAG,SAAS;AACjE;AACA,IAAM,WAAN,MAAM,UAAS;AAAA,EACb,YAEA;AAAA,IACE;AAAA,IACA,CAAC,YAAY,GAAG;AAAA,EAClB,GAAG,SAAS;AACV,SAAK,QAAQ,CAAC;AACd,QAAI;AACJ,QAAI,YAAY;AAChB,QAAI,gBAAgB;AACpB,UAAM,YAAY,QAAQ,SAAS;AACnC,UAAM,QAAQ,KAAK;AAEnB,UAAM,CAACA,OAAM,SAAS,IAAI,gBAAgB,SAAS,IAAI;AACvD,SAAK,KAAK,UAAS,cAAcA,OAAM,OAAO;AAC9C,WAAO,cAAc,KAAK,GAAG;AAE7B,QAAI,SAAS,cAAc,SAAS,eAAe;AACjD,YAAM,UAAU,KAAK,GAAG,QAAQ;AAChC,cAAQ,YAAY,GAAG,QAAQ,UAAU;AAAA,IAC3C;AAEA,YAAQ,OAAO,OAAO,SAAS,OAAO,QAAQ,MAAM,SAAS,WAAW;AACtE,UAAI,KAAK,aAAa,GAAG;AACvB;AACE,gBAAMC,OAAM,KAAK;AAKjB,cAAI,2BAA2B,KAAKA,IAAG,KAAK,KAAK,UAAU,SAAS,MAAM,GAAG;AAC3E,kBAAM,IAAI,0CAA0CA,IAAG,sDAA2DA,IAAG;AACrH,gBAAIA,SAAQ,YAAY;AACtB,oBAAM,IAAI,MAAM,CAAC;AAAA,YACnB,MAAO,CAAAH,cAAa,IAAI,CAAC;AAAA,UAC3B;AAAA,QACF;AAIA,YAAI,KAAK,cAAc,GAAG;AACxB,qBAAW,QAAQ,KAAK,kBAAkB,GAAG;AAC3C,gBAAI,KAAK,SAAS,oBAAoB,GAAG;AACvC,oBAAM,WAAW,UAAU,eAAe;AAC1C,oBAAM,QAAQ,KAAK,aAAa,IAAI;AACpC,oBAAM,UAAU,MAAM,MAAM,MAAM;AAClC,oBAAM,IAAI,eAAe,KAAK,QAAQ;AACtC,oBAAM,KAAK;AAAA,gBACT,MAAM;AAAA,gBACN,OAAO;AAAA,gBACP,MAAM,EAAE,CAAC;AAAA,gBACT,SAAS;AAAA,gBACT,MAAM,EAAE,CAAC,MAAM,MAAM,eAAe,EAAE,CAAC,MAAM,MAAM,uBAAuB,EAAE,CAAC,MAAM,MAAM,YAAY;AAAA,cACvG,CAAC;AACD,mBAAK,gBAAgB,IAAI;AAAA,YAC3B,WAAW,KAAK,WAAW,MAAM,GAAG;AAClC,oBAAM,KAAK;AAAA,gBACT,MAAM;AAAA,gBACN,OAAO;AAAA,cACT,CAAC;AACD,mBAAK,gBAAgB,IAAI;AAAA,YAC3B;AAAA,UACF;AAAA,QACF;AAGA,YAAI,eAAe,KAAK,KAAK,OAAO,GAAG;AAIrC,gBAAMI,WAAU,KAAK,YAAY,MAAM,MAAM;AAC7C,gBAAM,YAAYA,SAAQ,SAAS;AACnC,cAAI,YAAY,GAAG;AACjB,iBAAK,cAAcH,gBAAeA,cAAa,cAAc;AAG7D,qBAAS,IAAI,GAAG,IAAI,WAAW,KAAK;AAClC,mBAAK,OAAOG,SAAQ,CAAC,GAAG,aAAa,CAAC;AAEtC,qBAAO,SAAS;AAChB,oBAAM,KAAK;AAAA,gBACT,MAAM;AAAA,gBACN,OAAO,EAAE;AAAA,cACX,CAAC;AAAA,YACH;AAIA,iBAAK,OAAOA,SAAQ,SAAS,GAAG,aAAa,CAAC;AAAA,UAChD;AAAA,QACF;AAAA,MACF,WAAW,KAAK,aAAa,GAAG;AAC9B,cAAM,OAAO,KAAK;AAClB,YAAI,SAAS,aAAa;AACxB,gBAAM,KAAK;AAAA,YACT,MAAM;AAAA,YACN,OAAO;AAAA,UACT,CAAC;AAAA,QACH,OAAO;AACL,cAAI,IAAI;AACR,kBAAQ,IAAI,KAAK,KAAK,QAAQ,QAAQ,IAAI,CAAC,OAAO,IAAI;AAGpD,kBAAM,KAAK;AAAA,cACT,MAAM;AAAA,cACN,OAAO;AAAA,YACT,CAAC;AAED,iBAAK,OAAO,SAAS;AAAA,UACvB;AAAA,QACF;AAAA,MACF;AACA;AAAA,IACF;AACA;AAOE,UAAI,UAAU,WAAW,eAAe;AACtC,cAAM,IAAI,MAAM;AAAA,MAA2S,QAAQ,KAAK,QAAQ,IAAI,GAAG;AAAA,MACzV;AAAA,IACF;AAIA,IAAAL,kBAAiBA,eAAc;AAAA,MAC7B,MAAM;AAAA,MACN,UAAU;AAAA,MACV,kBAAkB,KAAK;AAAA,MACvB,OAAO,KAAK;AAAA,MACZ;AAAA,IACF,CAAC;AAAA,EACH;AAAA;AAAA;AAAA,EAGA,OAAO,cAAcG,OAAM,UAAU;AACnC,UAAM,KAAK,EAAE,cAAc,UAAU;AACrC,OAAG,YAAYA;AACf,WAAO;AAAA,EACT;AACF;AACA,SAAS,iBAAiB,MAAM,OAAO,SAAS,MAAM,gBAAgB;AAGpE,MAAI,UAAU,UAAU;AACtB,WAAO;AAAA,EACT;AACA,MAAI,mBAAmB,mBAAmB,SAAY,OAAO,eAAe,cAAc,IAAI,OAAO;AACrG,QAAM,2BAA2B,YAAY,KAAK,IAAI;AAAA;AAAA,IAEtD,MAAM,iBAAiB;AAAA;AACvB,MAAI,kBAAkB,gBAAgB,0BAA0B;AAE9D,uBAAmB,oCAAoC,IAAI,KAAK;AAChE,QAAI,6BAA6B,QAAW;AAC1C,yBAAmB;AAAA,IACrB,OAAO;AACL,yBAAmB,IAAI,yBAAyB,IAAI;AACpD,uBAAiB,aAAa,MAAM,QAAQ,cAAc;AAAA,IAC5D;AACA,QAAI,mBAAmB,QAAW;AAChC,OAAC,OAAO,iBAAiB,CAAC,GAAG,cAAc,IAAI;AAAA,IACjD,OAAO;AACL,aAAO,cAAc;AAAA,IACvB;AAAA,EACF;AACA,MAAI,qBAAqB,QAAW;AAClC,YAAQ,iBAAiB,MAAM,iBAAiB,UAAU,MAAM,MAAM,MAAM,GAAG,kBAAkB,cAAc;AAAA,EACjH;AACA,SAAO;AACT;AAKA,IAAM,mBAAN,MAAuB;AAAA,EACrB,YAAY,UAAU,QAAQ;AAC5B,SAAK,UAAU,CAAC;AAEhB,SAAK,2BAA2B;AAChC,SAAK,aAAa;AAClB,SAAK,WAAW;AAAA,EAClB;AAAA;AAAA,EAEA,IAAI,aAAa;AACf,WAAO,KAAK,SAAS;AAAA,EACvB;AAAA;AAAA,EAEA,IAAI,gBAAgB;AAClB,WAAO,KAAK,SAAS;AAAA,EACvB;AAAA;AAAA;AAAA,EAGA,OAAO,SAAS;AACd,UAAM;AAAA,MACJ,IAAI;AAAA,QACF;AAAA,MACF;AAAA,MACA;AAAA,IACF,IAAI,KAAK;AACT,UAAM,YAAY,SAAS,iBAAiB,GAAG,WAAW,SAAS,IAAI;AACvE,WAAO,cAAc;AACrB,QAAI,OAAO,OAAO,SAAS;AAC3B,QAAI,YAAY;AAChB,QAAI,YAAY;AAChB,QAAI,eAAe,MAAM,CAAC;AAC1B,WAAO,iBAAiB,QAAW;AACjC,UAAI,cAAc,aAAa,OAAO;AACpC,YAAI;AACJ,YAAI,aAAa,SAAS,YAAY;AACpC,iBAAO,IAAI,UAAU,MAAM,KAAK,aAAa,MAAM,OAAO;AAAA,QAC5D,WAAW,aAAa,SAAS,gBAAgB;AAC/C,iBAAO,IAAI,aAAa,KAAK,MAAM,aAAa,MAAM,aAAa,SAAS,MAAM,OAAO;AAAA,QAC3F,WAAW,aAAa,SAAS,cAAc;AAC7C,iBAAO,IAAI,YAAY,MAAM,MAAM,OAAO;AAAA,QAC5C;AACA,aAAK,QAAQ,KAAK,IAAI;AACtB,uBAAe,MAAM,EAAE,SAAS;AAAA,MAClC;AACA,UAAI,cAAc,cAAc,OAAO;AACrC,eAAO,OAAO,SAAS;AACvB;AAAA,MACF;AAAA,IACF;AAIA,WAAO,cAAc;AACrB,WAAO;AAAA,EACT;AAAA,EACA,QAAQ,QAAQ;AACd,QAAI,IAAI;AACR,eAAW,QAAQ,KAAK,SAAS;AAC/B,UAAI,SAAS,QAAW;AACtB,QAAAH,kBAAiBA,eAAc;AAAA,UAC7B,MAAM;AAAA,UACN;AAAA,UACA,OAAO,OAAO,CAAC;AAAA,UACf,YAAY;AAAA,UACZ;AAAA,UACA,kBAAkB;AAAA,QACpB,CAAC;AACD,YAAI,KAAK,YAAY,QAAW;AAC9B,eAAK,WAAW,QAAQ,MAAM,CAAC;AAI/B,eAAK,KAAK,QAAQ,SAAS;AAAA,QAC7B,OAAO;AACL,eAAK,WAAW,OAAO,CAAC,CAAC;AAAA,QAC3B;AAAA,MACF;AACA;AAAA,IACF;AAAA,EACF;AACF;AACA,IAAM,YAAN,MAAM,WAAU;AAAA;AAAA,EAEd,IAAI,gBAAgB;AAIlB,WAAO,KAAK,UAAU,iBAAiB,KAAK;AAAA,EAC9C;AAAA,EACA,YAAY,WAAW,SAAS,QAAQ,SAAS;AAC/C,SAAK,OAAO;AACZ,SAAK,mBAAmB;AAIxB,SAAK,2BAA2B;AAChC,SAAK,cAAc;AACnB,SAAK,YAAY;AACjB,SAAK,WAAW;AAChB,SAAK,UAAU;AAIf,SAAK,gBAAgB,SAAS,eAAe;AAC7C;AAEE,WAAK,iBAAiB;AAAA,IACxB;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAmBA,IAAI,aAAa;AACf,QAAI,aAAa,KAAK,KAAK,WAAW,EAAE;AACxC,UAAM,SAAS,KAAK;AACpB,QAAI,WAAW,UAAa,YAAY,aAAa,IAAiC;AAIpF,mBAAa,OAAO;AAAA,IACtB;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,YAAY;AACd,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,UAAU;AACZ,WAAO,KAAK;AAAA,EACd;AAAA,EACA,WAAW,OAAO,kBAAkB,MAAM;AACxC,QAAI,KAAK,eAAe,MAAM;AAC5B,YAAM,IAAI,MAAM,0UAA0U;AAAA,IAC5V;AACA,YAAQ,iBAAiB,MAAM,OAAO,eAAe;AACrD,QAAI,YAAY,KAAK,GAAG;AAItB,UAAI,UAAU,WAAW,SAAS,QAAQ,UAAU,IAAI;AACtD,YAAI,KAAK,qBAAqB,SAAS;AACrC,UAAAA,kBAAiBA,eAAc;AAAA,YAC7B,MAAM;AAAA,YACN,OAAO,KAAK;AAAA,YACZ,KAAK,KAAK;AAAA,YACV,QAAQ,KAAK;AAAA,YACb,SAAS,KAAK;AAAA,UAChB,CAAC;AACD,eAAK,QAAQ;AAAA,QACf;AACA,aAAK,mBAAmB;AAAA,MAC1B,WAAW,UAAU,KAAK,oBAAoB,UAAU,UAAU;AAChE,aAAK,YAAY,KAAK;AAAA,MACxB;AAAA,IAEF,WAAW,MAAM,YAAY,MAAM,QAAW;AAC5C,WAAK,sBAAsB,KAAK;AAAA,IAClC,WAAW,MAAM,aAAa,QAAW;AACvC,UAAI,KAAK,SAAS,SAAS,OAAO;AAChC,aAAK,YAAY,6GAAkH;AACnI,gBAAQ,KAAK,yCAAyC,OAAO,oEAAoE,8DAA8D,oEAAoE,2CAA2C;AAC9S;AAAA,MACF;AACA,WAAK,YAAY,KAAK;AAAA,IACxB,WAAW,WAAW,KAAK,GAAG;AAC5B,WAAK,gBAAgB,KAAK;AAAA,IAC5B,OAAO;AAEL,WAAK,YAAY,KAAK;AAAA,IACxB;AAAA,EACF;AAAA,EACA,QAAQ,MAAM;AACZ,WAAO,KAAK,KAAK,KAAK,WAAW,EAAE,UAAU,EAAE,aAAa,MAAM,KAAK,SAAS;AAAA,EAClF;AAAA,EACA,YAAY,OAAO;AACjB,QAAI,KAAK,qBAAqB,OAAO;AACnC,WAAK,QAAQ;AACb,UAAI,6BAA6B,eAAe;AAC9C,cAAM,iBAAiB,KAAK,YAAY,YAAY;AACpD,YAAI,mBAAmB,WAAW,mBAAmB,UAAU;AAC7D,cAAI,UAAU;AACd;AACE,gBAAI,mBAAmB,SAAS;AAC9B,wBAAU;AAAA,YACZ,OAAO;AACL,wBAAU;AAAA,YACZ;AAAA,UACF;AACA,gBAAM,IAAI,MAAM,OAAO;AAAA,QACzB;AAAA,MACF;AACA,MAAAA,kBAAiBA,eAAc;AAAA,QAC7B,MAAM;AAAA,QACN,OAAO,KAAK;AAAA,QACZ,QAAQ,KAAK;AAAA,QACb;AAAA,QACA,SAAS,KAAK;AAAA,MAChB,CAAC;AACD,WAAK,mBAAmB,KAAK,QAAQ,KAAK;AAAA,IAC5C;AAAA,EACF;AAAA,EACA,YAAY,OAAO;AAIjB,QAAI,KAAK,qBAAqB,WAAW,YAAY,KAAK,gBAAgB,GAAG;AAC3E,YAAM,OAAO,KAAK,KAAK,WAAW,EAAE;AACpC;AACE,YAAI,KAAK,mBAAmB,QAAW;AACrC,eAAK,iBAAiB,gBAAgB,MAAM,QAAQ,UAAU;AAAA,QAChE;AACA,gBAAQ,KAAK,eAAe,KAAK;AAAA,MACnC;AACA,MAAAA,kBAAiBA,eAAc;AAAA,QAC7B,MAAM;AAAA,QACN;AAAA,QACA;AAAA,QACA,SAAS,KAAK;AAAA,MAChB,CAAC;AACD,WAAK,OAAO;AAAA,IACd,OAAO;AACL;AACE,cAAM,WAAW,EAAE,eAAe,EAAE;AACpC,aAAK,YAAY,QAAQ;AAKzB,YAAI,KAAK,mBAAmB,QAAW;AACrC,eAAK,iBAAiB,gBAAgB,UAAU,QAAQ,UAAU;AAAA,QACpE;AACA,gBAAQ,KAAK,eAAe,KAAK;AACjC,QAAAA,kBAAiBA,eAAc;AAAA,UAC7B,MAAM;AAAA,UACN,MAAM;AAAA,UACN;AAAA,UACA,SAAS,KAAK;AAAA,QAChB,CAAC;AACD,iBAAS,OAAO;AAAA,MAClB;AAAA,IACF;AACA,SAAK,mBAAmB;AAAA,EAC1B;AAAA,EACA,sBAAsB,QAAQ;AAE5B,UAAM;AAAA,MACJ;AAAA,MACA,CAAC,YAAY,GAAG;AAAA,IAClB,IAAI;AAKJ,UAAM,WAAW,OAAO,SAAS,WAAW,KAAK,cAAc,MAAM,KAAK,KAAK,OAAO,WAAc,KAAK,KAAK,SAAS,cAAc,wBAAwB,KAAK,GAAG,KAAK,EAAE,CAAC,CAAC,GAAG,KAAK,OAAO,IAAI;AACjM,QAAI,KAAK,kBAAkB,eAAe,UAAU;AAClD,MAAAA,kBAAiBA,eAAc;AAAA,QAC7B,MAAM;AAAA,QACN;AAAA,QACA,UAAU,KAAK;AAAA,QACf,OAAO,KAAK,iBAAiB;AAAA,QAC7B,SAAS,KAAK;AAAA,QACd;AAAA,MACF,CAAC;AACD,WAAK,iBAAiB,QAAQ,MAAM;AAAA,IACtC,OAAO;AACL,YAAM,WAAW,IAAI,iBAAiB,UAAU,IAAI;AACpD,YAAM,WAAW,SAAS,OAAO,KAAK,OAAO;AAC7C,MAAAA,kBAAiBA,eAAc;AAAA,QAC7B,MAAM;AAAA,QACN;AAAA,QACA;AAAA,QACA,OAAO,SAAS;AAAA,QAChB,SAAS,KAAK;AAAA,QACd;AAAA,QACA;AAAA,MACF,CAAC;AACD,eAAS,QAAQ,MAAM;AACvB,MAAAA,kBAAiBA,eAAc;AAAA,QAC7B,MAAM;AAAA,QACN;AAAA,QACA;AAAA,QACA,OAAO,SAAS;AAAA,QAChB,SAAS,KAAK;AAAA,QACd;AAAA,QACA;AAAA,MACF,CAAC;AACD,WAAK,YAAY,QAAQ;AACzB,WAAK,mBAAmB;AAAA,IAC1B;AAAA,EACF;AAAA;AAAA;AAAA,EAGA,cAAc,QAAQ;AACpB,QAAI,WAAW,cAAc,IAAI,OAAO,OAAO;AAC/C,QAAI,aAAa,QAAW;AAC1B,oBAAc,IAAI,OAAO,SAAS,WAAW,IAAI,SAAS,MAAM,CAAC;AAAA,IACnE;AACA,WAAO;AAAA,EACT;AAAA,EACA,gBAAgB,OAAO;AAUrB,QAAI,CAAC,QAAQ,KAAK,gBAAgB,GAAG;AACnC,WAAK,mBAAmB,CAAC;AACzB,WAAK,QAAQ;AAAA,IACf;AAGA,UAAM,YAAY,KAAK;AACvB,QAAI,YAAY;AAChB,QAAI;AACJ,eAAW,QAAQ,OAAO;AACxB,UAAI,cAAc,UAAU,QAAQ;AAKlC,kBAAU,KAAK,WAAW,IAAI,WAAU,KAAK,QAAQ,aAAa,CAAC,GAAG,KAAK,QAAQ,aAAa,CAAC,GAAG,MAAM,KAAK,OAAO,CAAC;AAAA,MACzH,OAAO;AAEL,mBAAW,UAAU,SAAS;AAAA,MAChC;AACA,eAAS,WAAW,IAAI;AACxB;AAAA,IACF;AACA,QAAI,YAAY,UAAU,QAAQ;AAEhC,WAAK,QAAQ,YAAY,KAAK,SAAS,SAAS,EAAE,aAAa,SAAS;AAExE,gBAAU,SAAS;AAAA,IACrB;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYA,QAAQ,QAAQ,KAAK,KAAK,WAAW,EAAE,aAAa,MAAM;AACxD,SAAK,4BAA4B,OAAO,MAAM,IAAI;AAClD,WAAO,UAAU,KAAK,WAAW;AAI/B,YAAMM,KAAI,KAAK,KAAK,EAAE;AACtB,WAAK,KAAK,EAAE,OAAO;AACnB,cAAQA;AAAA,IACV;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,aAAa,aAAa;AACxB,QAAI,KAAK,aAAa,QAAW;AAC/B,WAAK,gBAAgB;AACrB,WAAK,4BAA4B,WAAW;AAAA,IAC9C,OAAO;AACL,YAAM,IAAI,MAAM,8EAAmF;AAAA,IACrG;AAAA,EACF;AACF;AACA,IAAM,gBAAN,MAAoB;AAAA,EAClB,IAAI,UAAU;AACZ,WAAO,KAAK,QAAQ;AAAA,EACtB;AAAA;AAAA,EAEA,IAAI,gBAAgB;AAClB,WAAO,KAAK,SAAS;AAAA,EACvB;AAAA,EACA,YAAY,SAAS,MAAM,SAAS,QAAQ,SAAS;AACnD,SAAK,OAAO;AAEZ,SAAK,mBAAmB;AAExB,SAAK,2BAA2B;AAChC,SAAK,UAAU;AACf,SAAK,OAAO;AACZ,SAAK,WAAW;AAChB,SAAK,UAAU;AACf,QAAI,QAAQ,SAAS,KAAK,QAAQ,CAAC,MAAM,MAAM,QAAQ,CAAC,MAAM,IAAI;AAChE,WAAK,mBAAmB,IAAI,MAAM,QAAQ,SAAS,CAAC,EAAE,KAAK,IAAI,OAAO,CAAC;AACvE,WAAK,UAAU;AAAA,IACjB,OAAO;AACL,WAAK,mBAAmB;AAAA,IAC1B;AACA;AACE,WAAK,aAAa;AAAA,IACpB;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAuBA,WAAW,OAAO,kBAAkB,MAAM,YAAY,UAAU;AAC9D,UAAM,UAAU,KAAK;AAErB,QAAI,SAAS;AACb,QAAI,YAAY,QAAW;AAEzB,cAAQ,iBAAiB,MAAM,OAAO,iBAAiB,CAAC;AACxD,eAAS,CAAC,YAAY,KAAK,KAAK,UAAU,KAAK,oBAAoB,UAAU;AAC7E,UAAI,QAAQ;AACV,aAAK,mBAAmB;AAAA,MAC1B;AAAA,IACF,OAAO;AAEL,YAAM,SAAS;AACf,cAAQ,QAAQ,CAAC;AACjB,UAAI,GAAG;AACP,WAAK,IAAI,GAAG,IAAI,QAAQ,SAAS,GAAG,KAAK;AACvC,YAAI,iBAAiB,MAAM,OAAO,aAAa,CAAC,GAAG,iBAAiB,CAAC;AACrE,YAAI,MAAM,UAAU;AAElB,cAAI,KAAK,iBAAiB,CAAC;AAAA,QAC7B;AACA,mBAAW,CAAC,YAAY,CAAC,KAAK,MAAM,KAAK,iBAAiB,CAAC;AAC3D,YAAI,MAAM,SAAS;AACjB,kBAAQ;AAAA,QACV,WAAW,UAAU,SAAS;AAC5B,oBAAU,KAAK,MAAM,QAAQ,IAAI,CAAC;AAAA,QACpC;AAGA,aAAK,iBAAiB,CAAC,IAAI;AAAA,MAC7B;AAAA,IACF;AACA,QAAI,UAAU,CAAC,UAAU;AACvB,WAAK,aAAa,KAAK;AAAA,IACzB;AAAA,EACF;AAAA;AAAA,EAEA,aAAa,OAAO;AAClB,QAAI,UAAU,SAAS;AACrB,WAAK,KAAK,OAAO,EAAE,gBAAgB,KAAK,IAAI;AAAA,IAC9C,OAAO;AACL;AACE,YAAI,KAAK,eAAe,QAAW;AACjC,eAAK,aAAa,yBAAyB,KAAK,SAAS,KAAK,MAAM,WAAW;AAAA,QACjF;AACA,gBAAQ,KAAK,WAAW,SAAS,EAAE;AAAA,MACrC;AACA,MAAAN,kBAAiBA,eAAc;AAAA,QAC7B,MAAM;AAAA,QACN,SAAS,KAAK;AAAA,QACd,MAAM,KAAK;AAAA,QACX;AAAA,QACA,SAAS,KAAK;AAAA,MAChB,CAAC;AACD,WAAK,KAAK,OAAO,EAAE,aAAa,KAAK,MAAM,SAAS,EAAE;AAAA,IACxD;AAAA,EACF;AACF;AACA,IAAM,eAAN,cAA2B,cAAc;AAAA,EACvC,cAAc;AACZ,UAAM,GAAG,SAAS;AAClB,SAAK,OAAO;AAAA,EACd;AAAA;AAAA,EAEA,aAAa,OAAO;AAClB;AACE,UAAI,KAAK,eAAe,QAAW;AACjC,aAAK,aAAa,yBAAyB,KAAK,SAAS,KAAK,MAAM,UAAU;AAAA,MAChF;AACA,cAAQ,KAAK,WAAW,KAAK;AAAA,IAC/B;AACA,IAAAA,kBAAiBA,eAAc;AAAA,MAC7B,MAAM;AAAA,MACN,SAAS,KAAK;AAAA,MACd,MAAM,KAAK;AAAA,MACX;AAAA,MACA,SAAS,KAAK;AAAA,IAChB,CAAC;AAED,SAAK,QAAQ,KAAK,IAAI,IAAI,UAAU,UAAU,SAAY;AAAA,EAC5D;AACF;AACA,IAAM,uBAAN,cAAmC,cAAc;AAAA,EAC/C,cAAc;AACZ,UAAM,GAAG,SAAS;AAClB,SAAK,OAAO;AAAA,EACd;AAAA;AAAA,EAEA,aAAa,OAAO;AAClB,IAAAA,kBAAiBA,eAAc;AAAA,MAC7B,MAAM;AAAA,MACN,SAAS,KAAK;AAAA,MACd,MAAM,KAAK;AAAA,MACX,OAAO,CAAC,EAAE,SAAS,UAAU;AAAA,MAC7B,SAAS,KAAK;AAAA,IAChB,CAAC;AACD,SAAK,KAAK,OAAO,EAAE,gBAAgB,KAAK,MAAM,CAAC,CAAC,SAAS,UAAU,OAAO;AAAA,EAC5E;AACF;AACA,IAAM,YAAN,cAAwB,cAAc;AAAA,EACpC,YAAY,SAAS,MAAM,SAAS,QAAQ,SAAS;AACnD,UAAM,SAAS,MAAM,SAAS,QAAQ,OAAO;AAC7C,SAAK,OAAO;AACZ,QAAI,KAAK,YAAY,QAAW;AAC9B,YAAM,IAAI,MAAM,QAAQ,QAAQ,SAAS,gBAAgB,IAAI,8HAAwI;AAAA,IACvM;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAIA,WAAW,aAAa,kBAAkB,MAAM;AAC9C,kBAAc,iBAAiB,MAAM,aAAa,iBAAiB,CAAC,KAAK;AACzE,QAAI,gBAAgB,UAAU;AAC5B;AAAA,IACF;AACA,UAAM,cAAc,KAAK;AAGzB,UAAM,uBAAuB,gBAAgB,WAAW,gBAAgB,WAAW,YAAY,YAAY,YAAY,WAAW,YAAY,SAAS,YAAY,QAAQ,YAAY,YAAY,YAAY;AAG/M,UAAM,oBAAoB,gBAAgB,YAAY,gBAAgB,WAAW;AACjF,IAAAA,kBAAiBA,eAAc;AAAA,MAC7B,MAAM;AAAA,MACN,SAAS,KAAK;AAAA,MACd,MAAM,KAAK;AAAA,MACX,OAAO;AAAA,MACP,SAAS,KAAK;AAAA,MACd,gBAAgB;AAAA,MAChB,aAAa;AAAA,MACb;AAAA,IACF,CAAC;AACD,QAAI,sBAAsB;AACxB,WAAK,QAAQ,oBAAoB,KAAK,MAAM,MAAM,WAAW;AAAA,IAC/D;AACA,QAAI,mBAAmB;AACrB,WAAK,QAAQ,iBAAiB,KAAK,MAAM,MAAM,WAAW;AAAA,IAC5D;AACA,SAAK,mBAAmB;AAAA,EAC1B;AAAA,EACA,YAAY,OAAO;AACjB,QAAI,OAAO,KAAK,qBAAqB,YAAY;AAC/C,WAAK,iBAAiB,KAAK,KAAK,SAAS,QAAQ,KAAK,SAAS,KAAK;AAAA,IACtE,OAAO;AACL,WAAK,iBAAiB,YAAY,KAAK;AAAA,IACzC;AAAA,EACF;AACF;AACA,IAAM,cAAN,MAAkB;AAAA,EAChB,YAAY,SAAS,QAAQ,SAAS;AACpC,SAAK,UAAU;AACf,SAAK,OAAO;AAEZ,SAAK,2BAA2B;AAChC,SAAK,WAAW;AAChB,SAAK,UAAU;AAAA,EACjB;AAAA;AAAA,EAEA,IAAI,gBAAgB;AAClB,WAAO,KAAK,SAAS;AAAA,EACvB;AAAA,EACA,WAAW,OAAO;AAChB,IAAAA,kBAAiBA,eAAc;AAAA,MAC7B,MAAM;AAAA,MACN,SAAS,KAAK;AAAA,MACd;AAAA,MACA,SAAS,KAAK;AAAA,IAChB,CAAC;AACD,qBAAiB,MAAM,KAAK;AAAA,EAC9B;AACF;AAsCA,IAAMO,mBAAkBC,QAAO;AAC/BD,mBAAkB,UAAU,SAAS;AAAA,CAGpCC,QAAO,oBAAoB,CAAC,GAAG,KAAK,OAAO;AAC5C,IAAIA,QAAO,gBAAgB,SAAS,GAAG;AACrC,iBAAe,MAAM;AACnB,IAAAC,cAAa,qBAAqB,gFAAqF;AAAA,EACzH,CAAC;AACH;AA0BA,IAAM,SAAS,CAAC,OAAO,WAAW,YAAY;AAC5C,MAAI,aAAa,MAAM;AAKrB,UAAM,IAAI,UAAU,2CAA2C,SAAS,EAAE;AAAA,EAC5E;AACA,QAAM,WAAW;AACjB,QAAM,gBAAgB,SAAS,gBAAgB;AAG/C,MAAI,OAAO,cAAc,YAAY;AACrC,EAAAC,kBAAiBA,eAAc;AAAA,IAC7B,MAAM;AAAA,IACN,IAAI;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AACD,MAAI,SAAS,QAAW;AACtB,UAAM,UAAU,SAAS,gBAAgB;AAGzC,kBAAc,YAAY,IAAI,OAAO,IAAI,UAAU,UAAU,aAAa,aAAa,GAAG,OAAO,GAAG,SAAS,QAAW,WAAW,CAAC,CAAC;AAAA,EACvI;AACA,OAAK,WAAW,KAAK;AACrB,EAAAA,kBAAiBA,eAAc;AAAA,IAC7B,MAAM;AAAA,IACN,IAAI;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AACD,SAAO;AACT;AACA;AACE,SAAO,eAAe;AACtB,SAAO,kBAAkB;AACzB;AACE,WAAO,gDAAgD;AAAA,EACzD;AACF;;;ACzxCA,IAAMC,6BAA4B,CAAC,MAAM,SAAS;AAClD,IAAM,WAAW;AAEjB,IAAMC,UAAS;AACf,IAAIC;AACJ,IAAI,UAAU;AAGZ,EAAAD,QAAO,sBAAsB,oBAAI,IAAI;AAMrC,EAAAC,gBAAe,CAAC,MAAM,YAAY;AAChC,eAAW,4BAA4B,IAAI;AAC3C,QAAI,CAACD,QAAO,kBAAkB,IAAI,OAAO,KAAK,CAACA,QAAO,kBAAkB,IAAI,IAAI,GAAG;AACjF,cAAQ,KAAK,OAAO;AACpB,MAAAA,QAAO,kBAAkB,IAAI,OAAO;AAAA,IACtC;AAAA,EACF;AACF;AAUO,IAAM,aAAN,cAAyB,gBAAgB;AAAA,EAC9C,cAAc;AACZ,UAAM,GAAG,SAAS;AAIlB,SAAK,gBAAgB;AAAA,MACnB,MAAM;AAAA,IACR;AACA,SAAK,cAAc;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA,EAIA,mBAAmB;AACjB,UAAM,aAAa,MAAM,iBAAiB;AAM1C,SAAK,cAAc,iBAAiB,WAAW;AAC/C,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,OAAO,mBAAmB;AAIxB,UAAM,QAAQ,KAAK,OAAO;AAC1B,QAAI,CAAC,KAAK,YAAY;AACpB,WAAK,cAAc,cAAc,KAAK;AAAA,IACxC;AACA,UAAM,OAAO,iBAAiB;AAC9B,SAAK,cAAc,OAAO,OAAO,KAAK,YAAY,KAAK,aAAa;AAAA,EACtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAqBA,oBAAoB;AAClB,UAAM,kBAAkB;AACxB,SAAK,aAAa,aAAa,IAAI;AAAA,EACrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAoBA,uBAAuB;AACrB,UAAM,qBAAqB;AAC3B,SAAK,aAAa,aAAa,KAAK;AAAA,EACtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,SAAS;AACP,WAAO;AAAA,EACT;AACF;AAEA,WAAW,eAAe,IAAI;AAQ9B,WAAWD,2BAA0B,aAAa,UAAU,CAAC,IAAI;AAEjEC,QAAO,2BAA2B;AAAA,EAChC;AACF,CAAC;AAED,IAAME,mBAAkB,WAAWF,QAAO,mCAAmCA,QAAO;AACpFE,mBAAkB;AAAA,EAChB;AACF,CAAC;CA6BAC,QAAO,uBAAuB,CAAC,GAAG,KAAK,OAAO;AAC/C,IAAI,YAAYA,QAAO,mBAAmB,SAAS,GAAG;AACpD,iBAAe,MAAM;AACnB,IAAAC,cAAa,qBAAqB,gFAAqF;AAAA,EACzH,CAAC;AACH;;;AChOO,IAAM,uBAAuB,UAAU,MAAM,QAAQ,KAAK,aAAa,QAAQ,UAAU,GAAG,sBAAsB;AAClH,IAAM,yBAAyB,wBAAwB,KAAK,UAAU,UAAU,wBAAwB;AACxG,IAAM,sBAAsB,KAAK,kBAAkB;AACnD,IAAM,4BAA4B,KAAK,wBAAwB;AAC/D,IAAM,wBAAwB;AAC9B,IAAM,aAAa,MAAM;AAC9B,QAAM,YAAY,UAAU,aAAa,UAAU,UAAU,KAAK;AAClE,MAAI,QAAQ;AAEZ,MAAI,2TAA2T,KAAK,SAAS,KAAK,0kDAA0kD,KAAK,UAAU,OAAO,GAAG,CAAC,CAAC,GAAG;AACx7D,YAAQ;AAAA,EACV;AACA,SAAO;AACT,GAAG;AACI,IAAM,cAAc,WAAW,KAAK,UAAU,SAAS;AACvD,IAAM,aAAa,WAAW,KAAK,UAAU,SAAS;AAYtD,IAAM,SAAS,mBAAmB,KAAK,UAAU,SAAS,KAAK,CAAC,KAAK,YAAY,UAAU,aAAa,cAAc,UAAU,iBAAiB;AAEjJ,IAAM,YAAY,WAAW,KAAK,UAAU,SAAS;AACrD,IAAM,aAAa,WAAW,KAAK,UAAU,SAAS;AACtD,IAAM,YAAY,gBAAgB,KAAK,UAAU,SAAS;AAC1D,IAAM,gBAAgB,UAAU,UAAU,KAAK,UAAU,SAAS;AAElE,IAAM,2BAA2B,cAAc,CAAC,cAAc,CAAC;AAC/D,IAAM,eAAe,QAAQ,OAAO,UAAU,OAAO,OAAO,eAAe;AAM3E,IAAM,6BAA6B,MAAM;AAC9C,MAAI,QAAQ;AACV,QAAI,CAAC,cAAc;AACjB,YAAM,aAAa,SAAS,cAAc,GAAG;AAC7C,aAAO,QAAQ,WAAW,WAAW,WAAW,QAAQ,YAAY,WAAW,QAAQ,SAAS,IAAI,CAAC;AAAA,IACvG,OAAO;AACL,aAAO,QAAQ,8CAA8C,KAAK,UAAU,SAAS,CAAC;AAAA,IACxF;AAAA,EACF,OAAO;AACL,WAAO;AAAA,EACT;AACF,GAAG;;;ACtDI,IAAM,iBAAiB,SAAO,CAAC,CAAC,OAAO,QAAQ,SAAS,UAAU,GAAG,IAAI;AACzE,IAAM,sBAAsB,MAAM;AACvC,MAAI,uBAAuB;AACzB;AAAA,EACF;AACA,QAAM,cAAc,CAAC;AACrB,MAAI,CAAC,sBAAsB;AACzB,gBAAY,KAAK,kBAAkB;AAAA,EACrC;AACA,MAAI,CAAC,wBAAwB;AAC3B,gBAAY,KAAK,oBAAoB;AAAA,EACvC;AACA,QAAM,IAAI,MAAM,4EAA4E,YAAY,KAAK,IAAI,CAAC,EAAE;AACtH;AAOO,IAAM,YAAY,gBAAc;AACrC,QAAM,MAAM,IAAI,IAAI,YAAY,OAAO,SAAS,SAAS,CAAC;AAC1D,SAAO,IAAI,SAAS;AACtB;AAQO,IAAM,WAAW,CAAC,IAAI,OAAO;AAClC,MAAI,QAAQ;AACZ,QAAM,YAAY,IAAI,SAAS;AAC7B,QAAI,SAAS,MAAM;AACjB;AAAA,IACF;AACA,OAAG,GAAG,IAAI;AACV,YAAQ,KAAK,WAAW,MAAM,QAAQ,MAAM,EAAE;AAAA,EAChD;AACA,YAAU,QAAQ,MAAM;AACtB,QAAI,SAAS,MAAM;AACjB,WAAK,aAAa,KAAK;AACvB,cAAQ;AAAA,IACV;AAAA,EACF;AACA,SAAO;AACT;AACO,IAAM,WAAW,CAAC,IAAI,OAAO;AAClC,MAAI,QAAQ;AACZ,SAAO,IAAI,SAAS;AAClB,QAAI,SAAS,MAAM;AACjB,WAAK,aAAa,KAAK;AAAA,IACzB;AACA,YAAQ,KAAK,WAAW,MAAM;AAC5B,cAAQ;AACR,SAAG,GAAG,IAAI;AAAA,IACZ,GAAG,EAAE;AAAA,EACP;AACF;AAeO,IAAM,QAAQ,CAAC,OAAO,YAAY,eAAe,KAAK,IAAI,YAAY,KAAK,IAAI,YAAY,KAAK,CAAC;AASjG,IAAM,eAAe,MAAM;AAChC,QAAM,0BAA0B;AAChC,QAAM,sBAAsB,IAAI,OAAO,OAAO,uBAAuB,OAAO;AAC5E,SAAO,MAAM,KAAK,sBAAsB,KAAK,mBAAmB,aAAa,KAAK,YAAY,KAAK,SAAS,UAAU,KAAK,SAAS,OAAO,MAAM,mBAAmB;AACtK,GAAG;AACI,IAAM,aAAa,CAAC,KAAK,MAAM,IAAI,QAAQ,aAAW,WAAW,SAAS,EAAE,CAAC;AAM7E,IAAM,eAAe,CAACC,SAAQ,WAAW,YAAY,SAAS,IAAI,QAAQ,aAAW;AAC1F,WAAS,QAAQ,OAAO;AACtB,QAAI,CAAC,aAAa,UAAU,KAAK,GAAG;AAClC,cAAQ,KAAK;AACb,MAAAA,QAAO,oBAAoB,WAAW,OAAO;AAAA,IAC/C;AAAA,EACF;AACA,EAAAA,QAAO,iBAAiB,WAAW,OAAO;AAC5C,CAAC;;;ACvGD,IAAI,aAAwC,SAAU,YAAYC,SAAQ,KAAKC,OAAM;AACnF,MAAIC,KAAI,UAAU,QAChB,IAAIA,KAAI,IAAIF,UAASC,UAAS,OAAOA,QAAO,OAAO,yBAAyBD,SAAQ,GAAG,IAAIC,OAC3FE;AACF,MAAI,OAAO,YAAY,YAAY,OAAO,QAAQ,aAAa,WAAY,KAAI,QAAQ,SAAS,YAAYH,SAAQ,KAAKC,KAAI;AAAA,MAAO,UAAS,IAAI,WAAW,SAAS,GAAG,KAAK,GAAG,IAAK,KAAIE,KAAI,WAAW,CAAC,EAAG,MAAKD,KAAI,IAAIC,GAAE,CAAC,IAAID,KAAI,IAAIC,GAAEH,SAAQ,KAAK,CAAC,IAAIG,GAAEH,SAAQ,GAAG,MAAM;AAC/Q,SAAOE,KAAI,KAAK,KAAK,OAAO,eAAeF,SAAQ,KAAK,CAAC,GAAG;AAC9D;AAKO,IAAM,eAAe;AAC5B,IAAM,2BAA2B;AACjC,IAAM,0BAA0B;AAChC,IAAM,mBAAmB;AAClB,IAAM,yBAAyB,OAAO,uBAAuB;AAC7D,IAAM,qBAAqB,OAAO,mBAAmB;AACrD,IAAM,qBAAqB,OAAO,mBAAmB;AAC5D,IAAM,2BAA2B,OAAO,yBAAyB;AAC1D,IAAM,mBAAmB,CAAAI,wBAAsB;AACpD,MAAIC,MAAIC,MAAIC;AAAA,EACZ,MAAM,sCAAsCH,oBAAmB;AAAA,IAC7D,cAAc;AACZ,YAAM,GAAG,SAAS;AAClB,WAAK,mBAAmB;AACxB,WAAK,cAAc;AACnB,WAAK,kBAAkB;AACvB,WAAK,iBAAiB;AACtB,WAAK,WAAW;AAChB,WAAK,cAAc;AACnB,WAAK,eAAe;AACpB,WAAKC,IAAE,IAAI;AACX,WAAKC,IAAE,IAAI;AACX,WAAKC,GAAE,IAAI;AAAA,IACb;AAAA,IACA,QAAQ,mBAAmB;AACzB,YAAM,QAAQ,iBAAiB;AAC/B,UAAI,kBAAkB,IAAI,iBAAiB,GAAG;AAC5C,aAAK,MAAM,EAAE,mBAAmB,KAAK,kBAAkB,YAAY;AACnE,aAAK,YAAY,EAAE;AAAA,MACrB;AACA,UAAI,kBAAkB,IAAI,gBAAgB,GAAG;AAC3C,aAAK,MAAM,EAAE,kBAAkB,KAAK,cAAc;AAClD,aAAK,YAAY,EAAE;AAAA,MACrB;AACA,UAAI,kBAAkB,IAAI,UAAU,GAAG;AACrC,aAAK,MAAM,EAAE,WAAW,KAAK;AAC7B,aAAK,YAAY,EAAE;AAAA,MACrB;AACA,UAAI,kBAAkB,IAAI,aAAa,GAAG;AACxC,aAAK,MAAM,EAAE,cAAc,KAAK,gBAAgB,SAAS,wBAAwB,KAAK,gBAAgB,QAAQ,iBAAiB,KAAK,gBAAgB,aAAa,sBAAsB,KAAK,gBAAgB,WAAW,oBAAoB,KAAK,gBAAgB,WAAW,oBAAoB,KAAK,gBAAgB,SAAS,gBAAgB;AAC7U,aAAK,YAAY,EAAE;AAAA,MACrB;AACA,WAAK,kBAAkB,IAAI,kBAAkB,KAAK,kBAAkB,IAAI,aAAa,MAAM,KAAK,qBAAqB,EAAE,GAAG;AACxH,aAAK,kBAAkB,EAAE;AAAA,MAC3B;AACA,UAAI,kBAAkB,IAAI,cAAc,GAAG;AACzC,aAAK,MAAM,EAAE,kBAAkB;AAC/B,aAAK,YAAY,EAAE;AAAA,MACrB;AAAA,IACF;AAAA,IACA,iBAAiB;AACf,aAAO,KAAK,MAAM,EAAE,aAAa,OAAO;AAAA,IAC1C;AAAA,IACA,EAAQF,OAAK,wBAAwBC,OAAK,oBAAoBC,MAAK,0BAA0B,mBAAmB,IAAI;AAAA;AAClH,cAAM;AAAA,UACJ;AAAA,UACA;AAAA,QACF,IAAI;AACJ,YAAI,KAAK,wBAAwB,KAAK,MAAM;AAC1C,eAAK,wBAAwB,EAAE;AAC/B,eAAK,wBAAwB,IAAI;AAAA,QACnC;AACA,cAAM;AAAA,UACJ;AAAA,QACF,IAAI,KAAK,SAAS;AAClB,YAAI,gBAAgB,MAAM;AACxB;AAAA,QACF;AACA,cAAM,oBAAoB,KAAK,gBAAgB,EAAE,cAAc,oBAAoB;AACnF,YAAI;AACF,gBAAM;AAAA,YACJ;AAAA,YACA;AAAA,UACF,IAAI,MAAM,aAAa,gCAAgC,eAAe,WAAW,GAAG,kBAAkB,cAAY,kBAAkB,MAAM,UAAU,GAAG,CAAC,CAAC,GAAG,KAAK,eAAe;AAChL,cAAI,KAAK,sBAAsB,MAAM,gBAAgB;AACnD,iBAAK,sBAAsB,IAAI;AAC/B,iBAAK,cAAc,IAAI,YAAY,oBAAoB,CAAC;AAAA,UAC1D;AACA,cAAI,UAAU,MAAM;AAGlB,iBAAK,kBAAkB,IAAI,OAAO,SAAS,eAAe,OAAO,iBAAiB;AAAA,UACpF,OAAO;AACL,iBAAK,kBAAkB,IAAI;AAAA,UAC7B;AACA,eAAK,MAAM,EAAE,wBAAwB,KAAK,sBAAsB,GAAG,KAAK,kBAAkB,CAAC;AAAA,QAC7F,SAAS,gBAAgB;AACvB,cAAI,0BAA0B,OAAO;AACnC,iBAAK,MAAM,EAAE,wBAAwB,MAAM,IAAI;AAC/C,kBAAM;AAAA,UACR;AAAA,QACF,UAAE;AACA,4BAAkB,CAAG;AAAA,QACvB;AAAA,MACF;AAAA;AAAA,EACF;AACA,aAAW,CAAC,SAAS;AAAA,IACnB,MAAM;AAAA,IACN,WAAW;AAAA,EACb,CAAC,CAAC,GAAG,8BAA8B,WAAW,oBAAoB,MAAM;AACxE,aAAW,CAAC,SAAS;AAAA,IACnB,MAAM;AAAA,IACN,WAAW;AAAA,EACb,CAAC,CAAC,GAAG,8BAA8B,WAAW,eAAe,MAAM;AACnE,aAAW,CAAC,SAAS;AAAA,IACnB,MAAM;AAAA,IACN,WAAW;AAAA,EACb,CAAC,CAAC,GAAG,8BAA8B,WAAW,mBAAmB,MAAM;AACvE,aAAW,CAAC,SAAS;AAAA,IACnB,MAAM;AAAA,IACN,WAAW;AAAA,EACb,CAAC,CAAC,GAAG,8BAA8B,WAAW,kBAAkB,MAAM;AACtE,aAAW,CAAC,SAAS;AAAA,IACnB,MAAM;AAAA,EACR,CAAC,CAAC,GAAG,8BAA8B,WAAW,YAAY,MAAM;AAChE,aAAW,CAAC,SAAS;AAAA,IACnB,MAAM;AAAA,IACN,WAAW;AAAA,EACb,CAAC,CAAC,GAAG,8BAA8B,WAAW,eAAe,MAAM;AACnE,aAAW,CAAC,SAAS;AAAA,IACnB,MAAM;AAAA,IACN,WAAW;AAAA,EACb,CAAC,CAAC,GAAG,8BAA8B,WAAW,gBAAgB,MAAM;AACpE,SAAO;AACT;;;ACtIA,IAAO,6BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAf,IAAO,uBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAf,IAAO,kCAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACGf,IAAM,iBAAib,+BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAeP,oBAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA+BZ,0BAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASd,IAAM,eAAe,gBAAc;AACxC,SAAO,gBAAgB,UAAU;AACnC;;;ACpXA,IAAI,iBAAiB,WAAY;AAC/B;AAIA,MAAI,YAAY;AAChB,MAAI,YAAY;AAChB,MAAI,WAAW,IAAI,WAAW,CAAC,GAAG,IAAI,KAAK,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,KAAK,IAAI,IAAI,EAAE,CAAC;AAC9M,MAAI,WAAW,IAAI,WAAW,CAAC,IAAI,GAAG,IAAI,GAAG,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,IAAI,GAAG,IAAI,IAAI,GAAG,KAAK,IAAI,GAAG,IAAI,KAAK,KAAK,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,CAAC;AACnR,MAAI,OAAO,gBAAgB,UAAU;AACnC,WAAO;AAAA,MACL,WAAW;AAAA,IACb;AAAA,EACF;AACA,MAAI,OAAO,YAAY,SAAS,QAAQ,IAAI,YAAY;AACxD,MAAI;AACJ,MAAI,QAAQ,YAAY,YAAY,OAAO,IAAI,GAAG,CAAC,CAAC,EAAE,KAAK,SAAU,QAAQ;AAC3E,eAAW,OAAO;AAClB,aAAS,QAAQ,kBAAkB;AAAA,EACrC,CAAC;AACD,WAAS,OAAO,MAAM;AACpB,QAAI,SAAS,IAAI,WAAW,KAAK,MAAM;AACvC,aAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,EAAE,GAAG;AACpC,UAAIC,MAAK,KAAK,WAAW,CAAC;AAC1B,aAAO,CAAC,IAAIA,MAAK,KAAKA,MAAK,KAAKA,MAAK,KAAKA,MAAK,KAAKA,MAAK;AAAA,IAC3D;AACA,QAAI,QAAQ;AACZ,aAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,EAAE,GAAG;AACpC,aAAO,OAAO,IAAI,OAAO,CAAC,IAAI,KAAK,SAAS,OAAO,CAAC,CAAC,KAAK,OAAO,CAAC,IAAI,MAAM,KAAK,OAAO,EAAE,CAAC;AAAA,IAC7F;AACA,WAAO,OAAO,OAAO,MAAM,GAAG,KAAK;AAAA,EACrC;AACA,WAAS,OAAO,KAAKC,SAAQ,OAAO,MAAM,QAAQ,QAAQ;AACxD,QAAI,OAAO,SAAS,QAAQ;AAC5B,QAAI,SAAS,QAAQ,IAAI,CAAC;AAC1B,QAAI,KAAK,KAAK,SAAS,IAAI;AAC3B,QAAI,KAAK,KAAK,OAAO,MAAM;AAC3B,QAAI,OAAO,IAAI,WAAW,SAAS,QAAQ,OAAO,MAAM;AACxD,SAAK,IAAI,QAAQ,EAAE;AACnB,QAAI,MAAM,IAAI,IAAI,OAAO,MAAM,IAAI,OAAO,MAAM;AAChD,QAAI,OAAO,KAAK,QAAQ;AACtB,aAAO,IAAI,QAAQ,IAAI;AAAA,IACzB;AACA,IAAAA,QAAO,IAAI,KAAK,SAAS,IAAI,KAAK,QAAQ,IAAI,CAAC;AAC/C,SAAK,KAAK,KAAK,CAAC,CAAC;AACjB,QAAI,OAAO,GAAG;AACZ,YAAM,IAAI,MAAM,4BAA4B,GAAG;AAAA,IACjD;AAAA,EACF;AACA,MAAI,UAAU;AAAA,IACZ,MAAM;AAAA,IACN,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,aAAa;AAAA,EACf;AACA,MAAI,WAAW;AAAA,IACb,YAAY;AAAA,IACZ,WAAW;AAAA,IACX,SAAS;AAAA,EACX;AACA,MAAI,UAAU,CAAC;AACf,MAAI,YAAY;AAChB,WAAS,aAAa,KAAK;AACzB,QAAI,SAAS;AAAA,MACX,QAAQ,IAAI,OAAO,GAAG;AAAA,MACtB,SAAS;AAAA,MACT,UAAU,CAAC;AAAA,IACb;AACA,WAAO,OAAO,YAAY,SAAU,OAAO;AACzC,UAAI,OAAO,MAAM;AACjB,aAAO,WAAW,KAAK;AACvB,aAAO,SAAS,KAAK,EAAE,EAAE,KAAK,MAAM,EAAE,KAAK,KAAK;AAChD,aAAO,OAAO,SAAS,KAAK,EAAE;AAAA,IAChC;AACA,WAAO;AAAA,EACT;AACA,WAAS,YAAY,OAAO;AAC1B,QAAI,SAAS,uEAAuE,IAAI,WAAW,OAAO,IAAI,CAAC,IAAI,yIAAmJ,OAAO,SAAS,IAAI,cAAc,SAAS;AACjT,QAAI,OAAO,IAAI,KAAK,CAAC,MAAM,GAAG;AAAA,MAC5B,MAAM;AAAA,IACR,CAAC;AACD,QAAI,MAAM,IAAI,gBAAgB,IAAI;AAClC,aAAS,IAAI,GAAG,IAAI,OAAO,EAAE,GAAG;AAC9B,cAAQ,CAAC,IAAI,aAAa,GAAG;AAAA,IAC/B;AACA,QAAI,gBAAgB,GAAG;AAAA,EACzB;AACA,WAAS,aAAa,OAAO,MAAM,QAAQ,MAAM,QAAQ;AACvD,QAAI,SAAS,QAAQ,CAAC;AACtB,aAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,EAAE,GAAG;AACvC,UAAI,QAAQ,CAAC,EAAE,UAAU,OAAO,SAAS;AACvC,iBAAS,QAAQ,CAAC;AAAA,MACpB;AAAA,IACF;AACA,WAAO,IAAI,QAAQ,SAAU,SAAS,QAAQ;AAC5C,UAAI,OAAO,IAAI,WAAW,MAAM;AAChC,UAAI,KAAK;AACT,aAAO,WAAW;AAClB,aAAO,SAAS,EAAE,IAAI;AAAA,QACpB;AAAA,QACA;AAAA,MACF;AACA,aAAO,OAAO,YAAY;AAAA,QACxB;AAAA,QACA;AAAA,QACA;AAAA,QACA,QAAQ;AAAA,QACR;AAAA,QACA;AAAA,MACF,GAAG,CAAC,KAAK,MAAM,CAAC;AAAA,IAClB,CAAC;AAAA,EACH;AACA,WAAS,cAAc,OAAO;AAC5B,UAAM,KAAK,WAAY;AACrB,UAAI,OAAO,MAAM;AACjB,UAAI;AACF,YAAIA,UAAS,IAAI,WAAW,KAAK,QAAQ,KAAK,IAAI;AAClD,eAAO,SAAS,QAAQ,KAAK,IAAI,GAAGA,SAAQ,KAAK,OAAO,KAAK,MAAM,KAAK,QAAQ,SAAS,QAAQ,KAAK,MAAM,CAAC;AAC7G,aAAK,YAAY;AAAA,UACf,IAAI,KAAK;AAAA,UACT,OAAO,KAAK;AAAA,UACZ,QAAQ;AAAA,UACR,OAAOA;AAAA,QACT,GAAG,CAACA,QAAO,MAAM,CAAC;AAAA,MACpB,SAAS,OAAO;AACd,aAAK,YAAY;AAAA,UACf,IAAI,KAAK;AAAA,UACT,OAAO,KAAK;AAAA,UACZ,QAAQ;AAAA,UACR,OAAO;AAAA,QACT,CAAC;AAAA,MACH;AAAA,IACF,CAAC;AAAA,EACH;AACA,SAAO;AAAA,IACL;AAAA,IACA,WAAW;AAAA,IACX,YAAY,SAAU,OAAO;AAC3B,kBAAY,KAAK;AAAA,IACnB;AAAA,IACA,oBAAoB,SAAUA,SAAQ,OAAO,MAAM,QAAQ,QAAQ;AACjE,aAAO,SAAS,QAAQ,4BAA4BA,SAAQ,OAAO,MAAM,QAAQ,SAAS,QAAQ,QAAQ,MAAM,CAAC,CAAC;AAAA,IACpH;AAAA,IACA,mBAAmB,SAAUA,SAAQ,OAAO,MAAM,QAAQ;AACxD,aAAO,SAAS,QAAQ,2BAA2BA,SAAQ,OAAO,MAAM,MAAM;AAAA,IAChF;AAAA,IACA,qBAAqB,SAAUA,SAAQ,OAAO,MAAM,QAAQ;AAC1D,aAAO,SAAS,QAAQ,6BAA6BA,SAAQ,OAAO,MAAM,MAAM;AAAA,IAClF;AAAA,IACA,kBAAkB,SAAUA,SAAQ,OAAO,MAAM,QAAQ,MAAM,QAAQ;AACrE,aAAO,SAAS,QAAQ,SAAS,IAAI,CAAC,GAAGA,SAAQ,OAAO,MAAM,QAAQ,SAAS,QAAQ,QAAQ,MAAM,CAAC,CAAC;AAAA,IACzG;AAAA,IACA,uBAAuB,SAAU,OAAO,MAAM,QAAQ,MAAM,QAAQ;AAClE,UAAI,QAAQ,SAAS,GAAG;AACtB,eAAO,aAAa,OAAO,MAAM,QAAQ,SAAS,IAAI,GAAG,QAAQ,MAAM,CAAC;AAAA,MAC1E;AACA,aAAO,MAAM,KAAK,WAAY;AAC5B,YAAIA,UAAS,IAAI,WAAW,QAAQ,IAAI;AACxC,eAAO,SAAS,QAAQ,SAAS,IAAI,CAAC,GAAGA,SAAQ,OAAO,MAAM,QAAQ,SAAS,QAAQ,QAAQ,MAAM,CAAC,CAAC;AACvG,eAAOA;AAAA,MACT,CAAC;AAAA,IACH;AAAA,EACF;AACF,EAAE;;;ACpKF,IAAM,aAAa,oBAAI,QAAQ;AAkC/B,IAAM,cAAN,cAA0B,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM/B,YAAY,SAAS;AACnB,UAAM,OAAO;AACb,SAAK,cAAc;AACnB,SAAK,gBAAgB,CAAC;AACtB,SAAK,gBAAgB;AACrB,SAAK,iBAAiB;AACtB,SAAK,cAAc;AACnB,SAAK,aAAa,CAAC;AACnB,SAAK,mBAAmB;AACxB,SAAK,kBAAkB;AACvB,SAAK,sBAAsB;AAAA,MACzB,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,IAAI;AAAA,IACN;AACA,SAAK,wBAAwB;AAAA,MAC3B,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,IAAI;AAAA,IACN;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,eAAe,MAAM;AACnB,SAAK,cAAc;AACnB,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,iBAAiB,QAAQ;AACvB,SAAK,gBAAgB;AACrB,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,eAAe,aAAa;AAC1B,SAAK,cAAc;AACnB,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,KAAK,KAAK,QAAQ,YAAY,SAAS;AACrC,UAAM,SAAS,IAAI,WAAW,KAAK,OAAO;AAC1C,WAAO,QAAQ,KAAK,IAAI;AACxB,WAAO,gBAAgB,aAAa;AACpC,WAAO,iBAAiB,KAAK,aAAa;AAC1C,WAAO,mBAAmB,KAAK,eAAe;AAC9C,WAAO,KAAK,KAAK,YAAU;AACzB,WAAK,MAAM,QAAQ,QAAQ,OAAO;AAAA,IACpC,GAAG,YAAY,OAAO;AAAA,EACxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,MAAM,QAAQ,QAAQ,UAAU,MAAM;AAAA,EAAC,GAAG;AACxC,SAAK,gBAAgB,QAAQ,QAAQ,MAAM,MAAM,gBAAgB,OAAO,EAAE,MAAM,OAAO;AAAA,EACzF;AAAA;AAAA,EAIA,gBAAgB,QAAQ,UAAU,cAAc,gBAAgB,mBAAmB,sBAAsB,UAAU,MAAM;AAAA,EAAC,GAAG;AAC3H,UAAM,aAAa;AAAA,MACjB,cAAc,gBAAgB,KAAK;AAAA,MACnC,gBAAgB,kBAAkB,KAAK;AAAA,MACvC,cAAc,CAAC,CAAC;AAAA,MAChB;AAAA,IACF;AACA,WAAO,KAAK,eAAe,QAAQ,UAAU,EAAE,KAAK,QAAQ,EAAE,MAAM,OAAO;AAAA,EAC7E;AAAA,EACA,eAAe,QAAQ,YAAY;AACjC,UAAM,UAAU,KAAK,UAAU,UAAU;AAIzC,QAAI,WAAW,IAAI,MAAM,GAAG;AAC1B,YAAM,aAAa,WAAW,IAAI,MAAM;AACxC,UAAI,WAAW,QAAQ,SAAS;AAC9B,eAAO,WAAW;AAAA,MACpB,WAAW,OAAO,eAAe,GAAG;AAKlC,cAAM,IAAI,MAAM,+GAAoH;AAAA,MACtI;AAAA,IACF;AAIA,QAAI;AACJ,UAAM,SAAS,KAAK;AACpB,UAAM,WAAW,OAAO;AAIxB,UAAM,kBAAkB,KAAK,WAAW,QAAQ,QAAQ,EAAE,KAAK,aAAW;AACxE,eAAS;AACT,aAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,eAAO,WAAW,MAAM,IAAI;AAAA,UAC1B;AAAA,UACA;AAAA,QACF;AACA,eAAO,YAAY;AAAA,UACjB,MAAM;AAAA,UACN,IAAI;AAAA,UACJ;AAAA,UACA;AAAA,QACF,GAAG,CAAC,MAAM,CAAC;AAAA,MAGb,CAAC;AAAA,IACH,CAAC,EAAE,KAAK,aAAW,KAAK,gBAAgB,QAAQ,QAAQ,CAAC;AAIzD,oBAAgB,MAAM,MAAM,IAAI,EAAE,KAAK,MAAM;AAC3C,UAAI,UAAU,QAAQ;AACpB,aAAK,aAAa,QAAQ,MAAM;AAAA,MAGlC;AAAA,IACF,CAAC;AAGD,eAAW,IAAI,QAAQ;AAAA,MACrB,KAAK;AAAA,MACL,SAAS;AAAA,IACX,CAAC;AACD,WAAO;AAAA,EACT;AAAA,EACA,gBAAgB,cAAc;AAC5B,UAAM,WAAW,IAAI,eAAe;AACpC,QAAI,aAAa,OAAO;AACtB,eAAS,SAAS,IAAI,gBAAgB,aAAa,MAAM,OAAO,CAAC,CAAC;AAAA,IACpE;AACA,aAAS,IAAI,GAAG,IAAI,aAAa,WAAW,QAAQ,KAAK;AACvD,YAAM,SAAS,aAAa,WAAW,CAAC;AACxC,YAAM,OAAO,OAAO;AACpB,YAAM,QAAQ,OAAO;AACrB,YAAM,WAAW,OAAO;AACxB,YAAM,YAAY,IAAI,gBAAgB,OAAO,QAAQ;AACrD,UAAI,SAAS,SAAS;AACpB,aAAK,wBAAwB,WAAW,OAAO,gBAAgB;AAC/D,kBAAU,aAAa,iBAAiB,iBAAiB;AAAA,MAC3D;AACA,eAAS,aAAa,MAAM,SAAS;AAAA,IACvC;AACA,WAAO;AAAA,EACT;AAAA,EACA,wBAAwB,WAAW,iBAAiB;AAMlD,QAAI,oBAAoB,eAAgB;AACxC,UAAMC,UAAS,IAAI,MAAM;AACzB,aAAS,IAAI,GAAG,KAAK,UAAU,OAAO,IAAI,IAAI,KAAK;AACjD,MAAAA,QAAO,oBAAoB,WAAW,CAAC;AACvC,sBAAgB,oBAAoBA,SAAQ,cAAc;AAC1D,gBAAU,OAAO,GAAGA,QAAO,GAAGA,QAAO,GAAGA,QAAO,CAAC;AAAA,IAClD;AAAA,EACF;AAAA,EACA,aAAa,KAAK,cAAc;AAC9B,UAAM,SAAS,IAAI,WAAW,KAAK,OAAO;AAC1C,WAAO,QAAQ,KAAK,WAAW;AAC/B,WAAO,gBAAgB,YAAY;AACnC,WAAO,mBAAmB,KAAK,eAAe;AAC9C,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,aAAO,KAAK,KAAK,SAAS,QAAW,MAAM;AAAA,IAC7C,CAAC;AAAA,EACH;AAAA,EACA,UAAU;AACR,SAAK,aAAa;AAClB,WAAO;AAAA,EACT;AAAA,EACA,eAAe;AACb,QAAI,KAAK,eAAgB,QAAO,KAAK;AACrC,UAAM,QAAQ,OAAO,gBAAgB,YAAY,KAAK,cAAc,SAAS;AAC7E,UAAM,mBAAmB,CAAC;AAC1B,QAAI,OAAO;AACT,uBAAiB,KAAK,KAAK,aAAa,oBAAoB,MAAM,CAAC;AAAA,IACrE,OAAO;AACL,uBAAiB,KAAK,KAAK,aAAa,yBAAyB,MAAM,CAAC;AACxE,uBAAiB,KAAK,KAAK,aAAa,sBAAsB,aAAa,CAAC;AAAA,IAC9E;AACA,SAAK,iBAAiB,QAAQ,IAAI,gBAAgB,EAAE,KAAK,eAAa;AACpE,YAAM,YAAY,UAAU,CAAC;AAC7B,UAAI,CAAC,OAAO;AACV,aAAK,cAAc,aAAa,UAAU,CAAC;AAAA,MAC7C;AACA,YAAM,KAAK,YAAY,SAAS;AAChC,YAAM,OAAO,CAAC,uBAAuB,WAAW,IAAI,gBAAgB,GAAG,UAAU,GAAG,QAAQ,GAAG,IAAI,GAAG,GAAG,YAAY,GAAG,CAAC,CAAC,EAAE,KAAK,IAAI;AACrI,WAAK,kBAAkB,IAAI,gBAAgB,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC;AAAA,IAC7D,CAAC;AACD,WAAO,KAAK;AAAA,EACd;AAAA,EACA,WAAW,QAAQ,UAAU;AAC3B,WAAO,KAAK,aAAa,EAAE,KAAK,MAAM;AACpC,UAAI,KAAK,WAAW,SAAS,KAAK,aAAa;AAC7C,cAAMC,UAAS,IAAI,OAAO,KAAK,eAAe;AAC9C,QAAAA,QAAO,aAAa,CAAC;AACrB,QAAAA,QAAO,aAAa,CAAC;AACrB,QAAAA,QAAO,YAAY;AACnB,QAAAA,QAAO,YAAY;AAAA,UACjB,MAAM;AAAA,UACN,eAAe,KAAK;AAAA,QACtB,CAAC;AACD,QAAAA,QAAO,YAAY,SAAU,GAAG;AAC9B,gBAAM,UAAU,EAAE;AAClB,kBAAQ,QAAQ,MAAM;AAAA,YACpB,KAAK;AACH,cAAAA,QAAO,WAAW,QAAQ,EAAE,EAAE,QAAQ,OAAO;AAC7C;AAAA,YACF,KAAK;AACH,cAAAA,QAAO,WAAW,QAAQ,EAAE,EAAE,OAAO,OAAO;AAC5C;AAAA,YACF;AACE,sBAAQ,MAAM,6CAA6C,QAAQ,OAAO,GAAG;AAAA,UACjF;AAAA,QACF;AACA,aAAK,WAAW,KAAKA,OAAM;AAAA,MAC7B,OAAO;AACL,aAAK,WAAW,KAAK,SAAUC,IAAGC,IAAG;AACnC,iBAAOD,GAAE,YAAYC,GAAE,YAAY,KAAK;AAAA,QAC1C,CAAC;AAAA,MACH;AACA,YAAM,SAAS,KAAK,WAAW,KAAK,WAAW,SAAS,CAAC;AACzD,aAAO,WAAW,MAAM,IAAI;AAC5B,aAAO,aAAa;AACpB,aAAO;AAAA,IACT,CAAC;AAAA,EACH;AAAA,EACA,aAAa,QAAQ,QAAQ;AAC3B,WAAO,aAAa,OAAO,WAAW,MAAM;AAC5C,WAAO,OAAO,WAAW,MAAM;AAC/B,WAAO,OAAO,WAAW,MAAM;AAAA,EACjC;AAAA,EACA,QAAQ;AACN,YAAQ,IAAI,eAAe,KAAK,WAAW,IAAI,YAAU,OAAO,SAAS,CAAC;AAAA,EAC5E;AAAA,EACA,UAAU;AACR,aAAS,IAAI,GAAG,IAAI,KAAK,WAAW,QAAQ,EAAE,GAAG;AAC/C,WAAK,WAAW,CAAC,EAAE,UAAU;AAAA,IAC/B;AACA,SAAK,WAAW,SAAS;AACzB,QAAI,KAAK,oBAAoB,IAAI;AAC/B,UAAI,gBAAgB,KAAK,eAAe;AAAA,IAC1C;AACA,WAAO;AAAA,EACT;AACF;AAIA,SAAS,cAAc;AACrB,MAAI;AACJ,MAAI;AACJ,cAAY,SAAU,GAAG;AACvB,UAAM,UAAU,EAAE;AAClB,YAAQ,QAAQ,MAAM;AAAA,MACpB,KAAK;AACH,wBAAgB,QAAQ;AACxB,yBAAiB,IAAI,QAAQ,SAAU,SAAsB;AAC3D,wBAAc,iBAAiB,SAAU,OAAO;AAE9C,oBAAQ;AAAA,cACN;AAAA,YACF,CAAC;AAAA,UACH;AACA,6BAAmB,aAAa;AAAA,QAClC,CAAC;AACD;AAAA,MACF,KAAK;AACH,cAAM,SAAS,QAAQ;AACvB,cAAM,aAAa,QAAQ;AAC3B,uBAAe,KAAK,YAAU;AAC5B,gBAAM,QAAQ,OAAO;AACrB,gBAAM,UAAU,IAAI,MAAM,QAAQ;AAClC,cAAI;AACF,kBAAM,WAAW,eAAe,OAAO,SAAS,IAAI,UAAU,MAAM,GAAG,UAAU;AACjF,kBAAM,UAAU,SAAS,WAAW,IAAI,UAAQ,KAAK,MAAM,MAAM;AACjE,gBAAI,SAAS,MAAO,SAAQ,KAAK,SAAS,MAAM,MAAM,MAAM;AAC5D,iBAAK,YAAY;AAAA,cACf,MAAM;AAAA,cACN,IAAI,QAAQ;AAAA,cACZ;AAAA,YACF,GAAG,OAAO;AAAA,UACZ,SAAS,OAAO;AACd,oBAAQ,MAAM,KAAK;AACnB,iBAAK,YAAY;AAAA,cACf,MAAM;AAAA,cACN,IAAI,QAAQ;AAAA,cACZ,OAAO,MAAM;AAAA,YACf,CAAC;AAAA,UACH,UAAE;AACA,kBAAM,QAAQ,OAAO;AAAA,UACvB;AAAA,QACF,CAAC;AACD;AAAA,IACJ;AAAA,EACF;AACA,WAAS,eAAe,OAAO,SAAS,OAAO,YAAY;AACzD,UAAM,eAAe,WAAW;AAChC,UAAM,iBAAiB,WAAW;AAClC,QAAI;AACJ,QAAI;AACJ,UAAM,eAAe,QAAQ,uBAAuB,KAAK;AACzD,QAAI,iBAAiB,MAAM,iBAAiB;AAC1C,sBAAgB,IAAI,MAAM,KAAK;AAC/B,uBAAiB,QAAQ,kBAAkB,OAAO,MAAM,YAAY,aAAa;AAAA,IACnF,WAAW,iBAAiB,MAAM,aAAa;AAC7C,sBAAgB,IAAI,MAAM,WAAW;AACrC,uBAAiB,QAAQ,wBAAwB,OAAO,MAAM,YAAY,aAAa;AAAA,IACzF,OAAO;AACL,YAAM,IAAI,MAAM,8CAA8C;AAAA,IAChE;AACA,QAAI,CAAC,eAAe,GAAG,KAAK,cAAc,QAAQ,GAAG;AACnD,YAAM,IAAI,MAAM,yCAAyC,eAAe,UAAU,CAAC;AAAA,IACrF;AACA,UAAM,WAAW;AAAA,MACf,OAAO;AAAA,MACP,YAAY,CAAC;AAAA,IACf;AAGA,eAAW,iBAAiB,cAAc;AACxC,YAAM,gBAAgB,KAAK,eAAe,aAAa,CAAC;AACxD,UAAI;AACJ,UAAI;AAMJ,UAAI,WAAW,cAAc;AAC3B,sBAAc,aAAa,aAAa;AACxC,oBAAY,QAAQ,uBAAuB,eAAe,WAAW;AAAA,MACvE,OAAO;AACL,sBAAc,QAAQ,eAAe,eAAe,MAAM,aAAa,aAAa,CAAC,CAAC;AACtF,YAAI,gBAAgB,GAAI;AACxB,oBAAY,QAAQ,aAAa,eAAe,WAAW;AAAA,MAC7D;AACA,YAAM,kBAAkB,gBAAgB,OAAO,SAAS,eAAe,eAAe,eAAe,SAAS;AAC9G,UAAI,kBAAkB,SAAS;AAC7B,wBAAgB,mBAAmB,WAAW;AAAA,MAChD;AACA,eAAS,WAAW,KAAK,eAAe;AAAA,IAC1C;AAGA,QAAI,iBAAiB,MAAM,iBAAiB;AAC1C,eAAS,QAAQ,YAAY,OAAO,SAAS,aAAa;AAAA,IAC5D;AACA,UAAM,QAAQ,aAAa;AAC3B,WAAO;AAAA,EACT;AACA,WAAS,YAAY,OAAO,SAAS,eAAe;AAClD,UAAM,WAAW,cAAc,UAAU;AACzC,UAAM,aAAa,WAAW;AAC9B,UAAM,aAAa,aAAa;AAChC,UAAM,MAAM,MAAM,QAAQ,UAAU;AACpC,YAAQ,wBAAwB,eAAe,YAAY,GAAG;AAC9D,UAAM,QAAQ,IAAI,YAAY,MAAM,QAAQ,QAAQ,KAAK,UAAU,EAAE,MAAM;AAC3E,UAAM,MAAM,GAAG;AACf,WAAO;AAAA,MACL,OAAO;AAAA,MACP,UAAU;AAAA,IACZ;AAAA,EACF;AACA,WAAS,gBAAgB,OAAO,SAAS,eAAe,eAAe,eAAe,WAAW;AAC/F,UAAM,gBAAgB,UAAU,eAAe;AAC/C,UAAM,YAAY,cAAc,WAAW;AAC3C,UAAM,YAAY,YAAY;AAC9B,UAAM,aAAa,YAAY,cAAc;AAC7C,UAAM,WAAW,iBAAiB,OAAO,aAAa;AACtD,UAAM,MAAM,MAAM,QAAQ,UAAU;AACpC,YAAQ,kCAAkC,eAAe,WAAW,UAAU,YAAY,GAAG;AAC7F,UAAM,QAAQ,IAAI,cAAc,MAAM,QAAQ,QAAQ,KAAK,SAAS,EAAE,MAAM;AAC5E,UAAM,MAAM,GAAG;AACf,WAAO;AAAA,MACL,MAAM;AAAA,MACN;AAAA,MACA,UAAU;AAAA,IACZ;AAAA,EACF;AACA,WAAS,iBAAiB,OAAO,eAAe;AAC9C,YAAQ,eAAe;AAAA,MACrB,KAAK;AACH,eAAO,MAAM;AAAA,MACf,KAAK;AACH,eAAO,MAAM;AAAA,MACf,KAAK;AACH,eAAO,MAAM;AAAA,MACf,KAAK;AACH,eAAO,MAAM;AAAA,MACf,KAAK;AACH,eAAO,MAAM;AAAA,MACf,KAAK;AACH,eAAO,MAAM;AAAA,MACf,KAAK;AACH,eAAO,MAAM;AAAA,IACjB;AAAA,EACF;AACF;;;ACuDA,SAAS,oBAAoB,UAAU,UAAU;AAC/C,MAAI,aAAa,mBAAmB;AAClC,YAAQ,KAAK,yFAAyF;AACtG,WAAO;AAAA,EACT;AACA,MAAI,aAAa,uBAAuB,aAAa,uBAAuB;AAC1E,QAAI,QAAQ,SAAS,SAAS;AAI9B,QAAI,UAAU,MAAM;AAClB,YAAM,UAAU,CAAC;AACjB,YAAM,WAAW,SAAS,aAAa,UAAU;AACjD,UAAI,aAAa,QAAW;AAC1B,iBAAS,IAAI,GAAG,IAAI,SAAS,OAAO,KAAK;AACvC,kBAAQ,KAAK,CAAC;AAAA,QAChB;AACA,iBAAS,SAAS,OAAO;AACzB,gBAAQ,SAAS,SAAS;AAAA,MAC5B,OAAO;AACL,gBAAQ,MAAM,yGAAyG;AACvH,eAAO;AAAA,MACT;AAAA,IACF;AAIA,UAAM,oBAAoB,MAAM,QAAQ;AACxC,UAAM,aAAa,CAAC;AACpB,QAAI,aAAa,qBAAqB;AAGpC,eAAS,IAAI,GAAG,KAAK,mBAAmB,KAAK;AAC3C,mBAAW,KAAK,MAAM,KAAK,CAAC,CAAC;AAC7B,mBAAW,KAAK,MAAM,KAAK,CAAC,CAAC;AAC7B,mBAAW,KAAK,MAAM,KAAK,IAAI,CAAC,CAAC;AAAA,MACnC;AAAA,IACF,OAAO;AAGL,eAAS,IAAI,GAAG,IAAI,mBAAmB,KAAK;AAC1C,YAAI,IAAI,MAAM,GAAG;AACf,qBAAW,KAAK,MAAM,KAAK,CAAC,CAAC;AAC7B,qBAAW,KAAK,MAAM,KAAK,IAAI,CAAC,CAAC;AACjC,qBAAW,KAAK,MAAM,KAAK,IAAI,CAAC,CAAC;AAAA,QACnC,OAAO;AACL,qBAAW,KAAK,MAAM,KAAK,IAAI,CAAC,CAAC;AACjC,qBAAW,KAAK,MAAM,KAAK,IAAI,CAAC,CAAC;AACjC,qBAAW,KAAK,MAAM,KAAK,CAAC,CAAC;AAAA,QAC/B;AAAA,MACF;AAAA,IACF;AACA,QAAI,WAAW,SAAS,MAAM,mBAAmB;AAC/C,cAAQ,MAAM,kGAAkG;AAAA,IAClH;AAIA,UAAM,cAAc,SAAS,MAAM;AACnC,gBAAY,SAAS,UAAU;AAC/B,gBAAY,YAAY;AACxB,WAAO;AAAA,EACT,OAAO;AACL,YAAQ,MAAM,uEAAuE,QAAQ;AAC7F,WAAO;AAAA,EACT;AACF;;;AChiBA,IAAM,aAAN,cAAyB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM9B,YAAY,SAAS;AACnB,UAAM,OAAO;AACb,SAAK,cAAc;AACnB,SAAK,aAAa;AAClB,SAAK,iBAAiB;AACtB,SAAK,kBAAkB,CAAC;AACxB,SAAK,SAAS,SAAU,QAAQ;AAC9B,aAAO,IAAI,gCAAgC,MAAM;AAAA,IACnD,CAAC;AACD,SAAK,SAAS,SAAU,QAAQ;AAC9B,aAAO,IAAI,iCAAiC,MAAM;AAAA,IACpD,CAAC;AACD,SAAK,SAAS,SAAU,QAAQ;AAC9B,aAAO,IAAI,2BAA2B,MAAM;AAAA,IAC9C,CAAC;AACD,SAAK,SAAS,SAAU,QAAQ;AAC9B,aAAO,IAAI,yBAAyB,MAAM;AAAA,IAC5C,CAAC;AACD,SAAK,SAAS,SAAU,QAAQ;AAC9B,aAAO,IAAI,yBAAyB,MAAM;AAAA,IAC5C,CAAC;AACD,SAAK,SAAS,SAAU,QAAQ;AAC9B,aAAO,IAAI,4BAA4B,MAAM;AAAA,IAC/C,CAAC;AACD,SAAK,SAAS,SAAU,QAAQ;AAC9B,aAAO,IAAI,mCAAmC,MAAM;AAAA,IACtD,CAAC;AACD,SAAK,SAAS,SAAU,QAAQ;AAC9B,aAAO,IAAI,6BAA6B,MAAM;AAAA,IAChD,CAAC;AACD,SAAK,SAAS,SAAU,QAAQ;AAC9B,aAAO,IAAI,0BAA0B,MAAM;AAAA,IAC7C,CAAC;AACD,SAAK,SAAS,SAAU,QAAQ;AAC9B,aAAO,IAAI,uCAAuC,MAAM;AAAA,IAC1D,CAAC;AACD,SAAK,SAAS,SAAU,QAAQ;AAC9B,aAAO,IAAI,+BAA+B,MAAM;AAAA,IAClD,CAAC;AACD,SAAK,SAAS,SAAU,QAAQ;AAC9B,aAAO,IAAI,kCAAkC,MAAM;AAAA,IACrD,CAAC;AACD,SAAK,SAAS,SAAU,QAAQ;AAC9B,aAAO,IAAI,iCAAiC,MAAM;AAAA,IACpD,CAAC;AACD,SAAK,SAAS,SAAU,QAAQ;AAC9B,aAAO,IAAI,2BAA2B,MAAM;AAAA,IAC9C,CAAC;AACD,SAAK,SAAS,SAAU,QAAQ;AAC9B,aAAO,IAAI,oBAAoB,MAAM;AAAA,IACvC,CAAC;AACD,SAAK,SAAS,SAAU,QAAQ;AAC9B,aAAO,IAAI,uBAAuB,MAAM;AAAA,IAC1C,CAAC;AACD,SAAK,SAAS,SAAU,QAAQ;AAC9B,aAAO,IAAI,sBAAsB,MAAM;AAAA,IACzC,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,KAAK,KAAK,QAAQ,YAAY,SAAS;AACrC,UAAM,QAAQ;AACd,QAAI;AACJ,QAAI,KAAK,iBAAiB,IAAI;AAC5B,qBAAe,KAAK;AAAA,IACtB,WAAW,KAAK,SAAS,IAAI;AAM3B,YAAM,cAAc,YAAY,eAAe,GAAG;AAClD,qBAAe,YAAY,WAAW,aAAa,KAAK,IAAI;AAAA,IAC9D,OAAO;AACL,qBAAe,YAAY,eAAe,GAAG;AAAA,IAC/C;AAKA,SAAK,QAAQ,UAAU,GAAG;AAC1B,UAAM,WAAW,SAAU,GAAG;AAC5B,UAAI,SAAS;AACX,gBAAQ,CAAC;AAAA,MACX,OAAO;AACL,gBAAQ,MAAM,CAAC;AAAA,MACjB;AACA,YAAM,QAAQ,UAAU,GAAG;AAC3B,YAAM,QAAQ,QAAQ,GAAG;AAAA,IAC3B;AACA,UAAM,SAAS,IAAI,WAAW,KAAK,OAAO;AAC1C,WAAO,QAAQ,KAAK,IAAI;AACxB,WAAO,gBAAgB,aAAa;AACpC,WAAO,iBAAiB,KAAK,aAAa;AAC1C,WAAO,mBAAmB,KAAK,eAAe;AAC9C,WAAO,KAAK,KAAK,SAAU,MAAM;AAC/B,UAAI;AACF,cAAM,MAAM,MAAM,cAAc,SAAU,MAAM;AAC9C,iBAAO,IAAI;AACX,gBAAM,QAAQ,QAAQ,GAAG;AAAA,QAC3B,GAAG,QAAQ;AAAA,MACb,SAAS,GAAG;AACV,iBAAS,CAAC;AAAA,MACZ;AAAA,IACF,GAAG,YAAY,QAAQ;AAAA,EACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,eAAeC,cAAa;AAC1B,SAAK,cAAcA;AACnB,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,cAAcC,aAAY;AACxB,SAAK,aAAaA;AAClB,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,kBAAkBC,iBAAgB;AAChC,SAAK,iBAAiBA;AACtB,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,SAAS,UAAU;AACjB,QAAI,KAAK,gBAAgB,QAAQ,QAAQ,MAAM,IAAI;AACjD,WAAK,gBAAgB,KAAK,QAAQ;AAAA,IACpC;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,WAAW,UAAU;AACnB,QAAI,KAAK,gBAAgB,QAAQ,QAAQ,MAAM,IAAI;AACjD,WAAK,gBAAgB,OAAO,KAAK,gBAAgB,QAAQ,QAAQ,GAAG,CAAC;AAAA,IACvE;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,MAAM,MAAM,MAAM,QAAQ,SAAS;AACjC,QAAI;AACJ,UAAM,aAAa,CAAC;AACpB,UAAM,UAAU,CAAC;AACjB,UAAM,cAAc,IAAI,YAAY;AACpC,QAAI,OAAO,SAAS,UAAU;AAC5B,aAAO,KAAK,MAAM,IAAI;AAAA,IACxB,WAAW,gBAAgB,aAAa;AACtC,YAAM,QAAQ,YAAY,OAAO,IAAI,WAAW,MAAM,GAAG,CAAC,CAAC;AAC3D,UAAI,UAAU,+BAA+B;AAC3C,YAAI;AACF,qBAAW,WAAW,eAAe,IAAI,IAAI,oBAAoB,IAAI;AAAA,QACvE,SAAS,OAAO;AACd,cAAI,QAAS,SAAQ,KAAK;AAC1B;AAAA,QACF;AACA,eAAO,KAAK,MAAM,WAAW,WAAW,eAAe,EAAE,OAAO;AAAA,MAClE,OAAO;AACL,eAAO,KAAK,MAAM,YAAY,OAAO,IAAI,CAAC;AAAA,MAC5C;AAAA,IACF,OAAO;AACL,aAAO;AAAA,IACT;AACA,QAAI,KAAK,UAAU,UAAa,KAAK,MAAM,QAAQ,CAAC,IAAI,GAAG;AACzD,UAAI,QAAS,SAAQ,IAAI,MAAM,yEAAyE,CAAC;AACzG;AAAA,IACF;AACA,UAAM,SAAS,IAAI,WAAW,MAAM;AAAA,MAClC,MAAM,QAAQ,KAAK,gBAAgB;AAAA,MACnC,aAAa,KAAK;AAAA,MAClB,eAAe,KAAK;AAAA,MACpB,SAAS,KAAK;AAAA,MACd,YAAY,KAAK;AAAA,MACjB,gBAAgB,KAAK;AAAA,IACvB,CAAC;AACD,WAAO,WAAW,iBAAiB,KAAK,aAAa;AACrD,aAAS,IAAI,GAAG,IAAI,KAAK,gBAAgB,QAAQ,KAAK;AACpD,YAAM,SAAS,KAAK,gBAAgB,CAAC,EAAE,MAAM;AAC7C,UAAI,CAAC,OAAO,KAAM,SAAQ,MAAM,sDAAsD;AACtF,cAAQ,OAAO,IAAI,IAAI;AAMvB,iBAAW,OAAO,IAAI,IAAI;AAAA,IAC5B;AACA,QAAI,KAAK,gBAAgB;AACvB,eAAS,IAAI,GAAG,IAAI,KAAK,eAAe,QAAQ,EAAE,GAAG;AACnD,cAAM,gBAAgB,KAAK,eAAe,CAAC;AAC3C,cAAM,qBAAqB,KAAK,sBAAsB,CAAC;AACvD,gBAAQ,eAAe;AAAA,UACrB,KAAK,WAAW;AACd,uBAAW,aAAa,IAAI,IAAI,4BAA4B;AAC5D;AAAA,UACF,KAAK,WAAW;AACd,uBAAW,aAAa,IAAI,IAAI,kCAAkC,MAAM,KAAK,WAAW;AACxF;AAAA,UACF,KAAK,WAAW;AACd,uBAAW,aAAa,IAAI,IAAI,8BAA8B;AAC9D;AAAA,UACF,KAAK,WAAW;AACd,uBAAW,aAAa,IAAI,IAAI,8BAA8B;AAC9D;AAAA,UACF;AACE,gBAAI,mBAAmB,QAAQ,aAAa,KAAK,KAAK,QAAQ,aAAa,MAAM,QAAW;AAC1F,sBAAQ,KAAK,0CAA0C,gBAAgB,IAAI;AAAA,YAC7E;AAAA,QACJ;AAAA,MACF;AAAA,IACF;AACA,WAAO,cAAc,UAAU;AAC/B,WAAO,WAAW,OAAO;AACzB,WAAO,MAAM,QAAQ,OAAO;AAAA,EAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,WAAW,MAAM,MAAM;AACrB,UAAM,QAAQ;AACd,WAAO,IAAI,QAAQ,SAAU,SAAS,QAAQ;AAC5C,YAAM,MAAM,MAAM,MAAM,SAAS,MAAM;AAAA,IACzC,CAAC;AAAA,EACH;AACF;AAIA,SAAS,eAAe;AACtB,MAAI,UAAU,CAAC;AACf,SAAO;AAAA,IACL,KAAK,SAAU,KAAK;AAClB,aAAO,QAAQ,GAAG;AAAA,IACpB;AAAA,IACA,KAAK,SAAU,KAAK,QAAQ;AAC1B,cAAQ,GAAG,IAAI;AAAA,IACjB;AAAA,IACA,QAAQ,SAAU,KAAK;AACrB,aAAO,QAAQ,GAAG;AAAA,IACpB;AAAA,IACA,WAAW,WAAY;AACrB,gBAAU,CAAC;AAAA,IACb;AAAA,EACF;AACF;AAMA,IAAM,aAAa;AAAA,EACjB,iBAAiB;AAAA,EACjB,4BAA4B;AAAA,EAC5B,qBAAqB;AAAA,EACrB,yBAAyB;AAAA,EACzB,0BAA0B;AAAA,EAC1B,mBAAmB;AAAA,EACnB,qBAAqB;AAAA,EACrB,wBAAwB;AAAA,EACxB,4BAA4B;AAAA,EAC5B,2BAA2B;AAAA,EAC3B,0BAA0B;AAAA,EAC1B,qBAAqB;AAAA,EACrB,sBAAsB;AAAA,EACtB,oBAAoB;AAAA,EACpB,uBAAuB;AAAA,EACvB,uBAAuB;AAAA,EACvB,iCAAiC;AAAA,EACjC,oBAAoB;AAAA,EACpB,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,yBAAyB;AAAA,EACzB,yBAAyB;AAC3B;AASA,IAAM,sBAAN,MAA0B;AAAA,EACxB,YAAY,QAAQ;AAClB,SAAK,SAAS;AACd,SAAK,OAAO,WAAW;AAGvB,SAAK,QAAQ;AAAA,MACX,MAAM,CAAC;AAAA,MACP,MAAM,CAAC;AAAA,IACT;AAAA,EACF;AAAA,EACA,YAAY;AACV,UAAM,SAAS,KAAK;AACpB,UAAM,WAAW,KAAK,OAAO,KAAK,SAAS,CAAC;AAC5C,aAAS,YAAY,GAAG,aAAa,SAAS,QAAQ,YAAY,YAAY,aAAa;AACzF,YAAM,UAAU,SAAS,SAAS;AAClC,UAAI,QAAQ,cAAc,QAAQ,WAAW,KAAK,IAAI,KAAK,QAAQ,WAAW,KAAK,IAAI,EAAE,UAAU,QAAW;AAC5G,eAAO,YAAY,KAAK,OAAO,QAAQ,WAAW,KAAK,IAAI,EAAE,KAAK;AAAA,MACpE;AAAA,IACF;AAAA,EACF;AAAA,EACA,WAAW,YAAY;AACrB,UAAM,SAAS,KAAK;AACpB,UAAM,WAAW,WAAW;AAC5B,QAAI,aAAa,OAAO,MAAM,IAAI,QAAQ;AAC1C,QAAI,WAAY,QAAO;AACvB,UAAM,OAAO,OAAO;AACpB,UAAM,aAAa,KAAK,cAAc,KAAK,WAAW,KAAK,IAAI,KAAK,CAAC;AACrE,UAAM,YAAY,WAAW,UAAU,CAAC;AACxC,UAAM,WAAW,UAAU,UAAU;AACrC,QAAI;AACJ,UAAM,QAAQ,IAAI,MAAM,QAAQ;AAChC,QAAI,SAAS,UAAU,OAAW,OAAM,OAAO,SAAS,MAAM,CAAC,GAAG,SAAS,MAAM,CAAC,GAAG,SAAS,MAAM,CAAC,GAAG,oBAAoB;AAC5H,UAAM,QAAQ,SAAS,UAAU,SAAY,SAAS,QAAQ;AAC9D,YAAQ,SAAS,MAAM;AAAA,MACrB,KAAK;AACH,oBAAY,IAAI,iBAAiB,KAAK;AACtC,kBAAU,OAAO,SAAS,IAAI,GAAG,GAAG,EAAE;AACtC,kBAAU,IAAI,UAAU,MAAM;AAC9B;AAAA,MACF,KAAK;AACH,oBAAY,IAAI,WAAW,KAAK;AAChC,kBAAU,WAAW;AACrB;AAAA,MACF,KAAK;AACH,oBAAY,IAAI,UAAU,KAAK;AAC/B,kBAAU,WAAW;AAErB,iBAAS,OAAO,SAAS,QAAQ,CAAC;AAClC,iBAAS,KAAK,iBAAiB,SAAS,KAAK,mBAAmB,SAAY,SAAS,KAAK,iBAAiB;AAC3G,iBAAS,KAAK,iBAAiB,SAAS,KAAK,mBAAmB,SAAY,SAAS,KAAK,iBAAiB,KAAK,KAAK;AACrH,kBAAU,QAAQ,SAAS,KAAK;AAChC,kBAAU,WAAW,IAAM,SAAS,KAAK,iBAAiB,SAAS,KAAK;AACxE,kBAAU,OAAO,SAAS,IAAI,GAAG,GAAG,EAAE;AACtC,kBAAU,IAAI,UAAU,MAAM;AAC9B;AAAA,MACF;AACE,cAAM,IAAI,MAAM,8CAA8C,SAAS,IAAI;AAAA,IAC/E;AAIA,cAAU,SAAS,IAAI,GAAG,GAAG,CAAC;AAC9B,2BAAuB,WAAW,QAAQ;AAC1C,QAAI,SAAS,cAAc,OAAW,WAAU,YAAY,SAAS;AACrE,cAAU,OAAO,OAAO,iBAAiB,SAAS,QAAQ,WAAW,UAAU;AAC/E,iBAAa,QAAQ,QAAQ,SAAS;AACtC,WAAO,MAAM,IAAI,UAAU,UAAU;AACrC,WAAO;AAAA,EACT;AAAA,EACA,cAAc,MAAM,OAAO;AACzB,QAAI,SAAS,QAAS;AACtB,WAAO,KAAK,WAAW,KAAK;AAAA,EAC9B;AAAA,EACA,qBAAqB,WAAW;AAC9B,UAAMC,QAAO;AACb,UAAM,SAAS,KAAK;AACpB,UAAM,OAAO,OAAO;AACpB,UAAM,UAAU,KAAK,MAAM,SAAS;AACpC,UAAM,WAAW,QAAQ,cAAc,QAAQ,WAAW,KAAK,IAAI,KAAK,CAAC;AACzE,UAAM,aAAa,SAAS;AAC5B,QAAI,eAAe,OAAW,QAAO;AACrC,WAAO,KAAK,WAAW,UAAU,EAAE,KAAK,SAAU,OAAO;AACvD,aAAO,OAAO,YAAYA,MAAK,OAAO,YAAY,KAAK;AAAA,IACzD,CAAC;AAAA,EACH;AACF;AASA,IAAM,8BAAN,MAAkC;AAAA,EAChC,cAAc;AACZ,SAAK,OAAO,WAAW;AAAA,EACzB;AAAA,EACA,kBAAkB;AAChB,WAAO;AAAA,EACT;AAAA,EACA,aAAa,gBAAgB,aAAa,QAAQ;AAChD,UAAM,UAAU,CAAC;AACjB,mBAAe,QAAQ,IAAI,MAAM,GAAK,GAAK,CAAG;AAC9C,mBAAe,UAAU;AACzB,UAAM,oBAAoB,YAAY;AACtC,QAAI,mBAAmB;AACrB,UAAI,MAAM,QAAQ,kBAAkB,eAAe,GAAG;AACpD,cAAM,QAAQ,kBAAkB;AAChC,uBAAe,MAAM,OAAO,MAAM,CAAC,GAAG,MAAM,CAAC,GAAG,MAAM,CAAC,GAAG,oBAAoB;AAC9E,uBAAe,UAAU,MAAM,CAAC;AAAA,MAClC;AACA,UAAI,kBAAkB,qBAAqB,QAAW;AACpD,gBAAQ,KAAK,OAAO,cAAc,gBAAgB,OAAO,kBAAkB,kBAAkB,cAAc,CAAC;AAAA,MAC9G;AAAA,IACF;AACA,WAAO,QAAQ,IAAI,OAAO;AAAA,EAC5B;AACF;AASA,IAAM,yCAAN,MAA6C;AAAA,EAC3C,YAAY,QAAQ;AAClB,SAAK,SAAS;AACd,SAAK,OAAO,WAAW;AAAA,EACzB;AAAA,EACA,qBAAqB,eAAe,gBAAgB;AAClD,UAAM,SAAS,KAAK;AACpB,UAAM,cAAc,OAAO,KAAK,UAAU,aAAa;AACvD,QAAI,CAAC,YAAY,cAAc,CAAC,YAAY,WAAW,KAAK,IAAI,GAAG;AACjE,aAAO,QAAQ,QAAQ;AAAA,IACzB;AACA,UAAM,mBAAmB,YAAY,WAAW,KAAK,IAAI,EAAE;AAC3D,QAAI,qBAAqB,QAAW;AAClC,qBAAe,oBAAoB;AAAA,IACrC;AACA,WAAO,QAAQ,QAAQ;AAAA,EACzB;AACF;AASA,IAAM,kCAAN,MAAsC;AAAA,EACpC,YAAY,QAAQ;AAClB,SAAK,SAAS;AACd,SAAK,OAAO,WAAW;AAAA,EACzB;AAAA,EACA,gBAAgB,eAAe;AAC7B,UAAM,SAAS,KAAK;AACpB,UAAM,cAAc,OAAO,KAAK,UAAU,aAAa;AACvD,QAAI,CAAC,YAAY,cAAc,CAAC,YAAY,WAAW,KAAK,IAAI,EAAG,QAAO;AAC1E,WAAO;AAAA,EACT;AAAA,EACA,qBAAqB,eAAe,gBAAgB;AAClD,UAAM,SAAS,KAAK;AACpB,UAAM,cAAc,OAAO,KAAK,UAAU,aAAa;AACvD,QAAI,CAAC,YAAY,cAAc,CAAC,YAAY,WAAW,KAAK,IAAI,GAAG;AACjE,aAAO,QAAQ,QAAQ;AAAA,IACzB;AACA,UAAM,UAAU,CAAC;AACjB,UAAM,YAAY,YAAY,WAAW,KAAK,IAAI;AAClD,QAAI,UAAU,oBAAoB,QAAW;AAC3C,qBAAe,YAAY,UAAU;AAAA,IACvC;AACA,QAAI,UAAU,qBAAqB,QAAW;AAC5C,cAAQ,KAAK,OAAO,cAAc,gBAAgB,gBAAgB,UAAU,gBAAgB,CAAC;AAAA,IAC/F;AACA,QAAI,UAAU,6BAA6B,QAAW;AACpD,qBAAe,qBAAqB,UAAU;AAAA,IAChD;AACA,QAAI,UAAU,8BAA8B,QAAW;AACrD,cAAQ,KAAK,OAAO,cAAc,gBAAgB,yBAAyB,UAAU,yBAAyB,CAAC;AAAA,IACjH;AACA,QAAI,UAAU,2BAA2B,QAAW;AAClD,cAAQ,KAAK,OAAO,cAAc,gBAAgB,sBAAsB,UAAU,sBAAsB,CAAC;AACzG,UAAI,UAAU,uBAAuB,UAAU,QAAW;AACxD,cAAM,QAAQ,UAAU,uBAAuB;AAC/C,uBAAe,uBAAuB,IAAI,QAAQ,OAAO,KAAK;AAAA,MAChE;AAAA,IACF;AACA,WAAO,QAAQ,IAAI,OAAO;AAAA,EAC5B;AACF;AASA,IAAM,mCAAN,MAAuC;AAAA,EACrC,YAAY,QAAQ;AAClB,SAAK,SAAS;AACd,SAAK,OAAO,WAAW;AAAA,EACzB;AAAA,EACA,gBAAgB,eAAe;AAC7B,UAAM,SAAS,KAAK;AACpB,UAAM,cAAc,OAAO,KAAK,UAAU,aAAa;AACvD,QAAI,CAAC,YAAY,cAAc,CAAC,YAAY,WAAW,KAAK,IAAI,EAAG,QAAO;AAC1E,WAAO;AAAA,EACT;AAAA,EACA,qBAAqB,eAAe,gBAAgB;AAClD,UAAM,SAAS,KAAK;AACpB,UAAM,cAAc,OAAO,KAAK,UAAU,aAAa;AACvD,QAAI,CAAC,YAAY,cAAc,CAAC,YAAY,WAAW,KAAK,IAAI,GAAG;AACjE,aAAO,QAAQ,QAAQ;AAAA,IACzB;AACA,UAAM,YAAY,YAAY,WAAW,KAAK,IAAI;AAClD,mBAAe,aAAa,UAAU,eAAe,SAAY,UAAU,aAAa;AACxF,WAAO,QAAQ,QAAQ;AAAA,EACzB;AACF;AASA,IAAM,oCAAN,MAAwC;AAAA,EACtC,YAAY,QAAQ;AAClB,SAAK,SAAS;AACd,SAAK,OAAO,WAAW;AAAA,EACzB;AAAA,EACA,gBAAgB,eAAe;AAC7B,UAAM,SAAS,KAAK;AACpB,UAAM,cAAc,OAAO,KAAK,UAAU,aAAa;AACvD,QAAI,CAAC,YAAY,cAAc,CAAC,YAAY,WAAW,KAAK,IAAI,EAAG,QAAO;AAC1E,WAAO;AAAA,EACT;AAAA,EACA,qBAAqB,eAAe,gBAAgB;AAClD,UAAM,SAAS,KAAK;AACpB,UAAM,cAAc,OAAO,KAAK,UAAU,aAAa;AACvD,QAAI,CAAC,YAAY,cAAc,CAAC,YAAY,WAAW,KAAK,IAAI,GAAG;AACjE,aAAO,QAAQ,QAAQ;AAAA,IACzB;AACA,UAAM,UAAU,CAAC;AACjB,UAAM,YAAY,YAAY,WAAW,KAAK,IAAI;AAClD,QAAI,UAAU,sBAAsB,QAAW;AAC7C,qBAAe,cAAc,UAAU;AAAA,IACzC;AACA,QAAI,UAAU,uBAAuB,QAAW;AAC9C,cAAQ,KAAK,OAAO,cAAc,gBAAgB,kBAAkB,UAAU,kBAAkB,CAAC;AAAA,IACnG;AACA,QAAI,UAAU,mBAAmB,QAAW;AAC1C,qBAAe,iBAAiB,UAAU;AAAA,IAC5C;AACA,QAAI,eAAe,8BAA8B,QAAW;AAC1D,qBAAe,4BAA4B,CAAC,KAAK,GAAG;AAAA,IACtD;AACA,QAAI,UAAU,gCAAgC,QAAW;AACvD,qBAAe,0BAA0B,CAAC,IAAI,UAAU;AAAA,IAC1D;AACA,QAAI,UAAU,gCAAgC,QAAW;AACvD,qBAAe,0BAA0B,CAAC,IAAI,UAAU;AAAA,IAC1D;AACA,QAAI,UAAU,gCAAgC,QAAW;AACvD,cAAQ,KAAK,OAAO,cAAc,gBAAgB,2BAA2B,UAAU,2BAA2B,CAAC;AAAA,IACrH;AACA,WAAO,QAAQ,IAAI,OAAO;AAAA,EAC5B;AACF;AASA,IAAM,8BAAN,MAAkC;AAAA,EAChC,YAAY,QAAQ;AAClB,SAAK,SAAS;AACd,SAAK,OAAO,WAAW;AAAA,EACzB;AAAA,EACA,gBAAgB,eAAe;AAC7B,UAAM,SAAS,KAAK;AACpB,UAAM,cAAc,OAAO,KAAK,UAAU,aAAa;AACvD,QAAI,CAAC,YAAY,cAAc,CAAC,YAAY,WAAW,KAAK,IAAI,EAAG,QAAO;AAC1E,WAAO;AAAA,EACT;AAAA,EACA,qBAAqB,eAAe,gBAAgB;AAClD,UAAM,SAAS,KAAK;AACpB,UAAM,cAAc,OAAO,KAAK,UAAU,aAAa;AACvD,QAAI,CAAC,YAAY,cAAc,CAAC,YAAY,WAAW,KAAK,IAAI,GAAG;AACjE,aAAO,QAAQ,QAAQ;AAAA,IACzB;AACA,UAAM,UAAU,CAAC;AACjB,mBAAe,aAAa,IAAI,MAAM,GAAG,GAAG,CAAC;AAC7C,mBAAe,iBAAiB;AAChC,mBAAe,QAAQ;AACvB,UAAM,YAAY,YAAY,WAAW,KAAK,IAAI;AAClD,QAAI,UAAU,qBAAqB,QAAW;AAC5C,YAAM,cAAc,UAAU;AAC9B,qBAAe,WAAW,OAAO,YAAY,CAAC,GAAG,YAAY,CAAC,GAAG,YAAY,CAAC,GAAG,oBAAoB;AAAA,IACvG;AACA,QAAI,UAAU,yBAAyB,QAAW;AAChD,qBAAe,iBAAiB,UAAU;AAAA,IAC5C;AACA,QAAI,UAAU,sBAAsB,QAAW;AAC7C,cAAQ,KAAK,OAAO,cAAc,gBAAgB,iBAAiB,UAAU,mBAAmB,cAAc,CAAC;AAAA,IACjH;AACA,QAAI,UAAU,0BAA0B,QAAW;AACjD,cAAQ,KAAK,OAAO,cAAc,gBAAgB,qBAAqB,UAAU,qBAAqB,CAAC;AAAA,IACzG;AACA,WAAO,QAAQ,IAAI,OAAO;AAAA,EAC5B;AACF;AAUA,IAAM,qCAAN,MAAyC;AAAA,EACvC,YAAY,QAAQ;AAClB,SAAK,SAAS;AACd,SAAK,OAAO,WAAW;AAAA,EACzB;AAAA,EACA,gBAAgB,eAAe;AAC7B,UAAM,SAAS,KAAK;AACpB,UAAM,cAAc,OAAO,KAAK,UAAU,aAAa;AACvD,QAAI,CAAC,YAAY,cAAc,CAAC,YAAY,WAAW,KAAK,IAAI,EAAG,QAAO;AAC1E,WAAO;AAAA,EACT;AAAA,EACA,qBAAqB,eAAe,gBAAgB;AAClD,UAAM,SAAS,KAAK;AACpB,UAAM,cAAc,OAAO,KAAK,UAAU,aAAa;AACvD,QAAI,CAAC,YAAY,cAAc,CAAC,YAAY,WAAW,KAAK,IAAI,GAAG;AACjE,aAAO,QAAQ,QAAQ;AAAA,IACzB;AACA,UAAM,UAAU,CAAC;AACjB,UAAM,YAAY,YAAY,WAAW,KAAK,IAAI;AAClD,QAAI,UAAU,uBAAuB,QAAW;AAC9C,qBAAe,eAAe,UAAU;AAAA,IAC1C;AACA,QAAI,UAAU,wBAAwB,QAAW;AAC/C,cAAQ,KAAK,OAAO,cAAc,gBAAgB,mBAAmB,UAAU,mBAAmB,CAAC;AAAA,IACrG;AACA,WAAO,QAAQ,IAAI,OAAO;AAAA,EAC5B;AACF;AASA,IAAM,+BAAN,MAAmC;AAAA,EACjC,YAAY,QAAQ;AAClB,SAAK,SAAS;AACd,SAAK,OAAO,WAAW;AAAA,EACzB;AAAA,EACA,gBAAgB,eAAe;AAC7B,UAAM,SAAS,KAAK;AACpB,UAAM,cAAc,OAAO,KAAK,UAAU,aAAa;AACvD,QAAI,CAAC,YAAY,cAAc,CAAC,YAAY,WAAW,KAAK,IAAI,EAAG,QAAO;AAC1E,WAAO;AAAA,EACT;AAAA,EACA,qBAAqB,eAAe,gBAAgB;AAClD,UAAM,SAAS,KAAK;AACpB,UAAM,cAAc,OAAO,KAAK,UAAU,aAAa;AACvD,QAAI,CAAC,YAAY,cAAc,CAAC,YAAY,WAAW,KAAK,IAAI,GAAG;AACjE,aAAO,QAAQ,QAAQ;AAAA,IACzB;AACA,UAAM,UAAU,CAAC;AACjB,UAAM,YAAY,YAAY,WAAW,KAAK,IAAI;AAClD,mBAAe,YAAY,UAAU,oBAAoB,SAAY,UAAU,kBAAkB;AACjG,QAAI,UAAU,qBAAqB,QAAW;AAC5C,cAAQ,KAAK,OAAO,cAAc,gBAAgB,gBAAgB,UAAU,gBAAgB,CAAC;AAAA,IAC/F;AACA,mBAAe,sBAAsB,UAAU,uBAAuB;AACtE,UAAM,aAAa,UAAU,oBAAoB,CAAC,GAAG,GAAG,CAAC;AACzD,mBAAe,mBAAmB,IAAI,MAAM,EAAE,OAAO,WAAW,CAAC,GAAG,WAAW,CAAC,GAAG,WAAW,CAAC,GAAG,oBAAoB;AACtH,WAAO,QAAQ,IAAI,OAAO;AAAA,EAC5B;AACF;AASA,IAAM,4BAAN,MAAgC;AAAA,EAC9B,YAAY,QAAQ;AAClB,SAAK,SAAS;AACd,SAAK,OAAO,WAAW;AAAA,EACzB;AAAA,EACA,gBAAgB,eAAe;AAC7B,UAAM,SAAS,KAAK;AACpB,UAAM,cAAc,OAAO,KAAK,UAAU,aAAa;AACvD,QAAI,CAAC,YAAY,cAAc,CAAC,YAAY,WAAW,KAAK,IAAI,EAAG,QAAO;AAC1E,WAAO;AAAA,EACT;AAAA,EACA,qBAAqB,eAAe,gBAAgB;AAClD,UAAM,SAAS,KAAK;AACpB,UAAM,cAAc,OAAO,KAAK,UAAU,aAAa;AACvD,QAAI,CAAC,YAAY,cAAc,CAAC,YAAY,WAAW,KAAK,IAAI,GAAG;AACjE,aAAO,QAAQ,QAAQ;AAAA,IACzB;AACA,UAAM,YAAY,YAAY,WAAW,KAAK,IAAI;AAClD,mBAAe,MAAM,UAAU,QAAQ,SAAY,UAAU,MAAM;AACnE,WAAO,QAAQ,QAAQ;AAAA,EACzB;AACF;AASA,IAAM,iCAAN,MAAqC;AAAA,EACnC,YAAY,QAAQ;AAClB,SAAK,SAAS;AACd,SAAK,OAAO,WAAW;AAAA,EACzB;AAAA,EACA,gBAAgB,eAAe;AAC7B,UAAM,SAAS,KAAK;AACpB,UAAM,cAAc,OAAO,KAAK,UAAU,aAAa;AACvD,QAAI,CAAC,YAAY,cAAc,CAAC,YAAY,WAAW,KAAK,IAAI,EAAG,QAAO;AAC1E,WAAO;AAAA,EACT;AAAA,EACA,qBAAqB,eAAe,gBAAgB;AAClD,UAAM,SAAS,KAAK;AACpB,UAAM,cAAc,OAAO,KAAK,UAAU,aAAa;AACvD,QAAI,CAAC,YAAY,cAAc,CAAC,YAAY,WAAW,KAAK,IAAI,GAAG;AACjE,aAAO,QAAQ,QAAQ;AAAA,IACzB;AACA,UAAM,UAAU,CAAC;AACjB,UAAM,YAAY,YAAY,WAAW,KAAK,IAAI;AAClD,mBAAe,oBAAoB,UAAU,mBAAmB,SAAY,UAAU,iBAAiB;AACvG,QAAI,UAAU,oBAAoB,QAAW;AAC3C,cAAQ,KAAK,OAAO,cAAc,gBAAgB,wBAAwB,UAAU,eAAe,CAAC;AAAA,IACtG;AACA,UAAM,aAAa,UAAU,uBAAuB,CAAC,GAAG,GAAG,CAAC;AAC5D,mBAAe,gBAAgB,IAAI,MAAM,EAAE,OAAO,WAAW,CAAC,GAAG,WAAW,CAAC,GAAG,WAAW,CAAC,GAAG,oBAAoB;AACnH,QAAI,UAAU,yBAAyB,QAAW;AAChD,cAAQ,KAAK,OAAO,cAAc,gBAAgB,oBAAoB,UAAU,sBAAsB,cAAc,CAAC;AAAA,IACvH;AACA,WAAO,QAAQ,IAAI,OAAO;AAAA,EAC5B;AACF;AASA,IAAM,6BAAN,MAAiC;AAAA,EAC/B,YAAY,QAAQ;AAClB,SAAK,SAAS;AACd,SAAK,OAAO,WAAW;AAAA,EACzB;AAAA,EACA,gBAAgB,eAAe;AAC7B,UAAM,SAAS,KAAK;AACpB,UAAM,cAAc,OAAO,KAAK,UAAU,aAAa;AACvD,QAAI,CAAC,YAAY,cAAc,CAAC,YAAY,WAAW,KAAK,IAAI,EAAG,QAAO;AAC1E,WAAO;AAAA,EACT;AAAA,EACA,qBAAqB,eAAe,gBAAgB;AAClD,UAAM,SAAS,KAAK;AACpB,UAAM,cAAc,OAAO,KAAK,UAAU,aAAa;AACvD,QAAI,CAAC,YAAY,cAAc,CAAC,YAAY,WAAW,KAAK,IAAI,GAAG;AACjE,aAAO,QAAQ,QAAQ;AAAA,IACzB;AACA,UAAM,UAAU,CAAC;AACjB,UAAM,YAAY,YAAY,WAAW,KAAK,IAAI;AAClD,mBAAe,YAAY,UAAU,eAAe,SAAY,UAAU,aAAa;AACvF,QAAI,UAAU,gBAAgB,QAAW;AACvC,cAAQ,KAAK,OAAO,cAAc,gBAAgB,WAAW,UAAU,WAAW,CAAC;AAAA,IACrF;AACA,WAAO,QAAQ,IAAI,OAAO;AAAA,EAC5B;AACF;AASA,IAAM,mCAAN,MAAuC;AAAA,EACrC,YAAY,QAAQ;AAClB,SAAK,SAAS;AACd,SAAK,OAAO,WAAW;AAAA,EACzB;AAAA,EACA,gBAAgB,eAAe;AAC7B,UAAM,SAAS,KAAK;AACpB,UAAM,cAAc,OAAO,KAAK,UAAU,aAAa;AACvD,QAAI,CAAC,YAAY,cAAc,CAAC,YAAY,WAAW,KAAK,IAAI,EAAG,QAAO;AAC1E,WAAO;AAAA,EACT;AAAA,EACA,qBAAqB,eAAe,gBAAgB;AAClD,UAAM,SAAS,KAAK;AACpB,UAAM,cAAc,OAAO,KAAK,UAAU,aAAa;AACvD,QAAI,CAAC,YAAY,cAAc,CAAC,YAAY,WAAW,KAAK,IAAI,GAAG;AACjE,aAAO,QAAQ,QAAQ;AAAA,IACzB;AACA,UAAM,UAAU,CAAC;AACjB,UAAM,YAAY,YAAY,WAAW,KAAK,IAAI;AAClD,QAAI,UAAU,uBAAuB,QAAW;AAC9C,qBAAe,aAAa,UAAU;AAAA,IACxC;AACA,QAAI,UAAU,uBAAuB,QAAW;AAC9C,qBAAe,qBAAqB,UAAU;AAAA,IAChD;AACA,QAAI,UAAU,sBAAsB,QAAW;AAC7C,cAAQ,KAAK,OAAO,cAAc,gBAAgB,iBAAiB,UAAU,iBAAiB,CAAC;AAAA,IACjG;AACA,WAAO,QAAQ,IAAI,OAAO;AAAA,EAC5B;AACF;AASA,IAAM,6BAAN,MAAiC;AAAA,EAC/B,YAAY,QAAQ;AAClB,SAAK,SAAS;AACd,SAAK,OAAO,WAAW;AAAA,EACzB;AAAA,EACA,YAAY,cAAc;AACxB,UAAM,SAAS,KAAK;AACpB,UAAM,OAAO,OAAO;AACpB,UAAM,aAAa,KAAK,SAAS,YAAY;AAC7C,QAAI,CAAC,WAAW,cAAc,CAAC,WAAW,WAAW,KAAK,IAAI,GAAG;AAC/D,aAAO;AAAA,IACT;AACA,UAAM,YAAY,WAAW,WAAW,KAAK,IAAI;AACjD,UAAM,SAAS,OAAO,QAAQ;AAC9B,QAAI,CAAC,QAAQ;AACX,UAAI,KAAK,sBAAsB,KAAK,mBAAmB,QAAQ,KAAK,IAAI,KAAK,GAAG;AAC9E,cAAM,IAAI,MAAM,6EAA6E;AAAA,MAC/F,OAAO;AAEL,eAAO;AAAA,MACT;AAAA,IACF;AACA,WAAO,OAAO,iBAAiB,cAAc,UAAU,QAAQ,MAAM;AAAA,EACvE;AACF;AASA,IAAM,2BAAN,MAA+B;AAAA,EAC7B,YAAY,QAAQ;AAClB,SAAK,SAAS;AACd,SAAK,OAAO,WAAW;AAAA,EACzB;AAAA,EACA,YAAY,cAAc;AACxB,UAAM,OAAO,KAAK;AAClB,UAAM,SAAS,KAAK;AACpB,UAAM,OAAO,OAAO;AACpB,UAAM,aAAa,KAAK,SAAS,YAAY;AAC7C,QAAI,CAAC,WAAW,cAAc,CAAC,WAAW,WAAW,IAAI,GAAG;AAC1D,aAAO;AAAA,IACT;AACA,UAAM,YAAY,WAAW,WAAW,IAAI;AAC5C,UAAM,SAAS,KAAK,OAAO,UAAU,MAAM;AAC3C,QAAI,SAAS,OAAO;AACpB,QAAI,OAAO,KAAK;AACd,YAAM,UAAU,OAAO,QAAQ,QAAQ,WAAW,OAAO,GAAG;AAC5D,UAAI,YAAY,KAAM,UAAS;AAAA,IACjC;AACA,WAAO,OAAO,iBAAiB,cAAc,UAAU,QAAQ,MAAM;AAAA,EACvE;AACF;AASA,IAAM,2BAAN,MAA+B;AAAA,EAC7B,YAAY,QAAQ;AAClB,SAAK,SAAS;AACd,SAAK,OAAO,WAAW;AAAA,EACzB;AAAA,EACA,YAAY,cAAc;AACxB,UAAM,OAAO,KAAK;AAClB,UAAM,SAAS,KAAK;AACpB,UAAM,OAAO,OAAO;AACpB,UAAM,aAAa,KAAK,SAAS,YAAY;AAC7C,QAAI,CAAC,WAAW,cAAc,CAAC,WAAW,WAAW,IAAI,GAAG;AAC1D,aAAO;AAAA,IACT;AACA,UAAM,YAAY,WAAW,WAAW,IAAI;AAC5C,UAAM,SAAS,KAAK,OAAO,UAAU,MAAM;AAC3C,QAAI,SAAS,OAAO;AACpB,QAAI,OAAO,KAAK;AACd,YAAM,UAAU,OAAO,QAAQ,QAAQ,WAAW,OAAO,GAAG;AAC5D,UAAI,YAAY,KAAM,UAAS;AAAA,IACjC;AACA,WAAO,OAAO,iBAAiB,cAAc,UAAU,QAAQ,MAAM;AAAA,EACvE;AACF;AASA,IAAM,yBAAN,MAA6B;AAAA,EAC3B,YAAY,QAAQ;AAClB,SAAK,OAAO,WAAW;AACvB,SAAK,SAAS;AAAA,EAChB;AAAA,EACA,eAAe,OAAO;AACpB,UAAM,OAAO,KAAK,OAAO;AACzB,UAAM,aAAa,KAAK,YAAY,KAAK;AACzC,QAAI,WAAW,cAAc,WAAW,WAAW,KAAK,IAAI,GAAG;AAC7D,YAAM,eAAe,WAAW,WAAW,KAAK,IAAI;AACpD,YAAM,SAAS,KAAK,OAAO,cAAc,UAAU,aAAa,MAAM;AACtE,YAAM,UAAU,KAAK,OAAO,QAAQ;AACpC,UAAI,CAAC,WAAW,CAAC,QAAQ,WAAW;AAClC,YAAI,KAAK,sBAAsB,KAAK,mBAAmB,QAAQ,KAAK,IAAI,KAAK,GAAG;AAC9E,gBAAM,IAAI,MAAM,oFAAoF;AAAA,QACtG,OAAO;AAEL,iBAAO;AAAA,QACT;AAAA,MACF;AACA,aAAO,OAAO,KAAK,SAAU,KAAK;AAChC,cAAM,aAAa,aAAa,cAAc;AAC9C,cAAM,aAAa,aAAa,cAAc;AAC9C,cAAM,QAAQ,aAAa;AAC3B,cAAM,SAAS,aAAa;AAC5B,cAAM,SAAS,IAAI,WAAW,KAAK,YAAY,UAAU;AACzD,YAAI,QAAQ,uBAAuB;AACjC,iBAAO,QAAQ,sBAAsB,OAAO,QAAQ,QAAQ,aAAa,MAAM,aAAa,MAAM,EAAE,KAAK,SAAUC,MAAK;AACtH,mBAAOA,KAAI;AAAA,UACb,CAAC;AAAA,QACH,OAAO;AAEL,iBAAO,QAAQ,MAAM,KAAK,WAAY;AACpC,kBAAM,SAAS,IAAI,YAAY,QAAQ,MAAM;AAC7C,oBAAQ,iBAAiB,IAAI,WAAW,MAAM,GAAG,OAAO,QAAQ,QAAQ,aAAa,MAAM,aAAa,MAAM;AAC9G,mBAAO;AAAA,UACT,CAAC;AAAA,QACH;AAAA,MACF,CAAC;AAAA,IACH,OAAO;AACL,aAAO;AAAA,IACT;AAAA,EACF;AACF;AASA,IAAM,wBAAN,MAA4B;AAAA,EAC1B,YAAY,QAAQ;AAClB,SAAK,OAAO,WAAW;AACvB,SAAK,SAAS;AAAA,EAChB;AAAA,EACA,eAAe,WAAW;AACxB,UAAM,OAAO,KAAK,OAAO;AACzB,UAAM,UAAU,KAAK,MAAM,SAAS;AACpC,QAAI,CAAC,QAAQ,cAAc,CAAC,QAAQ,WAAW,KAAK,IAAI,KAAK,QAAQ,SAAS,QAAW;AACvF,aAAO;AAAA,IACT;AACA,UAAM,UAAU,KAAK,OAAO,QAAQ,IAAI;AAIxC,eAAW,aAAa,QAAQ,YAAY;AAC1C,UAAI,UAAU,SAAS,gBAAgB,aAAa,UAAU,SAAS,gBAAgB,kBAAkB,UAAU,SAAS,gBAAgB,gBAAgB,UAAU,SAAS,QAAW;AACxL,eAAO;AAAA,MACT;AAAA,IACF;AACA,UAAM,eAAe,QAAQ,WAAW,KAAK,IAAI;AACjD,UAAM,gBAAgB,aAAa;AAInC,UAAM,UAAU,CAAC;AACjB,UAAMC,cAAa,CAAC;AACpB,eAAW,OAAO,eAAe;AAC/B,cAAQ,KAAK,KAAK,OAAO,cAAc,YAAY,cAAc,GAAG,CAAC,EAAE,KAAK,cAAY;AACtF,QAAAA,YAAW,GAAG,IAAI;AAClB,eAAOA,YAAW,GAAG;AAAA,MACvB,CAAC,CAAC;AAAA,IACJ;AACA,QAAI,QAAQ,SAAS,GAAG;AACtB,aAAO;AAAA,IACT;AACA,YAAQ,KAAK,KAAK,OAAO,eAAe,SAAS,CAAC;AAClD,WAAO,QAAQ,IAAI,OAAO,EAAE,KAAK,aAAW;AAC1C,YAAM,aAAa,QAAQ,IAAI;AAC/B,YAAM,SAAS,WAAW,UAAU,WAAW,WAAW,CAAC,UAAU;AACrE,YAAM,QAAQ,QAAQ,CAAC,EAAE;AACzB,YAAM,kBAAkB,CAAC;AACzB,iBAAW,QAAQ,QAAQ;AAEzB,cAAM,IAAI,IAAI,QAAQ;AACtB,cAAM,IAAI,IAAI,QAAQ;AACtB,cAAM,IAAI,IAAI,WAAW;AACzB,cAAM,IAAI,IAAI,QAAQ,GAAG,GAAG,CAAC;AAC7B,cAAM,gBAAgB,IAAI,cAAc,KAAK,UAAU,KAAK,UAAU,KAAK;AAC3E,iBAAS,IAAI,GAAG,IAAI,OAAO,KAAK;AAC9B,cAAIA,YAAW,aAAa;AAC1B,cAAE,oBAAoBA,YAAW,aAAa,CAAC;AAAA,UACjD;AACA,cAAIA,YAAW,UAAU;AACvB,cAAE,oBAAoBA,YAAW,UAAU,CAAC;AAAA,UAC9C;AACA,cAAIA,YAAW,OAAO;AACpB,cAAE,oBAAoBA,YAAW,OAAO,CAAC;AAAA,UAC3C;AACA,wBAAc,YAAY,GAAG,EAAE,QAAQ,GAAG,GAAG,CAAC,CAAC;AAAA,QACjD;AAGA,mBAAW,iBAAiBA,aAAY;AACtC,cAAI,kBAAkB,YAAY;AAChC,kBAAM,OAAOA,YAAW,aAAa;AACrC,0BAAc,gBAAgB,IAAI,yBAAyB,KAAK,OAAO,KAAK,UAAU,KAAK,UAAU;AAAA,UACvG,WAAW,kBAAkB,iBAAiB,kBAAkB,cAAc,kBAAkB,SAAS;AACvG,iBAAK,SAAS,aAAa,eAAeA,YAAW,aAAa,CAAC;AAAA,UACrE;AAAA,QACF;AAGA,iBAAS,UAAU,KAAK,KAAK,eAAe,IAAI;AAChD,aAAK,OAAO,oBAAoB,aAAa;AAC7C,wBAAgB,KAAK,aAAa;AAAA,MACpC;AACA,UAAI,WAAW,SAAS;AACtB,mBAAW,MAAM;AACjB,mBAAW,IAAI,GAAG,eAAe;AACjC,eAAO;AAAA,MACT;AACA,aAAO,gBAAgB,CAAC;AAAA,IAC1B,CAAC;AAAA,EACH;AACF;AAGA,IAAM,gCAAgC;AACtC,IAAM,iCAAiC;AACvC,IAAM,+BAA+B;AAAA,EACnC,MAAM;AAAA,EACN,KAAK;AACP;AACA,IAAM,sBAAN,MAA0B;AAAA,EACxB,YAAY,MAAM;AAChB,SAAK,OAAO,WAAW;AACvB,SAAK,UAAU;AACf,SAAK,OAAO;AACZ,UAAM,aAAa,IAAI,SAAS,MAAM,GAAG,8BAA8B;AACvE,UAAM,cAAc,IAAI,YAAY;AACpC,SAAK,SAAS;AAAA,MACZ,OAAO,YAAY,OAAO,IAAI,WAAW,KAAK,MAAM,GAAG,CAAC,CAAC,CAAC;AAAA,MAC1D,SAAS,WAAW,UAAU,GAAG,IAAI;AAAA,MACrC,QAAQ,WAAW,UAAU,GAAG,IAAI;AAAA,IACtC;AACA,QAAI,KAAK,OAAO,UAAU,+BAA+B;AACvD,YAAM,IAAI,MAAM,mDAAmD;AAAA,IACrE,WAAW,KAAK,OAAO,UAAU,GAAK;AACpC,YAAM,IAAI,MAAM,gDAAgD;AAAA,IAClE;AACA,UAAM,sBAAsB,KAAK,OAAO,SAAS;AACjD,UAAM,YAAY,IAAI,SAAS,MAAM,8BAA8B;AACnE,QAAI,aAAa;AACjB,WAAO,aAAa,qBAAqB;AACvC,YAAM,cAAc,UAAU,UAAU,YAAY,IAAI;AACxD,oBAAc;AACd,YAAM,YAAY,UAAU,UAAU,YAAY,IAAI;AACtD,oBAAc;AACd,UAAI,cAAc,6BAA6B,MAAM;AACnD,cAAM,eAAe,IAAI,WAAW,MAAM,iCAAiC,YAAY,WAAW;AAClG,aAAK,UAAU,YAAY,OAAO,YAAY;AAAA,MAChD,WAAW,cAAc,6BAA6B,KAAK;AACzD,cAAM,aAAa,iCAAiC;AACpD,aAAK,OAAO,KAAK,MAAM,YAAY,aAAa,WAAW;AAAA,MAC7D;AAIA,oBAAc;AAAA,IAChB;AACA,QAAI,KAAK,YAAY,MAAM;AACzB,YAAM,IAAI,MAAM,2CAA2C;AAAA,IAC7D;AAAA,EACF;AACF;AASA,IAAM,oCAAN,MAAwC;AAAA,EACtC,YAAY,MAAML,cAAa;AAC7B,QAAI,CAACA,cAAa;AAChB,YAAM,IAAI,MAAM,qDAAqD;AAAA,IACvE;AACA,SAAK,OAAO,WAAW;AACvB,SAAK,OAAO;AACZ,SAAK,cAAcA;AACnB,SAAK,YAAY,QAAQ;AAAA,EAC3B;AAAA,EACA,gBAAgB,WAAW,QAAQ;AACjC,UAAM,OAAO,KAAK;AAClB,UAAMA,eAAc,KAAK;AACzB,UAAM,kBAAkB,UAAU,WAAW,KAAK,IAAI,EAAE;AACxD,UAAM,mBAAmB,UAAU,WAAW,KAAK,IAAI,EAAE;AACzD,UAAM,oBAAoB,CAAC;AAC3B,UAAM,yBAAyB,CAAC;AAChC,UAAM,mBAAmB,CAAC;AAC1B,eAAW,iBAAiB,kBAAkB;AAC5C,YAAM,qBAAqB,WAAW,aAAa,KAAK,cAAc,YAAY;AAClF,wBAAkB,kBAAkB,IAAI,iBAAiB,aAAa;AAAA,IACxE;AACA,eAAW,iBAAiB,UAAU,YAAY;AAChD,YAAM,qBAAqB,WAAW,aAAa,KAAK,cAAc,YAAY;AAClF,UAAI,iBAAiB,aAAa,MAAM,QAAW;AACjD,cAAM,cAAc,KAAK,UAAU,UAAU,WAAW,aAAa,CAAC;AACtE,cAAM,gBAAgB,sBAAsB,YAAY,aAAa;AACrE,yBAAiB,kBAAkB,IAAI,cAAc;AACrD,+BAAuB,kBAAkB,IAAI,YAAY,eAAe;AAAA,MAC1E;AAAA,IACF;AACA,WAAO,OAAO,cAAc,cAAc,eAAe,EAAE,KAAK,SAAU,YAAY;AACpF,aAAO,IAAI,QAAQ,SAAU,SAAS,QAAQ;AAC5C,QAAAA,aAAY,gBAAgB,YAAY,SAAU,UAAU;AAC1D,qBAAW,iBAAiB,SAAS,YAAY;AAC/C,kBAAM,YAAY,SAAS,WAAW,aAAa;AACnD,kBAAM,aAAa,uBAAuB,aAAa;AACvD,gBAAI,eAAe,OAAW,WAAU,aAAa;AAAA,UACvD;AACA,kBAAQ,QAAQ;AAAA,QAClB,GAAG,mBAAmB,kBAAkB,sBAAsB,MAAM;AAAA,MACtE,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AACF;AASA,IAAM,gCAAN,MAAoC;AAAA,EAClC,cAAc;AACZ,SAAK,OAAO,WAAW;AAAA,EACzB;AAAA,EACA,cAAc,SAAS,WAAW;AAChC,SAAK,UAAU,aAAa,UAAa,UAAU,aAAa,QAAQ,YAAY,UAAU,WAAW,UAAa,UAAU,aAAa,UAAa,UAAU,UAAU,QAAW;AAEvL,aAAO;AAAA,IACT;AACA,cAAU,QAAQ,MAAM;AACxB,QAAI,UAAU,aAAa,QAAW;AACpC,cAAQ,UAAU,UAAU;AAAA,IAC9B;AACA,QAAI,UAAU,WAAW,QAAW;AAClC,cAAQ,OAAO,UAAU,UAAU,MAAM;AAAA,IAC3C;AACA,QAAI,UAAU,aAAa,QAAW;AACpC,cAAQ,WAAW,UAAU;AAAA,IAC/B;AACA,QAAI,UAAU,UAAU,QAAW;AACjC,cAAQ,OAAO,UAAU,UAAU,KAAK;AAAA,IAC1C;AACA,YAAQ,cAAc;AACtB,WAAO;AAAA,EACT;AACF;AASA,IAAM,gCAAN,MAAoC;AAAA,EAClC,cAAc;AACZ,SAAK,OAAO,WAAW;AAAA,EACzB;AACF;AAQA,IAAM,6BAAN,cAAyC,YAAY;AAAA,EACnD,YAAY,oBAAoB,cAAc,YAAY,cAAc;AACtE,UAAM,oBAAoB,cAAc,YAAY,YAAY;AAAA,EAClE;AAAA,EACA,iBAAiB,OAAO;AAItB,UAAM,SAAS,KAAK,cAClB,SAAS,KAAK,cACd,YAAY,KAAK,WACjB,SAAS,QAAQ,YAAY,IAAI;AACnC,aAAS,IAAI,GAAG,MAAM,WAAW,KAAK;AACpC,aAAO,CAAC,IAAI,OAAO,SAAS,CAAC;AAAA,IAC/B;AACA,WAAO;AAAA,EACT;AAAA,EACA,aAAa,IAAI,IAAIM,IAAG,IAAI;AAC1B,UAAM,SAAS,KAAK;AACpB,UAAM,SAAS,KAAK;AACpB,UAAM,SAAS,KAAK;AACpB,UAAM,UAAU,SAAS;AACzB,UAAM,UAAU,SAAS;AACzB,UAAMC,MAAK,KAAK;AAChB,UAAM,KAAKD,KAAI,MAAMC;AACrB,UAAM,KAAK,IAAI;AACf,UAAM,MAAM,KAAK;AACjB,UAAM,UAAU,KAAK;AACrB,UAAM,UAAU,UAAU;AAC1B,UAAM,KAAK,KAAK,MAAM,IAAI;AAC1B,UAAM,KAAK,MAAM;AACjB,UAAM,KAAK,IAAI;AACf,UAAM,KAAK,KAAK,KAAK;AAIrB,aAAS,IAAI,GAAG,MAAM,QAAQ,KAAK;AACjC,YAAM,KAAK,OAAO,UAAU,IAAI,MAAM;AACtC,YAAM,KAAK,OAAO,UAAU,IAAI,OAAO,IAAIA;AAC3C,YAAM,KAAK,OAAO,UAAU,IAAI,MAAM;AACtC,YAAM,KAAK,OAAO,UAAU,CAAC,IAAIA;AAEjC,aAAO,CAAC,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK;AAAA,IACjD;AACA,WAAO;AAAA,EACT;AACF;AACA,IAAM,cAAc,IAAI,WAAW;AACnC,IAAM,uCAAN,cAAmD,2BAA2B;AAAA,EAC5E,aAAa,IAAI,IAAID,IAAG,IAAI;AAC1B,UAAM,SAAS,MAAM,aAAa,IAAI,IAAIA,IAAG,EAAE;AAC/C,gBAAY,UAAU,MAAM,EAAE,UAAU,EAAE,QAAQ,MAAM;AACxD,WAAO;AAAA,EACT;AACF;AAQA,IAAM,kBAAkB;AAAA,EACtB,OAAO;AAAA;AAAA,EAEP,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,YAAY;AAAA,EACZ,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,gBAAgB;AAAA,EAChB,cAAc;AAAA,EACd,eAAe;AAAA,EACf,gBAAgB;AAClB;AACA,IAAM,wBAAwB;AAAA,EAC5B,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AACR;AACA,IAAM,gBAAgB;AAAA,EACpB,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AACR;AACA,IAAM,kBAAkB;AAAA,EACtB,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AACT;AACA,IAAM,mBAAmB;AAAA,EACvB,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AACV;AACA,IAAM,aAAa;AAAA,EACjB,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,SAAS;AAAA,EACT,WAAW;AAAA,EACX,UAAU;AACZ;AACA,IAAM,kBAAkB;AAAA,EACtB,OAAO;AAAA,EACP,aAAa;AAAA,EACb,UAAU;AAAA,EACV,SAAS;AACX;AACA,IAAM,gBAAgB;AAAA,EACpB,aAAa;AAAA;AAAA;AAAA,EAGb,QAAQ;AAAA,EACR,MAAM;AACR;AACA,IAAM,cAAc;AAAA,EAClB,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,OAAO;AACT;AASA,SAAS,sBAAsBE,QAAO;AACpC,MAAIA,OAAM,iBAAiB,MAAM,QAAW;AAC1C,IAAAA,OAAM,iBAAiB,IAAI,IAAI,qBAAqB;AAAA,MAClD,OAAO;AAAA,MACP,UAAU;AAAA,MACV,WAAW;AAAA,MACX,WAAW;AAAA,MACX,aAAa;AAAA,MACb,WAAW;AAAA,MACX,MAAM;AAAA,IACR,CAAC;AAAA,EACH;AACA,SAAOA,OAAM,iBAAiB;AAChC;AACA,SAAS,+BAA+B,iBAAiB,QAAQ,WAAW;AAG1E,aAAW,QAAQ,UAAU,YAAY;AACvC,QAAI,gBAAgB,IAAI,MAAM,QAAW;AACvC,aAAO,SAAS,iBAAiB,OAAO,SAAS,kBAAkB,CAAC;AACpE,aAAO,SAAS,eAAe,IAAI,IAAI,UAAU,WAAW,IAAI;AAAA,IAClE;AAAA,EACF;AACF;AAQA,SAAS,uBAAuB,QAAQ,SAAS;AAC/C,MAAI,QAAQ,WAAW,QAAW;AAChC,QAAI,OAAO,QAAQ,WAAW,UAAU;AACtC,aAAO,OAAO,OAAO,UAAU,QAAQ,MAAM;AAAA,IAC/C,OAAO;AACL,cAAQ,KAAK,wDAAwD,QAAQ,MAAM;AAAA,IACrF;AAAA,EACF;AACF;AAWA,SAAS,gBAAgB,UAAU,SAAS,QAAQ;AAClD,MAAI,mBAAmB;AACvB,MAAI,iBAAiB;AACrB,MAAI,gBAAgB;AACpB,WAAS,IAAI,GAAG,KAAK,QAAQ,QAAQ,IAAI,IAAI,KAAK;AAChD,UAAMC,UAAS,QAAQ,CAAC;AACxB,QAAIA,QAAO,aAAa,OAAW,oBAAmB;AACtD,QAAIA,QAAO,WAAW,OAAW,kBAAiB;AAClD,QAAIA,QAAO,YAAY,OAAW,iBAAgB;AAClD,QAAI,oBAAoB,kBAAkB,cAAe;AAAA,EAC3D;AACA,MAAI,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,cAAe,QAAO,QAAQ,QAAQ,QAAQ;AAC3F,QAAM,2BAA2B,CAAC;AAClC,QAAM,yBAAyB,CAAC;AAChC,QAAM,wBAAwB,CAAC;AAC/B,WAAS,IAAI,GAAG,KAAK,QAAQ,QAAQ,IAAI,IAAI,KAAK;AAChD,UAAMA,UAAS,QAAQ,CAAC;AACxB,QAAI,kBAAkB;AACpB,YAAM,kBAAkBA,QAAO,aAAa,SAAY,OAAO,cAAc,YAAYA,QAAO,QAAQ,IAAI,SAAS,WAAW;AAChI,+BAAyB,KAAK,eAAe;AAAA,IAC/C;AACA,QAAI,gBAAgB;AAClB,YAAM,kBAAkBA,QAAO,WAAW,SAAY,OAAO,cAAc,YAAYA,QAAO,MAAM,IAAI,SAAS,WAAW;AAC5H,6BAAuB,KAAK,eAAe;AAAA,IAC7C;AACA,QAAI,eAAe;AACjB,YAAM,kBAAkBA,QAAO,YAAY,SAAY,OAAO,cAAc,YAAYA,QAAO,OAAO,IAAI,SAAS,WAAW;AAC9H,4BAAsB,KAAK,eAAe;AAAA,IAC5C;AAAA,EACF;AACA,SAAO,QAAQ,IAAI,CAAC,QAAQ,IAAI,wBAAwB,GAAG,QAAQ,IAAI,sBAAsB,GAAG,QAAQ,IAAI,qBAAqB,CAAC,CAAC,EAAE,KAAK,SAAU,WAAW;AAC7J,UAAM,iBAAiB,UAAU,CAAC;AAClC,UAAM,eAAe,UAAU,CAAC;AAChC,UAAM,cAAc,UAAU,CAAC;AAC/B,QAAI,iBAAkB,UAAS,gBAAgB,WAAW;AAC1D,QAAI,eAAgB,UAAS,gBAAgB,SAAS;AACtD,QAAI,cAAe,UAAS,gBAAgB,QAAQ;AACpD,aAAS,uBAAuB;AAChC,WAAO;AAAA,EACT,CAAC;AACH;AAQA,SAAS,mBAAmB,MAAM,SAAS;AACzC,OAAK,mBAAmB;AACxB,MAAI,QAAQ,YAAY,QAAW;AACjC,aAAS,IAAI,GAAG,KAAK,QAAQ,QAAQ,QAAQ,IAAI,IAAI,KAAK;AACxD,WAAK,sBAAsB,CAAC,IAAI,QAAQ,QAAQ,CAAC;AAAA,IACnD;AAAA,EACF;AAGA,MAAI,QAAQ,UAAU,MAAM,QAAQ,QAAQ,OAAO,WAAW,GAAG;AAC/D,UAAM,cAAc,QAAQ,OAAO;AACnC,QAAI,KAAK,sBAAsB,WAAW,YAAY,QAAQ;AAC5D,WAAK,wBAAwB,CAAC;AAC9B,eAAS,IAAI,GAAG,KAAK,YAAY,QAAQ,IAAI,IAAI,KAAK;AACpD,aAAK,sBAAsB,YAAY,CAAC,CAAC,IAAI;AAAA,MAC/C;AAAA,IACF,OAAO;AACL,cAAQ,KAAK,sEAAsE;AAAA,IACrF;AAAA,EACF;AACF;AACA,SAAS,mBAAmB,cAAc;AACxC,MAAI;AACJ,QAAM,iBAAiB,aAAa,cAAc,aAAa,WAAW,WAAW,0BAA0B;AAC/G,MAAI,gBAAgB;AAClB,kBAAc,WAAW,eAAe,aAAa,MAAM,eAAe,UAAU,MAAM,oBAAoB,eAAe,UAAU;AAAA,EACzI,OAAO;AACL,kBAAc,aAAa,UAAU,MAAM,oBAAoB,aAAa,UAAU,IAAI,MAAM,aAAa;AAAA,EAC/G;AACA,MAAI,aAAa,YAAY,QAAW;AACtC,aAAS,IAAI,GAAG,KAAK,aAAa,QAAQ,QAAQ,IAAI,IAAI,KAAK;AAC7D,qBAAe,MAAM,oBAAoB,aAAa,QAAQ,CAAC,CAAC;AAAA,IAClE;AAAA,EACF;AACA,SAAO;AACT;AACA,SAAS,oBAAoBJ,aAAY;AACvC,MAAI,gBAAgB;AACpB,QAAM,OAAO,OAAO,KAAKA,WAAU,EAAE,KAAK;AAC1C,WAAS,IAAI,GAAG,KAAK,KAAK,QAAQ,IAAI,IAAI,KAAK;AAC7C,qBAAiB,KAAK,CAAC,IAAI,MAAMA,YAAW,KAAK,CAAC,CAAC,IAAI;AAAA,EACzD;AACA,SAAO;AACT;AACA,SAAS,4BAA4B,aAAa;AAIhD,UAAQ,aAAa;AAAA,IACnB,KAAK;AACH,aAAO,IAAI;AAAA,IACb,KAAK;AACH,aAAO,IAAI;AAAA,IACb,KAAK;AACH,aAAO,IAAI;AAAA,IACb,KAAK;AACH,aAAO,IAAI;AAAA,IACb;AACE,YAAM,IAAI,MAAM,mEAAmE;AAAA,EACvF;AACF;AACA,SAAS,oBAAoB,KAAK;AAChC,MAAI,IAAI,OAAO,gBAAgB,IAAI,KAAK,IAAI,OAAO,oBAAoB,MAAM,EAAG,QAAO;AACvF,MAAI,IAAI,OAAO,eAAe,IAAI,KAAK,IAAI,OAAO,oBAAoB,MAAM,EAAG,QAAO;AACtF,MAAI,IAAI,OAAO,eAAe,IAAI,KAAK,IAAI,OAAO,oBAAoB,MAAM,EAAG,QAAO;AACtF,SAAO;AACT;AACA,IAAM,kBAAkB,IAAI,QAAQ;AAIpC,IAAM,aAAN,MAAiB;AAAA,EACf,YAAY,OAAO,CAAC,GAAG,UAAU,CAAC,GAAG;AACnC,SAAK,OAAO;AACZ,SAAK,aAAa,CAAC;AACnB,SAAK,UAAU,CAAC;AAChB,SAAK,UAAU;AAGf,SAAK,QAAQ,IAAI,aAAa;AAG9B,SAAK,eAAe,oBAAI,IAAI;AAG5B,SAAK,iBAAiB,CAAC;AAGvB,SAAK,YAAY,CAAC;AAGlB,SAAK,YAAY;AAAA,MACf,MAAM,CAAC;AAAA,MACP,MAAM,CAAC;AAAA,IACT;AACA,SAAK,cAAc;AAAA,MACjB,MAAM,CAAC;AAAA,MACP,MAAM,CAAC;AAAA,IACT;AACA,SAAK,aAAa;AAAA,MAChB,MAAM,CAAC;AAAA,MACP,MAAM,CAAC;AAAA,IACT;AACA,SAAK,cAAc,CAAC;AACpB,SAAK,eAAe,CAAC;AAGrB,SAAK,gBAAgB,CAAC;AAKtB,QAAI,WAAW;AACf,QAAI,gBAAgB;AACpB,QAAI,YAAY;AAChB,QAAI,iBAAiB;AACrB,QAAI,OAAO,cAAc,aAAa;AACpC,YAAM,YAAY,UAAU;AAC5B,iBAAW,iCAAiC,KAAK,SAAS,MAAM;AAChE,YAAM,cAAc,UAAU,MAAM,gBAAgB;AACpD,sBAAgB,YAAY,cAAc,SAAS,YAAY,CAAC,GAAG,EAAE,IAAI;AACzE,kBAAY,UAAU,QAAQ,SAAS,IAAI;AAC3C,uBAAiB,YAAY,UAAU,MAAM,qBAAqB,EAAE,CAAC,IAAI;AAAA,IAC3E;AACA,QAAI,OAAO,sBAAsB,eAAe,YAAY,gBAAgB,MAAM,aAAa,iBAAiB,IAAI;AAClH,WAAK,gBAAgB,IAAI,cAAc,KAAK,QAAQ,OAAO;AAAA,IAC7D,OAAO;AACL,WAAK,gBAAgB,IAAI,kBAAkB,KAAK,QAAQ,OAAO;AAAA,IACjE;AACA,SAAK,cAAc,eAAe,KAAK,QAAQ,WAAW;AAC1D,SAAK,cAAc,iBAAiB,KAAK,QAAQ,aAAa;AAC9D,SAAK,aAAa,IAAI,WAAW,KAAK,QAAQ,OAAO;AACrD,SAAK,WAAW,gBAAgB,aAAa;AAC7C,QAAI,KAAK,QAAQ,gBAAgB,mBAAmB;AAClD,WAAK,WAAW,mBAAmB,IAAI;AAAA,IACzC;AAAA,EACF;AAAA,EACA,cAAc,YAAY;AACxB,SAAK,aAAa;AAAA,EACpB;AAAA,EACA,WAAW,SAAS;AAClB,SAAK,UAAU;AAAA,EACjB;AAAA,EACA,MAAM,QAAQ,SAAS;AACrB,UAAM,SAAS;AACf,UAAM,OAAO,KAAK;AAClB,UAAM,aAAa,KAAK;AAGxB,SAAK,MAAM,UAAU;AACrB,SAAK,YAAY,CAAC;AAGlB,SAAK,WAAW,SAAU,KAAK;AAC7B,aAAO,IAAI,aAAa,IAAI,UAAU;AAAA,IACxC,CAAC;AACD,YAAQ,IAAI,KAAK,WAAW,SAAU,KAAK;AACzC,aAAO,IAAI,cAAc,IAAI,WAAW;AAAA,IAC1C,CAAC,CAAC,EAAE,KAAK,WAAY;AACnB,aAAO,QAAQ,IAAI,CAAC,OAAO,gBAAgB,OAAO,GAAG,OAAO,gBAAgB,WAAW,GAAG,OAAO,gBAAgB,QAAQ,CAAC,CAAC;AAAA,IAC7H,CAAC,EAAE,KAAK,SAAU,cAAc;AAC9B,YAAM,SAAS;AAAA,QACb,OAAO,aAAa,CAAC,EAAE,KAAK,SAAS,CAAC;AAAA,QACtC,QAAQ,aAAa,CAAC;AAAA,QACtB,YAAY,aAAa,CAAC;AAAA,QAC1B,SAAS,aAAa,CAAC;AAAA,QACvB,OAAO,KAAK;AAAA,QACZ;AAAA,QACA,UAAU,CAAC;AAAA,MACb;AACA,qCAA+B,YAAY,QAAQ,IAAI;AACvD,6BAAuB,QAAQ,IAAI;AACnC,aAAO,QAAQ,IAAI,OAAO,WAAW,SAAU,KAAK;AAClD,eAAO,IAAI,aAAa,IAAI,UAAU,MAAM;AAAA,MAC9C,CAAC,CAAC,EAAE,KAAK,WAAY;AACnB,mBAAW,SAAS,OAAO,QAAQ;AACjC,gBAAM,kBAAkB;AAAA,QAC1B;AACA,eAAO,MAAM;AAAA,MACf,CAAC;AAAA,IACH,CAAC,EAAE,MAAM,OAAO;AAAA,EAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,YAAY;AACV,UAAM,WAAW,KAAK,KAAK,SAAS,CAAC;AACrC,UAAM,WAAW,KAAK,KAAK,SAAS,CAAC;AACrC,UAAM,WAAW,KAAK,KAAK,UAAU,CAAC;AAItC,aAAS,YAAY,GAAG,aAAa,SAAS,QAAQ,YAAY,YAAY,aAAa;AACzF,YAAM,SAAS,SAAS,SAAS,EAAE;AACnC,eAAS,IAAI,GAAG,KAAK,OAAO,QAAQ,IAAI,IAAI,KAAK;AAC/C,iBAAS,OAAO,CAAC,CAAC,EAAE,SAAS;AAAA,MAC/B;AAAA,IACF;AAIA,aAAS,YAAY,GAAG,aAAa,SAAS,QAAQ,YAAY,YAAY,aAAa;AACzF,YAAM,UAAU,SAAS,SAAS;AAClC,UAAI,QAAQ,SAAS,QAAW;AAC9B,aAAK,YAAY,KAAK,WAAW,QAAQ,IAAI;AAK7C,YAAI,QAAQ,SAAS,QAAW;AAC9B,mBAAS,QAAQ,IAAI,EAAE,gBAAgB;AAAA,QACzC;AAAA,MACF;AACA,UAAI,QAAQ,WAAW,QAAW;AAChC,aAAK,YAAY,KAAK,aAAa,QAAQ,MAAM;AAAA,MACnD;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAeA,YAAYG,QAAO,OAAO;AACxB,QAAI,UAAU,OAAW;AACzB,QAAIA,OAAM,KAAK,KAAK,MAAM,QAAW;AACnC,MAAAA,OAAM,KAAK,KAAK,IAAIA,OAAM,KAAK,KAAK,IAAI;AAAA,IAC1C;AACA,IAAAA,OAAM,KAAK,KAAK;AAAA,EAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,YAAYA,QAAO,OAAO,QAAQ;AAChC,QAAIA,OAAM,KAAK,KAAK,KAAK,EAAG,QAAO;AACnC,UAAM,MAAM,OAAO,MAAM;AAIzB,UAAM,iBAAiB,CAAC,UAAUE,WAAU;AAC1C,YAAM,WAAW,KAAK,aAAa,IAAI,QAAQ;AAC/C,UAAI,YAAY,MAAM;AACpB,aAAK,aAAa,IAAIA,QAAO,QAAQ;AAAA,MACvC;AACA,iBAAW,CAAC,GAAG,KAAK,KAAK,SAAS,SAAS,QAAQ,GAAG;AACpD,uBAAe,OAAOA,OAAM,SAAS,CAAC,CAAC;AAAA,MACzC;AAAA,IACF;AACA,mBAAe,QAAQ,GAAG;AAC1B,QAAI,QAAQ,eAAeF,OAAM,KAAK,KAAK;AAC3C,WAAO;AAAA,EACT;AAAA,EACA,WAAW,MAAM;AACf,UAAM,aAAa,OAAO,OAAO,KAAK,OAAO;AAC7C,eAAW,KAAK,IAAI;AACpB,aAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,YAAM,SAAS,KAAK,WAAW,CAAC,CAAC;AACjC,UAAI,OAAQ,QAAO;AAAA,IACrB;AACA,WAAO;AAAA,EACT;AAAA,EACA,WAAW,MAAM;AACf,UAAM,aAAa,OAAO,OAAO,KAAK,OAAO;AAC7C,eAAW,QAAQ,IAAI;AACvB,UAAM,UAAU,CAAC;AACjB,aAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,YAAM,SAAS,KAAK,WAAW,CAAC,CAAC;AACjC,UAAI,OAAQ,SAAQ,KAAK,MAAM;AAAA,IACjC;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,cAAc,MAAM,OAAO;AACzB,UAAM,WAAW,OAAO,MAAM;AAC9B,QAAI,aAAa,KAAK,MAAM,IAAI,QAAQ;AACxC,QAAI,CAAC,YAAY;AACf,cAAQ,MAAM;AAAA,QACZ,KAAK;AACH,uBAAa,KAAK,UAAU,KAAK;AACjC;AAAA,QACF,KAAK;AACH,uBAAa,KAAK,WAAW,SAAU,KAAK;AAC1C,mBAAO,IAAI,YAAY,IAAI,SAAS,KAAK;AAAA,UAC3C,CAAC;AACD;AAAA,QACF,KAAK;AACH,uBAAa,KAAK,WAAW,SAAU,KAAK;AAC1C,mBAAO,IAAI,YAAY,IAAI,SAAS,KAAK;AAAA,UAC3C,CAAC;AACD;AAAA,QACF,KAAK;AACH,uBAAa,KAAK,aAAa,KAAK;AACpC;AAAA,QACF,KAAK;AACH,uBAAa,KAAK,WAAW,SAAU,KAAK;AAC1C,mBAAO,IAAI,kBAAkB,IAAI,eAAe,KAAK;AAAA,UACvD,CAAC;AACD;AAAA,QACF,KAAK;AACH,uBAAa,KAAK,WAAW,KAAK;AAClC;AAAA,QACF,KAAK;AACH,uBAAa,KAAK,WAAW,SAAU,KAAK;AAC1C,mBAAO,IAAI,gBAAgB,IAAI,aAAa,KAAK;AAAA,UACnD,CAAC;AACD;AAAA,QACF,KAAK;AACH,uBAAa,KAAK,WAAW,SAAU,KAAK;AAC1C,mBAAO,IAAI,eAAe,IAAI,YAAY,KAAK;AAAA,UACjD,CAAC;AACD;AAAA,QACF,KAAK;AACH,uBAAa,KAAK,SAAS,KAAK;AAChC;AAAA,QACF,KAAK;AACH,uBAAa,KAAK,WAAW,SAAU,KAAK;AAC1C,mBAAO,IAAI,iBAAiB,IAAI,cAAc,KAAK;AAAA,UACrD,CAAC;AACD;AAAA,QACF,KAAK;AACH,uBAAa,KAAK,WAAW,KAAK;AAClC;AAAA,QACF;AACE,uBAAa,KAAK,WAAW,SAAU,KAAK;AAC1C,mBAAO,OAAO,QAAQ,IAAI,iBAAiB,IAAI,cAAc,MAAM,KAAK;AAAA,UAC1E,CAAC;AACD,cAAI,CAAC,YAAY;AACf,kBAAM,IAAI,MAAM,mBAAmB,IAAI;AAAA,UACzC;AACA;AAAA,MACJ;AACA,WAAK,MAAM,IAAI,UAAU,UAAU;AAAA,IACrC;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,gBAAgB,MAAM;AACpB,QAAI,eAAe,KAAK,MAAM,IAAI,IAAI;AACtC,QAAI,CAAC,cAAc;AACjB,YAAM,SAAS;AACf,YAAM,OAAO,KAAK,KAAK,QAAQ,SAAS,SAAS,OAAO,IAAI,KAAK,CAAC;AAClE,qBAAe,QAAQ,IAAI,KAAK,IAAI,SAAU,KAAK,OAAO;AACxD,eAAO,OAAO,cAAc,MAAM,KAAK;AAAA,MACzC,CAAC,CAAC;AACF,WAAK,MAAM,IAAI,MAAM,YAAY;AAAA,IACnC;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,WAAW,aAAa;AACtB,UAAM,YAAY,KAAK,KAAK,QAAQ,WAAW;AAC/C,UAAM,SAAS,KAAK;AACpB,QAAI,UAAU,QAAQ,UAAU,SAAS,eAAe;AACtD,YAAM,IAAI,MAAM,uBAAuB,UAAU,OAAO,gCAAgC;AAAA,IAC1F;AAGA,QAAI,UAAU,QAAQ,UAAa,gBAAgB,GAAG;AACpD,aAAO,QAAQ,QAAQ,KAAK,WAAW,WAAW,eAAe,EAAE,IAAI;AAAA,IACzE;AACA,UAAM,UAAU,KAAK;AACrB,WAAO,IAAI,QAAQ,SAAU,SAAS,QAAQ;AAC5C,aAAO,KAAK,YAAY,WAAW,UAAU,KAAK,QAAQ,IAAI,GAAG,SAAS,QAAW,WAAY;AAC/F,eAAO,IAAI,MAAM,8CAA8C,UAAU,MAAM,IAAI,CAAC;AAAA,MACtF,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,eAAe,iBAAiB;AAC9B,UAAM,gBAAgB,KAAK,KAAK,YAAY,eAAe;AAC3D,WAAO,KAAK,cAAc,UAAU,cAAc,MAAM,EAAE,KAAK,SAAU,QAAQ;AAC/E,YAAM,aAAa,cAAc,cAAc;AAC/C,YAAM,aAAa,cAAc,cAAc;AAC/C,aAAO,OAAO,MAAM,YAAY,aAAa,UAAU;AAAA,IACzD,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,aAAa,eAAe;AAC1B,UAAM,SAAS;AACf,UAAM,OAAO,KAAK;AAClB,UAAM,cAAc,KAAK,KAAK,UAAU,aAAa;AACrD,QAAI,YAAY,eAAe,UAAa,YAAY,WAAW,QAAW;AAC5E,YAAM,WAAW,iBAAiB,YAAY,IAAI;AAClD,YAAM,aAAa,sBAAsB,YAAY,aAAa;AAClE,YAAM,aAAa,YAAY,eAAe;AAC9C,YAAM,QAAQ,IAAI,WAAW,YAAY,QAAQ,QAAQ;AACzD,aAAO,QAAQ,QAAQ,IAAI,gBAAgB,OAAO,UAAU,UAAU,CAAC;AAAA,IACzE;AACA,UAAM,qBAAqB,CAAC;AAC5B,QAAI,YAAY,eAAe,QAAW;AACxC,yBAAmB,KAAK,KAAK,cAAc,cAAc,YAAY,UAAU,CAAC;AAAA,IAClF,OAAO;AACL,yBAAmB,KAAK,IAAI;AAAA,IAC9B;AACA,QAAI,YAAY,WAAW,QAAW;AACpC,yBAAmB,KAAK,KAAK,cAAc,cAAc,YAAY,OAAO,QAAQ,UAAU,CAAC;AAC/F,yBAAmB,KAAK,KAAK,cAAc,cAAc,YAAY,OAAO,OAAO,UAAU,CAAC;AAAA,IAChG;AACA,WAAO,QAAQ,IAAI,kBAAkB,EAAE,KAAK,SAAU,aAAa;AACjE,YAAM,aAAa,YAAY,CAAC;AAChC,YAAM,WAAW,iBAAiB,YAAY,IAAI;AAClD,YAAM,aAAa,sBAAsB,YAAY,aAAa;AAGlE,YAAM,eAAe,WAAW;AAChC,YAAM,YAAY,eAAe;AACjC,YAAM,aAAa,YAAY,cAAc;AAC7C,YAAM,aAAa,YAAY,eAAe,SAAY,KAAK,YAAY,YAAY,UAAU,EAAE,aAAa;AAChH,YAAM,aAAa,YAAY,eAAe;AAC9C,UAAI,OAAO;AAGX,UAAI,cAAc,eAAe,WAAW;AAG1C,cAAM,UAAU,KAAK,MAAM,aAAa,UAAU;AAClD,cAAM,aAAa,uBAAuB,YAAY,aAAa,MAAM,YAAY,gBAAgB,MAAM,UAAU,MAAM,YAAY;AACvI,YAAI,KAAK,OAAO,MAAM,IAAI,UAAU;AACpC,YAAI,CAAC,IAAI;AACP,kBAAQ,IAAI,WAAW,YAAY,UAAU,YAAY,YAAY,QAAQ,aAAa,YAAY;AAGtG,eAAK,IAAI,kBAAkB,OAAO,aAAa,YAAY;AAC3D,iBAAO,MAAM,IAAI,YAAY,EAAE;AAAA,QACjC;AACA,0BAAkB,IAAI,2BAA2B,IAAI,UAAU,aAAa,aAAa,cAAc,UAAU;AAAA,MACnH,OAAO;AACL,YAAI,eAAe,MAAM;AACvB,kBAAQ,IAAI,WAAW,YAAY,QAAQ,QAAQ;AAAA,QACrD,OAAO;AACL,kBAAQ,IAAI,WAAW,YAAY,YAAY,YAAY,QAAQ,QAAQ;AAAA,QAC7E;AACA,0BAAkB,IAAI,gBAAgB,OAAO,UAAU,UAAU;AAAA,MACnE;AAGA,UAAI,YAAY,WAAW,QAAW;AACpC,cAAM,kBAAkB,iBAAiB;AACzC,cAAM,oBAAoB,sBAAsB,YAAY,OAAO,QAAQ,aAAa;AACxF,cAAM,oBAAoB,YAAY,OAAO,QAAQ,cAAc;AACnE,cAAM,mBAAmB,YAAY,OAAO,OAAO,cAAc;AACjE,cAAM,gBAAgB,IAAI,kBAAkB,YAAY,CAAC,GAAG,mBAAmB,YAAY,OAAO,QAAQ,eAAe;AACzH,cAAM,eAAe,IAAI,WAAW,YAAY,CAAC,GAAG,kBAAkB,YAAY,OAAO,QAAQ,QAAQ;AACzG,YAAI,eAAe,MAAM;AAEvB,4BAAkB,IAAI,gBAAgB,gBAAgB,MAAM,MAAM,GAAG,gBAAgB,UAAU,gBAAgB,UAAU;AAAA,QAC3H;AAGA,wBAAgB,aAAa;AAC7B,iBAAS,IAAI,GAAG,KAAK,cAAc,QAAQ,IAAI,IAAI,KAAK;AACtD,gBAAM,QAAQ,cAAc,CAAC;AAC7B,0BAAgB,KAAK,OAAO,aAAa,IAAI,QAAQ,CAAC;AACtD,cAAI,YAAY,EAAG,iBAAgB,KAAK,OAAO,aAAa,IAAI,WAAW,CAAC,CAAC;AAC7E,cAAI,YAAY,EAAG,iBAAgB,KAAK,OAAO,aAAa,IAAI,WAAW,CAAC,CAAC;AAC7E,cAAI,YAAY,EAAG,iBAAgB,KAAK,OAAO,aAAa,IAAI,WAAW,CAAC,CAAC;AAC7E,cAAI,YAAY,EAAG,OAAM,IAAI,MAAM,mEAAmE;AAAA,QACxG;AACA,wBAAgB,aAAa;AAAA,MAC/B;AACA,aAAO;AAAA,IACT,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,YAAY,cAAc;AACxB,UAAM,OAAO,KAAK;AAClB,UAAM,UAAU,KAAK;AACrB,UAAM,aAAa,KAAK,SAAS,YAAY;AAC7C,UAAM,cAAc,WAAW;AAC/B,UAAM,YAAY,KAAK,OAAO,WAAW;AACzC,QAAI,SAAS,KAAK;AAClB,QAAI,UAAU,KAAK;AACjB,YAAM,UAAU,QAAQ,QAAQ,WAAW,UAAU,GAAG;AACxD,UAAI,YAAY,KAAM,UAAS;AAAA,IACjC;AACA,WAAO,KAAK,iBAAiB,cAAc,aAAa,MAAM;AAAA,EAChE;AAAA,EACA,iBAAiB,cAAc,aAAa,QAAQ;AAClD,UAAM,SAAS;AACf,UAAM,OAAO,KAAK;AAClB,UAAM,aAAa,KAAK,SAAS,YAAY;AAC7C,UAAM,YAAY,KAAK,OAAO,WAAW;AACzC,UAAM,YAAY,UAAU,OAAO,UAAU,cAAc,MAAM,WAAW;AAC5E,QAAI,KAAK,aAAa,QAAQ,GAAG;AAE/B,aAAO,KAAK,aAAa,QAAQ;AAAA,IACnC;AACA,UAAM,UAAU,KAAK,gBAAgB,aAAa,MAAM,EAAE,KAAK,SAAU,SAAS;AAChF,cAAQ,QAAQ;AAChB,cAAQ,OAAO,WAAW,QAAQ,UAAU,QAAQ;AACpD,UAAI,QAAQ,SAAS,MAAM,OAAO,UAAU,QAAQ,YAAY,UAAU,IAAI,WAAW,aAAa,MAAM,OAAO;AACjH,gBAAQ,OAAO,UAAU;AAAA,MAC3B;AACA,YAAM,WAAW,KAAK,YAAY,CAAC;AACnC,YAAM,UAAU,SAAS,WAAW,OAAO,KAAK,CAAC;AACjD,cAAQ,YAAY,cAAc,QAAQ,SAAS,KAAK;AACxD,cAAQ,YAAY,cAAc,QAAQ,SAAS,KAAK;AACxD,cAAQ,QAAQ,gBAAgB,QAAQ,KAAK,KAAK;AAClD,cAAQ,QAAQ,gBAAgB,QAAQ,KAAK,KAAK;AAClD,cAAQ,kBAAkB,CAAC,QAAQ,uBAAuB,QAAQ,cAAc,iBAAiB,QAAQ,cAAc;AACvH,aAAO,aAAa,IAAI,SAAS;AAAA,QAC/B,UAAU;AAAA,MACZ,CAAC;AACD,aAAO;AAAA,IACT,CAAC,EAAE,MAAM,WAAY;AACnB,aAAO;AAAA,IACT,CAAC;AACD,SAAK,aAAa,QAAQ,IAAI;AAC9B,WAAO;AAAA,EACT;AAAA,EACA,gBAAgB,aAAa,QAAQ;AACnC,UAAM,SAAS;AACf,UAAM,OAAO,KAAK;AAClB,UAAM,UAAU,KAAK;AACrB,QAAI,KAAK,YAAY,WAAW,MAAM,QAAW;AAC/C,aAAO,KAAK,YAAY,WAAW,EAAE,KAAK,aAAW,QAAQ,MAAM,CAAC;AAAA,IACtE;AACA,UAAM,YAAY,KAAK,OAAO,WAAW;AACzC,UAAMG,OAAM,KAAK,OAAO,KAAK;AAC7B,QAAI,YAAY,UAAU,OAAO;AACjC,QAAI,cAAc;AAClB,QAAI,UAAU,eAAe,QAAW;AAGtC,kBAAY,OAAO,cAAc,cAAc,UAAU,UAAU,EAAE,KAAK,SAAU,YAAY;AAC9F,sBAAc;AACd,cAAM,OAAO,IAAI,KAAK,CAAC,UAAU,GAAG;AAAA,UAClC,MAAM,UAAU;AAAA,QAClB,CAAC;AACD,oBAAYA,KAAI,gBAAgB,IAAI;AACpC,eAAO;AAAA,MACT,CAAC;AAAA,IACH,WAAW,UAAU,QAAQ,QAAW;AACtC,YAAM,IAAI,MAAM,6BAA6B,cAAc,gCAAgC;AAAA,IAC7F;AACA,UAAM,UAAU,QAAQ,QAAQ,SAAS,EAAE,KAAK,SAAUC,YAAW;AACnE,aAAO,IAAI,QAAQ,SAAU,SAAS,QAAQ;AAC5C,YAAI,SAAS;AACb,YAAI,OAAO,wBAAwB,MAAM;AACvC,mBAAS,SAAU,aAAa;AAC9B,kBAAM,UAAU,IAAI,QAAQ,WAAW;AACvC,oBAAQ,cAAc;AACtB,oBAAQ,OAAO;AAAA,UACjB;AAAA,QACF;AACA,eAAO,KAAK,YAAY,WAAWA,YAAW,QAAQ,IAAI,GAAG,QAAQ,QAAW,MAAM;AAAA,MACxF,CAAC;AAAA,IACH,CAAC,EAAE,KAAK,SAAU,SAAS;AAGzB,UAAI,gBAAgB,MAAM;AACxB,QAAAD,KAAI,gBAAgB,SAAS;AAAA,MAC/B;AACA,6BAAuB,SAAS,SAAS;AACzC,cAAQ,SAAS,WAAW,UAAU,YAAY,oBAAoB,UAAU,GAAG;AACnF,aAAO;AAAA,IACT,CAAC,EAAE,MAAM,SAAU,OAAO;AACxB,cAAQ,MAAM,2CAA4C,SAAS;AACnE,YAAM;AAAA,IACR,CAAC;AACD,SAAK,YAAY,WAAW,IAAI;AAChC,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYA,cAAc,gBAAgB,SAAS,QAAQ,YAAY;AACzD,UAAM,SAAS;AACf,WAAO,KAAK,cAAc,WAAW,OAAO,KAAK,EAAE,KAAK,SAAU,SAAS;AACzE,UAAI,CAAC,QAAS,QAAO;AACrB,UAAI,OAAO,aAAa,UAAa,OAAO,WAAW,GAAG;AACxD,kBAAU,QAAQ,MAAM;AACxB,gBAAQ,UAAU,OAAO;AAAA,MAC3B;AACA,UAAI,OAAO,WAAW,WAAW,qBAAqB,GAAG;AACvD,cAAM,YAAY,OAAO,eAAe,SAAY,OAAO,WAAW,WAAW,qBAAqB,IAAI;AAC1G,YAAI,WAAW;AACb,gBAAM,gBAAgB,OAAO,aAAa,IAAI,OAAO;AACrD,oBAAU,OAAO,WAAW,WAAW,qBAAqB,EAAE,cAAc,SAAS,SAAS;AAC9F,iBAAO,aAAa,IAAI,SAAS,aAAa;AAAA,QAChD;AAAA,MACF;AACA,UAAI,eAAe,QAAW;AAC5B,gBAAQ,aAAa;AAAA,MACvB;AACA,qBAAe,OAAO,IAAI;AAC1B,aAAO;AAAA,IACT,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYA,oBAAoB,MAAM;AACxB,UAAM,WAAW,KAAK;AACtB,QAAI,WAAW,KAAK;AACpB,UAAM,wBAAwB,SAAS,WAAW,YAAY;AAC9D,UAAM,kBAAkB,SAAS,WAAW,UAAU;AACtD,UAAM,iBAAiB,SAAS,WAAW,WAAW;AACtD,QAAI,KAAK,UAAU;AACjB,YAAM,WAAW,oBAAoB,SAAS;AAC9C,UAAI,iBAAiB,KAAK,MAAM,IAAI,QAAQ;AAC5C,UAAI,CAAC,gBAAgB;AACnB,yBAAiB,IAAI,eAAe;AACpC,iBAAS,UAAU,KAAK,KAAK,gBAAgB,QAAQ;AACrD,uBAAe,MAAM,KAAK,SAAS,KAAK;AACxC,uBAAe,MAAM,SAAS;AAC9B,uBAAe,kBAAkB;AAEjC,aAAK,MAAM,IAAI,UAAU,cAAc;AAAA,MACzC;AACA,iBAAW;AAAA,IACb,WAAW,KAAK,QAAQ;AACtB,YAAM,WAAW,uBAAuB,SAAS;AACjD,UAAI,eAAe,KAAK,MAAM,IAAI,QAAQ;AAC1C,UAAI,CAAC,cAAc;AACjB,uBAAe,IAAI,kBAAkB;AACrC,iBAAS,UAAU,KAAK,KAAK,cAAc,QAAQ;AACnD,qBAAa,MAAM,KAAK,SAAS,KAAK;AACtC,qBAAa,MAAM,SAAS;AAC5B,aAAK,MAAM,IAAI,UAAU,YAAY;AAAA,MACvC;AACA,iBAAW;AAAA,IACb;AAGA,QAAI,yBAAyB,mBAAmB,gBAAgB;AAC9D,UAAI,WAAW,oBAAoB,SAAS,OAAO;AACnD,UAAI,sBAAuB,aAAY;AACvC,UAAI,gBAAiB,aAAY;AACjC,UAAI,eAAgB,aAAY;AAChC,UAAI,iBAAiB,KAAK,MAAM,IAAI,QAAQ;AAC5C,UAAI,CAAC,gBAAgB;AACnB,yBAAiB,SAAS,MAAM;AAChC,YAAI,gBAAiB,gBAAe,eAAe;AACnD,YAAI,eAAgB,gBAAe,cAAc;AACjD,YAAI,uBAAuB;AAEzB,cAAI,eAAe,YAAa,gBAAe,YAAY,KAAK;AAChE,cAAI,eAAe,qBAAsB,gBAAe,qBAAqB,KAAK;AAAA,QACpF;AACA,aAAK,MAAM,IAAI,UAAU,cAAc;AACvC,aAAK,aAAa,IAAI,gBAAgB,KAAK,aAAa,IAAI,QAAQ,CAAC;AAAA,MACvE;AACA,iBAAW;AAAA,IACb;AACA,SAAK,WAAW;AAAA,EAClB;AAAA,EACA,kBACE;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,aAAa,eAAe;AAC1B,UAAM,SAAS;AACf,UAAM,OAAO,KAAK;AAClB,UAAM,aAAa,KAAK;AACxB,UAAM,cAAc,KAAK,UAAU,aAAa;AAChD,QAAI;AACJ,UAAM,iBAAiB,CAAC;AACxB,UAAM,qBAAqB,YAAY,cAAc,CAAC;AACtD,UAAM,UAAU,CAAC;AACjB,QAAI,mBAAmB,WAAW,mBAAmB,GAAG;AACtD,YAAM,eAAe,WAAW,WAAW,mBAAmB;AAC9D,qBAAe,aAAa,gBAAgB;AAC5C,cAAQ,KAAK,aAAa,aAAa,gBAAgB,aAAa,MAAM,CAAC;AAAA,IAC7E,OAAO;AAIL,YAAM,oBAAoB,YAAY,wBAAwB,CAAC;AAC/D,qBAAe,QAAQ,IAAI,MAAM,GAAK,GAAK,CAAG;AAC9C,qBAAe,UAAU;AACzB,UAAI,MAAM,QAAQ,kBAAkB,eAAe,GAAG;AACpD,cAAM,QAAQ,kBAAkB;AAChC,uBAAe,MAAM,OAAO,MAAM,CAAC,GAAG,MAAM,CAAC,GAAG,MAAM,CAAC,GAAG,oBAAoB;AAC9E,uBAAe,UAAU,MAAM,CAAC;AAAA,MAClC;AACA,UAAI,kBAAkB,qBAAqB,QAAW;AACpD,gBAAQ,KAAK,OAAO,cAAc,gBAAgB,OAAO,kBAAkB,kBAAkB,cAAc,CAAC;AAAA,MAC9G;AACA,qBAAe,YAAY,kBAAkB,mBAAmB,SAAY,kBAAkB,iBAAiB;AAC/G,qBAAe,YAAY,kBAAkB,oBAAoB,SAAY,kBAAkB,kBAAkB;AACjH,UAAI,kBAAkB,6BAA6B,QAAW;AAC5D,gBAAQ,KAAK,OAAO,cAAc,gBAAgB,gBAAgB,kBAAkB,wBAAwB,CAAC;AAC7G,gBAAQ,KAAK,OAAO,cAAc,gBAAgB,gBAAgB,kBAAkB,wBAAwB,CAAC;AAAA,MAC/G;AACA,qBAAe,KAAK,WAAW,SAAU,KAAK;AAC5C,eAAO,IAAI,mBAAmB,IAAI,gBAAgB,aAAa;AAAA,MACjE,CAAC;AACD,cAAQ,KAAK,QAAQ,IAAI,KAAK,WAAW,SAAU,KAAK;AACtD,eAAO,IAAI,wBAAwB,IAAI,qBAAqB,eAAe,cAAc;AAAA,MAC3F,CAAC,CAAC,CAAC;AAAA,IACL;AACA,QAAI,YAAY,gBAAgB,MAAM;AACpC,qBAAe,OAAO;AAAA,IACxB;AACA,UAAM,YAAY,YAAY,aAAa,YAAY;AACvD,QAAI,cAAc,YAAY,OAAO;AACnC,qBAAe,cAAc;AAG7B,qBAAe,aAAa;AAAA,IAC9B,OAAO;AACL,qBAAe,cAAc;AAC7B,UAAI,cAAc,YAAY,MAAM;AAClC,uBAAe,YAAY,YAAY,gBAAgB,SAAY,YAAY,cAAc;AAAA,MAC/F;AAAA,IACF;AACA,QAAI,YAAY,kBAAkB,UAAa,iBAAiB,mBAAmB;AACjF,cAAQ,KAAK,OAAO,cAAc,gBAAgB,aAAa,YAAY,aAAa,CAAC;AACzF,qBAAe,cAAc,IAAI,QAAQ,GAAG,CAAC;AAC7C,UAAI,YAAY,cAAc,UAAU,QAAW;AACjD,cAAM,QAAQ,YAAY,cAAc;AACxC,uBAAe,YAAY,IAAI,OAAO,KAAK;AAAA,MAC7C;AAAA,IACF;AACA,QAAI,YAAY,qBAAqB,UAAa,iBAAiB,mBAAmB;AACpF,cAAQ,KAAK,OAAO,cAAc,gBAAgB,SAAS,YAAY,gBAAgB,CAAC;AACxF,UAAI,YAAY,iBAAiB,aAAa,QAAW;AACvD,uBAAe,iBAAiB,YAAY,iBAAiB;AAAA,MAC/D;AAAA,IACF;AACA,QAAI,YAAY,mBAAmB,UAAa,iBAAiB,mBAAmB;AAClF,YAAM,iBAAiB,YAAY;AACnC,qBAAe,WAAW,IAAI,MAAM,EAAE,OAAO,eAAe,CAAC,GAAG,eAAe,CAAC,GAAG,eAAe,CAAC,GAAG,oBAAoB;AAAA,IAC5H;AACA,QAAI,YAAY,oBAAoB,UAAa,iBAAiB,mBAAmB;AACnF,cAAQ,KAAK,OAAO,cAAc,gBAAgB,eAAe,YAAY,iBAAiB,cAAc,CAAC;AAAA,IAC/G;AACA,WAAO,QAAQ,IAAI,OAAO,EAAE,KAAK,WAAY;AAC3C,YAAM,WAAW,IAAI,aAAa,cAAc;AAChD,UAAI,YAAY,KAAM,UAAS,OAAO,YAAY;AAClD,6BAAuB,UAAU,WAAW;AAC5C,aAAO,aAAa,IAAI,UAAU;AAAA,QAChC,WAAW;AAAA,MACb,CAAC;AACD,UAAI,YAAY,WAAY,gCAA+B,YAAY,UAAU,WAAW;AAC5F,aAAO;AAAA,IACT,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,iBAAiB,cAAc;AAC7B,UAAM,gBAAgB,gBAAgB,iBAAiB,gBAAgB,EAAE;AACzE,QAAI,iBAAiB,KAAK,eAAe;AACvC,aAAO,gBAAgB,MAAM,EAAE,KAAK,cAAc,aAAa;AAAA,IACjE,OAAO;AACL,WAAK,cAAc,aAAa,IAAI;AACpC,aAAO;AAAA,IACT;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,eAAe,YAAY;AACzB,UAAM,SAAS;AACf,UAAM,aAAa,KAAK;AACxB,UAAMH,SAAQ,KAAK;AACnB,aAAS,qBAAqB,WAAW;AACvC,aAAO,WAAW,WAAW,0BAA0B,EAAE,gBAAgB,WAAW,MAAM,EAAE,KAAK,SAAU,UAAU;AACnH,eAAO,uBAAuB,UAAU,WAAW,MAAM;AAAA,MAC3D,CAAC;AAAA,IACH;AACA,UAAM,UAAU,CAAC;AACjB,aAAS,IAAI,GAAG,KAAK,WAAW,QAAQ,IAAI,IAAI,KAAK;AACnD,YAAM,YAAY,WAAW,CAAC;AAC9B,YAAM,WAAW,mBAAmB,SAAS;AAG7C,YAAM,SAASA,OAAM,QAAQ;AAC7B,UAAI,QAAQ;AAEV,gBAAQ,KAAK,OAAO,OAAO;AAAA,MAC7B,OAAO;AACL,YAAI;AACJ,YAAI,UAAU,cAAc,UAAU,WAAW,WAAW,0BAA0B,GAAG;AAEvF,4BAAkB,qBAAqB,SAAS;AAAA,QAClD,OAAO;AAEL,4BAAkB,uBAAuB,IAAI,eAAe,GAAG,WAAW,MAAM;AAAA,QAClF;AAGA,QAAAA,OAAM,QAAQ,IAAI;AAAA,UAChB;AAAA,UACA,SAAS;AAAA,QACX;AACA,gBAAQ,KAAK,eAAe;AAAA,MAC9B;AAAA,IACF;AACA,WAAO,QAAQ,IAAI,OAAO;AAAA,EAC5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,SAAS,WAAW;AAClB,UAAM,SAAS;AACf,UAAM,OAAO,KAAK;AAClB,UAAM,aAAa,KAAK;AACxB,UAAM,UAAU,KAAK,OAAO,SAAS;AACrC,UAAM,aAAa,QAAQ;AAC3B,UAAM,UAAU,CAAC;AACjB,aAAS,IAAI,GAAG,KAAK,WAAW,QAAQ,IAAI,IAAI,KAAK;AACnD,YAAM,WAAW,WAAW,CAAC,EAAE,aAAa,SAAY,sBAAsB,KAAK,KAAK,IAAI,KAAK,cAAc,YAAY,WAAW,CAAC,EAAE,QAAQ;AACjJ,cAAQ,KAAK,QAAQ;AAAA,IACvB;AACA,YAAQ,KAAK,OAAO,eAAe,UAAU,CAAC;AAC9C,WAAO,QAAQ,IAAI,OAAO,EAAE,KAAK,SAAU,SAAS;AAClD,YAAM,YAAY,QAAQ,MAAM,GAAG,QAAQ,SAAS,CAAC;AACrD,YAAM,aAAa,QAAQ,QAAQ,SAAS,CAAC;AAC7C,YAAM,SAAS,CAAC;AAChB,eAAS,IAAI,GAAG,KAAK,WAAW,QAAQ,IAAI,IAAI,KAAK;AACnD,cAAM,WAAW,WAAW,CAAC;AAC7B,cAAM,YAAY,WAAW,CAAC;AAI9B,YAAI;AACJ,cAAM,WAAW,UAAU,CAAC;AAC5B,YAAI,UAAU,SAAS,gBAAgB,aAAa,UAAU,SAAS,gBAAgB,kBAAkB,UAAU,SAAS,gBAAgB,gBAAgB,UAAU,SAAS,QAAW;AAExL,iBAAO,QAAQ,kBAAkB,OAAO,IAAI,YAAY,UAAU,QAAQ,IAAI,IAAI,KAAK,UAAU,QAAQ;AACzG,cAAI,KAAK,kBAAkB,MAAM;AAE/B,iBAAK,qBAAqB;AAAA,UAC5B;AACA,cAAI,UAAU,SAAS,gBAAgB,gBAAgB;AACrD,iBAAK,WAAW,oBAAoB,KAAK,UAAU,qBAAqB;AAAA,UAC1E,WAAW,UAAU,SAAS,gBAAgB,cAAc;AAC1D,iBAAK,WAAW,oBAAoB,KAAK,UAAU,mBAAmB;AAAA,UACxE;AAAA,QACF,WAAW,UAAU,SAAS,gBAAgB,OAAO;AACnD,iBAAO,IAAI,aAAa,UAAU,QAAQ;AAAA,QAC5C,WAAW,UAAU,SAAS,gBAAgB,YAAY;AACxD,iBAAO,IAAI,KAAK,UAAU,QAAQ;AAAA,QACpC,WAAW,UAAU,SAAS,gBAAgB,WAAW;AACvD,iBAAO,IAAI,SAAS,UAAU,QAAQ;AAAA,QACxC,WAAW,UAAU,SAAS,gBAAgB,QAAQ;AACpD,iBAAO,IAAI,OAAO,UAAU,QAAQ;AAAA,QACtC,OAAO;AACL,gBAAM,IAAI,MAAM,mDAAmD,UAAU,IAAI;AAAA,QACnF;AACA,YAAI,OAAO,KAAK,KAAK,SAAS,eAAe,EAAE,SAAS,GAAG;AACzD,6BAAmB,MAAM,OAAO;AAAA,QAClC;AACA,aAAK,OAAO,OAAO,iBAAiB,QAAQ,QAAQ,UAAU,SAAS;AACvE,+BAAuB,MAAM,OAAO;AACpC,YAAI,UAAU,WAAY,gCAA+B,YAAY,MAAM,SAAS;AACpF,eAAO,oBAAoB,IAAI;AAC/B,eAAO,KAAK,IAAI;AAAA,MAClB;AACA,eAAS,IAAI,GAAG,KAAK,OAAO,QAAQ,IAAI,IAAI,KAAK;AAC/C,eAAO,aAAa,IAAI,OAAO,CAAC,GAAG;AAAA,UACjC,QAAQ;AAAA,UACR,YAAY;AAAA,QACd,CAAC;AAAA,MACH;AACA,UAAI,OAAO,WAAW,GAAG;AACvB,YAAI,QAAQ,WAAY,gCAA+B,YAAY,OAAO,CAAC,GAAG,OAAO;AACrF,eAAO,OAAO,CAAC;AAAA,MACjB;AACA,YAAM,QAAQ,IAAI,MAAM;AACxB,UAAI,QAAQ,WAAY,gCAA+B,YAAY,OAAO,OAAO;AACjF,aAAO,aAAa,IAAI,OAAO;AAAA,QAC7B,QAAQ;AAAA,MACV,CAAC;AACD,eAAS,IAAI,GAAG,KAAK,OAAO,QAAQ,IAAI,IAAI,KAAK;AAC/C,cAAM,IAAI,OAAO,CAAC,CAAC;AAAA,MACrB;AACA,aAAO;AAAA,IACT,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,WAAW,aAAa;AACtB,QAAIK;AACJ,UAAM,YAAY,KAAK,KAAK,QAAQ,WAAW;AAC/C,UAAM,SAAS,UAAU,UAAU,IAAI;AACvC,QAAI,CAAC,QAAQ;AACX,cAAQ,KAAK,8CAA8C;AAC3D;AAAA,IACF;AACA,QAAI,UAAU,SAAS,eAAe;AACpC,MAAAA,UAAS,IAAI,kBAAkB,UAAU,SAAS,OAAO,IAAI,GAAG,OAAO,eAAe,GAAG,OAAO,SAAS,GAAG,OAAO,QAAQ,GAAG;AAAA,IAChI,WAAW,UAAU,SAAS,gBAAgB;AAC5C,MAAAA,UAAS,IAAI,mBAAmB,CAAC,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,CAAC,OAAO,MAAM,OAAO,OAAO,OAAO,IAAI;AAAA,IACjH;AACA,QAAI,UAAU,KAAM,CAAAA,QAAO,OAAO,KAAK,iBAAiB,UAAU,IAAI;AACtE,2BAAuBA,SAAQ,SAAS;AACxC,WAAO,QAAQ,QAAQA,OAAM;AAAA,EAC/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,SAAS,WAAW;AAClB,UAAM,UAAU,KAAK,KAAK,MAAM,SAAS;AACzC,UAAM,UAAU,CAAC;AACjB,aAAS,IAAI,GAAG,KAAK,QAAQ,OAAO,QAAQ,IAAI,IAAI,KAAK;AACvD,cAAQ,KAAK,KAAK,iBAAiB,QAAQ,OAAO,CAAC,CAAC,CAAC;AAAA,IACvD;AACA,QAAI,QAAQ,wBAAwB,QAAW;AAC7C,cAAQ,KAAK,KAAK,cAAc,YAAY,QAAQ,mBAAmB,CAAC;AAAA,IAC1E,OAAO;AACL,cAAQ,KAAK,IAAI;AAAA,IACnB;AACA,WAAO,QAAQ,IAAI,OAAO,EAAE,KAAK,SAAU,SAAS;AAClD,YAAM,sBAAsB,QAAQ,IAAI;AACxC,YAAM,aAAa;AAKnB,YAAM,QAAQ,CAAC;AACf,YAAM,eAAe,CAAC;AACtB,eAAS,IAAI,GAAG,KAAK,WAAW,QAAQ,IAAI,IAAI,KAAK;AACnD,cAAM,YAAY,WAAW,CAAC;AAC9B,YAAI,WAAW;AACb,gBAAM,KAAK,SAAS;AACpB,gBAAMC,OAAM,IAAI,QAAQ;AACxB,cAAI,wBAAwB,MAAM;AAChC,YAAAA,KAAI,UAAU,oBAAoB,OAAO,IAAI,EAAE;AAAA,UACjD;AACA,uBAAa,KAAKA,IAAG;AAAA,QACvB,OAAO;AACL,kBAAQ,KAAK,oDAAoD,QAAQ,OAAO,CAAC,CAAC;AAAA,QACpF;AAAA,MACF;AACA,aAAO,IAAI,SAAS,OAAO,YAAY;AAAA,IACzC,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,cAAc,gBAAgB;AAC5B,UAAM,OAAO,KAAK;AAClB,UAAM,SAAS;AACf,UAAM,eAAe,KAAK,WAAW,cAAc;AACnD,UAAM,gBAAgB,aAAa,OAAO,aAAa,OAAO,eAAe;AAC7E,UAAM,eAAe,CAAC;AACtB,UAAM,wBAAwB,CAAC;AAC/B,UAAM,yBAAyB,CAAC;AAChC,UAAM,kBAAkB,CAAC;AACzB,UAAM,iBAAiB,CAAC;AACxB,aAAS,IAAI,GAAG,KAAK,aAAa,SAAS,QAAQ,IAAI,IAAI,KAAK;AAC9D,YAAM,UAAU,aAAa,SAAS,CAAC;AACvC,YAAM,UAAU,aAAa,SAAS,QAAQ,OAAO;AACrD,YAAML,UAAS,QAAQ;AACvB,YAAM,OAAOA,QAAO;AACpB,YAAM,QAAQ,aAAa,eAAe,SAAY,aAAa,WAAW,QAAQ,KAAK,IAAI,QAAQ;AACvG,YAAM,SAAS,aAAa,eAAe,SAAY,aAAa,WAAW,QAAQ,MAAM,IAAI,QAAQ;AACzG,UAAIA,QAAO,SAAS,OAAW;AAC/B,mBAAa,KAAK,KAAK,cAAc,QAAQ,IAAI,CAAC;AAClD,4BAAsB,KAAK,KAAK,cAAc,YAAY,KAAK,CAAC;AAChE,6BAAuB,KAAK,KAAK,cAAc,YAAY,MAAM,CAAC;AAClE,sBAAgB,KAAK,OAAO;AAC5B,qBAAe,KAAKA,OAAM;AAAA,IAC5B;AACA,WAAO,QAAQ,IAAI,CAAC,QAAQ,IAAI,YAAY,GAAG,QAAQ,IAAI,qBAAqB,GAAG,QAAQ,IAAI,sBAAsB,GAAG,QAAQ,IAAI,eAAe,GAAG,QAAQ,IAAI,cAAc,CAAC,CAAC,EAAE,KAAK,SAAU,cAAc;AAC/M,YAAM,QAAQ,aAAa,CAAC;AAC5B,YAAM,iBAAiB,aAAa,CAAC;AACrC,YAAM,kBAAkB,aAAa,CAAC;AACtC,YAAM,WAAW,aAAa,CAAC;AAC/B,YAAM,UAAU,aAAa,CAAC;AAC9B,YAAM,SAAS,CAAC;AAChB,eAAS,IAAI,GAAG,KAAK,MAAM,QAAQ,IAAI,IAAI,KAAK;AAC9C,cAAM,OAAO,MAAM,CAAC;AACpB,cAAM,gBAAgB,eAAe,CAAC;AACtC,cAAM,iBAAiB,gBAAgB,CAAC;AACxC,cAAM,UAAU,SAAS,CAAC;AAC1B,cAAMA,UAAS,QAAQ,CAAC;AACxB,YAAI,SAAS,OAAW;AACxB,YAAI,KAAK,cAAc;AACrB,eAAK,aAAa;AAAA,QACpB;AACA,cAAM,gBAAgB,OAAO,uBAAuB,MAAM,eAAe,gBAAgB,SAASA,OAAM;AACxG,YAAI,eAAe;AACjB,mBAAS,IAAI,GAAG,IAAI,cAAc,QAAQ,KAAK;AAC7C,mBAAO,KAAK,cAAc,CAAC,CAAC;AAAA,UAC9B;AAAA,QACF;AAAA,MACF;AACA,aAAO,IAAI,cAAc,eAAe,QAAW,MAAM;AAAA,IAC3D,CAAC;AAAA,EACH;AAAA,EACA,eAAe,WAAW;AACxB,UAAM,OAAO,KAAK;AAClB,UAAM,SAAS;AACf,UAAM,UAAU,KAAK,MAAM,SAAS;AACpC,QAAI,QAAQ,SAAS,OAAW,QAAO;AACvC,WAAO,OAAO,cAAc,QAAQ,QAAQ,IAAI,EAAE,KAAK,SAAU,MAAM;AACrE,YAAM,OAAO,OAAO,YAAY,OAAO,WAAW,QAAQ,MAAM,IAAI;AAGpE,UAAI,QAAQ,YAAY,QAAW;AACjC,aAAK,SAAS,SAAU,GAAG;AACzB,cAAI,CAAC,EAAE,OAAQ;AACf,mBAAS,IAAI,GAAG,KAAK,QAAQ,QAAQ,QAAQ,IAAI,IAAI,KAAK;AACxD,cAAE,sBAAsB,CAAC,IAAI,QAAQ,QAAQ,CAAC;AAAA,UAChD;AAAA,QACF,CAAC;AAAA,MACH;AACA,aAAO;AAAA,IACT,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,SAAS,WAAW;AAClB,UAAM,OAAO,KAAK;AAClB,UAAM,SAAS;AACf,UAAM,UAAU,KAAK,MAAM,SAAS;AACpC,UAAM,cAAc,OAAO,iBAAiB,SAAS;AACrD,UAAM,eAAe,CAAC;AACtB,UAAM,cAAc,QAAQ,YAAY,CAAC;AACzC,aAAS,IAAI,GAAG,KAAK,YAAY,QAAQ,IAAI,IAAI,KAAK;AACpD,mBAAa,KAAK,OAAO,cAAc,QAAQ,YAAY,CAAC,CAAC,CAAC;AAAA,IAChE;AACA,UAAM,kBAAkB,QAAQ,SAAS,SAAY,QAAQ,QAAQ,IAAI,IAAI,OAAO,cAAc,QAAQ,QAAQ,IAAI;AACtH,WAAO,QAAQ,IAAI,CAAC,aAAa,QAAQ,IAAI,YAAY,GAAG,eAAe,CAAC,EAAE,KAAK,SAAU,SAAS;AACpG,YAAM,OAAO,QAAQ,CAAC;AACtB,YAAM,WAAW,QAAQ,CAAC;AAC1B,YAAM,WAAW,QAAQ,CAAC;AAC1B,UAAI,aAAa,MAAM;AAGrB,aAAK,SAAS,SAAU,MAAM;AAC5B,cAAI,CAAC,KAAK,cAAe;AACzB,eAAK,KAAK,UAAU,eAAe;AAAA,QACrC,CAAC;AAAA,MACH;AACA,eAAS,IAAI,GAAG,KAAK,SAAS,QAAQ,IAAI,IAAI,KAAK;AACjD,aAAK,IAAI,SAAS,CAAC,CAAC;AAAA,MACtB;AACA,aAAO;AAAA,IACT,CAAC;AAAA,EACH;AAAA;AAAA;AAAA,EAIA,iBAAiB,WAAW;AAC1B,UAAM,OAAO,KAAK;AAClB,UAAM,aAAa,KAAK;AACxB,UAAM,SAAS;AAKf,QAAI,KAAK,UAAU,SAAS,MAAM,QAAW;AAC3C,aAAO,KAAK,UAAU,SAAS;AAAA,IACjC;AACA,UAAM,UAAU,KAAK,MAAM,SAAS;AAGpC,UAAM,WAAW,QAAQ,OAAO,OAAO,iBAAiB,QAAQ,IAAI,IAAI;AACxE,UAAM,UAAU,CAAC;AACjB,UAAM,cAAc,OAAO,WAAW,SAAU,KAAK;AACnD,aAAO,IAAI,kBAAkB,IAAI,eAAe,SAAS;AAAA,IAC3D,CAAC;AACD,QAAI,aAAa;AACf,cAAQ,KAAK,WAAW;AAAA,IAC1B;AACA,QAAI,QAAQ,WAAW,QAAW;AAChC,cAAQ,KAAK,OAAO,cAAc,UAAU,QAAQ,MAAM,EAAE,KAAK,SAAUI,SAAQ;AACjF,eAAO,OAAO,YAAY,OAAO,aAAa,QAAQ,QAAQA,OAAM;AAAA,MACtE,CAAC,CAAC;AAAA,IACJ;AACA,WAAO,WAAW,SAAU,KAAK;AAC/B,aAAO,IAAI,wBAAwB,IAAI,qBAAqB,SAAS;AAAA,IACvE,CAAC,EAAE,QAAQ,SAAU,SAAS;AAC5B,cAAQ,KAAK,OAAO;AAAA,IACtB,CAAC;AACD,SAAK,UAAU,SAAS,IAAI,QAAQ,IAAI,OAAO,EAAE,KAAK,SAAU,SAAS;AACvE,UAAI;AAGJ,UAAI,QAAQ,WAAW,MAAM;AAC3B,eAAO,IAAI,KAAK;AAAA,MAClB,WAAW,QAAQ,SAAS,GAAG;AAC7B,eAAO,IAAI,MAAM;AAAA,MACnB,WAAW,QAAQ,WAAW,GAAG;AAC/B,eAAO,QAAQ,CAAC;AAAA,MAClB,OAAO;AACL,eAAO,IAAI,SAAS;AAAA,MACtB;AACA,UAAI,SAAS,QAAQ,CAAC,GAAG;AACvB,iBAAS,IAAI,GAAG,KAAK,QAAQ,QAAQ,IAAI,IAAI,KAAK;AAChD,eAAK,IAAI,QAAQ,CAAC,CAAC;AAAA,QACrB;AAAA,MACF;AACA,UAAI,QAAQ,MAAM;AAChB,aAAK,SAAS,OAAO,QAAQ;AAC7B,aAAK,OAAO;AAAA,MACd;AACA,6BAAuB,MAAM,OAAO;AACpC,UAAI,QAAQ,WAAY,gCAA+B,YAAY,MAAM,OAAO;AAChF,UAAI,QAAQ,WAAW,QAAW;AAChC,cAAM,SAAS,IAAI,QAAQ;AAC3B,eAAO,UAAU,QAAQ,MAAM;AAC/B,aAAK,aAAa,MAAM;AAAA,MAC1B,OAAO;AACL,YAAI,QAAQ,gBAAgB,QAAW;AACrC,eAAK,SAAS,UAAU,QAAQ,WAAW;AAAA,QAC7C;AACA,YAAI,QAAQ,aAAa,QAAW;AAClC,eAAK,WAAW,UAAU,QAAQ,QAAQ;AAAA,QAC5C;AACA,YAAI,QAAQ,UAAU,QAAW;AAC/B,eAAK,MAAM,UAAU,QAAQ,KAAK;AAAA,QACpC;AAAA,MACF;AACA,UAAI,CAAC,OAAO,aAAa,IAAI,IAAI,GAAG;AAClC,eAAO,aAAa,IAAI,MAAM,CAAC,CAAC;AAAA,MAClC,WAAW,QAAQ,SAAS,UAAa,OAAO,UAAU,KAAK,QAAQ,IAAI,IAAI,GAAG;AAChF,cAAM,UAAU,OAAO,aAAa,IAAI,IAAI;AAC5C,eAAO,aAAa,IAAI,MAAM,mBACzB,QACJ;AAAA,MACH;AACA,aAAO,aAAa,IAAI,IAAI,EAAE,QAAQ;AACtC,aAAO;AAAA,IACT,CAAC;AACD,WAAO,KAAK,UAAU,SAAS;AAAA,EACjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,UAAU,YAAY;AACpB,UAAM,aAAa,KAAK;AACxB,UAAM,WAAW,KAAK,KAAK,OAAO,UAAU;AAC5C,UAAM,SAAS;AAIf,UAAM,QAAQ,IAAI,MAAM;AACxB,QAAI,SAAS,KAAM,OAAM,OAAO,OAAO,iBAAiB,SAAS,IAAI;AACrE,2BAAuB,OAAO,QAAQ;AACtC,QAAI,SAAS,WAAY,gCAA+B,YAAY,OAAO,QAAQ;AACnF,UAAM,UAAU,SAAS,SAAS,CAAC;AACnC,UAAM,UAAU,CAAC;AACjB,aAAS,IAAI,GAAG,KAAK,QAAQ,QAAQ,IAAI,IAAI,KAAK;AAChD,cAAQ,KAAK,OAAO,cAAc,QAAQ,QAAQ,CAAC,CAAC,CAAC;AAAA,IACvD;AACA,WAAO,QAAQ,IAAI,OAAO,EAAE,KAAK,SAAU,OAAO;AAChD,eAAS,IAAI,GAAG,KAAK,MAAM,QAAQ,IAAI,IAAI,KAAK;AAC9C,cAAM,IAAI,MAAM,CAAC,CAAC;AAAA,MACpB;AAIA,YAAM,qBAAqB,UAAQ;AACjC,cAAM,sBAAsB,oBAAI,IAAI;AACpC,mBAAW,CAAC,KAAK,KAAK,KAAK,OAAO,cAAc;AAC9C,cAAI,eAAe,YAAY,eAAe,SAAS;AACrD,gCAAoB,IAAI,KAAK,KAAK;AAAA,UACpC;AAAA,QACF;AACA,aAAK,SAAS,CAAAE,UAAQ;AACpB,gBAAM,WAAW,OAAO,aAAa,IAAIA,KAAI;AAC7C,cAAI,YAAY,MAAM;AACpB,gCAAoB,IAAIA,OAAM,QAAQ;AAAA,UACxC;AAAA,QACF,CAAC;AACD,eAAO;AAAA,MACT;AACA,aAAO,eAAe,mBAAmB,KAAK;AAC9C,aAAO;AAAA,IACT,CAAC;AAAA,EACH;AAAA,EACA,uBAAuB,MAAM,eAAe,gBAAgB,SAASN,SAAQ;AAC3E,UAAM,SAAS,CAAC;AAChB,UAAM,aAAa,KAAK,OAAO,KAAK,OAAO,KAAK;AAChD,UAAM,cAAc,CAAC;AACrB,QAAI,gBAAgBA,QAAO,IAAI,MAAM,gBAAgB,SAAS;AAC5D,WAAK,SAAS,SAAU,QAAQ;AAC9B,YAAI,OAAO,uBAAuB;AAChC,sBAAY,KAAK,OAAO,OAAO,OAAO,OAAO,OAAO,IAAI;AAAA,QAC1D;AAAA,MACF,CAAC;AAAA,IACH,OAAO;AACL,kBAAY,KAAK,UAAU;AAAA,IAC7B;AACA,QAAI;AACJ,YAAQ,gBAAgBA,QAAO,IAAI,GAAG;AAAA,MACpC,KAAK,gBAAgB;AACnB,6BAAqB;AACrB;AAAA,MACF,KAAK,gBAAgB;AACnB,6BAAqB;AACrB;AAAA,MACF,KAAK,gBAAgB;AAAA,MACrB,KAAK,gBAAgB;AACnB,6BAAqB;AACrB;AAAA,MACF;AACE,gBAAQ,eAAe,UAAU;AAAA,UAC/B,KAAK;AACH,iCAAqB;AACrB;AAAA,UACF,KAAK;AAAA,UACL,KAAK;AAAA,UACL;AACE,iCAAqB;AACrB;AAAA,QACJ;AACA;AAAA,IACJ;AACA,UAAM,gBAAgB,QAAQ,kBAAkB,SAAY,cAAc,QAAQ,aAAa,IAAI;AACnG,UAAM,cAAc,KAAK,sBAAsB,cAAc;AAC7D,aAAS,IAAI,GAAG,KAAK,YAAY,QAAQ,IAAI,IAAI,KAAK;AACpD,YAAM,QAAQ,IAAI,mBAAmB,YAAY,CAAC,IAAI,MAAM,gBAAgBA,QAAO,IAAI,GAAG,cAAc,OAAO,aAAa,aAAa;AAGzI,UAAI,QAAQ,kBAAkB,eAAe;AAC3C,aAAK,mCAAmC,KAAK;AAAA,MAC/C;AACA,aAAO,KAAK,KAAK;AAAA,IACnB;AACA,WAAO;AAAA,EACT;AAAA,EACA,sBAAsB,UAAU;AAC9B,QAAI,cAAc,SAAS;AAC3B,QAAI,SAAS,YAAY;AACvB,YAAM,QAAQ,4BAA4B,YAAY,WAAW;AACjE,YAAM,SAAS,IAAI,aAAa,YAAY,MAAM;AAClD,eAAS,IAAI,GAAG,KAAK,YAAY,QAAQ,IAAI,IAAI,KAAK;AACpD,eAAO,CAAC,IAAI,YAAY,CAAC,IAAI;AAAA,MAC/B;AACA,oBAAc;AAAA,IAChB;AACA,WAAO;AAAA,EACT;AAAA,EACA,mCAAmC,OAAO;AACxC,UAAM,oBAAoB,SAAS,wCAAwC,QAAQ;AAKjF,YAAM,kBAAkB,gBAAgB,0BAA0B,uCAAuC;AACzG,aAAO,IAAI,gBAAgB,KAAK,OAAO,KAAK,QAAQ,KAAK,aAAa,IAAI,GAAG,MAAM;AAAA,IACrF;AAGA,UAAM,kBAAkB,4CAA4C;AAAA,EACtE;AACF;AASA,SAAS,cAAc,UAAU,cAAc,QAAQ;AACrD,QAAMJ,cAAa,aAAa;AAChC,QAAM,MAAM,IAAI,KAAK;AACrB,MAAIA,YAAW,aAAa,QAAW;AACrC,UAAM,WAAW,OAAO,KAAK,UAAUA,YAAW,QAAQ;AAC1D,UAAM,MAAM,SAAS;AACrB,UAAMW,OAAM,SAAS;AAIrB,QAAI,QAAQ,UAAaA,SAAQ,QAAW;AAC1C,UAAI,IAAI,IAAI,QAAQ,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,QAAQA,KAAI,CAAC,GAAGA,KAAI,CAAC,GAAGA,KAAI,CAAC,CAAC,CAAC;AAChF,UAAI,SAAS,YAAY;AACvB,cAAM,WAAW,4BAA4B,sBAAsB,SAAS,aAAa,CAAC;AAC1F,YAAI,IAAI,eAAe,QAAQ;AAC/B,YAAI,IAAI,eAAe,QAAQ;AAAA,MACjC;AAAA,IACF,OAAO;AACL,cAAQ,KAAK,qEAAqE;AAClF;AAAA,IACF;AAAA,EACF,OAAO;AACL;AAAA,EACF;AACA,QAAM,UAAU,aAAa;AAC7B,MAAI,YAAY,QAAW;AACzB,UAAM,kBAAkB,IAAI,QAAQ;AACpC,UAAM,SAAS,IAAI,QAAQ;AAC3B,aAAS,IAAI,GAAG,KAAK,QAAQ,QAAQ,IAAI,IAAI,KAAK;AAChD,YAAMP,UAAS,QAAQ,CAAC;AACxB,UAAIA,QAAO,aAAa,QAAW;AACjC,cAAM,WAAW,OAAO,KAAK,UAAUA,QAAO,QAAQ;AACtD,cAAM,MAAM,SAAS;AACrB,cAAMO,OAAM,SAAS;AAIrB,YAAI,QAAQ,UAAaA,SAAQ,QAAW;AAE1C,iBAAO,KAAK,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,CAAC,GAAG,KAAK,IAAIA,KAAI,CAAC,CAAC,CAAC,CAAC;AACxD,iBAAO,KAAK,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,CAAC,GAAG,KAAK,IAAIA,KAAI,CAAC,CAAC,CAAC,CAAC;AACxD,iBAAO,KAAK,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,CAAC,GAAG,KAAK,IAAIA,KAAI,CAAC,CAAC,CAAC,CAAC;AACxD,cAAI,SAAS,YAAY;AACvB,kBAAM,WAAW,4BAA4B,sBAAsB,SAAS,aAAa,CAAC;AAC1F,mBAAO,eAAe,QAAQ;AAAA,UAChC;AAMA,0BAAgB,IAAI,MAAM;AAAA,QAC5B,OAAO;AACL,kBAAQ,KAAK,qEAAqE;AAAA,QACpF;AAAA,MACF;AAAA,IACF;AAGA,QAAI,eAAe,eAAe;AAAA,EACpC;AACA,WAAS,cAAc;AACvB,QAAM,SAAS,IAAI,OAAO;AAC1B,MAAI,UAAU,OAAO,MAAM;AAC3B,SAAO,SAAS,IAAI,IAAI,WAAW,IAAI,GAAG,IAAI;AAC9C,WAAS,iBAAiB;AAC5B;AAUA,SAAS,uBAAuB,UAAU,cAAc,QAAQ;AAC9D,QAAMX,cAAa,aAAa;AAChC,QAAM,UAAU,CAAC;AACjB,WAAS,wBAAwB,eAAe,eAAe;AAC7D,WAAO,OAAO,cAAc,YAAY,aAAa,EAAE,KAAK,SAAU,UAAU;AAC9E,eAAS,aAAa,eAAe,QAAQ;AAAA,IAC/C,CAAC;AAAA,EACH;AACA,aAAW,qBAAqBA,aAAY;AAC1C,UAAM,qBAAqB,WAAW,iBAAiB,KAAK,kBAAkB,YAAY;AAG1F,QAAI,sBAAsB,SAAS,WAAY;AAC/C,YAAQ,KAAK,wBAAwBA,YAAW,iBAAiB,GAAG,kBAAkB,CAAC;AAAA,EACzF;AACA,MAAI,aAAa,YAAY,UAAa,CAAC,SAAS,OAAO;AACzD,UAAM,WAAW,OAAO,cAAc,YAAY,aAAa,OAAO,EAAE,KAAK,SAAUY,WAAU;AAC/F,eAAS,SAASA,SAAQ;AAAA,IAC5B,CAAC;AACD,YAAQ,KAAK,QAAQ;AAAA,EACvB;AACA,MAAI,gBAAgB,sBAAsB,wBAAwB,aAAaZ,aAAY;AACzF,YAAQ,KAAK,qEAAqE,gBAAgB,iBAAiB,kBAAkB;AAAA,EACvI;AACA,yBAAuB,UAAU,YAAY;AAC7C,gBAAc,UAAU,cAAc,MAAM;AAC5C,SAAO,QAAQ,IAAI,OAAO,EAAE,KAAK,WAAY;AAC3C,WAAO,aAAa,YAAY,SAAY,gBAAgB,UAAU,aAAa,SAAS,MAAM,IAAI;AAAA,EACxG,CAAC;AACH;;;ACt/FO,IAAM,aAAN,MAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMtB,YAAY,OAAO,GAAG;AAOpB,SAAK,OAAO;AAOZ,SAAK,QAAQ,CAAC;AAOd,SAAK,UAAU,CAAC;AAOhB,SAAK,iBAAiB,CAAC;AAOvB,SAAK,eAAe;AAOpB,SAAK,gBAAgB;AAAA,EACvB;AAAA,EACA,YAAY,UAAU;AACpB,QAAI,CAAC,KAAK,QAAQ,QAAQ,GAAG;AAC3B,YAAM,SAAS,KAAK,cAAc;AAClC,aAAO,iBAAiB,WAAW,KAAK,WAAW,KAAK,MAAM,QAAQ,CAAC;AACvE,WAAK,QAAQ,QAAQ,IAAI;AAAA,IAC3B;AAAA,EACF;AAAA,EACA,iBAAiB;AACf,aAAS,IAAI,GAAG,IAAI,KAAK,MAAM,IAAK,KAAI,EAAE,KAAK,eAAe,KAAK,GAAI,QAAO;AAC9E,WAAO;AAAA,EACT;AAAA,EACA,WAAW,UAAU,KAAK;AACxB,UAAM,UAAU,KAAK,eAAe,QAAQ;AAC5C,eAAW,QAAQ,GAAG;AACtB,QAAI,KAAK,MAAM,QAAQ;AACrB,YAAM;AAAA,QACJ,SAAAa;AAAA,QACA,KAAAC;AAAA,QACA;AAAA,MACF,IAAI,KAAK,MAAM,MAAM;AACrB,WAAK,eAAe,QAAQ,IAAID;AAChC,WAAK,QAAQ,QAAQ,EAAE,YAAYC,MAAK,QAAQ;AAAA,IAClD,OAAO;AACL,WAAK,gBAAgB,KAAK;AAAA,IAC5B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,iBAAiB,eAAe;AAC9B,SAAK,gBAAgB;AAAA,EACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,eAAe,MAAM;AACnB,SAAK,OAAO;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,YAAY,KAAK,UAAU;AACzB,WAAO,IAAI,QAAQ,aAAW;AAC5B,YAAM,WAAW,KAAK,eAAe;AACrC,UAAI,aAAa,IAAI;AACnB,aAAK,YAAY,QAAQ;AACzB,aAAK,gBAAgB,KAAK;AAC1B,aAAK,eAAe,QAAQ,IAAI;AAChC,aAAK,QAAQ,QAAQ,EAAE,YAAY,KAAK,QAAQ;AAAA,MAClD,OAAO;AACL,aAAK,MAAM,KAAK;AAAA,UACd;AAAA,UACA;AAAA,UACA;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,UAAU;AACR,SAAK,QAAQ,QAAQ,YAAU,OAAO,UAAU,CAAC;AACjD,SAAK,eAAe,SAAS;AAC7B,SAAK,QAAQ,SAAS;AACtB,SAAK,MAAM,SAAS;AACpB,SAAK,eAAe;AAAA,EACtB;AACF;;;ACzIA,IAAM,IAAI;AAAV,IAEE,IAAI;AAFN,IAeE,IAAI;AAfN,IAkBE,IAAI;AAlBN,IAmCE,IAAI;AAnCN,IAoCE,IAAI;AApCN,IA6CE,IAAI;AA7CN,IAyDE,KAAK;AAzDP,IAkEE,KAAK;AAlEP,IAsEE,KAAK;AAtEP,IAuEE,KAAK;AAvEP,IA2EE,KAAK;AA3EP,IAsFE,KAAK;AAtFP,IA0FE,KAAK;AA1FP,IA4GE,KAAK;AA5GP,IAiHE,KAAK;AAjHP,IA2HE,KAAK;AA3HP,IA8HE,KAAK;AA9HP,IAiIE,KAAK;AAjIP,IAuIE,KAAK;AAvIP,IA6JE,KAAK;AA7JP,IA8JE,KAAK;AA9JP,IA+JE,KAAK;AA/JP,IAgKE,KAAK;AAhKP,IAmKE,KAAK;AAnKP,IAoKE,KAAK;AApKP,IAuKE,KAAK;AAvKP,IAwKE,KAAK;AAxKP,IA2KE,KAAK;AA3KP,IA4KE,KAAK;AA5KP,IA8KE,KAAK;AA9KP,IAkLE,KAAK;AAlLP,IAuLE,KAAK;AAvLP,IAwLE,KAAK;AAxLP,IA+LE,KAAK;AA/LP,IAgME,KAAK;AAhMP,IAqOE,KAAK;AAgBP,IAAM,KAAN,MAAS;AAAA,EACP,cAAc;AACZ,SAAK,WAAW,GAAG,KAAK,WAAW,GAAG,KAAK,aAAa,GAAG,KAAK,cAAc,GAAG,KAAK,aAAa,GAAG,KAAK,aAAa,GAAG,KAAK,YAAY,GAAG,KAAK,yBAAyB,GAAG,KAAK,SAAS,CAAC,GAAG,KAAK,uBAAuB,CAAC;AAAA,MAC7N,UAAU;AAAA,MACV,gBAAgB;AAAA,MAChB,qBAAqB;AAAA,MACrB,eAAe;AAAA,MACf,YAAY;AAAA,MACZ,gBAAgB;AAAA,MAChB,kBAAkB;AAAA,MAClB,OAAO;AAAA,MACP,qBAAqB,CAAC,GAAG,GAAG,GAAG,CAAC;AAAA,MAChC,YAAY,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAAA,MACnC,SAAS,CAAC;AAAA,IACZ,CAAC,GAAG,KAAK,WAAW,CAAC,GAAG,KAAK,aAAa;AAAA,EAC5C;AACF;AACA,IAAM,KAAN,MAAS;AAAA,EACP,YAAYC,IAAG,GAAGC,IAAG,GAAG;AACtB,SAAK,YAAY,QAAQ,KAAK,gBAAgB,QAAQ,KAAK,UAAU,QAAQ,KAAK,YAAY,IAAI,SAASD,GAAE,QAAQA,GAAE,aAAa,GAAGC,EAAC,GAAG,KAAK,gBAAgB,GAAG,KAAK,UAAU;AAAA,EACpL;AAAA,EACA,aAAa;AACX,UAAMD,KAAI,KAAK,UAAU,SAAS,KAAK,OAAO;AAC9C,WAAO,KAAK,WAAW,GAAGA;AAAA,EAC5B;AAAA,EACA,cAAc;AACZ,UAAMA,KAAI,KAAK,UAAU,UAAU,KAAK,SAAS,KAAK,aAAa;AACnE,WAAO,KAAK,WAAW,GAAGA;AAAA,EAC5B;AAAA,EACA,cAAc;AACZ,UAAMA,KAAI,KAAK,UAAU,UAAU,KAAK,SAAS,KAAK,aAAa;AACnE,WAAO,KAAK,WAAW,GAAGA;AAAA,EAC5B;AAAA,EACA,cAAc;AACZ,UAAMA,KAAI,KAAK,UAAU,UAAU,KAAK,SAAS,KAAK,aAAa,IAAI,KAAK,KAAK,KAAK,UAAU,UAAU,KAAK,UAAU,GAAG,KAAK,aAAa;AAC9I,WAAO,KAAK,WAAW,GAAGA;AAAA,EAC5B;AAAA,EACA,aAAa;AACX,UAAMA,KAAI,KAAK,UAAU,SAAS,KAAK,SAAS,KAAK,aAAa;AAClE,WAAO,KAAK,WAAW,GAAGA;AAAA,EAC5B;AAAA,EACA,gBAAgBA,IAAG;AACjB,UAAM,IAAI,IAAI,WAAW,KAAK,UAAU,QAAQ,KAAK,UAAU,aAAa,KAAK,SAASA,EAAC;AAC3F,WAAO,KAAK,WAAWA,IAAG;AAAA,EAC5B;AAAA,EACA,MAAMA,IAAG;AACP,WAAO,KAAK,WAAWA,IAAG;AAAA,EAC5B;AAAA,EACA,MAAMA,IAAG,GAAG;AACV,eAAW,MAAM,IAAI;AACrB,UAAMC,KAAI,KAAK;AACf,QAAI,IAAI;AACR,WAAO,KAAK,UAAU,SAAS,KAAK,OAAO,MAAM,KAAK,IAAID,KAAI,MAAK,KAAK;AACxE,WAAO,IAAIA,MAAK,KAAK,WAAW,IAAI,WAAW,KAAK,UAAU,QAAQ,KAAK,UAAU,aAAaC,IAAG,CAAC;AAAA,EACxG;AACF;AACA,IAAM,KAAK,IAAI,WAAW,CAAC,CAAC,CAAC;AAA7B,IACE,KAAK,CAAC,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,EAAE;AAIxD,SAAS,GAAGC,IAAG;AACb,SAAO,IAAI,YAAY,EAAE,OAAOA,EAAC;AACnC;AAYA,SAAS,GAAGC,IAAG;AACb,QAAM,IAAI,IAAI,WAAWA,GAAE,QAAQA,GAAE,YAAY,GAAG,MAAM;AAC1D,MAAI,EAAE,CAAC,MAAM,GAAG,CAAC,KAAK,EAAE,CAAC,MAAM,GAAG,CAAC,KAAK,EAAE,CAAC,MAAM,GAAG,CAAC,KAAK,EAAE,CAAC,MAAM,GAAG,CAAC,KAAK,EAAE,CAAC,MAAM,GAAG,CAAC,KAAK,EAAE,CAAC,MAAM,GAAG,CAAC,KAAK,EAAE,CAAC,MAAM,GAAG,CAAC,KAAK,EAAE,CAAC,MAAM,GAAG,CAAC,KAAK,EAAE,CAAC,MAAM,GAAG,CAAC,KAAK,EAAE,CAAC,MAAM,GAAG,CAAC,KAAK,EAAE,EAAE,MAAM,GAAG,EAAE,KAAK,EAAE,EAAE,MAAM,GAAG,EAAE,EAAG,OAAM,IAAI,MAAM,6BAA6B;AAC3Q,QAAMC,KAAI,IAAI,GAAG,GACf,IAAI,KAAK,YAAY,mBACrB,IAAI,IAAI,GAAGD,IAAG,GAAG,QAAQ,GAAG,IAAE;AAChC,EAAAC,GAAE,WAAW,EAAE,YAAY,GAAGA,GAAE,WAAW,EAAE,YAAY,GAAGA,GAAE,aAAa,EAAE,YAAY,GAAGA,GAAE,cAAc,EAAE,YAAY,GAAGA,GAAE,aAAa,EAAE,YAAY,GAAGA,GAAE,aAAa,EAAE,YAAY,GAAGA,GAAE,YAAY,EAAE,YAAY;AACzN,QAAMC,KAAI,EAAE,YAAY;AACxB,EAAAD,GAAE,yBAAyB,EAAE,YAAY;AACzC,QAAM,IAAI,EAAE,YAAY,GACtB,IAAI,EAAE,YAAY,GAClB,IAAI,EAAE,YAAY,GAClB,IAAI,EAAE,YAAY,GAClB,IAAI,EAAE,YAAY,GAClB,IAAI,EAAE,YAAY,GAClBE,KAAI,IAAI,GAAGH,IAAG,GAAG,SAAS,GAAG,IAAIE,KAAI,GAAG,IAAE;AAC5C,WAASE,KAAI,GAAGA,KAAIF,IAAGE,KAAK,CAAAH,GAAE,OAAO,KAAK;AAAA,IACxC,WAAW,IAAI,WAAWD,GAAE,QAAQA,GAAE,aAAaG,GAAE,YAAY,GAAGA,GAAE,YAAY,CAAC;AAAA,IACnF,wBAAwBA,GAAE,YAAY;AAAA,EACxC,CAAC;AACD,QAAM,IAAI,IAAI,GAAGH,IAAG,GAAG,GAAG,IAAE,GAC1B,IAAI;AAAA,IACF,UAAU,EAAE,MAAM,CAAC,EAAE,YAAY;AAAA,IACjC,gBAAgB,EAAE,YAAY;AAAA,IAC9B,eAAe,EAAE,YAAY;AAAA,IAC7B,qBAAqB,EAAE,YAAY;AAAA,IACnC,YAAY,EAAE,WAAW;AAAA,IACzB,gBAAgB,EAAE,WAAW;AAAA,IAC7B,kBAAkB,EAAE,WAAW;AAAA,IAC/B,OAAO,EAAE,WAAW;AAAA,IACpB,qBAAqB,CAAC,EAAE,WAAW,GAAG,EAAE,WAAW,GAAG,EAAE,WAAW,GAAG,EAAE,WAAW,CAAC;AAAA,IACpF,YAAY,CAAC,EAAE,WAAW,GAAG,EAAE,WAAW,GAAG,EAAE,WAAW,GAAG,EAAE,WAAW,GAAG,EAAE,WAAW,GAAG,EAAE,WAAW,GAAG,EAAE,WAAW,GAAG,EAAE,WAAW,CAAC;AAAA,IAC3I,SAAS,CAAC;AAAA,EACZ,GACAK,MAAK,EAAE,sBAAsB,IAAI,KAAK;AACxC,WAASL,KAAI,GAAGA,KAAIK,IAAGL,MAAK;AAC1B,UAAMI,KAAI;AAAA,MACR,WAAW,EAAE,YAAY;AAAA,MACzB,WAAW,EAAE,WAAW;AAAA,MACxB,aAAa,EAAE,WAAW;AAAA,MAC1B,gBAAgB,CAAC,EAAE,WAAW,GAAG,EAAE,WAAW,GAAG,EAAE,WAAW,GAAG,EAAE,WAAW,CAAC;AAAA,MAC/E,aAAa;AAAA,MACb,aAAa;AAAA,IACf;AACA,SAAKA,GAAE,eAAeA,GAAE,cAAc,EAAE,WAAW,GAAGA,GAAE,cAAc,EAAE,WAAW,MAAMA,GAAE,cAAc,EAAE,YAAY,GAAGA,GAAE,cAAc,EAAE,YAAY,IAAI,EAAE,QAAQJ,EAAC,IAAII;AAAA,EAC7K;AACA,EAAAH,GAAE,qBAAqB,SAAS,GAAGA,GAAE,qBAAqB,KAAK,CAAC;AAChE,QAAM,IAAI,IAAI,GAAGD,IAAG,GAAG,GAAG,IAAE;AAC5B,SAAO,EAAE,UAAU,KAAI;AACrB,UAAMA,KAAI,EAAE,YAAY,GACtBI,KAAI,EAAE,MAAMJ,EAAC,GACbM,KAAI,GAAGF,EAAC;AACV,QAAIH,GAAE,SAASK,EAAC,IAAI,EAAE,gBAAgBN,KAAII,GAAE,aAAa,CAAC,GAAGE,GAAE,MAAM,OAAO,GAAG;AAC7E,YAAMN,KAAI,GAAGC,GAAE,SAASK,EAAC,CAAC;AAC1B,MAAAL,GAAE,SAASK,EAAC,IAAIN,GAAE,UAAU,GAAGA,GAAE,YAAY,IAAI,CAAC;AAAA,IACpD;AACA,MAAE,MAAMA,KAAI,IAAI,IAAIA,KAAI,IAAI,CAAC;AAAA,EAC/B;AACA,MAAI,KAAK,EAAG,QAAOC;AACnB,QAAM,IAAI,IAAI,GAAGD,IAAG,GAAG,GAAG,IAAE,GAC1BO,KAAI,EAAE,YAAY,GAClBC,KAAI,EAAE,YAAY,GAClBC,KAAI,EAAE,YAAY,GAClB,IAAI,EAAE,YAAY,GAClB,IAAI,EAAE,YAAY,GAClB,IAAI,EAAE,YAAY,GAClBC,KAAI,CAAC;AACP,WAASV,KAAI,GAAGA,KAAIE,IAAGF,KAAK,CAAAU,GAAE,KAAK;AAAA,IACjC,YAAY,EAAE,YAAY;AAAA,IAC1B,oBAAoB,EAAE,YAAY;AAAA,IAClC,oBAAoB,EAAE,YAAY;AAAA,IAClC,sBAAsB,EAAE,YAAY;AAAA,IACpC,sBAAsB,EAAE,YAAY;AAAA,EACtC,CAAC;AACD,QAAM,IAAI,IAAI,EAAE,SACd,IAAI,IAAID,IACRE,KAAI,IAAI,GACR,IAAIA,KAAI,GACR,IAAI,IAAI,WAAWX,GAAE,QAAQA,GAAE,aAAa,GAAGS,EAAC,GAChDG,KAAI,IAAI,WAAWZ,GAAE,QAAQA,GAAE,aAAa,GAAG,CAAC,GAChD,IAAI,IAAI,WAAWA,GAAE,QAAQA,GAAE,aAAaW,IAAG,CAAC,GAChD,IAAI,IAAI,WAAWX,GAAE,QAAQA,GAAE,aAAa,GAAG,CAAC;AAClD,SAAOC,GAAE,aAAa;AAAA,IACpB,eAAeM;AAAA,IACf,eAAeC;AAAA,IACf,YAAYE;AAAA,IACZ,eAAe;AAAA,IACf,eAAeE;AAAA,IACf,YAAY;AAAA,IACZ,cAAc;AAAA,EAChB,GAAGX;AACL;;;AC3ZA,IAAI;AAAJ,IAAO;AAAP,IAAU;AACV,IAAMY,KAAI;AAAA,EACR,KAAK;AAAA,IACH,iCAAiC,SAAUC,IAAG;AAC5C,UAAI,IAAI,WAAW,EAAE,QAAQ,OAAO,MAAM;AAAA,IAC5C;AAAA,EACF;AACF;AACA,IAAM,IAAN,MAAQ;AAAA,EACN,OAAO;AACL,WAAO,MAAM,IAAI,eAAe,OAAO,QAAQ,MAAM,kCAAkCC,EAAC,EAAE,KAAK,CAAAD,OAAKA,GAAE,YAAY,CAAC,EAAE,KAAK,CAAAA,OAAK,YAAY,YAAYA,IAAGD,EAAC,CAAC,EAAE,KAAK,KAAK,KAAK,IAAI,YAAY,YAAY,OAAO,KAAKE,IAAG,QAAQ,GAAGF,EAAC,EAAE,KAAK,KAAK,KAAK,GAAG;AAAA,EAC1P;AAAA,EACA,MAAMC,IAAG;AACP,QAAIA,GAAE,UAAUD,GAAE,IAAI,gCAAgC,CAAC;AAAA,EACzD;AAAA,EACA,OAAOC,IAAGD,KAAI,GAAG;AACf,QAAI,CAAC,EAAG,OAAM,IAAI,MAAM,6CAA6C;AACrE,UAAMG,KAAIF,GAAE,YACVC,KAAI,EAAE,QAAQ,OAAOC,EAAC;AACxB,MAAE,IAAIF,IAAGC,EAAC,GAAGF,KAAIA,MAAK,OAAO,EAAE,QAAQ,0BAA0BE,IAAGC,EAAC,CAAC;AACtE,UAAM,IAAI,EAAE,QAAQ,OAAOH,EAAC,GAC1B,IAAI,EAAE,QAAQ,gBAAgB,GAAGA,IAAGE,IAAGC,EAAC,GACxC,IAAI,EAAE,MAAM,GAAG,IAAI,CAAC;AACtB,WAAO,EAAE,QAAQ,KAAKD,EAAC,GAAG,EAAE,QAAQ,KAAK,CAAC,GAAG;AAAA,EAC/C;AACF;AACA,IAAMA,KAAI;;;ACVV,IAAM,2BAAwC,IAAI,QAAQ,EAAE,IAAI,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,GAAW,WAAW,SAAS;AACjK,IAAM,2BAAwC,IAAI,QAAQ,EAAE,IAAI,WAAW,YAAY,YAAY,WAAY,WAAW,WAAW,WAAW,YAAY,SAAS;AAQ9J,IAAM,sBAAsB;AAQ5B,IAAM,4BAA4B;AA6CzC,IAAM,wBAAqC,IAAI,QAAQ,EAAE,IAAI,UAAW,WAAW,UAAW,WAAW,WAAW,WAAW,GAAW,WAAW,SAAS;AAC9J,IAAM,wBAAqC,IAAI,QAAQ,EAAE,IAAI,WAAW,YAAY,YAAY,YAAY,WAAW,WAAW,WAAW,YAAY,SAAS;;;AC1ElK,IAAME,cAAa,oBAAI,QAAQ;AAC/B,IAAI,iBAAiB;AACrB,IAAI;AA6BJ,IAAM,aAAN,MAAM,oBAAmB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM9B,YAAY,SAAS;AACnB,UAAM,OAAO;AACb,SAAK,iBAAiB;AACtB,SAAK,mBAAmB;AACxB,SAAK,oBAAoB;AACzB,SAAK,aAAa,IAAI,WAAW;AACjC,SAAK,kBAAkB;AACvB,SAAK,eAAe;AACpB,QAAI,OAAO,mBAAmB,aAAa;AACzC,cAAQ,KAAK,gIAAqI;AAAA,IACpJ;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,kBAAkB,MAAM;AACtB,SAAK,iBAAiB;AACtB,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,eAAe,aAAa;AAC1B,SAAK,WAAW,eAAe,WAAW;AAC1C,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASM,mBAAmB,UAAU;AAAA;AACjC,WAAK,eAAe;AAAA,QAClB,eAAe,MAAM,SAAS,gBAAgB,0BAA0B;AAAA,QACxE,kBAAkB;AAAA;AAAA,QAElB,eAAe,MAAM,SAAS,gBAAgB,0BAA0B;AAAA,QACxE,eAAe,MAAM,SAAS,gBAAgB,0BAA0B;AAAA,QACxE,cAAc,MAAM,SAAS,gBAAgB,wBAAwB;AAAA,QACrE,eAAe,MAAM,SAAS,gBAAgB,0BAA0B;AAAA,QACxE,gBAAgB,MAAM,SAAS,gBAAgB,2BAA2B;AAAA,MAC5E;AACA,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,cAAc,UAAU;AACtB,QAAI,SAAS,qBAAqB,MAAM;AACtC,WAAK,eAAe;AAAA,QAClB,eAAe,SAAS,WAAW,0BAA0B;AAAA,QAC7D,kBAAkB;AAAA;AAAA,QAElB,eAAe,SAAS,WAAW,0BAA0B;AAAA,QAC7D,eAAe,SAAS,WAAW,0BAA0B;AAAA,QAC7D,cAAc,SAAS,WAAW,wBAAwB;AAAA,QAC1D,eAAe,SAAS,WAAW,0BAA0B;AAAA,QAC7D,gBAAgB,SAAS,WAAW,2BAA2B;AAAA,MACjE;AAAA,IACF,OAAO;AACL,WAAK,eAAe;AAAA,QAClB,eAAe,SAAS,WAAW,IAAI,+BAA+B;AAAA,QACtE,kBAAkB,SAAS,WAAW,IAAI,+BAA+B,KAAK,SAAS,WAAW,IAAI,+BAA+B,EAAE,qBAAqB,EAAE,SAAS,KAAK;AAAA,QAC5K,eAAe,SAAS,WAAW,IAAI,+BAA+B;AAAA,QACtE,eAAe,SAAS,WAAW,IAAI,8BAA8B;AAAA,QACrE,cAAc,SAAS,WAAW,IAAI,+BAA+B;AAAA,QACrE,eAAe,SAAS,WAAW,IAAI,8BAA8B;AAAA,QACrE,gBAAgB,SAAS,WAAW,IAAI,gCAAgC,KAAK,SAAS,WAAW,IAAI,uCAAuC;AAAA,MAC9I;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA;AAAA,EAIA,OAAO;AACL,QAAI,CAAC,KAAK,mBAAmB;AAE3B,YAAM,WAAW,IAAI,WAAW,KAAK,OAAO;AAC5C,eAAS,QAAQ,KAAK,cAAc;AACpC,eAAS,mBAAmB,KAAK,eAAe;AAChD,YAAM,YAAY,SAAS,UAAU,qBAAqB;AAG1D,YAAM,eAAe,IAAI,WAAW,KAAK,OAAO;AAChD,mBAAa,QAAQ,KAAK,cAAc;AACxC,mBAAa,gBAAgB,aAAa;AAC1C,mBAAa,mBAAmB,KAAK,eAAe;AACpD,YAAM,gBAAgB,aAAa,UAAU,uBAAuB;AACpE,WAAK,oBAAoB,QAAQ,IAAI,CAAC,WAAW,aAAa,CAAC,EAAE,KAAK,CAAC,CAACC,YAAWC,cAAa,MAAM;AACpG,cAAM,KAAK,YAAW,YAAY,SAAS;AAC3C,cAAM,OAAO,CAAC,mBAAmB,yBAAyB,KAAK,UAAU,YAAW,YAAY,GAAG,uBAAuB,KAAK,UAAU,YAAW,UAAU,GAAG,6BAA6B,KAAK,UAAU,YAAW,gBAAgB,GAAG,wBAAwB,KAAK,UAAU,YAAW,WAAW,GAAG,6BAA6BD,YAAW,gBAAgB,GAAG,UAAU,GAAG,QAAQ,GAAG,IAAI,GAAG,GAAG,YAAY,GAAG,CAAC,CAAC,EAAE,KAAK,IAAI;AACpa,aAAK,kBAAkB,IAAI,gBAAgB,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC;AAC3D,aAAK,mBAAmBC;AACxB,aAAK,WAAW,iBAAiB,MAAM;AACrC,gBAAM,SAAS,IAAI,OAAO,KAAK,eAAe;AAC9C,gBAAM,mBAAmB,KAAK,iBAAiB,MAAM,CAAC;AACtD,iBAAO,YAAY;AAAA,YACjB,MAAM;AAAA,YACN,QAAQ,KAAK;AAAA,YACb;AAAA,UACF,GAAG,CAAC,gBAAgB,CAAC;AACrB,iBAAO;AAAA,QACT,CAAC;AAAA,MACH,CAAC;AACD,UAAI,iBAAiB,GAAG;AAGtB,gBAAQ,KAAK,qJAA0J;AAAA,MACzK;AACA;AAAA,IACF;AACA,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,KAAK,KAAK,QAAQ,YAAY,SAAS;AACrC,QAAI,KAAK,iBAAiB,MAAM;AAC9B,YAAM,IAAI,MAAM,6EAA6E;AAAA,IAC/F;AACA,UAAM,SAAS,IAAI,WAAW,KAAK,OAAO;AAC1C,WAAO,QAAQ,KAAK,IAAI;AACxB,WAAO,eAAe,KAAK,WAAW;AACtC,WAAO,mBAAmB,KAAK,eAAe;AAC9C,WAAO,gBAAgB,aAAa;AACpC,WAAO,KAAK,KAAK,YAAU;AACzB,WAAK,MAAM,QAAQ,QAAQ,OAAO;AAAA,IACpC,GAAG,YAAY,OAAO;AAAA,EACxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,MAAM,QAAQ,QAAQ,SAAS;AAC7B,QAAI,KAAK,iBAAiB,MAAM;AAC9B,YAAM,IAAI,MAAM,6EAA6E;AAAA,IAC/F;AAIA,QAAIF,YAAW,IAAI,MAAM,GAAG;AAC1B,YAAM,aAAaA,YAAW,IAAI,MAAM;AACxC,aAAO,WAAW,QAAQ,KAAK,MAAM,EAAE,MAAM,OAAO;AAAA,IACtD;AACA,SAAK,eAAe,MAAM,EAAE,KAAK,aAAW,SAAS,OAAO,OAAO,IAAI,IAAI,EAAE,MAAM,OAAO;AAAA,EAC5F;AAAA,EACA,mBAAmB,iBAAiB,WAAW;AAC7C,UAAM;AAAA,MACJ,MAAM;AAAA,MACN;AAAA,MACA,MAAM;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF,IAAI;AACJ,QAAI,gBAAgB,QAAS,QAAO,QAAQ,OAAO,KAAK;AACxD,QAAI;AACJ,QAAI,UAAU,cAAc,GAAG;AAC7B,gBAAU,IAAI,sBAAsB,OAAO,QAAQ,IAAI;AAAA,IACzD,OAAO;AACL,YAAM,UAAU,MAAM,CAAC,EAAE;AACzB,gBAAU,UAAU,aAAa,IAAI,IAAI,uBAAuB,SAAS,OAAO,QAAQ,UAAU,YAAY,QAAQ,IAAI,IAAI,IAAI,kBAAkB,SAAS,OAAO,QAAQ,QAAQ,IAAI;AAAA,IAC1L;AACA,YAAQ,YAAY,MAAM,CAAC,EAAE,QAAQ,WAAW,IAAI,eAAe;AACnE,YAAQ,YAAY;AACpB,YAAQ,kBAAkB;AAC1B,YAAQ,cAAc;AACtB,YAAQ,aAAa,gBAAgB,SAAS;AAC9C,YAAQ,mBAAmB,CAAC,EAAE,WAAW;AACzC,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQM,eAAe,IAAqB;AAAA,+CAArB,QAAQ,SAAS,CAAC,GAAG;AACxC,YAAM,YAAY,GAAK,IAAI,WAAW,MAAM,CAAC;AAO7C,YAAM,aAAa,UAAU,aAAa,MAAuC,UAAU,qBAAqB,CAAC,EAAE,eAAe;AAGlI,YAAM,kBAAkB,UAAU,aAAa,MAAuB,cAAc,CAAC,KAAK,aAAa;AACvG,UAAI,CAAC,iBAAiB;AACpB,eAAO,iBAAiB,SAAS;AAAA,MACnC;AAGA,YAAM,aAAa;AACnB,YAAM,iBAAiB,KAAK,KAAK,EAAE,KAAK,MAAM;AAC5C,eAAO,KAAK,WAAW,YAAY;AAAA,UACjC,MAAM;AAAA,UACN;AAAA,UACA;AAAA,QACF,GAAG,CAAC,MAAM,CAAC;AAAA,MACb,CAAC,EAAE,KAAK,OAAK,KAAK,mBAAmB,EAAE,MAAM,SAAS,CAAC;AAGvD,MAAAA,YAAW,IAAI,QAAQ;AAAA,QACrB,SAAS;AAAA,MACX,CAAC;AACD,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,UAAU;AACR,SAAK,WAAW,QAAQ;AACxB,QAAI,KAAK,gBAAiB,KAAI,gBAAgB,KAAK,eAAe;AAClE;AAAA,EACF;AACF;AAIA,WAAW,cAAc;AAAA,EACvB,OAAO;AAAA,EACP,OAAO;AAAA,EACP,WAAW;AACb;AAGA,WAAW,mBAAmB;AAAA,EAC5B,MAAM;AAAA,EACN,MAAM;AAAA,EACN,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,oBAAoB;AAAA,EACpB,QAAQ;AAAA,EACR,cAAc;AAAA,EACd,eAAe;AAAA,EACf,UAAU;AAAA,EACV,SAAS;AAAA,EACT,6BAA6B;AAAA,EAC7B,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,MAAM;AAAA,EACN,UAAU;AAAA,EACV,WAAW;AACb;AACA,WAAW,eAAe;AAAA,EACxB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AACA,WAAW,aAAa;AAAA,EACtB;AAAA,EACA;AAAA,EACA;AACF;AAIA,WAAW,cAAc,WAAY;AACnC,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,QAAM,eAAe;AACrB,QAAM,aAAa;AACnB,QAAM,mBAAmB;AACzB,QAAM,cAAc;AAEpB,OAAK,iBAAiB,WAAW,SAAU,GAAG;AAC5C,UAAM,UAAU,EAAE;AAClB,YAAQ,QAAQ,MAAM;AAAA,MACpB,KAAK;AACH,iBAAS,QAAQ;AACjB,aAAK,QAAQ,gBAAgB;AAC7B;AAAA,MACF,KAAK;AACH,0BAAkB,KAAK,MAAM;AAC3B,cAAI;AACF,kBAAM;AAAA,cACJ;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,YACF,IAAI,UAAU,QAAQ,MAAM;AAC5B,iBAAK,YAAY;AAAA,cACf,MAAM;AAAA,cACN,IAAI,QAAQ;AAAA,cACZ,MAAM;AAAA,gBACJ;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,cACF;AAAA,YACF,GAAG,OAAO;AAAA,UACZ,SAAS,OAAO;AACd,oBAAQ,MAAM,KAAK;AACnB,iBAAK,YAAY;AAAA,cACf,MAAM;AAAA,cACN,IAAI,QAAQ;AAAA,cACZ,OAAO,MAAM;AAAA,YACf,CAAC;AAAA,UACH;AAAA,QACF,CAAC;AACD;AAAA,IACJ;AAAA,EACF,CAAC;AACD,WAAS,KAAK,YAAY;AACxB,wBAAoB,IAAI,QAAQ,aAAW;AACzC,oBAAc;AAAA,QACZ;AAAA,QACA,sBAAsB;AAAA,MACxB;AACA,YAAM,WAAW;AAAA,IACnB,CAAC,EAAE,KAAK,MAAM;AACZ,kBAAY,gBAAgB;AAC5B,UAAI,YAAY,aAAa,QAAW;AACtC,gBAAQ,KAAK,6DAA6D;AAAA,MAC5E;AAAA,IACF,CAAC;AAAA,EACH;AACA,WAAS,UAAU,QAAQ;AACzB,UAAM,WAAW,IAAI,YAAY,SAAS,IAAI,WAAW,MAAM,CAAC;AAChE,aAAS,UAAU;AACjB,eAAS,MAAM;AACf,eAAS,OAAO;AAAA,IAClB;AACA,QAAI,CAAC,SAAS,QAAQ,GAAG;AACvB,cAAQ;AACR,YAAM,IAAI,MAAM,qDAAqD;AAAA,IACvE;AACA,QAAI;AACJ,QAAI,SAAS,QAAQ,GAAG;AACtB,oBAAc,YAAY;AAAA,IAC5B,WAAW,SAAS,QAAQ,GAAG;AAC7B,oBAAc,YAAY;AAAA,IAC5B,WAAW,SAAS,MAAM,GAAG;AAC3B,oBAAc,YAAY;AAAA,IAC5B,OAAO;AACL,YAAM,IAAI,MAAM,0CAA0C;AAAA,IAC5D;AACA,UAAM,QAAQ,SAAS,SAAS;AAChC,UAAM,SAAS,SAAS,UAAU;AAClC,UAAM,aAAa,SAAS,UAAU,KAAK;AAC3C,UAAM,aAAa,SAAS,UAAU;AACtC,UAAM,YAAY,SAAS,SAAS;AACpC,UAAM,WAAW,SAAS,YAAY;AACtC,UAAM,WAAW,SAAS,YAAY;AACtC,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI,oBAAoB,aAAa,OAAO,QAAQ,QAAQ;AAC5D,QAAI,CAAC,SAAS,CAAC,UAAU,CAAC,YAAY;AACpC,cAAQ;AACR,YAAM,IAAI,MAAM,mCAAmC;AAAA,IACrD;AACA,QAAI,CAAC,SAAS,iBAAiB,GAAG;AAChC,cAAQ;AACR,YAAM,IAAI,MAAM,4CAA4C;AAAA,IAC9D;AACA,UAAM,QAAQ,CAAC;AACf,UAAM,UAAU,CAAC;AACjB,aAAS,OAAO,GAAG,OAAO,WAAW,QAAQ;AAC3C,YAAM,UAAU,CAAC;AACjB,eAAS,MAAM,GAAG,MAAM,YAAY,OAAO;AACzC,cAAM,YAAY,CAAC;AACnB,YAAI,UAAU;AACd,iBAAS,QAAQ,GAAG,QAAQ,YAAY,SAAS;AAC/C,gBAAM,YAAY,SAAS,kBAAkB,KAAK,OAAO,IAAI;AAC7D,cAAI,SAAS,KAAK,QAAQ,KAAK,UAAU,MAAM,UAAU,YAAY,MAAM,KAAK,UAAU,aAAa,MAAM,IAAI;AAC/G,oBAAQ,KAAK,oFAAoF;AAAA,UACnG;AACA,cAAI,aAAa,GAAG;AAClB,uBAAW,UAAU;AACrB,wBAAY,UAAU;AAAA,UACxB,OAAO;AAIL,uBAAW,UAAU;AACrB,wBAAY,UAAU;AAAA,UACxB;AACA,cAAI,MAAM,IAAI,WAAW,SAAS,8BAA8B,KAAK,OAAO,GAAG,gBAAgB,CAAC;AAChG,gBAAM,SAAS,SAAS,eAAe,KAAK,KAAK,OAAO,MAAM,kBAAkB,GAAG,IAAI,EAAE;AACzF,cAAI,eAAe,WAAW,eAAe;AAC3C,kBAAM,IAAI,YAAY,IAAI,QAAQ,IAAI,YAAY,IAAI,aAAa,YAAY,iBAAiB;AAAA,UAClG;AACA,cAAI,CAAC,QAAQ;AACX,oBAAQ;AACR,kBAAM,IAAI,MAAM,2CAA2C;AAAA,UAC7D;AACA,oBAAU,KAAK,GAAG;AAAA,QACpB;AACA,cAAM,UAAU,OAAO,SAAS;AAChC,gBAAQ,KAAK;AAAA,UACX,MAAM;AAAA,UACN,OAAO;AAAA,UACP,QAAQ;AAAA,QACV,CAAC;AACD,gBAAQ,KAAK,QAAQ,MAAM;AAAA,MAC7B;AACA,YAAM,KAAK;AAAA,QACT;AAAA,QACA;AAAA,QACA;AAAA,QACA,QAAQ;AAAA,QACR,MAAM;AAAA,MACR,CAAC;AAAA,IACH;AACA,YAAQ;AACR,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,QAAQ;AAAA,MACR,MAAM;AAAA,IACR;AAAA,EACF;AAaA,QAAM,iBAAiB;AAAA,IAAC;AAAA,MACtB,IAAI;AAAA,MACJ,aAAa,CAAC,YAAY,KAAK;AAAA,MAC/B,kBAAkB,CAAC,iBAAiB,UAAU,iBAAiB,QAAQ;AAAA,MACvE,cAAc,CAAC,aAAa,sBAAsB,aAAa,oBAAoB;AAAA,MACnF,YAAY,CAAC,WAAW,gBAAgB;AAAA,MACxC,eAAe;AAAA,MACf,eAAe;AAAA,MACf,iBAAiB;AAAA,IACnB;AAAA,IAAG;AAAA,MACD,IAAI;AAAA,MACJ,aAAa,CAAC,YAAY,OAAO,YAAY,KAAK;AAAA,MAClD,kBAAkB,CAAC,iBAAiB,QAAQ,iBAAiB,MAAM;AAAA,MACnE,cAAc,CAAC,aAAa,kBAAkB,aAAa,gBAAgB;AAAA,MAC3E,YAAY,CAAC,WAAW,gBAAgB;AAAA,MACxC,eAAe;AAAA,MACf,eAAe;AAAA,MACf,iBAAiB;AAAA,IACnB;AAAA,IAAG;AAAA,MACD,IAAI;AAAA,MACJ,aAAa,CAAC,YAAY,OAAO,YAAY,KAAK;AAAA,MAClD,kBAAkB,CAAC,iBAAiB,KAAK,iBAAiB,GAAG;AAAA,MAC7D,cAAc,CAAC,aAAa,uBAAuB,aAAa,qBAAqB;AAAA,MACrF,YAAY,CAAC,WAAW,gBAAgB;AAAA,MACxC,eAAe;AAAA,MACf,eAAe;AAAA,MACf,iBAAiB;AAAA,IACnB;AAAA,IAAG;AAAA,MACD,IAAI;AAAA,MACJ,aAAa,CAAC,YAAY,OAAO,YAAY,KAAK;AAAA,MAClD,kBAAkB,CAAC,iBAAiB,MAAM,iBAAiB,IAAI;AAAA,MAC/D,cAAc,CAAC,aAAa,iBAAiB,aAAa,oBAAoB;AAAA,MAC9E,YAAY,CAAC,WAAW,gBAAgB;AAAA,MACxC,eAAe;AAAA,MACf,eAAe;AAAA,MACf,iBAAiB;AAAA,IACnB;AAAA,IAAG;AAAA,MACD,IAAI;AAAA,MACJ,aAAa,CAAC,YAAY,OAAO,YAAY,KAAK;AAAA,MAClD,kBAAkB,CAAC,iBAAiB,IAAI;AAAA,MACxC,cAAc,CAAC,aAAa,eAAe;AAAA,MAC3C,YAAY,CAAC,WAAW,gBAAgB;AAAA,MACxC,eAAe;AAAA,MACf,eAAe;AAAA,MACf,iBAAiB;AAAA,IACnB;AAAA,IAAG;AAAA,MACD,IAAI;AAAA,MACJ,aAAa,CAAC,YAAY,OAAO,YAAY,KAAK;AAAA,MAClD,kBAAkB,CAAC,iBAAiB,cAAc,iBAAiB,aAAa;AAAA,MAChF,cAAc,CAAC,aAAa,yBAAyB,aAAa,wBAAwB;AAAA,MAC1F,YAAY,CAAC,WAAW,gBAAgB;AAAA,MACxC,eAAe;AAAA,MACf,eAAe;AAAA,MACf,iBAAiB;AAAA,IACnB;AAAA,IAAG;AAAA,MACD,IAAI;AAAA,MACJ,aAAa,CAAC,YAAY,SAAS;AAAA,MACnC,kBAAkB,CAAC,iBAAiB,IAAI;AAAA,MACxC,cAAc,CAAC,aAAa,wBAAwB;AAAA,MACpD,YAAY,CAAC,WAAW,aAAa;AAAA,MACrC,aAAa;AAAA,MACb,iBAAiB;AAAA,IACnB;AAAA;AAAA,IAGA;AAAA,MACE,aAAa,CAAC,YAAY,OAAO,YAAY,KAAK;AAAA,MAClD,kBAAkB,CAAC,iBAAiB,QAAQ,iBAAiB,MAAM;AAAA,MACnE,cAAc,CAAC,aAAa,YAAY,aAAa,UAAU;AAAA,MAC/D,YAAY,CAAC,WAAW,kBAAkB,WAAW,gBAAgB;AAAA,MACrE,eAAe;AAAA,MACf,eAAe;AAAA,MACf,iBAAiB;AAAA,IACnB;AAAA,IAAG;AAAA,MACD,aAAa,CAAC,YAAY,SAAS;AAAA,MACnC,kBAAkB,CAAC,iBAAiB,SAAS;AAAA,MAC7C,cAAc,CAAC,aAAa,UAAU;AAAA,MACtC,YAAY,CAAC,WAAW,aAAa;AAAA,MACrC,aAAa;AAAA,MACb,iBAAiB;AAAA,IACnB;AAAA,EAAC;AACD,QAAM,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,IAKd,CAAC,YAAY,KAAK,GAAG,eAAe,OAAO,SAAO,IAAI,YAAY,SAAS,YAAY,KAAK,CAAC,EAAE,KAAK,CAACG,IAAGC,OAAMD,GAAE,gBAAgBC,GAAE,aAAa;AAAA,IAC/I,CAAC,YAAY,KAAK,GAAG,eAAe,OAAO,SAAO,IAAI,YAAY,SAAS,YAAY,KAAK,CAAC,EAAE,KAAK,CAACD,IAAGC,OAAMD,GAAE,gBAAgBC,GAAE,aAAa;AAAA,IAC/I,CAAC,YAAY,SAAS,GAAG,eAAe,OAAO,SAAO,IAAI,YAAY,SAAS,YAAY,SAAS,CAAC,EAAE,KAAK,CAACD,IAAGC,OAAMD,GAAE,cAAcC,GAAE,WAAW;AAAA,EACrJ;AACA,WAAS,oBAAoB,aAAa,OAAO,QAAQ,UAAU;AACjE,UAAM,UAAU,QAAQ,WAAW;AACnC,aAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,YAAM,MAAM,QAAQ,CAAC;AACrB,UAAI,IAAI,MAAM,CAAC,OAAO,IAAI,EAAE,EAAG;AAC/B,UAAI,CAAC,IAAI,YAAY,SAAS,WAAW,EAAG;AAC5C,UAAI,YAAY,IAAI,iBAAiB,SAAS,EAAG;AACjD,UAAI,IAAI,mBAAmB,EAAE,aAAa,KAAK,KAAK,aAAa,MAAM,GAAI;AAC3E,YAAM,mBAAmB,IAAI,iBAAiB,WAAW,IAAI,CAAC;AAC9D,YAAM,eAAe,IAAI,aAAa,WAAW,IAAI,CAAC;AACtD,YAAM,aAAa,IAAI,WAAW,CAAC;AACnC,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF;AACA,UAAM,IAAI,MAAM,0DAA0D;AAAA,EAC5E;AACA,WAAS,aAAa,OAAO;AAC3B,QAAI,SAAS,EAAG,QAAO;AACvB,YAAQ,QAAQ,QAAQ,OAAO,KAAK,UAAU;AAAA,EAChD;AAQA,WAAS,OAAO,QAAQ;AACtB,QAAI,OAAO,WAAW,EAAG,QAAO,OAAO,CAAC;AACxC,QAAI,kBAAkB;AACtB,aAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,YAAM,QAAQ,OAAO,CAAC;AACtB,yBAAmB,MAAM;AAAA,IAC3B;AACA,UAAM,SAAS,IAAI,WAAW,eAAe;AAC7C,QAAI,aAAa;AACjB,aAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,YAAM,QAAQ,OAAO,CAAC;AACtB,aAAO,IAAI,OAAO,UAAU;AAC5B,oBAAc,MAAM;AAAA,IACtB;AACA,WAAO;AAAA,EACT;AACF;AAKA,IAAM,uBAAuB,oBAAI,IAAI,CAAC,YAAY,UAAU,SAAS,CAAC;AACtE,IAAM,aAAa;AAAA,EACjB,CAAC,EAA6B,GAAG;AAAA,EACjC,CAAC,EAA6B,GAAG;AAAA,EACjC,CAAC,EAAwB,GAAG;AAAA,EAC5B,CAAC,EAAuB,GAAG;AAAA,EAC3B,CAAC,EAAuB,GAAG;AAAA,EAC3B,CAAC,EAAuB,GAAG;AAAA,EAC3B,CAAC,EAAoB,GAAG;AAAA,EACxB,CAAC,EAAmB,GAAG;AAAA,EACvB,CAAC,EAAoB,GAAG;AAAA,EACxB,CAAC,EAAoB,GAAG;AAAA,EACxB,CAAC,EAAiB,GAAG;AAAA,EACrB,CAAC,EAAkB,GAAG;AAAA,EACtB,CAAC,EAAgC,GAAG;AAAA,EACpC,CAAC,EAAkC,GAAG;AAAA,EACtC,CAAC,EAAmC,GAAG;AAAA,EACvC,CAAC,EAA6B,GAAG;AAAA,EACjC,CAAC,EAA8B,GAAG;AAAA,EAClC,CAAC,EAA6B,GAAG;AAAA,EACjC,CAAC,EAA8B,GAAG;AAAA,EAClC,CAAC,EAA8B,GAAG;AAAA,EAClC,CAAC,EAA6B,GAAG;AAAA,EACjC,CAAC,EAA6B,GAAG;AAAA,EACjC,CAAC,EAA4B,GAAG;AAAA,EAChC,CAAC,EAAwB,GAAG;AAAA,EAC5B,CAAC,EAAyB,GAAG;AAAA,EAC7B,CAAC,EAAyB,GAAG;AAAA,EAC7B,CAAC,EAAyB,GAAG;AAAA,EAC7B,CAAC,EAAwB,GAAG;AAAA,EAC5B,CAAC,EAAyB,GAAG;AAC/B;AACA,IAAM,WAAW;AAAA,EACf,CAAC,EAA6B,GAAG;AAAA,EACjC,CAAC,EAA6B,GAAG;AAAA,EACjC,CAAC,EAAwB,GAAG;AAAA,EAC5B,CAAC,EAAuB,GAAG;AAAA,EAC3B,CAAC,EAAuB,GAAG;AAAA,EAC3B,CAAC,EAAuB,GAAG;AAAA,EAC3B,CAAC,EAAoB,GAAG;AAAA,EACxB,CAAC,EAAmB,GAAG;AAAA,EACvB,CAAC,EAAoB,GAAG;AAAA,EACxB,CAAC,EAAoB,GAAG;AAAA,EACxB,CAAC,EAAiB,GAAG;AAAA,EACrB,CAAC,EAAkB,GAAG;AAAA,EACtB,CAAC,EAAgC,GAAG;AAAA,EACpC,CAAC,EAAkC,GAAG;AAAA,EACtC,CAAC,EAAmC,GAAG;AAAA,EACvC,CAAC,EAA6B,GAAG;AAAA,EACjC,CAAC,EAA8B,GAAG;AACpC;AACA,SAAe,iBAAiB,WAAW;AAAA;AACzC,UAAM;AAAA,MACJ;AAAA,IACF,IAAI;AACJ,QAAI,WAAW,QAAQ,MAAM,QAAW;AACtC,YAAM,IAAI,MAAM,yCAAyC;AAAA,IAC3D;AAIA,QAAI;AACJ,QAAI,UAAU,2BAA2B,GAA2B;AAClE,UAAI,CAAC,OAAO;AACV,gBAAQ,IAAI,QAAQ,CAAM,YAAW;AACnC,gBAAMC,QAAO,IAAI,EAAY;AAC7B,gBAAMA,MAAK,KAAK;AAChB,kBAAQA,KAAI;AAAA,QACd,EAAC;AAAA,MACH;AACA,aAAO,MAAM;AAAA,IACf;AAIA,UAAM,UAAU,CAAC;AACjB,aAAS,aAAa,GAAG,aAAa,UAAU,OAAO,QAAQ,cAAc;AAC3E,YAAM,aAAa,KAAK,IAAI,GAAG,UAAU,cAAc,UAAU;AACjE,YAAM,cAAc,KAAK,IAAI,GAAG,UAAU,eAAe,UAAU;AACnE,YAAM,aAAa,UAAU,aAAa,KAAK,IAAI,GAAG,UAAU,cAAc,UAAU,IAAI;AAC5F,YAAM,QAAQ,UAAU,OAAO,UAAU;AACzC,UAAI;AACJ,UAAI,UAAU,2BAA2B,GAA2B;AAClE,oBAAY,MAAM;AAAA,MACpB,WAAW,UAAU,2BAA2B,GAA2B;AACzE,oBAAY,KAAK,OAAO,MAAM,WAAW,MAAM,sBAAsB;AAAA,MACvE,OAAO;AACL,cAAM,IAAI,MAAM,uDAAuD;AAAA,MACzE;AACA,UAAI;AACJ,UAAI,SAAS,QAAQ,MAAM,WAAW;AACpC,eAAO,IAAI,aAAa,UAAU,QAAQ,UAAU,YAAY,UAAU,aAAa,aAAa,iBAAiB;AAAA,MACvH,WAAW,SAAS,QAAQ,MAAM,eAAe;AAC/C,eAAO,IAAI,YAAY,UAAU,QAAQ,UAAU,YAAY,UAAU,aAAa,YAAY,iBAAiB;AAAA,MACrH,OAAO;AACL,eAAO;AAAA,MACT;AACA,cAAQ,KAAK;AAAA,QACX;AAAA,QACA,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,OAAO;AAAA,MACT,CAAC;AAAA,IACH;AACA,QAAI;AACJ,QAAI,qBAAqB,IAAI,WAAW,QAAQ,CAAC,GAAG;AAClD,gBAAU,UAAU,eAAe,IAAI,IAAI,YAAY,QAAQ,CAAC,EAAE,MAAM,UAAU,YAAY,UAAU,WAAW,IAAI,IAAI,cAAc,QAAQ,CAAC,EAAE,MAAM,UAAU,YAAY,UAAU,aAAa,UAAU,UAAU;AAAA,IAC7N,OAAO;AACL,UAAI,UAAU,aAAa,EAAG,OAAM,IAAI,MAAM,2CAA2C;AACzF,gBAAU,IAAI,kBAAkB,SAAS,UAAU,YAAY,UAAU,WAAW;AACpF,cAAQ,YAAY,QAAQ,WAAW,IAAI,eAAe;AAC1D,cAAQ,YAAY;AAAA,IACtB;AACA,YAAQ,UAAU;AAClB,YAAQ,OAAO,SAAS,QAAQ;AAChC,YAAQ,SAAS,WAAW,QAAQ;AACpC,YAAQ,aAAa,gBAAgB,SAAS;AAC9C,YAAQ,cAAc;AAItB,WAAO,QAAQ,QAAQ,OAAO;AAAA,EAChC;AAAA;AACA,SAAS,gBAAgB,WAAW;AAClC,QAAM,MAAM,UAAU,qBAAqB,CAAC;AAC5C,MAAI,IAAI,mBAAmB,GAAwB;AACjD,WAAO,IAAI,qBAAqB,IAAuB,iBAAiB;AAAA,EAC1E,WAAW,IAAI,mBAAmB,GAA4B;AAC5D,WAAO,IAAI,qBAAqB,IAAuB,sBAAsB;AAAA,EAC/E,WAAW,IAAI,mBAAmB,GAA8B;AAC9D,WAAO;AAAA,EACT,OAAO;AACL,YAAQ,KAAK,mDAAmD,IAAI,cAAc,GAAG;AACrF,WAAO;AAAA,EACT;AACF;;;AC1xBA,IAAIC;AAAJ,IAAQC;AACR,IAAM,iBAAiB,OAAO,eAAe;AAC7C,IAAM,gBAAgB,OAAO,cAAc;AAC3C,IAAM,SAAS,OAAO,OAAO;AAC7B,IAAM,qBAAqB,OAAO,mBAAmB;AACrD,IAAM,SAAS,OAAO,OAAO;AAStB,IAAM,sBAAN,MAA0B;AAAA,EAC/B,YAAYC,QAAO,oBAAoB,GAAG;AACxC,SAAKF,GAAE,IAAI,oBAAI,IAAI;AACnB,SAAKC,GAAE,IAAI,CAAC;AACZ,SAAK,MAAM,IAAIC;AACf,SAAK,kBAAkB,IAAI;AAAA,EAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,IAAI,kBAAkB,OAAO;AAC3B,SAAK,kBAAkB,IAAI;AAC3B,SAAK,MAAM,EAAE;AAAA,EACf;AAAA,EACA,IAAI,oBAAoB;AACtB,WAAO,KAAK,kBAAkB;AAAA,EAChC;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,QAAQ;AACV,WAAO,KAAK,MAAM;AAAA,EACpB;AAAA;AAAA;AAAA;AAAA,EAIA,cAAc,KAAK;AACjB,WAAO,KAAK,cAAc,EAAE,IAAI,GAAG,KAAK;AAAA,EAC1C;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,QAAQ;AACN,SAAK,cAAc,EAAE,MAAM;AAC3B,SAAK,aAAa,IAAI,CAAC;AAAA,EACzB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,KAAK;AACV,QAAI,CAAC,KAAK,cAAc,EAAE,IAAI,GAAG,GAAG;AAClC,WAAK,cAAc,EAAE,IAAI,KAAK,CAAC;AAAA,IACjC;AACA,SAAK,cAAc,EAAE,IAAI,KAAK,KAAK,cAAc,EAAE,IAAI,GAAG,IAAI,CAAC;AAC/D,UAAM,oBAAoB,KAAK,aAAa,EAAE,QAAQ,GAAG;AACzD,QAAI,sBAAsB,IAAI;AAC5B,WAAK,aAAa,EAAE,OAAO,mBAAmB,CAAC;AAAA,IACjD;AACA,SAAK,aAAa,EAAE,QAAQ,GAAG;AAG/B,SAAK,MAAM,EAAE;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,QAAQ,KAAK;AACX,QAAI,KAAK,cAAc,EAAE,IAAI,GAAG,GAAG;AACjC,WAAK,cAAc,EAAE,IAAI,KAAK,KAAK,IAAI,KAAK,cAAc,EAAE,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC;AAAA,IAC9E;AACA,SAAK,MAAM,EAAE;AAAA,EACf;AAAA,EACA,EAAEF,MAAK,gBAAgBC,MAAK,eAAe,OAAO,IAAI;AACpD,QAAI,KAAK,aAAa,EAAE,SAAS,KAAK,kBAAkB,GAAG;AACzD;AAAA,IACF;AACA,aAAS,IAAI,KAAK,aAAa,EAAE,SAAS,GAAG,KAAK,KAAK,kBAAkB,GAAG,EAAE,GAAG;AAC/E,YAAM,MAAM,KAAK,aAAa,EAAE,CAAC;AACjC,YAAM,gBAAgB,KAAK,cAAc,EAAE,IAAI,GAAG;AAClD,UAAI,kBAAkB,GAAG;AACvB,aAAK,MAAM,EAAE,OAAO,GAAG;AACvB,aAAK,aAAa,EAAE,OAAO,GAAG,CAAC;AAAA,MACjC;AAAA,IACF;AAAA,EACF;AACF;;;ACtFA,IAAM,oBAAoB,kBAAgB;AACxC,QAAM,cAAc,CAAC;AACrB,QAAM,aAAa,oBAAI,IAAI;AAC3B,aAAW,QAAQ,cAAc;AAC/B,QAAI,aAAa;AACjB,QAAI,SAAS;AAIb,WAAO,WAAW,IAAI,UAAU,GAAG;AACjC,mBAAa,OAAO,MAAM,EAAE;AAAA,IAC9B;AACA,eAAW,IAAI,UAAU;AACzB,gBAAY,KAAK,UAAU;AAAA,EAC7B;AACA,SAAO;AACT;AASA,IAAM,uBAAuB,kBAAgB;AAC3C,QAAM,QAAQ,oBAAI,IAAI;AACtB,aAAW,WAAW,aAAa,UAAU;AAC3C,eAAW,WAAW,QAAQ,UAAU;AACtC,YAAM,IAAI,SAAS;AAAA,QACjB,UAAU;AAAA,QACV,mBAAmB,QAAQ;AAAA,MAC7B,CAAC;AAAA,IACH;AAAA,EACF;AACA,SAAO;AACT;AACA,IAAqB,iCAArB,MAAoD;AAAA,EAClD,YAAY,QAAQ;AAClB,SAAK,SAAS;AACd,SAAK,OAAO;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,UAAU,MAAM;AACd,UAAM,SAAS,KAAK;AACpB,UAAM,OAAO,OAAO;AACpB,QAAI,KAAK,eAAe,UAAa,KAAK,WAAW,KAAK,IAAI,MAAM,QAAW;AAC7E,aAAO;AAAA,IACT;AACA,UAAM,eAAe,KAAK,WAAW,KAAK,IAAI;AAC9C,UAAM,cAAc,aAAa,YAAY,CAAC;AAC9C,UAAM,WAAW,kBAAkB,YAAY,IAAI,OAAK,EAAE,IAAI,CAAC;AAC/D,eAAW,SAAS,KAAK,QAAQ;AAE/B,YAAM,SAAS,YAAU;AACvB,cAAM,OAAO;AACb,YAAI,CAAC,KAAK,UAAU;AAClB;AAAA,QACF;AACA,cAAM,cAAc,OAAO,aAAa,IAAI,IAAI;AAChD,YAAI,eAAe,QAAQ,YAAY,UAAU,QAAQ,YAAY,cAAc,MAAM;AACvF;AAAA,QACF;AACA,cAAM,UAAU,KAAK,OAAO,YAAY,MAAM;AAC9C,cAAM,gBAAgB,QAAQ;AAC9B,cAAM,eAAe,cAAc,YAAY,UAAU;AACzD,cAAM,gBAAgB,aAAa;AACnC,YAAI,CAAC,iBAAiB,CAAC,cAAc,KAAK,IAAI,GAAG;AAC/C;AAAA,QACF;AACA,aAAK,SAAS,mBAAmB,qBAAqB,cAAc,KAAK,IAAI,CAAC;AAAA,MAChF,CAAC;AAAA,IACH;AACA,SAAK,SAAS,WAAW;AACzB,WAAO,QAAQ,QAAQ;AAAA,EACzB;AACF;;;ACzFA,IAAIE;AAAJ,IAAQC;AAQR,QAAQ,qBAAqB;AAItB,IAAM,iBAAiB,CAAC,KAAK,QAAQ,mBAAmB,MAAM;AAAC,MAAM;AAC1E,QAAM,aAAa,WAAS;AAC1B,UAAM,WAAW,MAAM,SAAS,MAAM;AACtC,qBAAiB,KAAK,IAAI,GAAG,KAAK,IAAI,GAAG,SAAS,QAAQ,IAAI,WAAW,CAAC,CAAC,CAAC;AAAA,EAC9E;AACA,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,WAAO,KAAK,KAAK,SAAS,YAAY,MAAM;AAAA,EAC9C,CAAC;AACH;AAEA,IAAM,cAAc,SAAO;AACzB,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,UAAM,SAAS,SAAS,cAAc,QAAQ;AAC9C,aAAS,KAAK,YAAY,MAAM;AAChC,WAAO,SAAS;AAChB,WAAO,UAAU;AACjB,WAAO,QAAQ;AACf,WAAO,MAAM;AAAA,EACf,CAAC;AACH;AACA,IAAM,QAAQ,oBAAI,IAAI;AACtB,IAAM,YAAY,oBAAI,IAAI;AAC1B,IAAI;AACJ,IAAM,cAAc,IAAI,YAAY;AACpC,IAAI;AACJ,IAAM,aAAa,IAAI,WAAW;AAClC,IAAI;AACJ,IAAI;AACG,IAAM,UAAU,OAAO,QAAQ;AAC/B,IAAM,kBAAkB,OAAO,gBAAgB;AACtD,IAAM,gBAAgB,OAAO,cAAc;AACpC,IAAM,oBAAN,cAAgC,gBAAgB;AAAA,EACrD,OAAO,wBAAwB,KAAK;AAClC,2BAAuB;AACvB,gBAAY,eAAe,GAAG;AAAA,EAChC;AAAA,EACA,OAAO,0BAA0B;AAC/B,WAAO;AAAA,EACT;AAAA,EACA,OAAO,0BAA0B,KAAK;AACpC,6BAAyB;AACzB,eAAW,kBAAkB,GAAG;AAAA,EAClC;AAAA,EACA,OAAO,4BAA4B;AACjC,WAAO;AAAA,EACT;AAAA,EACA,OAAO,0BAA0B,KAAK;AACpC,QAAI,2BAA2B,KAAK;AAClC,+BAAyB;AACzB,uBAAiB,YAAY,GAAG,EAAE,KAAK,MAAM,eAAe,KAAK,EAAE,KAAK,MAAM,cAAc;AAAA,IAC9F;AAAA,EACF;AAAA,EACA,OAAO,4BAA4B;AACjC,WAAO;AAAA,EACT;AAAA,EACA,OAAO,qBAAqB,UAAU;AACpC,eAAW,cAAc,QAAQ;AAAA,EACnC;AAAA,EACA,WAAW,QAAQ;AACjB,WAAO;AAAA,EACT;AAAA;AAAA,EAEA,OAAO,aAAa;AAClB,UAAM,QAAQ,CAAC,QAAQ,QAAQ;AAC7B,WAAK,OAAO,GAAG;AAAA,IACjB,CAAC;AACD,SAAK,eAAe,EAAE,MAAM;AAAA,EAC9B;AAAA,EACA,OAAO,IAAI,KAAK;AACd,WAAO,MAAM,IAAI,GAAG;AAAA,EACtB;AAAA;AAAA,EAEA,OAAa,OAAO,KAAK;AAAA;AACvB,UAAI,CAAC,KAAK,IAAI,GAAG,GAAG;AAClB;AAAA,MACF;AACA,YAAM,YAAY,MAAM,IAAI,GAAG;AAC/B,gBAAU,OAAO,GAAG;AACpB,YAAM,OAAO,GAAG;AAChB,YAAM,OAAO,MAAM;AAEnB,WAAK,QAAQ;AAAA,IACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,mBAAmB,KAAK;AAC7B,WAAO,CAAC,CAAC,UAAU,IAAI,GAAG;AAAA,EAC5B;AAAA,EACA,YAAYC,eAAc;AACxB,UAAM;AACN,SAAKD,GAAE,IAAI,IAAI,WAAW,EAAE,SAAS,YAAU,IAAI,+BAA+B,MAAM,CAAC;AACzF,SAAK,aAAa,IAAIC;AACtB,SAAK,OAAO,EAAE,eAAe,WAAW;AACxC,SAAK,OAAO,EAAE,cAAc,UAAU;AAAA,EACxC;AAAA,EACA,MAAMF,MAAK,iBAAiBC,MAAK,SAAS,gBAAgB,IAAI;AAC5D,WAAO,KAAK,YAAY,eAAe;AAAA,EACzC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKM,QAAQ,KAAK,SAAS,mBAAmB,MAAM;AAAA,EAAC,GAAG;AAAA;AACvD,WAAK,OAAO,EAAE,mBAAmB,QAAQ,eAAe;AACxD,WAAK,cAAc;AAAA,QACjB,MAAM;AAAA,QACN;AAAA,QACA,KAAK;AAAA,MACP,CAAC;AACD,UAAI,CAAC,MAAM,IAAI,GAAG,GAAG;AACnB,YAAI,kBAAkB,MAAM;AAC1B,eAAK,OAAO,EAAE,kBAAkB,MAAM,cAAc;AAAA,QACtD;AACA,cAAM,eAAe,eAAe,KAAK,KAAK,OAAO,GAAG,cAAY;AAClE,2BAAiB,WAAW,GAAG;AAAA,QACjC,CAAC;AACD,cAAMC,gBAAe,KAAK,aAAa;AACvC,cAAM,oBAAoB,aAAa,KAAK,aAAW;AACrD,iBAAOA,cAAa,QAAQ,OAAO;AAAA,QACrC,CAAC,EAAE,KAAK,kBAAgB;AACtB,2BAAiB,GAAG;AACpB,iBAAO,IAAIA,cAAa,YAAY;AAAA,QACtC,CAAC,EAAE,MAAM,YAAU;AACjB,kBAAQ,MAAM,MAAM;AACpB,iBAAO,IAAIA,cAAa;AAAA,QAC1B,CAAC;AACD,cAAM,IAAI,KAAK,iBAAiB;AAAA,MAClC;AACA,YAAM,MAAM,IAAI,GAAG;AACnB,gBAAU,IAAI,KAAK,IAAI;AACvB,UAAI,kBAAkB;AACpB,yBAAiB,CAAG;AAAA,MACtB;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMM,KAAK,KAAK,SAAS,mBAAmB,MAAM;AAAA,EAAC,GAAG;AAAA;AACpD,YAAM,KAAK,QAAQ,KAAK,SAAS,gBAAgB;AACjD,YAAM,OAAO,MAAM,MAAM,IAAI,GAAG;AAChC,YAAMC,SAAQ,MAAM,KAAK,MAAM;AAC/B,WAAK,eAAe,EAAE,OAAO,GAAG;AAGhC,MAAAA,OAAM,UAAU,MAAM;AACpB,aAAK,eAAe,EAAE,QAAQ,GAAG;AAAA,MACnC;AACA,aAAOA;AAAA,IACT;AAAA;AACF;AACA,kBAAkBH,GAAE,IAAI,IAAI,oBAAoB,iBAAiB;;;AC5KjE,IAAM,cAAN,cAA0B,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMjC,YAAY,UAAU,SAAS,cAAc,KAAK,GAAG;AACnD,UAAM;AASN,SAAK,gBAAgB;AASrB,SAAK,UAAU;AACf,SAAK,QAAQ,MAAM,WAAW;AAC9B,SAAK,QAAQ,MAAM,aAAa;AAChC,SAAK,QAAQ,aAAa,aAAa,KAAK;AAS5C,SAAK,SAAS,IAAI,QAAQ,KAAK,GAAG;AAClC,SAAK,iBAAiB,WAAW,WAAY;AAC3C,WAAK,SAAS,SAAU,QAAQ;AAC9B,YAAI,OAAO,mBAAmB,OAAO,QAAQ,cAAc,YAAY,WAAW,OAAO,QAAQ,eAAe,MAAM;AACpH,iBAAO,QAAQ,OAAO;AAAA,QACxB;AAAA,MACF,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AAAA,EACA,KAAK,QAAQ,WAAW;AACtB,UAAM,KAAK,QAAQ,SAAS;AAC5B,SAAK,UAAU,OAAO,QAAQ,UAAU,IAAI;AAC5C,SAAK,SAAS,OAAO;AACrB,WAAO;AAAA,EACT;AACF;AAIA,IAAM,UAAU,IAAI,QAAQ;AAC5B,IAAM,cAAc,IAAI,QAAQ;AAChC,IAAM,wBAAwB,IAAI,QAAQ;AAC1C,IAAMI,MAAK,IAAI,QAAQ;AACvB,IAAMC,MAAK,IAAI,QAAQ;AAcvB,IAAM,gBAAN,MAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMlB,YAAY,aAAa,CAAC,GAAG;AAC3B,UAAM,QAAQ;AACd,QAAI,QAAQ;AACZ,QAAI,YAAY;AAChB,UAAMC,SAAQ;AAAA,MACZ,SAAS,oBAAI,QAAQ;AAAA,IACvB;AACA,UAAM,aAAa,WAAW,YAAY,SAAY,WAAW,UAAU,SAAS,cAAc,KAAK;AACvG,eAAW,MAAM,WAAW;AAO5B,SAAK,aAAa;AAOlB,SAAK,UAAU,WAAY;AACzB,aAAO;AAAA,QACL,OAAO;AAAA,QACP,QAAQ;AAAA,MACV;AAAA,IACF;AAQA,SAAK,SAAS,SAAU,OAAOC,SAAQ;AACrC,UAAI,MAAM,0BAA0B,KAAM,OAAM,kBAAkB;AAClE,UAAIA,QAAO,WAAW,QAAQA,QAAO,0BAA0B,KAAM,CAAAA,QAAO,kBAAkB;AAC9F,kBAAY,KAAKA,QAAO,kBAAkB;AAC1C,4BAAsB,iBAAiBA,QAAO,kBAAkB,WAAW;AAC3E,mBAAa,OAAO,OAAOA,OAAM;AACjC,aAAO,KAAK;AAAA,IACd;AAQA,SAAK,UAAU,SAAU,OAAO,QAAQ;AACtC,eAAS;AACT,gBAAU;AACV,mBAAa,SAAS;AACtB,oBAAc,UAAU;AACxB,iBAAW,MAAM,QAAQ,QAAQ;AACjC,iBAAW,MAAM,SAAS,SAAS;AAAA,IACrC;AACA,aAAS,WAAW,QAAQ;AAC1B,UAAI,OAAO,cAAe,QAAO,QAAQ,MAAM,UAAU;AACzD,eAAS,IAAI,GAAG,IAAI,OAAO,SAAS,QAAQ,IAAI,GAAG,KAAK;AACtD,mBAAW,OAAO,SAAS,CAAC,CAAC;AAAA,MAC/B;AAAA,IACF;AACA,aAAS,aAAa,QAAQ,OAAOA,SAAQ;AAC3C,UAAI,OAAO,YAAY,OAAO;AAC5B,mBAAW,MAAM;AACjB;AAAA,MACF;AACA,UAAI,OAAO,eAAe;AACxB,gBAAQ,sBAAsB,OAAO,WAAW;AAChD,gBAAQ,aAAa,qBAAqB;AAC1C,cAAM,UAAU,QAAQ,KAAK,MAAM,QAAQ,KAAK,KAAK,OAAO,OAAO,KAAKA,QAAO,MAAM,MAAM;AAC3F,cAAM,UAAU,OAAO;AACvB,gBAAQ,MAAM,UAAU,YAAY,OAAO,KAAK;AAChD,YAAI,YAAY,MAAM;AACpB,iBAAO,eAAe,OAAO,OAAOA,OAAM;AAC1C,kBAAQ,MAAM,YAAY,eAAe,OAAO,OAAO,OAAO,IAAI,OAAO,OAAO,OAAO,OAAO,IAAI,kBAAuB,QAAQ,IAAI,aAAa,cAAc,SAAS,CAAC,QAAQ,IAAI,cAAc,eAAe;AACnN,cAAI,QAAQ,eAAe,YAAY;AACrC,uBAAW,YAAY,OAAO;AAAA,UAChC;AACA,iBAAO,cAAc,OAAO,OAAOA,OAAM;AAAA,QAC3C;AACA,cAAM,aAAa;AAAA,UACjB,yBAAyB,qBAAqBA,SAAQ,MAAM;AAAA,QAC9D;AACA,QAAAD,OAAM,QAAQ,IAAI,QAAQ,UAAU;AAAA,MACtC;AACA,eAAS,IAAI,GAAG,IAAI,OAAO,SAAS,QAAQ,IAAI,GAAG,KAAK;AACtD,qBAAa,OAAO,SAAS,CAAC,GAAG,OAAOC,OAAM;AAAA,MAChD;AAAA,IACF;AACA,aAAS,qBAAqB,SAAS,SAAS;AAC9C,MAAAH,IAAG,sBAAsB,QAAQ,WAAW;AAC5C,MAAAC,IAAG,sBAAsB,QAAQ,WAAW;AAC5C,aAAOD,IAAG,kBAAkBC,GAAE;AAAA,IAChC;AACA,aAAS,iBAAiB,OAAO;AAC/B,YAAM,SAAS,CAAC;AAChB,YAAM,gBAAgB,SAAU,QAAQ;AACtC,YAAI,OAAO,cAAe,QAAO,KAAK,MAAM;AAAA,MAC9C,CAAC;AACD,aAAO;AAAA,IACT;AACA,aAAS,OAAO,OAAO;AACrB,YAAM,SAAS,iBAAiB,KAAK,EAAE,KAAK,SAAUG,IAAGC,IAAG;AAC1D,YAAID,GAAE,gBAAgBC,GAAE,aAAa;AACnC,iBAAOA,GAAE,cAAcD,GAAE;AAAA,QAC3B;AACA,cAAM,YAAYF,OAAM,QAAQ,IAAIE,EAAC,EAAE;AACvC,cAAM,YAAYF,OAAM,QAAQ,IAAIG,EAAC,EAAE;AACvC,eAAO,YAAY;AAAA,MACrB,CAAC;AACD,YAAM,OAAO,OAAO;AACpB,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,IAAI,GAAG,KAAK;AAC7C,eAAO,CAAC,EAAE,QAAQ,MAAM,SAAS,OAAO;AAAA,MAC1C;AAAA,IACF;AAAA,EACF;AACF;;;ACvMA,IAAM,SAAsB,IAAI,MAAM;AACtC,IAAM,UAAuB,IAAI,QAAQ;AAgHzC,SAAS,eAAe,QAAQ,MAAM,cAAc;AAClD,MAAI,QAAQ;AACZ,QAAM,SAAS,IAAI,QAAQ;AAC3B,SAAO,kBAAkB,MAAM,IAAI;AACnC,SAAO,gBAAgB,WAAS;AAC9B,UAAM;AAAA,MACJ;AAAA,IACF,IAAI;AACJ,QAAI,aAAa,QAAW;AAC1B,YAAM;AAAA,QACJ;AAAA,MACF,IAAI,SAAS;AACb,UAAI,aAAa,QAAW;AAC1B,iBAAS,IAAI,GAAG,IAAI,SAAS,OAAO,IAAI,GAAG,KAAK;AAC9C,cAAI,MAAM,QAAQ;AAChB,kBAAM,kBAAkB,GAAG,MAAM;AAAA,UACnC,OAAO;AACL,mBAAO,oBAAoB,UAAU,CAAC;AAAA,UACxC;AACA,cAAI,CAAC,MAAM,eAAe;AACxB,mBAAO,aAAa,MAAM,WAAW;AAAA,UACvC;AACA,kBAAQ,KAAK,OAAO,MAAM;AAAA,QAC5B;AAAA,MACF;AAAA,IACF;AAAA,EACF,CAAC;AACD,SAAO;AACT;;;AC9IA,IAAM,uCAAuC;AAAA,EAC3C,UAAU,CAAC,QAAQ,mBAAmB,iBAAiB,4BAA4B,SAAS,oBAAoB,kBAAkB,2BAA2B;AAAA,EAC7J,QAAQ,CAAC,mBAAmB,kBAAkB;AAAA,EAC9C,SAAS,CAAC,mBAAmB,kBAAkB;AAAA,EAC/C,UAAU,CAAC,QAAQ,mBAAmB,iBAAiB,SAAS,oBAAoB,gBAAgB;AACtG;AAwCA,IAAM,eAAN,MAAmB;AAAA;AAAA;AAAA;AAAA,EAIjB,cAAc;AAOZ,SAAK,eAAe;AACpB,SAAK,kBAAkB,CAAC;AACxB,SAAK,SAAS,SAAU,QAAQ;AAC9B,aAAO,IAAI,mBAAmB,MAAM;AAAA,IACtC,CAAC;AACD,SAAK,SAAS,SAAU,QAAQ;AAC9B,aAAO,IAAIC,6BAA4B,MAAM;AAAA,IAC/C,CAAC;AACD,SAAK,SAAS,SAAU,QAAQ;AAC9B,aAAO,IAAIC,oCAAmC,MAAM;AAAA,IACtD,CAAC;AACD,SAAK,SAAS,SAAU,QAAQ;AAC9B,aAAO,IAAIC,8BAA6B,MAAM;AAAA,IAChD,CAAC;AACD,SAAK,SAAS,SAAU,QAAQ;AAC9B,aAAO,IAAIC,2BAA0B,MAAM;AAAA,IAC7C,CAAC;AACD,SAAK,SAAS,SAAU,QAAQ;AAC9B,aAAO,IAAIC,gCAA+B,MAAM;AAAA,IAClD,CAAC;AACD,SAAK,SAAS,SAAU,QAAQ;AAC9B,aAAO,IAAIC,iCAAgC,MAAM;AAAA,IACnD,CAAC;AACD,SAAK,SAAS,SAAU,QAAQ;AAC9B,aAAO,IAAIC,kCAAiC,MAAM;AAAA,IACpD,CAAC;AACD,SAAK,SAAS,SAAU,QAAQ;AAC9B,aAAO,IAAIC,mCAAkC,MAAM;AAAA,IACrD,CAAC;AACD,SAAK,SAAS,SAAU,QAAQ;AAC9B,aAAO,IAAIC,6BAA4B,MAAM;AAAA,IAC/C,CAAC;AACD,SAAK,SAAS,SAAU,QAAQ;AAC9B,aAAO,IAAIC,kCAAiC,MAAM;AAAA,IACpD,CAAC;AACD,SAAK,SAAS,SAAU,QAAQ;AAC9B,aAAO,IAAIC,wCAAuC,MAAM;AAAA,IAC1D,CAAC;AACD,SAAK,SAAS,SAAU,QAAQ;AAC9B,aAAO,IAAIC,4BAA2B,MAAM;AAAA,IAC9C,CAAC;AACD,SAAK,SAAS,SAAU,QAAQ;AAC9B,aAAO,IAAIC,uBAAsB,MAAM;AAAA,IACzC,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,SAAS,UAAU;AACjB,QAAI,KAAK,gBAAgB,QAAQ,QAAQ,MAAM,IAAI;AACjD,WAAK,gBAAgB,KAAK,QAAQ;AAAA,IACpC;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,WAAW,UAAU;AACnB,QAAI,KAAK,gBAAgB,QAAQ,QAAQ,MAAM,IAAI;AACjD,WAAK,gBAAgB,OAAO,KAAK,gBAAgB,QAAQ,QAAQ,GAAG,CAAC;AAAA,IACvE;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,gBAAgB,OAAO;AACrB,SAAK,eAAe;AACpB,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,MAAM,OAAO,QAAQ,SAAS,SAAS;AACrC,UAAM,SAAS,IAAI,WAAW;AAC9B,UAAM,UAAU,CAAC;AACjB,aAAS,IAAI,GAAG,KAAK,KAAK,gBAAgB,QAAQ,IAAI,IAAI,KAAK;AAC7D,cAAQ,KAAK,KAAK,gBAAgB,CAAC,EAAE,MAAM,CAAC;AAAA,IAC9C;AACA,WAAO,WAAW,OAAO;AACzB,WAAO,gBAAgB,KAAK,YAAY;AACxC,WAAO,WAAW,OAAO,QAAQ,OAAO,EAAE,MAAM,OAAO;AAAA,EACzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,WAAW,OAAO,SAAS;AACzB,UAAM,QAAQ;AACd,WAAO,IAAI,QAAQ,SAAU,SAAS,QAAQ;AAC5C,YAAM,MAAM,OAAO,SAAS,QAAQ,OAAO;AAAA,IAC7C,CAAC;AAAA,EACH;AACF;AAMA,IAAMC,mBAAkB;AAAA,EACtB,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,gBAAgB;AAAA,EAChB,cAAc;AAAA,EACd,MAAM;AAAA,EACN,eAAe;AAAA,EACf,OAAO;AAAA,EACP,gBAAgB;AAAA,EAChB,KAAK;AAAA,EACL,cAAc;AAAA,EACd,OAAO;AAAA,EACP,cAAc;AAAA,EACd,sBAAsB;AAAA,EACtB,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,wBAAwB;AAAA,EACxB,uBAAuB;AAAA,EACvB,uBAAuB;AAAA,EACvB,sBAAsB;AAAA,EACtB,eAAe;AAAA,EACf,iBAAiB;AAAA,EACjB,QAAQ;AACV;AACA,IAAM,wBAAwB;AAC9B,IAAM,iBAAiB,CAAC;AACxB,eAAe,aAAa,IAAIA,iBAAgB;AAChD,eAAe,0BAA0B,IAAIA,iBAAgB;AAC7D,eAAe,yBAAyB,IAAIA,iBAAgB;AAC5D,eAAe,YAAY,IAAIA,iBAAgB;AAC/C,eAAe,yBAAyB,IAAIA,iBAAgB;AAC5D,eAAe,wBAAwB,IAAIA,iBAAgB;AAC3D,eAAe,mBAAmB,IAAIA,iBAAgB;AACtD,eAAe,cAAc,IAAIA,iBAAgB;AACjD,eAAe,sBAAsB,IAAIA,iBAAgB;AACzD,IAAMC,mBAAkB;AAAA,EACtB,OAAO;AAAA,EACP,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,uBAAuB;AACzB;AACA,IAAM,yBAAyB,IAAI,MAAM;AAKzC,IAAM,mBAAmB;AACzB,IAAM,mBAAmB;AACzB,IAAM,cAAc;AACpB,IAAM,yBAAyB;AAC/B,IAAM,sBAAsB;AAC5B,IAAM,qBAAqB;AAc3B,SAAS,WAAW,QAAQ,QAAQ;AAClC,SAAO,OAAO,WAAW,OAAO,UAAU,OAAO,MAAM,SAAU,SAAS,OAAO;AAC/E,WAAO,YAAY,OAAO,KAAK;AAAA,EACjC,CAAC;AACH;AASA,SAAS,oBAAoB,MAAM;AACjC,SAAO,IAAI,YAAY,EAAE,OAAO,IAAI,EAAE;AACxC;AASA,SAAS,iBAAiB,QAAQ;AAChC,SAAO,WAAW,OAAO,UAAU,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;AACrF;AAWA,SAAS,UAAU,WAAW,OAAO,OAAO;AAC1C,QAAM,SAAS;AAAA,IACb,KAAK,IAAI,MAAM,UAAU,QAAQ,EAAE,KAAK,OAAO,iBAAiB;AAAA,IAChE,KAAK,IAAI,MAAM,UAAU,QAAQ,EAAE,KAAK,OAAO,iBAAiB;AAAA,EAClE;AACA,WAAS,IAAI,OAAO,IAAI,QAAQ,OAAO,KAAK;AAC1C,aAASC,KAAI,GAAGA,KAAI,UAAU,UAAUA,MAAK;AAC3C,UAAI;AACJ,UAAI,UAAU,WAAW,GAAG;AAG1B,gBAAQ,UAAU,MAAM,IAAI,UAAU,WAAWA,EAAC;AAAA,MACpD,OAAO;AACL,YAAIA,OAAM,EAAG,SAAQ,UAAU,KAAK,CAAC;AAAA,iBAAWA,OAAM,EAAG,SAAQ,UAAU,KAAK,CAAC;AAAA,iBAAWA,OAAM,EAAG,SAAQ,UAAU,KAAK,CAAC;AAAA,iBAAWA,OAAM,EAAG,SAAQ,UAAU,KAAK,CAAC;AACzK,YAAI,UAAU,eAAe,MAAM;AACjC,kBAAQ,UAAU,UAAU,OAAO,UAAU,KAAK;AAAA,QACpD;AAAA,MACF;AACA,aAAO,IAAIA,EAAC,IAAI,KAAK,IAAI,OAAO,IAAIA,EAAC,GAAG,KAAK;AAC7C,aAAO,IAAIA,EAAC,IAAI,KAAK,IAAI,OAAO,IAAIA,EAAC,GAAG,KAAK;AAAA,IAC/C;AAAA,EACF;AACA,SAAO;AACT;AAWA,SAAS,oBAAoB,YAAY;AACvC,SAAO,KAAK,KAAK,aAAa,CAAC,IAAI;AACrC;AAUA,SAAS,qBAAqB,aAAa,cAAc,GAAG;AAC1D,QAAM,eAAe,oBAAoB,YAAY,UAAU;AAC/D,MAAI,iBAAiB,YAAY,YAAY;AAC3C,UAAM,QAAQ,IAAI,WAAW,YAAY;AACzC,UAAM,IAAI,IAAI,WAAW,WAAW,CAAC;AACrC,QAAI,gBAAgB,GAAG;AACrB,eAAS,IAAI,YAAY,YAAY,IAAI,cAAc,KAAK;AAC1D,cAAM,CAAC,IAAI;AAAA,MACb;AAAA,IACF;AACA,WAAO,MAAM;AAAA,EACf;AACA,SAAO;AACT;AACA,SAAS,YAAY;AACnB,MAAI,OAAO,aAAa,eAAe,OAAO,oBAAoB,aAAa;AAC7E,WAAO,IAAI,gBAAgB,GAAG,CAAC;AAAA,EACjC;AACA,SAAO,SAAS,cAAc,QAAQ;AACxC;AACA,SAAS,iBAAiB,QAAQ,UAAU;AAC1C,MAAI,OAAO,WAAW,QAAW;AAC/B,WAAO,IAAI,QAAQ,aAAW,OAAO,OAAO,SAAS,QAAQ,CAAC;AAAA,EAChE;AACA,MAAI;AAIJ,MAAI,aAAa,cAAc;AAC7B,cAAU;AAAA,EACZ,WAAW,aAAa,cAAc;AACpC,cAAU;AAAA,EACZ;AACA,SAAO,OAAO,cAAc;AAAA,IAC1B,MAAM;AAAA,IACN;AAAA,EACF,CAAC;AACH;AAOA,IAAM,aAAN,MAAiB;AAAA,EACf,cAAc;AACZ,SAAK,UAAU,CAAC;AAChB,SAAK,UAAU,CAAC;AAChB,SAAK,UAAU,CAAC;AAChB,SAAK,UAAU,CAAC;AAChB,SAAK,aAAa;AAClB,SAAK,UAAU,CAAC;AAChB,SAAK,UAAU,oBAAI,IAAI;AACvB,SAAK,QAAQ,CAAC;AACd,SAAK,iBAAiB,CAAC;AACvB,SAAK,qBAAqB,CAAC;AAC3B,SAAK,OAAO,oBAAI,IAAI;AACpB,SAAK,MAAM;AACX,SAAK,OAAO;AAAA,MACV,OAAO;AAAA,QACL,SAAS;AAAA,QACT,WAAW,yBAAyB;AAAA,MACtC;AAAA,IACF;AACA,SAAK,QAAQ;AAAA,MACX,QAAQ,oBAAI,IAAI;AAAA,MAChB,YAAY,oBAAI,IAAI;AAAA,MACpB,sBAAsB,oBAAI,IAAI;AAAA,MAC9B,WAAW,oBAAI,IAAI;AAAA,MACnB,UAAU,oBAAI,IAAI;AAAA,MAClB,QAAQ,oBAAI,IAAI;AAAA,IAClB;AACA,SAAK,eAAe;AAAA,EACtB;AAAA,EACA,WAAW,SAAS;AAClB,SAAK,UAAU;AAAA,EACjB;AAAA,EACA,gBAAgB,OAAO;AACrB,SAAK,eAAe;AAAA,EACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASM,WAAW,IAAO,IAAsB;AAAA,+CAA7B,OAAO,QAAQ,UAAU,CAAC,GAAG;AAC5C,WAAK,UAAU,OAAO,OAAO;AAAA;AAAA,QAE3B,QAAQ;AAAA,QACR,KAAK;AAAA,QACL,aAAa;AAAA,QACb,gBAAgB;AAAA,QAChB,YAAY,CAAC;AAAA,QACb,yBAAyB;AAAA,MAC3B,GAAG,OAAO;AACV,UAAI,KAAK,QAAQ,WAAW,SAAS,GAAG;AAEtC,aAAK,QAAQ,MAAM;AAAA,MACrB;AACA,YAAM,KAAK,kBAAkB,KAAK;AAClC,YAAM,QAAQ,IAAI,KAAK,OAAO;AAC9B,YAAM,SAAS;AACf,YAAM,UAAU,OAAO;AACvB,YAAM,OAAO,OAAO;AACpB,gBAAU,OAAO;AACjB,YAAM,iBAAiB,OAAO;AAC9B,YAAM,qBAAqB,OAAO;AAGlC,YAAM,OAAO,IAAI,KAAK,SAAS;AAAA,QAC7B,MAAM;AAAA,MACR,CAAC;AAGD,YAAM,qBAAqB,OAAO,KAAK,cAAc;AACrD,YAAM,yBAAyB,OAAO,KAAK,kBAAkB;AAC7D,UAAI,mBAAmB,SAAS,EAAG,MAAK,iBAAiB;AACzD,UAAI,uBAAuB,SAAS,EAAG,MAAK,qBAAqB;AAGjE,UAAI,KAAK,WAAW,KAAK,QAAQ,SAAS,EAAG,MAAK,QAAQ,CAAC,EAAE,aAAa,KAAK;AAC/E,UAAI,QAAQ,WAAW,MAAM;AAG3B,cAAM,SAAS,IAAI,WAAW;AAC9B,eAAO,kBAAkB,IAAI;AAC7B,eAAO,YAAY,WAAY;AAE7B,gBAAM,cAAc,qBAAqB,OAAO,MAAM;AACtD,gBAAM,oBAAoB,IAAI,SAAS,IAAI,YAAY,sBAAsB,CAAC;AAC9E,4BAAkB,UAAU,GAAG,YAAY,YAAY,IAAI;AAC3D,4BAAkB,UAAU,GAAG,oBAAoB,IAAI;AAGvD,gBAAM,YAAY,qBAAqB,oBAAoB,KAAK,UAAU,IAAI,CAAC,GAAG,EAAI;AACtF,gBAAM,kBAAkB,IAAI,SAAS,IAAI,YAAY,sBAAsB,CAAC;AAC5E,0BAAgB,UAAU,GAAG,UAAU,YAAY,IAAI;AACvD,0BAAgB,UAAU,GAAG,qBAAqB,IAAI;AAGtD,gBAAM,SAAS,IAAI,YAAY,gBAAgB;AAC/C,gBAAM,aAAa,IAAI,SAAS,MAAM;AACtC,qBAAW,UAAU,GAAG,kBAAkB,IAAI;AAC9C,qBAAW,UAAU,GAAG,aAAa,IAAI;AACzC,gBAAM,kBAAkB,mBAAmB,gBAAgB,aAAa,UAAU,aAAa,kBAAkB,aAAa,YAAY;AAC1I,qBAAW,UAAU,GAAG,iBAAiB,IAAI;AAC7C,gBAAM,UAAU,IAAI,KAAK,CAAC,QAAQ,iBAAiB,WAAW,mBAAmB,WAAW,GAAG;AAAA,YAC7F,MAAM;AAAA,UACR,CAAC;AACD,gBAAM,YAAY,IAAI,WAAW;AACjC,oBAAU,kBAAkB,OAAO;AACnC,oBAAU,YAAY,WAAY;AAChC,mBAAO,UAAU,MAAM;AAAA,UACzB;AAAA,QACF;AAAA,MACF,OAAO;AACL,YAAI,KAAK,WAAW,KAAK,QAAQ,SAAS,GAAG;AAC3C,gBAAM,SAAS,IAAI,WAAW;AAC9B,iBAAO,cAAc,IAAI;AACzB,iBAAO,YAAY,WAAY;AAC7B,kBAAM,aAAa,OAAO;AAC1B,iBAAK,QAAQ,CAAC,EAAE,MAAM;AACtB,mBAAO,IAAI;AAAA,UACb;AAAA,QACF,OAAO;AACL,iBAAO,IAAI;AAAA,QACb;AAAA,MACF;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,kBAAkB,QAAQ,WAAW;AACnC,QAAI,OAAO,KAAK,OAAO,QAAQ,EAAE,WAAW,EAAG;AAC/C,UAAM,UAAU,KAAK;AACrB,UAAM,iBAAiB,KAAK;AAC5B,QAAI;AACF,YAAM,OAAO,KAAK,MAAM,KAAK,UAAU,OAAO,QAAQ,CAAC;AACvD,UAAI,QAAQ,2BAA2B,KAAK,gBAAgB;AAC1D,YAAI,UAAU,eAAe,OAAW,WAAU,aAAa,CAAC;AAChE,mBAAW,iBAAiB,KAAK,gBAAgB;AAC/C,oBAAU,WAAW,aAAa,IAAI,KAAK,eAAe,aAAa;AACvE,yBAAe,aAAa,IAAI;AAAA,QAClC;AACA,eAAO,KAAK;AAAA,MACd;AACA,UAAI,OAAO,KAAK,IAAI,EAAE,SAAS,EAAG,WAAU,SAAS;AAAA,IACvD,SAAS,OAAO;AACd,cAAQ,KAAK,sCAAuC,OAAO,OAAO,6DAAoE,MAAM,OAAO;AAAA,IACrJ;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,OAAO,WAAW,iBAAiB,OAAO;AACxC,QAAI,KAAK,KAAK,IAAI,SAAS,MAAM,OAAO;AACtC,YAAMC,QAAO,oBAAI,IAAI;AACrB,MAAAA,MAAK,IAAI,MAAM,KAAK,KAAK;AACzB,MAAAA,MAAK,IAAI,OAAO,KAAK,KAAK;AAC1B,WAAK,KAAK,IAAI,WAAWA,KAAI;AAAA,IAC/B;AACA,UAAM,OAAO,KAAK,KAAK,IAAI,SAAS;AACpC,WAAO,KAAK,IAAI,cAAc;AAAA,EAChC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,4BAA4B,QAAQ;AAClC,UAAMC,SAAQ,KAAK;AACnB,QAAIA,OAAM,qBAAqB,IAAI,MAAM,EAAG,QAAO;AACnD,UAAM,IAAI,IAAI,QAAQ;AACtB,aAAS,IAAI,GAAG,KAAK,OAAO,OAAO,IAAI,IAAI,KAAK;AAE9C,UAAI,KAAK,IAAI,EAAE,oBAAoB,QAAQ,CAAC,EAAE,OAAO,IAAI,CAAG,IAAI,KAAQ,QAAO;AAAA,IACjF;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,gCAAgC,QAAQ;AACtC,UAAMA,SAAQ,KAAK;AACnB,QAAIA,OAAM,qBAAqB,IAAI,MAAM,EAAG,QAAOA,OAAM,qBAAqB,IAAI,MAAM;AACxF,UAAM,YAAY,OAAO,MAAM;AAC/B,UAAM,IAAI,IAAI,QAAQ;AACtB,aAAS,IAAI,GAAG,KAAK,UAAU,OAAO,IAAI,IAAI,KAAK;AACjD,QAAE,oBAAoB,WAAW,CAAC;AAClC,UAAI,EAAE,MAAM,KAAK,EAAE,MAAM,KAAK,EAAE,MAAM,GAAG;AAEvC,UAAE,KAAK,CAAG;AAAA,MACZ,OAAO;AACL,UAAE,UAAU;AAAA,MACd;AACA,gBAAU,OAAO,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;AAAA,IACnC;AACA,IAAAA,OAAM,qBAAqB,IAAI,QAAQ,SAAS;AAChD,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,sBAAsB,QAAQ,SAAS;AACrC,QAAI,eAAe;AACnB,UAAM,eAAe,CAAC;AACtB,QAAI,QAAQ,OAAO,MAAM,KAAK,QAAQ,OAAO,MAAM,GAAG;AACpD,mBAAa,SAAS,QAAQ,OAAO,QAAQ;AAC7C,qBAAe;AAAA,IACjB;AACA,QAAI,QAAQ,aAAa,GAAG;AAC1B,mBAAa,WAAW,QAAQ;AAChC,qBAAe;AAAA,IACjB;AACA,QAAI,QAAQ,OAAO,MAAM,KAAK,QAAQ,OAAO,MAAM,GAAG;AACpD,mBAAa,QAAQ,QAAQ,OAAO,QAAQ;AAC5C,qBAAe;AAAA,IACjB;AACA,QAAI,cAAc;AAChB,aAAO,aAAa,OAAO,cAAc,CAAC;AAC1C,aAAO,WAAW,uBAAuB,IAAI;AAC7C,WAAK,eAAe,uBAAuB,IAAI;AAAA,IACjD;AAAA,EACF;AAAA,EACM,4BAA4B,cAAc,cAAc;AAAA;AAC5D,UAAI,iBAAiB,aAAc,QAAO;AAC1C,eAAS,sBAAsB,KAAK;AAClC,YAAI,IAAI,eAAe,gBAAgB;AACrC,iBAAO,SAAS,aAAaC,IAAG;AAC9B,mBAAOA,KAAI,UAAUA,KAAI,eAAe,KAAK,IAAIA,KAAI,eAAe,cAAc,GAAG;AAAA,UACvF;AAAA,QACF;AACA,eAAO,SAAS,eAAeA,IAAG;AAChC,iBAAOA;AAAA,QACT;AAAA,MACF;AACA,UAAI,wBAAwB,mBAAmB;AAC7C,uBAAe,MAAM,KAAK,uBAAuB,YAAY;AAAA,MAC/D;AACA,UAAI,wBAAwB,mBAAmB;AAC7C,uBAAe,MAAM,KAAK,uBAAuB,YAAY;AAAA,MAC/D;AACA,YAAM,YAAY,eAAe,aAAa,QAAQ;AACtD,YAAM,YAAY,eAAe,aAAa,QAAQ;AACtD,YAAM,QAAQ,KAAK,IAAI,YAAY,UAAU,QAAQ,GAAG,YAAY,UAAU,QAAQ,CAAC;AACvF,YAAM,SAAS,KAAK,IAAI,YAAY,UAAU,SAAS,GAAG,YAAY,UAAU,SAAS,CAAC;AAC1F,YAAM,SAAS,UAAU;AACzB,aAAO,QAAQ;AACf,aAAO,SAAS;AAChB,YAAM,UAAU,OAAO,WAAW,MAAM;AAAA,QACtC,oBAAoB;AAAA,MACtB,CAAC;AACD,cAAQ,YAAY;AACpB,cAAQ,SAAS,GAAG,GAAG,OAAO,MAAM;AACpC,YAAM,YAAY,QAAQ,aAAa,GAAG,GAAG,OAAO,MAAM;AAC1D,UAAI,WAAW;AACb,gBAAQ,UAAU,WAAW,GAAG,GAAG,OAAO,MAAM;AAChD,cAAM,UAAU,sBAAsB,YAAY;AAClD,cAAM,OAAO,QAAQ,aAAa,GAAG,GAAG,OAAO,MAAM,EAAE;AACvD,iBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK,GAAG;AACvC,oBAAU,KAAK,CAAC,IAAI,QAAQ,KAAK,CAAC,IAAI,GAAG,IAAI;AAAA,QAC/C;AAAA,MACF;AACA,UAAI,WAAW;AACb,gBAAQ,UAAU,WAAW,GAAG,GAAG,OAAO,MAAM;AAChD,cAAM,UAAU,sBAAsB,YAAY;AAClD,cAAM,OAAO,QAAQ,aAAa,GAAG,GAAG,OAAO,MAAM,EAAE;AACvD,iBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK,GAAG;AACvC,oBAAU,KAAK,CAAC,IAAI,QAAQ,KAAK,CAAC,IAAI,GAAG,IAAI;AAAA,QAC/C;AAAA,MACF;AACA,cAAQ,aAAa,WAAW,GAAG,CAAC;AAIpC,YAAM,YAAY,gBAAgB;AAClC,YAAM,UAAU,UAAU,MAAM;AAChC,cAAQ,SAAS,IAAI,OAAO,MAAM;AAClC,cAAQ,aAAa;AACrB,cAAQ,WAAW,gBAAgB,cAAc;AACjD,UAAI,gBAAgB,gBAAgB,aAAa,YAAY,aAAa,SAAS;AACjF,gBAAQ,KAAK,wFAAwF;AAAA,MACvG;AACA,cAAQ,KAAK,oEAAoE;AACjF,aAAO;AAAA,IACT;AAAA;AAAA,EACM,uBAAuB,SAAS,iBAAiB,UAAU;AAAA;AAC/D,UAAI,KAAK,iBAAiB,MAAM;AAC9B,cAAM,IAAI,MAAM,sFAAsF;AAAA,MACxG;AACA,aAAO,MAAM,KAAK,aAAa,WAAW,SAAS,cAAc;AAAA,IACnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,cAAc,QAAQ;AACpB,UAAM,OAAO,KAAK;AAClB,UAAM,UAAU,KAAK;AACrB,QAAI,CAAC,KAAK,QAAS,MAAK,UAAU,CAAC;AAAA,MACjC,YAAY;AAAA,IACd,CAAC;AAGD,YAAQ,KAAK,MAAM;AACnB,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,kBAAkB,WAAW,eAAe,OAAO,OAAOC,SAAQ;AAChE,UAAM,OAAO,KAAK;AAClB,QAAI,CAAC,KAAK,YAAa,MAAK,cAAc,CAAC;AAI3C,QAAI;AACJ,YAAQ,eAAe;AAAA,MACrB,KAAKN,iBAAgB;AAAA,MACrB,KAAKA,iBAAgB;AACnB,wBAAgB;AAChB;AAAA,MACF,KAAKA,iBAAgB;AAAA,MACrB,KAAKA,iBAAgB;AACnB,wBAAgB;AAChB;AAAA,MACF;AACE,wBAAgB;AAAA,IACpB;AACA,QAAI,aAAa,UAAU,WAAW;AACtC,QAAIM,YAAWN,iBAAgB,cAAc;AAG3C,mBAAa,KAAK,KAAK,aAAa,CAAC,IAAI;AAAA,IAC3C;AACA,UAAM,aAAa,oBAAoB,QAAQ,UAAU;AACzD,UAAM,WAAW,IAAI,SAAS,IAAI,YAAY,UAAU,CAAC;AACzD,QAAI,SAAS;AACb,aAAS,IAAI,OAAO,IAAI,QAAQ,OAAO,KAAK;AAC1C,eAASE,KAAI,GAAGA,KAAI,UAAU,UAAUA,MAAK;AAC3C,YAAI;AACJ,YAAI,UAAU,WAAW,GAAG;AAG1B,kBAAQ,UAAU,MAAM,IAAI,UAAU,WAAWA,EAAC;AAAA,QACpD,OAAO;AACL,cAAIA,OAAM,EAAG,SAAQ,UAAU,KAAK,CAAC;AAAA,mBAAWA,OAAM,EAAG,SAAQ,UAAU,KAAK,CAAC;AAAA,mBAAWA,OAAM,EAAG,SAAQ,UAAU,KAAK,CAAC;AAAA,mBAAWA,OAAM,EAAG,SAAQ,UAAU,KAAK,CAAC;AACzK,cAAI,UAAU,eAAe,MAAM;AACjC,oBAAQ,UAAU,UAAU,OAAO,UAAU,KAAK;AAAA,UACpD;AAAA,QACF;AACA,YAAI,kBAAkBF,iBAAgB,OAAO;AAC3C,mBAAS,WAAW,QAAQ,OAAO,IAAI;AAAA,QACzC,WAAW,kBAAkBA,iBAAgB,KAAK;AAChD,mBAAS,SAAS,QAAQ,OAAO,IAAI;AAAA,QACvC,WAAW,kBAAkBA,iBAAgB,cAAc;AACzD,mBAAS,UAAU,QAAQ,OAAO,IAAI;AAAA,QACxC,WAAW,kBAAkBA,iBAAgB,OAAO;AAClD,mBAAS,SAAS,QAAQ,OAAO,IAAI;AAAA,QACvC,WAAW,kBAAkBA,iBAAgB,gBAAgB;AAC3D,mBAAS,UAAU,QAAQ,OAAO,IAAI;AAAA,QACxC,WAAW,kBAAkBA,iBAAgB,MAAM;AACjD,mBAAS,QAAQ,QAAQ,KAAK;AAAA,QAChC,WAAW,kBAAkBA,iBAAgB,eAAe;AAC1D,mBAAS,SAAS,QAAQ,KAAK;AAAA,QACjC;AACA,kBAAU;AAAA,MACZ;AACA,UAAI,SAAS,eAAe,GAAG;AAC7B,kBAAU,aAAa,SAAS;AAAA,MAClC;AAAA,IACF;AACA,UAAM,gBAAgB;AAAA,MACpB,QAAQ,KAAK,cAAc,SAAS,MAAM;AAAA,MAC1C,YAAY,KAAK;AAAA,MACjB;AAAA,IACF;AACA,QAAIM,YAAW,OAAW,eAAc,SAASA;AACjD,QAAIA,YAAWN,iBAAgB,cAAc;AAE3C,oBAAc,aAAa;AAAA,IAC7B;AACA,SAAK,cAAc;AACnB,SAAK,YAAY,KAAK,aAAa;AAGnC,UAAM,SAAS;AAAA,MACb,IAAI,KAAK,YAAY,SAAS;AAAA,MAC9B,YAAY;AAAA,IACd;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,uBAAuB,MAAM;AAC3B,UAAM,SAAS;AACf,UAAM,OAAO,OAAO;AACpB,QAAI,CAAC,KAAK,YAAa,MAAK,cAAc,CAAC;AAC3C,WAAO,IAAI,QAAQ,SAAU,SAAS;AACpC,YAAM,SAAS,IAAI,WAAW;AAC9B,aAAO,kBAAkB,IAAI;AAC7B,aAAO,YAAY,WAAY;AAC7B,cAAM,SAAS,qBAAqB,OAAO,MAAM;AACjD,cAAM,gBAAgB;AAAA,UACpB,QAAQ,OAAO,cAAc,MAAM;AAAA,UACnC,YAAY,OAAO;AAAA,UACnB,YAAY,OAAO;AAAA,QACrB;AACA,eAAO,cAAc,OAAO;AAC5B,gBAAQ,KAAK,YAAY,KAAK,aAAa,IAAI,CAAC;AAAA,MAClD;AAAA,IACF,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,gBAAgB,WAAW,UAAU,OAAO,OAAO;AACjD,UAAM,OAAO,KAAK;AAClB,UAAM,QAAQ;AAAA,MACZ,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,IAAI;AAAA,IACN;AACA,QAAI;AAGJ,QAAI,UAAU,MAAM,gBAAgB,cAAc;AAChD,sBAAgBA,iBAAgB;AAAA,IAClC,WAAW,UAAU,MAAM,gBAAgB,YAAY;AACrD,sBAAgBA,iBAAgB;AAAA,IAClC,WAAW,UAAU,MAAM,gBAAgB,aAAa;AACtD,sBAAgBA,iBAAgB;AAAA,IAClC,WAAW,UAAU,MAAM,gBAAgB,YAAY;AACrD,sBAAgBA,iBAAgB;AAAA,IAClC,WAAW,UAAU,MAAM,gBAAgB,aAAa;AACtD,sBAAgBA,iBAAgB;AAAA,IAClC,WAAW,UAAU,MAAM,gBAAgB,WAAW;AACpD,sBAAgBA,iBAAgB;AAAA,IAClC,WAAW,UAAU,MAAM,gBAAgB,YAAY;AACrD,sBAAgBA,iBAAgB;AAAA,IAClC,OAAO;AACL,YAAM,IAAI,MAAM,qEAAqE,UAAU,MAAM,YAAY,IAAI;AAAA,IACvH;AACA,QAAI,UAAU,OAAW,SAAQ;AACjC,QAAI,UAAU,UAAa,UAAU,SAAU,SAAQ,UAAU;AAGjE,QAAI,UAAU,EAAG,QAAO;AACxB,UAAM,SAAS,UAAU,WAAW,OAAO,KAAK;AAChD,QAAI;AAIJ,QAAI,aAAa,QAAW;AAC1B,yBAAmB,cAAc,SAAS,QAAQA,iBAAgB,uBAAuBA,iBAAgB;AAAA,IAC3G;AACA,UAAM,aAAa,KAAK,kBAAkB,WAAW,eAAe,OAAO,OAAO,gBAAgB;AAClG,UAAM,cAAc;AAAA,MAClB,YAAY,WAAW;AAAA,MACvB,YAAY,WAAW;AAAA,MACvB;AAAA,MACA;AAAA,MACA,KAAK,OAAO;AAAA,MACZ,KAAK,OAAO;AAAA,MACZ,MAAM,MAAM,UAAU,QAAQ;AAAA,IAChC;AACA,QAAI,UAAU,eAAe,KAAM,aAAY,aAAa;AAC5D,QAAI,CAAC,KAAK,UAAW,MAAK,YAAY,CAAC;AACvC,WAAO,KAAK,UAAU,KAAK,WAAW,IAAI;AAAA,EAC5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,aAAa,OAAO,QAAQ,OAAO,WAAW,aAAa;AACzD,QAAI,UAAU,MAAM;AAClB,YAAM,SAAS;AACf,YAAMI,SAAQ,OAAO;AACrB,YAAM,OAAO,OAAO;AACpB,YAAM,UAAU,OAAO;AACvB,YAAM,UAAU,OAAO;AACvB,UAAI,CAACA,OAAM,OAAO,IAAI,KAAK,EAAG,CAAAA,OAAM,OAAO,IAAI,OAAO,CAAC,CAAC;AACxD,YAAM,eAAeA,OAAM,OAAO,IAAI,KAAK;AAC3C,YAAM,MAAM,WAAW,YAAY,MAAM,SAAS;AAClD,UAAI,aAAa,GAAG,MAAM,OAAW,QAAO,aAAa,GAAG;AAC5D,UAAI,CAAC,KAAK,OAAQ,MAAK,SAAS,CAAC;AACjC,YAAM,WAAW;AAAA,QACf;AAAA,MACF;AACA,YAAM,SAAS,UAAU;AACzB,aAAO,QAAQ,KAAK,IAAI,MAAM,OAAO,QAAQ,cAAc;AAC3D,aAAO,SAAS,KAAK,IAAI,MAAM,QAAQ,QAAQ,cAAc;AAC7D,YAAM,MAAM,OAAO,WAAW,MAAM;AAAA,QAClC,oBAAoB;AAAA,MACtB,CAAC;AACD,UAAI,UAAU,MAAM;AAClB,YAAI,UAAU,GAAG,OAAO,MAAM;AAC9B,YAAI,MAAM,GAAG,EAAE;AAAA,MACjB;AACA,UAAI,MAAM,SAAS,QAAW;AAG5B,YAAI,WAAW,YAAY;AACzB,kBAAQ,MAAM,+CAA+C,MAAM;AAAA,QACrE;AACA,YAAI,MAAM,QAAQ,QAAQ,kBAAkB,MAAM,SAAS,QAAQ,gBAAgB;AACjF,kBAAQ,KAAK,0DAA0D,KAAK;AAAA,QAC9E;AACA,cAAM,OAAO,IAAI,kBAAkB,MAAM,SAAS,MAAM,QAAQ,CAAC;AACjE,iBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK,GAAG;AACvC,eAAK,IAAI,CAAC,IAAI,MAAM,KAAK,IAAI,CAAC;AAC9B,eAAK,IAAI,CAAC,IAAI,MAAM,KAAK,IAAI,CAAC;AAC9B,eAAK,IAAI,CAAC,IAAI,MAAM,KAAK,IAAI,CAAC;AAC9B,eAAK,IAAI,CAAC,IAAI,MAAM,KAAK,IAAI,CAAC;AAAA,QAChC;AACA,YAAI,aAAa,IAAI,UAAU,MAAM,MAAM,OAAO,MAAM,MAAM,GAAG,GAAG,CAAC;AAAA,MACvE,OAAO;AACL,YAAI,OAAO,qBAAqB,eAAe,iBAAiB,oBAAoB,OAAO,sBAAsB,eAAe,iBAAiB,qBAAqB,OAAO,gBAAgB,eAAe,iBAAiB,eAAe,OAAO,oBAAoB,eAAe,iBAAiB,iBAAiB;AACtT,cAAI,UAAU,OAAO,GAAG,GAAG,OAAO,OAAO,OAAO,MAAM;AAAA,QACxD,OAAO;AACL,gBAAM,IAAI,MAAM,kHAAkH;AAAA,QACpI;AAAA,MACF;AACA,UAAI,QAAQ,WAAW,MAAM;AAC3B,gBAAQ,KAAK,iBAAiB,QAAQ,QAAQ,EAAE,KAAK,UAAQ,OAAO,uBAAuB,IAAI,CAAC,EAAE,KAAK,qBAAmB;AACxH,mBAAS,aAAa;AAAA,QACxB,CAAC,CAAC;AAAA,MACJ,OAAO;AACL,iBAAS,MAAM,WAAW,WAAW,QAAQ,QAAQ;AAAA,MACvD;AACA,YAAM,QAAQ,KAAK,OAAO,KAAK,QAAQ,IAAI;AAC3C,mBAAa,GAAG,IAAI;AACpB,aAAO;AAAA,IACT,OAAO;AACL,YAAM,IAAI,MAAM,2EAA2E;AAAA,IAC7F;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,eAAe,KAAK;AAClB,UAAM,OAAO,KAAK;AAClB,QAAI,CAAC,KAAK,SAAU,MAAK,WAAW,CAAC;AACrC,UAAM,aAAa;AAAA,MACjB,WAAW,eAAe,IAAI,SAAS;AAAA,MACvC,WAAW,eAAe,IAAI,SAAS;AAAA,MACvC,OAAO,eAAe,IAAI,KAAK;AAAA,MAC/B,OAAO,eAAe,IAAI,KAAK;AAAA,IACjC;AACA,WAAO,KAAK,SAAS,KAAK,UAAU,IAAI;AAAA,EAC1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOM,oBAAoB,KAAK;AAAA;AAC7B,YAAM,SAAS;AACf,YAAM,UAAU,OAAO;AACvB,YAAMA,SAAQ,KAAK;AACnB,YAAM,OAAO,KAAK;AAClB,UAAIA,OAAM,SAAS,IAAI,GAAG,EAAG,QAAOA,OAAM,SAAS,IAAI,GAAG;AAC1D,UAAI,CAAC,KAAK,SAAU,MAAK,WAAW,CAAC;AAGrC,UAAI,eAAe,mBAAmB;AACpC,cAAM,MAAM,KAAK,uBAAuB,KAAK,QAAQ,cAAc;AAAA,MACrE;AACA,UAAI,WAAW,IAAI,SAAS;AAC5B,UAAI,aAAa,aAAc,YAAW;AAC1C,YAAM,aAAa;AAAA,QACjB,SAAS,KAAK,eAAe,GAAG;AAAA,QAChC,QAAQ,KAAK,aAAa,IAAI,OAAO,IAAI,QAAQ,IAAI,OAAO,QAAQ;AAAA,MACtE;AACA,UAAI,IAAI,KAAM,YAAW,OAAO,IAAI;AACpC,YAAM,KAAK,gBAAgB,SAAgB,KAAK;AAAA;AAC9C,cAAI,iBAAiB,MAAM,IAAI,aAAa,KAAK,UAAU;AAAA,QAC7D;AAAA,OAAC;AACD,YAAM,QAAQ,KAAK,SAAS,KAAK,UAAU,IAAI;AAC/C,MAAAA,OAAM,SAAS,IAAI,KAAK,KAAK;AAC7B,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOM,qBAAqB,UAAU;AAAA;AACnC,YAAMA,SAAQ,KAAK;AACnB,YAAM,OAAO,KAAK;AAClB,UAAIA,OAAM,UAAU,IAAI,QAAQ,EAAG,QAAOA,OAAM,UAAU,IAAI,QAAQ;AACtE,UAAI,SAAS,kBAAkB;AAC7B,gBAAQ,KAAK,mDAAmD;AAChE,eAAO;AAAA,MACT;AACA,UAAI,CAAC,KAAK,UAAW,MAAK,YAAY,CAAC;AAGvC,YAAM,cAAc;AAAA,QAClB,sBAAsB,CAAC;AAAA,MACzB;AACA,UAAI,SAAS,2BAA2B,QAAQ,SAAS,wBAAwB,MAAM;AACrF,gBAAQ,KAAK,+EAA+E;AAAA,MAC9F;AAGA,YAAM,QAAQ,SAAS,MAAM,QAAQ,EAAE,OAAO,CAAC,SAAS,OAAO,CAAC;AAChE,UAAI,CAAC,WAAW,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG;AACpC,oBAAY,qBAAqB,kBAAkB;AAAA,MACrD;AACA,UAAI,SAAS,wBAAwB;AACnC,oBAAY,qBAAqB,iBAAiB,SAAS;AAC3D,oBAAY,qBAAqB,kBAAkB,SAAS;AAAA,MAC9D,OAAO;AACL,oBAAY,qBAAqB,iBAAiB;AAClD,oBAAY,qBAAqB,kBAAkB;AAAA,MACrD;AAGA,UAAI,SAAS,gBAAgB,SAAS,cAAc;AAClD,cAAM,oBAAoB,MAAM,KAAK,4BAA4B,SAAS,cAAc,SAAS,YAAY;AAC7G,cAAM,mBAAmB;AAAA,UACvB,OAAO,MAAM,KAAK,oBAAoB,iBAAiB;AAAA,UACvD,UAAU,kBAAkB;AAAA,QAC9B;AACA,aAAK,sBAAsB,kBAAkB,iBAAiB;AAC9D,oBAAY,qBAAqB,2BAA2B;AAAA,MAC9D;AAGA,UAAI,SAAS,KAAK;AAChB,cAAM,kBAAkB;AAAA,UACtB,OAAO,MAAM,KAAK,oBAAoB,SAAS,GAAG;AAAA,UAClD,UAAU,SAAS,IAAI;AAAA,QACzB;AACA,aAAK,sBAAsB,iBAAiB,SAAS,GAAG;AACxD,oBAAY,qBAAqB,mBAAmB;AAAA,MACtD;AACA,UAAI,SAAS,UAAU;AACrB,cAAM,WAAW,SAAS;AAC1B,cAAM,uBAAuB,KAAK,IAAI,SAAS,GAAG,SAAS,GAAG,SAAS,CAAC;AACxE,YAAI,uBAAuB,GAAG;AAC5B,sBAAY,iBAAiB,SAAS,SAAS,QAAQ;AAAA,QACzD;AAGA,YAAI,SAAS,aAAa;AACxB,gBAAM,iBAAiB;AAAA,YACrB,OAAO,MAAM,KAAK,oBAAoB,SAAS,WAAW;AAAA,YAC1D,UAAU,SAAS,YAAY;AAAA,UACjC;AACA,eAAK,sBAAsB,gBAAgB,SAAS,WAAW;AAC/D,sBAAY,kBAAkB;AAAA,QAChC;AAAA,MACF;AAGA,UAAI,SAAS,WAAW;AACtB,cAAM,eAAe;AAAA,UACnB,OAAO,MAAM,KAAK,oBAAoB,SAAS,SAAS;AAAA,UACxD,UAAU,SAAS,UAAU;AAAA,QAC/B;AACA,YAAI,SAAS,eAAe,SAAS,YAAY,MAAM,GAAG;AAGxD,uBAAa,QAAQ,SAAS,YAAY;AAAA,QAC5C;AACA,aAAK,sBAAsB,cAAc,SAAS,SAAS;AAC3D,oBAAY,gBAAgB;AAAA,MAC9B;AAGA,UAAI,SAAS,OAAO;AAClB,cAAM,kBAAkB;AAAA,UACtB,OAAO,MAAM,KAAK,oBAAoB,SAAS,KAAK;AAAA,UACpD,UAAU,SAAS,MAAM;AAAA,QAC3B;AACA,YAAI,SAAS,mBAAmB,GAAK;AACnC,0BAAgB,WAAW,SAAS;AAAA,QACtC;AACA,aAAK,sBAAsB,iBAAiB,SAAS,KAAK;AAC1D,oBAAY,mBAAmB;AAAA,MACjC;AAGA,UAAI,SAAS,aAAa;AACxB,oBAAY,YAAY;AAAA,MAC1B,OAAO;AACL,YAAI,SAAS,YAAY,GAAK;AAC5B,sBAAY,YAAY;AACxB,sBAAY,cAAc,SAAS;AAAA,QACrC;AAAA,MACF;AAGA,UAAI,SAAS,SAAS,WAAY,aAAY,cAAc;AAC5D,UAAI,SAAS,SAAS,GAAI,aAAY,OAAO,SAAS;AACtD,WAAK,kBAAkB,UAAU,WAAW;AAC5C,YAAM,KAAK,gBAAgB,SAAgB,KAAK;AAAA;AAC9C,cAAI,uBAAuB,MAAM,IAAI,mBAAmB,UAAU,WAAW;AAAA,QAC/E;AAAA,OAAC;AACD,YAAM,QAAQ,KAAK,UAAU,KAAK,WAAW,IAAI;AACjD,MAAAA,OAAM,UAAU,IAAI,UAAU,KAAK;AACnC,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOM,iBAAiB,MAAM;AAAA;AAC3B,YAAMA,SAAQ,KAAK;AACnB,YAAM,OAAO,KAAK;AAClB,YAAM,oBAAoB,CAAC,KAAK,SAAS,IAAI;AAC7C,UAAI,MAAM,QAAQ,KAAK,QAAQ,GAAG;AAChC,iBAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,IAAI,GAAG,KAAK;AACpD,4BAAkB,KAAK,KAAK,SAAS,CAAC,EAAE,IAAI;AAAA,QAC9C;AAAA,MACF,OAAO;AACL,0BAAkB,KAAK,KAAK,SAAS,IAAI;AAAA,MAC3C;AACA,YAAM,eAAe,kBAAkB,KAAK,GAAG;AAC/C,UAAIA,OAAM,OAAO,IAAI,YAAY,EAAG,QAAOA,OAAM,OAAO,IAAI,YAAY;AACxE,YAAM,WAAW,KAAK;AACtB,UAAI;AAGJ,UAAI,KAAK,gBAAgB;AACvB,eAAOJ,iBAAgB;AAAA,MACzB,WAAW,KAAK,YAAY;AAC1B,eAAOA,iBAAgB;AAAA,MACzB,WAAW,KAAK,QAAQ;AACtB,eAAOA,iBAAgB;AAAA,MACzB,WAAW,KAAK,UAAU;AACxB,eAAOA,iBAAgB;AAAA,MACzB,OAAO;AACL,eAAO,KAAK,SAAS,YAAYA,iBAAgB,QAAQA,iBAAgB;AAAA,MAC3E;AACA,YAAM,UAAU,CAAC;AACjB,YAAMO,cAAa,CAAC;AACpB,YAAM,aAAa,CAAC;AACpB,YAAM,UAAU,CAAC;AAGjB,YAAM,iBAAiB;AAAA,QACrB,IAAI;AAAA,QACJ,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,OAAO;AAAA,QACP,YAAY;AAAA,QACZ,WAAW;AAAA,MACb;AACA,YAAM,iBAAiB,SAAS,aAAa,QAAQ;AACrD,UAAI,mBAAmB,UAAa,CAAC,KAAK,4BAA4B,cAAc,GAAG;AACrF,gBAAQ,KAAK,uFAAuF;AACpG,iBAAS,aAAa,UAAU,KAAK,gCAAgC,cAAc,CAAC;AAAA,MACtF;AAIA,UAAI,oBAAoB;AACxB,eAAS,iBAAiB,SAAS,YAAY;AAE7C,YAAI,cAAc,MAAM,GAAG,CAAC,MAAM,QAAS;AAC3C,cAAM,YAAY,SAAS,WAAW,aAAa;AACnD,wBAAgB,eAAe,aAAa,KAAK,cAAc,YAAY;AAI3E,cAAM,wBAAwB;AAC9B,YAAI,CAAC,sBAAsB,KAAK,aAAa,EAAG,iBAAgB,MAAM;AACtE,YAAIH,OAAM,WAAW,IAAI,KAAK,OAAO,SAAS,CAAC,GAAG;AAChD,UAAAG,YAAW,aAAa,IAAIH,OAAM,WAAW,IAAI,KAAK,OAAO,SAAS,CAAC;AACvE;AAAA,QACF;AAKA,4BAAoB;AACpB,cAAM,QAAQ,UAAU;AACxB,YAAI,kBAAkB,cAAc,EAAE,iBAAiB,gBAAgB,EAAE,iBAAiB,aAAa;AACrG,kBAAQ,KAAK,uEAAuE;AACpF,8BAAoB,IAAI,gBAAgB,IAAI,YAAY,KAAK,GAAG,UAAU,UAAU,UAAU,UAAU;AAAA,QAC1G,YAAY,iBAAiB,eAAe,iBAAiB,eAAe,CAAC,cAAc,WAAW,GAAG,GAAG;AAC1G,kBAAQ,KAAK,4BAA4B,aAAa,4BAA4B;AAClF,8BAAoB,aAAa,MAAM,yBAAyB,SAAS;AAAA,QAC3E;AACA,cAAM,WAAW,KAAK,gBAAgB,qBAAqB,WAAW,QAAQ;AAC9E,YAAI,aAAa,MAAM;AACrB,cAAI,CAAC,cAAc,WAAW,GAAG,GAAG;AAClC,iBAAK,uBAAuB,eAAe,SAAS;AAAA,UACtD;AACA,UAAAG,YAAW,aAAa,IAAI;AAC5B,UAAAH,OAAM,WAAW,IAAI,KAAK,OAAO,SAAS,GAAG,QAAQ;AAAA,QACvD;AAAA,MACF;AACA,UAAI,mBAAmB,OAAW,UAAS,aAAa,UAAU,cAAc;AAGhF,UAAI,OAAO,KAAKG,WAAU,EAAE,WAAW,EAAG,QAAO;AAGjD,UAAI,KAAK,0BAA0B,UAAa,KAAK,sBAAsB,SAAS,GAAG;AACrF,cAAM,UAAU,CAAC;AACjB,cAAM,cAAc,CAAC;AACrB,cAAM,oBAAoB,CAAC;AAC3B,YAAI,KAAK,0BAA0B,QAAW;AAC5C,qBAAW,OAAO,KAAK,uBAAuB;AAC5C,8BAAkB,KAAK,sBAAsB,GAAG,CAAC,IAAI;AAAA,UACvD;AAAA,QACF;AACA,iBAAS,IAAI,GAAG,IAAI,KAAK,sBAAsB,QAAQ,EAAE,GAAG;AAC1D,gBAAMD,UAAS,CAAC;AAChB,cAAI,SAAS;AACb,qBAAW,iBAAiB,SAAS,iBAAiB;AAIpD,gBAAI,kBAAkB,cAAc,kBAAkB,UAAU;AAC9D,kBAAI,CAAC,QAAQ;AACX,wBAAQ,KAAK,6DAA6D;AAC1E,yBAAS;AAAA,cACX;AACA;AAAA,YACF;AACA,kBAAM,YAAY,SAAS,gBAAgB,aAAa,EAAE,CAAC;AAC3D,kBAAM,oBAAoB,cAAc,YAAY;AAOpD,kBAAM,gBAAgB,SAAS,WAAW,aAAa;AACvD,gBAAIF,OAAM,WAAW,IAAI,KAAK,OAAO,WAAW,IAAI,CAAC,GAAG;AACtD,cAAAE,QAAO,iBAAiB,IAAIF,OAAM,WAAW,IAAI,KAAK,OAAO,WAAW,IAAI,CAAC;AAC7E;AAAA,YACF;AAGA,kBAAM,oBAAoB,UAAU,MAAM;AAC1C,gBAAI,CAAC,SAAS,sBAAsB;AAClC,uBAAS,IAAI,GAAG,KAAK,UAAU,OAAO,IAAI,IAAI,KAAK;AACjD,yBAASF,KAAI,GAAGA,KAAI,UAAU,UAAUA,MAAK;AAC3C,sBAAIA,OAAM,EAAG,mBAAkB,KAAK,GAAG,UAAU,KAAK,CAAC,IAAI,cAAc,KAAK,CAAC,CAAC;AAChF,sBAAIA,OAAM,EAAG,mBAAkB,KAAK,GAAG,UAAU,KAAK,CAAC,IAAI,cAAc,KAAK,CAAC,CAAC;AAChF,sBAAIA,OAAM,EAAG,mBAAkB,KAAK,GAAG,UAAU,KAAK,CAAC,IAAI,cAAc,KAAK,CAAC,CAAC;AAChF,sBAAIA,OAAM,EAAG,mBAAkB,KAAK,GAAG,UAAU,KAAK,CAAC,IAAI,cAAc,KAAK,CAAC,CAAC;AAAA,gBAClF;AAAA,cACF;AAAA,YACF;AACA,YAAAI,QAAO,iBAAiB,IAAI,KAAK,gBAAgB,mBAAmB,QAAQ;AAC5E,YAAAF,OAAM,WAAW,IAAI,KAAK,OAAO,eAAe,IAAI,GAAGE,QAAO,iBAAiB,CAAC;AAAA,UAClF;AACA,kBAAQ,KAAKA,OAAM;AACnB,kBAAQ,KAAK,KAAK,sBAAsB,CAAC,CAAC;AAC1C,cAAI,KAAK,0BAA0B,OAAW,aAAY,KAAK,kBAAkB,CAAC,CAAC;AAAA,QACrF;AACA,gBAAQ,UAAU;AAClB,YAAI,YAAY,SAAS,GAAG;AAC1B,kBAAQ,SAAS,CAAC;AAClB,kBAAQ,OAAO,cAAc;AAAA,QAC/B;AAAA,MACF;AACA,YAAM,kBAAkB,MAAM,QAAQ,KAAK,QAAQ;AACnD,UAAI,mBAAmB,SAAS,OAAO,WAAW,EAAG,QAAO;AAC5D,UAAI,kBAAkB;AACtB,UAAI,mBAAmB,SAAS,UAAU,MAAM;AAC9C,cAAM,UAAU,CAAC;AACjB,iBAAS,IAAI,GAAG,KAAK,SAAS,WAAW,SAAS,OAAO,IAAI,IAAI,KAAK;AACpE,kBAAQ,CAAC,IAAI;AAAA,QACf;AACA,iBAAS,SAAS,OAAO;AACzB,0BAAkB;AAAA,MACpB;AACA,YAAM,YAAY,kBAAkB,KAAK,WAAW,CAAC,KAAK,QAAQ;AAClE,YAAM,SAAS,kBAAkB,SAAS,SAAS,CAAC;AAAA,QAClD,eAAe;AAAA,QACf,OAAO;AAAA,QACP,OAAO;AAAA,MACT,CAAC;AACD,eAAS,IAAI,GAAG,KAAK,OAAO,QAAQ,IAAI,IAAI,KAAK;AAC/C,cAAM,YAAY;AAAA,UAChB;AAAA,UACA,YAAYC;AAAA,QACd;AACA,aAAK,kBAAkB,UAAU,SAAS;AAC1C,YAAI,QAAQ,SAAS,EAAG,WAAU,UAAU;AAC5C,YAAI,SAAS,UAAU,MAAM;AAC3B,cAAI,WAAW,KAAK,OAAO,SAAS,KAAK;AACzC,cAAI,OAAO,CAAC,EAAE,UAAU,UAAa,OAAO,CAAC,EAAE,UAAU,QAAW;AAClE,wBAAY,MAAM,OAAO,CAAC,EAAE,QAAQ,MAAM,OAAO,CAAC,EAAE;AAAA,UACtD;AACA,cAAIH,OAAM,WAAW,IAAI,QAAQ,GAAG;AAClC,sBAAU,UAAUA,OAAM,WAAW,IAAI,QAAQ;AAAA,UACnD,OAAO;AACL,sBAAU,UAAU,KAAK,gBAAgB,SAAS,OAAO,UAAU,OAAO,CAAC,EAAE,OAAO,OAAO,CAAC,EAAE,KAAK;AACnG,YAAAA,OAAM,WAAW,IAAI,UAAU,UAAU,OAAO;AAAA,UAClD;AACA,cAAI,UAAU,YAAY,KAAM,QAAO,UAAU;AAAA,QACnD;AACA,cAAM,WAAW,MAAM,KAAK,qBAAqB,UAAU,OAAO,CAAC,EAAE,aAAa,CAAC;AACnF,YAAI,aAAa,KAAM,WAAU,WAAW;AAC5C,mBAAW,KAAK,SAAS;AAAA,MAC3B;AACA,UAAI,oBAAoB,MAAM;AAC5B,iBAAS,SAAS,IAAI;AAAA,MACxB;AACA,cAAQ,aAAa;AACrB,UAAI,CAAC,KAAK,OAAQ,MAAK,SAAS,CAAC;AACjC,YAAM,KAAK,gBAAgB,SAAU,KAAK;AACxC,YAAI,aAAa,IAAI,UAAU,MAAM,OAAO;AAAA,MAC9C,CAAC;AACD,YAAM,QAAQ,KAAK,OAAO,KAAK,OAAO,IAAI;AAC1C,MAAAA,OAAM,OAAO,IAAI,cAAc,KAAK;AACpC,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaA,uBAAuB,eAAe,WAAW;AAC/C,QAAI,KAAK,eAAe,qBAAqB,EAAG;AAChD,QAAI,WAAW;AACf,YAAQ,UAAU,MAAM,aAAa;AAAA,MACnC,KAAK;AACH,mBAAW;AACX;AAAA,MACF,KAAK;AACH,mBAAW;AACX;AAAA,MACF,KAAK;AACH,mBAAW;AACX;AAAA,MACF,KAAK;AACH,mBAAW;AACX;AAAA,MACF;AACE;AAAA,IACJ;AACA,QAAI,UAAU,WAAY,aAAY;AACtC,UAAM,iBAAiB,cAAc,MAAM,KAAK,CAAC,EAAE,CAAC;AACpD,QAAI,qCAAqC,cAAc,KAAK,qCAAqC,cAAc,EAAE,SAAS,QAAQ,GAAG;AACnI,WAAK,eAAe,qBAAqB,IAAI;AAC7C,WAAK,mBAAmB,qBAAqB,IAAI;AAAA,IACnD;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,cAAcI,SAAQ;AACpB,UAAM,OAAO,KAAK;AAClB,QAAI,CAAC,KAAK,QAAS,MAAK,UAAU,CAAC;AACnC,UAAM,UAAUA,QAAO;AACvB,UAAM,YAAY;AAAA,MAChB,MAAM,UAAU,iBAAiB;AAAA,IACnC;AACA,QAAI,SAAS;AACX,gBAAU,eAAe;AAAA,QACvB,MAAMA,QAAO,QAAQ;AAAA,QACrB,MAAMA,QAAO,MAAM;AAAA,QACnB,MAAMA,QAAO,OAAO,IAAI,OAAQA,QAAO;AAAA,QACvC,OAAOA,QAAO,OAAO,IAAI,IAAIA,QAAO;AAAA,MACtC;AAAA,IACF,OAAO;AACL,gBAAU,cAAc;AAAA,QACtB,aAAaA,QAAO;AAAA,QACpB,MAAM,UAAU,SAASA,QAAO,GAAG;AAAA,QACnC,MAAMA,QAAO,OAAO,IAAI,OAAQA,QAAO;AAAA,QACvC,OAAOA,QAAO,OAAO,IAAI,IAAIA,QAAO;AAAA,MACtC;AAAA,IACF;AAGA,QAAIA,QAAO,SAAS,GAAI,WAAU,OAAOA,QAAO;AAChD,WAAO,KAAK,QAAQ,KAAK,SAAS,IAAI;AAAA,EACxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYA,iBAAiB,MAAM,MAAM;AAC3B,UAAM,OAAO,KAAK;AAClB,UAAM,UAAU,KAAK;AACrB,QAAI,CAAC,KAAK,WAAY,MAAK,aAAa,CAAC;AACzC,WAAO,aAAa,MAAM,uBAAuB,KAAK,MAAM,GAAG,IAAI;AACnE,UAAM,SAAS,KAAK;AACpB,UAAM,WAAW,CAAC;AAClB,UAAM,WAAW,CAAC;AAClB,aAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,EAAE,GAAG;AACtC,YAAM,QAAQ,OAAO,CAAC;AACtB,YAAM,eAAe,gBAAgB,eAAe,MAAM,IAAI;AAC9D,UAAI,YAAY,gBAAgB,SAAS,MAAM,aAAa,QAAQ;AACpE,YAAM,gBAAgBP,iBAAgB,aAAa,YAAY;AAC/D,UAAI,aAAa,eAAe,SAAS;AACvC,YAAI,UAAU,kBAAkB,MAAM;AACpC,sBAAY,UAAU,SAAS,cAAc,aAAa,WAAW;AAAA,QACvE,OAAO;AACL,sBAAY;AAAA,QACd;AAAA,MACF;AACA,UAAI,CAAC,aAAa,CAAC,eAAe;AAChC,gBAAQ,KAAK,8DAA8D,MAAM,IAAI;AACrF;AAAA,MACF;AACA,YAAM,gBAAgB;AACtB,UAAI,iBAAiB,MAAM,OAAO,SAAS,MAAM,MAAM;AACvD,UAAI,kBAAkBA,iBAAgB,uBAAuB;AAC3D,0BAAkB,UAAU,sBAAsB;AAAA,MACpD;AACA,UAAI;AAOJ,UAAI,MAAM,kBAAkB,8CAA8C,MAAM;AAC9E,wBAAgB;AAKhB,0BAAkB;AAAA,MACpB,WAAW,MAAM,iBAAiB,MAAM,qBAAqB;AAC3D,wBAAgB;AAAA,MAClB,OAAO;AACL,wBAAgB;AAAA,MAClB;AACA,eAAS,KAAK;AAAA,QACZ,OAAO,KAAK,gBAAgB,IAAI,gBAAgB,MAAM,OAAO,aAAa,CAAC;AAAA,QAC3E,QAAQ,KAAK,gBAAgB,IAAI,gBAAgB,MAAM,QAAQ,cAAc,CAAC;AAAA,QAC9E;AAAA,MACF,CAAC;AACD,eAAS,KAAK;AAAA,QACZ,SAAS,SAAS,SAAS;AAAA,QAC3B,QAAQ;AAAA,UACN,MAAM,QAAQ,IAAI,SAAS;AAAA,UAC3B,MAAM;AAAA,QACR;AAAA,MACF,CAAC;AAAA,IACH;AACA,SAAK,WAAW,KAAK;AAAA,MACnB,MAAM,KAAK,QAAQ,UAAU,KAAK,WAAW;AAAA,MAC7C;AAAA,MACA;AAAA,IACF,CAAC;AACD,WAAO,KAAK,WAAW,SAAS;AAAA,EAClC;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,YAAY,QAAQ;AAClB,UAAM,OAAO,KAAK;AAClB,UAAM,UAAU,KAAK;AACrB,UAAM,OAAO,KAAK,MAAM,QAAQ,IAAI,MAAM,CAAC;AAC3C,UAAM,WAAW,OAAO;AACxB,QAAI,aAAa,OAAW,QAAO;AACnC,UAAM,YAAY,OAAO,SAAS,MAAM,CAAC;AACzC,QAAI,cAAc,OAAW,QAAO;AACpC,UAAM,SAAS,CAAC;AAChB,UAAM,sBAAsB,IAAI,aAAa,SAAS,MAAM,SAAS,EAAE;AACvE,UAAM,uBAAuB,IAAI,QAAQ;AACzC,aAAS,IAAI,GAAG,IAAI,SAAS,MAAM,QAAQ,EAAE,GAAG;AAC9C,aAAO,KAAK,QAAQ,IAAI,SAAS,MAAM,CAAC,CAAC,CAAC;AAC1C,2BAAqB,KAAK,SAAS,aAAa,CAAC,CAAC;AAClD,2BAAqB,SAAS,OAAO,UAAU,EAAE,QAAQ,qBAAqB,IAAI,EAAE;AAAA,IACtF;AACA,QAAI,KAAK,UAAU,OAAW,MAAK,QAAQ,CAAC;AAC5C,SAAK,MAAM,KAAK;AAAA,MACd,qBAAqB,KAAK,gBAAgB,IAAI,gBAAgB,qBAAqB,EAAE,CAAC;AAAA,MACtF;AAAA,MACA,UAAU,QAAQ,IAAI,SAAS;AAAA,IACjC,CAAC;AACD,UAAM,YAAY,KAAK,OAAO,KAAK,MAAM,SAAS;AAClD,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOM,iBAAiB,QAAQ;AAAA;AAC7B,YAAM,OAAO,KAAK;AAClB,YAAM,UAAU,KAAK;AACrB,YAAM,UAAU,KAAK;AACrB,UAAI,CAAC,KAAK,MAAO,MAAK,QAAQ,CAAC;AAC/B,YAAM,UAAU,CAAC;AACjB,UAAI,QAAQ,KAAK;AACf,cAAM,WAAW,OAAO,WAAW,QAAQ;AAC3C,cAAM,WAAW,OAAO,SAAS,QAAQ;AACzC,cAAM,QAAQ,OAAO,MAAM,QAAQ;AACnC,YAAI,CAAC,WAAW,UAAU,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG;AACvC,kBAAQ,WAAW;AAAA,QACrB;AACA,YAAI,CAAC,WAAW,UAAU,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG;AACpC,kBAAQ,cAAc;AAAA,QACxB;AACA,YAAI,CAAC,WAAW,OAAO,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG;AACjC,kBAAQ,QAAQ;AAAA,QAClB;AAAA,MACF,OAAO;AACL,YAAI,OAAO,kBAAkB;AAC3B,iBAAO,aAAa;AAAA,QACtB;AACA,YAAI,iBAAiB,OAAO,MAAM,MAAM,OAAO;AAC7C,kBAAQ,SAAS,OAAO,OAAO;AAAA,QACjC;AAAA,MACF;AAGA,UAAI,OAAO,SAAS,GAAI,SAAQ,OAAO,OAAO,OAAO,IAAI;AACzD,WAAK,kBAAkB,QAAQ,OAAO;AACtC,UAAI,OAAO,UAAU,OAAO,UAAU,OAAO,UAAU;AACrD,cAAM,YAAY,MAAM,KAAK,iBAAiB,MAAM;AACpD,YAAI,cAAc,KAAM,SAAQ,OAAO;AAAA,MACzC,WAAW,OAAO,UAAU;AAC1B,gBAAQ,SAAS,KAAK,cAAc,MAAM;AAAA,MAC5C;AACA,UAAI,OAAO,cAAe,MAAK,MAAM,KAAK,MAAM;AAChD,YAAM,YAAY,KAAK,MAAM,KAAK,OAAO,IAAI;AAC7C,cAAQ,IAAI,QAAQ,SAAS;AAC7B,UAAI,OAAO,SAAS,SAAS,GAAG;AAC9B,cAAM,WAAW,CAAC;AAClB,iBAAS,IAAI,GAAG,IAAI,OAAO,SAAS,QAAQ,IAAI,GAAG,KAAK;AACtD,gBAAM,QAAQ,OAAO,SAAS,CAAC;AAC/B,cAAI,MAAM,WAAW,QAAQ,gBAAgB,OAAO;AAClD,kBAAM,iBAAiB,MAAM,KAAK,iBAAiB,KAAK;AACxD,gBAAI,mBAAmB,KAAM,UAAS,KAAK,cAAc;AAAA,UAC3D;AAAA,QACF;AACA,YAAI,SAAS,SAAS,EAAG,SAAQ,WAAW;AAAA,MAC9C;AACA,YAAM,KAAK,gBAAgB,SAAU,KAAK;AACxC,YAAI,aAAa,IAAI,UAAU,QAAQ,OAAO;AAAA,MAChD,CAAC;AACD,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMM,kBAAkB,OAAO;AAAA;AAC7B,YAAM,OAAO,KAAK;AAClB,YAAM,UAAU,KAAK;AACrB,UAAI,CAAC,KAAK,QAAQ;AAChB,aAAK,SAAS,CAAC;AACf,aAAK,QAAQ;AAAA,MACf;AACA,YAAM,WAAW,CAAC;AAClB,UAAI,MAAM,SAAS,GAAI,UAAS,OAAO,MAAM;AAC7C,WAAK,OAAO,KAAK,QAAQ;AACzB,YAAM,QAAQ,CAAC;AACf,eAAS,IAAI,GAAG,IAAI,MAAM,SAAS,QAAQ,IAAI,GAAG,KAAK;AACrD,cAAM,QAAQ,MAAM,SAAS,CAAC;AAC9B,YAAI,MAAM,WAAW,QAAQ,gBAAgB,OAAO;AAClD,gBAAM,YAAY,MAAM,KAAK,iBAAiB,KAAK;AACnD,cAAI,cAAc,KAAM,OAAM,KAAK,SAAS;AAAA,QAC9C;AAAA,MACF;AACA,UAAI,MAAM,SAAS,EAAG,UAAS,QAAQ;AACvC,WAAK,kBAAkB,OAAO,QAAQ;AAAA,IACxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMM,oBAAoB,SAAS;AAAA;AACjC,YAAM,QAAQ,IAAI,MAAM;AACxB,YAAM,OAAO;AACb,eAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AAGvC,cAAM,SAAS,KAAK,QAAQ,CAAC,CAAC;AAAA,MAChC;AACA,YAAM,KAAK,kBAAkB,KAAK;AAAA,IACpC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKM,kBAAkB,OAAO;AAAA;AAC7B,YAAM,UAAU,KAAK;AACrB,cAAQ,iBAAiB,QAAQ,QAAQ,CAAC,KAAK;AAC/C,YAAM,KAAK,gBAAgB,SAAU,KAAK;AACxC,YAAI,eAAe,IAAI,YAAY,KAAK;AAAA,MAC1C,CAAC;AACD,YAAM,sBAAsB,CAAC;AAC7B,eAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,YAAI,MAAM,CAAC,aAAa,OAAO;AAC7B,gBAAM,KAAK,kBAAkB,MAAM,CAAC,CAAC;AAAA,QACvC,OAAO;AACL,8BAAoB,KAAK,MAAM,CAAC,CAAC;AAAA,QACnC;AAAA,MACF;AACA,UAAI,oBAAoB,SAAS,GAAG;AAClC,cAAM,KAAK,oBAAoB,mBAAmB;AAAA,MACpD;AACA,eAAS,IAAI,GAAG,IAAI,KAAK,MAAM,QAAQ,EAAE,GAAG;AAC1C,aAAK,YAAY,KAAK,MAAM,CAAC,CAAC;AAAA,MAChC;AACA,eAAS,IAAI,GAAG,IAAI,QAAQ,WAAW,QAAQ,EAAE,GAAG;AAClD,aAAK,iBAAiB,QAAQ,WAAW,CAAC,GAAG,MAAM,CAAC,CAAC;AAAA,MACvD;AACA,YAAM,KAAK,gBAAgB,SAAU,KAAK;AACxC,YAAI,cAAc,IAAI,WAAW,KAAK;AAAA,MACxC,CAAC;AAAA,IACH;AAAA;AAAA,EACM,gBAAgB,MAAM;AAAA;AAC1B,eAAS,IAAI,GAAG,KAAK,KAAK,QAAQ,QAAQ,IAAI,IAAI,KAAK;AACrD,cAAM,KAAK,KAAK,QAAQ,CAAC,CAAC;AAAA,MAC5B;AAAA,IACF;AAAA;AACF;AASA,IAAM,qBAAN,MAAyB;AAAA,EACvB,YAAY,QAAQ;AAClB,SAAK,SAAS;AACd,SAAK,OAAO;AAAA,EACd;AAAA,EACA,UAAU,OAAO,SAAS;AACxB,QAAI,CAAC,MAAM,QAAS;AACpB,QAAI,CAAC,MAAM,sBAAsB,CAAC,MAAM,gBAAgB,CAAC,MAAM,aAAa;AAC1E,cAAQ,KAAK,+EAA+E,KAAK;AACjG;AAAA,IACF;AACA,UAAM,SAAS,KAAK;AACpB,UAAM,OAAO,OAAO;AACpB,UAAM,iBAAiB,OAAO;AAC9B,UAAM,WAAW,CAAC;AAClB,QAAI,MAAM,KAAM,UAAS,OAAO,MAAM;AACtC,aAAS,QAAQ,MAAM,MAAM,QAAQ;AACrC,aAAS,YAAY,MAAM;AAC3B,QAAI,MAAM,oBAAoB;AAC5B,eAAS,OAAO;AAAA,IAClB,WAAW,MAAM,cAAc;AAC7B,eAAS,OAAO;AAChB,UAAI,MAAM,WAAW,EAAG,UAAS,QAAQ,MAAM;AAAA,IACjD,WAAW,MAAM,aAAa;AAC5B,eAAS,OAAO;AAChB,UAAI,MAAM,WAAW,EAAG,UAAS,QAAQ,MAAM;AAC/C,eAAS,OAAO,CAAC;AACjB,eAAS,KAAK,kBAAkB,IAAM,MAAM,YAAY,MAAM;AAC9D,eAAS,KAAK,iBAAiB,MAAM;AAAA,IACvC;AACA,QAAI,MAAM,UAAU,UAAa,MAAM,UAAU,GAAG;AAClD,cAAQ,KAAK,mGAAwG;AAAA,IACvH;AACA,QAAI,MAAM,WAAW,MAAM,OAAO,WAAW,SAAS,MAAM,OAAO,SAAS,MAAM,KAAK,MAAM,OAAO,SAAS,MAAM,KAAK,MAAM,OAAO,SAAS,MAAM,KAAK;AACvJ,cAAQ,KAAK,iIAAsI;AAAA,IACrJ;AACA,QAAI,CAAC,eAAe,KAAK,IAAI,GAAG;AAC9B,WAAK,aAAa,KAAK,cAAc,CAAC;AACtC,WAAK,WAAW,KAAK,IAAI,IAAI;AAAA,QAC3B,QAAQ,CAAC;AAAA,MACX;AACA,qBAAe,KAAK,IAAI,IAAI;AAAA,IAC9B;AACA,UAAM,SAAS,KAAK,WAAW,KAAK,IAAI,EAAE;AAC1C,WAAO,KAAK,QAAQ;AACpB,YAAQ,aAAa,QAAQ,cAAc,CAAC;AAC5C,YAAQ,WAAW,KAAK,IAAI,IAAI;AAAA,MAC9B,OAAO,OAAO,SAAS;AAAA,IACzB;AAAA,EACF;AACF;AASA,IAAMd,+BAAN,MAAkC;AAAA,EAChC,YAAY,QAAQ;AAClB,SAAK,SAAS;AACd,SAAK,OAAO;AAAA,EACd;AAAA,EACM,mBAAmB,UAAU,aAAa;AAAA;AAC9C,UAAI,CAAC,SAAS,oBAAqB;AACnC,YAAM,SAAS,KAAK;AACpB,YAAM,iBAAiB,OAAO;AAC9B,kBAAY,aAAa,YAAY,cAAc,CAAC;AACpD,kBAAY,WAAW,KAAK,IAAI,IAAI,CAAC;AACrC,qBAAe,KAAK,IAAI,IAAI;AAC5B,kBAAY,qBAAqB,iBAAiB;AAClD,kBAAY,qBAAqB,kBAAkB;AAAA,IACrD;AAAA;AACF;AASA,IAAMK,mCAAN,MAAsC;AAAA,EACpC,YAAY,QAAQ;AAClB,SAAK,SAAS;AACd,SAAK,OAAO;AAAA,EACd;AAAA,EACM,mBAAmB,UAAU,aAAa;AAAA;AAC9C,UAAI,CAAC,SAAS,0BAA0B,SAAS,cAAc,EAAG;AAClE,YAAM,SAAS,KAAK;AACpB,YAAM,iBAAiB,OAAO;AAC9B,YAAM,eAAe,CAAC;AACtB,mBAAa,kBAAkB,SAAS;AACxC,UAAI,SAAS,cAAc;AACzB,cAAM,kBAAkB;AAAA,UACtB,OAAO,MAAM,OAAO,oBAAoB,SAAS,YAAY;AAAA,UAC7D,UAAU,SAAS,aAAa;AAAA,QAClC;AACA,eAAO,sBAAsB,iBAAiB,SAAS,YAAY;AACnE,qBAAa,mBAAmB;AAAA,MAClC;AACA,mBAAa,2BAA2B,SAAS;AACjD,UAAI,SAAS,uBAAuB;AAClC,cAAM,2BAA2B;AAAA,UAC/B,OAAO,MAAM,OAAO,oBAAoB,SAAS,qBAAqB;AAAA,UACtE,UAAU,SAAS,sBAAsB;AAAA,QAC3C;AACA,eAAO,sBAAsB,0BAA0B,SAAS,qBAAqB;AACrF,qBAAa,4BAA4B;AAAA,MAC3C;AACA,UAAI,SAAS,oBAAoB;AAC/B,cAAM,wBAAwB;AAAA,UAC5B,OAAO,MAAM,OAAO,oBAAoB,SAAS,kBAAkB;AAAA,UACnE,UAAU,SAAS,mBAAmB;AAAA,QACxC;AACA,YAAI,SAAS,qBAAqB,MAAM,EAAG,uBAAsB,QAAQ,SAAS,qBAAqB;AACvG,eAAO,sBAAsB,uBAAuB,SAAS,kBAAkB;AAC/E,qBAAa,yBAAyB;AAAA,MACxC;AACA,kBAAY,aAAa,YAAY,cAAc,CAAC;AACpD,kBAAY,WAAW,KAAK,IAAI,IAAI;AACpC,qBAAe,KAAK,IAAI,IAAI;AAAA,IAC9B;AAAA;AACF;AASA,IAAMC,oCAAN,MAAuC;AAAA,EACrC,YAAY,QAAQ;AAClB,SAAK,SAAS;AACd,SAAK,OAAO;AAAA,EACd;AAAA,EACM,mBAAmB,UAAU,aAAa;AAAA;AAC9C,UAAI,CAAC,SAAS,0BAA0B,SAAS,eAAe,EAAG;AACnE,YAAM,SAAS,KAAK;AACpB,YAAM,iBAAiB,OAAO;AAC9B,YAAM,eAAe,CAAC;AACtB,mBAAa,aAAa,SAAS;AACnC,kBAAY,aAAa,YAAY,cAAc,CAAC;AACpD,kBAAY,WAAW,KAAK,IAAI,IAAI;AACpC,qBAAe,KAAK,IAAI,IAAI;AAAA,IAC9B;AAAA;AACF;AASA,IAAMC,qCAAN,MAAwC;AAAA,EACtC,YAAY,QAAQ;AAClB,SAAK,SAAS;AACd,SAAK,OAAO;AAAA,EACd;AAAA,EACM,mBAAmB,UAAU,aAAa;AAAA;AAC9C,UAAI,CAAC,SAAS,0BAA0B,SAAS,gBAAgB,EAAG;AACpE,YAAM,SAAS,KAAK;AACpB,YAAM,iBAAiB,OAAO;AAC9B,YAAM,eAAe,CAAC;AACtB,mBAAa,oBAAoB,SAAS;AAC1C,UAAI,SAAS,gBAAgB;AAC3B,cAAM,oBAAoB;AAAA,UACxB,OAAO,MAAM,OAAO,oBAAoB,SAAS,cAAc;AAAA,UAC/D,UAAU,SAAS,eAAe;AAAA,QACpC;AACA,eAAO,sBAAsB,mBAAmB,SAAS,cAAc;AACvE,qBAAa,qBAAqB;AAAA,MACpC;AACA,mBAAa,iBAAiB,SAAS;AACvC,mBAAa,8BAA8B,SAAS,0BAA0B,CAAC;AAC/E,mBAAa,8BAA8B,SAAS,0BAA0B,CAAC;AAC/E,UAAI,SAAS,yBAAyB;AACpC,cAAM,6BAA6B;AAAA,UACjC,OAAO,MAAM,OAAO,oBAAoB,SAAS,uBAAuB;AAAA,UACxE,UAAU,SAAS,wBAAwB;AAAA,QAC7C;AACA,eAAO,sBAAsB,4BAA4B,SAAS,uBAAuB;AACzF,qBAAa,8BAA8B;AAAA,MAC7C;AACA,kBAAY,aAAa,YAAY,cAAc,CAAC;AACpD,kBAAY,WAAW,KAAK,IAAI,IAAI;AACpC,qBAAe,KAAK,IAAI,IAAI;AAAA,IAC9B;AAAA;AACF;AASA,IAAMN,sCAAN,MAAyC;AAAA,EACvC,YAAY,QAAQ;AAClB,SAAK,SAAS;AACd,SAAK,OAAO;AAAA,EACd;AAAA,EACM,mBAAmB,UAAU,aAAa;AAAA;AAC9C,UAAI,CAAC,SAAS,0BAA0B,SAAS,iBAAiB,EAAG;AACrE,YAAM,SAAS,KAAK;AACpB,YAAM,iBAAiB,OAAO;AAC9B,YAAM,eAAe,CAAC;AACtB,mBAAa,qBAAqB,SAAS;AAC3C,UAAI,SAAS,iBAAiB;AAC5B,cAAM,qBAAqB;AAAA,UACzB,OAAO,MAAM,OAAO,oBAAoB,SAAS,eAAe;AAAA,UAChE,UAAU,SAAS,gBAAgB;AAAA,QACrC;AACA,eAAO,sBAAsB,oBAAoB,SAAS,eAAe;AACzE,qBAAa,sBAAsB;AAAA,MACrC;AACA,kBAAY,aAAa,YAAY,cAAc,CAAC;AACpD,kBAAY,WAAW,KAAK,IAAI,IAAI;AACpC,qBAAe,KAAK,IAAI,IAAI;AAAA,IAC9B;AAAA;AACF;AASA,IAAMC,gCAAN,MAAmC;AAAA,EACjC,YAAY,QAAQ;AAClB,SAAK,SAAS;AACd,SAAK,OAAO;AAAA,EACd;AAAA,EACM,mBAAmB,UAAU,aAAa;AAAA;AAC9C,UAAI,CAAC,SAAS,0BAA0B,SAAS,iBAAiB,EAAG;AACrE,YAAM,SAAS,KAAK;AACpB,YAAM,iBAAiB,OAAO;AAC9B,YAAM,eAAe,CAAC;AACtB,mBAAa,kBAAkB,SAAS;AACxC,UAAI,SAAS,cAAc;AACzB,cAAM,kBAAkB;AAAA,UACtB,OAAO,MAAM,OAAO,oBAAoB,SAAS,YAAY;AAAA,UAC7D,UAAU,SAAS,aAAa;AAAA,QAClC;AACA,eAAO,sBAAsB,iBAAiB,SAAS,YAAY;AACnE,qBAAa,mBAAmB;AAAA,MAClC;AACA,UAAI,SAAS,wBAAwB,UAAU;AAC7C,qBAAa,sBAAsB,SAAS;AAAA,MAC9C;AACA,mBAAa,mBAAmB,SAAS,iBAAiB,QAAQ;AAClE,kBAAY,aAAa,YAAY,cAAc,CAAC;AACpD,kBAAY,WAAW,KAAK,IAAI,IAAI;AACpC,qBAAe,KAAK,IAAI,IAAI;AAAA,IAC9B;AAAA;AACF;AASA,IAAMC,6BAAN,MAAgC;AAAA,EAC9B,YAAY,QAAQ;AAClB,SAAK,SAAS;AACd,SAAK,OAAO;AAAA,EACd;AAAA,EACM,mBAAmB,UAAU,aAAa;AAAA;AAC9C,UAAI,CAAC,SAAS,0BAA0B,SAAS,QAAQ,IAAK;AAC9D,YAAM,SAAS,KAAK;AACpB,YAAM,iBAAiB,OAAO;AAC9B,YAAM,eAAe,CAAC;AACtB,mBAAa,MAAM,SAAS;AAC5B,kBAAY,aAAa,YAAY,cAAc,CAAC;AACpD,kBAAY,WAAW,KAAK,IAAI,IAAI;AACpC,qBAAe,KAAK,IAAI,IAAI;AAAA,IAC9B;AAAA;AACF;AASA,IAAMC,kCAAN,MAAqC;AAAA,EACnC,YAAY,QAAQ;AAClB,SAAK,SAAS;AACd,SAAK,OAAO;AAAA,EACd;AAAA,EACM,mBAAmB,UAAU,aAAa;AAAA;AAC9C,UAAI,CAAC,SAAS,0BAA0B,SAAS,sBAAsB,KAAO,SAAS,cAAc,OAAO,sBAAsB,KAAK,CAAC,SAAS,wBAAwB,CAAC,SAAS,iBAAkB;AACrM,YAAM,SAAS,KAAK;AACpB,YAAM,iBAAiB,OAAO;AAC9B,YAAM,eAAe,CAAC;AACtB,UAAI,SAAS,sBAAsB;AACjC,cAAM,0BAA0B;AAAA,UAC9B,OAAO,MAAM,OAAO,oBAAoB,SAAS,oBAAoB;AAAA,UACrE,UAAU,SAAS,qBAAqB;AAAA,QAC1C;AACA,eAAO,sBAAsB,yBAAyB,SAAS,oBAAoB;AACnF,qBAAa,kBAAkB;AAAA,MACjC;AACA,UAAI,SAAS,kBAAkB;AAC7B,cAAM,sBAAsB;AAAA,UAC1B,OAAO,MAAM,OAAO,oBAAoB,SAAS,gBAAgB;AAAA,UACjE,UAAU,SAAS,iBAAiB;AAAA,QACtC;AACA,eAAO,sBAAsB,qBAAqB,SAAS,gBAAgB;AAC3E,qBAAa,uBAAuB;AAAA,MACtC;AACA,mBAAa,iBAAiB,SAAS;AACvC,mBAAa,sBAAsB,SAAS,cAAc,QAAQ;AAClE,kBAAY,aAAa,YAAY,cAAc,CAAC;AACpD,kBAAY,WAAW,KAAK,IAAI,IAAI;AACpC,qBAAe,KAAK,IAAI,IAAI;AAAA,IAC9B;AAAA;AACF;AASA,IAAMI,+BAAN,MAAkC;AAAA,EAChC,YAAY,QAAQ;AAClB,SAAK,SAAS;AACd,SAAK,OAAO;AAAA,EACd;AAAA,EACM,mBAAmB,UAAU,aAAa;AAAA;AAC9C,UAAI,CAAC,SAAS,0BAA0B,SAAS,SAAS,EAAK;AAC/D,YAAM,SAAS,KAAK;AACpB,YAAM,iBAAiB,OAAO;AAC9B,YAAM,eAAe,CAAC;AACtB,UAAI,SAAS,mBAAmB;AAC9B,cAAM,uBAAuB;AAAA,UAC3B,OAAO,MAAM,OAAO,oBAAoB,SAAS,iBAAiB;AAAA,UAClE,UAAU,SAAS,kBAAkB;AAAA,QACvC;AACA,eAAO,sBAAsB,sBAAsB,SAAS,iBAAiB;AAC7E,qBAAa,wBAAwB;AAAA,MACvC;AACA,UAAI,SAAS,eAAe;AAC1B,cAAM,mBAAmB;AAAA,UACvB,OAAO,MAAM,OAAO,oBAAoB,SAAS,aAAa;AAAA,UAC9D,UAAU,SAAS,cAAc;AAAA,QACnC;AACA,eAAO,sBAAsB,kBAAkB,SAAS,aAAa;AACrE,qBAAa,oBAAoB;AAAA,MACnC;AACA,mBAAa,uBAAuB,SAAS;AAC7C,mBAAa,mBAAmB,SAAS,WAAW,QAAQ;AAC5D,kBAAY,aAAa,YAAY,cAAc,CAAC;AACpD,kBAAY,WAAW,KAAK,IAAI,IAAI;AACpC,qBAAe,KAAK,IAAI,IAAI;AAAA,IAC9B;AAAA;AACF;AASA,IAAMC,oCAAN,MAAuC;AAAA,EACrC,YAAY,QAAQ;AAClB,SAAK,SAAS;AACd,SAAK,OAAO;AAAA,EACd;AAAA,EACM,mBAAmB,UAAU,aAAa;AAAA;AAC9C,UAAI,CAAC,SAAS,0BAA0B,SAAS,cAAc,EAAK;AACpE,YAAM,SAAS,KAAK;AACpB,YAAM,iBAAiB,OAAO;AAC9B,YAAM,eAAe,CAAC;AACtB,UAAI,SAAS,eAAe;AAC1B,cAAM,mBAAmB;AAAA,UACvB,OAAO,MAAM,OAAO,oBAAoB,SAAS,aAAa;AAAA,QAChE;AACA,eAAO,sBAAsB,kBAAkB,SAAS,aAAa;AACrE,qBAAa,oBAAoB;AAAA,MACnC;AACA,mBAAa,qBAAqB,SAAS;AAC3C,mBAAa,qBAAqB,SAAS;AAC3C,kBAAY,aAAa,YAAY,cAAc,CAAC;AACpD,kBAAY,WAAW,KAAK,IAAI,IAAI;AACpC,qBAAe,KAAK,IAAI,IAAI;AAAA,IAC9B;AAAA;AACF;AASA,IAAMC,0CAAN,MAA6C;AAAA,EAC3C,YAAY,QAAQ;AAClB,SAAK,SAAS;AACd,SAAK,OAAO;AAAA,EACd;AAAA,EACM,mBAAmB,UAAU,aAAa;AAAA;AAC9C,UAAI,CAAC,SAAS,0BAA0B,SAAS,sBAAsB,EAAK;AAC5E,YAAM,SAAS,KAAK;AACpB,YAAM,iBAAiB,OAAO;AAC9B,YAAM,eAAe,CAAC;AACtB,mBAAa,mBAAmB,SAAS;AACzC,kBAAY,aAAa,YAAY,cAAc,CAAC;AACpD,kBAAY,WAAW,KAAK,IAAI,IAAI;AACpC,qBAAe,KAAK,IAAI,IAAI;AAAA,IAC9B;AAAA;AACF;AASA,IAAMC,8BAAN,MAAiC;AAAA,EAC/B,YAAY,QAAQ;AAClB,SAAK,SAAS;AACd,SAAK,OAAO;AAAA,EACd;AAAA,EACM,mBAAmB,UAAU,aAAa;AAAA;AAC9C,UAAI,CAAC,SAAS,0BAA0B,SAAS,cAAc,KAAK,CAAC,SAAS,QAAS;AACvF,YAAM,SAAS,KAAK;AACpB,YAAM,iBAAiB,OAAO;AAC9B,YAAM,eAAe,CAAC;AACtB,UAAI,SAAS,SAAS;AACpB,cAAM,aAAa;AAAA,UACjB,OAAO,MAAM,OAAO,oBAAoB,SAAS,OAAO;AAAA,UACxD,UAAU,SAAS,QAAQ;AAAA,QAC7B;AACA,eAAO,sBAAsB,YAAY,SAAS,OAAO;AACzD,qBAAa,cAAc;AAAA,MAC7B;AACA,mBAAa,aAAa,SAAS;AACnC,kBAAY,aAAa,YAAY,cAAc,CAAC;AACpD,kBAAY,WAAW,KAAK,IAAI,IAAI;AACpC,qBAAe,KAAK,IAAI,IAAI;AAAA,IAC9B;AAAA;AACF;AASA,IAAMC,yBAAN,MAA4B;AAAA,EAC1B,YAAY,QAAQ;AAClB,SAAK,SAAS;AACd,SAAK,OAAO;AAAA,EACd;AAAA,EACA,UAAU,QAAQ,SAAS;AACzB,QAAI,CAAC,OAAO,gBAAiB;AAC7B,UAAM,SAAS,KAAK;AACpB,UAAM,OAAO;AACb,UAAM,kBAAkB,IAAI,aAAa,KAAK,QAAQ,CAAC;AACvD,UAAM,eAAe,IAAI,aAAa,KAAK,QAAQ,CAAC;AACpD,UAAM,YAAY,IAAI,aAAa,KAAK,QAAQ,CAAC;AACjD,UAAM,SAAS,IAAI,QAAQ;AAC3B,UAAM,WAAW,IAAI,QAAQ;AAC7B,UAAMU,cAAa,IAAI,WAAW;AAClC,UAAM,QAAQ,IAAI,QAAQ;AAC1B,aAAS,IAAI,GAAG,IAAI,KAAK,OAAO,KAAK;AACnC,WAAK,YAAY,GAAG,MAAM;AAC1B,aAAO,UAAU,UAAUA,aAAY,KAAK;AAC5C,eAAS,QAAQ,iBAAiB,IAAI,CAAC;AACvC,MAAAA,YAAW,QAAQ,cAAc,IAAI,CAAC;AACtC,YAAM,QAAQ,WAAW,IAAI,CAAC;AAAA,IAChC;AACA,UAAMF,cAAa;AAAA,MACjB,aAAa,OAAO,gBAAgB,IAAI,gBAAgB,iBAAiB,CAAC,CAAC;AAAA,MAC3E,UAAU,OAAO,gBAAgB,IAAI,gBAAgB,cAAc,CAAC,CAAC;AAAA,MACrE,OAAO,OAAO,gBAAgB,IAAI,gBAAgB,WAAW,CAAC,CAAC;AAAA,IACjE;AACA,QAAI,KAAK,cAAe,CAAAA,YAAW,WAAW,OAAO,gBAAgB,KAAK,aAAa;AACvF,YAAQ,aAAa,QAAQ,cAAc,CAAC;AAC5C,YAAQ,WAAW,KAAK,IAAI,IAAI;AAAA,MAC9B,YAAAA;AAAA,IACF;AACA,WAAO,eAAe,KAAK,IAAI,IAAI;AACnC,WAAO,mBAAmB,KAAK,IAAI,IAAI;AAAA,EACzC;AACF;AAOA,aAAa,QAAQ;AAAA,EACnB,gBAAgB,SAAU,OAAO,MAAM;AACrC,UAAM,YAAY;AAClB,UAAM,YAAY,MAAM,aAAa;AACrC,UAAM,QAAQ,IAAI,MAAM,eAAe,MAAM,MAAM,SAAS,CAAC;AAC7D,UAAM,SAAS,IAAI,MAAM,gBAAgB,MAAM,OAAO,SAAS,SAAS;AACxE,UAAM,cAAc,MAAM,kBAAkB,IAAI,MAAM,gBAAgB,SAAS,CAAC;AAChF,QAAI;AACJ,QAAI,MAAM,MAAM,WAAW,GAAG;AAC5B,YAAM,CAAC,IAAI;AACX,eAAS,IAAI,GAAG,IAAI,WAAW,KAAK;AAClC,eAAO,CAAC,IAAI;AAAA,MACd;AACA,cAAQ;AAAA,IACV,WAAW,OAAO,MAAM,MAAM,CAAC,GAAG;AAChC,UAAI,KAAK,IAAI,MAAM,MAAM,CAAC,IAAI,IAAI,IAAI,UAAW,QAAO;AACxD,YAAM,CAAC,IAAI;AACX,YAAM,IAAI,MAAM,OAAO,CAAC;AACxB,aAAO,IAAI,YAAY,SAAS,IAAI,GAAG,CAAC;AACxC,aAAO,IAAI,MAAM,QAAQ,SAAS;AAClC,cAAQ;AAAA,IACV,WAAW,OAAO,MAAM,MAAM,MAAM,MAAM,SAAS,CAAC,GAAG;AACrD,UAAI,KAAK,IAAI,MAAM,MAAM,MAAM,MAAM,SAAS,CAAC,IAAI,IAAI,IAAI,WAAW;AACpE,eAAO,MAAM,MAAM,SAAS;AAAA,MAC9B;AACA,YAAM,MAAM,SAAS,CAAC,IAAI;AAC1B,YAAM,IAAI,MAAM,OAAO,CAAC;AACxB,aAAO,IAAI,MAAM,QAAQ,CAAC;AAC1B,aAAO,IAAI,YAAY,SAAS,IAAI,GAAG,MAAM,OAAO,MAAM;AAC1D,cAAQ,MAAM,SAAS;AAAA,IACzB,OAAO;AACL,eAAS,IAAI,GAAG,IAAI,MAAM,MAAM,QAAQ,KAAK;AAC3C,YAAI,KAAK,IAAI,MAAM,MAAM,CAAC,IAAI,IAAI,IAAI,UAAW,QAAO;AACxD,YAAI,MAAM,MAAM,CAAC,IAAI,QAAQ,MAAM,MAAM,IAAI,CAAC,IAAI,MAAM;AACtD,gBAAM,IAAI,MAAM,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC;AACxC,gBAAM,IAAI,CAAC,IAAI;AACf,gBAAM,IAAI,MAAM,MAAM,MAAM,IAAI,CAAC,GAAG,IAAI,CAAC;AACzC,iBAAO,IAAI,MAAM,OAAO,MAAM,IAAI,IAAI,KAAK,SAAS,GAAG,CAAC;AACxD,iBAAO,IAAI,YAAY,SAAS,IAAI,IAAI,IAAI,KAAK,SAAS;AAC1D,iBAAO,IAAI,MAAM,OAAO,OAAO,IAAI,KAAK,SAAS,IAAI,IAAI,KAAK,SAAS;AACvE,kBAAQ,IAAI;AACZ;AAAA,QACF;AAAA,MACF;AAAA,IACF;AACA,UAAM,QAAQ;AACd,UAAM,SAAS;AACf,WAAO;AAAA,EACT;AAAA,EACA,wBAAwB,SAAU,MAAM,MAAM;AAC5C,UAAM,SAAS,CAAC;AAChB,UAAM,eAAe,CAAC;AACtB,UAAM,eAAe,KAAK;AAC1B,aAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,EAAE,GAAG;AAC5C,UAAI,cAAc,aAAa,CAAC;AAChC,YAAM,qBAAqB,gBAAgB,eAAe,YAAY,IAAI;AAC1E,YAAM,kBAAkB,gBAAgB,SAAS,MAAM,mBAAmB,QAAQ;AAClF,UAAI,mBAAmB,iBAAiB,2BAA2B,mBAAmB,kBAAkB,QAAW;AAEjH,eAAO,KAAK,WAAW;AACvB;AAAA,MACF;AACA,UAAI,YAAY,sBAAsB,YAAY,oCAAoC,YAAY,sBAAsB,YAAY,gCAAgC;AAClK,YAAI,YAAY,kBAAkB,2CAA2C;AAG3E,gBAAM,IAAI,MAAM,8EAA8E;AAAA,QAChG;AACA,gBAAQ,KAAK,8FAA8F;AAC3G,sBAAc,YAAY,MAAM;AAChC,oBAAY,iBAAiB,iBAAiB;AAAA,MAChD;AACA,YAAM,cAAc,gBAAgB,sBAAsB;AAC1D,YAAM,cAAc,gBAAgB,sBAAsB,mBAAmB,aAAa;AAC1F,UAAI,gBAAgB,QAAW;AAC7B,cAAM,IAAI,MAAM,sDAAsD,mBAAmB,aAAa;AAAA,MACxG;AACA,UAAI;AAIJ,UAAI,aAAa,gBAAgB,IAAI,MAAM,QAAW;AACpD,sBAAc,YAAY,MAAM;AAChC,cAAM,SAAS,IAAI,YAAY,gBAAgB,cAAc,YAAY,MAAM,MAAM;AACrF,iBAAS,IAAI,GAAG,IAAI,YAAY,MAAM,QAAQ,KAAK;AACjD,iBAAO,IAAI,cAAc,WAAW,IAAI,YAAY,OAAO,CAAC;AAAA,QAC9D;AAIA,oBAAY,QAAQ,mBAAmB,YAAY,MAAM;AACzD,oBAAY,SAAS;AACrB,qBAAa,gBAAgB,IAAI,IAAI;AACrC,eAAO,KAAK,WAAW;AACvB;AAAA,MACF;AACA,YAAM,oBAAoB,YAAY,kBAAkB,IAAI,YAAY,gBAAgB,CAAC,CAAC;AAC1F,oBAAc,aAAa,gBAAgB,IAAI;AAI/C,eAAS,IAAI,GAAG,IAAI,YAAY,MAAM,QAAQ,KAAK;AACjD,oBAAY,OAAO,IAAI,cAAc,WAAW,IAAI,kBAAkB,SAAS,YAAY,MAAM,CAAC,CAAC;AAAA,MACrG;AAKA,eAAS,IAAI,GAAG,IAAI,YAAY,MAAM,QAAQ,KAAK;AACjD,cAAM,gBAAgB,KAAK,eAAe,aAAa,YAAY,MAAM,CAAC,CAAC;AAC3E,oBAAY,OAAO,gBAAgB,cAAc,WAAW,IAAI,YAAY,OAAO,CAAC;AAAA,MACtF;AAAA,IACF;AACA,SAAK,SAAS;AACd,WAAO;AAAA,EACT;AAAA,EACA,0BAA0B,SAAU,cAAc;AAChD,UAAM,eAAe,IAAI,gBAAgB,IAAI,aAAa,aAAa,QAAQ,aAAa,QAAQ,GAAG,aAAa,UAAU,KAAK;AACnI,QAAI,CAAC,aAAa,cAAc,CAAC,aAAa,8BAA8B;AAC1E,mBAAa,MAAM,IAAI,aAAa,KAAK;AACzC,aAAO;AAAA,IACT;AACA,aAAS,IAAI,GAAG,KAAK,aAAa,OAAO,IAAI,IAAI,KAAK;AACpD,eAAS,IAAI,GAAG,IAAI,aAAa,UAAU,KAAK;AAC9C,qBAAa,aAAa,GAAG,GAAG,aAAa,aAAa,GAAG,CAAC,CAAC;AAAA,MACjE;AAAA,IACF;AACA,WAAO;AAAA,EACT;AACF;;;AC5vEA,IAAM,mBAAmB,YAAU;AAEjC,SAAO,OAAO,aAAa;AAAA;AAAA,EAG3B,OAAO;AAAA,EAEP,OAAO,SAAS;AAAA,EAEhB,CAAC,CAAC,MAAM,KAAK,OAAO,SAAS,iBAAiB,OAAO,CAAC,EAAE,OAAO,OAAK,mBAAmB,EAAE,QAAQ,CAAC;AACpG;AAKA,IAAM,qBAAqB,cAAY;AAErC,SAAO,YAAY,SAAS,cAAc,CAAC,MAAM,QAAQ,QAAQ;AACnE;AACA,IAAqB,yCAArB,MAA4D;AAAA,EAC1D,YAAY,QAAQ;AAClB,SAAK,SAAS;AACd,SAAK,OAAO;AACZ,SAAK,eAAe,CAAC;AAAA,EACvB;AAAA,EACA,YAAY,SAAS;AAEnB,UAAM,iBAAiB,oBAAI,IAAI;AAC/B,UAAM,kBAAkB,OAAK;AAC3B,UAAI,CAAC,iBAAiB,CAAC,GAAG;AACxB;AAAA,MACF;AACA,YAAM,mBAAmB,EAAE,SAAS;AACpC,YAAM,iBAAiB,EAAE,SAAS;AAClC,iBAAW,CAAC,aAAa,WAAW,KAAK,gBAAgB;AACvD,cAAM,kBAAkB,iBAAiB,IAAI,YAAY,KAAK;AAE9D,YAAI,mBAAmB,mBAAmB,gBAAgB,QAAQ,GAAG;AACnE,yBAAe,IAAI,WAAW;AAAA,QAChC;AAAA,MACF;AAAA,IACF;AACA,QAAI,MAAM,QAAQ,OAAO,GAAG;AAC1B,iBAAW,UAAU,SAAS;AAC5B,eAAO,SAAS,eAAe;AAAA,MACjC;AAAA,IACF,OAAO;AACL,cAAQ,SAAS,eAAe;AAAA,IAClC;AAEA,mBAAe,QAAQ,UAAQ,KAAK,aAAa,KAAK,IAAI,CAAC;AAAA,EAC7D;AAAA,EACM,UAAU,MAAM,SAAS;AAAA;AAC7B,UAAI,CAAC,iBAAiB,IAAI,GAAG;AAC3B;AAAA,MACF;AACA,YAAM,WAAW,KAAK;AACtB,YAAM,mBAAmB,SAAS;AAClC,YAAM,iBAAiB,SAAS;AAChC,YAAM,eAAe,oBAAI,IAAI;AAE7B,YAAM,oBAAoB,oBAAI,IAAI;AAClC,YAAM,WAAW,MAAM,KAAK,eAAe,OAAO,CAAC,EAAE,KAAK,CAACG,IAAGC,OAAM;AAClE,eAAOD,GAAE,QAAQC,GAAE;AAAA,MACrB,CAAC;AACD,iBAAW,CAAC,GAAG,WAAW,KAAK,SAAS,QAAQ,GAAG;AACjD,0BAAkB,IAAI,YAAY,OAAO,CAAC;AAAA,MAC5C;AACA,iBAAW,eAAe,eAAe,OAAO,GAAG;AACjD,cAAM,kBAAkB,iBAAiB,IAAI,YAAY,KAAK;AAC9D,YAAI,CAAC,mBAAmB,CAAC,mBAAmB,gBAAgB,QAAQ,GAAG;AACrE;AAAA,QACF;AACA,cAAM,gBAAgB,MAAM,KAAK,OAAO,qBAAqB,gBAAgB,QAAQ;AACrF,YAAI,CAAC,aAAa,IAAI,aAAa,GAAG;AACpC,uBAAa,IAAI,eAAe;AAAA,YAC9B,UAAU;AAAA,YACV,UAAU,CAAC;AAAA,UACb,CAAC;AAAA,QACH;AACA,qBAAa,IAAI,aAAa,EAAE,SAAS,KAAK,kBAAkB,IAAI,YAAY,KAAK,CAAC;AAAA,MACxF;AACA,YAAM,cAAc,MAAM,KAAK,aAAa,OAAO,CAAC,EAAE,IAAI,OAAK;AAC7D,eAAO,EAAE,SAAS,KAAK,CAACD,IAAGC,OAAMD,KAAIC,EAAC,KAAK;AAAA,MAC7C,CAAC,EAAE,KAAK,CAACD,IAAGC,OAAMD,GAAE,WAAWC,GAAE,QAAQ;AACzC,UAAI,YAAY,WAAW,GAAG;AAC5B;AAAA,MACF;AACA,YAAM,wBAAwB,mBAAmB,SAAS,gBAAgB,IAAI,MAAM,KAAK,OAAO,qBAAqB,SAAS,gBAAgB,IAAI;AAClJ,iBAAW,gBAAgB,QAAQ,YAAY;AAE7C,YAAI,yBAAyB,GAAG;AAC9B,uBAAa,WAAW;AAAA,QAC1B;AACA,qBAAa,aAAa,aAAa,cAAc,CAAC;AACtD,qBAAa,WAAW,KAAK,IAAI,IAAI;AAAA,UACnC,UAAU;AAAA,QACZ;AAAA,MACF;AAAA,IACF;AAAA;AAAA,EACA,aAAa;AACX,QAAI,KAAK,aAAa,WAAW,GAAG;AAClC;AAAA,IACF;AACA,UAAM,OAAO,KAAK,OAAO;AACzB,SAAK,aAAa,KAAK,cAAc,CAAC;AACtC,UAAM,cAAc,KAAK,aAAa,IAAI,CAAAC,OAAK;AAC7C,aAAO;AAAA,QACL,MAAMA;AAAA,MACR;AAAA,IACF,CAAC;AACD,SAAK,WAAW,KAAK,IAAI,IAAI;AAAA,MAC3B,UAAU;AAAA,IACZ;AACA,SAAK,OAAO,eAAe,KAAK,IAAI,IAAI;AAAA,EAC1C;AACF;;;ACrIA,IAAM,oBAAN,MAAwB;AAAA,EACtB,YAAY,SAAS,UAAU,YAAY,uBAAuB,yBAAyB;AACzF,SAAK,UAAU;AACf,SAAK,WAAW;AAChB,SAAK,aAAa;AAClB,SAAK,iBAAiB;AACtB,SAAK,0BAA0B;AAC/B,SAAK,gBAAgB,KAAK,UAAU,KAAK,IAAI;AAC7C,UAAM,UAAU,SAAS,GAAG,WAAW;AAIvC,QAAI,yBAAyB,oBAAoB,QAAQ;AAEvD,YAAM,mBAAmB,IAAI,sBAAsB,EAAE;AACrD,cAAQ,cAAc,iBAAiB;AACvC,YAAM,KAAK,SAAS,WAAW;AAG/B,cAAQ,QAAQ,2BAA2B;AAAA,QACzC,KAAK;AACH,aAAG,aAAa,UAAU;AAC1B;AAAA,QACF,KAAK;AACH,aAAG,aAAa,wBAAwB;AACxC;AAAA,MACJ;AACA,WAAK,iBAAiB,IAAI,eAAe,SAAS,EAAE;AACpD,WAAK,WAAW,iBAAiB,oBAAoB,MAAM;AACzD,aAAK,iBAAiB;AAAA,MACxB,CAAC;AAAA,IACH;AAIA,YAAQ,sBAAsB,KAAK,aAAa;AAAA,EAClD;AAAA,EACA,mBAAmB;AACjB,UAAM,oBAAoB,KAAK,SAAS,WAAW,IAAI,KAAK,QAAQ,WAAW;AAC/E,QAAI,mBAAmB;AACrB,YAAM,UAAU,KAAK,eAAe,qBAAqB,KAAK,UAAU;AACxE,UAAI,SAAS;AACX,0BAAkB,iBAAiB;AACnC,aAAK,QAAQ,YAAY,mBAAmB;AAAA,MAC9C;AAAA,IACF;AAAA,EACF;AAAA,EACA,UAAU,MAAM,SAAS;AAGvB,QAAI,CAAC,KAAK,SAAS;AACjB;AAAA,IACF;AACA,UAAM,UAAU,QAAQ;AACxB,YAAQ,sBAAsB,KAAK,aAAa;AAChD,UAAM,gBAAgB,QAAQ,iBAAiB,KAAK,UAAU;AAC9D,QAAI,eAAe;AAEjB,WAAK,QAAQ,WAAW,GAAG,UAAU,cAAc,8BAA8B;AACjF,WAAK,QAAQ,WAAW,YAAY;AAIpC,YAAM,kBAAkB,KAAK,IAAI,GAAK,KAAK,IAAI,cAAc,sBAAsB,GAAG,KAAK,IAAI,cAAc,sBAAsB,GAAG,cAAc,sBAAsB,CAAC,CAAC,CAAC;AAC7K,WAAK,QAAQ,iBAAiB,MAAM,OAAO,cAAc,sBAAsB,IAAI,iBAAiB,cAAc,sBAAsB,IAAI,iBAAiB,cAAc,sBAAsB,IAAI,eAAe;AACpN,WAAK,QAAQ,iBAAiB,YAAY;AAC1C,WAAK,QAAQ,iBAAiB,SAAS,KAAK,cAAc,qBAAqB;AAC/E,UAAI,KAAK,yBAAyB;AAChC,aAAK,wBAAwB;AAC7B,aAAK,0BAA0B;AAAA,MACjC;AAAA,IACF;AAAA,EACF;AAAA,EACA,UAAU;AACR,SAAK,UAAU;AACf,SAAK,WAAW;AAChB,SAAK,aAAa;AAClB,SAAK,iBAAiB;AAAA,EACxB;AACF;AASO,IAAM,mBAAN,cAA+B,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAO1C,YAAY,UAAU,wBAAwB,MAAM;AAClD,UAAM;AAON,SAAK,aAAa,IAAI,WAAW;AACjC,SAAK,WAAW,YAAY;AAC5B,SAAK,IAAI,KAAK,UAAU;AAOxB,SAAK,mBAAmB,IAAI,iBAAiB;AAC7C,SAAK,iBAAiB,YAAY;AAClC,SAAK,IAAI,KAAK,gBAAgB;AAS9B,SAAK,cAAc;AACnB,QAAI,oBAAoB;AACxB,QAAI,oBAAoB;AACxB,aAAS,GAAG,iBAAiB,gBAAgB,MAAM;AACjD,YAAM,UAAU,SAAS,GAAG,WAAW;AACvC,UAAI,uBAAuB,SAAS;AAClC,gBAAQ,kBAAkB;AAAA,UACxB,kBAAkB,QAAQ;AAAA,QAC5B,CAAC,EAAE,KAAK,WAAS;AACf,8BAAoB,IAAI,kBAAkB,MAAM,UAAU,OAAO,uBAAuB,MAAM;AAC5F,gCAAoB;AAGpB,iBAAK,cAAc;AAAA,cACjB,MAAM;AAAA,YACR,CAAC;AAAA,UACH,CAAC;AAAA,QACH,CAAC;AAAA,MACH;AAAA,IACF,CAAC;AACD,aAAS,GAAG,iBAAiB,cAAc,MAAM;AAC/C,UAAI,mBAAmB;AACrB,0BAAkB,QAAQ;AAC1B,4BAAoB;AAAA,MACtB;AACA,UAAI,mBAAmB;AAErB,aAAK,cAAc;AAAA,UACjB,MAAM;AAAA,QACR,CAAC;AAAA,MACH;AAAA,IACF,CAAC;AAMD,SAAK,UAAU,MAAM;AACnB,UAAI,mBAAmB;AACrB,0BAAkB,QAAQ;AAC1B,4BAAoB;AAAA,MACtB;AACA,WAAK,OAAO,KAAK,UAAU;AAC3B,WAAK,aAAa;AAClB,WAAK,OAAO,KAAK,gBAAgB;AACjC,WAAK,mBAAmB;AACxB,WAAK,cAAc;AAAA,IACrB;AAAA,EACF;AACF;;;AC/JO,IAAM,gBAAgB;AAC7B,IAAM,yBAAyB;AACxB,IAAM,qBAAqB;AAS3B,IAAM,SAAN,MAAa;AAAA,EAClB,YAAY,oBAAoB,oBAAoB;AAClD,SAAK,WAAW;AAChB,SAAK,mBAAmB;AACxB,SAAK,aAAa,iBAAiB;AAAA,EACrC;AAAA,EACA,aAAa,mBAAmB;AAC9B,SAAK,mBAAmB,IAAI,KAAK,IAAI,wBAAwB,iBAAiB;AAAA,EAChF;AAAA,EACA,OAAO,GAAG,OAAO,sBAAsB,gBAAgB;AACrD,UAAM,WAAW,OAAS,KAAK;AAC/B,QAAI,KAAK,QAAQ,mBAAmB,GAAG;AACrC,aAAO;AAAA,IACT;AACA,QAAI,MAAM,SAAS,KAAK,aAAa,GAAG;AACtC,aAAO;AAAA,IACT;AACA,QAAI,uBAAuB,GAAG;AAC5B,aAAO;AAAA,IACT;AAIA,UAAM,SAAS,IAAI;AACnB,UAAM,uBAAuB,KAAK,WAAW,KAAK,mBAAmB;AACrE,UAAM,gBAAgB,SAAS,uBAAuB;AACtD,UAAM,QAAQ,KAAK,IAAI,CAAC,KAAK,mBAAmB,oBAAoB;AACpE,UAAM,eAAe,uBAAuB,KAAK,mBAAmB,iBAAiB;AACrF,UAAM,eAAe,CAAC,KAAK,oBAAoB,cAAc,uBAAuB;AACpF,QAAI,KAAK,IAAI,WAAW,IAAI,WAAW,KAAK,IAAI,cAAc,KAAK,eAAe,UAAU,GAAG;AAG7F,WAAK,WAAW;AAChB,aAAO;AAAA,IACT,OAAO;AACL,WAAK,WAAW;AAChB,aAAO,QAAQ,gBAAgB;AAAA,IACjC;AAAA,EACF;AACF;;;AChDA,IAAM,SAAS;AACf,IAAM,aAAa;AACnB,IAAM,cAAc;AACpB,IAAM,WAAW;AACjB,IAAM,YAAY,KAAK,MAAM,IAAI;AACjC,IAAM,UAAU,IAAI,QAAQ;AAK5B,IAAM,YAAY,CAAC,UAAU,SAAS,YAAY;AAChD,MAAI,MAAM,UAAU,IAAI,UAAU,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,UAAU,IAAI,KAAK,KAAK,IAAI,KAAK;AAC1F,WAAS,IAAI,GAAG,KAAK,UAAU,EAAE,GAAG;AAClC,aAAS,KAAK,WAAW,SAAS,cAAc,KAAK,IAAI,GAAG,GAAG,WAAW,SAAS,cAAc,KAAK,IAAI,GAAG,GAAG,GAAG,UAAU,SAAS,KAAK,IAAI,GAAG,GAAG,UAAU,SAAS,KAAK,IAAI,GAAG,GAAG,CAAC;AACxL,WAAO;AAAA,EACT;AACF;AAaO,IAAM,eAAN,cAA2B,KAAK;AAAA,EACrC,YAAY,OAAO,MAAM;AACvB,UAAM,WAAW,IAAI,eAAe;AACpC,UAAM,YAAY,CAAC;AACnB,UAAM,WAAW,CAAC;AAClB,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,IACF,IAAI;AACJ,UAAM,IAAI,KAAK,IAAI;AACnB,UAAM,KAAK,SAAS,SAAS,KAAK,IAAI,KAAK,KAAK;AAChD,cAAU,UAAU,GAAG,CAAC;AACxB,cAAU,UAAU,CAAC,GAAG,CAAC;AACzB,cAAU,UAAU,CAAC,GAAG,CAAC,CAAC;AAC1B,cAAU,UAAU,GAAG,CAAC,CAAC;AACzB,UAAM,cAAc,SAAS,SAAS;AACtC,aAASC,KAAI,GAAGA,KAAI,cAAc,GAAGA,MAAK,GAAG;AAC3C,gBAAU,KAAKA,IAAGA,KAAI,GAAGA,KAAI,GAAGA,IAAGA,KAAI,GAAGA,KAAI,CAAC;AAAA,IACjD;AACA,UAAM,IAAI,cAAc;AACxB,cAAU,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC;AACnC,aAAS,aAAa,YAAY,IAAI,uBAAuB,UAAU,CAAC,CAAC;AACzE,aAAS,SAAS,SAAS;AAC3B,UAAM,QAAQ;AACd,SAAK,OAAO;AACZ,UAAM,WAAW,KAAK;AACtB,aAAS,OAAO;AAChB,aAAS,cAAc;AACvB,aAAS,UAAU;AACnB,SAAK,cAAc;AACnB,SAAK,gBAAgB,IAAI,OAAO;AAChC,SAAK,WAAW,IAAI,KAAK,IAAI,cAAc,KAAK,IAAI,SAAS,KAAK,IAAI,OAAO,CAAC;AAC9E,SAAK,SAAS,UAAU;AACxB,SAAK,SAAS,SAAS,OAAO;AAC9B,SAAK,IAAI,KAAK,QAAQ;AAGtB,SAAK,SAAS,IAAI,KAAK,IAAI,YAAY,KAAK,IAAI,IAAI,QAAQ,KAAK,IAAI,QAAQ,KAAK,IAAI,IAAI,MAAM,CAAC;AACjG,SAAK,OAAO,UAAU;AACtB,SAAK,OAAO,SAAS,OAAO;AAC5B,SAAK,IAAI,KAAK,MAAM;AACpB,gBAAY,UAAU,KAAK,QAAQ;AACnC,YAAQ,MAAM;AAAA,MACZ,KAAK;AACH,aAAK,QAAQ,CAAC,KAAK,KAAK,CAAC;AACzB,aAAK,eAAe,YAAY,IAAI;AACpC,aAAK,SAAS,IAAI,KAAK;AACvB;AAAA,MACF,KAAK;AACH,aAAK,eAAe,YAAY,IAAI;AACpC,aAAK,SAAS,IAAI,KAAK;AAAA,IAC3B;AACA,UAAM,OAAO,IAAI,IAAI;AACrB,SAAK,OAAO,SAAS,KAAK,KAAK,IAAI,UAAU,IAAI,YAAY,IAAI;AACjE,UAAM,OAAO,IAAI,KAAK,MAAM;AAC5B,SAAK,eAAe;AAAA,EACtB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,OAAO,SAAS,SAAS;AAC9B,YAAQ,IAAI,SAAS,CAAC,OAAO;AAC7B,SAAK,SAAS,UAAU;AACxB,UAAM,YAAY,MAAM,2BAA2B,SAAS,KAAK,QAAQ;AACzE,SAAK,SAAS,UAAU;AACxB,WAAO,aAAa,OAAO,OAAO,UAAU;AAAA,EAC9C;AAAA,EACA,eAAe,OAAO,SAAS,SAAS;AACtC,SAAK,SAAS,MAAM,IAAI,KAAM,KAAM,GAAI;AACxC,SAAK,SAAS,kBAAkB;AAChC,UAAM,YAAY,KAAK,OAAO,OAAO,SAAS,OAAO;AACrD,SAAK,SAAS,MAAM,IAAI,GAAG,GAAG,CAAC;AAC/B,WAAO;AAAA,EACT;AAAA,EACA,uBAAuB,OAAO,YAAY;AACxC,SAAK,OAAO,UAAU;AACtB,UAAM,YAAY,MAAM,kBAAkB,YAAY,KAAK,MAAM;AACjE,SAAK,OAAO,UAAU;AACtB,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,aAAa,QAAQ;AACvB,cAAU;AACV,QAAI,KAAK,SAAS,QAAQ;AACxB,WAAK,SAAS,IAAI,KAAK,eAAe;AAAA,IACxC,OAAO;AACL,WAAK,SAAS,IAAI,KAAK,eAAe;AAAA,IACxC;AAAA,EACF;AAAA,EACA,IAAI,eAAe;AACjB,QAAI,KAAK,SAAS,QAAQ;AACxB,aAAO,KAAK,SAAS,IAAI,KAAK;AAAA,IAChC,OAAO;AACL,aAAO,KAAK,SAAS,IAAI,KAAK;AAAA,IAChC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,KAAK,SAAS;AAChB,SAAK,cAAc,UAAU,cAAc;AAAA,EAC7C;AAAA;AAAA;AAAA;AAAA,EAIA,cAAc,OAAO;AACnB,UAAM,WAAW,KAAK;AACtB,aAAS,UAAU,KAAK,cAAc,OAAO,SAAS,SAAS,KAAK,aAAa,OAAO,CAAC;AACzF,SAAK,UAAU,SAAS,UAAU;AAAA,EACpC;AAAA;AAAA;AAAA;AAAA,EAIA,UAAU;AACR,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,IACF,IAAI,KAAK;AACT,aAAS,QAAQ;AACjB,aAAS,QAAQ;AACjB,SAAK,OAAO,SAAS,QAAQ;AAC7B,SAAK,OAAO,SAAS,QAAQ;AAC7B,SAAK,SAAS,QAAQ;AACtB,SAAK,SAAS,QAAQ;AACtB,SAAK,OAAO,iBAAiB;AAC7B,SAAK,iBAAiB;AAAA,EACxB;AACF;;;AClKO,IAAM,aAAa,CAAC,OAAO,UAAU;AAAA,EAC1C,MAAM;AAAA,EACN,QAAQ;AAAA,EACR;AACF;AAmBO,IAAM,mBAAoB,uBAAM;AACrC,QAAMC,SAAQ,CAAC;AACf,QAAM,uBAAuB;AAC7B,SAAO,iBAAe;AACpB,UAAM,WAAW;AACjB,QAAI,YAAYA,QAAO;AACrB,aAAOA,OAAM,QAAQ;AAAA,IACvB;AACA,UAAM,cAAc,CAAC;AACrB,QAAI,kBAAkB;AACtB,WAAO,aAAa;AAClB,UAAI,EAAE,kBAAkB,sBAAsB;AAE5C,sBAAc;AACd;AAAA,MACF;AACA,YAAM,wBAAwB,gBAAgB,WAAW;AACzD,YAAM,aAAa,sBAAsB,MAAM,CAAC;AAChD,UAAI,cAAc,QAAQ,WAAW,MAAM,WAAW,GAAG;AACvD;AAAA,MACF;AACA,kBAAY,KAAK,UAAU;AAC3B,oBAAc,sBAAsB;AAAA,IACtC;AACA,WAAOA,OAAM,QAAQ,IAAI;AAAA,EAC3B;AACF,GAAG;AAMH,IAAM,kBAAmB,uBAAM;AAC7B,QAAM,cAAc;AACpB,QAAM,iBAAiB;AACvB,QAAM,uBAAuB;AAC7B,QAAM,iCAAiC;AACvC,QAAM,kBAAkB;AACxB,SAAO,iBAAe;AACpB,UAAM,QAAQ,CAAC;AACf,WAAO,YAAY,QAAQ;AACzB,oBAAc,YAAY,KAAK;AAC/B,UAAI,qBAAqB,KAAK,WAAW,GAAG;AAC1C;AAAA,MACF,WAAW,YAAY,CAAC,MAAM,gCAAgC;AAC5D,cAAM;AAAA,UACJ;AAAA,UACA;AAAA,QACF,IAAI,uBAAuB,WAAW;AACtC,sBAAc;AACd,cAAM,KAAK;AAAA,UACT,MAAM;AAAA,UACN,MAAM;AAAA,YACJ,MAAM;AAAA,YACN,OAAO;AAAA,UACT;AAAA,UACA,WAAW;AAAA,QACb,CAAC;AAAA,MACH,WAAW,YAAY,KAAK,WAAW,GAAG;AACxC,cAAM,mBAAmB,WAAW,WAAW;AAC/C,cAAM,YAAY,iBAAiB,MAAM,CAAC;AAC1C,sBAAc,iBAAiB;AAC/B,YAAI,YAAY,CAAC,MAAM,gCAAgC;AACrD,gBAAM;AAAA,YACJ;AAAA,YACA;AAAA,UACF,IAAI,uBAAuB,WAAW;AACtC,gBAAM,KAAK;AAAA,YACT,MAAM;AAAA,YACN,MAAM;AAAA,YACN,WAAW;AAAA,UACb,CAAC;AACD,wBAAc;AAAA,QAChB,OAAO;AACL,gBAAM,KAAK,SAAS;AAAA,QACtB;AAAA,MACF,WAAW,eAAe,KAAK,WAAW,GAAG;AAE3C,cAAM,KAAK;AAAA,UACT,MAAM;AAAA,UACN,OAAO,YAAY,CAAC;AAAA,QACtB,CAAC;AACD,sBAAc,YAAY,MAAM,CAAC;AAAA,MACnC,OAAO;AACL,cAAM;AAAA,UACJ;AAAA,UACA;AAAA,QACF,IAAI,YAAY,CAAC,MAAM,kBAAkB,SAAS,WAAW,IAAI,YAAY,WAAW;AAGxF,YAAI,MAAM,WAAW,GAAG;AACtB;AAAA,QACF;AACA,cAAM,KAAK,MAAM,CAAC,CAAC;AACnB,sBAAc;AAAA,MAChB;AAAA,IACF;AACA,WAAO;AAAA,MACL,OAAO,CAAC;AAAA,QACN,MAAM;AAAA,QACN;AAAA,MACF,CAAC;AAAA,MACD,gBAAgB;AAAA,IAClB;AAAA,EACF;AACF,GAAG;AAIH,IAAM,aAAc,uBAAM;AACxB,QAAM,eAAe;AACrB,SAAO,iBAAe;AACpB,UAAM,QAAQ,YAAY,MAAM,YAAY;AAC5C,UAAM,QAAQ,SAAS,OAAO,cAAc,YAAY,OAAO,GAAG,MAAM,KAAK;AAC7E,UAAM,iBAAiB,SAAS,OAAO,KAAK,YAAY,OAAO,MAAM,KAAK;AAC1E,WAAO;AAAA,MACL,OAAO,CAAC;AAAA,QACN,MAAM;AAAA,QACN,OAAO;AAAA,MACT,CAAC;AAAA,MACD;AAAA,IACF;AAAA,EACF;AACF,GAAG;AAMH,IAAM,cAAe,uBAAM;AAEzB,QAAM,WAAW;AACjB,QAAM,UAAU;AAChB,QAAM,gBAAgB;AACtB,SAAO,iBAAe;AACpB,UAAM,aAAa,YAAY,MAAM,QAAQ;AAC7C,UAAM,QAAQ,cAAc,OAAO,MAAM,WAAW,CAAC;AACrD,kBAAc,SAAS,OAAO,cAAc,YAAY,MAAM,MAAM,MAAM;AAC1E,UAAM,YAAY,YAAY,MAAM,OAAO;AAC3C,QAAI,OAAO,aAAa,QAAQ,UAAU,CAAC,MAAM,KAAK,UAAU,CAAC,IAAI;AACrE,UAAM,iBAAiB,aAAa,OAAO,cAAc,YAAY,MAAM,KAAK,MAAM;AACtF,QAAI,QAAQ,QAAQ,CAAC,cAAc,KAAK,IAAI,GAAG;AAC7C,aAAO;AAAA,IACT;AACA,WAAO;AAAA,MACL,OAAO,CAAC;AAAA,QACN,MAAM;AAAA,QACN,QAAQ,WAAW,KAAK,KAAK;AAAA,QAC7B;AAAA,MACF,CAAC;AAAA,MACD;AAAA,IACF;AAAA,EACF;AACF,GAAG;AAIH,IAAM,WAAY,uBAAM;AAEtB,QAAM,SAAS;AACf,SAAO,iBAAe;AACpB,kBAAc,YAAY,MAAM,CAAC,EAAE,KAAK;AACxC,UAAM,WAAW,YAAY,MAAM,MAAM;AACzC,UAAM,QAAQ,YAAY,OAAO,CAAC,IAAI,CAAC;AAAA,MACrC,MAAM;AAAA,MACN,OAAO,SAAS,CAAC;AAAA,IACnB,CAAC;AACD,WAAO;AAAA,MACL;AAAA,MACA,gBAAgB,YAAY,OAAO,cAAc,YAAY,MAAM,SAAS,CAAC,EAAE,MAAM;AAAA,IACvF;AAAA,EACF;AACF,GAAG;AAKH,IAAM,yBAAyB,iBAAe;AAC5C,QAAM,kBAAkB,CAAC;AAEzB,gBAAc,YAAY,MAAM,CAAC,EAAE,KAAK;AACxC,SAAO,YAAY,QAAQ;AACzB,UAAM,wBAAwB,gBAAgB,WAAW;AACzD,oBAAgB,KAAK,sBAAsB,MAAM,CAAC,CAAC;AACnD,kBAAc,sBAAsB,eAAe,KAAK;AACxD,QAAI,YAAY,CAAC,MAAM,KAAK;AAC1B,oBAAc,YAAY,MAAM,CAAC,EAAE,KAAK;AAAA,IAC1C,WAAW,YAAY,CAAC,MAAM,KAAK;AAEjC,oBAAc,YAAY,MAAM,CAAC;AACjC;AAAA,IACF;AAAA,EACF;AACA,SAAO;AAAA,IACL,OAAO;AAAA,IACP,gBAAgB;AAAA,EAClB;AACF;AACA,IAAM,gBAAgB,OAAO,cAAc;AAMpC,IAAM,YAAN,MAAgB;AAAA,EACrB,YAAY,cAAc;AACxB,SAAK,aAAa,IAAI;AAAA,EACxB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,KAAK,KAAK,UAAU;AAClB,UAAM,YAAY,IAAI,MAAM;AAC5B,WAAO,UAAU,QAAQ;AACvB,YAAM,OAAO,UAAU,MAAM;AAC7B,UAAI,KAAK,aAAa,EAAE,QAAQ,KAAK,IAAI,IAAI,IAAI;AAC/C,iBAAS,IAAI;AAAA,MACf;AACA,cAAQ,KAAK,MAAM;AAAA,QACjB,KAAK;AACH,oBAAU,QAAQ,GAAG,KAAK,KAAK;AAC/B;AAAA,QACF,KAAK;AACH,oBAAU,QAAQ,KAAK,MAAM,GAAG,KAAK,SAAS;AAC9C;AAAA,MACJ;AAAA,IACF;AAAA,EACF;AACF;AACO,IAAM,OAAO,OAAO,OAAO;AAAA,EAChC,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,MAAM;AACR,CAAC;;;ACvPM,IAAM,mBAAmB,CAACC,aAAY,sBAAsB,MAAM;AACvE,MAAI;AAAA,IACF;AAAA,IACA;AAAA,EACF,IAAIA;AACJ,MAAI,CAAC,SAAS,MAAM,GAAG;AACrB,aAAS;AACT,WAAO;AAAA,EACT,WAAWA,YAAW,SAAS,SAASA,YAAW,QAAQ,MAAM;AAC/D,WAAOA;AAAA,EACT;AACA,QAAM,iBAAiB,SAAS,SAAS,UAAU;AACnD,QAAM,QAAQ,iBAAiB,SAAS;AACxC,QAAM,UAAU,QAAQ,KAAK,KAAK;AAClC,SAAO;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,MAAM;AAAA,EACR;AACF;AAqCO,IAAM,qBAAqB,CAACC,aAAY,qBAAqB,MAAM;AACxE,MAAI;AAAA,IACF;AAAA,IACA;AAAA,EACF,IAAIA;AACJ,MAAI,CAAC,SAAS,MAAM,GAAG;AACrB,aAAS;AACT,WAAO;AAAA,EACT,WAAWA,YAAW,SAAS,KAAK;AAClC,WAAOA;AAAA,EACT;AACA,MAAI;AACJ,UAAQ,MAAM;AAAA,IACZ;AACE,cAAQ;AACR;AAAA,IACF,KAAK;AACH,cAAQ,IAAI;AACZ;AAAA,IACF,KAAK;AACH,cAAQ,IAAI;AACZ;AAAA,EACJ;AACA,QAAM,QAAQ,QAAQ;AACtB,SAAO;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,MAAM;AAAA,EACR;AACF;AASO,IAAM,gBAAiB,uBAAM;AAClC,QAAM,WAAW,UAAQ;AACzB,QAAM,kBAAkB;AAAA,IACtB,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,IACL,MAAM;AAAA,IACN,MAAM;AAAA,EACR;AACA,SAAO,CAAC,MAAM,WAAW,SAAS;AAChC,QAAI,CAAC,SAAS,KAAK,MAAM,GAAG;AAC1B,WAAK,SAAS,SAAS;AACvB,WAAK,OAAO,SAAS;AAAA,IACvB;AACA,UAAM;AAAA,MACJ;AAAA,IACF,IAAI;AACJ,QAAI,QAAQ,MAAM;AAChB,aAAO;AAAA,IACT;AACA,UAAM,YAAY,gBAAgB,IAAI;AACtC,QAAI,aAAa,MAAM;AACrB,aAAO;AAAA,IACT;AACA,WAAO,UAAU,IAAI;AAAA,EACvB;AACF,GAAG;;;AClIH,IAAIC;AAAJ,IAAQC;AAAR,IAAY;AAGZ,IAAM,YAAY,OAAO,UAAU;AACnC,IAAM,aAAa,OAAO,WAAW;AAW9B,IAAM,YAAN,MAAM,WAAU;AAAA,EACrB,cAAc;AACZ,SAAKD,GAAE,IAAI;AAAA,EACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,OAAO,eAAe,MAAM,QAAQ,MAAM;AACxC,QAAI,gBAAgB,YAAW;AAC7B,aAAO;AAAA,IACT;AACA,QAAI,KAAK,SAAS,UAAU;AAC1B,UAAI,KAAK,SAAS,KAAK;AACrB,eAAO,IAAI,oBAAoB,MAAM,KAAK;AAAA,MAC5C;AACA,aAAO;AAAA,IACT;AACA,YAAQ,KAAK,KAAK,OAAO;AAAA,MACvB,KAAK;AACH,eAAO,IAAI,cAAc,MAAM,KAAK;AAAA,MACtC,KAAK;AACH,eAAO,IAAI,aAAa,IAAI;AAAA,IAChC;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,OAAO,SAAS,aAAa;AAC3B,QAAI,uBAAuB,YAAW;AACpC,aAAO,YAAY,SAAS;AAAA,IAC9B;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,WAAW,aAAa;AAC7B,QAAI,uBAAuB,YAAW;AACpC,aAAO,YAAY;AAAA,IACrB;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA0BA,OAAO,gBAAgB,WAAW,YAAY;AAC5C,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,IACF,IAAI;AACJ,UAAM;AAAA,MACJ;AAAA,IACF,IAAI;AACJ,WAAO,MAAM,IAAI,CAAC,WAAW,UAAU;AAErC,YAAM,qBAAqB,KAAK,KAAK,KAAK,OAAO,YAAY,KAAK,KAAK;AAGvE,UAAI,gBAAgB,UAAU,KAAK,IAAI,UAAU,KAAK,IAAI;AAE1D,UAAI,cAAc,SAAS,SAAS;AAClC,cAAM,UAAU,cAAc;AAE9B,YAAI,WAAW,UAAU;AACvB,0BAAgB,SAAS,OAAO,EAAE,KAAK;AAAA,QACzC;AAAA,MACF;AAGA,UAAI,iBAAiB,QAAQ,cAAc,SAAS,SAAS;AAC3D,wBAAgB;AAAA,MAClB;AAEA,UAAI,cAAc,SAAS,KAAK;AAC9B,eAAO,WAAW,cAAc,SAAS,MAAM,UAAU,QAAQ,UAAU,IAAI;AAAA,MACjF;AAEA,sBAAgB,cAAc,eAAe,SAAS;AAEtD,UAAI,cAAc,SAAS,UAAU,MAAM;AACzC,eAAO;AAAA,MACT;AAEA,aAAO;AAAA,IACT,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,IAAI,aAAa;AACf,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,WAAW;AACT,QAAI,CAAC,KAAK,cAAc,KAAK,UAAU,KAAK,MAAM;AAChD,WAAK,UAAU,IAAI,KAAK,SAAS,EAAE;AAAA,IACrC;AACA,WAAO,KAAK,UAAU;AAAA,EACxB;AACF;AACAA,MAAK;AACL,IAAM,cAAc,OAAO,YAAY;AACvC,IAAM,SAAS,OAAO,OAAO;AAKtB,IAAM,sBAAN,cAAkC,UAAU;AAAA,EACjD,YAAY,YAAY,OAAO;AAC7B,UAAM;AACN,SAAK,WAAW,IAAI;AACpB,SAAK,MAAM,IAAI;AAAA,EACjB;AAAA,EACA,IAAI,aAAa;AACf,WAAO;AAAA,EACT;AAAA,EACA,CAAC,SAAS,IAAI;AACZ,WAAO,WAAW,KAAK,WAAW,EAAE,SAAS,MAAM,KAAK,MAAM,EAAE,QAAQ,KAAK,MAAM,EAAE,IAAI;AAAA,EAC3F;AACF;AACA,IAAM,aAAa,OAAO,WAAW;AAmB9B,IAAM,eAAN,cAA2B,UAAU;AAAA,EAC1C,YAAY,aAAa;AACvB,UAAM;AACN,SAAKC,GAAE,IAAI;AACX,UAAM,YAAY,YAAY,UAAU,SAAS,YAAY,UAAU,CAAC,EAAE,MAAM,CAAC,IAAI;AACrF,QAAI,aAAa,QAAQ,UAAU,SAAS,SAAS;AACnD,WAAK,UAAU,IAAI;AAAA,IACrB;AAAA,EACF;AAAA,EACA,IAAI,aAAa;AACf,WAAO;AAAA,EACT;AAAA,EACA,EAAEA,MAAK,YAAY,UAAU,IAAI;AAC/B,QAAI,KAAK,UAAU,KAAK,MAAM;AAC5B,cAAQ,KAAK,UAAU,EAAE,OAAO;AAAA,QAC9B,KAAK;AACH,gBAAM,yBAAyB,OAAO;AACtC,gBAAM,oBAAoB,KAAK,IAAI,SAAS,KAAK,cAAc,SAAS,KAAK,cAAc,SAAS,gBAAgB,cAAc,SAAS,gBAAgB,cAAc,SAAS,gBAAgB,YAAY;AAC9M,gBAAM,UAAU,0BAA0B,oBAAoB,OAAO,gBAAgB;AACrF,iBAAO;AAAA,YACL,MAAM;AAAA,YACN,QAAQ;AAAA,YACR,MAAM;AAAA,UACR;AAAA,MACJ;AAAA,IACF;AACA,WAAO;AAAA,EACT;AACF;AACA,IAAM,uBAAuB;AAC7B,IAAM,aAAa,OAAO,WAAW;AAa9B,IAAM,gBAAN,cAA4B,UAAU;AAAA,EAC3C,YAAY,cAAc,QAAQ,MAAM;AACtC,UAAM;AACN,SAAK,EAAE,IAAI;AACX,QAAI,aAAa,UAAU,WAAW,GAAG;AACvC;AAAA,IACF;AACA,UAAM,QAAQ,aAAa,UAAU,CAAC,EAAE,MAAM,MAAM;AACpD,UAAM,mBAAmB,CAAC;AAC1B,WAAO,MAAM,QAAQ;AACnB,YAAM,OAAO,MAAM,MAAM;AACzB,UAAI,iBAAiB,SAAS,GAAG;AAC/B,cAAM,eAAe,iBAAiB,iBAAiB,SAAS,CAAC;AACjE,YAAI,aAAa,SAAS,cAAc,qBAAqB,KAAK,aAAa,KAAK,GAAG;AACrF,gBAAM,WAAW,iBAAiB,IAAI;AACtC,gBAAM,YAAY,iBAAiB,IAAI;AACvC,cAAI,aAAa,MAAM;AACrB;AAAA,UACF;AACA,2BAAiB,KAAK,IAAI,kBAAkB,UAAU,UAAU,eAAe,WAAW,KAAK,GAAG,UAAU,eAAe,MAAM,KAAK,CAAC,CAAC;AACxI;AAAA,QACF;AAAA,MACF;AACA,uBAAiB,KAAK,KAAK,SAAS,aAAa,OAAO,UAAU,eAAe,MAAM,KAAK,CAAC;AAAA,IAC/F;AACA,WAAO,iBAAiB,SAAS,GAAG;AAClC,YAAM,CAAC,MAAM,UAAU,KAAK,IAAI,iBAAiB,OAAO,GAAG,CAAC;AAC5D,UAAI,SAAS,SAAS,YAAY;AAChC;AAAA,MACF;AACA,uBAAiB,QAAQ,IAAI,kBAAkB,UAAU,UAAU,eAAe,MAAM,KAAK,GAAG,UAAU,eAAe,OAAO,KAAK,CAAC,CAAC;AAAA,IACzI;AAEA,QAAI,iBAAiB,WAAW,GAAG;AACjC,WAAK,UAAU,IAAI,iBAAiB,CAAC;AAAA,IACvC;AAAA,EACF;AAAA,EACA,IAAI,aAAa;AACf,WAAO,KAAK,UAAU,KAAK,QAAQ,UAAU,WAAW,KAAK,UAAU,CAAC;AAAA,EAC1E;AAAA,EACA,EAAE,KAAK,YAAY,UAAU,IAAI;AAC/B,WAAO,KAAK,UAAU,KAAK,OAAO,UAAU,SAAS,KAAK,UAAU,CAAC,IAAI;AAAA,EAC3E;AACF;AACA,IAAM,YAAY,OAAO,UAAU;AACnC,IAAM,QAAQ,OAAO,MAAM;AAC3B,IAAM,SAAS,OAAO,OAAO;AAYtB,IAAM,oBAAN,cAAgC,UAAU;AAAA,EAC/C,YAAY,UAAU,MAAM,OAAO;AACjC,UAAM;AACN,SAAK,SAAS,IAAI;AAClB,SAAK,KAAK,IAAI;AACd,SAAK,MAAM,IAAI;AAAA,EACjB;AAAA,EACA,IAAI,aAAa;AACf,WAAO,UAAU,WAAW,KAAK,KAAK,CAAC,KAAK,UAAU,WAAW,KAAK,MAAM,CAAC;AAAA,EAC/E;AAAA,EACA,CAAC,SAAS,IAAI;AACZ,UAAM,WAAW,cAAc,UAAU,SAAS,KAAK,KAAK,CAAC,CAAC;AAC9D,UAAM,YAAY,cAAc,UAAU,SAAS,KAAK,MAAM,CAAC,CAAC;AAChE,UAAM;AAAA,MACJ,QAAQ;AAAA,MACR,MAAM;AAAA,IACR,IAAI;AACJ,UAAM;AAAA,MACJ,QAAQ;AAAA,MACR,MAAM;AAAA,IACR,IAAI;AAEJ,QAAI,aAAa,QAAQ,YAAY,QAAQ,aAAa,UAAU;AAClE,aAAO;AAAA,IACT;AAKA,UAAM,OAAO,YAAY;AACzB,QAAI;AACJ,YAAQ,KAAK,SAAS,EAAE,OAAO;AAAA,MAC7B,KAAK;AACH,gBAAQ,YAAY;AACpB;AAAA,MACF,KAAK;AACH,gBAAQ,YAAY;AACpB;AAAA,MACF,KAAK;AACH,gBAAQ,YAAY;AACpB;AAAA,MACF,KAAK;AACH,gBAAQ,YAAY;AACpB;AAAA,MACF;AACE,eAAO;AAAA,IACX;AACA,WAAO;AAAA,MACL,MAAM;AAAA,MACN,QAAQ;AAAA,MACR;AAAA,IACF;AAAA,EACF;AACF;AACA,IAAM,gBAAgB,OAAO,cAAc;AAC3C,IAAM,cAAc,OAAO,YAAY;AAYhC,IAAM,iBAAN,cAA6B,UAAU;AAAA,EAC5C,YAAY,aAAa,YAAY;AACnC,UAAM;AACN,SAAK,WAAW,IAAI;AACpB,UAAM,kBAAkB,YAAY,CAAC;AACrC,UAAM,QAAQ,mBAAmB,OAAO,gBAAgB,QAAQ,CAAC;AACjE,SAAK,aAAa,IAAI,WAAW,MAAM,IAAI,CAAC,WAAW,UAAU;AAC/D,YAAM,OAAO,MAAM,KAAK;AACxB,UAAI,QAAQ,MAAM;AAChB,eAAO;AAAA,UACL,MAAM;AAAA,UACN,OAAO;AAAA,QACT;AAAA,MACF;AACA,UAAI,KAAK,SAAS,SAAS;AACzB,eAAO;AAAA,MACT;AACA,aAAO,UAAU,eAAe,MAAM,SAAS;AAAA,IACjD,CAAC;AAAA,EACH;AAAA,EACA,IAAI,aAAa;AACf,eAAW,eAAe,KAAK,aAAa,GAAG;AAC7C,UAAI,CAAC,UAAU,WAAW,WAAW,GAAG;AACtC,eAAO;AAAA,MACT;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA,EACA,CAAC,SAAS,IAAI;AACZ,UAAM,YAAY,KAAK,aAAa,EAAE,IAAI,iBAAe,UAAU,SAAS,WAAW,CAAC;AACxF,WAAO,UAAU,gBAAgB,WAAW,KAAK,WAAW,CAAC,EAAE,IAAI,CAAAC,gBAAcA,YAAW,MAAM;AAAA,EACpG;AACF;;;AC1YA,IAAIC;AAAJ,IAAQC;AAAR,IAAYC;AAAZ,IAAgB;AAEhB,IAAM,aAAa,OAAO,WAAW;AACrC,IAAM,oBAAoB,OAAO,kBAAkB;AACnD,IAAM,sBAAsB,OAAO,oBAAoB;AACvD,IAAM,mBAAmB,OAAO,iBAAiB;AACjD,IAAM,UAAU,OAAO,QAAQ;AAC/B,IAAM,kBAAkB,OAAO,UAAU;AASzC,IAAM,iBAAN,MAAM,gBAAe;AAAA,EACnB,QAAQ,gBAAgB,IAAI;AAC1B,eAAW,YAAY,gBAAe,UAAU,GAAG;AACjD,eAAS,OAAO,EAAE;AAAA,IACpB;AAAA,EACF;AAAA,EACA,SAASF,MAAK,YAAY,kBAAkB,IAAI;AAC9C,WAAO,iBAAiB,UAAU,KAAK,gBAAgB,GAAG;AAAA,MACxD,SAAS;AAAA,IACX,CAAC;AAAA,EACH;AAAA,EACA,QAAQ,mBAAmB,IAAI;AAC7B,WAAO,oBAAoB,UAAU,KAAK,gBAAgB,CAAC;AAAA,EAC7D;AAAA,EACA,YAAY,UAAU;AACpB,SAAK,eAAe,IAAI;AAAA,EAC1B;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,UAAU;AACR,QAAI,gBAAe,UAAU,EAAE,SAAS,GAAG;AACzC,sBAAe,iBAAiB,EAAE;AAAA,IACpC;AACA,oBAAe,UAAU,EAAE,IAAI,IAAI;AAAA,EACrC;AAAA;AAAA;AAAA;AAAA,EAIA,aAAa;AACX,oBAAe,UAAU,EAAE,OAAO,IAAI;AACtC,QAAI,gBAAe,UAAU,EAAE,SAAS,GAAG;AACzC,sBAAe,mBAAmB,EAAE;AAAA,IACtC;AAAA,EACF;AAAA,EACA,CAAC,OAAO,IAAI;AACV,SAAK,eAAe,EAAE;AAAA,EACxB;AACF;AACA,eAAeA,GAAE,IAAI,oBAAI,IAAI;AAC7B,IAAM,wBAAwB,OAAO,sBAAsB;AAC3D,IAAM,aAAa,OAAO,WAAW;AACrC,IAAM,gBAAgB,OAAO,cAAc;AAC3C,IAAM,YAAY,OAAO,UAAU;AAoB5B,IAAM,gBAAN,MAAoB;AAAA,EACzB,YAAY,UAAU;AACpB,SAAKC,GAAE,IAAI,CAAC;AACZ,SAAKC,GAAE,IAAI,IAAI,UAAU,CAAC,UAAU,CAAC;AACrC,SAAK,EAAE,IAAI,MAAM;AACf,WAAK,qBAAqB,EAAE;AAAA,QAC1B,cAAc;AAAA,MAChB,CAAC;AAAA,IACH;AACA,SAAK,qBAAqB,IAAI;AAAA,EAChC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,kBAAkB,KAAK;AACrB,UAAM,kBAAkB,CAAC;AACzB,UAAM,kBAAkB,KAAK,aAAa;AAC1C,SAAK,UAAU,EAAE,KAAK,KAAK,kBAAgB;AACzC,YAAM;AAAA,QACJ;AAAA,MACF,IAAI;AACJ,YAAM,gBAAgB,aAAa,UAAU,CAAC;AAC9C,YAAM,YAAY,cAAc,MAAM,CAAC;AACvC,UAAI,KAAK,UAAU,SAAS,aAAa,QAAQ,UAAU,SAAS,SAAS;AAC3E;AAAA,MACF;AACA,cAAQ,UAAU,OAAO;AAAA,QACvB,KAAK;AACH,cAAI,gBAAgB,eAAe,KAAK,MAAM;AAC5C,kBAAM,WAAW,mBAAmB,kBAAkB,gBAAgB,eAAe,IAAI,IAAI,eAAe,KAAK,SAAS,CAAC;AAC3H,qBAAS,QAAQ;AACjB,mBAAO,gBAAgB,eAAe;AACtC,4BAAgB,eAAe,IAAI;AAAA,UACrC;AACA;AAAA,MACJ;AAAA,IACF,CAAC;AACD,eAAW,oBAAoB,iBAAiB;AAC9C,YAAM,WAAW,gBAAgB,gBAAgB;AACjD,eAAS,WAAW;AAAA,IACtB;AACA,SAAK,aAAa,IAAI;AAAA,EACxB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,UAAU;AACR,eAAW,oBAAoB,KAAK,aAAa,GAAG;AAClD,YAAM,WAAW,KAAK,aAAa,EAAE,gBAAgB;AACrD,eAAS,WAAW;AAAA,IACtB;AAAA,EACF;AACF;AACAD,MAAK,eAAeC,MAAK,YAAY,KAAK;;;ACtGnC,IAAM,QAAQ,YAAU;AAC7B,QAAM,iBAAiB,OAAO,kBAAkB;AAChD,QAAM,gBAAgB,OAAO,sBAAsB,WAAW,OAAO,aAAa,MAAM,OAAO;AAC/F,SAAO,CAAC,OAAO,iBAAiB;AAC9B,UAAM,kBAAkB,MAAM;AAC9B,UAAM,4BAA4B,MAAM;AACxC,UAAM,+BAA+B,MAAM;AAC3C,UAAM,iBAAiB,OAAO,GAAG,YAAY,eAAe;AAC5D,UAAM,kBAAkB,OAAO,GAAG,YAAY,gBAAgB;AAC9D,UAAM,mBAAmB,OAAO,GAAG,YAAY,iBAAiB;AAChE,UAAM,mBAAmB,OAAO,GAAG,YAAY,iBAAiB;AAChE,WAAO,iBAAiB,OAAO;AAAA,MAC7B,CAAC,cAAc,GAAG;AAAA,QAChB,OAAO;AAAA,QACP,UAAU;AAAA,MACZ;AAAA,MACA,CAAC,eAAe,GAAG;AAAA,QACjB,OAAO;AAAA,QACP,UAAU;AAAA,MACZ;AAAA,MACA,CAAC,gBAAgB,GAAG;AAAA,QAClB,OAAO,WAAY;AACjB,gBAAM,MAAM,iBAAiB,KAAK,YAAY,CAAC;AAC/C,eAAK,eAAe,IAAI,IAAI,eAAe,KAAK,cAAc,IAAI,CAAC;AACnE,cAAI,KAAK,cAAc,KAAK,QAAQ,gBAAgB;AAClD,iBAAK,cAAc,IAAI,IAAI,cAAc,MAAM,KAAK,gBAAgB,EAAE,CAAC;AAAA,UACzE;AACA,cAAI,KAAK,cAAc,KAAK,MAAM;AAChC,iBAAK,cAAc,EAAE,kBAAkB,GAAG;AAAA,UAC5C;AAAA,QACF;AAAA,MACF;AAAA,MACA,CAAC,gBAAgB,GAAG;AAAA,QAClB,OAAO,WAAY;AACjB,cAAI,KAAK,eAAe,KAAK,MAAM;AACjC;AAAA,UACF;AACA,gBAAM,SAAS,KAAK,eAAe,EAAE,SAAS;AAG9C,eAAK,OAAO,aAAa,EAAE,MAAM;AAAA,QACnC;AAAA,MACF;AAAA,MACA,SAAS;AAAA,QACP,OAAO,SAAU,mBAAmB;AAIlC,cAAI,kBAAkB,IAAI,YAAY,GAAG;AACvC,iBAAK,gBAAgB,EAAE;AACvB,iBAAK,gBAAgB,EAAE;AAAA,UACzB;AACA,0BAAgB,KAAK,MAAM,iBAAiB;AAAA,QAC9C;AAAA,MACF;AAAA,MACA,mBAAmB;AAAA,QACjB,OAAO,WAAY;AACjB,oCAA0B,KAAK,IAAI;AACnC,eAAK,cAAc,cAAc,KAAK,YAAY,CAAC;AAAA,QACrD;AAAA,MACF;AAAA,MACA,sBAAsB;AAAA,QACpB,OAAO,WAAY;AACjB,uCAA6B,KAAK,IAAI;AACtC,cAAI,KAAK,cAAc,KAAK,MAAM;AAChC,iBAAK,cAAc,EAAE,QAAQ;AAC7B,iBAAK,cAAc,IAAI;AAAA,UACzB;AAAA,QACF;AAAA,MACF;AAAA,IACF,CAAC;AAAA,EACH;AACF;;;ACvGO,IAAM,gBAAgB,CAAAC,OAAKA,KAAI,MAAK,IAAIA,KAAIA,KAAI,MAAM,IAAI,IAAIA,MAAKA;AAKnE,IAAM,cAAc,CAAC,OAAO,KAAK,OAAO,kBAAkB,UAAQ,SAAS,MAAM,SAAS,KAAK,IAAI;AAMnG,IAAM,WAAW,CAAC,QAAQ,YAAY;AAC3C,QAAM,gBAAgB,SAAO,WAAS,OAAO;AAC7C,QAAM,QAAQ,QAAQ,IAAI,cAAc,CAAC,CAAC;AAC1C,SAAO,UAAQ;AACb,WAAO,MAAM,MAAM,GAAG,CAAC;AACvB,YAAQ,MAAM,MAAM,SAAS,CAAC;AAC9B,UAAM,IAAI,MAAM,UAAU,SAAO,OAAO,IAAI;AAC5C,UAAM,QAAQ,IAAI,IAAI,IAAI,MAAM,IAAI,CAAC;AACrC,UAAM,MAAM,MAAM,CAAC;AACnB,WAAO,OAAO,CAAC,GAAG,OAAO,UAAU,MAAM,MAAM;AAAA,EACjD;AACF;AAQO,IAAM,WAAW,UAAQ;AAC9B,QAAM,SAAS,CAAC;AAChB,QAAM,UAAU,CAAC;AACjB,MAAI,YAAY,KAAK;AACrB,WAAS,IAAI,GAAG,IAAI,KAAK,UAAU,QAAQ,EAAE,GAAG;AAC9C,UAAM,WAAW,KAAK,UAAU,CAAC;AACjC,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,IACF,IAAI;AACJ,UAAM,OAAO,SAAS,QAAQ;AAC9B,UAAM,QAAQ,YAAY,WAAW,OAAO,IAAI;AAChD,WAAO,KAAK,KAAK;AACjB,YAAQ,KAAK,MAAM;AACnB,gBAAY;AAAA,EACd;AACA,SAAO,SAAS,QAAQ,OAAO;AACjC;;;ACjDA,IAAIC,cAAwC,SAAU,YAAYC,SAAQ,KAAKC,OAAM;AACnF,MAAIC,KAAI,UAAU,QAChB,IAAIA,KAAI,IAAIF,UAASC,UAAS,OAAOA,QAAO,OAAO,yBAAyBD,SAAQ,GAAG,IAAIC,OAC3FE;AACF,MAAI,OAAO,YAAY,YAAY,OAAO,QAAQ,aAAa,WAAY,KAAI,QAAQ,SAAS,YAAYH,SAAQ,KAAKC,KAAI;AAAA,MAAO,UAAS,IAAI,WAAW,SAAS,GAAG,KAAK,GAAG,IAAK,KAAIE,KAAI,WAAW,CAAC,EAAG,MAAKD,KAAI,IAAIC,GAAE,CAAC,IAAID,KAAI,IAAIC,GAAEH,SAAQ,KAAK,CAAC,IAAIG,GAAEH,SAAQ,GAAG,MAAM;AAC/Q,SAAOE,KAAI,KAAK,KAAK,OAAO,eAAeF,SAAQ,KAAK,CAAC,GAAG;AAC9D;AAeA,IAAM,wBAAwB;AAG9B,IAAM,SAAS,SAAS;AAAA,EACtB,cAAc;AAAA,EACd,WAAW,CAAC;AAAA,IACV,QAAQ;AAAA,IACR,OAAO;AAAA,EACT,GAAG;AAAA,IACD,QAAQ;AAAA,IACR,OAAO;AAAA,EACT,GAAG;AAAA,IACD,QAAQ;AAAA,IACR,OAAO;AAAA,EACT,GAAG;AAAA,IACD,QAAQ;AAAA,IACR,OAAO;AAAA,EACT,GAAG;AAAA,IACD,QAAQ;AAAA,IACR,OAAO;AAAA,EACT,GAAG;AAAA,IACD,QAAQ;AAAA,IACR,OAAO;AAAA,EACT,CAAC;AACH,CAAC;AACD,IAAM,OAAO,SAAS;AAAA,EACpB,cAAc;AAAA,EACd,WAAW,CAAC;AAAA,IACV,QAAQ;AAAA,IACR,OAAO;AAAA,EACT,GAAG;AAAA,IACD,QAAQ;AAAA,IACR,OAAO;AAAA,EACT,GAAG;AAAA,IACD,QAAQ;AAAA,IACR,OAAO;AAAA,EACT,GAAG;AAAA,IACD,QAAQ;AAAA,IACR,OAAO;AAAA,EACT,CAAC;AACH,CAAC;AACM,IAAM,kBAAkB;AACxB,IAAM,sBAAsB;AAC5B,IAAM,uBAAuB;AACpC,IAAM,wBAAwB;AAC9B,IAAM,wBAAwB;AAC9B,IAAM,uBAAuB;AAC7B,IAAM,4BAA4B,CAAC,SAAS,SAAS,QAAQ,MAAM;AACnE,IAAM,sBAAsB,CAAC,UAAU,IAAI,QAAQ;AAC5C,IAAM,uCAAuC;AAC7C,IAAM,qBAAqB;AAC3B,IAAM,4BAA4B;AAAA,EACvC,MAAM;AAAA,EACN,MAAM;AACR;AACO,IAAM,yBAAyB;AAAA,EACpC,OAAO;AAAA,EACP,QAAQ;AACV;AACO,IAAM,cAAc;AAAA,EACzB,OAAO;AAAA,EACP,OAAO;AAAA,EACP,MAAM;AACR;AACO,IAAM,wBAAwB,MAAM;AACzC,SAAO;AAAA,IACL,OAAO,CAAC,iBAAiB,WAAW,iBAAiB,KAAK,CAAC,CAAC;AAAA,IAC5D,UAAU;AAAA,MACR,MAAM,CAAC,IAAI;AAAA,IACb;AAAA,EACF;AACF;AACA,IAAM,2BAA2B,MAAM;AACrC,SAAO;AAAA,IACL,OAAO,CAAC,iBAAiB,WAAW,qBAAqB,KAAK,CAAC,CAAC;AAAA,IAChE,UAAU;AAAA,MACR,MAAM,CAAC,IAAI;AAAA,IACb;AAAA,EACF;AACF;AACO,IAAM,yBAAyB,MAAM;AAC1C,QAAM,eAAe,iBAAiB,oBAAoB,EAAE,CAAC,EAAE;AAC/D,QAAM,QAAQ,cAAc,aAAa,CAAC,CAAC;AAC3C,QAAM,MAAM,cAAc,aAAa,CAAC,CAAC;AACzC,SAAO,aAAW;AAChB,UAAM,SAAS,QAAQ,MAAM,EAAE,oBAAoB;AACnD,WAAO;AAAA,MACL,OAAO,CAAC,OAAO,KAAK,WAAW,QAAQ,GAAG,CAAC;AAAA,MAC3C,UAAU;AAAA,QACR,MAAM,CAAC,MAAM,MAAM,WAAW,KAAK,GAAG,CAAC;AAAA,MACzC;AAAA,IACF;AAAA,EACF;AACF,GAAG;AACH,IAAM,2BAA2B,aAAW;AAC1C,QAAM,SAAS,uBAAuB,QAAQ,MAAM,EAAE,eAAe;AACrE,SAAO;AAAA,IACL,OAAO,CAAC,WAAW,WAAW,KAAK,GAAG,WAAW,GAAG,KAAK,GAAG,WAAW,QAAQ,GAAG,CAAC;AAAA,IACnF,UAAU;AAAA,MACR,MAAM,CAAC,MAAM,MAAM,IAAI;AAAA,IACzB;AAAA,EACF;AACF;AACA,IAAM,2BAA2B,aAAW;AAC1C,QAAM,kBAAkB,sBAAsB,OAAO;AACrD,QAAM,YAAY,IAAI,eAAe,CAAC,GAAG,eAAe;AACxD,QAAM,gBAAgB,UAAU,SAAS,EAAE,CAAC;AAC5C,SAAO;AAAA,IACL,OAAO,CAAC,WAAW,UAAU,KAAK,GAAG,WAAW,KAAK,IAAI,KAAK,GAAG,WAAW,eAAe,GAAG,CAAC;AAAA,IAC/F,UAAU;AAAA,MACR,MAAM,CAAC,MAAM,MAAM,IAAI;AAAA,IACzB;AAAA,EACF;AACF;AACO,IAAM,yBAAyB,aAAW;AAC/C,QAAM,SAAS,QAAQ,MAAM,EAAE,YAAY,UAAU,IAAI,QAAQ,CAAC;AAClE,SAAO;AAAA,IACL,OAAO,CAAC,WAAW,OAAO,GAAG,GAAG,GAAG,WAAW,OAAO,GAAG,GAAG,GAAG,WAAW,OAAO,GAAG,GAAG,CAAC;AAAA,IACvF,UAAU;AAAA,MACR,MAAM,CAAC,MAAM,MAAM,IAAI;AAAA,IACzB;AAAA,EACF;AACF;AACA,IAAM,UAAU,KAAK,KAAK;AAC1B,IAAM,WAAW,KAAK,KAAK;AAC3B,IAAM,aAAa,UAAU;AAC7B,IAAM,MAAM,IAAM,KAAK;AAChB,IAAM,YAAY,OAAO,UAAU;AACnC,IAAM,cAAc,OAAO,YAAY;AACvC,IAAM,iBAAiB,OAAO,eAAe;AAC7C,IAAM,2BAA2B,OAAO,yBAAyB;AACjE,IAAM,4BAA4B,OAAO,0BAA0B;AAC1E,IAAM,0BAA0B,OAAO,wBAAwB;AAC/D,IAAM,cAAc,OAAO,YAAY;AACvC,IAAM,QAAQ,OAAO,MAAM;AAC3B,IAAM,cAAc,OAAO,YAAY;AACvC,IAAM,yBAAyB,OAAO,uBAAuB;AAC7D,IAAM,iBAAiB,OAAO,eAAe;AAC7C,IAAM,YAAY,OAAO,UAAU;AACnC,IAAM,mBAAmB,OAAO,iBAAiB;AACjD,IAAM,uBAAuB,OAAO,qBAAqB;AACzD,IAAM,qBAAqB,OAAO,mBAAmB;AACrD,IAAM,4BAA4B,OAAO,0BAA0B;AACnE,IAAM,oBAAoB,OAAO,kBAAkB;AACnD,IAAM,sBAAsB,OAAO,oBAAoB;AACvD,IAAM,iBAAiB,OAAO,eAAe;AAC7C,IAAM,cAAc,OAAO,YAAY;AACvC,IAAM,eAAe,OAAO,aAAa;AACzC,IAAM,oBAAoB,OAAO,kBAAkB;AACnD,IAAM,mBAAmB,OAAO,iBAAiB;AACjD,IAAM,mBAAmB,OAAO,iBAAiB;AACjD,IAAM,oBAAoB,OAAO,kBAAkB;AACnD,IAAM,sBAAsB,OAAO,oBAAoB;AACvD,IAAM,sBAAsB,OAAO,oBAAoB;AACvD,IAAM,sBAAsB,OAAO,oBAAoB;AACvD,IAAM,sBAAsB,OAAO,oBAAoB;AAChD,IAAM,gBAAgB,CAAAI,wBAAsB;AACjD,MAAIC,MAAIC,MAAIC,KAAIC,KAAIC,KAAIC,KAAIC,KAAIC,KAAIC,KAAIC,KAAIC,KAAIC,KAAIC,KAAI,IAAI,IAAI,IAAI,IAAI;AAAA,EACxE,MAAM,mCAAmCb,oBAAmB;AAAA,IAC1D,cAAc;AACZ,YAAM,GAAG,SAAS;AAClB,WAAK,iBAAiB;AACtB,WAAK,cAAc;AACnB,WAAK,eAAe;AACpB,WAAK,cAAc;AACnB,WAAK,iBAAiB;AACtB,WAAK,iBAAiB;AACtB,WAAK,iBAAiB;AACtB,WAAK,iBAAiB;AACtB,WAAK,6BAA6B;AAClC,WAAK,oBAAoB,0BAA0B;AACnD,WAAK,yBAAyB,uBAAuB;AACrD,WAAK,mBAAmB;AACxB,WAAK,kBAAkB;AACvB,WAAK,iBAAiB;AACtB,WAAK,cAAc,YAAY;AAC/B,WAAK,cAAc;AACnB,WAAK,aAAa;AAClB,WAAK,aAAa;AAClB,WAAK,qBAAqB;AAC1B,WAAK,OAAO;AACZ,WAAKC,IAAE,IAAI,KAAK,WAAW,cAAc,qBAAqB;AAC9D,WAAKC,IAAE,IAAI,KAAK,WAAW,cAAc,SAAS;AAClD,WAAKC,GAAE,IAAI,CAAC,KAAK,WAAW,cAAc,UAAU,GAAG,KAAK,WAAW,cAAc,UAAU,CAAC;AAChG,WAAKC,GAAE,IAAI,KAAK,WAAW,cAAc,aAAa;AACtD,WAAKC,GAAE,IAAI;AACX,WAAKC,GAAE,IAAI;AACX,WAAKC,GAAE,IAAI;AACX,WAAKC,GAAE,IAAI;AACX,WAAKC,GAAE,IAAI,aAAa;AACxB,WAAKC,GAAE,IAAI,IAAI,eAAe,KAAK,MAAM,EAAE,QAAQ,KAAK,iBAAiB,GAAG,KAAK,MAAM,CAAC;AACxF,WAAKC,GAAE,IAAI,IAAI,UAAU;AACzB,WAAKC,GAAE,IAAI;AACX,WAAKC,GAAE,IAAI;AACX,WAAK,EAAE,IAAI;AACX,WAAK,EAAE,IAAI,CAAC;AACZ,WAAK,EAAE,IAAI,MAAM;AACf,cAAM,SAAS,KAAK,SAAS,EAAE;AAC/B,aAAK,mBAAmB,IAAI;AAC5B,YAAI,WAAW,aAAa,kBAAkB;AAC5C,eAAK,kBAAkB,IAAI;AAC3B,eAAK,uBAAuB,EAAE;AAAA,QAChC;AAAA,MACF;AACA,WAAK,EAAE,IAAI,MAAM;AACf,aAAK,WAAW,EAAE;AAClB,aAAK,YAAY,EAAE;AACnB,cAAM,SAAS,KAAK,SAAS,EAAE;AAC/B,aAAK,cAAc,IAAI,YAAY,iBAAiB;AAAA,UAClD,QAAQ;AAAA,YACN;AAAA,UACF;AAAA,QACF,CAAC,CAAC;AAAA,MACJ;AACA,WAAK,EAAE,IAAI,WAAS;AAClB,aAAK,UAAU,EAAE,UAAU,OAAO,oBAAoB,MAAM,SAAS,sBAAsB;AAAA,MAC7F;AAAA,IACF;AAAA,IACA,IAAI,mBAAmB;AACrB,aAAO,KAAK,SAAS,EAAE;AAAA,IACzB;AAAA,IACA,IAAI,iBAAiB,OAAO;AAC1B,WAAK,SAAS,EAAE,mBAAmB;AAAA,IACrC;AAAA,IACA,iBAAiB;AACf,YAAM;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,MACF,IAAI,KAAK,cAAc;AACvB,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,QACA,WAAW;AACT,iBAAO,GAAG,KAAK,KAAK,OAAO,KAAK,GAAG,OAAO,KAAK,MAAM;AAAA,QACvD;AAAA,MACF;AAAA,IACF;AAAA,IACA,kBAAkB;AAChB,aAAO,WAAW,KAAK,SAAS,EAAE,eAAe,KAAK,SAAS,EAAE,WAAW,SAAS,KAAK,MAAM,EAAE,iBAAiB,CAAC;AAAA,IACtH;AAAA,IACA,iBAAiB;AACf,aAAO,KAAK,SAAS,EAAE,eAAe;AAAA,IACxC;AAAA;AAAA,IAEA,wBAAwB;AACtB,aAAO,KAAK,SAAS,EAAE,QAAQ;AAAA,IACjC;AAAA,IACA,wBAAwB;AACtB,aAAO,KAAK,SAAS,EAAE,QAAQ;AAAA,IACjC;AAAA,IACA,iBAAiB;AACf,aAAO,KAAK,MAAM,EAAE;AAAA,IACtB;AAAA,IACA,mBAAmB;AACjB,WAAK,WAAW,IAAI;AACpB,WAAK,cAAc,aAAa,KAAK;AAAA,IACvC;AAAA,IACA,yBAAyB;AACvB,WAAK,iBAAiB,IAAI;AAC1B,WAAK,yBAAyB,IAAI;AAClC,WAAK,kBAAkB,IAAI;AAC3B,WAAK,oBAAoB,IAAI,KAAK,sBAAsB,0BAA0B,QAAQ,KAAK;AAAA,IACjG;AAAA,IACA,KAAK,YAAY;AACf,YAAM,QAAQ,IAAI,WAAW,SAAS;AAAA,QACpC,QAAQ,MAAM;AAAA,MAChB,CAAC;AACD,WAAK,iBAAiB,EAAE,cAAc,KAAK;AAAA,IAC7C;AAAA,IACA,oBAAoB;AAClB,YAAM,kBAAkB;AACxB,WAAK,SAAS,EAAE,iBAAiB,oBAAoB,KAAK,cAAc,CAAC;AACzE,WAAK,SAAS,EAAE,iBAAiB,wBAAwB,KAAK,gBAAgB,CAAC;AAC/E,WAAK,SAAS,EAAE,iBAAiB,sBAAsB,KAAK,gBAAgB,CAAC;AAAA,IAC/E;AAAA,IACA,uBAAuB;AACrB,YAAM,qBAAqB;AAC3B,WAAK,SAAS,EAAE,oBAAoB,oBAAoB,KAAK,cAAc,CAAC;AAC5E,WAAK,SAAS,EAAE,oBAAoB,wBAAwB,KAAK,gBAAgB,CAAC;AAClF,WAAK,SAAS,EAAE,oBAAoB,sBAAsB,KAAK,gBAAgB,CAAC;AAAA,IAClF;AAAA,IACA,QAAQ,mBAAmB;AACzB,YAAM,QAAQ,iBAAiB;AAC/B,YAAM,WAAW,KAAK,SAAS;AAC/B,YAAM,QAAQ,KAAK,MAAM;AACzB,UAAI,kBAAkB,IAAI,gBAAgB,GAAG;AAC3C,YAAI,KAAK,gBAAgB;AACvB,mBAAS,kBAAkB;AAC3B,cAAI,KAAK,sBAAsB,0BAA0B,MAAM;AAC7D,iBAAK,oBAAoB,IAAI;AAAA,UAC/B;AAAA,QACF,OAAO;AACL,mBAAS,mBAAmB;AAC5B,eAAK,uBAAuB,EAAE;AAAA,QAChC;AACA,aAAK,iBAAiB,EAAE,aAAa,cAAc,KAAK,UAAU,CAAC;AAAA,MACrE;AACA,UAAI,kBAAkB,IAAI,aAAa,GAAG;AACxC,iBAAS,cAAc,KAAK;AAAA,MAC9B;AACA,UAAI,kBAAkB,IAAI,YAAY,GAAG;AACvC,iBAAS,YAAY,CAAC,KAAK;AAAA,MAC7B;AACA,UAAI,kBAAkB,IAAI,YAAY,GAAG;AACvC,iBAAS,YAAY,CAAC,KAAK;AAAA,MAC7B;AACA,UAAI,kBAAkB,IAAI,mBAAmB,KAAK,kBAAkB,IAAI,gBAAgB,KAAK,kBAAkB,IAAI,KAAK,GAAG;AACzH,YAAI,KAAK,sBAAsB,0BAA0B,QAAQ,KAAK,kBAAkB,CAAC,KAAK,kBAAkB,GAAG;AACjH,eAAK,oBAAoB,IAAI;AAAA,QAC/B,OAAO;AACL,eAAK,uBAAuB,EAAE;AAAA,QAChC;AAAA,MACF;AACA,UAAI,kBAAkB,IAAI,wBAAwB,GAAG;AACnD,aAAK,wBAAwB,EAAE,MAAM,UAAU,KAAK,0BAA0B,uBAAuB,QAAQ,MAAM;AAAA,MACrH;AACA,UAAI,kBAAkB,IAAI,aAAa,GAAG;AACxC,cAAM,cAAc,KAAK;AACzB,iBAAS,aAAa;AAAA,UACpB;AAAA,QACF,CAAC;AACD,iBAAS,uBAAuB;AAAA,MAClC;AACA,UAAI,kBAAkB,IAAI,kBAAkB,GAAG;AAC7C,iBAAS,mBAAmB,KAAK;AAAA,MACnC;AACA,UAAI,kBAAkB,IAAI,iBAAiB,GAAG;AAC5C,iBAAS,kBAAkB,KAAK;AAAA,MAClC;AACA,UAAI,kBAAkB,IAAI,gBAAgB,GAAG;AAC3C,iBAAS,iBAAiB,KAAK;AAAA,MACjC;AACA,UAAI,kBAAkB,IAAI,oBAAoB,GAAG;AAC/C,iBAAS,mBAAmB,KAAK,kBAAkB;AACnD,cAAM,yBAAyB,KAAK,kBAAkB;AAAA,MACxD;AACA,UAAI,kBAAkB,IAAI,MAAM,GAAG;AACjC,aAAK,WAAW,EAAE;AAAA,MACpB;AACA,UAAI,KAAK,WAAW,MAAM,MAAM;AAC9B,gBAAQ,QAAQ,EAAE,KAAK,MAAM;AAC3B,mBAAS,WAAW;AACpB,gBAAM,WAAW;AACjB,eAAK,SAAS,EAAE;AAChB,eAAK,WAAW,IAAI;AAAA,QACtB,CAAC;AAAA,MACH;AAAA,IACF;AAAA,IACM,gBAAgB;AAAA;AACpB,cAAM,QAAQ,KAAK,MAAM;AACzB,cAAM,eAAe,MAAM,YAAY,MAAM,YAAY;AACzD,cAAM,MAAM,cAAc;AAC1B,cAAM,eAAe,MAAM,YAAY,MAAM,YAAY;AACzD,cAAM,OAAO,KAAK,SAAS,EAAE,eAAe,IAAI;AAChD,aAAK,SAAS,EAAE,eAAe,eAAe,IAAI;AAClD,aAAK,iBAAiB,IAAI;AAC1B,aAAK,cAAc,gBAAgB;AACnC,aAAK,cAAc,aAAa;AAChC,aAAK,cAAc,gBAAgB;AACnC,aAAK,cAAc,gBAAgB;AACnC,aAAK,cAAc,aAAa;AAChC,cAAM,KAAK;AAAA,MACb;AAAA;AAAA,IACA,SAAS,UAAU,SAAS,SAAS;AACnC,YAAM,eAAe,KAAK,iBAAiB;AAC3C,YAAM,iBAAiB,KAAK,yBAAyB;AACrD,UAAI,eAAe,CAAC,EAAE,MAAM,YAAY,KAAK;AAC3C,gBAAQ,KAAK,+DAA+D;AAC5E;AAAA,MACF;AACA,YAAM,KAAK,IAAI,MAAM;AACrB,SAAG,KAAK;AAAA,QACN,GAAG,SAAS,QAAQ,CAAC;AAAA,QACrB,GAAG,SAAS,QAAQ,CAAC;AAAA,MACvB,CAAC;AACD,YAAM,YAAY,CAAC;AAAA,QACjB,GAAG,GAAG,CAAC,EAAE,EAAE,CAAC;AAAA,QACZ,GAAG,GAAG,CAAC,EAAE,EAAE,CAAC;AAAA,MACd,CAAC;AACD,UAAI,WAAW,MAAM;AACnB,WAAG,KAAK;AAAA,UACN,GAAG,SAAS,QAAQ,CAAC;AAAA,UACrB,GAAG,SAAS,QAAQ,CAAC;AAAA,QACvB,CAAC;AACD,kBAAU,KAAK;AAAA,UACb,GAAG,GAAG,CAAC,EAAE,EAAE,CAAC;AAAA,UACZ,GAAG,GAAG,CAAC,EAAE,EAAE,CAAC;AAAA,QACd,CAAC;AAAA,MACH;AACA,UAAI,YAAY,YAAY,IAAI;AAChC,YAAM;AAAA,QACJ;AAAA,QACA;AAAA,MACF,IAAI,KAAK,MAAM;AACf,YAAM,OAAO,KAAK,sBAAsB;AACxC,YAAM,kBAAkB,UAAQ;AAC9B,mBAAW,CAAC,GAAG,QAAQ,KAAK,UAAU,QAAQ,GAAG;AAC/C,gBAAM;AAAA,YACJ,OAAAC;AAAA,UACF,IAAI,eAAe,CAAC;AACpB,UAAAA,OAAM,YAAY,cAAc,QAAQ,SAAS,CAAC,kBAAkB,SAAS,SAAS,CAAC;AACvF,cAAI,SAAS,eAAe;AAC1B,YAAAA,OAAM,UAAU;AAAA,UAClB,WAAW,SAAS,aAAa;AAC/B,YAAAA,OAAM,UAAU;AAAA,UAClB;AACA,gBAAM,OAAO;AAAA,YACX,WAAW,IAAI;AAAA;AAAA,YAEf,aAAa;AAAA,YACb,QAAQ;AAAA,YACR,SAAS,QAAQ,SAAS,IAAI,KAAK;AAAA,YACnC,SAAS,SAAS,SAAS,IAAI,KAAK;AAAA,YACpC,QAAQ;AAAA;AAAA,UACV;AACA,uBAAa,cAAc,IAAI,aAAa,MAAM,IAAI,CAAC;AAAA,QACzD;AAAA,MACF;AACA,YAAM,cAAc,MAAM;AAGxB,cAAM,eAAe,KAAK,mBAAmB;AAC7C,YAAI,iBAAiB,aAAa,aAAa,CAAC,aAAa,aAAa;AACxE,qBAAW,iBAAiB,KAAK,yBAAyB,GAAG;AAC3D,0BAAc,MAAM,UAAU;AAAA,UAChC;AACA,0BAAgB,eAAe;AAC/B,eAAK,cAAc,IAAI,YAAY,oBAAoB;AAAA,YACrD,QAAQ;AAAA,cACN,QAAQ;AAAA,YACV;AAAA,UACF,CAAC,CAAC;AACF,mBAAS,oBAAoB,oBAAoB,kBAAkB;AACnE;AAAA,QACF;AACA,cAAM,OAAO,KAAK,IAAI,IAAI,YAAY,IAAI,IAAI,aAAa,QAAQ;AACnE,mBAAW,CAAC,GAAG,QAAQ,KAAK,UAAU,QAAQ,GAAG;AAC/C,mBAAS,IAAI,GAAG,CAAC,EAAE,EAAE,IAAI;AACzB,mBAAS,IAAI,GAAG,CAAC,EAAE,EAAE,IAAI;AAAA,QAC3B;AACA,wBAAgB,aAAa;AAC7B,YAAI,OAAO,GAAG;AACZ,gCAAsB,WAAW;AAAA,QACnC,OAAO;AACL,0BAAgB,WAAW;AAC3B,eAAK,cAAc,IAAI,YAAY,oBAAoB;AAAA,YACrD,QAAQ;AAAA,cACN,QAAQ,aAAa;AAAA,YACvB;AAAA,UACF,CAAC,CAAC;AACF,mBAAS,oBAAoB,oBAAoB,kBAAkB;AAAA,QACrE;AAAA,MACF;AACA,YAAM,qBAAqB,MAAM;AAC/B,YAAI,UAAU;AACd,YAAI,SAAS,oBAAoB,UAAU;AACzC,oBAAU,YAAY,IAAI,IAAI;AAAA,QAChC,OAAO;AACL,sBAAY,YAAY,IAAI,IAAI;AAAA,QAClC;AAAA,MACF;AACA,eAAS,iBAAiB,oBAAoB,kBAAkB;AAChE,sBAAgB,aAAa;AAC7B,WAAK,mBAAmB,IAAI,aAAa;AACzC,4BAAsB,WAAW;AAAA,IACnC;AAAA,IACA,EAAEb,OAAK,gBAAgBC,OAAK,0BAA0BC,MAAK,2BAA2BC,MAAK,aAAaC,MAAK,mBAAmBC,MAAK,2BAA2BC,MAAK,oBAAoBC,MAAK,sBAAsBC,MAAK,qBAAqBC,MAAK,WAAWC,MAAK,gBAAgBC,MAAK,aAAaC,MAAK,cAAc,KAAK,mBAAmB,KAAK,OAAO,iBAAiB,EAAEC,QAAO;AACpX,YAAM,WAAW,KAAK,SAAS;AAC/B,YAAM,QAAQ,KAAK,MAAM;AACzB,YAAM,eAAeA,OAAM,CAAC,IAAI,MAAM,KAAK;AAC3C,eAAS,eAAe,aAAa;AACrC,eAAS,eAAe,MAAM,YAAY,MAAM,YAAY,CAAC;AAC7D,WAAK,cAAc,EAAE;AAAA,IACvB;AAAA,IACA,CAAC,gBAAgB,EAAEA,QAAO;AACxB,YAAM,WAAW,KAAK,SAAS;AAC/B,UAAI,KAAK,iBAAiB,GAAG;AAC3B,cAAM;AAAA,UACJ;AAAA,UACA;AAAA,QACF,IAAI,KAAK,eAAe;AACxB,QAAAA,OAAM,CAAC,IAAI;AACX,QAAAA,OAAM,CAAC,IAAI;AACX,aAAK,iBAAiB,IAAI;AAAA,MAC5B;AACA,eAAS,eAAe,aAAa;AACrC,eAAS,SAASA,OAAM,CAAC,GAAGA,OAAM,CAAC,GAAGA,OAAM,CAAC,CAAC;AAC9C,WAAK,cAAc,EAAE;AAAA,IACvB;AAAA,IACA,CAAC,mBAAmB,EAAEA,QAAO;AAC3B,WAAK,SAAS,EAAE,aAAa;AAAA,QAC3B,uBAAuBA,OAAM,CAAC;AAAA,QAC9B,mBAAmBA,OAAM,CAAC;AAAA,QAC1B,eAAeA,OAAM,CAAC;AAAA,MACxB,CAAC;AACD,WAAK,iBAAiB;AAAA,IACxB;AAAA,IACA,CAAC,mBAAmB,EAAEA,QAAO;AAC3B,WAAK,SAAS,EAAE,aAAa;AAAA,QAC3B,uBAAuBA,OAAM,CAAC;AAAA,QAC9B,mBAAmBA,OAAM,CAAC;AAAA,QAC1B,eAAeA,OAAM,CAAC;AAAA,MACxB,CAAC;AACD,WAAK,sBAAsB,EAAEA,OAAM,CAAC,CAAC;AACrC,WAAK,iBAAiB;AAAA,IACxB;AAAA,IACA,CAAC,mBAAmB,EAAEA,QAAO;AAC3B,WAAK,SAAS,EAAE,aAAa;AAAA,QAC3B,oBAAoBA,OAAM,CAAC,IAAI,MAAM,KAAK;AAAA,MAC5C,CAAC;AACD,WAAK,iBAAiB;AAAA,IACxB;AAAA,IACA,CAAC,mBAAmB,EAAEA,QAAO;AAC3B,YAAM,MAAM,KAAK,MAAM,EAAE,YAAYA,OAAM,CAAC,IAAI,MAAM,KAAK,EAAE;AAC7D,WAAK,SAAS,EAAE,aAAa;AAAA,QAC3B,oBAAoB;AAAA,MACtB,CAAC;AACD,WAAK,iBAAiB;AAAA,IACxB;AAAA,IACA,CAAC,iBAAiB,EAAEA,QAAO;AACzB,YAAM,CAAC,GAAG,GAAG,CAAC,IAAIA;AAClB,UAAI,CAAC,KAAK,SAAS,EAAE,WAAW,cAAc;AAC5C,aAAK,MAAM,EAAE,UAAU,GAAG,GAAG,CAAC;AAAA,MAChC;AACA,WAAK,SAAS,EAAE,eAAe,aAAa;AAC5C,WAAK,SAAS,EAAE,WAAW,aAAa;AACxC,WAAK,cAAc,EAAE;AAAA,IACvB;AAAA,IACA,CAAC,KAAK,EAAE,MAAM,OAAO;AACnB,YAAM,KAAK,EAAE,MAAM,KAAK;AACxB,UAAI,KAAK,SAAS,EAAE,gBAAgB,CAAC,KAAK,kBAAkB,EAAE,GAAG;AAC/D;AAAA,MACF;AACA,YAAM,WAAW,KAAK,SAAS;AAC/B,YAAM,QAAQ,KAAK,MAAM;AACzB,YAAM,MAAM,YAAY,IAAI;AAC5B,UAAI,KAAK,oBAAoB,GAAG;AAC9B,YAAI,KAAK,UAAU,MAAM,KAAK,WAAW,IAAI,KAAK,4BAA4B;AAC5E,eAAK,oBAAoB,IAAI;AAC7B,eAAK,yBAAyB,IAAI;AAClC,eAAK,cAAc,EAAE,UAAU,IAAI,SAAS;AAAA,QAC9C;AAAA,MACF;AACA,UAAI,SAAS,KAAK,yBAAyB,CAAC,KAAK,KAAK,2BAA2B,uBAAuB,QAAQ;AAC9G,cAAM,iBAAiB,MAAM,KAAK,yBAAyB,KAAK,wBAAwB;AACxF,cAAM,SAAS,OAAO,aAAa;AACnC,cAAM,UAAU,KAAK,aAAa;AAClC,aAAK,wBAAwB,EAAE,MAAM,UAAU,GAAG,OAAO;AACzD,YAAI,WAAW,KAAK,iBAAiB,GAAG;AACtC,gBAAM,UAAU,SAAS,MAAM,QAAQ;AACvC,gBAAM,cAAc,SAAS,KAAK,iBAAiB,KAAK,KAAK,KAAK;AAClE,eAAK,wBAAwB,EAAE,MAAM,YAAY,cAAc,OAAO;AACtE,mBAAS,eAAe,aAAa;AACrC,mBAAS,YAAY,YAAY,GAAG,CAAC;AACrC,eAAK,iBAAiB,IAAI;AAAA,QAC5B;AAAA,MACF;AACA,YAAM,cAAc,SAAS,OAAO,MAAM,KAAK;AAC/C,YAAM,cAAc,MAAM,aAAa,KAAK;AAC5C,UAAI,eAAe,aAAa;AAC9B,aAAK,SAAS,EAAE;AAAA,MAClB;AAAA,IACF;AAAA,IACA,CAAC,uBAAuB,IAAI;AAE1B,WAAK,oBAAoB,IAAI;AAC7B,WAAK,cAAc,EAAE,UAAU,OAAO,SAAS;AAC/C,WAAK,yBAAyB,IAAI;AAAA,IACpC;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,CAAC,sBAAsB,EAAE,QAAQ;AAC/B,YAAM,gBAAgB,KAAK,IAAI,KAAK,MAAM,EAAE,UAAU,GAAG,MAAM;AAC/D,YAAM,OAAO;AACb,YAAM,MAAM,KAAK,IAAI,IAAI,aAAa;AACtC,WAAK,SAAS,EAAE,cAAc,MAAM,GAAG;AAAA,IACzC;AAAA,IACA,CAAC,WAAW,IAAI;AACd,YAAM;AAAA,QACJ;AAAA,QACA;AAAA,MACF,IAAI,KAAK,SAAS,EAAE,mBAAmB,KAAK,cAAc,CAAC;AAC3D,YAAM,qBAAqB,IAAI,KAAK,OAAO,QAAQ,MAAM,cAAc,OAAO,KAAK;AACnF,YAAM,cAAc,KAAK,MAAM,MAAM,QAAQ;AAC7C,YAAM,yBAAyB,0BAA0B,iBAAiB;AAC1E,YAAM,mBAAmB,oBAAoB,WAAW;AACxD,YAAM,WAAW,GAAG,gBAAgB,GAAG,sBAAsB;AAC7D,YAAM,MAAM;AACZ,UAAI,OAAO,KAAK,KAAK,GAAG;AACtB,aAAK,aAAa,EAAE,KAAK,KAAK,EAAE,GAAG,CAAC;AAAA,MACtC,OAAO;AACL,aAAK,aAAa,EAAE,mBAAmB,QAAQ,EAAE;AAAA,MACnD;AAAA,IACF;AAAA,IACA,KAAK,UAAU,IAAI;AACjB,UAAI,oBAAoB;AACxB,UAAI,wBAAwB,KAAK,KAAK,GAAG;AACvC,4BAAoB,KAAK,KAAK,KAAK,EAAE,oBAAoB,CAAC;AAAA,MAC5D;AACA,aAAO,MAAM,UAAU,EAAE,QAAQ,OAAO,EAAE,KAAK,KAAK,iBAAiB,oBAAoB;AAAA,IAC3F;AAAA,IACA,CAAO,SAAS,EAAE,OAAO;AAAA;AACvB,cAAM,WAAW,KAAK,SAAS;AAC/B,cAAM,QAAQ,KAAK,MAAM;AACzB,cAAM,eAAe,MAAM,YAAY,MAAM,YAAY;AAGzD,+DAAM,gBAAN,MAAiB,KAAK;AACtB,cAAM,WAAW,MAAM,YAAY,MAAM,YAAY,IAAI;AACzD,cAAM,MAAM,SAAS,eAAe,KAAK,SAAS,QAAQ,IAAI,WAAW;AACzE,iBAAS,aAAa,KAAK,MAAM,EAAE,MAAM;AACzC,aAAK,cAAc,kBAAkB,KAAK,cAAc;AACxD,cAAM,KAAK;AACX,aAAK,SAAS,EAAE,eAAe,GAAG;AAClC,aAAK,iBAAiB;AAAA,MACxB;AAAA;AAAA,IACA,CAAC,YAAY,IAAI;AACf,YAAM,YAAY,EAAE;AACpB,UAAI,KAAK,YAAY,GAAG;AACtB,aAAK,iBAAiB,IAAI;AAAA,MAC5B,OAAO;AACL,aAAK,YAAY,IAAI;AAAA,MACvB;AACA,WAAK,cAAc,kBAAkB,KAAK,cAAc;AACxD,WAAK,cAAc,eAAe,KAAK,WAAW;AAClD,WAAK,cAAc,kBAAkB,KAAK,cAAc;AACxD,WAAK,cAAc,kBAAkB,KAAK,cAAc;AACxD,WAAK,cAAc,eAAe,KAAK,WAAW;AAClD,WAAK,cAAc,gBAAgB,KAAK,YAAY;AACpD,WAAK,iBAAiB;AAAA,IACxB;AAAA,IACA,EAAE,KAAK,gBAAgB,KAAK,WAAW,KAAK,kBAAkB,YAAY,IAAI;AAC5E,UAAI,OAAO,KAAK,SAAS,UAAU;AACjC,YAAI,KAAK,KAAK,WAAW,GAAG,GAAG;AAC7B,cAAI;AACF,iBAAK,KAAK,IAAI,KAAK,MAAM,KAAK,IAAI;AAAA,UACpC,SAAS,OAAO;AACd,oBAAQ,KAAK,4BAA4B,KAAK;AAAA,UAChD;AAAA,QACF,WAAW,KAAK,KAAK,SAAS,GAAG;AAC/B,kBAAQ,KAAK,wDAAwD,KAAK,IAAI;AAAA,QAChF,OAAO;AACL,eAAK,KAAK,IAAI,CAAC;AAAA,QACjB;AAAA,MACF,WAAW,OAAO,KAAK,SAAS,YAAY,KAAK,QAAQ,MAAM;AAC7D,aAAK,KAAK,IAAI,OAAO,OAAO,CAAC,GAAG,KAAK,IAAI;AAAA,MAC3C,OAAO;AACL,aAAK,KAAK,IAAI,CAAC;AAAA,MACjB;AACA,WAAK,iBAAiB,EAAE,aAAa,cAAc,KAAK,UAAU,CAAC;AAAA,IACrE;AAAA,EACF;AACA,EAAAnB,YAAW,CAAC,SAAS;AAAA,IACnB,MAAM;AAAA,IACN,WAAW;AAAA,EACb,CAAC,CAAC,GAAG,2BAA2B,WAAW,kBAAkB,MAAM;AACnE,EAAAA,YAAW,CAAC,MAAM;AAAA,IAChB,YAAY;AAAA,IACZ,gBAAgB;AAAA,IAChB,eAAe;AAAA,EACjB,CAAC,GAAG,SAAS;AAAA,IACX,MAAM;AAAA,IACN,WAAW;AAAA,IACX,YAAY,MAAM;AAAA,EACpB,CAAC,CAAC,GAAG,2BAA2B,WAAW,eAAe,MAAM;AAChE,EAAAA,YAAW,CAAC,MAAM;AAAA,IAChB,YAAY;AAAA,IACZ,gBAAgB;AAAA,IAChB,eAAe;AAAA,EACjB,CAAC,GAAG,SAAS;AAAA,IACX,MAAM;AAAA,IACN,WAAW;AAAA,IACX,YAAY,MAAM;AAAA,EACpB,CAAC,CAAC,GAAG,2BAA2B,WAAW,gBAAgB,MAAM;AACjE,EAAAA,YAAW,CAAC,MAAM;AAAA,IAChB,YAAY;AAAA,IACZ,gBAAgB;AAAA,IAChB,eAAe;AAAA,EACjB,CAAC,GAAG,SAAS;AAAA,IACX,MAAM;AAAA,IACN,WAAW;AAAA,IACX,YAAY,MAAM;AAAA,EACpB,CAAC,CAAC,GAAG,2BAA2B,WAAW,eAAe,MAAM;AAChE,EAAAA,YAAW,CAAC,MAAM;AAAA,IAChB,YAAY;AAAA,IACZ,eAAe;AAAA,EACjB,CAAC,GAAG,SAAS;AAAA,IACX,MAAM;AAAA,IACN,WAAW;AAAA,IACX,YAAY,MAAM;AAAA,EACpB,CAAC,CAAC,GAAG,2BAA2B,WAAW,kBAAkB,MAAM;AACnE,EAAAA,YAAW,CAAC,MAAM;AAAA,IAChB,YAAY;AAAA,IACZ,eAAe;AAAA,EACjB,CAAC,GAAG,SAAS;AAAA,IACX,MAAM;AAAA,IACN,WAAW;AAAA,IACX,YAAY,MAAM;AAAA,EACpB,CAAC,CAAC,GAAG,2BAA2B,WAAW,kBAAkB,MAAM;AACnE,EAAAA,YAAW,CAAC,MAAM;AAAA,IAChB,YAAY;AAAA,IACZ,eAAe;AAAA,EACjB,CAAC,GAAG,SAAS;AAAA,IACX,MAAM;AAAA,IACN,WAAW;AAAA,IACX,YAAY,MAAM;AAAA,EACpB,CAAC,CAAC,GAAG,2BAA2B,WAAW,kBAAkB,MAAM;AACnE,EAAAA,YAAW,CAAC,MAAM;AAAA,IAChB,YAAY;AAAA,IACZ,eAAe;AAAA,EACjB,CAAC,GAAG,SAAS;AAAA,IACX,MAAM;AAAA,IACN,WAAW;AAAA,IACX,YAAY,MAAM;AAAA,EACpB,CAAC,CAAC,GAAG,2BAA2B,WAAW,kBAAkB,MAAM;AACnE,EAAAA,YAAW,CAAC,SAAS;AAAA,IACnB,MAAM;AAAA,IACN,WAAW;AAAA,EACb,CAAC,CAAC,GAAG,2BAA2B,WAAW,8BAA8B,MAAM;AAC/E,EAAAA,YAAW,CAAC,SAAS;AAAA,IACnB,MAAM;AAAA,IACN,WAAW;AAAA,EACb,CAAC,CAAC,GAAG,2BAA2B,WAAW,qBAAqB,MAAM;AACtE,EAAAA,YAAW,CAAC,SAAS;AAAA,IACnB,MAAM;AAAA,IACN,WAAW;AAAA,EACb,CAAC,CAAC,GAAG,2BAA2B,WAAW,0BAA0B,MAAM;AAC3E,EAAAA,YAAW,CAAC,SAAS;AAAA,IACnB,MAAM;AAAA,IACN,WAAW;AAAA,EACb,CAAC,CAAC,GAAG,2BAA2B,WAAW,oBAAoB,MAAM;AACrE,EAAAA,YAAW,CAAC,SAAS;AAAA,IACnB,MAAM;AAAA,IACN,WAAW;AAAA,EACb,CAAC,CAAC,GAAG,2BAA2B,WAAW,mBAAmB,MAAM;AACpE,EAAAA,YAAW,CAAC,SAAS;AAAA,IACnB,MAAM;AAAA,IACN,WAAW;AAAA,EACb,CAAC,CAAC,GAAG,2BAA2B,WAAW,kBAAkB,MAAM;AACnE,EAAAA,YAAW,CAAC,SAAS;AAAA,IACnB,MAAM;AAAA,IACN,WAAW;AAAA,EACb,CAAC,CAAC,GAAG,2BAA2B,WAAW,eAAe,MAAM;AAChE,EAAAA,YAAW,CAAC,SAAS;AAAA,IACnB,MAAM;AAAA,IACN,WAAW;AAAA,EACb,CAAC,CAAC,GAAG,2BAA2B,WAAW,eAAe,MAAM;AAChE,EAAAA,YAAW,CAAC,SAAS;AAAA,IACnB,MAAM;AAAA,IACN,WAAW;AAAA,EACb,CAAC,CAAC,GAAG,2BAA2B,WAAW,cAAc,MAAM;AAC/D,EAAAA,YAAW,CAAC,SAAS;AAAA,IACnB,MAAM;AAAA,IACN,WAAW;AAAA,EACb,CAAC,CAAC,GAAG,2BAA2B,WAAW,cAAc,MAAM;AAC/D,EAAAA,YAAW,CAAC,SAAS;AAAA,IACnB,MAAM;AAAA,IACN,WAAW;AAAA,EACb,CAAC,CAAC,GAAG,2BAA2B,WAAW,sBAAsB,MAAM;AACvE,EAAAA,YAAW,CAAC,SAAS,CAAC,GAAG,2BAA2B,WAAW,QAAQ,MAAM;AAC7E,SAAO;AACT;;;AC/wBA,IAAM,kBAAkB;AACxB,IAAM,eAAe;AACrB,IAAM,SAAS;AACf,IAAMoB,WAAU,IAAI,QAAQ;AAC5B,IAAM,UAAU,IAAI,QAAQ;AACrB,IAAM,kBAAkB,OAAO,OAAO;AAAA,EAC3C,eAAe;AAAA,EACf,eAAe;AAAA,EACf,mBAAmB;AAAA,EACnB,mBAAmB,KAAK;AAAA,EACxB,uBAAuB;AAAA,EACvB,uBAAuB;AAAA,EACvB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,aAAa;AACf,CAAC;AAED,IAAM,2BAA2B,KAAK,KAAK;AAC3C,IAAM,mBAAmB;AAEzB,IAAM,oBAAoB;AASnB,IAAM,eAAe;AAAA,EAC1B,kBAAkB;AAAA,EAClB,MAAM;AAAA,EACN,WAAW;AACb;AAmBO,IAAM,iBAAN,cAA6B,gBAAgB;AAAA,EAClD,YAAYC,SAAQ,SAAS,OAAO;AAClC,UAAM;AACN,SAAK,SAASA;AACd,SAAK,UAAU;AACf,SAAK,QAAQ;AACb,SAAK,mBAAmB;AACxB,SAAK,kBAAkB;AACvB,SAAK,iBAAiB;AACtB,SAAK,mBAAmB;AACxB,SAAK,eAAe,aAAa;AACjC,SAAK,sBAAsB;AAC3B,SAAK,eAAe;AACpB,SAAK,iBAAiB;AAEtB,SAAK,YAAY;AACjB,SAAK,YAAY;AACjB,SAAK,gBAAgB,IAAI,QAAQ;AACjC,SAAK,cAAc;AAEnB,SAAK,YAAY,IAAI,UAAU;AAC/B,SAAK,gBAAgB,IAAI,UAAU;AACnC,SAAK,cAAc,IAAI,OAAO;AAC9B,SAAK,YAAY,IAAI,OAAO;AAC5B,SAAK,eAAe,IAAI,OAAO;AAC/B,SAAK,SAAS,KAAK,IAAI,gBAAgB,kBAAkB;AACzD,SAAK,aAAa,KAAK;AACvB,SAAK,YAAY,IAAI,OAAO;AAE5B,SAAK,YAAY;AACjB,SAAK,WAAW,CAAC;AACjB,SAAK,YAAY;AACjB,SAAK,uBAAuB;AAAA,MAC1B,SAAS;AAAA,MACT,SAAS;AAAA,IACX;AACA,SAAK,iBAAiB;AACtB,SAAK,eAAe;AACpB,SAAK,YAAY,WAAS;AACxB,UAAI,KAAK,WAAW;AAClB,cAAM,eAAe;AAAA,MACvB,OAAO;AACL,mBAAW,WAAW,KAAK,UAAU;AAGnC,eAAK,YAAY,IAAI,aAAa,iBAAiB,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,KAAK,oBAAoB,GAAG;AAAA,YAC7G,WAAW,QAAQ;AAAA,UACrB,CAAC,CAAC,CAAC;AAAA,QACL;AAAA,MACF;AAAA,IACF;AACA,SAAK,gBAAgB,CAAC,IAAI,OAAO;AAC/B,UAAI,CAAC,KAAK,cAAc;AACtB,cAAM,gBAAgB,KAAK,iBAAiB,KAAK,SAAS,CAAC,GAAG,KAAK,SAAS,CAAC,CAAC;AAC9E,cAAM,YAAY,mBAAmB,KAAK,mBAAmB,KAAK,iBAAiB,iBAAiB,KAAK,KAAK,MAAM;AACpH,aAAK,iBAAiB;AACtB,aAAK,gBAAgB,GAAG,GAAG,SAAS;AAAA,MACtC;AACA,UAAI,KAAK,cAAc,GAAG;AACxB,aAAK,QAAQ,IAAI,EAAE;AAAA,MACrB;AAAA,IACF;AAMA,SAAK,gBAAgB,WAAS;AAC5B,YAAM,eAAe;AAAA,IACvB;AACA,SAAK,kBAAkB,CAAC,IAAI,OAAO;AACjC,YAAM;AAAA,QACJ;AAAA,MACF,IAAI,KAAK;AACT,UAAI,CAAC,KAAK,gBAAgB,gBAAgB,QAAQ;AAChD,aAAK,eAAe;AACpB,cAAM,QAAQ,KAAK,IAAI,EAAE;AACzB,cAAM,QAAQ,KAAK,IAAI,EAAE;AAEzB,YAAI,KAAK,iBAAiB,aAAa,qBAAqB,gBAAgB,WAAW,QAAQ,SAAS,gBAAgB,WAAW,QAAQ,QAAQ;AACjJ,eAAK,YAAY;AACjB;AAAA,QACF,OAAO;AACL,eAAK,QAAQ,iBAAiB,aAAa,KAAK,eAAe;AAAA,YAC7D,SAAS;AAAA,UACX,CAAC;AAAA,QACH;AAAA,MACF;AACA,WAAK,wBAAwB,IAAI,EAAE;AAAA,IACrC;AACA,SAAK,gBAAgB,WAAS;AAC5B,UAAI,KAAK,SAAS,SAAS,GAAG;AAC5B;AAAA,MACF;AACA,YAAM;AAAA,QACJ,SAAAC;AAAA,MACF,IAAI;AACJ,UAAI,KAAK,SAAS,WAAW,GAAG;AAC9B,QAAAA,SAAQ,iBAAiB,eAAe,KAAK,aAAa;AAC1D,QAAAA,SAAQ,iBAAiB,aAAa,KAAK,WAAW;AACtD,aAAK,YAAY;AACjB,aAAK,eAAe;AACpB,aAAK,qBAAqB,UAAU,MAAM;AAC1C,aAAK,qBAAqB,UAAU,MAAM;AAC1C,aAAK,YAAY,YAAY,IAAI;AAAA,MACnC;AACA,UAAI;AACF,QAAAA,SAAQ,kBAAkB,MAAM,SAAS;AAAA,MAC3C,SAASC,MAAI;AAAA,MAAC;AACd,WAAK,SAAS,KAAK;AAAA,QACjB,SAAS,MAAM;AAAA,QACf,SAAS,MAAM;AAAA,QACf,IAAI,MAAM;AAAA,MACZ,CAAC;AACD,WAAK,iBAAiB;AACtB,UAAI,MAAM,gBAAgB,SAAS;AACjC,aAAK,eAAe,MAAM;AAAA;AAAA,UAE1B,aAAa;AAAA,YAAY,aAAa;AACtC,aAAK,cAAc,KAAK;AAAA,MAC1B,OAAO;AACL,aAAK,eAAe,aAAa;AACjC,aAAK,YAAY,KAAK;AAAA,MACxB;AACA,UAAI,KAAK,iBAAiB,aAAa,kBAAkB;AACvD,aAAK,cAAc;AAAA,UACjB,MAAM;AAAA,QACR,CAAC;AAAA,MACH;AAAA,IACF;AACA,SAAK,gBAAgB,WAAS;AAC5B,YAAM,UAAU,KAAK,SAAS,KAAK,CAAAC,aAAWA,SAAQ,OAAO,MAAM,SAAS;AAC5E,UAAI,WAAW,MAAM;AACnB;AAAA,MACF;AAEA,UAAI,MAAM,gBAAgB,WAAW,MAAM,YAAY,GAAG;AACxD,aAAK,YAAY,KAAK;AACtB;AAAA,MACF;AACA,YAAM,aAAa,KAAK,SAAS;AACjC,YAAM,MAAM,MAAM,UAAU,QAAQ,WAAW;AAC/C,YAAM,MAAM,MAAM,UAAU,QAAQ,WAAW;AAC/C,UAAI,OAAO,KAAK,OAAO,GAAG;AACxB;AAAA,MACF;AACA,cAAQ,UAAU,MAAM;AACxB,cAAQ,UAAU,MAAM;AACxB,UAAI,MAAM,gBAAgB,SAAS;AACjC,aAAK,eAAe,MAAM;AAAA;AAAA,UAE1B,aAAa;AAAA,YAAY,aAAa;AACtC,YAAI,KAAK,cAAc,MAAM;AAC3B,eAAK,UAAU,IAAI,EAAE;AAAA,QACvB;AAAA,MACF,OAAO;AACL,aAAK,eAAe,aAAa;AACjC,YAAI,KAAK,cAAc,GAAG;AACxB,eAAK,QAAQ,IAAI,EAAE;AAAA,QACrB,OAAO;AACL,eAAK,wBAAwB,IAAI,EAAE;AAAA,QACrC;AAAA,MACF;AAAA,IACF;AACA,SAAK,cAAc,WAAS;AAC1B,YAAM;AAAA,QACJ,SAAAF;AAAA,MACF,IAAI;AACJ,YAAM,QAAQ,KAAK,SAAS,UAAU,aAAW,QAAQ,OAAO,MAAM,SAAS;AAC/E,UAAI,UAAU,IAAI;AAChB,aAAK,SAAS,OAAO,OAAO,CAAC;AAAA,MAC/B;AAGA,UAAI,KAAK,cAAc,KAAK,CAAC,MAAM,QAAQ;AACzC,aAAK,YAAY;AAAA,MACnB;AACA,UAAI,KAAK,SAAS,WAAW,GAAG;AAC9B,QAAAA,SAAQ,oBAAoB,eAAe,KAAK,aAAa;AAC7D,QAAAA,SAAQ,oBAAoB,aAAa,KAAK,WAAW;AACzD,QAAAA,SAAQ,oBAAoB,aAAa,KAAK,aAAa;AAC3D,YAAI,KAAK,aAAa,KAAK,WAAW;AACpC,eAAK,SAAS,KAAK;AAAA,QACrB;AAAA,MACF,WAAW,KAAK,cAAc,MAAM;AAClC,aAAK,cAAc,KAAK;AAAA,MAC1B;AACA,WAAK,MAAM,QAAQ,WAAW,EAAE,MAAM,UAAU;AAChD,MAAAA,SAAQ,MAAM,SAAS;AACvB,WAAK,cAAc;AACnB,UAAI,KAAK,gBAAgB;AACvB,aAAK,cAAc;AAAA,UACjB,MAAM;AAAA,QACR,CAAC;AAAA,MACH;AAAA,IACF;AACA,SAAK,UAAU,WAAS;AACtB,WAAK,eAAe,aAAa;AACjC,YAAM,YAAY,MAAM,UAAU,MAAM,aAAa,IAAI,KAAK,KAAK,mBAAmB,KAAK,kBAAkB;AAC7G,WAAK,gBAAgB,GAAG,GAAG,SAAS;AACpC,YAAM,eAAe;AACrB,WAAK,cAAc;AAAA,QACjB,MAAM;AAAA,MACR,CAAC;AAAA,IACH;AACA,SAAK,YAAY,WAAS;AAIxB,YAAM;AAAA,QACJ;AAAA,MACF,IAAI;AACJ,WAAK,eAAe,aAAa;AACjC,YAAM,cAAc,MAAM,YAAY,KAAK,YAAY,KAAK,kBAAkB,KAAK,IAAI,KAAK,wBAAwB,KAAK;AACzH,UAAI,aAAa;AACf,cAAM,eAAe;AACrB,aAAK,cAAc;AAAA,UACjB,MAAM;AAAA,QACR,CAAC;AAAA,MACH,OAAO;AACL,aAAK,eAAe;AAAA,MACtB;AAAA,IACF;AACA,SAAK,WAAW,OAAO,OAAO,CAAC,GAAG,eAAe;AACjD,SAAK,SAAS,GAAG,KAAK,KAAK,GAAG,CAAC;AAC/B,SAAK,eAAe,GAAG;AACvB,SAAK,WAAW;AAAA,EAClB;AAAA,EACA,IAAI,qBAAqB;AACvB,WAAO,KAAK;AAAA,EACd;AAAA,EACA,oBAAoB;AAClB,QAAI,KAAK,wBAAwB,OAAO;AACtC,YAAM;AAAA,QACJ;AAAA,MACF,IAAI;AACJ,cAAQ,iBAAiB,eAAe,KAAK,aAAa;AAC1D,cAAQ,iBAAiB,iBAAiB,KAAK,WAAW;AAC1D,UAAI,CAAC,KAAK,cAAc;AACtB,gBAAQ,iBAAiB,SAAS,KAAK,OAAO;AAAA,MAChD;AACA,cAAQ,iBAAiB,WAAW,KAAK,SAAS;AAGlD,cAAQ,iBAAiB,aAAa,MAAM;AAAA,MAAC,GAAG;AAAA,QAC9C,SAAS;AAAA,MACX,CAAC;AACD,cAAQ,iBAAiB,eAAe,KAAK,SAAS;AACtD,WAAK,QAAQ,MAAM,SAAS;AAC5B,WAAK,sBAAsB;AAC3B,WAAK,uBAAuB;AAAA,IAC9B;AAAA,EACF;AAAA,EACA,qBAAqB;AACnB,QAAI,KAAK,wBAAwB,MAAM;AACrC,YAAM;AAAA,QACJ;AAAA,MACF,IAAI;AACJ,cAAQ,oBAAoB,eAAe,KAAK,aAAa;AAC7D,cAAQ,oBAAoB,eAAe,KAAK,aAAa;AAC7D,cAAQ,oBAAoB,aAAa,KAAK,WAAW;AACzD,cAAQ,oBAAoB,iBAAiB,KAAK,WAAW;AAC7D,cAAQ,oBAAoB,SAAS,KAAK,OAAO;AACjD,cAAQ,oBAAoB,WAAW,KAAK,SAAS;AACrD,cAAQ,oBAAoB,eAAe,KAAK,SAAS;AACzD,cAAQ,MAAM,SAAS;AACvB,WAAK,YAAY;AACjB,WAAK,sBAAsB;AAC3B,WAAK,uBAAuB;AAAA,IAC9B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,UAAU;AACZ,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,YAAY,SAAS;AACvB,QAAI,KAAK,gBAAgB,SAAS;AAChC,WAAK,eAAe;AACpB,UAAI,YAAY,MAAM;AACpB,aAAK,QAAQ,oBAAoB,SAAS,KAAK,OAAO;AAAA,MACxD,OAAO;AACL,aAAK,QAAQ,iBAAiB,SAAS,KAAK,OAAO;AAAA,MACrD;AACA,WAAK,uBAAuB;AAAA,IAC9B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,mBAAmBG,UAAS,IAAI,UAAU,GAAG;AAC3C,WAAOA,QAAO,KAAK,KAAK,SAAS;AAAA,EACnC;AAAA;AAAA;AAAA;AAAA,EAIA,iBAAiB;AACf,WAAO,KAAK,OAAO;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,aAAa,UAAU;AACrB,WAAO,OAAO,KAAK,UAAU,QAAQ;AAGrC,SAAK,SAAS;AACd,SAAK,eAAe,KAAK,IAAI,KAAK,UAAU,CAAC;AAAA,EAC/C;AAAA;AAAA;AAAA;AAAA,EAIA,cAAc,WAAW,UAAU;AACjC,SAAK,OAAO,MAAM,aAAa,IAAI,IAAI;AACvC,SAAK,OAAO,OAAO,KAAK,IAAI,WAAW,KAAK,OAAO,MAAM,GAAI;AAC7D,SAAK,OAAO,uBAAuB;AAAA,EACrC;AAAA;AAAA;AAAA;AAAA,EAIA,aAAa,QAAQ;AACnB,SAAK,OAAO,SAAS;AACrB,SAAK,OAAO,uBAAuB;AAAA,EACrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,SAAS,YAAY,KAAK,cAAc,OAAO,UAAU,KAAK,cAAc,KAAK,aAAa,KAAK,cAAc,QAAQ;AACvH,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI,KAAK;AACT,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI,KAAK;AACT,UAAM,YAAY,MAAM,WAAW,uBAAuB,qBAAqB;AAC/E,QAAI,CAAC,SAAS,qBAAqB,KAAK,CAAC,SAAS,qBAAqB,GAAG;AACxE,WAAK,UAAU,QAAQ,KAAK,UAAU,KAAK,UAAU,QAAQ,SAAS,IAAI;AAAA,IAC5E;AACA,UAAM,UAAU,MAAM,SAAS,mBAAmB,iBAAiB;AACnE,UAAM,aAAa,MAAM,YAAY,eAAe,aAAa;AACjE,QAAI,cAAc,SAAS,YAAY,OAAO,eAAe,QAAQ;AACnE,aAAO;AAAA,IACT;AACA,QAAI,CAAC,SAAS,SAAS,KAAK,CAAC,SAAS,OAAO,KAAK,CAAC,SAAS,UAAU,GAAG;AACvE,aAAO;AAAA,IACT;AACA,SAAK,cAAc,QAAQ;AAC3B,SAAK,cAAc,MAAM;AACzB,SAAK,cAAc,SAAS;AAC5B,SAAK,cAAc,SAAS;AAC5B,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAIA,UAAU,QAAQ;AAChB,SAAK,cAAc,SAAS;AAC5B,SAAK,SAAS;AAAA,EAChB;AAAA;AAAA;AAAA;AAAA,EAIA,eAAe,KAAK;AAClB,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,IACF,IAAI,KAAK;AACT,UAAM,MAAM,KAAK,oBAAoB,kBAAkB;AACvD,SAAK,aAAa,KAAK,IAAI,GAAG;AAAA,EAChC;AAAA;AAAA;AAAA;AAAA,EAIA,mBAAmB,mBAAmB;AACpC,SAAK,YAAY,aAAa,iBAAiB;AAC/C,SAAK,UAAU,aAAa,iBAAiB;AAC7C,SAAK,aAAa,aAAa,iBAAiB;AAChD,SAAK,UAAU,aAAa,iBAAiB;AAAA,EAC/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,YAAY,YAAY,UAAU,WAAW;AAC3C,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI,KAAK;AACT,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI,KAAK;AACT,UAAM,SAAS,KAAK,UAAU,QAAQ;AACtC,UAAM,cAAc,KAAK,KAAK;AAC9B,UAAM,YAAY,QAAQ,MAAM,YAAY,CAAC,cAAc,QAAQ,cAAc,MAAM;AACvF,UAAM,UAAU,MAAM;AACtB,UAAM,aAAa,cAAc,IAAI,MAAM,YAAY,IAAI,gBAAgB,iBAAiB,WAAW,KAAK,IAAI,YAAY,IAAI,qBAAqB,kBAAkB,IAAI,KAAK;AAChL,UAAM,aAAa,SAAS,aAAa,SAAS,UAAU,IAAI,cAAc,gBAAgB,iBAAiB;AAC/G,SAAK,SAAS,WAAW,SAAS,UAAU;AAC5C,QAAI,cAAc,GAAG;AACnB,YAAM,aAAa,KAAK,aAAa;AACrC,WAAK,eAAe,KAAK,IAAI,UAAU,CAAC;AAAA,IAC1C;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa;AACX,SAAK,OAAO,GAAG,aAAa;AAAA,EAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,OAAO,OAAO,OAAO;AACnB,QAAI,KAAK,aAAa,GAAG;AACvB,aAAO;AAAA,IACT;AACA,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,IACF,IAAI,KAAK;AACT,UAAM,SAAS,KAAK,UAAU,QAAQ,KAAK,cAAc;AACzD,QAAI,KAAK,IAAI,MAAM,IAAI,KAAK,MAAM,CAAC,SAAS,KAAK,SAAS,qBAAqB,KAAK,CAAC,SAAS,KAAK,SAAS,qBAAqB,GAAG;AAClI,WAAK,UAAU,SAAS,KAAK,KAAK,MAAM,IAAI,IAAI,KAAK;AAAA,IACvD;AACA,SAAK,UAAU,QAAQ,KAAK,YAAY,OAAO,KAAK,UAAU,OAAO,KAAK,cAAc,OAAO,OAAO,KAAK,EAAE;AAC7G,SAAK,UAAU,MAAM,KAAK,UAAU,OAAO,KAAK,UAAU,KAAK,KAAK,cAAc,KAAK,OAAO,iBAAiB;AAC/G,SAAK,UAAU,SAAS,KAAK,aAAa,OAAO,KAAK,UAAU,QAAQ,KAAK,cAAc,QAAQ,OAAO,aAAa;AACvH,SAAK,SAAS,KAAK,UAAU,OAAO,KAAK,QAAQ,KAAK,YAAY,OAAO,CAAC;AAC1E,SAAK,WAAW;AAChB,WAAO;AAAA,EACT;AAAA,EACA,yBAAyB;AACvB,UAAM;AAAA,MACJ,OAAAC;AAAA,IACF,IAAI,KAAK;AACT,QAAI,KAAK,qBAAqB;AAC5B,YAAM;AAAA,QACJ;AAAA,MACF,IAAI,KAAK;AACT,UAAI,KAAK,gBAAgB,gBAAgB,QAAQ;AAC/C,QAAAA,OAAM,cAAc;AAAA,MACtB,OAAO;AACL,QAAAA,OAAM,cAAc;AAAA,MACtB;AAAA,IACF,OAAO;AACL,MAAAA,OAAM,cAAc;AAAA,IACtB;AAAA,EACF;AAAA,EACA,eAAe;AACb,WAAO,KAAK,cAAc,UAAU,KAAK,UAAU,SAAS,KAAK,cAAc,QAAQ,KAAK,UAAU,OAAO,KAAK,cAAc,WAAW,KAAK,UAAU,UAAU,KAAK,eAAe,KAAK;AAAA,EAC/L;AAAA,EACA,aAAa;AAEX,SAAK,UAAU,SAAS;AACxB,SAAK,OAAO,SAAS,iBAAiB,KAAK,SAAS;AACpD,SAAK,OAAO,qBAAqB,IAAI,MAAM,KAAK,UAAU,MAAM,KAAK,KAAK,GAAG,KAAK,UAAU,OAAO,GAAG,KAAK,CAAC;AAC5G,QAAI,KAAK,OAAO,QAAQ,KAAK,IAAI,KAAK,MAAM,GAAG;AAC7C,WAAK,OAAO,MAAM,KAAK,IAAI,KAAK,MAAM;AACtC,WAAK,OAAO,uBAAuB;AAAA,IACrC;AAAA,EACF;AAAA,EACA,gBAAgB,YAAY,UAAU,WAAW;AAC/C,SAAK,YAAY,aAAa,KAAK,mBAAmB,KAAK,kBAAkB,WAAW,KAAK,mBAAmB,KAAK,kBAAkB,YAAY,KAAK,gBAAgB;AAAA,EAC1K;AAAA;AAAA,EAEA,UAAU,SAAS;AACjB,UAAM,cAAc,UAAU,KAAK,OAAO,IAAI,KAAK;AACnD,UAAM,UAAU,aAAa,KAAK,MAAM,UAAU;AAClD,WAAO,UAAU,IAAI,KAAK,KAAK,KAAK;AAAA,EACtC;AAAA,EACA,4BAA4B,aAAa;AACvC,WAAO,IAAI,KAAK,KAAK,cAAc,KAAK,MAAM;AAAA,EAChD;AAAA,EACA,iBAAiB,UAAU,UAAU;AACnC,UAAM;AAAA,MACJ,SAAS;AAAA,MACT,SAAS;AAAA,IACX,IAAI;AACJ,UAAM;AAAA,MACJ,SAAS;AAAA,MACT,SAAS;AAAA,IACX,IAAI;AACJ,UAAM,SAAS,OAAO;AACtB,UAAM,SAAS,OAAO;AACtB,WAAO,KAAK,KAAK,SAAS,SAAS,SAAS,MAAM;AAAA,EACpD;AAAA,EACA,wBAAwB,IAAI,IAAI;AAC9B,UAAM,aAAa,KAAK,4BAA4B,EAAE;AACtD,UAAM,WAAW,KAAK,4BAA4B,EAAE;AACpD,QAAI,KAAK,mBAAmB,OAAO;AACjC,WAAK,iBAAiB;AACtB,WAAK,cAAc;AAAA,QACjB,MAAM;AAAA,MACR,CAAC;AAAA,IACH;AACA,SAAK,gBAAgB,YAAY,UAAU,CAAC;AAAA,EAC9C;AAAA,EACA,gBAAgB;AACd,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,IACF,IAAI,KAAK;AACT,UAAM,MAAM,QAAQ,KAAK,MAAM;AAC/B,SAAK,cAAc,kBAAkB,KAAK,iBAAiB,KAAK,MAAM;AACtE,SAAK,cAAc,IAAI,CAAC,KAAK,IAAI,GAAG,GAAG,CAAC,KAAK,IAAI,GAAG,IAAI,KAAK,IAAI,GAAG,GAAG,GAAG,GAAG,KAAK,IAAI,GAAG,GAAG,GAAG,KAAK,IAAI,GAAG,GAAG,CAAC,KAAK,IAAI,GAAG,IAAI,KAAK,IAAI,GAAG,GAAG,CAAC;AAAA,EACjJ;AAAA,EACA,QAAQ,IAAI,IAAI;AACd,UAAM;AAAA,MACJ;AAAA,IACF,IAAI;AACJ,UAAM,MAAM,QAAQ,IAAI,IAAI,IAAI,CAAC,EAAE,eAAe,KAAK,gBAAgB;AACvE,UAAM,iBAAiB,KAAK,UAAU,SAAS,KAAK,IAAI,KAAK,MAAM,IAAI,KAAK;AAC5E,QAAI,eAAe,cAAc;AACjC,UAAMD,UAAS,MAAM,UAAU;AAC/B,IAAAA,QAAO,IAAI,IAAI,aAAa,KAAK,aAAa,CAAC;AAC/C,UAAM,eAAe,WAAWA,SAAQA,OAAM;AAC9C,UAAM,UAAUA,QAAO,GAAGA,QAAO,GAAGA,QAAO,CAAC;AAAA,EAC9C;AAAA,EACA,SAAS,SAAS;AAChB,QAAI,YAAY,IAAI,IAAI,KAAK,YAAY,UAAU,KAAK,IAAI,QAAQ,UAAU,KAAK,qBAAqB,OAAO,IAAI,gBAAgB,KAAK,IAAI,QAAQ,UAAU,KAAK,qBAAqB,OAAO,IAAI,cAAc;AAC/M;AAAA,IACF;AACA,UAAM;AAAA,MACJ;AAAA,IACF,IAAI;AACJ,UAAM,MAAM,MAAM,2BAA2B,MAAM,OAAO,QAAQ,SAAS,QAAQ,OAAO,CAAC;AAC3F,QAAI,OAAO,MAAM;AACf,YAAM;AAAA,QACJ;AAAA,MACF,IAAI,MAAM;AACV,YAAM,QAAQ,eAAe;AAC7B,YAAM,QAAQ,eAAe;AAE7B,WAAK,gBAAgB,GAAG,GAAG,CAAC;AAAA,IAC9B,OAAO;AACL,YAAM,OAAO,aAAa,IAAI,QAAQ;AACtC,YAAM,UAAU,IAAI,SAAS,GAAG,IAAI,SAAS,GAAG,IAAI,SAAS,CAAC;AAAA,IAChE;AAAA,EACF;AAAA,EACA,cAAc;AACZ,UAAM;AAAA,MACJ;AAAA,IACF,IAAI;AACJ,UAAM,MAAM,MAAM,2BAA2BE,SAAQ,IAAI,GAAG,CAAC,CAAC;AAC9D,QAAI,OAAO,MAAM;AACf;AAAA,IACF;AACA,UAAM,OAAO,aAAa,IAAI,QAAQ;AACtC,UAAM,aAAa,MAAM,UAAU;AACnC,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,IACF,IAAI,KAAK;AAIT,UAAM,MAAM,QAAQ,MAAM;AAC1B,UAAMC,KAAI,QAAQ,IAAI,KAAK,IAAI,GAAG,IAAI,KAAK,IAAI,GAAG,GAAG,KAAK,IAAI,GAAG,GAAG,KAAK,IAAI,GAAG,IAAI,KAAK,IAAI,GAAG,CAAC;AACjG,UAAM,KAAKA,GAAE,IAAI,IAAI,SAAS,IAAI,UAAU,CAAC;AAC7C,eAAW,IAAIA,GAAE,eAAe,EAAE,CAAC;AACnC,UAAM,UAAU,WAAW,GAAG,WAAW,GAAG,WAAW,CAAC;AAGxD,SAAK,SAAS,QAAW,QAAW,KAAK,cAAc,SAAS,EAAE;AAAA,EACpE;AAAA,EACA,cAAc,OAAO;AACnB,QAAI,KAAK,SAAS,WAAW,GAAG;AAC9B,WAAK,YAAY,KAAK;AAAA,IACxB,OAAO;AACL,UAAI,KAAK,cAAc;AACrB,aAAK,YAAY;AACjB,aAAK,QAAQ,oBAAoB,aAAa,KAAK,aAAa;AAChE;AAAA,MACF;AACA,WAAK,YAAY,KAAK,gBAAgB,KAAK,cAAc,OAAO,OAAO,KAAK;AAC5E,WAAK,eAAe;AACpB,WAAK,QAAQ,iBAAiB,aAAa,KAAK,eAAe;AAAA,QAC7D,SAAS;AAAA,MACX,CAAC;AACD,WAAK,iBAAiB,KAAK,iBAAiB,KAAK,SAAS,CAAC,GAAG,KAAK,SAAS,CAAC,CAAC;AAC9E,UAAI,KAAK,aAAa,KAAK,aAAa,MAAM;AAC5C,aAAK,cAAc;AACnB,YAAI,CAAC,MAAM,QAAQ;AAEjB,eAAK,MAAM,QAAQ,WAAW,EAAE,MAAM,UAAU;AAAA,QAClD;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA,EACA,YAAY,OAAO;AACjB,SAAK,cAAc;AACnB,QAAI,KAAK,cAAc,MAAM,WAAW,KAAK,MAAM,WAAW,MAAM,WAAW,MAAM,WAAW;AAC9F,WAAK,cAAc;AACnB,WAAK,MAAM,QAAQ,WAAW,EAAE,MAAM,UAAU;AAAA,IAClD;AACA,SAAK,QAAQ,MAAM,SAAS;AAAA,EAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,wBAAwB,OAAO;AAC7B,QAAI,cAAc;AAClB,YAAQ,MAAM,KAAK;AAAA,MACjB,KAAK;AACH,aAAK,gBAAgB,GAAG,GAAG,mBAAmB,KAAK,eAAe;AAClE;AAAA,MACF,KAAK;AACH,aAAK,gBAAgB,GAAG,GAAG,KAAK,mBAAmB,KAAK,eAAe;AACvE;AAAA,MACF,KAAK;AACH,aAAK,gBAAgB,GAAG,CAAC,0BAA0B,CAAC;AACpD;AAAA,MACF,KAAK;AACH,aAAK,gBAAgB,GAAG,0BAA0B,CAAC;AACnD;AAAA,MACF,KAAK;AACH,aAAK,gBAAgB,CAAC,0BAA0B,GAAG,CAAC;AACpD;AAAA,MACF,KAAK;AACH,aAAK,gBAAgB,0BAA0B,GAAG,CAAC;AACnD;AAAA,MACF;AACE,sBAAc;AACd;AAAA,IACJ;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,kBAAkB,OAAO;AACvB,SAAK,cAAc;AACnB,QAAI,cAAc;AAClB,YAAQ,MAAM,KAAK;AAAA,MACjB,KAAK;AACH,aAAK,QAAQ,GAAG,KAAK,iBAAiB;AAGtC;AAAA,MACF,KAAK;AACH,aAAK,QAAQ,GAAG,iBAAiB;AACjC;AAAA,MACF,KAAK;AACH,aAAK,QAAQ,KAAK,mBAAmB,CAAC;AACtC;AAAA,MACF,KAAK;AACH,aAAK,QAAQ,mBAAmB,CAAC;AACjC;AAAA,MACF;AACE,sBAAc;AACd;AAAA,IACJ;AACA,WAAO;AAAA,EACT;AACF;;;ACluBA,IAAM,cAAc;AAGpB,IAAM,sBAAsB;AAC5B,IAAM,gBAAgB;AAMtB,IAAM,gBAAgB;AACtB,IAAM,aAAa;AAGnB,IAAM,qBAAqB;AAE3B,IAAM,eAAe;AAErB,IAAM,QAAQ;AAEd,IAAM,kBAAkB;AAExB,IAAM,WAAW;AACV,IAAM,WAAW;AAAA,EACtB,gBAAgB;AAAA,EAChB,iBAAiB;AAAA,EACjB,eAAe;AAAA,EACf,QAAQ;AACV;AACO,IAAM,aAAa;AAAA,EACxB,UAAU;AAAA,EACV,cAAc;AAChB;AACA,IAAMC,WAAU,IAAI,QAAQ;AAC5B,IAAM,aAAa,IAAI,WAAW;AAClC,IAAM,UAAU,IAAI,QAAQ;AAC5B,IAAM,cAAc,IAAI,QAAQ;AAChC,IAAM,SAAS,IAAI,kBAAkB,IAAI,GAAG,KAAK,GAAG;AACpD,IAAM,eAAe,IAAI,eAAe,EAAE,cAAc,CAAC,IAAI,QAAQ,GAAG,GAAG,CAAC,GAAG,IAAI,QAAQ,GAAG,GAAG,EAAE,CAAC,CAAC;AACrG,IAAM,cAAc,IAAI,YAAY;AAC7B,IAAM,aAAN,cAAyB,gBAAgB;AAAA,EAC9C,YAAY,UAAU;AACpB,UAAM;AACN,SAAK,WAAW;AAChB,SAAK,iBAAiB;AACtB,SAAK,cAAc;AACnB,SAAK,eAAe;AACpB,SAAK,WAAW;AAChB,SAAK,oBAAoB;AACzB,SAAK,qBAAqB;AAC1B,SAAK,QAAQ;AACb,SAAK,mBAAmB;AACxB,SAAK,yBAAyB;AAC9B,SAAK,cAAc;AACnB,SAAK,kBAAkB;AACvB,SAAK,iBAAiB;AACtB,SAAK,2BAA2B;AAChC,SAAK,UAAU;AACf,SAAK,UAAU;AACf,SAAK,SAAS;AACd,SAAK,cAAc;AACnB,SAAK,cAAc;AACnB,SAAK,qBAAqB;AAC1B,SAAK,WAAW;AAChB,SAAK,SAAS;AACd,SAAK,cAAc;AACnB,SAAK,YAAY,IAAI,QAAQ;AAC7B,SAAK,oBAAoB;AACzB,SAAK,gBAAgB;AACrB,SAAK,aAAa;AAClB,SAAK,iBAAiB;AACtB,SAAK,mBAAmB,IAAI,QAAQ;AACpC,SAAK,sBAAsB,IAAI,WAAW;AAC1C,SAAK,YAAY,IAAI,KAAK,YAAY;AACtC,SAAK,aAAa;AAClB,SAAK,YAAY;AACjB,SAAK,eAAe,IAAI,QAAQ;AAChC,SAAK,UAAU;AACf,SAAK,YAAY;AACjB,SAAK,UAAU,IAAI,OAAO;AAC1B,SAAK,UAAU,IAAI,OAAO;AAC1B,SAAK,UAAU,IAAI,OAAO;AAC1B,SAAK,YAAY,IAAI,OAAO;AAC5B,SAAK,cAAc,IAAI,OAAO;AAC9B,SAAK,aAAa,IAAI,OAAO;AAC7B,SAAK,cAAc,IAAI,OAAO;AAC9B,SAAK,kCAAkC,MAAM,KAAK,eAAe;AACjE,SAAK,0BAA0B,WAAS;AACtC,YAAM,QAAQ,KAAK;AACnB,YAAM,aAAa,MAAM;AACzB,UAAI,KAAK,aAAa,uBAAuB,OAAO,UAAU,KAAK,MAAM;AACvE,YAAI,KAAK,sBAAsB,MAAM;AACnC,eAAK,mBAAmB,SAAS,KAAK,UAAU;AAChD,cAAI,MAAM,UAAU;AAClB,iBAAK,iBAAiB;AACtB,iBAAK,aAAa,KAAK,qBAAqB,IAAI,MAAM,MAAM,MAAM;AAClE,iBAAK,UAAU,UAAU;AAAA,UAC3B;AAAA,QACF;AACA,mBAAW,OAAO,MAAM,KAAK;AAC7B,aAAK,qBAAqB;AAC1B,cAAM,mBAAmB,IAAI;AAAA,MAC/B,OAAO;AACL,cAAM,kBAAkB,eAAe,KAAK,cAAc,KAAK,cAAc,KAAK;AAClF,aAAK,oBAAoB,KAAK,WAAW,UAAU,EAAE,OAAO,EAAE,SAAS,MAAM,MAAM,mBAAmB,UAAU,CAAC;AACjH,wBAAgB,SAAS,UAAU;AACnC,mBAAW,SAAS,UAAU;AAC9B,mBAAW,SAAS,KAAK,UAAU;AAAA,MACrC;AAAA,IACF;AACA,SAAK,wBAAwB,WAAS;AACpC,YAAM,aAAa,MAAM;AACzB,iBAAW,SAAS,UAAU;AAC9B,iBAAW,SAAS,KAAK,UAAU;AACnC,WAAK,iBAAiB;AACtB,WAAK,UAAU,UAAU;AACzB,UAAI,KAAK,sBAAsB,QAAQ,KAAK,sBAAsB,YAAY;AAC5E;AAAA,MACF;AACA,YAAM,QAAQ,KAAK;AAEnB,YAAM,OAAO,MAAM,KAAK;AACxB,WAAK,qBAAqB;AAC1B,WAAK,UAAU,KAAK,MAAM,MAAM,MAAM,OAAO,SAAS,CAAC,GAAG,MAAM,MAAM,OAAO,SAAS,EAAE,CAAC;AACzF,WAAK,aAAa,IAAI,MAAM,MAAM,SAAS;AAC3C,WAAK,aAAa,IAAI,MAAM,MAAM,SAAS;AAAA,IAC7C;AACA,SAAK,gBAAgB,MAAM;AACzB,UAAI,KAAK,gBAAgB,QAAQ,KAAK,cAAc;AAClD,aAAK,aAAa,QAAQ;AAC1B,aAAK,eAAe,IAAI,aAAa,KAAK,gBAAgB,KAAK,cAAc,SAAS,QAAQ;AAAA,MAChG;AAAA,IACF;AACA,SAAK,gBAAgB,WAAS;AAC5B,YAAM,YAAY,KAAK;AACvB,UAAI,aAAa,MAAM;AACrB;AAAA,MACF;AACA,YAAM,UAAU,KAAK,MAAM,mCAAmC,SAAS;AACvE,YAAM,QAAQ,KAAK;AACnB,YAAM,MAAM,KAAK;AACjB,UAAI,QAAQ,WAAW,GAAG;AACxB,aAAK,cAAc,MAAM;AACzB,cAAM;AAAA,UACJ;AAAA,QACF,IAAI,KAAK,YAAY;AACrB,cAAMC,eAAc,IAAI,OAAO,KAAK,gBAAgB,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AACpE,YAAI,OAAO;AACX,YAAIA,gBAAe,MAAM;AACvB,eAAK,gBAAgB;AACrB,eAAK,iBAAiB,KAAKA,YAAW;AAAA,QACxC,WAAW,KAAK,gBAAgB,OAAO;AACrC,eAAK,aAAa;AAClB,eAAK,YAAY,KAAK,CAAC,IAAI;AAAA,QAC7B;AAAA,MACF,WAAW,QAAQ,WAAW,GAAG;AAC/B,YAAI,OAAO;AACX,aAAK,iBAAiB;AACtB,cAAM;AAAA,UACJ;AAAA,QACF,IAAI,KAAK,YAAY,OAAO;AAC5B,aAAK,aAAa,aAAa,MAAM,MAAM,MAAM;AAAA,MACnD;AAAA,IACF;AACA,SAAK,cAAc,MAAM;AACvB,WAAK,gBAAgB;AACrB,WAAK,aAAa;AAClB,WAAK,iBAAiB;AACtB,WAAK,cAAc;AACnB,WAAK,aAAa,KAAK,KAAK,aAAa,eAAe,KAAK,eAAe,MAAM;AAClF,WAAK,aAAa,OAAO;AAAA,IAC3B;AACA,SAAK,gBAAgB,SAAS;AAC9B,SAAK,cAAc,GAAG,UAAU;AAAA,EAClC;AAAA,EACM,mBAAmB;AAAA;AACvB,0BAAoB;AACpB,YAAM,UAAU,MAAM,UAAU,GAAG,eAAe,gBAAgB;AAAA,QAChE,kBAAkB,CAAC;AAAA,QACnB,kBAAkB,CAAC,YAAY,eAAe,kBAAkB;AAAA,QAChE,YAAY,KAAK,UAAU;AAAA,UACzB,MAAM,KAAK;AAAA,QACb,IAAI;AAAA,MACN,CAAC;AACD,WAAK,cAAc,GAAG,sBAAsB,OAAO;AACnD,YAAM,KAAK,cAAc,GAAG,WAAW,OAAO;AAC9C,WAAK,cAAc,GAAG,mBAAmB;AACzC,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,iBAAiB;AACnB,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA,EAKM,uBAAuB;AAAA;AAC3B,UAAI;AACF,4BAAoB;AACpB,eAAO,MAAM,UAAU,GAAG,mBAAmB,cAAc;AAAA,MAC7D,SAAS,OAAO;AACd,gBAAQ,KAAK,qCAAqC;AAClD,gBAAQ,KAAK,KAAK;AAClB,gBAAQ,KAAK,8BAA8B;AAC3C,eAAO;AAAA,MACT;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAIM,QAAQ,OAAO,wBAAwB,OAAO;AAAA;AAClD,UAAI,KAAK,cAAc;AACrB,gBAAQ,KAAK,oDAAoD;AAAA,MACnE;AACA,UAAI,wBAAwB,IAAI,QAAQ,CAAC,SAAS,YAAY;AAC5D,8BAAsB,MAAM,QAAQ,CAAC;AAAA,MACvC,CAAC;AACD,YAAM,sBAAsB,KAAK;AACjC,YAAM,YAAY;AAElB,YAAM;AAEN,WAAK,kBAAkB;AACvB,WAAK,UAAU,MAAM,QAAQ,WAAW,cAAc,aAAa;AACnE,UAAI,0BAA0B,MAAM;AAClC,aAAK,UAAU,IAAI,iBAAiB,KAAK,aAAa;AACtD,aAAK,QAAQ,iBAAiB,mBAAmB,MAAM;AACrD,cAAI,CAAC,KAAK,gBAAgB,KAAK,WAAW,MAAM;AAC9C;AAAA,UACF;AACA,gBAAMC,SAAQ,KAAK;AACnB,UAAAA,OAAM,IAAI,KAAK,OAAO;AACtB,UAAAA,OAAM,cAAc,KAAK,QAAQ;AAAA,QACnC,CAAC;AAAA,MACH;AACA,YAAM,iBAAiB,MAAM,KAAK,iBAAiB;AACnD,qBAAe,iBAAiB,OAAO,MAAM;AAC3C,aAAK,mBAAmB;AAAA,MAC1B,GAAG;AAAA,QACD,MAAM;AAAA,MACR,CAAC;AACD,YAAM,aAAa,MAAM,QAAQ,WAAW,cAAc,4BAA4B;AACtF,iBAAW,UAAU,IAAI,SAAS;AAClC,iBAAW,iBAAiB,SAAS,KAAK,+BAA+B;AACzE,WAAK,2BAA2B;AAChC,YAAM,iBAAiB,MAAM,eAAe,sBAAsB,QAAQ;AAC1E,WAAK,SAAS,eAAe;AAC7B,WAAK,WAAW;AAChB,WAAK,SAAS;AACd,WAAK,cAAc;AACnB,WAAK,oBAAoB,MAAM;AAC/B,WAAK,UAAU,MAAM;AACrB,WAAK,YAAY;AACjB,YAAM,cAAc,IAAI;AACxB,WAAK,qBAAqB,MAAM;AAChC,YAAM,mBAAmB,IAAI;AAC7B,WAAK,UAAU,KAAK,MAAM,UAAU,CAAC;AACrC,YAAM,QAAQ,iBAAiB,QAAQ,KAAK,aAAa;AACzD,YAAM,UAAU,gBAAgB,KAAK,KAAK;AAC1C,YAAM,MAAM,KAAK,gBAAgB,OAAO,SAAY,IAAI,MAAM,IAAI,SAAS,GAAG,GAAG,CAAC,GAAG;AAAA,QACnF,GAAG;AAAA,QACH,GAAG,CAAC,KAAK,IAAI,OAAO;AAAA,QACpB,GAAG,CAAC,KAAK,IAAI,OAAO;AAAA,MACtB,CAAC;AACD,qBAAe,qBAAqB;AAAA,QAClC,OAAO;AAAA,QACP,WAAW;AAAA,MACb,CAAC,EAAE,KAAK,mBAAiB;AACvB,aAAK,mBAAmB;AAAA,MAC1B,CAAC;AACD,UAAI,KAAK,WAAW,gBAAgB;AAClC,aAAK,iBAAiB;AACtB,aAAK,QAAQ,aAAa,KAAK;AAC/B,aAAK,QAAQ,aAAa,KAAK;AAC/B,aAAK,QAAQ,aAAa,KAAK;AAC/B,aAAK,UAAU,aAAa,KAAK;AACjC,aAAK,YAAY,aAAa,KAAK;AACnC,aAAK,WAAW,aAAa,KAAK;AAAA,MACpC;AACA,WAAK,iBAAiB;AACtB,WAAK,eAAe,IAAI,aAAa,OAAO,KAAK,cAAc,SAAS,QAAQ;AAChF,WAAK,oBAAoB;AACzB,WAAK,WAAW,YAAY,IAAI;AAChC,WAAK,cAAc;AAAA,QACjB,MAAM;AAAA,QACN,QAAQ,SAAS;AAAA,MACnB,CAAC;AAAA,IACH;AAAA;AAAA,EACA,mBAAmB;AACjB,SAAK,cAAc,KAAK,cAAc,GAAG,cAAc,CAAC;AACxD,SAAK,YAAY,iBAAiB,eAAe,KAAK,uBAAuB;AAC7E,SAAK,YAAY,iBAAiB,aAAa,KAAK,qBAAqB;AACzE,SAAK,cAAc,KAAK,cAAc,GAAG,cAAc,CAAC;AACxD,SAAK,YAAY,iBAAiB,eAAe,KAAK,uBAAuB;AAC7E,SAAK,YAAY,iBAAiB,aAAa,KAAK,qBAAqB;AACzE,UAAM,QAAQ,KAAK;AACnB,UAAM,IAAI,KAAK,WAAW;AAC1B,UAAM,IAAI,KAAK,WAAW;AAC1B,QAAI,CAAC,KAAK,YAAY,SAAS,MAAM;AACnC,YAAM,OAAO,IAAI,KAAK,YAAY;AAClC,WAAK,OAAO;AACZ,WAAK,MAAM,IAAI;AACf,WAAK,YAAY,SAAS,UAAU;AACpC,WAAK,YAAY,SAAS,OAAO;AACjC,WAAK,YAAY,IAAI,IAAI;AACzB,WAAK,YAAY,SAAS,UAAU;AACpC,YAAM,QAAQ,KAAK,MAAM;AACzB,WAAK,YAAY,SAAS,OAAO;AACjC,WAAK,YAAY,IAAI,KAAK;AAC1B,WAAK,UAAU,OAAO;AACtB,WAAK,UAAU,UAAU;AACzB,WAAK,YAAY,IAAI,KAAK,SAAS;AACnC,YAAM;AAAA,QACJ;AAAA,MACF,IAAI;AACJ,YAAM,QAAQ,WAAW,KAAK,IAAI,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC;AACxD,YAAM,MAAM,IAAI,KAAK,WAAW;AAChC,UAAI,OAAO;AACX,UAAI,MAAM,KAAK,IAAI,EAAE,eAAe,KAAK;AACzC,UAAI,UAAU;AACd,WAAK,YAAY,SAAS,MAAM;AAChC,YAAM,IAAI,GAAG;AACb,YAAM,OAAO,IAAI,MAAM;AACvB,WAAK,YAAY,SAAS,MAAM;AAChC,YAAM,IAAI,IAAI;AAAA,IAChB;AAAA,EACF;AAAA,EACA,MAAM,YAAY;AAEhB,QAAI,KAAK,WAAW,kBAAkB,KAAK,sBAAsB,YAAY;AAC3E,aAAO;AAAA,IACT;AACA,UAAM,QAAQ,KAAK;AACnB,UAAM,eAAe,KAAK,aAAa,uBAAuB,OAAO,UAAU;AAC/E,eAAW,SAAS,IAAI,WAAW,gBAAgB,QAAQ,WAAW,SAAS,YAAY,CAAC,KAAK;AACjG,eAAW,SAAS,KAAK,MAAM,IAAI,gBAAgB,OAAO,kBAAkB,aAAa;AACzF,WAAO,gBAAgB;AAAA,EACzB;AAAA,EACA,uBAAuB;AACrB,WAAO,KAAK,YAAY,SAAS,WAAW,KAAK,YAAY,QAAQ;AAAA,EACvE;AAAA;AAAA;AAAA;AAAA,EAIM,iBAAiB;AAAA;AACrB,UAAI,CAAC,KAAK,cAAc;AACtB;AAAA,MACF;AACA,YAAM,iBAAiB,IAAI,QAAQ,aAAW;AAC5C,aAAK,iBAAiB;AAAA,MACxB,CAAC;AACD,UAAI;AACF,cAAM,KAAK,eAAe,IAAI;AAC9B,cAAM;AAAA,MACR,SAAS,OAAO;AACd,gBAAQ,KAAK,4CAA4C;AACzD,gBAAQ,KAAK,KAAK;AAClB,aAAK,mBAAmB;AAAA,MAC1B;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,eAAe;AACjB,WAAO,KAAK,kBAAkB;AAAA,EAChC;AAAA,EACA,IAAI,SAAS;AACX,WAAO,KAAK;AAAA,EACd;AAAA,EACA,eAAe;AACb,UAAM,QAAQ,KAAK;AACnB,QAAI,SAAS,MAAM;AACjB,YAAMC,UAAS,MAAM,UAAU;AAC/B,WAAK,UAAU,KAAKA,OAAM;AAC1B,UAAI,KAAK,aAAa;AAGpB,QAAAA,QAAO,IAAI,MAAM,YAAY,IAAI;AAAA,MACnC,OAAO;AAEL,QAAAA,QAAO,IAAI,MAAM,YAAY,IAAI;AAAA,MACnC;AACA,YAAM,UAAUA,QAAO,GAAGA,QAAO,GAAGA,QAAO,CAAC;AAAA,IAC9C;AAAA,EACF;AAAA,EACA,qBAAqB;AACnB,UAAM,UAAU,KAAK;AACrB,QAAI,WAAW,MAAM;AACnB,cAAQ,oBAAoB,eAAe,KAAK,aAAa;AAC7D,cAAQ,oBAAoB,aAAa,KAAK,WAAW;AACzD,WAAK,iBAAiB;AAAA,IACxB;AACA,UAAM,QAAQ,KAAK;AACnB,SAAK,kBAAkB;AACvB,QAAI,SAAS,MAAM;AACjB,YAAM;AAAA,QACJ;AAAA,MACF,IAAI;AACJ,UAAI,KAAK,WAAW,MAAM;AACxB,cAAM,OAAO,KAAK,OAAO;AACzB,aAAK,QAAQ,QAAQ;AACrB,aAAK,UAAU;AAAA,MACjB;AACA,YAAM,IAAI,MAAM,KAAK;AACrB,YAAM,MAAM,WAAW,IAAI,GAAG,GAAG,GAAG,CAAC;AACrC,YAAM,MAAM,SAAS,IAAI,GAAG,GAAG,CAAC;AAChC,YAAM,MAAM,MAAM,IAAI,GAAG,GAAG,CAAC;AAC7B,YAAM,gBAAgB,CAAC;AACvB,YAAM,MAAM,KAAK;AACjB,UAAI,OAAO,MAAM;AACf,cAAM,MAAM;AAAA,MACd;AACA,YAAM,YAAY,KAAK;AACvB,UAAI,aAAa,MAAM;AACrB,cAAM,mBAAmB,SAAS;AAAA,MACpC;AACA,YAAM,wBAAwB,QAAQ,sBAAsB,GAAG,QAAQ,kBAAkB,CAAC;AAC1F,YAAM,QAAQ,KAAK;AACnB,YAAM,UAAU,MAAM,GAAG,MAAM,GAAG,MAAM,CAAC;AACzC,YAAM,WAAW;AACjB,YAAM,QAAQ,oBAAoB,QAAQ,KAAK,aAAa;AAC5D,YAAM,eAAe,CAAC;AACtB,YAAM;AAAA,QACJ;AAAA,QACA;AAAA,MACF,IAAI,QAAQ,sBAAsB;AAClC,YAAM,QAAQ,OAAO,MAAM;AAC3B,4BAAsB,MAAM;AAC1B,cAAM,QAAQ,cAAc,IAAI,YAAY,iBAAiB;AAAA,UAC3D,QAAQ;AAAA,YACN,QAAQ,aAAa;AAAA,UACvB;AAAA,QACF,CAAC,CAAC;AAAA,MACJ,CAAC;AAAA,IACH;AAEA,SAAK,SAAS,SAAS;AACvB,UAAM,aAAa,KAAK;AACxB,QAAI,cAAc,MAAM;AACtB,iBAAW,UAAU,OAAO,SAAS;AACrC,iBAAW,oBAAoB,SAAS,KAAK,+BAA+B;AAC5E,WAAK,2BAA2B;AAAA,IAClC;AACA,UAAM,YAAY,KAAK;AACvB,QAAI,aAAa,MAAM;AACrB,gBAAU,OAAO;AACjB,WAAK,yBAAyB;AAAA,IAChC;AACA,UAAM,mBAAmB,KAAK;AAC9B,QAAI,oBAAoB,MAAM;AAC5B,uBAAiB,OAAO;AACxB,WAAK,mBAAmB;AAAA,IAC1B;AACA,QAAI,KAAK,gBAAgB,MAAM;AAC7B,WAAK,aAAa,QAAQ;AAC1B,WAAK,eAAe;AAAA,IACtB;AACA,QAAI,KAAK,WAAW,gBAAgB;AAClC,UAAI,KAAK,eAAe,MAAM;AAC5B,aAAK,YAAY,SAAS,UAAU;AACpC,aAAK,YAAY,SAAS,IAAI,UAAU;AACxC,aAAK,YAAY,SAAS,KAAK,UAAU;AACzC,aAAK,YAAY,oBAAoB,eAAe,KAAK,uBAAuB;AAChF,aAAK,YAAY,oBAAoB,aAAa,KAAK,qBAAqB;AAC5E,aAAK,YAAY,iBAAiB;AAClC,aAAK,cAAc;AAAA,MACrB;AACA,UAAI,KAAK,eAAe,MAAM;AAC5B,aAAK,YAAY,SAAS,UAAU;AACpC,aAAK,YAAY,SAAS,IAAI,UAAU;AACxC,aAAK,YAAY,SAAS,KAAK,UAAU;AACzC,aAAK,YAAY,oBAAoB,eAAe,KAAK,uBAAuB;AAChF,aAAK,YAAY,oBAAoB,aAAa,KAAK,qBAAqB;AAC5E,aAAK,YAAY,iBAAiB;AAClC,aAAK,cAAc;AAAA,MACrB;AACA,WAAK,qBAAqB;AAC1B,WAAK,UAAU,UAAU;AAAA,IAC3B;AACA,SAAK,gBAAgB;AACrB,SAAK,aAAa;AAClB,SAAK,iBAAiB;AACtB,SAAK,WAAW;AAChB,SAAK,oBAAoB;AACzB,SAAK,qBAAqB;AAC1B,SAAK,QAAQ;AACb,SAAK,cAAc;AACnB,SAAK,UAAU;AACf,QAAI,KAAK,kBAAkB,MAAM;AAC/B,WAAK,eAAe;AAAA,IACtB;AACA,SAAK,cAAc;AAAA,MACjB,MAAM;AAAA,MACN,QAAQ,SAAS;AAAA,IACnB,CAAC;AAAA,EACH;AAAA,EACA,WAAWC,OAAM;AACf,UAAM,QAAQ,KAAK;AACnB,UAAM,KAAK,KAAK,cAAc;AAC9B,OAAG,aAAa,MAAM;AACtB,UAAM,WAAW,GAAG,UAAU;AAC9B,UAAM;AAAA,MACJ;AAAA,IACF,IAAI,MAAM,UAAU,EAAE;AACtB,UAAM,eAAe,KAAK,MAAM,SAAS,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC;AACzD,QAAI,CAAC,KAAK,aAAa;AACrB,WAAK,eAAe;AACpB,WAAK,cAAc;AAAA,IACrB;AAEA,QAAIA,MAAK,wBAAwBA,MAAK,0BAA0B;AAC9D,YAAM,QAAQA,MAAK;AACnB,MAAAA,MAAK,qBAAqB,KAAK,IAAI,OAAO,kBAAkB,CAAC;AAAA,IAC/D;AACA,UAAM,QAAQ,GAAG,aAAa;AAC9B,QAAI,SAAS,MAAM;AACjB,YAAM,WAAW,iBAAiB,eAAe,MAAM,YAAYA,KAAI,IAAI,GAAG,WAAW,EAAE,gBAAgB,OAAOA,KAAI,EAAE;AACxH,WAAK,cAAc,YAAY,SAAS,GAAG,SAAS,GAAG,SAAS,OAAO,SAAS,MAAM;AAAA,IACxF;AAAA,EACF;AAAA,EACA,iBAAiB;AACf,UAAM,QAAQ,KAAK;AACnB,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,IACF,IAAI;AACJ,UAAM;AAAA,MACJ;AAAA,IACF,IAAI;AACJ,UAAM,WAAW,MAAM,UAAU;AACjC,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,IACF,IAAI,KAAK,QAAQ,sBAAsB;AACvC,UAAM,QAAQ,OAAO,MAAM;AAC3B,aAAS,wBAAwB,KAAK,SAAS,gBAAgB,EAAE,OAAO;AACxE,UAAM;AAAA,MACJ;AAAA,IACF,IAAI,QAAQ,eAAe;AAE3B,UAAM,kBAAkB,SAAS,kBAAkBJ,QAAO;AAC1D,UAAM,MAAM,KAAK,MAAM,CAAC,gBAAgB,GAAG,CAAC,gBAAgB,CAAC,IAAI;AACjE,SAAK,UAAU,MAAM;AACrB,UAAM,SAAS,KAAK,IAAI,GAAG,IAAI,MAAM,eAAe,MAAM;AAC1D,aAAS,KAAK,SAAS,QAAQ,EAAE,IAAI,gBAAgB,eAAe,MAAM,CAAC;AAC3E,SAAK,aAAa;AAClB,UAAMG,UAAS,MAAM,UAAU;AAC/B,aAAS,IAAIA,OAAM,EAAE,IAAI,KAAK,SAAS;AACvC,SAAK,aAAa,KAAK,QAAQ;AAC/B,UAAM,sBAAsB,IAAI;AAChC,QAAI,KAAK,WAAW,gBAAgB;AAClC,YAAM;AAAA,QACJ;AAAA,MACF,IAAI,KAAK;AACT,cAAQ,iBAAiB,eAAe,KAAK,aAAa;AAC1D,cAAQ,iBAAiB,aAAa,KAAK,WAAW;AACtD,cAAQ,sCAAsC;AAAA,QAC5C,SAAS;AAAA,MACX,CAAC,EAAE,KAAK,mBAAiB;AACvB,aAAK,yBAAyB;AAAA,MAChC,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EACA,mBAAmB;AACjB,UAAM;AAAA,MACJ;AAAA,IACF,IAAI,KAAK,YAAY;AACrB,QAAI,WAAW,KAAK,aAAa,eAAe,KAAK,gBAAgB,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AACrF,QAAI,YAAY,MAAM;AACpB,MAAAH,SAAQ,KAAK,QAAQ,EAAE,IAAI,KAAK,eAAe,UAAU,EAAE,QAAQ;AACnE,UAAIA,SAAQ,OAAO,IAAI,aAAc,QAAO;AAAA,IAC9C;AACA,WAAO;AAAA,EACT;AAAA,EACA,YAAY,WAAW;AACrB,UAAM,WAAW,KAAK,cAAc,GAAG,kBAAkB;AACzD,UAAM,OAAO,UAAU,QAAQ,QAAQ;AACvC,QAAI,QAAQ,MAAM;AAChB,aAAO;AAAA,IACT;AACA,UAAM,YAAY,QAAQ,UAAU,KAAK,UAAU,MAAM;AACzD,QAAI,KAAK,gBAAgB,MAAM;AAE7B,WAAK,UAAU,KAAK,MAAM,UAAU,SAAS,CAAC,GAAG,UAAU,SAAS,CAAC,CAAC;AAAA,IACxE;AAGA,WAAO,UAAU,SAAS,CAAC,IAAI,SAAS,KAAK,cAAc,YAAY,sBAAsB,SAAS,IAAI;AAAA,EAC5G;AAAA,EACA,YAAY,OAAO;AACjB,UAAM,YAAY,KAAK;AACvB,QAAI,aAAa,MAAM;AACrB;AAAA,IACF;AACA,UAAM,iBAAiB,MAAM,kBAAkB,SAAS;AACxD,QAAI,eAAe,UAAU,GAAG;AAC9B;AAAA,IACF;AACA,UAAM,MAAM,eAAe,CAAC;AAC5B,UAAM,WAAW,KAAK,YAAY,GAAG;AACrC,QAAI,YAAY,MAAM;AACpB;AAAA,IACF;AACA,SAAK,aAAa,OAAO;AAGzB,QAAI,CAAC,KAAK,eAAe;AACvB,UAAI,KAAK,aAAa;AACpB,aAAK,aAAa,KAAK,QAAQ;AAAA,MACjC,OAAO;AACL,aAAK,aAAa,IAAI,SAAS;AAAA,MACjC;AAAA,IACF;AACA,cAAU,OAAO;AACjB,SAAK,mBAAmB;AACxB,SAAK,cAAc;AAAA,MACjB,MAAM;AAAA,MACN,QAAQ,SAAS;AAAA,IACnB,CAAC;AAAA,EACH;AAAA,EACA,YAAY,SAAS;AACnB,UAAM,YAAY,QAAQ,CAAC,EAAE,YAAY,QAAQ;AACjD,UAAM,YAAY,QAAQ,CAAC,EAAE,YAAY,QAAQ;AACjD,UAAM,SAAS,UAAU,CAAC,IAAI,UAAU,CAAC;AACzC,UAAM,SAAS,UAAU,CAAC,IAAI,UAAU,CAAC;AACzC,UAAM,QAAQ,KAAK,MAAM,QAAQ,MAAM;AACvC,QAAI,WAAW,KAAK,YAAY;AAChC,QAAI,WAAW,KAAK,IAAI;AACtB,kBAAY,IAAI,KAAK;AAAA,IACvB,WAAW,WAAW,CAAC,KAAK,IAAI;AAC9B,kBAAY,IAAI,KAAK;AAAA,IACvB;AACA,SAAK,YAAY;AACjB,WAAO;AAAA,MACL,YAAY,KAAK,KAAK,SAAS,SAAS,SAAS,MAAM;AAAA,MACvD;AAAA,IACF;AAAA,EACF;AAAA,EACA,SAAS,YAAY;AACnB,UAAM,QAAQ,aAAa,KAAK;AAChC,SAAK,YAAY,KAAK,IAAI,QAAQ,CAAC,IAAI,aAAa,IAAI;AAAA,EAC1D;AAAA,EACA,aAAa,OAAO;AAClB,UAAM,YAAY,KAAK;AACvB,QAAI,aAAa,MAAM;AACrB;AAAA,IACF;AACA,QAAI,CAAC,KAAK,iBAAiB,CAAC,KAAK,kBAAkB,CAAC,KAAK,YAAY;AACnE;AAAA,IACF;AACA,UAAM,UAAU,MAAM,mCAAmC,SAAS;AAClE,UAAM,QAAQ,KAAK;AACnB,UAAM,QAAQ,MAAM,MAAM,MAAM;AAGhC,QAAI,KAAK,gBAAgB;AACvB,UAAI,QAAQ,SAAS,GAAG;AAGtB,aAAK,iBAAiB;AAAA,MACxB,OAAO;AACL,cAAM;AAAA,UACJ;AAAA,UACA;AAAA,QACF,IAAI,KAAK,YAAY,OAAO;AAC5B,YAAI,KAAK,gBAAgB,OAAO;AAC9B,eAAK,WAAW;AAAA,QAClB;AACA,YAAI,MAAM,UAAU;AAClB,eAAK,SAAS,UAAU;AAAA,QAC1B;AAAA,MACF;AACA;AAAA,IACF,WAAW,QAAQ,WAAW,GAAG;AAG/B,WAAK,gBAAgB;AACrB,WAAK,aAAa;AAClB,WAAK,iBAAiB;AACtB,YAAM;AAAA,QACJ;AAAA,MACF,IAAI,KAAK,YAAY,OAAO;AAC5B,WAAK,aAAa,aAAa;AAC/B;AAAA,IACF;AACA,QAAI,KAAK,YAAY;AACnB,YAAM,QAAQ,KAAK,YAAY,QAAQ,KAAK,CAAC,IAAI;AACjD,WAAK,WAAW,QAAQ,KAAK;AAC7B,WAAK,YAAY;AAAA,IACnB,WAAW,KAAK,eAAe;AAC7B,cAAQ,QAAQ,YAAU;AACxB,YAAI,OAAO,gBAAgB,KAAK,aAAa;AAC3C;AAAA,QACF;AACA,YAAI,MAAM;AACV,YAAI,OAAO,QAAQ,SAAS,GAAG;AAC7B,gBAAM,KAAK,YAAY,OAAO,QAAQ,CAAC,CAAC;AAAA,QAC1C;AACA,YAAI,OAAO,MAAM;AACf,gBAAM,KAAK,iBAAiB;AAAA,QAC9B;AACA,YAAI,OAAO,MAAM;AACf;AAAA,QACF;AACA,aAAK,aAAa,IAAI,KAAK,gBAAgB;AAC3C,YAAI,KAAK,gBAAgB,OAAO;AAC9B,gBAAM,SAAS,IAAI,IAAI,KAAK,iBAAiB;AAG7C,cAAI,SAAS,GAAG;AACd,iBAAK,aAAa,eAAe,SAAS;AAC1C,iBAAK,eAAe,gBAAgB,MAAM;AAE1C,kBAAM,iBAAiBA,SAAQ,KAAK,MAAM,UAAU,EAAE,QAAQ;AAC9D,kBAAM,QAAQ,CAAC,UAAU,eAAe,IAAI,IAAI;AAChD,2BAAe,eAAe,KAAK;AACnC,gBAAI,eAAe,IAAI,KAAK,EAAE,IAAI,cAAc;AAAA,UAClD;AAAA,QACF;AACA,aAAK,aAAa,IAAI,GAAG;AACzB,aAAK,iBAAiB,KAAK,GAAG;AAAA,MAChC,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EACA,UAAU,OAAO;AACf,UAAM,QAAQ,KAAK;AACnB,UAAM;AAAA,MACJ;AAAA,IACF,IAAI;AACJ,UAAM,MAAM,KAAK;AACjB,QAAI,cAAc,KAAK;AACvB,QAAI,KAAK,aAAa;AACpB,UAAI,KAAK,YAAY,SAAS,SAAS;AACrC,cAAM,WAAW,KAAK,KAAK,YAAY,UAAU,EAAE,SAAS,KAAK,mBAAmB;AACpF,YAAI,KAAK,sBAAsB,KAAK,uBAAuB,KAAK,aAAa;AAC3E,gBAAM,WAAW,YAAY,WAAW,KAAK,KAAK,YAAY,UAAU,EAAE,OAAO,CAAC;AAAA,QACpF;AAAA,MACF;AACA,WAAK,YAAY,SAAS,IAAI,SAAS,KAAK,KAAK,YAAY,QAAQ;AACrE,YAAM,mBAAmB,KAAK,YAAY,SAAS,IAAI,UAAU;AAAA,IACnE;AACA,QAAI,KAAK,aAAa;AACpB,UAAI,KAAK,YAAY,SAAS,SAAS;AACrC,cAAM,WAAW,KAAK,KAAK,YAAY,UAAU,EAAE,SAAS,KAAK,mBAAmB;AACpF,YAAI,KAAK,sBAAsB,KAAK,uBAAuB,KAAK,aAAa;AAC3E,gBAAM,WAAW,YAAY,WAAW,KAAK,KAAK,YAAY,UAAU,EAAE,OAAO,CAAC;AAAA,QACpF;AAAA,MACF;AACA,WAAK,YAAY,SAAS,IAAI,SAAS,KAAK,KAAK,YAAY,QAAQ;AACrE,YAAM,mBAAmB,KAAK,YAAY,SAAS,IAAI,UAAU;AAAA,IACnE;AACA,QAAI,KAAK,eAAe,KAAK,eAAe,KAAK,gBAAgB;AAC/D,YAAM,OAAO,KAAK,qBAAqB;AACvC,WAAK,SAAS,IAAI;AAClB,WAAK,UAAU,MAAM,IAAI,CAAC;AAC1B,WAAK,UAAU,OAAO,KAAK,YAAY,QAAQ;AAAA,IACjD;AACA,UAAM,WAAW,MAAM,MAAM,MAAM;AACnC,QAAI,KAAK,cAAc,UAAU;AAC/B,YAAM,WAAW,KAAK,YAAY,OAAO,UAAU,KAAK,WAAW,OAAO,CAAC;AAC3E,YAAM,MAAM,MAAM,IAAI,UAAU,UAAU,QAAQ;AAAA,IACpD;AACA,QAAI,MAAM,WAAW,OAAO;AAC1B;AAAA,IACF;AACA,UAAM;AAAA,MACJ;AAAA,IACF,IAAI;AACJ,UAAM,iBAAiB,MAAM,eAAe;AAC5C,UAAM,OAAO,KAAK;AAClB,QAAI,SAAS,aAAa;AAC1B,QAAI,CAAC,KAAK,OAAO,QAAQ,GAAG;AAC1B,eAAS,aAAa;AACtB,UAAI;AAAA,QACF;AAAA,QACA;AAAA,QACA;AAAA,MACF,IAAI;AACJ,UAAI,KAAK,QAAQ,OAAO,GAAG,KAAK,GAAG,OAAO,cAAc;AACxD,UAAI,KAAK,QAAQ,OAAO,GAAG,KAAK,GAAG,OAAO,cAAc;AACxD,UAAI,KAAK,QAAQ,OAAO,GAAG,KAAK,GAAG,OAAO,cAAc;AACxD,eAAS,IAAI,GAAG,GAAG,CAAC;AACpB,UAAI,KAAK,WAAW,kBAAkB,CAAC,KAAK,eAAe;AACzD,cAAM,SAAS,KAAK,IAAI;AACxB,YAAI,KAAK,qBAAqB,KAAK,gBAAgB,OAAO;AACxD,cAAI,eAAe,SAAS,MAAM,MAAM,MAAM;AAC9C,gBAAM,gBAAgB,MAAM;AAAA,QAC9B,WAAW,WAAW,GAAG;AACvB,eAAK,oBAAoB;AACzB,cAAI,OAAO;AACX,gBAAM,mBAAmB,mBAAmB;AAAA,QAC9C;AAAA,MACF;AACA,UAAI,KAAK,WAAW,kBAAkB,KAAK,OAAO,QAAQ,GAAG;AAC3D,cAAM,mBAAmB,mBAAmB;AAAA,MAC9C;AAAA,IACF;AACA,UAAM,aAAa,KAAK;AAExB,eAAW,iBAAiBA,SAAQ,IAAI,GAAG,GAAG,CAAC,GAAG,KAAK,OAAO;AAC9D,UAAM,QAAQ,MAAM,MAAM,WAAW,QAAQ,UAAU;AACvD,UAAM,YAAY,QAAQ,KAAK,UAAU,OAAO,OAAO,GAAG,OAAO,KAAK,EAAE;AACxE,UAAM,MAAM,WAAW,cAAc,YAAY,SAAS;AAG1D,UAAM,QAAQ,cAAc,IAAI,YAAY,iBAAiB;AAAA,MAC3D,QAAQ;AAAA,QACN;AAAA,MACF;AAAA,IACF,CAAC,CAAC;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA,EAIA,aAAa,MAAM,OAAO;AACxB,QAAI,KAAK,WAAW,gBAAgB;AAClC,YAAM,QAAQ,KAAK,MAAM,KAAK,WAAW;AACzC,YAAM,QAAQ,KAAK,MAAM,KAAK,WAAW;AACzC,WAAK,aAAa,QAAQ,SAAS,UAAU,CAAC,KAAK;AAAA,IACrD;AACA,SAAK,QAAQ;AACb,MAAE,KAAK;AACP,UAAM,WAAW,KAAK,cAAc,GAAG,kBAAkB;AACzD,UAAM,OAAO,MAAM,cAAc,QAAQ;AACzC,QAAI,QAAQ,QAAQ,KAAK,aAAa,QAAQ,KAAK,SAAS,aAAa;AACvE,WAAK,WAAW;AAChB,WAAK,cAAc;AAAA,QACjB,MAAM;AAAA,QACN,QAAQ,WAAW;AAAA,MACrB,CAAC;AAAA,IACH;AACA,UAAM,QAAQ,KAAK;AACnB,QAAI,QAAQ,QAAQ,SAAS,QAAQ,CAAC,MAAM,QAAQ,QAAQ;AAC1D,WAAK,cAAc,MAAM;AACzB;AAAA,IACF;AACA,QAAI,KAAK,aAAa,OAAO;AAC3B,WAAK,WAAW;AAChB,WAAK,cAAc;AAAA,QACjB,MAAM;AAAA,QACN,QAAQ,WAAW;AAAA,MACrB,CAAC;AAAA,IACH;AAKA,QAAI,cAAc;AAClB,eAAWI,SAAQ,KAAK,OAAO;AAC7B,WAAK,WAAWA,KAAI;AACpB,UAAI,aAAa;AACf,aAAK,YAAY,KAAK;AACtB,aAAK,aAAa,KAAK;AACvB,cAAM,QAAQ,OAAO,KAAK;AAC1B,aAAK,UAAU,KAAK;AACpB,aAAK,SAAS,UAAU,OAAO,MAAM,KAAK;AAC1C,aAAK,WAAW;AAChB,cAAM,aAAa,KAAK,aAAa;AAAA,MACvC;AACA,WAAK,cAAc,OAAO,OAAO,MAAM,UAAU,CAAC;AAClD,oBAAc;AAAA,IAChB;AAAA,EACF;AACF;;;ACxoBA,SAAS,MAAM,QAAQ;AACrB,QAAM,eAAe,oBAAI,IAAI;AAC7B,QAAM,cAAc,oBAAI,IAAI;AAC5B,QAAMC,SAAQ,OAAO,MAAM;AAC3B,mBAAiB,QAAQA,QAAO,SAAU,YAAY,YAAY;AAChE,iBAAa,IAAI,YAAY,UAAU;AACvC,gBAAY,IAAI,YAAY,UAAU;AAAA,EACxC,CAAC;AACD,EAAAA,OAAM,SAAS,SAAU,MAAM;AAC7B,QAAI,CAAC,KAAK,cAAe;AACzB,UAAM,aAAa;AACnB,UAAM,aAAa,aAAa,IAAI,IAAI;AACxC,UAAM,cAAc,WAAW,SAAS;AACxC,eAAW,WAAW,WAAW,SAAS,MAAM;AAChD,eAAW,WAAW,KAAK,WAAW,UAAU;AAChD,eAAW,SAAS,QAAQ,YAAY,IAAI,SAAU,MAAM;AAC1D,aAAO,YAAY,IAAI,IAAI;AAAA,IAC7B,CAAC;AACD,eAAW,KAAK,WAAW,UAAU,WAAW,UAAU;AAAA,EAC5D,CAAC;AACD,SAAOA;AACT;AAiBA,SAAS,iBAAiBC,IAAGC,IAAG,UAAU;AACxC,WAASD,IAAGC,EAAC;AACb,WAAS,IAAI,GAAG,IAAID,GAAE,SAAS,QAAQ,KAAK;AAC1C,qBAAiBA,GAAE,SAAS,CAAC,GAAGC,GAAE,SAAS,CAAC,GAAG,QAAQ;AAAA,EACzD;AACF;;;AC3QO,IAAM,YAAY,OAAO,UAAU;AACnC,IAAM,WAAW,OAAO,SAAS;AACjC,IAAM,gBAAgB,OAAO,cAAc;AAC3C,IAAM,SAAS,OAAO,OAAO;AAc7B,IAAM,eAAN,MAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMxB,OAAO,QAAQ,QAAQ;AACrB,QAAI,OAAO,SAAS,MAAM;AACxB,YAAM,IAAI,MAAM,6BAA6B;AAAA,IAC/C;AACA,QAAI,OAAO,SAAS,GAAG;AACrB,aAAO;AAAA,IACT;AACA,UAAM,WAAW,KAAK,QAAQ,EAAE,MAAM;AAGtC,aAAS,SAAS,IAAI;AACtB,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,QAAQ,QAAQ,EAAE,QAAQ;AAGxB,UAAM;AAAA,MACJ;AAAA,IACF,IAAI;AACJ,UAAM,SAAS,CAAC,KAAK;AACrB,WAAO,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,MAAM,GAAG;AAAA,MAC9C;AAAA,MACA;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,IAAI,SAAS;AACX,WAAO,KAAK,aAAa,EAAE;AAAA,EAC7B;AAAA,EACA,IAAI,aAAa;AACf,WAAO,KAAK,aAAa,EAAE;AAAA,EAC7B;AAAA,EACA,IAAI,QAAQ;AACV,WAAO,KAAK,aAAa,EAAE;AAAA,EAC7B;AAAA,EACA,IAAI,SAAS;AACX,WAAO,KAAK,aAAa,EAAE;AAAA,EAC7B;AAAA,EACA,IAAI,UAAU;AACZ,WAAO,KAAK,aAAa,EAAE;AAAA,EAC7B;AAAA,EACA,IAAI,QAAQ;AACV,WAAO,KAAK,aAAa,EAAE;AAAA,EAC7B;AAAA,EACA,IAAI,WAAW;AACb,WAAO,KAAK,aAAa,EAAE;AAAA,EAC7B;AAAA,EACA,YAAY,cAAc;AACxB,SAAK,aAAa,IAAI;AAAA,EACxB;AAAA;AAAA;AAAA;AAAA,EAIA,QAAQ;AACN,UAAM,0BAA0B,KAAK;AACrC,UAAM,aAAa,KAAK,MAAM,EAAE;AAChC,WAAO,IAAI,wBAAwB,UAAU;AAAA,EAC/C;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,UAAU;AACR,SAAK,OAAO,QAAQ,WAAS;AAC3B,YAAM,SAAS,YAAU;AACvB,cAAM,OAAO;AACb,YAAI,CAAC,KAAK,UAAU;AAClB;AAAA,QACF;AACA,cAAM,YAAY,MAAM,QAAQ,KAAK,QAAQ,IAAI,KAAK,WAAW,CAAC,KAAK,QAAQ;AAC/E,kBAAU,QAAQ,cAAY;AAE5B,qBAAW,gBAAgB,UAAU;AACnC,kBAAM,UAAU,SAAS,YAAY;AACrC,gBAAI,mBAAmB,SAAS;AAC9B,oBAAM,QAAQ,QAAQ,OAAO;AAC7B,kBAAI,MAAM,SAAS,MAAM;AACvB,sBAAM,MAAM;AAAA,cACd;AACA,sBAAQ,QAAQ;AAAA,YAClB;AAAA,UACF;AACA,mBAAS,QAAQ;AAAA,QACnB,CAAC;AACD,aAAK,SAAS,QAAQ;AAAA,MACxB,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA,EAIA,CAAC,MAAM,IAAI;AACT,UAAM,SAAS,KAAK,aAAa;AAGjC,UAAM,QAAsB,MAAM,KAAK,KAAK;AAC5C,0BAAsB,OAAO,KAAK,KAAK;AACvC,UAAM,SAAS,CAAC,KAAK;AACrB,UAAM,WAAW,OAAO,WAAW,OAAO,OAAO,CAAC,GAAG,OAAO,QAAQ,IAAI,CAAC;AACzE,WAAO,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,MAAM,GAAG;AAAA,MAC9C;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AAAA,EACH;AACF;AAKA,IAAM,wBAAwB,CAAC,KAAK,QAAQ;AAC1C,eAAa,KAAK,KAAK,CAACC,MAAKC,SAAQ;AACnC,QAAIA,KAAI,SAAS,qBAAqB,QAAW;AAC/C,MAAAD,KAAI,SAAS,mBAAmB,IAAI,IAAIC,KAAI,SAAS,gBAAgB;AAAA,IACvE;AACA,QAAIA,KAAI,SAAS,gBAAgB,QAAW;AAC1C,MAAAD,KAAI,SAAS,cAAcC,KAAI,SAAS;AAAA,IAC1C;AACA,QAAIA,KAAI,SAAS,qBAAqB,QAAW;AAC/C,MAAAD,KAAI,SAAS,mBAAmBC,KAAI,SAAS;AAAA,IAC/C;AAAA,EACF,CAAC;AACH;AACA,IAAM,eAAe,CAAC,MAAM,MAAM,aAAa;AAC7C,WAAS,MAAM,IAAI;AAEnB,WAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,KAAK;AAC7C,iBAAa,KAAK,SAAS,CAAC,GAAG,KAAK,SAAS,CAAC,GAAG,QAAQ;AAAA,EAC3D;AACF;;;AC1KA,IAAM,aAAa,OAAO,WAAW;AACrC,IAAM,QAAQ,OAAO,MAAM;AAC3B,IAAM,kBAAkB,OAAO,gBAAgB;AAC/C,IAAM,kBAAkB,OAAO,gBAAgB;AAC/C,IAAM,8BAA8B,OAAO,4BAA4B;AACvE,IAAM,8BAA8B,OAAO,4BAA4B;AACvE,IAAM,2BAA2B,OAAO,yBAAyB;AAU1D,IAAM,uBAAN,MAAM,sBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWhC,OAAO,KAAK,WAAW,8BAA8B;AACnD,QAAI,gCAAgC,MAAM;AACxC,aAAO,KAAK,wBAAwB,EAAE,WAAW,4BAA4B;AAAA,IAC/E,OAAO;AACL,aAAO,KAAK,2BAA2B,EAAE,SAAS;AAAA,IACpD;AAAA,EACF;AAAA,EACA,QAAQ,2BAA2B,EAAE,WAAW;AAC9C,UAAM,OAAO,UAAU,OAAO;AAC9B,UAAM,eAAe,UAAU,OAAO;AACtC,UAAM,iBAAiB,oBAAI,IAAI;AAC/B,UAAM,kBAAkB;AAAA,MACtB,MAAM;AAAA,IACR;AACA,UAAM,mBAAmB;AAAA,MACvB,MAAM;AAAA,MACN,OAAO;AAAA,IACT;AACA,eAAW,iBAAiB,aAAa,KAAK,GAAG;AAK/C,UAAI,yBAAyB,YAAY,aAAa,IAAI,aAAa,KAAK,MAAM;AAChF,YAAI,iBAAiB,QAAQ,GAAG;AAC9B,cAAI,KAAK,aAAa,MAAM;AAC1B,iBAAK,YAAY,CAAC;AAAA,UACpB;AACA,2BAAiB,QAAQ,KAAK,UAAU;AACxC,eAAK,UAAU,KAAK,eAAe;AAAA,QACrC;AACA,sBAAc,OAAO,gBAAgB;AACrC,qBAAa,IAAI,eAAe;AAAA,UAC9B,WAAW,iBAAiB;AAAA,QAC9B,CAAC;AAAA,MACH;AAAA,IACF;AAEA,eAAW,CAAC,aAAa,YAAY,KAAK,cAAc;AACtD,UAAI,cAAc;AAChB,oBAAY,WAAW,YAAY,YAAY,CAAC;AAChD,oBAAY,SAAS,eAAe;AAAA,MACtC;AACA,iBAAW,WAAW,cAAc;AAClC,YAAI,WAAW,QAAQ,YAAY,cAAc;AAC/C,gBAAM,OAAO;AACb,gBAAM,eAAe,KAAK,IAAI,KAAK,CAAC;AACpC,gBAAM,cAAc,aAAa,aAAa,IAAI,CAAC;AACnD,cAAI,eAAe,MAAM;AAEvB;AAAA,UACF;AACA,cAAI,eAAe,eAAe,IAAI,WAAW;AACjD,cAAI,gBAAgB,MAAM;AACxB,2BAAe,oBAAI,IAAI;AACvB,2BAAe,IAAI,aAAa,YAAY;AAAA,UAC9C;AACA,uBAAa,IAAI,WAAW;AAAA,QAC9B;AAAA,MACF;AAAA,IACF;AACA,WAAO,IAAI,sBAAqB,WAAW,MAAM,cAAc,cAAc;AAAA,EAC/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,QAAQ,wBAAwB,EAAE,gBAAgB,8BAA8B;AAC9E,UAAM,oBAAoB,6BAA6B;AACvD,UAAM,eAAe,6BAA6B;AAClD,UAAM,YAAY,KAAK,MAAM,KAAK,UAAU,YAAY,CAAC;AACzD,UAAM,sBAAsB,oBAAI,IAAI;AACpC,UAAM,sBAAsB,oBAAI,IAAI;AACpC,aAAS,IAAI,GAAG,IAAI,kBAAkB,OAAO,QAAQ,KAAK;AACxD,WAAK,2BAA2B,EAAE,kBAAkB,OAAO,CAAC,GAAG,eAAe,OAAO,CAAC,GAAG,CAAC,QAAQ,gBAAgB;AAChH,cAAM,mBAAmB,6BAA6B,eAAe,IAAI,MAAM;AAC/E,YAAI,oBAAoB,MAAM;AAC5B;AAAA,QACF;AACA,mBAAW,WAAW,kBAAkB;AACtC,cAAI,WAAW,QAAQ,YAAY,cAAc;AAC/C,kBAAM,OAAO;AACb,kBAAM,QAAQ,iBAAiB,IAAI;AACnC,kBAAM,eAAe,UAAU,IAAI,EAAE,KAAK;AAC1C,kBAAM,WAAW,oBAAoB,IAAI,WAAW,KAAK,CAAC;AAC1D,qBAAS,IAAI,IAAI;AACjB,gCAAoB,IAAI,aAAa,QAAQ;AAC7C,kBAAM,eAAe,oBAAoB,IAAI,YAAY,KAAK,oBAAI,IAAI;AACtE,yBAAa,IAAI,WAAW;AAC5B,gCAAoB,IAAI,cAAc,YAAY;AAAA,UACpD;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACH;AACA,WAAO,IAAI,sBAAqB,gBAAgB,WAAW,qBAAqB,mBAAmB;AAAA,EACrG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,QAAQ,2BAA2B,EAAE,UAAU,UAAU,UAAU;AACjE,UAAM,WAAW,CAACC,IAAGC,OAAM;AACzB,eAASD,IAAGC,EAAC;AACb,UAAID,GAAE,YAAY;AAChB,cAAM,QAAQA;AACd,cAAM,QAAQC;AACd,YAAI,MAAM,UAAU;AAClB,cAAI,MAAM,QAAQ,MAAM,QAAQ,GAAG;AACjC,qBAAS,IAAI,GAAG,IAAI,MAAM,SAAS,QAAQ,EAAE,GAAG;AAC9C,uBAAS,MAAM,SAAS,CAAC,GAAG,MAAM,SAAS,CAAC,CAAC;AAAA,YAC/C;AAAA,UACF,OAAO;AACL,qBAAS,MAAM,UAAU,MAAM,QAAQ;AAAA,UACzC;AAAA,QACF;AACA,iBAAS,IAAI,GAAG,IAAID,GAAE,SAAS,QAAQ,EAAE,GAAG;AAC1C,mBAASA,GAAE,SAAS,CAAC,GAAGC,GAAE,SAAS,CAAC,CAAC;AAAA,QACvC;AAAA,MACF;AAAA,IACF;AACA,aAAS,UAAU,QAAQ;AAAA,EAC7B;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,YAAY;AACd,WAAO,KAAK,UAAU;AAAA,EACxB;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,OAAO;AACT,WAAO,KAAK,KAAK;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,IAAI,iBAAiB;AACnB,WAAO,KAAK,eAAe;AAAA,EAC7B;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,iBAAiB;AACnB,WAAO,KAAK,eAAe;AAAA,EAC7B;AAAA,EACA,YAAY,WAAW,MAAM,gBAAgB,gBAAgB;AAC3D,SAAK,UAAU,IAAI;AACnB,SAAK,KAAK,IAAI;AACd,SAAK,eAAe,IAAI;AACxB,SAAK,eAAe,IAAI;AAAA,EAC1B;AACF;;;AC1KA,IAAM,wBAAwB,OAAO,sBAAsB;AAMpD,IAAM,0BAAN,cAAsC,aAAa;AAAA;AAAA;AAAA;AAAA,EAIxD,QAAQ,QAAQ,EAAE,QAAQ;AACxB,UAAM,WAAW,MAAM,QAAQ,EAAE,MAAM;AACvC,QAAI,SAAS,qBAAqB,KAAK,MAAM;AAC3C,eAAS,qBAAqB,IAAI,qBAAqB,KAAK,QAAQ;AAAA,IACtE;AACA,UAAM;AAAA,MACJ;AAAA,IACF,IAAI;AACJ,UAAM,aAAa,IAAI,OAAO,QAAW,QAAQ;AACjD,UAAM,SAAS,UAAQ;AAGrB,WAAK,cAAc;AAInB,WAAK,gBAAgB;AAIrB,UAAI,CAAC,KAAK,MAAM;AACd,aAAK,OAAO,KAAK;AAAA,MACnB;AACA,YAAM,OAAO;AACb,UAAI,KAAK,UAAU;AACjB,cAAM;AAAA,UACJ;AAAA,QACF,IAAI;AACJ,aAAK,aAAa;AAClB,YAAI,KAAK,eAAe;AAGtB,mBAAS,iBAAiB;AAG1B,mBAAS,cAAc;AAAA,QACzB;AACA,cAAM,WAAW,KAAK;AACtB,YAAI,SAAS,wBAAwB,MAAM;AACzC,mBAAS,aAAa;AAAA,QACxB;AAEA,iBAAS,aAAa;AAItB,YAAI,SAAS,OAAO;AAClB,gBAAM;AAAA,YACJ;AAAA,YACA;AAAA,UACF,IAAI,SAAS,qBAAqB;AAClC,gBAAM,UAAU,eAAe,IAAI,QAAQ;AAC3C,cAAI,KAAK,aAAa,QAAQ,WAAW,QAAQ,QAAQ,aAAa,MAAM;AAC1E,kBAAM,eAAe,KAAK,UAAU,QAAQ,SAAS;AACrD,gBAAI,aAAa,oBAAoB,aAAa,iBAAiB,aAAa,KAAK,SAAS,WAAW,MAAM,MAAM;AACnH,uBAAS,aAAa,OAAO,SAAS,WAAW,EAAE;AAAA,YACrD;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF,CAAC;AACD,WAAO;AAAA,EACT;AAAA,EACA,IAAI,uBAAuB;AACzB,WAAO,KAAK,aAAa,EAAE,qBAAqB;AAAA,EAClD;AAAA;AAAA;AAAA;AAAA,EAIA,CAAC,MAAM,IAAI;AACT,UAAMC,SAAQ,MAAM,MAAM,EAAE;AAC5B,UAAM,6BAA6B,oBAAI,IAAI;AAC3C,IAAAA,OAAM,MAAM,SAAS,UAAQ;AAK3B,YAAM,OAAO;AACb,UAAI,KAAK,UAAU;AACjB,cAAM,WAAW,KAAK;AACtB,YAAI,YAAY,MAAM;AACpB,cAAI,2BAA2B,IAAI,SAAS,IAAI,GAAG;AACjD,iBAAK,WAAW,2BAA2B,IAAI,SAAS,IAAI;AAC5D;AAAA,UACF;AACA,eAAK,WAAW,SAAS,MAAM;AAC/B,qCAA2B,IAAI,SAAS,MAAM,KAAK,QAAQ;AAAA,QAC7D;AAAA,MACF;AACA,YAAM,QAAQ;AACd,UAAI,MAAM,WAAW,QAAW;AAG9B,cAAM,IAAI,MAAM,MAAM;AAAA,MACxB;AAAA,IACF,CAAC;AAID,IAAAA,OAAM,qBAAqB,IAAI,qBAAqB,KAAKA,QAAO,KAAK,oBAAoB;AACzF,WAAOA;AAAA,EACT;AACF;;;AC3HA,IAAM,mBAAmB,CAAC,MAAM,OAAO,WAAW;AAChD,MAAI;AACJ,UAAQ,MAAM;AAAA,IACZ,KAAK;AACH,YAAM,IAAI,kBAAkB,QAAQ,SAAS,CAAC;AAC9C;AAAA,IACF,KAAK;AACH,YAAM,IAAI,YAAY,QAAQ,SAAS,CAAC;AACxC;AAAA,IACF,KAAK;AACH,YAAM,IAAI,YAAY,QAAQ,SAAS,CAAC;AACxC;AAAA,IACF,KAAK;AACH,YAAM,IAAI,UAAU,QAAQ,SAAS,CAAC;AACtC;AAAA,IACF,KAAK;AACH,YAAM,IAAI,WAAW,QAAQ,SAAS,CAAC;AACvC;AAAA,IACF,KAAK;AACH,YAAM,IAAI,WAAW,QAAQ,SAAS,CAAC;AACvC;AAAA,IACF,KAAK;AACH,YAAM,IAAI,aAAa,QAAQ,SAAS,CAAC;AACzC;AAAA,IACF;AACE,YAAM,IAAI,MAAM,uBAAuB;AAAA,EAC3C;AACA,SAAO;AACT;AACA,IAAI;AAaJ,IAAM,gBAAgB,CAAC,MAAM,UAAUC,SAAQ,wBAAwB;AACrE,MAAI,yBAAyB,OAAW,QAAO;AAC/C,QAAM,SAAS,IAAI,kBAAkB,GAAG,GAAG,mBAAmB;AAC9D,WAAS,gBAAgB,MAAM;AAC/B,QAAM,OAAO,IAAI,KAAK,IAAI,cAAc,GAAG,IAAI,kBAAkB;AAAA,IAC/D,OAAO;AAAA,EACT,CAAC,CAAC;AACF,WAAS,OAAO,MAAMA,OAAM;AAC5B,WAAS,gBAAgB,IAAI;AAC7B,QAAM,MAAM,iBAAiB,MAAM,OAAO,OAAO,OAAO,MAAM;AAC9D,WAAS,uBAAuB,QAAQ,GAAG,GAAG,OAAO,OAAO,OAAO,QAAQ,GAAG;AAC9E,SAAO,QAAQ;AACf,OAAK,SAAS,QAAQ;AACtB,OAAK,SAAS,QAAQ;AACtB,yBAAuB,IAAI,CAAC,MAAM;AAClC,SAAO;AACT;AAOA,IAAM,eAAN,MAAM,cAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMjB,YAAY,SAAS;AACnB,QAAIC,MAAIC,MAAIC,KAAIC,KAAIC,KAAIC,KAAIC,KAAIC,KAAIC,KAAIC,KAAIC,KAAIC,KAAIC,KAAI,IAAI,IAAI;AAChE,SAAK,wBAAwB;AAC7B,SAAK,sBAAsB;AAI3B,SAAK,SAAS,MAAM;AAClB,WAAK,UAAU,gBAAgB,KAAK,aAAa;AACjD,UAAI;AACF,aAAK,UAAU,OAAO,KAAK,QAAQ,KAAK,OAAO;AAAA,MACjD,SAAS,GAAG;AACV,aAAK,UAAU,gBAAgB,IAAI;AACnC,cAAM;AAAA,MACR;AACA,WAAK,UAAU,gBAAgB,IAAI;AAAA,IACrC;AACA,SAAK,SAAS,QAAQ;AACtB,SAAK,UAAU,QAAQ;AACvB,SAAK,QAAQ,QAAQ;AACrB,SAAK,cAAc,QAAQ;AAC3B,UAAM,YAAY;AAAA;AAAA,MAEhB,QAAQ;AAAA,MACR,aAAa;AAAA,MACb,eAAe;AAAA;AAAA,MAEf,MAAM,KAAK;AAAA;AAAA,MAEX,YAAY,KAAK;AAAA;AAAA,MAEjB,cAAcZ,OAAK,QAAQ,yBAAyB,QAAQA,SAAO,SAAS,SAASA,KAAG,gBAAgB,UAAaC,OAAK,QAAQ,yBAAyB,QAAQA,SAAO,SAAS,SAASA,KAAG,aAAa;AAAA,MAC5M,mBAAmBC,MAAK,QAAQ,yBAAyB,QAAQA,QAAO,SAAS,SAASA,IAAG,qBAAqB,UAAaC,MAAK,QAAQ,yBAAyB,QAAQA,QAAO,SAAS,SAASA,IAAG,kBAAkB;AAAA,MAC3N,aAAaC,MAAK,QAAQ,yBAAyB,QAAQA,QAAO,SAAS,SAASA,IAAG,eAAe,UAAaC,MAAK,QAAQ,yBAAyB,QAAQA,QAAO,SAAS,SAASA,IAAG,YAAY;AAAA,MACzM,aAAaC,MAAK,QAAQ,yBAAyB,QAAQA,QAAO,SAAS,SAASA,IAAG,eAAe,UAAaC,MAAK,QAAQ,yBAAyB,QAAQA,QAAO,SAAS,SAASA,IAAG,YAAY;AAAA,MACzM,WAAWC,MAAK,QAAQ,yBAAyB,QAAQA,QAAO,SAAS,SAASA,IAAG,aAAa,UAAaC,MAAK,QAAQ,yBAAyB,QAAQA,QAAO,SAAS,SAASA,IAAG,UAAU;AAAA,MACnM,SAASC,MAAK,QAAQ,yBAAyB,QAAQA,QAAO,SAAS,SAASA,IAAG,WAAW,UAAaC,MAAK,QAAQ,yBAAyB,QAAQA,QAAO,SAAS,SAASA,IAAG,QAAQ;AAAA,MAC7L,SAASC,MAAK,QAAQ,yBAAyB,QAAQA,QAAO,SAAS,SAASA,IAAG,WAAW,UAAa,KAAK,QAAQ,yBAAyB,QAAQ,OAAO,SAAS,SAAS,GAAG,QAAQ;AAAA,IAC/L;AACA,SAAK,YAAY,QAAQ;AACzB,QAAI,QAAQ,UAAU;AACpB,WAAK,YAAY,QAAQ;AAAA,IAC3B,OAAO;AACL,WAAK,YAAY,cAAa,oBAAoB;AAClD,WAAK,wBAAwB;AAAA,IAC/B;AACA,SAAK,SAAS,IAAI,MAAM;AACxB,SAAK,UAAU,IAAI,mBAAmB;AACtC,SAAK,QAAQ,SAAS,IAAI,GAAG,GAAG,EAAE;AAClC,SAAK,QAAQ,OAAO;AACpB,SAAK,QAAQ,QAAQ;AACrB,SAAK,QAAQ,MAAM;AACnB,SAAK,QAAQ,SAAS;AACtB,SAAK,QAAQ,uBAAuB;AACpC,QAAI,CAAC,cAAc,KAAK,OAAO,KAAK,WAAW,KAAK,SAAS,SAAS,GAAG;AACvE,UAAI;AACJ,cAAQ,KAAK,OAAO;AAAA,QAClB,KAAK;AACH,4BAAkB,KAAK,UAAU,WAAW,IAAI,wBAAwB,IAAI,YAAY;AACxF;AAAA,MACJ;AACA,UAAI,oBAAoB,QAAW;AACjC,gBAAQ,KAAK,qDAAqD,KAAK,KAAK,gCAAgC,SAAS,EAAE;AACvH,aAAK,QAAQ;AAAA,MACf,OAAO;AACL,aAAK,sBAAsB;AAC3B,gBAAQ,KAAK,8GAA8G;AAAA,MAC7H;AAAA,IACF;AACA,SAAK,QAAQ,IAAI,KAAK,IAAI,cAAc,GAAG,KAAK,SAAS;AACzD,SAAK,MAAM,SAAS,mBAAmB;AACvC,SAAK,OAAO,IAAI,KAAK,KAAK;AAC1B,SAAK,gBAAgB,IAAI,kBAAkB,KAAK,OAAO,KAAK,QAAQ,SAAS;AAC7E,SAAK,cAAc,QAAQ,YAAY,KAAK,QAAQ,yBAAyB,QAAQ,OAAO,SAAS,SAAS,GAAG,aAAa,UAAa,KAAK,QAAQ,yBAAyB,QAAQ,OAAO,SAAS,SAAS,GAAG,UAAU;AAAA,EACjO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAO,sBAAsB;AAC3B,UAAM,WAAW,IAAI,cAAc;AACnC,aAAS,QAAQ,KAAK,GAAG;AAKzB,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,UAAU;AACR,QAAI,CAAC,KAAK,oBAAqB,OAAM,IAAI,MAAM,mCAAoC;AACnF,UAAM,MAAM,iBAAiB,KAAK,OAAO,KAAK,QAAQ,KAAK,OAAO;AAClE,SAAK,UAAU,uBAAuB,KAAK,eAAe,GAAG,GAAG,KAAK,QAAQ,KAAK,SAAS,GAAG;AAC9F,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,cAAc,SAAS;AACrB,UAAM,cAAc,IAAI;AAAA;AAAA,MAExB,KAAK,QAAQ;AAAA,MAAG,KAAK;AAAA,MAAO,KAAK;AAAA,MAAQ;AAAA,MAAY,KAAK;AAAA;AAAA,OAEzD,YAAY,QAAQ,YAAY,SAAS,SAAS,QAAQ,YAAY;AAAA,OAAY,YAAY,QAAQ,YAAY,SAAS,SAAS,QAAQ,UAAU;AAAA,OAAsB,YAAY,QAAQ,YAAY,SAAS,SAAS,QAAQ,UAAU;AAAA,OAAsB,YAAY,QAAQ,YAAY,SAAS,SAAS,QAAQ,cAAc;AAAA,OAAe,YAAY,QAAQ,YAAY,SAAS,SAAS,QAAQ,cAAc;AAAA,OAAe,YAAY,QAAQ,YAAY,SAAS,SAAS,QAAQ,eAAe;AAAA;AAAA,MAE9f;AAAA,IAAoB;AAEpB,gBAAY,mBAAmB,YAAY,QAAQ,YAAY,SAAS,SAAS,QAAQ,qBAAqB,SAAY,YAAY,QAAQ,YAAY,SAAS,SAAS,QAAQ,kBAAkB;AACtM,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAIA,0BAA0B;AACxB,SAAK,UAAU,gBAAgB,IAAI;AACnC,QAAI,KAAK,uBAAuB;AAC9B,WAAK,UAAU,QAAQ;AACvB,WAAK,UAAU,iBAAiB;AAAA,IAClC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA+BA,QAAQ,qBAAqB;AAC3B,SAAK,wBAAwB;AAC7B,QAAI,qBAAqB;AACvB,WAAK,aAAa,QAAQ;AAAA,IAC5B;AAEA,QAAI,KAAK,oBAAoB,gBAAgB;AAC3C,aAAO,OAAO,KAAK,SAAS,QAAQ,EAAE,QAAQ,OAAK;AACjD,YAAI,EAAE,iBAAiB,QAAS,GAAE,MAAM,QAAQ;AAAA,MAClD,CAAC;AAAA,IACH;AAEA,WAAO,OAAO,KAAK,QAAQ,EAAE,QAAQ,WAAS;AAC5C,UAAI,iBAAiB,QAAS,OAAM,QAAQ;AAAA,IAC9C,CAAC;AACD,SAAK,SAAS,QAAQ;AACtB,SAAK,MAAM,SAAS,QAAQ;AAAA,EAC9B;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,QAAQ;AACV,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,MAAM,OAAO;AACf,SAAK,SAAS;AACd,SAAK,cAAc,QAAQ,KAAK,QAAQ,KAAK,OAAO;AAAA,EACtD;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,SAAS;AACX,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,OAAO,OAAO;AAChB,SAAK,UAAU;AACf,SAAK,cAAc,QAAQ,KAAK,QAAQ,KAAK,OAAO;AAAA,EACtD;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,WAAW;AACb,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,eAAe;AACjB,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,aAAa,OAAO;AACtB,SAAK,gBAAgB;AACrB,SAAK,SAAS,MAAM;AACpB,SAAK,UAAU,MAAM;AAAA,EAEvB;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,WAAW;AACb,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,OAAO;AACT,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,aAAa;AACf,WAAO,KAAK;AAAA,EACd;AACF;;;AC7SA,IAAM;AAAA;AAAA,EAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQ/B,IAAM;AAAA;AAAA,EAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiCjC,IAAM,yBAAN,cAAqC,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA,EAKlD,YAAY;AAAA,IACV;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,GAAG;AACD,UAAM;AAAA,MACJ,MAAM;AAAA,MACN;AAAA,MACA;AAAA,MACA,UAAU;AAAA,QACR,KAAK;AAAA,UACH,OAAO;AAAA,QACT;AAAA,QACA,SAAS;AAAA,UACP,OAAO;AAAA,QACT;AAAA,QACA,OAAO;AAAA,UACL,OAAO,IAAI,QAAQ,IAAM,MAAM,CAAC,GAAG,IAAM,MAAM,CAAC,GAAG,IAAM,MAAM,CAAC,CAAC;AAAA,QACnE;AAAA,QACA,WAAW;AAAA,UACT,OAAO,IAAI,QAAQ,EAAE,UAAU,SAAS;AAAA,QAC1C;AAAA,QACA,WAAW;AAAA,UACT,OAAO,IAAI,QAAQ,EAAE,UAAU,SAAS;AAAA,QAC1C;AAAA,QACA,YAAY;AAAA,UACV,OAAO,IAAI,QAAQ,EAAE,UAAU,UAAU;AAAA,QAC3C;AAAA,QACA,YAAY;AAAA,UACV,OAAO,IAAI,QAAQ,EAAE,UAAU,UAAU;AAAA,QAC3C;AAAA,QACA,cAAc;AAAA,UACZ,QAAQ,KAAK,KAAK,eAAe,IAAI,mBAAmB,iBAAiB;AAAA,QAC3E;AAAA,MACF;AAAA,MACA,UAAU;AAAA,MACV,WAAW;AAAA,MACX,YAAY;AAAA,IACd,CAAC;AACD,SAAK,mBAAmB;AACxB,SAAK,kBAAkB;AACvB,SAAK,kBAAkB;AACvB,SAAK,cAAc;AACnB,SAAK,qBAAqB;AAAA,EAC5B;AAAA,EACA,IAAI,MAAM;AACR,WAAO,KAAK,SAAS,IAAI;AAAA,EAC3B;AAAA,EACA,IAAI,IAAI,OAAO;AACb,SAAK,SAAS,IAAI,QAAQ;AAAA,EAC5B;AAAA,EACA,IAAI,UAAU;AACZ,WAAO,KAAK,SAAS,QAAQ;AAAA,EAC/B;AAAA,EACA,IAAI,QAAQ,OAAO;AACjB,SAAK,SAAS,QAAQ,QAAQ;AAAA,EAChC;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,YAAY;AACd,WAAO,KAAK,SAAS,UAAU,MAAM,QAAQ;AAAA,EAC/C;AAAA,EACA,IAAI,UAAU,OAAO;AACnB,SAAK,SAAS,UAAU,MAAM,UAAU,KAAK;AAAA,EAC/C;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,YAAY;AACd,WAAO,KAAK,SAAS,UAAU,MAAM,QAAQ;AAAA,EAC/C;AAAA,EACA,IAAI,UAAU,OAAO;AACnB,SAAK,SAAS,UAAU,MAAM,UAAU,KAAK;AAAA,EAC/C;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,aAAa;AACf,WAAO,KAAK,SAAS,WAAW,MAAM,QAAQ;AAAA,EAChD;AAAA,EACA,IAAI,WAAW,OAAO;AACpB,SAAK,SAAS,WAAW,MAAM,UAAU,KAAK;AAAA,EAChD;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,aAAa;AACf,WAAO,KAAK,SAAS,WAAW,MAAM,QAAQ;AAAA,EAChD;AAAA,EACA,IAAI,WAAW,OAAO;AACpB,SAAK,SAAS,WAAW,MAAM,UAAU,KAAK;AAAA,EAChD;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,QAAQ;AACV,UAAMC,KAAI,KAAK,SAAS,MAAM;AAC9B,WAAO,CAAC,IAAIA,GAAE,GAAG,IAAIA,GAAE,GAAG,IAAIA,GAAE,CAAC;AAAA,EACnC;AAAA,EACA,IAAI,MAAM,OAAO;AACf,UAAMA,KAAI,KAAK,SAAS,MAAM;AAC9B,IAAAA,GAAE,IAAI,IAAM,MAAM,CAAC;AACnB,IAAAA,GAAE,IAAI,IAAM,MAAM,CAAC;AACnB,IAAAA,GAAE,IAAI,IAAM,MAAM,CAAC;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,iBAAiB;AACnB,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,eAAe,OAAO;AACxB,SAAK,kBAAkB;AACvB,SAAK,gBAAgB;AAAA,EACvB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,iBAAiB;AACnB,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,eAAe,OAAO;AACxB,SAAK,kBAAkB;AACvB,SAAK,gBAAgB;AAAA,EACvB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,kBAAkB;AACpB,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,gBAAgB,OAAO;AACzB,SAAK,mBAAmB,KAAK,IAAI,GAAG,KAAK,IAAI,OAAO,KAAK,CAAC;AAC1D,SAAK,gBAAgB;AAAA,EACvB;AAAA,EACA,kBAAkB;AAChB,UAAM,OAAO,KAAK,KAAK,KAAK,gBAAgB,IAAI,KAAK,oBAAoB,KAAK,kBAAkB,KAAK;AACrG,SAAK,SAAS,aAAa,QAAQ,KAAK,IAAI,GAAG,KAAK,IAAI,GAAG,GAAG,CAAC;AAAA,EACjE;AACF;AAmGA,IAAM,uBAAN,cAAmC,MAAM;AAAC;AAC1C,IAAM,2BAAN,cAAuC,MAAM;AAAC;AAC9C,IAAM,cAAc,CAAC,KAAKC,MAAK,iBAAiB;AAE9C,QAAM,iBAAiB,IAAI,OAAO,GAAGA,IAAG,cAAc,GAAG,EAAE,KAAK,GAAG;AACnE,MAAI,eAAgB,QAAO,eAAe,CAAC;AAE3C,QAAM,WAAW,IAAI,OAAO,IAAIA,IAAG,uBAAuBA,IAAG,KAAK,GAAG,EAAE,KAAK,GAAG;AAC/E,MAAI,UAAU;AAEZ,UAAM,WAAW,SAAS,CAAC,EAAE,MAAM,4BAA4B;AAC/D,QAAI,YAAY,SAAS,WAAW,GAAG;AACrC,aAAO,SAAS,IAAI,OAAK,EAAE,QAAQ,gBAAgB,EAAE,CAAC;AAAA,IACxD;AACA,WAAO,SAAS,CAAC,EAAE,KAAK;AAAA,EAC1B;AACA,MAAI,iBAAiB,OAAW,QAAO;AACvC,QAAM,IAAI,MAAM,cAAcA,IAAG,sBAAsB;AACzD;AACA,IAAM,aAAa,WAAS;AAC1B,MAAI;AAEJ,MAAI,OAAO,gBAAgB,YAAa,OAAM,IAAI,YAAY,EAAE,OAAO,KAAK;AAAA,MAAO,OAAM,MAAM,SAAS;AACxG,MAAI,QAAQ,IAAI,QAAQ,YAAY;AACpC,SAAO,UAAU,IAAI;AACnB,UAAM,MAAM,IAAI,QAAQ,cAAc,KAAK;AAC3C,UAAM,WAAW,IAAI,MAAM,OAAO,MAAM,EAAE;AAC1C,QAAI;AACF,YAAM,aAAa,YAAY,UAAU,oBAAoB,GAAG;AAChE,YAAM,aAAa,YAAY,UAAU,kBAAkB;AAC3D,YAAM,QAAQ,YAAY,UAAU,eAAe,GAAG;AACtD,YAAM,YAAY,YAAY,UAAU,mBAAmB,UAAU;AACrE,YAAM,YAAY,YAAY,UAAU,mBAAmB,UAAU;AAErE,YAAM,sBAAsB,iCAAiC,KAAK,QAAQ;AAC1E,YAAM,iBAAiB,sBAAsB,oBAAoB,CAAC,IAAI;AACtE,YAAM,sBAAsB,iCAAiC,KAAK,QAAQ;AAC1E,UAAI,CAAC,oBAAqB,OAAM,IAAI,MAAM,6BAA6B;AACvE,YAAM,iBAAiB,oBAAoB,CAAC;AAC5C,aAAO;AAAA,QACL,YAAY,MAAM,QAAQ,UAAU,IAAI,WAAW,IAAI,OAAK,WAAW,CAAC,CAAC,IAAI,CAAC,WAAW,UAAU,GAAG,WAAW,UAAU,GAAG,WAAW,UAAU,CAAC;AAAA,QACpJ,YAAY,MAAM,QAAQ,UAAU,IAAI,WAAW,IAAI,OAAK,WAAW,CAAC,CAAC,IAAI,CAAC,WAAW,UAAU,GAAG,WAAW,UAAU,GAAG,WAAW,UAAU,CAAC;AAAA,QACpJ,OAAO,MAAM,QAAQ,KAAK,IAAI,MAAM,IAAI,OAAK,WAAW,CAAC,CAAC,IAAI,CAAC,WAAW,KAAK,GAAG,WAAW,KAAK,GAAG,WAAW,KAAK,CAAC;AAAA,QACtH,WAAW,MAAM,QAAQ,SAAS,IAAI,UAAU,IAAI,OAAK,WAAW,CAAC,CAAC,IAAI,CAAC,WAAW,SAAS,GAAG,WAAW,SAAS,GAAG,WAAW,SAAS,CAAC;AAAA,QAC9I,WAAW,MAAM,QAAQ,SAAS,IAAI,UAAU,IAAI,OAAK,WAAW,CAAC,CAAC,IAAI,CAAC,WAAW,SAAS,GAAG,WAAW,SAAS,GAAG,WAAW,SAAS,CAAC;AAAA,QAC9I,gBAAgB,WAAW,cAAc;AAAA,QACzC,gBAAgB,WAAW,cAAc;AAAA,MAC3C;AAAA,IACF,SAAS,GAAG;AAAA,IAEZ;AACA,YAAQ,IAAI,QAAQ,cAAc,GAAG;AAAA,EACvC;AACF;AAaA,IAAM,eAAN,MAAmB;AAAA,EACjB,YAAY,SAAS;AACnB,SAAK,UAAU;AAAA,MACb,OAAO,WAAW,QAAQ,UAAU,SAAY,QAAQ,QAAQ;AAAA,MAChE,YAAY,WAAW,QAAQ,eAAe,SAAY,QAAQ,aAAa;AAAA,MAC/E,eAAe,WAAW,QAAQ,kBAAkB,SAAY,QAAQ,gBAAgB;AAAA,IAC1F;AAAA,EACF;AAAA,EACA,QAAQ,kBAAkB;AACxB,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,YAAM,QAAQ,KAAK,QAAQ;AAC3B,YAAM,WAAW,IAAI,SAAS,iBAAiB,MAAM;AAGrD,UAAI,SAAS,UAAU,CAAC,MAAM,OAAQ;AACpC,eAAO,IAAI,MAAM,kBAAkB,CAAC;AACpC;AAAA,MACF;AACA,YAAM,SAAS,SAAS;AACxB,UAAI,SAAS;AACb,UAAI,QAAQ;AACZ,UAAIC;AACJ,aAAO,SAAS,QAAQ;AACtB,YAAI,EAAE,QAAQ,KAAK;AACjB,iBAAO,IAAI,MAAM,yBAAyB,KAAK,WAAW,CAAC;AAC3D;AAAA,QACF;AACA,YAAI,SAAS,SAAS,MAAM,MAAM,KAAM;AACtC,iBAAO,IAAI,MAAM,kCAAkC,OAAO,SAAS,EAAE,CAAC,cAAc,SAAS,SAAS,MAAM,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC;AAC7H;AAAA,QACF;AACA,QAAAA,UAAS,SAAS,SAAS,SAAS,CAAC;AACrC,YAAI,MAAO,SAAQ,IAAI,WAAWA,QAAO,SAAS,EAAE,CAAC,EAAE;AACvD,YAAIA,YAAW,KAAM;AACnB,cAAI,MAAO,SAAQ,IAAI,4BAA4B;AAInD,gBAAM,WAAW,SAAS;AAe1B,cAAI,SAAS,UAAU,QAAQ,MAAM,YAAY;AAE/C,kBAAM,aAAa,WAAW;AAC9B,gBAAI;AAGJ,gBAAI,SAAS,UAAU,UAAU,MAAM,OAAQ;AAC7C,uBAAS;AAAA,YACX,WAAW,SAAS,UAAU,UAAU,MAAM,OAAQ;AACpD,uBAAS;AAAA,YACX,OAAO;AACL,qBAAO,IAAI,MAAM,iDAAiD,CAAC;AACnE;AAAA,YACF;AACA,gBAAI,SAAS,UAAU,aAAa,GAAG,CAAC,MAAM,MAAM,IAAQ;AAC1D,qBAAO,IAAI,MAAM,yCAAyC,CAAC;AAC3D;AAAA,YACF;AAGA,kBAAM,iBAAiB,SAAS,UAAU,aAAa,GAAG,CAAC,MAAM;AACjE,gBAAI,iBAAiB,GAAY;AAC/B,qBAAO,IAAI,MAAM,iDAAiD,CAAC;AACnE;AAAA,YACF;AAMA,kBAAM,WAAW,aAAa;AAC9B,kBAAM,QAAQ,SAAS,UAAU,UAAU,CAAC,MAAM;AAElD,kBAAM,eAAe,WAAW;AAChC,gBAAI,iBAAiB;AACrB,qBAAS,IAAI,cAAc,IAAI,eAAe,KAAK,OAAO,KAAK,IAAI;AAGjE,kBAAI,SAAS,UAAU,GAAG,CAAC,MAAM,MAAM,OAAQ;AAE7C,iCAAiB,SAAS,UAAU,IAAI,GAAG,CAAC,MAAM;AAAA,cACpD;AAAA,YACF;AACA,kBAAM,mBAAmB;AACzB,kBAAM,mBAAmB,WAAW,IAAI,QAAQ,KAAK;AACrD,kBAAM,SAAS,CAAC;AAChB,qBAAS,IAAI,kBAAkB,IAAI,mBAAmB,iBAAiB,IAAI,KAAK,IAAI;AAClF,oBAAM,QAAQ;AAAA,gBACZ,QAAQ,SAAS,UAAU,GAAG,CAAC,MAAM;AAAA,gBACrC,MAAM,SAAS,UAAU,IAAI,GAAG,CAAC,MAAM;AAAA;AAAA;AAAA;AAAA,gBAIvC,YAAY,SAAS,UAAU,IAAI,GAAG,CAAC,MAAM;AAAA,gBAC7C,iBAAiB,SAAS,UAAU,IAAI,IAAI,CAAC,MAAM;AAAA,gBACnD,OAAO;AAAA,gBACP,KAAK;AAAA,gBACL,OAAO;AAAA,cACT;AACA,kBAAI,CAAC,MAAM,YAAY;AAErB,sBAAM,QAAQ;AACd,sBAAM,QAAQ;AAAA,cAChB,OAAO;AACL,sBAAM,QAAQ,aAAa,MAAM;AACjC,sBAAM,QAAQ;AAAA,cAChB;AACA,oBAAM,MAAM,MAAM,QAAQ,MAAM;AAChC,qBAAO,KAAK,KAAK;AAAA,YACnB;AACA,gBAAI,KAAK,QAAQ,iBAAiB,OAAO,QAAQ;AAC/C,oBAAM,aAAa,IAAI,KAAK,CAAC,QAAQ,CAAC;AACtC,oBAAM,OAAO,CAAC;AACd,yBAAW,SAAS,QAAQ;AAC1B,oBAAI,MAAM,SAAS,CAAC,KAAK,QAAQ,YAAY;AAC3C;AAAA,gBACF;AACA,sBAAM,YAAY,WAAW,MAAM,MAAM,OAAO,MAAM,MAAM,GAAG,YAAY;AAK3E,qBAAK,KAAK,SAAS;AAAA,cACrB;AACA,sBAAQ,IAAI;AAAA,YACd;AAAA,UACF;AAAA,QACF;AACA,kBAAU,IAAI,SAAS,UAAU,SAAS,CAAC;AAAA,MAC7C;AAAA,IACF,CAAC;AAAA,EACH;AACF;AAsBA,IAAM,yBAAyB,CAAM,aAAY;AAC/C,QAAM,WAAW,WAAW,QAAQ;AACpC,MAAI,CAAC,SAAU,OAAM,IAAI,yBAAyB,iCAAiC;AACnF,QAAM,eAAe,IAAI,aAAa;AAAA,IACpC,YAAY;AAAA,IACZ,eAAe;AAAA,EACjB,CAAC;AACD,QAAM,SAAS,MAAM,aAAa,QAAQ,QAAQ;AAClD,MAAI,OAAO,WAAW,EAAG,OAAM,IAAI,qBAAqB,mCAAmC;AAC3F,SAAO;AAAA,IACL,KAAK,IAAI,WAAW,MAAM,OAAO,CAAC,EAAE,YAAY,CAAC;AAAA,IACjD,SAAS,IAAI,WAAW,MAAM,OAAO,CAAC,EAAE,YAAY,CAAC;AAAA,IACrD;AAAA,EACF;AACF;AAQA,IAAM,uBAAuB,UAAQ;AACnC,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,UAAM,MAAM,SAAS,cAAc,KAAK;AACxC,QAAI,SAAS,MAAM;AACjB,cAAQ,GAAG;AAAA,IACb;AACA,QAAI,UAAU,OAAK;AACjB,aAAO,CAAC;AAAA,IACV;AACA,QAAI,MAAM,IAAI,gBAAgB,IAAI;AAAA,EACpC,CAAC;AACH;AACA,IAAM,aAAN,cAAyB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM9B,YAAY,UAAU,SAAS;AAC7B,UAAM,OAAO;AACb,QAAI,SAAU,MAAK,YAAY;AAC/B,SAAK,0BAA0B,IAAI,eAAe;AAAA,EACpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,YAAY,UAAU;AACpB,SAAK,YAAY;AACjB,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,uBAAuB,SAAS;AAC9B,SAAK,uBAAuB;AAC5B,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,sBAAsB;AACpB,QAAI,CAAC,KAAK,UAAW,SAAQ,KAAK,qOAAqO;AAEvQ,UAAM,WAAW,IAAI,uBAAuB;AAAA,MAC1C,YAAY,CAAC,GAAG,GAAG,CAAC;AAAA,MACpB,YAAY,CAAC,GAAG,GAAG,CAAC;AAAA,MACpB,OAAO,CAAC,GAAG,GAAG,CAAC;AAAA,MACf,WAAW,CAAC,GAAG,GAAG,CAAC;AAAA,MACnB,WAAW,CAAC,GAAG,GAAG,CAAC;AAAA,MACnB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,iBAAiB;AAAA,MACjB,SAAS,IAAI,QAAQ;AAAA,MACrB,KAAK,IAAI,QAAQ;AAAA,IACnB,CAAC;AACD,WAAO,IAAI,aAAa;AAAA,MACtB,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,YAAY;AAAA,MACZ;AAAA,MACA,UAAU,KAAK;AAAA,MACf,qBAAqB,KAAK;AAAA,IAC5B,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQM,OAAO,cAAc,UAAU,WAAW,eAAe;AAAA;AAE7D,YAAM,cAAc,gBAAgB,IAAI,KAAK,CAAC,aAAa,GAAG;AAAA,QAC5D,MAAM;AAAA,MACR,CAAC,IAAI;AACL,YAAM,UAAU,IAAI,KAAK,CAAC,SAAS,GAAG;AAAA,QACpC,MAAM;AAAA,MACR,CAAC;AACD,UAAI;AACJ,UAAI;AACJ,UAAI,YAAY;AAChB,UAAI,OAAO,sBAAsB,aAAa;AAC5C,cAAM,MAAM,MAAM,QAAQ,IAAI,CAAC,cAAc,qBAAqB,WAAW,IAAI,QAAQ,QAAQ,MAAS,GAAG,qBAAqB,OAAO,CAAC,CAAC;AAC3I,uBAAe,IAAI,CAAC;AACpB,mBAAW,IAAI,CAAC;AAChB,oBAAY;AAAA,MACd,OAAO;AACL,cAAM,MAAM,MAAM,QAAQ,IAAI,CAAC,cAAc,kBAAkB,aAAa;AAAA,UAC1E,kBAAkB;AAAA,QACpB,CAAC,IAAI,QAAQ,QAAQ,MAAS,GAAG,kBAAkB,SAAS;AAAA,UAC1D,kBAAkB;AAAA,QACpB,CAAC,CAAC,CAAC;AACH,uBAAe,IAAI,CAAC;AACpB,mBAAW,IAAI,CAAC;AAAA,MAClB;AACA,YAAM,UAAU,IAAI,QAAQ,gBAAgB,IAAI,UAAU,GAAG,CAAC,GAAG,WAAW,qBAAqB,qBAAqB,cAAc,0BAA0B,YAAY,kBAAkB,GAAG,oBAAoB;AACnN,cAAQ,QAAQ;AAChB,cAAQ,cAAc;AACtB,YAAM,MAAM,IAAI,QAAQ,UAAU,WAAW,qBAAqB,qBAAqB,cAAc,0BAA0B,YAAY,kBAAkB,GAAG,cAAc;AAC9K,UAAI,QAAQ;AACZ,UAAI,cAAc;AAClB,mBAAa,QAAQ,SAAS;AAC9B,mBAAa,SAAS,SAAS;AAC/B,mBAAa,SAAS,UAAU;AAChC,mBAAa,SAAS,MAAM;AAC5B,mBAAa,SAAS,aAAa,SAAS;AAC5C,mBAAa,SAAS,aAAa,SAAS;AAC5C,mBAAa,SAAS,YAAY,SAAS;AAC3C,mBAAa,SAAS,YAAY,SAAS;AAC3C,mBAAa,SAAS,QAAQ,SAAS;AACvC,mBAAa,SAAS,iBAAiB,SAAS;AAChD,mBAAa,SAAS,iBAAiB,SAAS;AAChD,mBAAa,SAAS,kBAAkB,KAAK,IAAI,GAAG,SAAS,cAAc;AAC3E,mBAAa,SAAS,cAAc;AACpC,mBAAa,OAAO;AAAA,IACtB;AAAA;AACF;AAuOA,IAAM,eAAN,cAA2B,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWpC,KAAK,KAAK,QAAQ,YAAY,SAAS;AACrC,UAAM,eAAe,KAAK,oBAAoB;AAC9C,UAAM,SAAS,IAAI,WAAW,KAAK,uBAAuB;AAC1D,WAAO,gBAAgB,aAAa;AACpC,WAAO,iBAAiB,KAAK,aAAa;AAC1C,WAAO,QAAQ,KAAK,IAAI;AACxB,WAAO,mBAAmB,KAAK,eAAe;AAC9C,SAAK,QAAQ,UAAU,GAAG;AAC1B,WAAO,KAAK,KAAK,CAAM,SAAQ;AAI7B,UAAI,OAAO,SAAS,SAAU,OAAM,IAAI,MAAM,gEAAgE;AAC9G,YAAM,aAAa,IAAI,WAAW,IAAI;AACtC,UAAI;AACJ,UAAI;AACJ,UAAI;AACJ,UAAI;AACF,cAAM,mBAAmB,MAAM,uBAAuB,UAAU;AAEhE,kBAAU,iBAAiB;AAC3B,sBAAc,iBAAiB;AAC/B,mBAAW,iBAAiB;AAAA,MAC9B,SAAS,GAAG;AAEV,YAAI,aAAa,4BAA4B,aAAa,sBAAsB;AAC9E,kBAAQ,KAAK,4CAA4C,GAAG,kFAAkF;AAC9I,qBAAW;AAAA,YACT,YAAY,CAAC,GAAG,GAAG,CAAC;AAAA,YACpB,YAAY,CAAC,GAAG,GAAG,CAAC;AAAA,YACpB,OAAO,CAAC,GAAG,GAAG,CAAC;AAAA,YACf,gBAAgB;AAAA,YAChB,gBAAgB;AAAA,YAChB,WAAW,CAAC,GAAG,GAAG,CAAC;AAAA,YACnB,WAAW,CAAC,GAAG,GAAG,CAAC;AAAA,UACrB;AACA,oBAAU;AAAA,QACZ,OAAO;AACL,gBAAM;AAAA,QACR;AAAA,MACF;AAEA,UAAI;AACF,cAAM,KAAK,OAAO,cAAc,UAAU,SAAS,WAAW;AAAA,MAChE,SAAS,OAAO;AACd,aAAK,QAAQ,UAAU,GAAG;AAC1B,YAAI,OAAO,YAAY,WAAY,SAAQ,KAAK;AAChD,qBAAa,wBAAwB;AACrC;AAAA,MACF;AACA,UAAI,OAAO,WAAW,WAAY,QAAO,YAAY;AACrD,WAAK,QAAQ,QAAQ,GAAG;AACxB,mBAAa,wBAAwB;AAAA,IACvC,IAAG,YAAY,WAAS;AACtB,WAAK,QAAQ,UAAU,GAAG;AAC1B,UAAI,OAAO,YAAY,WAAY,SAAQ,KAAK;AAAA,IAClD,CAAC;AACD,WAAO;AAAA,EACT;AACF;;;ACv8BA,IAAM,aAAN,cAAyB,kBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMzC,YAAY,SAAS;AACnB,UAAM,OAAO;AAQb,SAAK,OAAO;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,MAAM,QAAQ;AAGZ,UACE,kBAAkB,GAClB,mBAAmB,GACnB,oBAAoB,GACpB,oBAAoB,GACpB,aAAa,SAAU,iBAAiB,KAAK;AAC3C,cAAQ,iBAAiB;AAAA,QACvB,KAAK;AACH,gBAAM,IAAI,MAAM,oCAAoC,OAAO,GAAG;AAAA,QAChE,KAAK;AACH,gBAAM,IAAI,MAAM,qCAAqC,OAAO,GAAG;AAAA,QACjE,KAAK;AACH,gBAAM,IAAI,MAAM,yCAAyC,OAAO,GAAG;AAAA,QACrE;AAAA,QACA,KAAK;AACH,gBAAM,IAAI,MAAM,sCAAsC,OAAO,GAAG;AAAA,MACpE;AAAA,IACF,GAUA,yBAAyB,GACzB,oBAAoB,GACpB,wBAAwB,GACxB,UAAU,MACV,QAAQ,SAAUC,SAAQ,WAAW,SAAS;AAC5C,YAAM,YAAY;AAClB,kBAAY,CAAC,YAAY,OAAO;AAChC,UAAI,IAAIA,QAAO,KACb,IAAI,IACJ,MAAM,GACN,IAAI,IACJ,QAAQ,OAAO,aAAa,MAAM,MAAM,IAAI,YAAYA,QAAO,SAAS,GAAG,IAAI,SAAS,CAAC,CAAC;AAC5F,aAAO,KAAK,IAAI,MAAM,QAAQ,OAAO,MAAM,MAAM,aAAa,IAAIA,QAAO,YAAY;AACnF,aAAK;AACL,eAAO,MAAM;AACb,aAAK;AACL,iBAAS,OAAO,aAAa,MAAM,MAAM,IAAI,YAAYA,QAAO,SAAS,GAAG,IAAI,SAAS,CAAC,CAAC;AAAA,MAC7F;AACA,UAAI,KAAK,GAAG;AAOV,YAAI,UAAU,QAAS,CAAAA,QAAO,OAAO,MAAM,IAAI;AAC/C,eAAO,IAAI,MAAM,MAAM,GAAG,CAAC;AAAA,MAC7B;AACA,aAAO;AAAA,IACT,GAEA,kBAAkB,SAAUA,SAAQ;AAElC,YAAM,iBAAiB,aACrB,WAAW,qCACX,cAAc,wCACd,YAAY,wBACZ,gBAAgB,qCAEhB,SAAS;AAAA,QACP,OAAO;AAAA;AAAA,QAGP,QAAQ;AAAA;AAAA,QAGR,UAAU;AAAA;AAAA,QAGV,aAAa;AAAA;AAAA,QAGb,QAAQ;AAAA;AAAA,QAGR,OAAO;AAAA;AAAA,QAGP,UAAU;AAAA;AAAA,QAGV,OAAO;AAAA,QACP,QAAQ;AAAA;AAAA,MACV;AACF,UAAI,MAAM;AACV,UAAIA,QAAO,OAAOA,QAAO,cAAc,EAAE,OAAO,MAAMA,OAAM,IAAI;AAC9D,mBAAW,iBAAiB,iBAAiB;AAAA,MAC/C;AAGA,UAAI,EAAE,QAAQ,KAAK,MAAM,cAAc,IAAI;AACzC,mBAAW,mBAAmB,mBAAmB;AAAA,MACnD;AACA,aAAO,SAAS;AAChB,aAAO,cAAc,MAAM,CAAC;AAC5B,aAAO,UAAU,OAAO;AACxB,aAAO,MAAM;AACX,eAAO,MAAMA,OAAM;AACnB,YAAI,UAAU,KAAM;AACpB,eAAO,UAAU,OAAO;AACxB,YAAI,QAAQ,KAAK,OAAO,CAAC,GAAG;AAC1B,iBAAO,YAAY,OAAO;AAC1B;AAAA,QACF;AACA,YAAI,QAAQ,KAAK,MAAM,QAAQ,GAAG;AAChC,iBAAO,QAAQ,WAAW,MAAM,CAAC,CAAC;AAAA,QACpC;AACA,YAAI,QAAQ,KAAK,MAAM,WAAW,GAAG;AACnC,iBAAO,WAAW,WAAW,MAAM,CAAC,CAAC;AAAA,QACvC;AACA,YAAI,QAAQ,KAAK,MAAM,SAAS,GAAG;AACjC,iBAAO,SAAS;AAChB,iBAAO,SAAS,MAAM,CAAC;AAAA,QACzB;AACA,YAAI,QAAQ,KAAK,MAAM,aAAa,GAAG;AACrC,iBAAO,SAAS;AAChB,iBAAO,SAAS,SAAS,MAAM,CAAC,GAAG,EAAE;AACrC,iBAAO,QAAQ,SAAS,MAAM,CAAC,GAAG,EAAE;AAAA,QACtC;AACA,YAAI,OAAO,QAAQ,qBAAqB,OAAO,QAAQ,sBAAuB;AAAA,MAChF;AACA,UAAI,EAAE,OAAO,QAAQ,oBAAoB;AACvC,mBAAW,mBAAmB,0BAA0B;AAAA,MAC1D;AACA,UAAI,EAAE,OAAO,QAAQ,wBAAwB;AAC3C,mBAAW,mBAAmB,8BAA8B;AAAA,MAC9D;AACA,aAAO;AAAA,IACT,GACA,sBAAsB,SAAUA,SAAQC,IAAGC,IAAG;AAC5C,YAAM,iBAAiBD;AACvB;AAAA;AAAA,QAEA,iBAAiB,KAAK,iBAAiB;AAAA,QAEvC,MAAMD,QAAO,CAAC,KAAK,MAAMA,QAAO,CAAC,KAAKA,QAAO,CAAC,IAAI;AAAA,QAAM;AAEtD,eAAO,IAAI,WAAWA,OAAM;AAAA,MAC9B;AACA,UAAI,oBAAoBA,QAAO,CAAC,KAAK,IAAIA,QAAO,CAAC,IAAI;AACnD,mBAAW,mBAAmB,sBAAsB;AAAA,MACtD;AACA,YAAM,YAAY,IAAI,WAAW,IAAIC,KAAIC,EAAC;AAC1C,UAAI,CAAC,UAAU,QAAQ;AACrB,mBAAW,mBAAmB,iCAAiC;AAAA,MACjE;AACA,UAAI,SAAS,GACX,MAAM;AACR,YAAM,UAAU,IAAI;AACpB,YAAM,YAAY,IAAI,WAAW,CAAC;AAClC,YAAM,kBAAkB,IAAI,WAAW,OAAO;AAC9C,UAAI,gBAAgBA;AAGpB,aAAO,gBAAgB,KAAK,MAAMF,QAAO,YAAY;AACnD,YAAI,MAAM,IAAIA,QAAO,YAAY;AAC/B,qBAAW,eAAe;AAAA,QAC5B;AACA,kBAAU,CAAC,IAAIA,QAAO,KAAK;AAC3B,kBAAU,CAAC,IAAIA,QAAO,KAAK;AAC3B,kBAAU,CAAC,IAAIA,QAAO,KAAK;AAC3B,kBAAU,CAAC,IAAIA,QAAO,KAAK;AAC3B,YAAI,KAAK,UAAU,CAAC,KAAK,KAAK,UAAU,CAAC,MAAM,UAAU,CAAC,KAAK,IAAI,UAAU,CAAC,MAAM,gBAAgB;AAClG,qBAAW,mBAAmB,0BAA0B;AAAA,QAC1D;AAIA,YAAI,MAAM,GACR;AACF,eAAO,MAAM,WAAW,MAAMA,QAAO,YAAY;AAC/C,kBAAQA,QAAO,KAAK;AACpB,gBAAM,eAAe,QAAQ;AAC7B,cAAI,aAAc,UAAS;AAC3B,cAAI,MAAM,SAAS,MAAM,QAAQ,SAAS;AACxC,uBAAW,mBAAmB,mBAAmB;AAAA,UACnD;AACA,cAAI,cAAc;AAEhB,kBAAM,YAAYA,QAAO,KAAK;AAC9B,qBAAS,IAAI,GAAG,IAAI,OAAO,KAAK;AAC9B,8BAAgB,KAAK,IAAI;AAAA,YAC3B;AAAA,UAEF,OAAO;AAEL,4BAAgB,IAAIA,QAAO,SAAS,KAAK,MAAM,KAAK,GAAG,GAAG;AAC1D,mBAAO;AACP,mBAAO;AAAA,UACT;AAAA,QACF;AAIA,cAAM,IAAI;AACV,iBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,cAAI,MAAM;AACV,oBAAU,MAAM,IAAI,gBAAgB,IAAI,GAAG;AAC3C,iBAAO;AACP,oBAAU,SAAS,CAAC,IAAI,gBAAgB,IAAI,GAAG;AAC/C,iBAAO;AACP,oBAAU,SAAS,CAAC,IAAI,gBAAgB,IAAI,GAAG;AAC/C,iBAAO;AACP,oBAAU,SAAS,CAAC,IAAI,gBAAgB,IAAI,GAAG;AAC/C,oBAAU;AAAA,QACZ;AACA;AAAA,MACF;AACA,aAAO;AAAA,IACT;AACF,UAAM,qBAAqB,SAAU,aAAa,cAAc,WAAW,YAAY;AACrF,YAAM,IAAI,YAAY,eAAe,CAAC;AACtC,YAAM,QAAQ,KAAK,IAAI,GAAK,IAAI,GAAK,IAAI;AACzC,gBAAU,aAAa,CAAC,IAAI,YAAY,eAAe,CAAC,IAAI;AAC5D,gBAAU,aAAa,CAAC,IAAI,YAAY,eAAe,CAAC,IAAI;AAC5D,gBAAU,aAAa,CAAC,IAAI,YAAY,eAAe,CAAC,IAAI;AAC5D,gBAAU,aAAa,CAAC,IAAI;AAAA,IAC9B;AACA,UAAM,oBAAoB,SAAU,aAAa,cAAc,WAAW,YAAY;AACpF,YAAM,IAAI,YAAY,eAAe,CAAC;AACtC,YAAM,QAAQ,KAAK,IAAI,GAAK,IAAI,GAAK,IAAI;AAGzC,gBAAU,aAAa,CAAC,IAAI,UAAU,YAAY,KAAK,IAAI,YAAY,eAAe,CAAC,IAAI,OAAO,KAAK,CAAC;AACxG,gBAAU,aAAa,CAAC,IAAI,UAAU,YAAY,KAAK,IAAI,YAAY,eAAe,CAAC,IAAI,OAAO,KAAK,CAAC;AACxG,gBAAU,aAAa,CAAC,IAAI,UAAU,YAAY,KAAK,IAAI,YAAY,eAAe,CAAC,IAAI,OAAO,KAAK,CAAC;AACxG,gBAAU,aAAa,CAAC,IAAI,UAAU,YAAY,CAAC;AAAA,IACrD;AACA,UAAM,YAAY,IAAI,WAAW,MAAM;AACvC,cAAU,MAAM;AAChB,UAAM,mBAAmB,gBAAgB,SAAS;AAClD,UAAM,IAAI,iBAAiB,OACzB,IAAI,iBAAiB,QACrB,kBAAkB,oBAAoB,UAAU,SAAS,UAAU,GAAG,GAAG,GAAG,CAAC;AAC/E,QAAI,MAAM;AACV,QAAI;AACJ,YAAQ,KAAK,MAAM;AAAA,MACjB,KAAK;AACH,sBAAc,gBAAgB,SAAS;AACvC,cAAM,aAAa,IAAI,aAAa,cAAc,CAAC;AACnD,iBAAS,IAAI,GAAG,IAAI,aAAa,KAAK;AACpC,6BAAmB,iBAAiB,IAAI,GAAG,YAAY,IAAI,CAAC;AAAA,QAC9D;AACA,eAAO;AACP,eAAO;AACP;AAAA,MACF,KAAK;AACH,sBAAc,gBAAgB,SAAS;AACvC,cAAM,YAAY,IAAI,YAAY,cAAc,CAAC;AACjD,iBAAS,IAAI,GAAG,IAAI,aAAa,KAAK;AACpC,4BAAkB,iBAAiB,IAAI,GAAG,WAAW,IAAI,CAAC;AAAA,QAC5D;AACA,eAAO;AACP,eAAO;AACP;AAAA,MACF;AACE,cAAM,IAAI,MAAM,yCAAyC,KAAK,IAAI;AAClE;AAAA,IACJ;AACA,WAAO;AAAA,MACL,OAAO;AAAA,MACP,QAAQ;AAAA,MACR;AAAA,MACA,QAAQ,iBAAiB;AAAA,MACzB,OAAO,iBAAiB;AAAA,MACxB,UAAU,iBAAiB;AAAA,MAC3B;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,YAAY,OAAO;AACjB,SAAK,OAAO;AACZ,WAAO;AAAA,EACT;AAAA,EACA,KAAK,KAAK,QAAQ,YAAY,SAAS;AACrC,aAAS,eAAe,SAAS,SAAS;AACxC,cAAQ,QAAQ,MAAM;AAAA,QACpB,KAAK;AAAA,QACL,KAAK;AACH,kBAAQ,aAAa;AACrB,kBAAQ,YAAY;AACpB,kBAAQ,YAAY;AACpB,kBAAQ,kBAAkB;AAC1B,kBAAQ,QAAQ;AAChB;AAAA,MACJ;AACA,UAAI,OAAQ,QAAO,SAAS,OAAO;AAAA,IACrC;AACA,WAAO,MAAM,KAAK,KAAK,gBAAgB,YAAY,OAAO;AAAA,EAC5D;AACF;;;AC3UA,IAAM,SAAS;AAAA,EACb,UAAU;AAAA,IACR,WAAW;AAAA,IACX,UAAU,CAAC,OAAO,QAAQ,GAAK;AAAA,EACjC;AAAA,EACA,MAAM;AAAA,IACJ,UAAU,CAAC,QAAQ,QAAQ,KAAK;AAAA,IAChC,OAAO,CAAC,QAAQ,QAAQ,MAAM;AAAA,EAChC;AAAA,EACA,OAAO,CAAC;AAAA,IACN,UAAU,CAAC,SAAS,OAAO,KAAK;AAAA,IAChC,UAAU;AAAA,IACV,OAAO,CAAC,OAAO,OAAO,KAAK;AAAA,EAC7B,GAAG;AAAA,IACD,UAAU,CAAC,QAAQ,QAAQ,MAAM;AAAA,IACjC,UAAU;AAAA,IACV,OAAO,CAAC,MAAO,OAAO,KAAK;AAAA,EAC7B,GAAG;AAAA,IACD,UAAU,CAAC,OAAO,OAAO,KAAK;AAAA,IAC9B,UAAU;AAAA,IACV,OAAO,CAAC,OAAO,OAAO,KAAK;AAAA,EAC7B,GAAG;AAAA,IACD,UAAU,CAAC,QAAQ,OAAO,KAAK;AAAA,IAC/B,UAAU;AAAA,IACV,OAAO,CAAC,OAAO,OAAO,KAAK;AAAA,EAC7B,GAAG;AAAA,IACD,UAAU,CAAC,OAAO,QAAQ,MAAM;AAAA,IAChC,UAAU;AAAA,IACV,OAAO,CAAC,OAAO,OAAO,KAAK;AAAA,EAC7B,GAAG;AAAA,IACD,UAAU,CAAC,QAAQ,QAAQ,MAAM;AAAA,IACjC,UAAU;AAAA,IACV,OAAO,CAAC,OAAO,OAAO,KAAK;AAAA,EAC7B,CAAC;AAAA,EACD,QAAQ,CAAC;AAAA,IACP,WAAW;AAAA,IACX,UAAU,CAAC,SAAS,OAAO,KAAK;AAAA,IAChC,OAAO,CAAC,KAAK,OAAO,KAAK;AAAA,EAC3B,GAAG;AAAA,IACD,WAAW;AAAA,IACX,UAAU,CAAC,SAAS,QAAQ,MAAM;AAAA,IAClC,OAAO,CAAC,KAAK,OAAO,KAAK;AAAA,EAC3B,GAAG;AAAA,IACD,WAAW;AAAA,IACX,UAAU,CAAC,QAAQ,QAAQ,MAAM;AAAA,IACjC,OAAO,CAAC,MAAM,OAAO,KAAK;AAAA,EAC5B,GAAG;AAAA,IACD,WAAW;AAAA,IACX,UAAU,CAAC,QAAQ,MAAM,KAAM;AAAA,IAC/B,OAAO,CAAC,MAAM,OAAO,KAAK;AAAA,EAC5B,GAAG;AAAA,IACD,WAAW;AAAA,IACX,UAAU,CAAC,OAAO,QAAQ,OAAO;AAAA,IACjC,OAAO,CAAC,KAAK,GAAK,GAAG;AAAA,EACvB,GAAG;AAAA,IACD,WAAW;AAAA,IACX,UAAU,CAAC,GAAK,IAAM,CAAG;AAAA,IACzB,OAAO,CAAC,GAAK,KAAK,CAAG;AAAA,EACvB,CAAC;AACH;AACA,IAAM,UAAU;AAAA,EACd,UAAU;AAAA,IACR,WAAW;AAAA,IACX,UAAU,CAAC,KAAK,IAAM,GAAG;AAAA,EAC3B;AAAA,EACA,MAAM;AAAA,IACJ,UAAU,CAAC,GAAK,MAAM,CAAG;AAAA,IACzB,OAAO,CAAC,MAAM,MAAM,IAAI;AAAA,EAC1B;AAAA,EACA,OAAO,CAAC;AAAA,IACN,UAAU,CAAC,SAAS,IAAM,KAAK;AAAA,IAC/B,UAAU;AAAA,IACV,OAAO,CAAC,OAAO,OAAO,KAAK;AAAA,EAC7B,GAAG;AAAA,IACD,UAAU,CAAC,QAAQ,QAAQ,MAAM;AAAA,IACjC,UAAU;AAAA,IACV,OAAO,CAAC,MAAO,OAAO,KAAK;AAAA,EAC7B,GAAG;AAAA,IACD,UAAU,CAAC,OAAO,OAAO,KAAK;AAAA,IAC9B,UAAU;AAAA,IACV,OAAO,CAAC,OAAO,OAAO,KAAK;AAAA,EAC7B,GAAG;AAAA,IACD,UAAU,CAAC,QAAQ,OAAO,KAAK;AAAA,IAC/B,UAAU;AAAA,IACV,OAAO,CAAC,OAAO,OAAO,KAAK;AAAA,EAC7B,GAAG;AAAA,IACD,UAAU,CAAC,OAAO,QAAQ,MAAM;AAAA,IAChC,UAAU;AAAA,IACV,OAAO,CAAC,OAAO,OAAO,KAAK;AAAA,EAC7B,GAAG;AAAA,IACD,UAAU,CAAC,QAAQ,QAAQ,MAAM;AAAA,IACjC,UAAU;AAAA,IACV,OAAO,CAAC,OAAO,OAAO,KAAK;AAAA,EAC7B,CAAC;AAAA,EACD,QAAQ,CAAC;AAAA,IACP,WAAW;AAAA,IACX,UAAU,CAAC,KAAO,IAAM,CAAG;AAAA,IAC3B,OAAO,CAAC,KAAK,KAAK,GAAG;AAAA,EACvB,GAAG;AAAA,IACD,WAAW;AAAA,IACX,UAAU,CAAC,KAAO,IAAM,EAAI;AAAA,IAC5B,OAAO,CAAC,KAAK,KAAK,GAAG;AAAA,EACvB,GAAG;AAAA,IACD,WAAW;AAAA,IACX,UAAU,CAAC,IAAM,IAAM,CAAG;AAAA,IAC1B,OAAO,CAAC,KAAK,GAAK,CAAG;AAAA,EACvB,GAAG;AAAA,IACD,WAAW;AAAA,IACX,UAAU,CAAC,GAAK,GAAK,EAAI;AAAA,IACzB,OAAO,CAAC,GAAK,GAAK,GAAG;AAAA,EACvB,GAAG;AAAA,IACD,WAAW;AAAA,IACX,UAAU,CAAC,GAAK,GAAK,GAAK;AAAA,IAC1B,OAAO,CAAC,KAAK,KAAK,GAAG;AAAA,EACvB,GAAG;AAAA,IACD,WAAW;AAAA,IACX,UAAU,CAAC,IAAM,IAAM,GAAK;AAAA,IAC5B,OAAO,CAAC,KAAK,KAAK,GAAG;AAAA,EACvB,GAAG;AAAA,IACD,WAAW;AAAA,IACX,UAAU,CAAC,GAAK,IAAM,CAAG;AAAA,IACzB,OAAO,CAAC,KAAK,KAAK,GAAG;AAAA,EACvB,CAAC;AACH;AACA,IAAqB,mBAArB,cAA8C,MAAM;AAAA,EAClD,YAAY,MAAM;AAChB,UAAM;AACN,SAAK,SAAS,IAAI;AAClB,UAAM,WAAW,IAAI,YAAY;AACjC,aAAS,gBAAgB,IAAI;AAC7B,UAAM,eAAe,IAAI,qBAAqB;AAAA,MAC5C,WAAW;AAAA,MACX,MAAM;AAAA,IACR,CAAC;AACD,UAAM,cAAc,IAAI,qBAAqB;AAAA,MAC3C,WAAW;AAAA,IACb,CAAC;AACD,UAAM,OAAO,QAAQ,WAAW,SAAS;AACzC,UAAM,YAAY,IAAI,WAAW,UAAU,KAAK,SAAS,WAAW,IAAI,CAAC;AACzE,cAAU,SAAS,IAAI,GAAG,KAAK,SAAS,QAAQ;AAChD,SAAK,IAAI,SAAS;AAClB,UAAM,OAAO,IAAI,KAAK,UAAU,YAAY;AAC5C,SAAK,SAAS,IAAI,GAAG,KAAK,KAAK,QAAQ;AACvC,SAAK,MAAM,IAAI,GAAG,KAAK,KAAK,KAAK;AACjC,SAAK,IAAI,IAAI;AACb,eAAW,OAAO,KAAK,OAAO;AAC5B,YAAM,OAAO,IAAI,KAAK,UAAU,WAAW;AAC3C,WAAK,SAAS,IAAI,GAAG,IAAI,QAAQ;AACjC,WAAK,SAAS,IAAI,GAAG,IAAI,UAAU,CAAC;AACpC,WAAK,MAAM,IAAI,GAAG,IAAI,KAAK;AAC3B,WAAK,IAAI,IAAI;AAAA,IACf;AACA,eAAW,SAAS,KAAK,QAAQ;AAC/B,YAAM,SAAS,IAAI,KAAK,UAAU,KAAK,wBAAwB,MAAM,SAAS,CAAC;AAC/E,aAAO,SAAS,IAAI,GAAG,MAAM,QAAQ;AACrC,aAAO,MAAM,IAAI,GAAG,MAAM,KAAK;AAC/B,WAAK,IAAI,MAAM;AAAA,IACjB;AAAA,EACF;AAAA,EACA,wBAAwB,WAAW;AACjC,UAAM,WAAW,IAAI,kBAAkB;AACvC,aAAS,MAAM,UAAU,SAAS;AAClC,WAAO;AAAA,EACT;AACF;;;AChKA,IAAM,kBAAkB;AAGxB,IAAM,cAAc;AACpB,IAAM,cAAc;AACpB,IAAqB,eAArB,MAAkC;AAAA,EAChC,YAAY,eAAe;AACzB,SAAK,gBAAgB;AACrB,SAAK,kBAAkB;AACvB,SAAK,aAAa;AAClB,SAAK,eAAe;AACpB,SAAK,aAAa;AAClB,SAAK,gBAAgB;AACrB,SAAK,0BAA0B;AAC/B,SAAK,6BAA6B;AAClC,SAAK,cAAc,oBAAI,IAAI;AAC3B,SAAK,eAAe;AACpB,SAAK,YAAY;AAAA,EACnB;AAAA,EACA,UAAU,iBAAiB;AACzB,QAAI,KAAK,cAAc,MAAM;AAC3B,WAAK,aAAa,IAAI,cAAc;AAAA,IACtC;AACA,SAAK,WAAW,mBAAmB,eAAe;AAClD,WAAO,KAAK;AAAA,EACd;AAAA,EACA,YAAY,iBAAiB;AAC3B,QAAI,KAAK,gBAAgB,MAAM;AAC7B,WAAK,eAAe,IAAI,aAAa,KAAK,aAAa;AAAA,IACzD;AACA,SAAK,aAAa,mBAAmB,eAAe;AACpD,WAAO,KAAK;AAAA,EACd;AAAA,EACA,UAAU,iBAAiB;AACzB,QAAI,KAAK,cAAc,MAAM;AAC3B,WAAK,aAAa,IAAI,WAAW;AACjC,WAAK,WAAW,YAAY,aAAa;AAAA,IAC3C;AACA,SAAK,WAAW,mBAAmB,eAAe;AAClD,WAAO,KAAK;AAAA,EACd;AAAA,EACM,gBAAgB,iBAAiB;AAAA;AACrC,UAAI,KAAK,iBAAiB,MAAM;AAC9B,cAAM;AAAA,UACJ;AAAA,QACF,IAAI,MAAM;AAAA;AAAA,UAAgC,KAAK;AAAA;AAC/C,aAAK,gBAAgB,IAAI,aAAa;AAAA,MACxC;AACA,WAAK,cAAc,mBAAmB,eAAe;AACrD,aAAO,KAAK;AAAA,IACd;AAAA;AAAA,EACM,UAAU,KAAK,iBAAiB;AAAA;AACpC,YAAM,UAAU,MAAM,IAAI,QAAQ,CAAC,SAAS,WAAW,KAAK,UAAU,eAAe,EAAE,KAAK,KAAK,SAAS,MAAM;AAAA,MAAC,GAAG,MAAM,CAAC;AAC3H,cAAQ,OAAO;AACf,cAAQ,QAAQ;AAChB,aAAO;AAAA,IACT;AAAA;AAAA,EACM,WAAW,KAAK,SAAS,iBAAiB;AAAA;AAC9C,YAAM,SAAS,MAAM,KAAK,gBAAgB,eAAe;AACzD,aAAO,WAAW,OAAO;AACzB,YAAM,UAAU,MAAM,IAAI,QAAQ,CAAC,SAAS,WAAW,OAAO,KAAK,KAAK,SAAS,MAAM;AAAA,MAAC,GAAG,MAAM,CAAC;AAClG,cAAQ,OAAO;AACf,aAAO;AAAA,IACT;AAAA;AAAA,EACM,aAAa,KAAK,kBAAkB,OAAO,mBAAmB,MAAM;AAAA,EAAC,GAAG;AAAA;AAC5E,UAAI;AACF,cAAM,QAAQ,YAAY,KAAK,GAAG;AAClC,cAAM,SAAS,QAAQ,KAAK,UAAU,eAAe,IAAI,KAAK,YAAY,eAAe;AACzF,cAAM,UAAU,MAAM,IAAI,QAAQ,CAAC,SAAS,WAAW,OAAO,KAAK,KAAK,YAAU;AAChF,gBAAM;AAAA,YACJ;AAAA,UACF,IAAI;AACJ,cAAI,gBAAgB,MAAM;AACxB,kBAAM;AAAA,cACJ,SAAAG;AAAA,YACF,IAAI;AACJ,mBAAO,QAAQ,KAAK;AACpB,oBAAQA,QAAO;AAAA,UACjB,OAAO;AACL,oBAAQ,MAAM;AAAA,UAChB;AAAA,QACF,GAAG,WAAS;AACV,2BAAiB,MAAM,SAAS,MAAM,QAAQ,GAAG;AAAA,QACnD,GAAG,MAAM,CAAC;AACV,yBAAiB,CAAG;AACpB,gBAAQ,OAAO;AACf,gBAAQ,UAAU;AAClB,YAAI,CAAC,OAAO;AACV,kBAAQ,aAAa;AAAA,QACvB;AACA,eAAO;AAAA,MACT,UAAE;AACA,YAAI,kBAAkB;AACpB,2BAAiB,CAAC;AAAA,QACpB;AAAA,MACF;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMM,gCAAgC,YAAY,MAAM,oBAAoB,MAAM,mBAAmB,MAAM;AAAA,EAAC,GAAG,kBAAkB,OAAO;AAAA;AACtI,YAAM,oBAAoB,sBAAsB;AAChD,UAAI,sBAAsB,YAAY,sBAAsB,WAAW;AACrE,4BAAoB;AAAA,MACtB;AACA,0BAAoB,eAAe,iBAAiB;AACpD,UAAI,cAAc,QAAQ,QAAQ,IAAI;AACtC,UAAI;AAEJ,UAAI,CAAC,CAAC,WAAW;AACf,sBAAc,KAAK,oBAAoB,WAAW,iBAAiB,gBAAgB;AAAA,MACrF;AACA,UAAI,CAAC,CAAC,mBAAmB;AAEvB,8BAAsB,KAAK,oBAAoB,mBAAmB,iBAAiB,gBAAgB;AAAA,MACrG,WAAW,CAAC,CAAC,WAAW;AAEtB,8BAAsB,KAAK,oBAAoB,WAAW,iBAAiB,gBAAgB;AAAA,MAC7F,OAAO;AAEL,8BAAsB,oBAAoB,KAAK,+BAA+B,IAAI,KAAK,4BAA4B;AAAA,MACrH;AACA,YAAM,CAAC,gBAAgB,MAAM,IAAI,MAAM,QAAQ,IAAI,CAAC,qBAAqB,WAAW,CAAC;AACrF,UAAI,kBAAkB,MAAM;AAC1B,cAAM,IAAI,MAAM,iCAAiC;AAAA,MACnD;AACA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAIM,oBAAoB,KAAK,iBAAiB,kBAAkB;AAAA;AAChE,UAAI,CAAC,KAAK,YAAY,IAAI,GAAG,GAAG;AAC9B,cAAM,iBAAiB,KAAK,aAAa,KAAK,iBAAiB,gBAAgB;AAC/E,aAAK,YAAY,IAAI,KAAK,cAAc;AAAA,MAC1C;AACA,aAAO,KAAK,YAAY,IAAI,GAAG;AAAA,IACjC;AAAA;AAAA,EACM,uBAAuB,OAAO,MAAM;AAAA;AACxC,YAAM,WAAW;AACjB,YAAM,WAAW,KAAK;AACtB,YAAM,aAAa,IAAI,sBAAsB,KAAK;AAAA,QAChD,iBAAiB;AAAA,QACjB,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,YAAY;AAAA,QACZ,aAAa;AAAA,MACf,CAAC;AACD,YAAM,aAAa,IAAI,WAAW,KAAK,KAAK,UAAU;AACtD,YAAM,0BAA0B,WAAW,aAAa;AACxD,8BAAwB,OAAO;AAC/B,YAAM,mBAAmB,SAAS;AAClC,YAAM,cAAc,SAAS;AAC7B,eAAS,cAAc;AACvB,eAAS,mBAAmB;AAC5B,iBAAW,OAAO,UAAU,KAAK;AACjC,WAAK,YAAY,YAAY,eAAe;AAC5C,eAAS,cAAc;AACvB,eAAS,mBAAmB;AAC5B,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA,EAIM,8BAA8B;AAAA;AAClC,UAAI,KAAK,2BAA2B,MAAM;AACxC,aAAK,0BAA0B,KAAK,uBAAuB,IAAI,iBAAiB,QAAQ,GAAG,QAAQ;AAAA,MACrG;AACA,aAAO,KAAK;AAAA,IACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMM,iCAAiC;AAAA;AACrC,UAAI,KAAK,8BAA8B,MAAM;AAC3C,aAAK,6BAA6B,KAAK,uBAAuB,IAAI,iBAAiB,SAAS,GAAG,SAAS;AAAA,MAC1G;AACA,aAAO,KAAK;AAAA,IACd;AAAA;AAAA,EACA,YAAY,YAAY,OAAO;AAC7B,QAAI,KAAK,gBAAgB,MAAM;AAC7B,WAAK,eAAe,KAAK,cAAc,WAAW;AAClD,YAAM,MAAM,IAAI,YAAY;AAC5B,YAAM,WAAW,IAAI,KAAK,KAAK,KAAK,YAAY;AAChD,WAAK,YAAY,IAAI,MAAM;AAC3B,WAAK,UAAU,IAAI,QAAQ;AAAA,IAC7B;AACA,UAAM,aAAa,WAAW,MAAM;AACpC,SAAK,SAAS,YAAY,YAAY,OAAO,aAAa;AAC1D,SAAK,SAAS,YAAY,YAAY,OAAO,cAAc;AAAA,EAO7D;AAAA,EACA,SAAS,UAAU,WAAW,cAAc,WAAW;AAGrD,UAAM,sBAAsB;AAC5B,UAAM,SAAS,SAAS;AACxB,UAAM,kBAAkB,SAAS,YAAY,IAAI,KAAK,MAAM,IAAI,UAAU,IAAI,KAAK,MAAM,IAAI,cAAc;AAC3G,UAAM,cAAc,eAAe;AACnC,UAAM,UAAU,SAAS,YAAY,IAAI,IAAI,KAAK,MAAM,sBAAsB,WAAW,IAAI;AAC7F,QAAI,UAAU,aAAa;AACzB,cAAQ,KAAK,iBAAiB,YAAY,iDAAiD,OAAO,uCAAuC,WAAW,EAAE;AAAA,IACxJ;AACA,UAAM,UAAU,CAAC;AACjB,QAAI,MAAM;AACV,aAAS,IAAI,GAAG,IAAI,aAAa,EAAE,GAAG;AACpC,YAAM,IAAI,IAAI;AACd,YAAM,SAAS,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC;AAClC,cAAQ,KAAK,MAAM;AACnB,UAAI,KAAK,GAAG;AACV,eAAO;AAAA,MACT,WAAW,IAAI,SAAS;AACtB,eAAO,IAAI;AAAA,MACb;AAAA,IACF;AACA,aAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,cAAQ,CAAC,IAAI,QAAQ,CAAC,IAAI;AAAA,IAC5B;AACA,UAAM,eAAe,KAAK,aAAa;AACvC,iBAAa,QAAQ,EAAE,QAAQ,SAAS;AACxC,iBAAa,SAAS,EAAE,QAAQ;AAChC,iBAAa,SAAS,EAAE,QAAQ;AAChC,iBAAa,aAAa,EAAE,QAAQ,cAAc;AAClD,iBAAa,QAAQ,EAAE,QAAQ;AAC/B,UAAM,aAAa,IAAI,WAAW,KAAK,KAAK,SAAS;AACrD,eAAW,OAAO,KAAK,eAAe,KAAK,SAAS;AAAA,EACtD;AAAA,EACA,cAAc,YAAY;AACxB,UAAM,UAAU,IAAI,aAAa,UAAU;AAC3C,UAAM,WAAW,IAAI,QAAQ,GAAG,GAAG,CAAC;AACpC,UAAM,iBAAiB,IAAI,eAAe;AAAA,MACxC,MAAM;AAAA,MACN,SAAS;AAAA,QACP,KAAK;AAAA,MACP;AAAA,MACA,UAAU;AAAA,QACR,UAAU;AAAA,UACR,OAAO;AAAA,QACT;AAAA,QACA,WAAW;AAAA,UACT,OAAO;AAAA,QACT;AAAA,QACA,WAAW;AAAA,UACT,OAAO;AAAA,QACT;AAAA,QACA,eAAe;AAAA,UACb,OAAO;AAAA,QACT;AAAA,QACA,UAAU;AAAA,UACR,OAAO;AAAA,QACT;AAAA,QACA,YAAY;AAAA,UACV,OAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA;AAAA;AAAA,QAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAWxB;AAAA;AAAA,QAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAoD1B,UAAU;AAAA,MACV,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,MAAM;AAAA,IACR,CAAC;AACD,WAAO;AAAA,EACT;AAAA,EACM,UAAU;AAAA;AACd,iBAAW,CAAC,EAAE,OAAO,KAAK,KAAK,aAAa;AAC1C,cAAM,SAAS,MAAM;AACrB,eAAO,QAAQ;AAAA,MACjB;AACA,UAAI,KAAK,2BAA2B,MAAM;AACxC,SAAC,MAAM,KAAK,yBAAyB,QAAQ;AAC7C,aAAK,0BAA0B;AAAA,MACjC;AACA,UAAI,KAAK,8BAA8B,MAAM;AAC3C,SAAC,MAAM,KAAK,4BAA4B,QAAQ;AAChD,aAAK,6BAA6B;AAAA,MACpC;AACA,UAAI,KAAK,gBAAgB,MAAM;AAC7B,aAAK,aAAa,QAAQ;AAAA,MAC5B;AAAA,IACF;AAAA;AACF;;;AC9VA,IAAM,iBAAiB;AACvB,IAAM,wBAAwB;AAC9B,IAAM,yBAAyB;AAC/B,IAAM,oBAAoB;AAC1B,IAAM,cAAc,CAAC,GAAG,MAAM,MAAM,KAAK,KAAK,MAAM,IAAI;AACxD,IAAM,oBAAoB;AACnB,IAAM,2BAA2B;AACxC,IAAM,oBAAoB;AAYnB,IAAM,WAAN,MAAM,kBAAiB,gBAAgB;AAAA,EAC5C,WAAW,YAAY;AACrB,QAAI,CAAC,KAAK,YAAY;AACpB,WAAK,aAAa,IAAI,UAAS;AAAA,QAC7B,kBAAkB,KAAK,sBAAsB,CAAC,GAAG,mBAAmB;AAAA,QACpE,OAAO,YAAY;AAAA,MACrB,CAAC;AAAA,IACH;AACA,WAAO,KAAK;AAAA,EACd;AAAA,EACA,OAAO,iBAAiB;AACtB,UAAM,WAAW,KAAK,WAAW,QAAQ;AACzC,eAAW,WAAW,UAAU;AAC9B,cAAQ,qBAAqB;AAAA,IAC/B;AACA,SAAK,aAAa,IAAI,UAAS;AAAA,MAC7B,kBAAkB,KAAK,sBAAsB,CAAC,GAAG,mBAAmB;AAAA,MACpE,OAAO,YAAY;AAAA,IACrB,CAAC;AACD,eAAW,WAAW,UAAU;AAC9B,cAAQ,kBAAkB;AAAA,IAC5B;AAAA,EACF;AAAA,EACA,IAAI,YAAY;AACd,WAAO,KAAK,iBAAiB;AAAA,EAC/B;AAAA,EACA,IAAI,cAAc;AAChB,WAAO,YAAY,KAAK,SAAS;AAAA,EACnC;AAAA,EACA,IAAI,SAAS,OAAO;AAClB,QAAI,IAAI;AACR,WAAO,IAAI,YAAY,QAAQ;AAC7B,UAAI,YAAY,CAAC,IAAI,OAAO;AAC1B;AAAA,MACF;AACA,QAAE;AAAA,IACJ;AACA,SAAK,WAAW,IAAI;AAAA,EACtB;AAAA,EACA,YAAY,SAAS;AACnB,UAAM;AACN,SAAK,SAAS,IAAI,kBAAkB,uBAAuB;AAC3D,SAAK,QAAQ;AACb,SAAK,SAAS;AACd,SAAK,MAAM;AACX,SAAK,SAAS,oBAAI,IAAI;AACtB,SAAK,wBAAwB;AAC7B,SAAK,WAAW,YAAY,IAAI;AAChC,SAAK,oBAAoB;AACzB,SAAK,YAAY;AACjB,SAAK,WAAW;AAChB,SAAK,oBAAoB,yBAAyB,yBAAyB;AAC3E,SAAK,qBAAqB,WAAS;AACjC,WAAK,cAAc;AAAA,QACjB,MAAM;AAAA,QACN,aAAa;AAAA,MACf,CAAC;AAAA,IACH;AACA,SAAK,yBAAyB,MAAM;AAClC,UAAIC;AACJ,OAACA,OAAK,KAAK,kBAAkB,QAAQA,SAAO,SAAS,SAASA,KAAG,QAAQ;AACzE,WAAK,eAAe,IAAI,aAAa,KAAK,aAAa;AACvD,iBAAW,SAAS,KAAK,QAAQ;AAC/B,cAAM,QAAQ,kBAAkB,EAAE;AAAA,MACpC;AAAA,IACF;AACA,SAAK,MAAM,OAAO;AAClB,SAAK,WAAW,SAAS,cAAc,QAAQ;AAC/C,SAAK,SAAS,KAAK;AACnB,SAAK,SAAS,UAAU,IAAI,MAAM;AAClC,QAAI;AACF,WAAK,gBAAgB,IAAI,cAAc;AAAA,QACrC,QAAQ,KAAK;AAAA,QACb,OAAO;AAAA,QACP,WAAW;AAAA,QACX,iBAAiB,QAAQ;AAAA,QACzB,uBAAuB;AAAA,MACzB,CAAC;AACD,WAAK,cAAc,YAAY;AAC/B,WAAK,cAAc,cAAc,CAAC;AAClC,WAAK,cAAc,QAAQ;AAAA,QACzB,mBAAmB,CAAC,CAAC,QAAQ;AAAA,QAC7B,eAAe;AAAA,MACjB;AAGA,WAAK,cAAc,cAAc;AAAA,IACnC,SAAS,OAAO;AACd,cAAQ,KAAK,KAAK;AAAA,IACpB;AACA,SAAK,aAAa,IAAI,WAAW,IAAI;AACrC,SAAK,eAAe,KAAK,YAAY,IAAI,aAAa,KAAK,aAAa,IAAI;AAC5E,sBAAkB,qBAAqB,KAAK,aAAa;AACzD,SAAK,SAAS,iBAAiB,oBAAoB,KAAK,kBAAkB;AAC1E,SAAK,SAAS,iBAAiB,wBAAwB,KAAK,sBAAsB;AAClF,SAAK,mBAAmB;AAAA,EAC1B;AAAA,EACA,cAAc,OAAO;AACnB,SAAK,OAAO,IAAI,KAAK;AACrB,UAAM,aAAa;AACnB,UAAM,OAAO,IAAI,QAAQ;AACzB,SAAK,cAAc,QAAQ,IAAI;AAC/B,UAAM,OAAO,QAAQ,KAAK;AAC1B,UAAM,OAAO,SAAS,KAAK;AAC3B,QAAI,KAAK,aAAa,KAAK,OAAO,OAAO,GAAG;AAC1C,WAAK,cAAc,iBAAiB,CAAC,MAAM,UAAU,KAAK,OAAO,MAAM,KAAK,CAAC;AAAA,IAC/E;AAAA,EACF;AAAA,EACA,gBAAgB,OAAO;AACrB,SAAK,OAAO,OAAO,KAAK;AACxB,QAAI,KAAK,SAAS,kBAAkB,MAAM,OAAO,eAAe;AAC9D,YAAM,OAAO,cAAc,YAAY,KAAK,QAAQ;AAAA,IACtD;AACA,QAAI,KAAK,aAAa,KAAK,OAAO,SAAS,GAAG;AAC5C,WAAK,cAAc,iBAAiB,IAAI;AAAA,IAC1C;AAAA,EACF;AAAA,EACA,cAAc,OAAO;AACnB,WAAO,MAAM,QAAQ,kBAAkB,CAAC,KAAK,wBAAwB,KAAK,WAAW,MAAM,QAAQ,OAAO;AAAA,EAC5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,qBAAqB;AACnB,UAAM;AAAA,MACJ;AAAA,IACF,IAAI;AACJ,QAAI,gBAAgB;AACpB,QAAI,gBAAgB;AACpB,eAAW,SAAS,KAAK,QAAQ;AAC/B,YAAM;AAAA,QACJ;AAAA,MACF,IAAI;AACJ,UAAI,QAAQ,kBAAkB,MAAM,oBAAoB,MAAM;AAC5D,UAAE;AAAA,MACJ;AACA,UAAI,SAAS,kBAAkB,MAAM,OAAO,eAAe;AACzD,wBAAgB;AAAA,MAClB;AAAA,IACF;AACA,UAAM,wBAAwB,gBAAgB;AAC9C,QAAI,iBAAiB,MAAM;AACzB,YAAM,gBAAgB,yBAAyB,CAAC,KAAK;AACrD,YAAM,eAAe,CAAC,cAAc,QAAQ;AAC5C,UAAI,iBAAiB,cAAc;AACjC,cAAM;AAAA,UACJ;AAAA,UACA;AAAA,QACF,IAAI,KAAK,UAAU,aAAa;AAChC,aAAK,WAAW,eAAe,OAAO,MAAM;AAC5C,iBAAS,cAAc,YAAY,QAAQ;AAAA,MAC7C;AAAA,IACF;AACA,SAAK,wBAAwB;AAAA,EAC/B;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,qBAAqB;AACnB,QAAIA;AACJ,UAAM,MAAM,OAAO;AACnB,QAAI,QAAQ,KAAK,KAAK;AAIpB,iBAAW,SAAS,KAAK,QAAQ;AAC/B,cAAM;AAAA,UACJ;AAAA,QACF,IAAI;AACJ,gBAAQ,WAAW,EAAE,QAAQ,sBAAsB,CAAC;AAAA,MACtD;AAAA,IACF;AAEA,QAAI,QAAQ;AACZ,QAAI,SAAS;AACb,eAAW,SAAS,KAAK,QAAQ;AAC/B,cAAQ,KAAK,IAAI,OAAO,MAAM,KAAK;AACnC,eAAS,KAAK,IAAI,QAAQ,MAAM,MAAM;AAAA,IACxC;AACA,QAAI,UAAU,KAAK,SAAS,WAAW,KAAK,UAAU,QAAQ,KAAK,KAAK;AACtE;AAAA,IACF;AACA,SAAK,QAAQ;AACb,SAAK,SAAS;AACd,SAAK,MAAM;AACX,YAAQ,KAAK,KAAK,QAAQ,GAAG;AAC7B,aAAS,KAAK,KAAK,SAAS,GAAG;AAC/B,QAAI,KAAK,WAAW;AAClB,WAAK,cAAc,QAAQ,OAAO,QAAQ,KAAK;AAAA,IACjD;AAIA,eAAW,SAAS,KAAK,QAAQ;AAC/B,YAAM;AAAA,QACJ;AAAA,MACF,IAAI;AACJ,aAAO,QAAQ;AACf,aAAO,SAAS;AAChB,YAAM,aAAa;AACnB,OAACA,OAAK,MAAM,oBAAoB,QAAQA,SAAO,SAAS,SAASA,KAAG,QAAQ,OAAO,MAAM;AAAA,IAC3F;AAAA,EACF;AAAA,EACA,oBAAoB,OAAO;AACzB,UAAM,YAAY,KAAK;AACvB,SAAK,oBAAoB,MAAM,kBAAkB,QAAQ,KAAK,mBAAmB,CAAC,mBAAmB,iBAAiB;AACtH,QAAI,KAAK,mBAAmB,wBAAwB;AAClD,QAAE,KAAK;AAAA,IACT,WAAW,KAAK,mBAAmB,yBAAyB,KAAK,YAAY,GAAG;AAC9E,QAAE,KAAK;AAAA,IACT;AACA,SAAK,YAAY,KAAK,IAAI,KAAK,WAAW,KAAK,QAAQ;AACvD,QAAI,cAAc,KAAK,WAAW;AAChC,WAAK,oBAAoB,yBAAyB,yBAAyB;AAAA,IAC7E;AAAA,EACF;AAAA,EACA,aAAa,OAAO;AAClB,QAAI,CAAC,MAAM,aAAa,GAAG;AAGzB,UAAI,MAAM,aAAa,GAAG;AACxB,cAAM,YAAY;AAClB,aAAK,cAAc,KAAK;AAAA,MAC1B,OAAO;AACL,eAAO;AAAA,MACT;AAAA,IACF,WAAW,MAAM,aAAa,KAAK,WAAW;AAE5C,YAAM,YAAY,KAAK;AACvB,WAAK,cAAc,KAAK;AAAA,IAC1B;AACA,WAAO;AAAA,EACT;AAAA,EACA,cAAc,OAAO;AACnB,UAAM,QAAQ,YAAY,MAAM,SAAS;AACzC,UAAM,QAAQ,KAAK,KAAK,KAAK,QAAQ,KAAK;AAC1C,UAAM,SAAS,KAAK,KAAK,KAAK,SAAS,KAAK;AAC5C,UAAM;AAAA,MACJ,OAAAC;AAAA,IACF,IAAI,MAAM;AACV,IAAAA,OAAM,QAAQ,GAAG,KAAK;AACtB,IAAAA,OAAM,SAAS,GAAG,MAAM;AACxB,SAAK,SAAS,MAAM,QAAQ,GAAG,KAAK;AACpC,SAAK,SAAS,MAAM,SAAS,GAAG,MAAM;AACtC,UAAM,cAAc,KAAK,MAAM;AAC/B,UAAM,SAAS,QAAQ,IAAI,mBAAmB,KAAK,QAAQ,OAAO,mBAAmB,yBAAyB;AAC9G,UAAM,QAAQ,cAAc,IAAI,YAAY,gBAAgB;AAAA,MAC1D,QAAQ;AAAA,QACN,aAAa,OAAO;AAAA,QACpB;AAAA,QACA,YAAY,KAAK,MAAM,YAAY,KAAK,QAAQ;AAAA,QAChD,YAAY,KAAK,KAAK,MAAM,QAAQ,WAAW;AAAA,QAC/C,aAAa,KAAK,KAAK,MAAM,SAAS,WAAW;AAAA,QACjD;AAAA,MACF;AAAA,IACF,CAAC,CAAC;AAAA,EACJ;AAAA,EACA,UAAU,OAAO;AACf,UAAM;AAAA,MACJ;AAAA,IACF,IAAI;AACJ,UAAM,cAAc,YAAY,MAAM,SAAS;AAG/C,UAAM,QAAQ,KAAK,IAAI,KAAK,KAAK,MAAM,QAAQ,cAAc,GAAG,GAAG,KAAK,SAAS,KAAK;AACtF,UAAM,SAAS,KAAK,IAAI,KAAK,KAAK,MAAM,SAAS,cAAc,GAAG,GAAG,KAAK,SAAS,MAAM;AACzF,WAAO;AAAA,MACL;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAAA,EACA,WAAW,OAAO,OAAO,QAAQ;AAC/B,UAAM,YAAY,MAAM;AACxB,QAAI,aAAa,MAAM;AACrB,cAAQ,IAAI,8BAA8B;AAC1C;AAAA,IACF;AACA,cAAU,UAAU,GAAG,GAAG,OAAO,MAAM;AACvC,cAAU,UAAU,KAAK,UAAU,GAAG,GAAG,OAAO,QAAQ,GAAG,GAAG,OAAO,MAAM;AAC3E,UAAM,OAAO,UAAU,IAAI,MAAM;AAAA,EACnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,gBAAgB;AACd,UAAM,SAAS,CAAC;AAChB,eAAW,WAAW,CAAC,OAAO,IAAI,GAAG;AACnC,iBAAW,SAAS,KAAK,QAAQ;AAC/B,YAAI,MAAM,QAAQ,mBAAmB,SAAS;AAC5C,iBAAO,KAAK,KAAK;AAAA,QACnB;AAAA,MACF;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA,EACA,IAAI,eAAe;AACjB,WAAO,KAAK,WAAW;AAAA,EACzB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,UAAU,OAAOC,IAAG,OAAO;AACzB,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI;AACJ,YAAQ,KAAK,EAAEA,IAAG,KAAK;AACvB,UAAM,mBAAmB,OAAO,aAAa,YAAY,CAAC,OAAO,MAAM,QAAQ;AAC/E,UAAM,MAAM,QAAQ;AACpB,UAAM,MAAM,QAAQ;AACpB,UAAM,qBAAqB,gBAAgB,uBAAuB,QAAQ,aAAa,QAAQ,YAAY,CAAC,OAAO,CAAC;AACpH,SAAK,cAAc,uBAAuB,mBAAmB,WAAW,MAAQ,qBAAqB,oBAAoB;AAAA,EAC3H;AAAA,EACA,OAAOA,IAAG,OAAO;AACf,QAAI,SAAS,MAAM;AACjB,WAAK,WAAW,aAAaA,IAAG,KAAK;AACrC;AAAA,IACF;AACA,UAAM,QAAQA,KAAI,KAAK;AACvB,SAAK,WAAWA;AAChB,QAAI,CAAC,KAAK,aAAa,KAAK,cAAc;AACxC;AAAA,IACF;AACA,SAAK,mBAAmB;AACxB,SAAK,mBAAmB;AACxB,QAAI,KAAK,mBAAmB;AAC1B,WAAK,oBAAoB,KAAK;AAC9B,WAAK,oBAAoB;AAAA,IAC3B;AACA,UAAM;AAAA,MACJ;AAAA,IACF,IAAI;AACJ,eAAW,SAAS,KAAK,cAAc,GAAG;AACxC,YAAM;AAAA,QACJ;AAAA,MACF,IAAI;AACJ,UAAI,CAAC,QAAQ,UAAU,CAAC,QAAQ,kBAAkB,MAAM,cAAc,GAAG;AACvE;AAAA,MACF;AACA,WAAK,UAAU,OAAOA,IAAG,KAAK;AAC9B,UAAI,CAAC,KAAK,aAAa,KAAK,GAAG;AAC7B;AAAA,MACF;AACA,UAAI,MAAM,oBAAoB,MAAM;AAClC,cAAMC,UAAS,MAAM,UAAU;AAC/B,QAAAA,QAAO,aAAa;AACpB,cAAM;AAAA,UACJ;AAAA,UACA;AAAA,QACF,IAAIA;AACJ,cAAM,aAAa,OAAO,SAAS,MAAM;AACzC,cAAMC,UAAS,MAAM,UAAU;AAC/B,mBAAW,EAAE,KAAKA,QAAO;AACzB,mBAAW,EAAE,KAAKA,QAAO;AACzB,mBAAW,EAAE,KAAKA,QAAO;AACzB,cAAM,iBAAiB,OAAO;AAAA,UAC5B;AAAA,UACA,kBAAkB,iBAAiB;AAAA,QACrC,CAAC;AACD;AAAA,MACF;AACA,UAAI,CAAC,QAAQ,kBAAkB,CAAC,KAAK,uBAAuB;AAG1D,mBAAW,gBAAgB,KAAK,QAAQ;AACtC,cAAI,aAAa,QAAQ,gBAAgB;AACvC,yBAAa,YAAY;AAAA,UAC3B;AAAA,QACF;AAAA,MACF;AACA,YAAM;AAAA,QACJ;AAAA,QACA;AAAA,MACF,IAAI,KAAK,UAAU,KAAK;AACxB,YAAM,aAAa,KAAK,aAAa;AAGrC,WAAK,cAAc,gBAAgB,IAAI;AACvC,WAAK,cAAc,YAAY,GAAG,KAAK,KAAK,KAAK,SAAS,KAAK,GAAG,IAAI,QAAQ,OAAO,MAAM;AAC3F,UAAI,MAAM,kBAAkB,MAAM;AAChC,cAAM,eAAe,OAAO,KAAK;AAAA,MACnC,OAAO;AACL,aAAK,cAAc,YAAY;AAC/B,aAAK,cAAc,cAAc,MAAM;AACvC,aAAK,cAAc,OAAO,OAAO,MAAM,MAAM;AAAA,MAC/C;AACA,UAAI,KAAK,yBAAyB,CAAC,MAAM,QAAQ,kBAAkB,MAAM,gBAAgB,GAAG;AAC1F,aAAK,WAAW,OAAO,OAAO,MAAM;AAAA,MACtC,WAAW,SAAS,kBAAkB,MAAM,OAAO,eAAe;AAChE,cAAM,OAAO,cAAc,YAAY,QAAQ;AAC/C,cAAM,OAAO,UAAU,OAAO,MAAM;AAAA,MACtC;AACA,YAAM,YAAY;AAClB,QAAE,MAAM;AACR,WAAK,oBAAoB;AAAA,IAC3B;AAAA,EACF;AAAA,EACA,UAAU;AACR,QAAI,KAAK,gBAAgB,MAAM;AAC7B,WAAK,aAAa,QAAQ;AAAA,IAC5B;AACA,QAAI,KAAK,iBAAiB,MAAM;AAC9B,WAAK,cAAc,QAAQ;AAAA,IAC7B;AACA,SAAK,eAAe;AACpB,SAAK,gBAAgB;AACrB,UAAM,WAAW,CAAC;AAClB,eAAW,SAAS,KAAK,QAAQ;AAC/B,eAAS,KAAK,MAAM,OAAO;AAAA,IAC7B;AACA,SAAK,SAAS,oBAAoB,oBAAoB,KAAK,kBAAkB;AAC7E,SAAK,SAAS,oBAAoB,wBAAwB,KAAK,sBAAsB;AACrF,WAAO;AAAA,EACT;AACF;;;AClcO,IAAM,qBAAqB,OAAO,mBAAmB;AACrD,IAAM,YAAY,OAAO,UAAU;AAOnC,IAAM,kBAAN,MAAsB;AAAA,EAC3B,YAAY,UAAU,mBAAmB;AACvC,SAAK,SAAS,IAAI;AAClB,SAAK,kBAAkB,IAAI;AAAA,EAC7B;AACF;;;ACTA,IAAM,eAAe,IAAI,kBAAkB;AAC3C,IAAM,OAAO,IAAI,cAAc,GAAG,CAAC;AACnC,IAAI,WAAW;AACR,IAAM,gBAAgB,OAAO,cAAc;AAC3C,IAAM,iBAAiB,OAAO,eAAe;AAC7C,IAAM,gBAAgB,OAAO,cAAc;AAI3C,IAAM,QAAN,cAAoB,gBAAgB;AAAA,EACzC,KAAK,aAAa,IAAI;AACpB,QAAIC;AACJ,YAAQA,OAAK,KAAK,kBAAkB,OAAO,QAAQA,SAAO,SAAS,SAASA,KAAG,OAAO,EAAE,KAAK,EAAE;AAAA,EACjG;AAAA,EACA,KAAK,cAAc,IAAI;AACrB,WAAO,KAAK,kBAAkB;AAAA,EAChC;AAAA,EACA,YAAY,UAAU,SAAS;AAC7B,UAAM,UAAU,IAAI,IAAI,UAAU,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC;AACjD,QAAI,CAAC,KAAK,aAAa,EAAE,MAAM,KAAK;AAClC,WAAK,aAAa,EAAE,MAAM,MAAM,QAAQ,OAAO,QAAQ,OAAO,gBAAgB;AAAA,IAChF;AACA,QAAI,CAAC,KAAK,aAAa,EAAE,MAAM,MAAM;AACnC,WAAK,aAAa,EAAE,MAAM,OAAO,WAAW,QAAQ,SAAS,QAAQ,MAAM,MAAM,QAAQ,MAAM,IAAI,MAAM,GAAG,EAAE,IAAI,IAAI;AAAA,IACxH;AAAA,EACF;AAAA,EACA,IAAI,OAAO;AACT,WAAO,KAAK,aAAa,EAAE,MAAM,QAAQ;AAAA,EAC3C;AAAA,EACA,IAAI,MAAM;AACR,WAAO,KAAK,aAAa,EAAE,MAAM;AAAA,EACnC;AAAA,EACA,IAAI,aAAa;AACf,WAAO,KAAK,aAAa,EAAE,MAAM;AAAA,EACnC;AAAA,EACA,IAAI,UAAU;AACZ,UAAM,UAAU,KAAK,aAAa;AAClC,QAAI,YAAY,QAAQ,mBAAmB,QAAQ,iBAAiB;AAClE,aAAO,QAAQ;AAAA,IACjB;AACA;AAAA,EACF;AAAA,EACA,IAAI,YAAY;AACd,UAAM,UAAU,KAAK,aAAa;AAClC,QAAI,WAAW,QAAQ,mBAAmB,QAAQ,WAAW;AAC3D,aAAO,QAAQ;AAAA,IACjB;AACA;AAAA,EACF;AAAA,EACA,IAAI,OAAO;AACT,WAAO,KAAK,OAAO,OAAO,aAAa;AAAA,EACzC;AAAA,EACA,IAAI,KAAK,MAAM;AACb,eAAW,WAAW,KAAK,cAAc,GAAG;AAC1C,cAAQ,MAAM,OAAO;AAAA,IACvB;AAAA,EACF;AAAA,EACA,SAAS;AACP,UAAM,UAAU,KAAK,aAAa;AAElC,QAAI,WAAW,QAAQ,mBAAmB,CAAC,QAAQ,WAAW;AAC5D,WAAK,aAAa,EAAE,cAAc;AAClC,WAAK,SAAS,EAAE;AAAA,IAClB;AAAA,EACF;AAAA,EACM,gBAAgB,OAAO,QAAQ;AAAA;AACnC,YAAM,QAAQ,IAAI,MAAM;AACxB,mBAAa,MAAM,KAAK,aAAa;AACrC,YAAM,OAAO,IAAI,KAAK,MAAM,YAAY;AACxC,YAAM,IAAI,IAAI;AACd,YAAMC,UAAS,IAAI,mBAAmB,IAAI,GAAG,GAAG,IAAI,GAAG,CAAC;AACxD,YAAM;AAAA,QACJ;AAAA,MACF,IAAI,SAAS;AACb,YAAM,eAAe,IAAI,kBAAkB,OAAO,MAAM;AACxD,oBAAc,gBAAgB,YAAY;AAC1C,oBAAc,OAAO,OAAOA,OAAM;AAClC,oBAAc,gBAAgB,IAAI;AAClC,YAAM,SAAS,IAAI,WAAW,QAAQ,SAAS,CAAC;AAChD,oBAAc,uBAAuB,cAAc,GAAG,GAAG,OAAO,QAAQ,MAAM;AAC9E,iBAAW,QAAQ;AACnB,iBAAW,SAAS;AACpB,YAAM,cAAc,WAAW,WAAW,IAAI;AAC9C,YAAM,YAAY,YAAY,gBAAgB,OAAO,MAAM;AAC3D,gBAAU,KAAK,IAAI,MAAM;AACzB,kBAAY,aAAa,WAAW,GAAG,CAAC;AACxC,aAAO,IAAI,QAAQ,CAAO,SAAS,WAAW;AAC5C,mBAAW,OAAO,UAAQ;AACxB,cAAI,CAAC,MAAM;AACT,mBAAO,OAAO,8BAA8B;AAAA,UAC9C;AACA,kBAAQ,IAAI,gBAAgB,IAAI,CAAC;AAAA,QACnC,GAAG,WAAW;AAAA,MAChB,EAAC;AAAA,IACH;AAAA;AACF;;;ACjHO,IAAI;AAAA,CACV,SAAUC,SAAQ;AACjB,EAAAA,QAAOA,QAAO,SAAS,IAAI,IAAI,IAAI;AACnC,EAAAA,QAAOA,QAAO,QAAQ,IAAI,IAAI,IAAI;AAClC,EAAAA,QAAOA,QAAO,sBAAsB,IAAI,IAAI,IAAI;AAChD,EAAAA,QAAOA,QAAO,qBAAqB,IAAI,IAAI,IAAI;AAC/C,EAAAA,QAAOA,QAAO,qBAAqB,IAAI,IAAI,IAAI;AAC/C,EAAAA,QAAOA,QAAO,oBAAoB,IAAI,IAAI,IAAI;AAChD,GAAG,WAAW,SAAS,CAAC,EAAE;AACnB,IAAI;AAAA,CACV,SAAUC,OAAM;AACf,EAAAA,MAAKA,MAAK,aAAa,IAAI,KAAK,IAAI;AACpC,EAAAA,MAAKA,MAAK,gBAAgB,IAAI,KAAK,IAAI;AACvC,EAAAA,MAAKA,MAAK,QAAQ,IAAI,KAAK,IAAI;AACjC,GAAG,SAAS,OAAO,CAAC,EAAE;;;ACKtB,IAAM,qBAAqB,oBAAI,IAAI,CAAC,CAAC,KAAK,QAAQ,cAAc,GAAG,CAAC,KAAK,aAAa,mBAAmB,GAAG,CAAC,KAAK,gBAAgB,sBAAsB,CAAC,CAAC;AAC1J,IAAM,qBAAqB,oBAAI,IAAI,CAAC,CAAC,gBAAgB,KAAK,MAAM,GAAG,CAAC,qBAAqB,KAAK,WAAW,GAAG,CAAC,wBAAwB,KAAK,cAAc,CAAC,CAAC;AAC1J,IAAM,0BAA0B,oBAAI,IAAI,CAAC,CAAC,OAAO,SAAS,aAAa,GAAG,CAAC,OAAO,QAAQ,YAAY,GAAG,CAAC,OAAO,sBAAsB,0BAA0B,GAAG,CAAC,OAAO,qBAAqB,yBAAyB,GAAG,CAAC,OAAO,qBAAqB,yBAAyB,GAAG,CAAC,OAAO,oBAAoB,wBAAwB,CAAC,CAAC;AAC5U,IAAM,0BAA0B,oBAAI,IAAI,CAAC,CAAC,eAAe,OAAO,OAAO,GAAG,CAAC,cAAc,OAAO,MAAM,GAAG,CAAC,4BAA4B,OAAO,oBAAoB,GAAG,CAAC,2BAA2B,OAAO,mBAAmB,GAAG,CAAC,2BAA2B,OAAO,mBAAmB,GAAG,CAAC,0BAA0B,OAAO,kBAAkB,CAAC,CAAC;AAC5U,IAAM,2BAA2B,oBAAI,IAAI,CAAC,CAAC,OAAO,SAAS,aAAa,GAAG,CAAC,OAAO,QAAQ,YAAY,CAAC,CAAC;AACzG,IAAM,2BAA2B,oBAAI,IAAI,CAAC,CAAC,eAAe,OAAO,OAAO,GAAG,CAAC,cAAc,OAAO,MAAM,CAAC,CAAC;AAEzG,IAAM,cAAe,uBAAM;AACzB,SAAO,WAAS,wBAAwB,IAAI,KAAK;AACnD,GAAG;AACH,IAAM,cAAe,uBAAM;AACzB,SAAO,WAAS,yBAAyB,IAAI,KAAK;AACpD,GAAG;AACH,IAAM,aAAc,uBAAM;AACxB,SAAO,WAAS,mBAAmB,IAAI,KAAK;AAC9C,GAAG;AACH,IAAM,sBAAsB,CAACC,WAAU,UAAU;AAC/C,UAAQA,WAAU;AAAA,IAChB,KAAK;AACH,aAAO,YAAY,KAAK;AAAA,IAC1B,KAAK;AACH,aAAO,YAAY,KAAK;AAAA,IAC1B,KAAK;AAAA,IACL,KAAK;AACH,aAAO,WAAW,KAAK;AAAA,IACzB,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AACH,aAAO;AAAA,IACT;AACE,YAAM,IAAI,MAAM,8BAA8BA,SAAQ,cAAc;AAAA,EACxE;AACF;AACA,IAAMC,iBAAgB,OAAO,cAAc;AAC3C,IAAMC,kBAAiB,OAAO,eAAe;AAC7C,IAAM,eAAe,OAAO,aAAa;AAIlC,IAAM,UAAN,cAAsB,gBAAgB;AAAA,EAC3C,KAAKD,cAAa,IAAI;AACpB,QAAIE;AACJ,YAAQA,OAAK,KAAK,kBAAkB,OAAO,QAAQA,SAAO,SAAS,SAASA,KAAG,OAAO,EAAE,KAAK,EAAE;AAAA,EACjG;AAAA,EACA,KAAKD,eAAc,IAAI;AACrB,WAAO,KAAK,kBAAkB;AAAA,EAChC;AAAA,EACA,YAAY,UAAU,SAAS;AAC7B,UAAM,UAAU,IAAI,IAAI,UAAU,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC;AAAA,EACnD;AAAA,EACA,IAAI,OAAO;AACT,WAAO,KAAKD,cAAa,EAAE,QAAQ;AAAA,EACrC;AAAA,EACA,IAAI,YAAY;AACd,WAAO,wBAAwB,IAAI,KAAKA,cAAa,EAAE,SAAS;AAAA,EAClE;AAAA,EACA,IAAI,YAAY;AACd,WAAO,yBAAyB,IAAI,KAAKA,cAAa,EAAE,SAAS;AAAA,EACnE;AAAA,EACA,IAAI,QAAQ;AACV,WAAO,mBAAmB,IAAI,KAAKA,cAAa,EAAE,KAAK;AAAA,EACzD;AAAA,EACA,IAAI,QAAQ;AACV,WAAO,mBAAmB,IAAI,KAAKA,cAAa,EAAE,KAAK;AAAA,EACzD;AAAA,EACA,IAAI,WAAW;AACb,WAAO,KAAKA,cAAa,EAAE;AAAA,EAC7B;AAAA,EACA,IAAI,QAAQ;AACV,WAAO,WAAW,KAAKA,cAAa,EAAE,MAAM;AAAA,EAC9C;AAAA,EACA,IAAI,SAAS;AACX,WAAO,WAAW,KAAKA,cAAa,EAAE,MAAM;AAAA,EAC9C;AAAA,EACA,aAAa,QAAQ;AACnB,SAAK,YAAY,EAAE,aAAa,wBAAwB,IAAI,MAAM,CAAC;AAAA,EACrE;AAAA,EACA,aAAa,QAAQ;AACnB,SAAK,YAAY,EAAE,aAAa,yBAAyB,IAAI,MAAM,CAAC;AAAA,EACtE;AAAA,EACA,SAAS,MAAM;AACb,SAAK,YAAY,EAAE,SAAS,mBAAmB,IAAI,IAAI,CAAC;AAAA,EAC1D;AAAA,EACA,SAAS,MAAM;AACb,SAAK,YAAY,EAAE,SAAS,mBAAmB,IAAI,IAAI,CAAC;AAAA,EAC1D;AAAA,EACA,YAAY,UAAU;AACpB,QAAI,YAAY,MAAM;AAEpB,iBAAW;AAAA,IACb;AACA,SAAK,YAAY,EAAE,YAAY,QAAQ;AAAA,EACzC;AAAA,EACA,SAAS,OAAO;AACd,QAAI,SAAS,MAAM;AAEjB,cAAQ;AAAA,QACN,GAAG;AAAA,QACH,GAAG;AAAA,MACL;AAAA,IACF;AACA,SAAK,YAAY,EAAE,UAAU,IAAI,QAAQ,MAAM,GAAG,MAAM,CAAC,CAAC;AAAA,EAC5D;AAAA,EACA,UAAU,QAAQ;AAChB,QAAI,UAAU,MAAM;AAElB,eAAS;AAAA,QACP,GAAG;AAAA,QACH,GAAG;AAAA,MACL;AAAA,IACF;AACA,SAAK,YAAY,EAAE,UAAU,IAAI,QAAQ,OAAO,GAAG,OAAO,CAAC,CAAC;AAAA,EAC9D;AAAA,EACA,CAAC,YAAY,EAAED,WAAU,OAAO;AAC9B,QAAI,oBAAoBA,WAAU,KAAK,GAAG;AACxC,iBAAW,WAAW,KAAKE,eAAc,GAAG;AAC1C,gBAAQF,SAAQ,IAAI;AACpB,gBAAQ,cAAc;AAAA,MACxB;AAAA,IACF;AACA,SAAK,SAAS,EAAE;AAAA,EAClB;AACF;;;AC5HA,IAAM,SAAS,OAAO,OAAO;AAC7B,IAAM,WAAW,OAAO,SAAS;AACjC,IAAMI,iBAAgB,OAAO,cAAc;AAIpC,IAAMC,WAAN,cAAsB,gBAAgB;AAAA,EAC3C,KAAKD,cAAa,IAAI;AACpB,QAAIE;AACJ,YAAQA,OAAK,KAAK,kBAAkB,OAAO,QAAQA,SAAO,SAAS,SAASA,KAAG,OAAO,EAAE,KAAK,EAAE;AAAA,EACjG;AAAA,EACA,YAAY,UAAU,cAAc;AAClC,UAAM,UAAU,IAAI,IAAI,eAAe,CAAC,YAAY,IAAI,CAAC,CAAC,CAAC;AAC3D,SAAK,QAAQ,IAAI,IAAI,QAAQ,UAAU,YAAY;AACnD,SAAK,MAAM,IAAI,IAAI,MAAM,UAAU,YAAY;AAAA,EACjD;AAAA,EACA,IAAI,OAAO;AACT,WAAO,KAAKF,cAAa,EAAE,QAAQ;AAAA,EACrC;AAAA,EACA,IAAI,KAAK,MAAM;AACb,eAAW,WAAW,KAAK,kBAAkB,GAAG;AAC9C,cAAQ,OAAO;AAAA,IACjB;AAAA,EACF;AAAA,EACA,IAAI,UAAU;AACZ,WAAO,KAAK,QAAQ;AAAA,EACtB;AAAA,EACA,IAAI,SAAS;AACX,WAAO,KAAK,MAAM;AAAA,EACpB;AACF;;;ACjCA,IAAIG;AAAJ,IAAQC;AAAR,IAAYC;AAIZ,IAAM,WAAW,OAAO,SAAS;AACjC,IAAM,aAAa,OAAO,WAAW;AAC9B,IAAM,aAAa,OAAO,WAAW;AACrC,IAAM,SAAS,OAAO,OAAO;AACpC,IAAMC,aAAY,OAAO,UAAU;AACnC,IAAM,eAAe,OAAO,aAAa;AAElC,IAAI;AAAA,CACV,SAAUC,eAAc;AACvB,EAAAA,cAAaA,cAAa,MAAM,IAAI,CAAC,IAAI;AACzC,EAAAA,cAAaA,cAAa,mBAAmB,IAAI,CAAC,IAAI;AACtD,EAAAA,cAAaA,cAAa,QAAQ,IAAI,CAAC,IAAI;AAC3C,EAAAA,cAAaA,cAAa,WAAW,IAAI,CAAC,IAAI;AAC9C,EAAAA,cAAaA,cAAa,UAAU,IAAI,CAAC,IAAI;AAC7C,EAAAA,cAAaA,cAAa,WAAW,IAAI,CAAC,IAAI;AAC9C,EAAAA,cAAaA,cAAa,oBAAoB,IAAI,CAAC,IAAI;AACvD,EAAAA,cAAaA,cAAa,iBAAiB,IAAI,CAAC,IAAI;AACpD,EAAAA,cAAaA,cAAa,YAAY,IAAI,CAAC,IAAI;AAC/C,EAAAA,cAAaA,cAAa,gBAAgB,IAAI,CAAC,IAAI;AACnD,EAAAA,cAAaA,cAAa,cAAc,IAAI,EAAE,IAAI;AAClD,EAAAA,cAAaA,cAAa,WAAW,IAAI,EAAE,IAAI;AAC/C,EAAAA,cAAaA,cAAa,UAAU,IAAI,EAAE,IAAI;AAC9C,EAAAA,cAAaA,cAAa,eAAe,IAAI,EAAE,IAAI;AACnD,EAAAA,cAAaA,cAAa,aAAa,IAAI,EAAE,IAAI;AACjD,EAAAA,cAAaA,cAAa,sBAAsB,IAAI,EAAE,IAAI;AAC1D,EAAAA,cAAaA,cAAa,YAAY,IAAI,EAAE,IAAI;AAClD,GAAG,iBAAiB,eAAe,CAAC,EAAE;AAI/B,IAAM,cAAN,MAAkB;AAAA,EACvB,YAAY,UAAU,OAAO,cAAc,UAAU;AACnD,SAAKJ,GAAE,IAAI;AACX,SAAKC,GAAE,IAAI;AAAA,MACT,UAAU;AAAA,MACV,OAAO,IAAI,QAAQ,GAAG,CAAC;AAAA,MACvB,QAAQ,IAAI,QAAQ,GAAG,CAAC;AAAA,IAC1B;AACA,SAAKC,GAAE,IAAI;AAEX,QAAI,cAAc;AAChB,WAAK,UAAU,EAAE,WAAW,aAAa;AACzC,WAAK,UAAU,EAAE,MAAM,KAAK,aAAa,MAAM;AAC/C,WAAK,UAAU,EAAE,OAAO,KAAK,aAAa,MAAM;AAChD,WAAK,QAAQ,IAAI,IAAIG,SAAQ,UAAU,YAAY;AAAA,IACrD;AACA,SAAKF,UAAS,IAAI;AAClB,SAAK,UAAU,IAAI;AACnB,SAAK,MAAM,IAAI;AAAA,EACjB;AAAA,EACA,IAAI,UAAU;AACZ,WAAO,KAAK,QAAQ;AAAA,EACtB;AAAA,EACA,WAAW,SAAS;AAClB,QAAIG,KAAIC;AACR,UAAM,eAAe,WAAW,OAAO,QAAQ,OAAO,aAAa,IAAI;AACvE,UAAM,cAAcD,MAAK,KAAK,QAAQ,OAAO,QAAQA,QAAO,SAAS,SAASA,IAAG,OAAO,aAAa;AACrG,QAAI,cAAc,QAAQ,WAAW,gBAAgB;AACnD,WAAK,YAAY,IAAI;AAAA,IACvB,YAAYC,MAAK,KAAK,QAAQ,OAAO,QAAQA,QAAO,SAAS,SAASA,IAAG,OAAO,WAAW;AACzF,WAAK,QAAQ,EAAE,OAAO,UAAU,oBAAoB,cAAc,KAAKJ,UAAS,CAAC;AAAA,IACnF;AACA,SAAK,QAAQ,IAAI;AACjB,QAAI,gBAAgB,QAAQ,aAAa,gBAAgB;AACvD,YAAM,UAAU,aAAa;AAC7B,WAAK,YAAY,IAAI;AACrB,UAAI,QAAQ,6BAA6B,MAAM;AAC7C,cAAM,SAAS,MAAM;AACnB,cAAI,CAAC,KAAK,YAAY,GAAG;AACvB;AAAA,UACF;AACA,eAAKA,UAAS,EAAE;AAChB,kBAAQ,0BAA0B,MAAM;AAAA,QAC1C;AACA,gBAAQ,0BAA0B,MAAM;AAAA,MAC1C,OAAO;AACL,cAAM,SAAS,MAAM;AACnB,cAAI,CAAC,KAAK,YAAY,GAAG;AACvB;AAAA,UACF;AACA,eAAKA,UAAS,EAAE;AAChB,gCAAsB,MAAM;AAAA,QAC9B;AACA,8BAAsB,MAAM;AAAA,MAC9B;AAAA,IACF,YAAY,YAAY,QAAQ,YAAY,SAAS,SAAS,QAAQ,OAAO,cAAc,MAAM;AAC/F,cAAQ,OAAO,UAAU,iBAAiB,cAAc,KAAKA,UAAS,CAAC;AAAA,IACzE;AACA,QAAI,aAAa;AACjB,QAAI,KAAK,UAAU,GAAG;AACpB,iBAAW,YAAY,KAAK,UAAU,GAAG;AACvC,gBAAQ,KAAK,MAAM,GAAG;AAAA,UACpB,KAAK,aAAa;AAChB,qBAAS,MAAM;AACf;AAAA,UACF,KAAK,aAAa;AAChB,yBAAa;AACb,qBAAS,eAAe;AACxB,qBAAS,eAAe;AACxB;AAAA,UACF,KAAK,aAAa;AAChB,yBAAa;AACb,qBAAS,YAAY;AACrB;AAAA,UACF,KAAK,aAAa;AAChB,yBAAa;AACb,qBAAS,QAAQ;AACjB;AAAA,UACF,KAAK,aAAa;AAChB,qBAAS,cAAc;AACvB;AAAA,UACF,KAAK,aAAa;AAChB,qBAAS,eAAe;AACxB;AAAA,UACF,KAAK,aAAa;AAChB,qBAAS,wBAAwB;AACjC;AAAA,UACF,KAAK,aAAa;AAChB,qBAAS,qBAAqB;AAC9B;AAAA,UACF,KAAK,aAAa;AAChB,qBAAS,gBAAgB;AACzB;AAAA,UACF,KAAK,aAAa;AAChB,qBAAS,oBAAoB;AAC7B;AAAA,UACF,KAAK,aAAa;AAChB,qBAAS,kBAAkB;AAC3B;AAAA,UACF,KAAK,aAAa;AAChB,qBAAS,eAAe;AACxB;AAAA,UACF,KAAK,aAAa;AAChB,qBAAS,uBAAuB;AAChC;AAAA,UACF,KAAK,aAAa;AAChB,qBAAS,mBAAmB;AAC5B;AAAA,UACF,KAAK,aAAa;AAChB,qBAAS,iBAAiB;AAC1B;AAAA,UACF,KAAK,aAAa;AAChB,qBAAS,0BAA0B;AACnC;AAAA,UACF,KAAK,aAAa;AAChB,qBAAS,gBAAgB;AACzB;AAAA,UACF;AAAA,QACF;AACA,iBAAS,cAAc;AAAA,MACzB;AAAA,IACF;AACA,QAAI,cAAc;AAEhB,mBAAa,aAAa;AAC1B,mBAAa,WAAW,KAAK,UAAU,EAAE;AACzC,mBAAa,SAAS,KAAK,UAAU,EAAE;AACvC,mBAAa,SAAS,KAAK,UAAU,EAAE;AAAA,IACzC;AACA,SAAKA,UAAS,EAAE;AAAA,EAClB;AACF;AACAH,MAAK,UAAUC,MAAK,YAAYC,MAAK;;;ACnKrC,IAAM,iBAAiB,OAAO,eAAe;AAC7C,IAAM,kBAAkB,OAAO,gBAAgB;AAC/C,IAAM,oBAAoB,OAAO,kBAAkB;AACnD,IAAM,4BAA4B,OAAO,0BAA0B;AAI5D,IAAM,uBAAN,cAAmC,gBAAgB;AAAA,EACxD,KAAK,eAAe,IAAI;AACtB,WAAO,KAAK,kBAAkB;AAAA,EAChC;AAAA,EACA,KAAK,cAAc,IAAI;AACrB,QAAIM;AACJ,YAAQA,OAAK,KAAK,kBAAkB,OAAO,QAAQA,SAAO,SAAS,SAASA,KAAG,OAAO,EAAE,KAAK,EAAE;AAAA,EACjG;AAAA,EACA,YAAY,UAAU,qBAAqB;AACzC,UAAM,UAAU,mBAAmB;AACnC,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,IACF,IAAI,oBAAoB,OAAO,EAAE,KAAK,EAAE;AACxC,SAAK,iBAAiB,IAAI,IAAI,YAAY,UAAU,aAAa,MAAM,KAAK,mBAAmB;AAC/F,SAAK,yBAAyB,IAAI,IAAI,YAAY,UAAU,aAAa,mBAAmB,cAAc,mBAAmB;AAAA,EAC/H;AAAA,EACA,IAAI,kBAAkB;AACpB,UAAM,OAAO,CAAC,GAAG,GAAG,GAAG,KAAK,cAAc,EAAE,OAAO;AACnD,SAAK,cAAc,EAAE,MAAM,QAAQ,IAAI;AACvC,WAAO;AAAA,EACT;AAAA,EACA,IAAI,iBAAiB;AACnB,WAAO,KAAK,cAAc,EAAE;AAAA,EAC9B;AAAA,EACA,IAAI,kBAAkB;AACpB,WAAO,KAAK,cAAc,EAAE;AAAA,EAC9B;AAAA,EACA,IAAI,mBAAmB;AACrB,WAAO,KAAK,iBAAiB;AAAA,EAC/B;AAAA,EACA,IAAI,2BAA2B;AAC7B,WAAO,KAAK,yBAAyB;AAAA,EACvC;AAAA,EACA,mBAAmB,MAAM;AACvB,UAAM,QAAQ,IAAI,MAAM;AACxB,QAAI,gBAAgB,OAAO;AACzB,YAAM,UAAU,IAAI;AAAA,IACtB,OAAO;AACL,YAAM,IAAI,IAAI;AAAA,IAChB;AACA,eAAW,YAAY,KAAK,eAAe,GAAG;AAC5C,eAAS,MAAM,IAAI,KAAK;AACxB,UAAI,gBAAgB,SAAS,KAAK,SAAS,GAAG;AAC5C,iBAAS,UAAU,KAAK,CAAC;AAAA,MAC3B,OAAO;AACL,eAAO,CAAC,GAAG,GAAG,GAAG,SAAS,OAAO;AACjC,cAAM,QAAQ,IAAI;AAAA,MACpB;AAAA,IACF;AACA,SAAK,SAAS,EAAE;AAAA,EAClB;AAAA,EACA,kBAAkB,OAAO;AACvB,eAAW,YAAY,KAAK,eAAe,GAAG;AAC5C,eAAS,YAAY;AAAA,IACvB;AACA,SAAK,SAAS,EAAE;AAAA,EAClB;AAAA,EACA,mBAAmB,OAAO;AACxB,eAAW,YAAY,KAAK,eAAe,GAAG;AAC5C,eAAS,YAAY;AAAA,IACvB;AACA,SAAK,SAAS,EAAE;AAAA,EAClB;AACF;;;AC1EA,IAAIC;AAAJ,IAAQC;AAKR,IAAM,wBAAwB,OAAO,sBAAsB;AAC3D,IAAM,iBAAiB,OAAO,eAAe;AAC7C,IAAM,oBAAoB,OAAO,kBAAkB;AACnD,IAAM,mBAAmB,OAAO,iBAAiB;AACjD,IAAM,wBAAwB,OAAO,sBAAsB;AAC3D,IAAM,oBAAoB,OAAO,kBAAkB;AACnD,IAAM,gBAAgB,OAAO,cAAc;AACpC,IAAM,oBAAoB,OAAO,kBAAkB;AAC1D,IAAM,cAAc,OAAO,YAAY;AAChC,IAAM,qBAAqB,OAAO,mBAAmB;AACrD,IAAM,0BAA0B,OAAO,wBAAwB;AAC/D,IAAM,aAAa,OAAO,WAAW;AACrC,IAAM,aAAa,OAAO,WAAW;AACrC,IAAM,kBAAkB,OAAO,gBAAgB;AACtD,IAAM,YAAY,OAAO,UAAU;AACnC,IAAM,iBAAiB,OAAO,eAAe;AAC7C,IAAM,QAAQ,OAAO,MAAM;AAC3B,IAAM,eAAe,OAAO,aAAa;AAIlC,IAAMC,YAAN,cAAuB,gBAAgB;AAAA,EAC5C,MAAMF,MAAK,iBAAiBC,MAAK,cAAc,sBAAsB,IAAI;AACvE,WAAO,KAAK,kBAAkB,EAAE,OAAO,EAAE,KAAK,EAAE;AAAA,EAClD;AAAA,EACA,YAAY,UAAU,WAAW,UAAU,eAAe,qBAAqB,MAAM,eAAe,QAAW;AAC7G,UAAM,UAAU,mBAAmB;AACnC,SAAKD,GAAE,IAAI,oBAAI,IAAI;AACnB,SAAKC,GAAE,IAAI,oBAAI,IAAI;AACnB,SAAK,UAAU,IAAI;AACnB,SAAK,SAAS,IAAI;AAClB,SAAK,cAAc,IAAI;AACvB,SAAK,KAAK,IAAI;AACd,QAAI,gBAAgB,MAAM;AACxB,WAAK,WAAW,EAAE;AAAA,IACpB,OAAO;AACL,WAAK,iBAAiB,IAAI;AAAA,IAC5B;AAAA,EACF;AAAA,EACA,CAAC,WAAW,IAAI;AACd,UAAM,WAAW,KAAK,SAAS;AAC/B,UAAM,sBAAsB,KAAK,kBAAkB;AACnD,SAAK,qBAAqB,IAAI,IAAI,qBAAqB,UAAU,mBAAmB;AACpF,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI,oBAAoB,OAAO,EAAE,KAAK,EAAE;AACxC,SAAK,cAAc,IAAI,IAAI,YAAY,UAAU,aAAa,QAAQ,WAAW,mBAAmB;AACpG,SAAK,iBAAiB,IAAI,IAAI,YAAY,UAAU,aAAa,WAAW,OAAO,mBAAmB;AACtG,SAAK,gBAAgB,IAAI,IAAI,YAAY,UAAU,aAAa,UAAU,aAAa,mBAAmB;AAC1G,UAAM,oBAAoB,WAAS;AACjC,WAAK,YAAY,EAAE,IAAI,OAAO,IAAI,YAAY,UAAU,OAAO,MAAM,mBAAmB,CAAC;AAAA,IAC3F;AACA,sBAAkB,aAAa,SAAS;AACxC,sBAAkB,aAAa,kBAAkB;AACjD,sBAAkB,aAAa,eAAe;AAC9C,sBAAkB,aAAa,UAAU;AACzC,sBAAkB,aAAa,cAAc;AAC7C,sBAAkB,aAAa,YAAY;AAC3C,sBAAkB,aAAa,SAAS;AACxC,sBAAkB,aAAa,QAAQ;AACvC,sBAAkB,aAAa,aAAa;AAC5C,sBAAkB,aAAa,WAAW;AAC1C,sBAAkB,aAAa,oBAAoB;AACnD,sBAAkB,aAAa,UAAU;AAAA,EAC3C;AAAA,EACA,CAAO,kBAAkB,IAAI;AAAA;AAC3B,UAAI,KAAK,iBAAiB,KAAK,MAAM;AACnC,cAAM,WAAW,MAAM,KAAK,iBAAiB,EAAE,WAAW;AAC1D,aAAK,WAAW,EAAE;AAElB,aAAK,iBAAiB,IAAI;AAE1B,aAAK,eAAe,MAAY;AAAA,QAAC;AACjC,eAAO;AAAA,MACT;AACA,aAAO;AAAA,IACT;AAAA;AAAA,EACA,aAAa,KAAK;AAChB,UAAM,QAAQ,IAAI,MAAM;AACxB,QAAI,eAAe,OAAO;AACxB,YAAM,UAAU,GAAG;AAAA,IACrB,OAAO;AACL,YAAM,IAAI,GAAG;AAAA,IACf;AACA,WAAO;AAAA,EACT;AAAA,EACA,CAAC,uBAAuB,IAAI;AAC1B,QAAI,KAAK,iBAAiB,KAAK,MAAM;AACnC;AAAA,IACF;AACA,UAAM,IAAI,MAAM,aAAa,KAAK,IAAI;AAAA,kEACwB;AAAA,EAChE;AAAA,EACM,eAAe;AAAA;AACnB,YAAM,KAAK,kBAAkB,EAAE;AAAA,IACjC;AAAA;AAAA,EACA,IAAI,WAAW;AACb,WAAO,KAAK,iBAAiB,KAAK;AAAA,EACpC;AAAA,EACA,IAAI,WAAW;AACb,WAAO,KAAK,SAAS;AAAA,EACvB;AAAA,EACA,CAAC,UAAU,EAAE,UAAU;AACrB,SAAK,SAAS,IAAI;AAAA,EACpB;AAAA,EACA,IAAI,OAAO;AACT,WAAO,KAAK,KAAK,KAAK;AAAA,EACxB;AAAA,EACA,IAAI,KAAK,MAAM;AACb,SAAK,KAAK,IAAI;AACd,QAAI,KAAK,kBAAkB,KAAK,MAAM;AACpC,iBAAW,iBAAiB,KAAK,kBAAkB,GAAG;AACpD,sBAAc,OAAO;AAAA,MACvB;AAAA,IACF;AAAA,EACF;AAAA,EACA,IAAI,uBAAuB;AACzB,SAAK,uBAAuB,EAAE;AAC9B,WAAO,KAAK,qBAAqB;AAAA,EACnC;AAAA,EACA,IAAI,gBAAgB;AAClB,SAAK,uBAAuB,EAAE;AAC9B,WAAO,KAAK,cAAc;AAAA,EAC5B;AAAA,EACA,IAAI,mBAAmB;AACrB,SAAK,uBAAuB,EAAE;AAC9B,WAAO,KAAK,iBAAiB;AAAA,EAC/B;AAAA,EACA,IAAI,kBAAkB;AACpB,SAAK,uBAAuB,EAAE;AAC9B,WAAO,KAAK,gBAAgB;AAAA,EAC9B;AAAA,EACA,IAAI,iBAAiB;AACnB,SAAK,uBAAuB,EAAE;AAC9B,WAAO,KAAK,qBAAqB,EAAE,SAAS,QAAQ;AAAA,EACtD;AAAA,EACA,IAAI,QAAQ;AACV,WAAO,KAAK,UAAU;AAAA,EACxB;AAAA,EACA,WAAW,MAAM;AACf,UAAM,cAAc,KAAK,cAAc,EAAE,IAAI,IAAI;AACjD,WAAO,eAAe,QAAQ,KAAK,eAAe,EAAE,IAAI,YAAY,KAAK;AAAA,EAC3E;AAAA,EACA,kBAAkB,KAAK;AACrB,SAAK,uBAAuB,EAAE;AAC9B,UAAM,QAAQ,KAAK,aAAa,GAAG;AACnC,eAAW,YAAY,KAAK,kBAAkB,GAAG;AAC/C,eAAS,SAAS,IAAI,KAAK;AAAA,IAC7B;AACA,SAAK,SAAS,EAAE;AAAA,EAClB;AAAA,EACA,CAAC,aAAa,IAAI;AAEhB,QAAI,KAAK,qBAAqB,EAAE,aAAa;AAC3C,aAAO;AAAA,IACT,OAAO;AACL,UAAI,KAAK,qBAAqB,EAAE,YAAY,GAAK;AAC/C,eAAO;AAAA,MACT;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA,EACA,CAAC,iBAAiB,IAAI;AACpB,SAAK,uBAAuB,EAAE;AAC9B,eAAW,YAAY,KAAK,kBAAkB,GAAG;AAC/C,UAAI,KAAK,aAAa,EAAE,MAAM,QAAQ;AACpC,YAAI,SAAS,aAAa,QAAW;AACnC,mBAAS,YAAY;AAAA,QACvB;AAAA,MACF,OAAO;AACL,iBAAS,YAAY;AAAA,MACvB;AACA,eAAS,cAAc;AAAA,IACzB;AAAA,EACF;AAAA,EACA,eAAe,QAAQ;AACrB,SAAK,uBAAuB,EAAE;AAC9B,eAAW,YAAY,KAAK,kBAAkB,GAAG;AAC/C,eAAS,YAAY;AACrB,eAAS,cAAc;AAAA,IACzB;AAEA,SAAK,iBAAiB,EAAE;AACxB,SAAK,SAAS,EAAE;AAAA,EAClB;AAAA,EACA,iBAAiB;AACf,SAAK,uBAAuB,EAAE;AAC9B,WAAO,KAAK,qBAAqB,EAAE;AAAA,EACrC;AAAA,EACA,eAAe,aAAa;AAC1B,SAAK,uBAAuB,EAAE;AAC9B,eAAW,YAAY,KAAK,kBAAkB,GAAG;AAK/C,eAAS,OAAO,cAAc,aAAa;AAC3C,eAAS,cAAc;AAAA,IACzB;AACA,SAAK,SAAS,EAAE;AAAA,EAClB;AAAA,EACA,iBAAiB;AACf,SAAK,uBAAuB,EAAE;AAC9B,WAAO,KAAK,qBAAqB,EAAE,QAAQ;AAAA,EAC7C;AAAA,EACA,aAAa,WAAW;AACtB,SAAK,uBAAuB,EAAE;AAC9B,UAAM,qBAAqB,CAAC,UAAU,YAAY;AAChD,eAAS,cAAc;AACvB,eAAS,aAAa,CAAC;AAAA,IACzB;AACA,eAAW,YAAY,KAAK,kBAAkB,GAAG;AAC/C,yBAAmB,UAAU,cAAc,OAAO;AAClD,UAAI,cAAc,QAAQ;AACxB,iBAAS,YAAY;AAAA,MACvB,OAAO;AACL,iBAAS,YAAY;AAAA,MACvB;AACA,eAAS,cAAc;AAAA,IACzB;AACA,SAAK,SAAS,EAAE;AAAA,EAClB;AAAA,EACA,eAAe;AACb,SAAK,uBAAuB,EAAE;AAC9B,WAAO,KAAK,aAAa,EAAE;AAAA,EAC7B;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,mBAAmB;AACrB,SAAK,uBAAuB,EAAE;AAC9B,WAAO,KAAK,qBAAqB,EAAE;AAAA,EACrC;AAAA,EACA,oBAAoB,kBAAkB;AACpC,SAAK,uBAAuB,EAAE;AAC9B,eAAW,YAAY,KAAK,kBAAkB,GAAG;AAC/C,eAAS,oBAAoB;AAAA,IAC/B;AACA,SAAK,SAAS,EAAE;AAAA,EAClB;AAAA;AAAA,EAEA,IAAI,kBAAkB;AACpB,SAAK,uBAAuB,EAAE;AAC9B,WAAO,KAAK,qBAAqB,EAAE;AAAA,EACrC;AAAA,EACA,IAAI,2BAA2B;AAC7B,SAAK,uBAAuB,EAAE;AAC9B,WAAO,KAAK,qBAAqB,EAAE;AAAA,EACrC;AAAA,EACA,IAAI,mBAAmB;AACrB,SAAK,uBAAuB,EAAE;AAC9B,WAAO,KAAK,YAAY,EAAE,IAAI,aAAa,SAAS;AAAA,EACtD;AAAA,EACA,IAAI,4BAA4B;AAC9B,SAAK,uBAAuB,EAAE;AAC9B,WAAO,KAAK,YAAY,EAAE,IAAI,aAAa,kBAAkB;AAAA,EAC/D;AAAA,EACA,IAAI,yBAAyB;AAC3B,SAAK,uBAAuB,EAAE;AAC9B,WAAO,KAAK,YAAY,EAAE,IAAI,aAAa,eAAe;AAAA,EAC5D;AAAA,EACA,IAAI,uBAAuB;AACzB,SAAK,uBAAuB,EAAE;AAC9B,WAAO,KAAK,qBAAqB,EAAE,qBAAqB;AAAA,EAC1D;AAAA,EACA,mBAAmB,iBAAiB;AAClC,SAAK,uBAAuB,EAAE;AAC9B,eAAW,YAAY,KAAK,kBAAkB,GAAG;AAC/C,eAAS,YAAY;AAAA,IACvB;AACA,SAAK,SAAS,EAAE;AAAA,EAClB;AAAA,EACA,4BAA4B,0BAA0B;AACpD,SAAK,uBAAuB,EAAE;AAC9B,eAAW,YAAY,KAAK,kBAAkB,GAAG;AAC/C,eAAS,qBAAqB;AAAA,IAChC;AACA,SAAK,SAAS,EAAE;AAAA,EAClB;AAAA,EACA,wBAAwB,sBAAsB;AAC5C,SAAK,uBAAuB,EAAE;AAC9B,eAAW,YAAY,KAAK,kBAAkB,GAAG;AAC/C,eAAS,uBAAuB,IAAI,QAAQ,sBAAsB,oBAAoB;AAAA,IACxF;AACA,SAAK,SAAS,EAAE;AAAA,EAClB;AAAA;AAAA,EAEA,IAAI,MAAM;AACR,SAAK,uBAAuB,EAAE;AAC9B,WAAO,KAAK,qBAAqB,EAAE;AAAA,EACrC;AAAA,EACA,OAAO,KAAK;AACV,SAAK,uBAAuB,EAAE;AAC9B,eAAW,YAAY,KAAK,kBAAkB,GAAG;AAC/C,eAAS,MAAM;AAAA,IACjB;AACA,SAAK,SAAS,EAAE;AAAA,EAClB;AAAA;AAAA,EAEA,IAAI,mBAAmB;AACrB,SAAK,uBAAuB,EAAE;AAC9B,WAAO,KAAK,qBAAqB,EAAE,WAAW,QAAQ;AAAA,EACxD;AAAA,EACA,IAAI,oBAAoB;AACtB,SAAK,uBAAuB,EAAE;AAC9B,WAAO,KAAK,YAAY,EAAE,IAAI,aAAa,UAAU;AAAA,EACvD;AAAA,EACA,IAAI,uBAAuB;AACzB,SAAK,uBAAuB,EAAE;AAC9B,WAAO,KAAK,qBAAqB,EAAE;AAAA,EACrC;AAAA,EACA,IAAI,wBAAwB;AAC1B,SAAK,uBAAuB,EAAE;AAC9B,WAAO,KAAK,YAAY,EAAE,IAAI,aAAa,cAAc;AAAA,EAC3D;AAAA,EACA,oBAAoB,KAAK;AACvB,SAAK,uBAAuB,EAAE;AAC9B,UAAM,QAAQ,KAAK,aAAa,GAAG;AACnC,eAAW,YAAY,KAAK,kBAAkB,GAAG;AAC/C,eAAS,WAAW,IAAI,KAAK;AAE7B,eAAS,QAAQ;AAAA,IACnB;AACA,SAAK,SAAS,EAAE;AAAA,EAClB;AAAA,EACA,wBAAwB,WAAW;AACjC,SAAK,uBAAuB,EAAE;AAC9B,eAAW,YAAY,KAAK,kBAAkB,GAAG;AAC/C,eAAS,iBAAiB;AAE1B,eAAS,QAAQ;AAAA,IACnB;AACA,SAAK,SAAS,EAAE;AAAA,EAClB;AAAA;AAAA,EAEA,IAAI,qBAAqB;AACvB,SAAK,uBAAuB,EAAE;AAC9B,WAAO,KAAK,qBAAqB,EAAE;AAAA,EACrC;AAAA,EACA,IAAI,sBAAsB;AACxB,SAAK,uBAAuB,EAAE;AAC9B,WAAO,KAAK,YAAY,EAAE,IAAI,aAAa,YAAY;AAAA,EACzD;AAAA,EACA,sBAAsB,cAAc;AAClC,SAAK,uBAAuB,EAAE;AAC9B,eAAW,YAAY,KAAK,kBAAkB,GAAG;AAC/C,eAAS,eAAe;AAAA,IAC1B;AACA,SAAK,SAAS,EAAE;AAAA,EAClB;AAAA;AAAA,EAEA,IAAI,kBAAkB;AACpB,SAAK,uBAAuB,EAAE;AAC9B,WAAO,KAAK,qBAAqB,EAAE;AAAA,EACrC;AAAA,EACA,IAAI,mBAAmB;AACrB,SAAK,uBAAuB,EAAE;AAC9B,WAAO,KAAK,YAAY,EAAE,IAAI,aAAa,SAAS;AAAA,EACtD;AAAA,EACA,IAAI,sBAAsB;AACxB,SAAK,uBAAuB,EAAE;AAC9B,WAAO,KAAK,qBAAqB,EAAE;AAAA,EACrC;AAAA,EACA,IAAI,mBAAmB;AACrB,SAAK,uBAAuB,EAAE;AAC9B,WAAO,KAAK,qBAAqB,EAAE,iBAAiB,QAAQ;AAAA,EAC9D;AAAA,EACA,mBAAmB,WAAW;AAC5B,SAAK,uBAAuB,EAAE;AAC9B,eAAW,YAAY,KAAK,kBAAkB,GAAG;AAC/C,eAAS,YAAY;AAAA,IACvB;AACA,SAAK,SAAS,EAAE;AAAA,EAClB;AAAA,EACA,uBAAuB,qBAAqB;AAC1C,SAAK,uBAAuB,EAAE;AAC9B,eAAW,YAAY,KAAK,kBAAkB,GAAG;AAC/C,eAAS,sBAAsB;AAAA,IACjC;AACA,SAAK,SAAS,EAAE;AAAA,EAClB;AAAA,EACA,oBAAoB,KAAK;AACvB,SAAK,uBAAuB,EAAE;AAC9B,UAAM,QAAQ,KAAK,aAAa,GAAG;AACnC,eAAW,YAAY,KAAK,kBAAkB,GAAG;AAC/C,eAAS,iBAAiB,IAAI,KAAK;AAAA,IACrC;AACA,SAAK,SAAS,EAAE;AAAA,EAClB;AAAA;AAAA,EAEA,IAAI,iBAAiB;AACnB,SAAK,uBAAuB,EAAE;AAC9B,WAAO,KAAK,qBAAqB,EAAE;AAAA,EACrC;AAAA,EACA,IAAI,kBAAkB;AACpB,SAAK,uBAAuB,EAAE;AAC9B,WAAO,KAAK,YAAY,EAAE,IAAI,aAAa,QAAQ;AAAA,EACrD;AAAA,EACA,IAAI,sBAAsB;AACxB,SAAK,uBAAuB,EAAE;AAC9B,WAAO,KAAK,qBAAqB,EAAE,cAAc,QAAQ;AAAA,EAC3D;AAAA,EACA,IAAI,uBAAuB;AACzB,SAAK,uBAAuB,EAAE;AAC9B,WAAO,KAAK,YAAY,EAAE,IAAI,aAAa,UAAU;AAAA,EACvD;AAAA,EACA,kBAAkB,gBAAgB;AAChC,SAAK,uBAAuB,EAAE;AAC9B,eAAW,YAAY,KAAK,kBAAkB,GAAG;AAC/C,eAAS,oBAAoB;AAAA,IAC/B;AACA,SAAK,SAAS,EAAE;AAAA,EAClB;AAAA,EACA,uBAAuB,KAAK;AAC1B,SAAK,uBAAuB,EAAE;AAC9B,UAAM,QAAQ,KAAK,aAAa,GAAG;AACnC,eAAW,YAAY,KAAK,kBAAkB,GAAG;AAC/C,eAAS,cAAc,IAAI,KAAK;AAAA,IAClC;AACA,SAAK,SAAS,EAAE;AAAA,EAClB;AAAA;AAAA,EAEA,IAAI,oBAAoB;AACtB,SAAK,uBAAuB,EAAE;AAC9B,WAAO,KAAK,qBAAqB,EAAE;AAAA,EACrC;AAAA,EACA,IAAI,qBAAqB;AACvB,SAAK,uBAAuB,EAAE;AAC9B,WAAO,KAAK,YAAY,EAAE,IAAI,aAAa,WAAW;AAAA,EACxD;AAAA,EACA,IAAI,iBAAiB;AACnB,SAAK,uBAAuB,EAAE;AAC9B,WAAO,KAAK,qBAAqB,EAAE;AAAA,EACrC;AAAA,EACA,IAAI,8BAA8B;AAChC,SAAK,uBAAuB,EAAE;AAC9B,WAAO,KAAK,qBAAqB,EAAE,0BAA0B,CAAC;AAAA,EAChE;AAAA,EACA,IAAI,8BAA8B;AAChC,SAAK,uBAAuB,EAAE;AAC9B,WAAO,KAAK,qBAAqB,EAAE,0BAA0B,CAAC;AAAA,EAChE;AAAA,EACA,IAAI,8BAA8B;AAChC,SAAK,uBAAuB,EAAE;AAC9B,WAAO,KAAK,YAAY,EAAE,IAAI,aAAa,oBAAoB;AAAA,EACjE;AAAA,EACA,qBAAqB,aAAa;AAChC,SAAK,uBAAuB,EAAE;AAC9B,eAAW,YAAY,KAAK,kBAAkB,GAAG;AAC/C,eAAS,cAAc;AAAA,IACzB;AACA,SAAK,SAAS,EAAE;AAAA,EAClB;AAAA,EACA,kBAAkB,KAAK;AACrB,SAAK,uBAAuB,EAAE;AAC9B,eAAW,YAAY,KAAK,kBAAkB,GAAG;AAC/C,eAAS,iBAAiB;AAAA,IAC5B;AACA,SAAK,SAAS,EAAE;AAAA,EAClB;AAAA,EACA,+BAA+B,cAAc;AAC3C,SAAK,uBAAuB,EAAE;AAC9B,eAAW,YAAY,KAAK,kBAAkB,GAAG;AAC/C,eAAS,0BAA0B,CAAC,IAAI;AAAA,IAC1C;AACA,SAAK,SAAS,EAAE;AAAA,EAClB;AAAA,EACA,+BAA+B,cAAc;AAC3C,SAAK,uBAAuB,EAAE;AAC9B,eAAW,YAAY,KAAK,kBAAkB,GAAG;AAC/C,eAAS,0BAA0B,CAAC,IAAI;AAAA,IAC1C;AACA,SAAK,SAAS,EAAE;AAAA,EAClB;AAAA;AAAA,EAEA,IAAI,qBAAqB;AACvB,SAAK,uBAAuB,EAAE;AAC9B,WAAO,KAAK,qBAAqB,EAAE;AAAA,EACrC;AAAA,EACA,IAAI,qBAAqB;AACvB,SAAK,uBAAuB,EAAE;AAC9B,WAAO,KAAK,qBAAqB,EAAE;AAAA,EACrC;AAAA,EACA,IAAI,oBAAoB;AACtB,SAAK,uBAAuB,EAAE;AAC9B,WAAO,KAAK,YAAY,EAAE,IAAI,aAAa,UAAU;AAAA,EACvD;AAAA,EACA,sBAAsB,UAAU;AAC9B,SAAK,uBAAuB,EAAE;AAC9B,eAAW,YAAY,KAAK,kBAAkB,GAAG;AAC/C,eAAS,aAAa;AAAA,IACxB;AACA,SAAK,SAAS,EAAE;AAAA,EAClB;AAAA,EACA,sBAAsB,UAAU;AAC9B,SAAK,uBAAuB,EAAE;AAC9B,eAAW,YAAY,KAAK,kBAAkB,GAAG;AAC/C,eAAS,qBAAqB;AAAA,IAChC;AACA,SAAK,SAAS,EAAE;AAAA,EAClB;AACF;;;ACxgBO,IAAME,QAAN,MAAW;AAAA,EAChB,YAAY,MAAM;AAChB,SAAK,OAAO;AACZ,SAAK,WAAW,IAAI,MAAM;AAC1B,SAAK,OAAO;AAAA,EACd;AACF;AAEO,IAAM,gBAAN,cAA4BA,MAAK;AAAA,EACtC,YAAY,MAAM,aAAa,eAAe,sBAAsB;AAClE,UAAM,KAAK,IAAI;AAEf,SAAK,YAAY,oBAAI,IAAI;AAEzB,SAAK,uBAAuB,oBAAI,IAAI;AACpC,SAAK,qBAAqB;AAC1B,SAAK,oBAAoB;AACzB,SAAK,OAAO;AACZ,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI;AACJ,SAAK,SAAS,UAAU;AACxB,SAAK,gBAAgB;AACrB,SAAK,KAAK,SAAS,cAAc;AAEjC,UAAM,mBAAmB,eAAe,IAAI,KAAK,QAAQ;AACzD,QAAI,iBAAiB,aAAa,MAAM;AACtC,WAAK,qBAAqB,KAAK,oBAAoB,iBAAiB;AAAA,IACtE,OAAO;AACL,cAAQ,MAAM,cAAc,KAAK,IAAI,uCAAuC;AAAA,IAC9E;AAEA,UAAM,eAAe,KAAK,SAAS,gBAAgB,CAAC;AACpD,QAAI,aAAa,UAAU,MAAM;AAC/B,cAAQ,MAAM,6CAA6C;AAC3D;AAAA,IACF;AAEA,UAAM,mBAAmB,KAAK,QAAQ,KAAK,CAAC;AAE5C,UAAM,iBAAiB,iBAAiB,aAAa,MAAM,EAAE,cAAc,CAAC;AAC5E,UAAM,gBAAgB,eAAe,aAAa,UAAU;AAC5D,QAAI,iBAAiB,MAAM;AACzB,cAAQ,MAAM,uCAAuC;AACrD;AAAA,IACF;AAEA,QAAI,cAAc,YAAY,MAAM;AAClC,WAAK,UAAU,IAAI,cAAc,UAAU,YAAY,cAAc,QAAQ,CAAC;AAAA,IAChF,OAAO;AACL,YAAM,aAAa,YAAY,UAAU,CAAAC,SAAO;AAC9C,eAAOA,KAAI,SAAS;AAAA,MACtB,CAAC;AACD,UAAI,cAAc,GAAG;AACnB,aAAK,UAAU,IAAI,YAAY,YAAY,UAAU,CAAC;AAAA,MACxD,OAAO;AACL,gBAAQ,KAAK,gCAAgC;AAAA,MAC/C;AAAA,IACF;AACA,QAAI,cAAc,cAAc,cAAc,WAAW,wBAAwB,GAAG;AAClF,YAAM,oBAAoB,cAAc,WAAW,wBAAwB;AAC3E,YAAM,aAAa,UAAU,OAAO,KAAK;AACzC,YAAM,eAAe,WAAW,wBAAwB,EAAE;AAG1D,iBAAW,WAAW,kBAAkB,UAAU;AAChD,cAAM,aAAa,YAAY,QAAQ,QAAQ;AAE/C,aAAK,UAAU,IAAI,QAAQ,UAAU,UAAU;AAC/C,mBAAW,WAAW,QAAQ,UAAU;AACtC,gBAAM;AAAA,YACJ;AAAA,UACF,IAAI,aAAa,OAAO;AACxB,eAAK,qBAAqB,IAAI,SAAS,UAAU;AAEjD,qBAAW,eAAe,EAAE,IAAI,OAAO;AAEvC,cAAI,CAAC,cAAc,IAAI,IAAI,GAAG;AAC5B,0BAAc,IAAI,MAAM;AAAA,cACtB;AAAA,cACA,OAAO;AAAA,YACT,CAAC;AAAA,UACH;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA,EACM,kBAAkB,UAAU;AAAA;AAChC,YAAM,aAAa,KAAK,UAAU,IAAI,QAAQ;AAC9C,UAAI,aAAa,KAAK,mBAAmB;AACvC,cAAM,mBAAmB,WAAW,kBAAkB;AACtD,cAAM,eAAe,MAAM,WAAW,kBAAkB,EAAE;AAC1D,YAAI,gBAAgB,MAAM;AACxB,eAAK,KAAK,WAAW;AAAA,QACvB,OAAO;AACL,eAAK,KAAK,WAAW,iBAAiB,OAAO,EAAE,KAAK,EAAE;AAAA,QACxD;AACA,aAAK,OAAO,oBAAoB,KAAK,IAAI;AACzC,yBAAiB,IAAI,KAAK,KAAK,QAAQ;AACvC,aAAK,oBAAoB;AAAA,MAC3B;AACA,aAAO,KAAK,KAAK;AAAA,IACnB;AAAA;AAAA,EACA,oBAAoB;AAClB,WAAO,KAAK,UAAU,IAAI,KAAK,iBAAiB;AAAA,EAClD;AAAA,EACA,YAAY,OAAO;AACjB,WAAO,KAAK,UAAU,IAAI,KAAK;AAAA,EACjC;AAAA,EACM,cAAc,MAAM;AAAA;AACxB,UAAI,QAAQ,MAAM;AAChB,eAAO,KAAK,kBAAkB,KAAK,kBAAkB;AAAA,MACvD;AACA,UAAI,KAAK,wBAAwB,QAAQ,KAAK,cAAc,IAAI,IAAI,GAAG;AACrE,cAAM,gBAAgB,KAAK,cAAc,IAAI,IAAI;AACjD,eAAO,KAAK,oBAAoB,cAAc,KAAK;AAAA,MACrD;AACA,aAAO;AAAA,IACT;AAAA;AAAA,EACM,oBAAoB,OAAO;AAAA;AAC/B,UAAI,KAAK,wBAAwB,QAAQ,SAAS,MAAM;AACtD,cAAM,WAAW,KAAK,qBAAqB,IAAI,KAAK;AACpD,YAAI,YAAY,MAAM;AACpB,iBAAO,KAAK,kBAAkB,SAAS,KAAK;AAAA,QAC9C;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAAA;AAAA,EACM,sBAAsB;AAAA;AAC1B,UAAI,KAAK,wBAAwB,MAAM;AACrC;AAAA,MACF;AACA,iBAAW,SAAS,KAAK,qBAAqB,KAAK,GAAG;AACpD,cAAM,kBAAkB,KAAK,KAAK,SAAS,iBAAiB,IAAI,KAAK;AACrE,YAAI,gBAAgB,YAAY,MAAM;AACpC;AAAA,QACF;AACA,cAAM,gBAAgB,MAAM,KAAK,oBAAoB,KAAK;AAC1D,YAAI,iBAAiB,MAAM;AACzB,0BAAgB,WAAW;AAAA,QAC7B;AAAA,MACF;AAAA,IACF;AAAA;AAAA,EACA,IAAI,cAAc;AAChB,WAAO,KAAK;AAAA,EACd;AAAA,EACA,WAAW,iBAAiB,aAAa;AACvC,QAAI,CAAC,KAAK,sBAAsB,WAAW,GAAG;AAC5C,aAAO;AAAA,IACT;AAEA,QAAI,CAAC,KAAK,cAAc,IAAI,WAAW,GAAG;AACxC,WAAK,cAAc,IAAI,aAAa;AAAA,QAClC,MAAM;AAAA,QACN,OAAO,KAAK,cAAc;AAAA,MAC5B,CAAC;AAAA,IACH;AACA,UAAM,mBAAmB,KAAK,cAAc,IAAI,WAAW;AAC3D,UAAM,eAAe,iBAAiB;AAEtC,oBAAgB,eAAe,EAAE,IAAI,YAAY;AAEjD,SAAK,qBAAqB,IAAI,cAAc,eAAe;AAC3D,SAAK,UAAU,IAAI,gBAAgB,OAAO,eAAe;AACzD,SAAK,sBAAsB,cAAc,eAAe;AACxD,WAAO;AAAA,EACT;AAAA,EACA,cAAc,cAAc;AAC1B,QAAI,KAAK,YAAY,IAAI,YAAY,GAAG;AACtC,WAAK,YAAY,OAAO,YAAY;AACpC,YAAM,cAAc,KAAK,KAAK,SAAS;AACvC,UAAI,eAAe,MAAM;AACvB,oBAAY,OAAO,YAAY;AAAA,MACjC;AAAA,IACF;AAAA,EACF;AAAA,EACA,sBAAsB,cAAc,iBAAiB;AAEnD,oBAAgB,eAAe,EAAE,IAAI,YAAY;AACjD,SAAK,KAAK,SAAS,cAAc,KAAK;AAEtC,SAAK,KAAK,SAAS,mBAAmB,KAAK,KAAK,SAAS,oBAAoB,oBAAI,IAAI;AACrF,UAAM,MAAM,KAAK,KAAK,SAAS;AAC/B,QAAI,IAAI,cAAc;AAAA,MACpB,UAAU,gBAAgB,kBAAkB,EAAE,OAAO,EAAE,KAAK,EAAE;AAAA,MAC9D,mBAAmB,gBAAgB;AAAA,IACrC,CAAC;AAAA,EACH;AAAA,EACA,sBAAsB,aAAa;AACjC,UAAM,gBAAgB,KAAK,cAAc,IAAI,WAAW;AACxD,QAAI,iBAAiB,QAAQ,KAAK,YAAY,IAAI,cAAc,KAAK,GAAG;AACtE,cAAQ,KAAK,iCAAiC,WAAW,yCAAyC;AAClG,aAAO;AAAA,IACT;AACA,WAAO;AAAA,EACT;AACF;;;AC3LA,IAAIC;AAAJ,IAAQC;AAAR,IAAYC;AAAZ,IAAgBC;AAAhB,IAAoB;AAApB,IAAwB;AAKjB,IAAMC,cAAa,OAAO,WAAW;AAC5C,IAAM,aAAa,OAAO,WAAW;AACrC,IAAM,SAAS,OAAO,OAAO;AACtB,IAAM,kBAAkB,OAAO,YAAY;AAC3C,IAAM,eAAe,OAAO,aAAa;AACzC,IAAM,4BAA4B,OAAO,0BAA0B;AACnE,IAAM,iBAAiB,OAAO,eAAe;AAC7C,IAAM,qBAAqB,OAAO,mBAAmB;AACrD,IAAM,iBAAiB,OAAO,eAAe;AAC7C,IAAM,iBAAiB,OAAO,eAAe;AAC7C,IAAM,eAAe,OAAO,aAAa;AACzC,IAAM,qBAAqB,OAAO,mBAAmB;AAC5D,IAAM,iBAAiB,OAAO,eAAe;AAC7C,IAAM,iBAAiB,OAAO,eAAe;AAGtC,IAAM,aAAN,MAAiB;AAAA,EACtB,YAAY,MAAM,gBAAgB,QAAQ,YAAY;AACpD,SAAK,OAAO;AACZ,SAAK,iBAAiB;AACtB,SAAK,SAAS;AACd,SAAK,aAAa;AAAA,EACpB;AACF;AAMO,IAAM,QAAN,MAAY;AAAA,EACjB,YAAY,sBAAsB,WAAW,MAAM;AAAA,EAAC,GAAG;AACrD,SAAKJ,GAAE,IAAI,IAAI,MAAM;AACrB,SAAKC,GAAE,IAAI,IAAI,MAAM;AACrB,SAAKC,GAAE,IAAI,IAAI,MAAM;AACrB,SAAKC,GAAE,IAAI,IAAI,MAAM;AACrB,SAAK,EAAE,IAAI,MAAM;AAAA,IAAC;AAClB,SAAK,EAAE,IAAI,oBAAI,IAAI;AACnB,SAAK,cAAc,IAAI;AACvB,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI;AACJ,eAAW,CAAC,GAAG,QAAQ,KAAK,KAAK,UAAU,QAAQ,GAAG;AACpD,YAAM,qBAAqB,eAAe,IAAI,QAAQ;AACtD,UAAI,sBAAsB,MAAM;AAC9B,aAAKC,WAAU,EAAE,KAAK,IAAIC,UAAS,UAAU,GAAG,MAAM,KAAK,YAAY,GAAG,oBAAoB,SAAS,IAAI,CAAC;AAAA,MAC9G,OAAO;AACL,cAAM,eAAe,KAAK,WAAW,KAAK,CAAC;AAC3C,cAAM,kBAAkB,aAAa,CAAC;AACtC,cAAM,mBAAmB,oBAAI,IAAI;AACjC,uBAAe,IAAI,iBAAiB,gBAAgB;AACpD,cAAM,uBAAuB,MAAY;AACvC,gBAAM,gBAAgB,MAAM,UAAU,OAAO,cAAc,YAAY,CAAC;AACxE,2BAAiB,IAAI,aAAa;AAClC,iBAAO;AAAA,QACT;AAEA,aAAKD,WAAU,EAAE,KAAK,IAAIC,UAAS,UAAU,GAAG,OAAO,KAAK,YAAY,GAAG,kBAAkB,SAAS,MAAM,IAAI,WAAW,MAAM,gBAAgB,iBAAiB,oBAAoB,CAAC,CAAC;AAAA,MAC1L;AAAA,IACF;AAKA,UAAM,YAAY,oBAAI,IAAI;AAC1B,UAAM,YAAY,IAAI,MAAM;AAC5B,eAAW,UAAU,UAAU,MAAM,UAAU;AAC7C,gBAAU,KAAK,MAAM;AAAA,IACvB;AAEA,WAAO,UAAU,SAAS,GAAG;AAC3B,YAAM,SAAS,UAAU,IAAI;AAC7B,UAAI,OAAO;AACX,UAAI,kBAAkB,MAAM;AAC1B,eAAO,IAAI,cAAc,QAAQ,KAAK,WAAW,KAAK,YAAY,GAAG,oBAAoB;AACzF,aAAK,eAAe,EAAE,KAAK,IAAI;AAAA,MACjC,OAAO;AACL,eAAO,IAAIC,MAAK,OAAO,IAAI;AAAA,MAC7B;AACA,YAAM,SAAS,UAAU,IAAI,MAAM;AACnC,UAAI,UAAU,MAAM;AAClB,eAAO,SAAS,KAAK,IAAI;AAAA,MAC3B,OAAO;AACL,aAAK,MAAM,EAAE,KAAK,IAAI;AAAA,MACxB;AACA,WAAK,UAAU,EAAE,KAAK,IAAI;AAC1B,iBAAW,SAAS,OAAO,UAAU;AACnC,kBAAU,KAAK,KAAK;AACpB,kBAAU,IAAI,QAAQ,IAAI;AAAA,MAC5B;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,IAAI,YAAY;AACd,WAAO,KAAKF,WAAU;AAAA,EACxB;AAAA,EACA,EAAEJ,MAAKI,aAAYH,MAAK,YAAYC,MAAK,QAAQC,MAAK,iBAAiB,KAAK,gBAAgB,KAAK,cAAc,mBAAmB,IAAI;AACpI,UAAM,WAAW,MAAM,KAAK,KAAK,YAAY,EAAE,OAAO,CAAC;AACvD,aAAS,KAAK,CAACI,IAAGC,OAAM;AACtB,aAAOD,GAAE,QAAQC,GAAE;AAAA,IACrB,CAAC;AACD,WAAO,SAAS,IAAI,UAAQ;AAC1B,aAAO,KAAK;AAAA,IACd,CAAC;AAAA,EACH;AAAA,EACA,kBAAkB,MAAM;AACtB,UAAM,UAAU,KAAKJ,WAAU,EAAE,OAAO,cAAY;AAClD,aAAO,SAAS,SAAS;AAAA,IAC3B,CAAC;AACD,QAAI,QAAQ,SAAS,GAAG;AACtB,aAAO,QAAQ,CAAC;AAAA,IAClB;AACA,WAAO;AAAA,EACT;AAAA,EACA,CAAC,cAAc,EAAE,MAAM,WAAW;AAChC,UAAM,QAAQ,KAAK,UAAU,EAAE,KAAK,UAAQ;AAC1C,UAAI,gBAAgB,eAAe;AACjC,cAAM;AAAA,UACJ;AAAA,UACA;AAAA,QACF,IAAI,KAAK,KAAK,SAAS;AACvB,YAAI,UAAU,QAAQ,cAAc,WAAW;AAC7C,iBAAO;AAAA,QACT;AAAA,MACF;AACA,aAAO;AAAA,IACT,CAAC;AACD,WAAO,SAAS,OAAO,OAAO;AAAA,EAChC;AAAA,EACA,CAAC,cAAc,EAAE,KAAK;AACpB,WAAO,KAAK,UAAU,EAAE,KAAK,UAAQ;AACnC,UAAI,gBAAgB,eAAe;AACjC,cAAM,YAAY;AAClB,YAAI,UAAU,SAAS,IAAI,QAAQ;AACjC,iBAAO;AAAA,QACT;AAAA,MACF;AACA,aAAO;AAAA,IACT,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,CAAC,kBAAkB,EAAE,KAAK;AACxB,WAAO,KAAK,cAAc,EAAE,GAAG,EAAE,kBAAkB;AAAA,EACrD;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,CAAO,cAAc,EAAE,aAAa;AAAA;AAClC,iBAAW,aAAa,KAAK,eAAe,GAAG;AAC7C,cAAM,UAAU,cAAc,WAAW;AAAA,MAC3C;AACA,iBAAW,YAAY,KAAK,WAAW;AACrC,iBAAS,UAAU,EAAE,KAAK;AAAA,MAC5B;AAEA,iBAAW,aAAa,KAAK,eAAe,GAAG;AAC7C,aAAK,UAAU,UAAU,kBAAkB,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI;AAAA,MACtE;AAAA,IACF;AAAA;AAAA,EACA,CAAO,yBAAyB,IAAI;AAAA;AAClC,YAAM,WAAW,IAAI,MAAM;AAC3B,iBAAW,aAAa,KAAK,eAAe,GAAG;AAC7C,iBAAS,KAAK,UAAU,oBAAoB,CAAC;AAAA,MAC/C;AACA,YAAM,QAAQ,IAAI,QAAQ;AAAA,IAC5B;AAAA;AAAA,EACA,CAAC,cAAc,EAAE,OAAO,iBAAiB;AACvC,UAAM,WAAW,KAAK,UAAU,KAAK;AACrC,QAAI,CAAC,SAAS,UAAU;AACtB,cAAQ,MAAM;AAAA,sEACkD;AAAA,IAClE;AACA,UAAM,mBAAmB,SAAS,kBAAkB;AACpD,UAAM,YAAY,oBAAI,IAAI;AAC1B,eAAW,CAAC,GAAG,aAAa,KAAK,iBAAiB,QAAQ,GAAG;AAC3D,YAAMK,SAAQ,cAAc,MAAM;AAClC,MAAAA,OAAM,OAAO,mBAAmB,iBAAiB,OAAO,IAAI,UAAU,IAAI;AAC1E,gBAAU,IAAIA,MAAK;AAAA,IACrB;AACA,UAAM,iBAAiB,IAAIJ;AAAA,MAAS,KAAK,cAAc;AAAA,MAAG,KAAKD,WAAU,EAAE;AAAA,MAAQ;AAAA;AAAA,MAEnF,KAAK,YAAY;AAAA,MAAG;AAAA,MAAW;AAAA,IAAe;AAC9C,SAAKA,WAAU,EAAE,KAAK,cAAc;AACpC,WAAO;AAAA,EACT;AAAA,EACA,iCAAiC,uBAAuB,iBAAiB,aAAa,kBAAkB,MAAM;AAC5G,QAAI,0BAA0B;AAC9B,eAAW,aAAa,KAAK,eAAe,GAAG;AAC7C,YAAM,cAAc,KAAK,YAAY,EAAE,IAAI,WAAW;AAEtD,UAAI,eAAe,QAAQ,UAAU,YAAY,IAAI,YAAY,KAAK,GAAG;AACvE;AAAA,MACF;AAEA,UAAI,UAAU,YAAY,qBAAqB,KAAK,MAAM;AACxD;AAAA,MACF;AACA,UAAI,CAAC,KAAK,WAAW,WAAW,GAAG;AACjC,aAAK,cAAc,WAAW;AAAA,MAChC;AACA,UAAI,2BAA2B,MAAM;AACnC,kCAA0B,KAAK,cAAc,EAAE,uBAAuB,eAAe;AAAA,MACvF;AACA,gBAAU,WAAW,yBAAyB,WAAW;AAAA,IAC3D;AACA,QAAI,mBAAmB,2BAA2B,MAAM;AACtD,8BAAwB,UAAU,EAAE,IAAI;AACxC,WAAK,UAAU,qBAAqB,EAAE,UAAU,EAAE,KAAK;AACvD,iBAAW,aAAa,KAAK,eAAe,GAAG;AAC7C,kBAAU,cAAc,WAAW;AAAA,MACrC;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA,EACA,cAAc,aAAa;AACzB,QAAI,CAAC,KAAK,YAAY,EAAE,IAAI,WAAW,GAAG;AAExC,WAAK,YAAY,EAAE,IAAI,aAAa;AAAA,QAClC,MAAM;AAAA,QACN,OAAO,KAAK,YAAY,EAAE;AAAA,MAC5B,CAAC;AAAA,IACH,OAAO;AACL,cAAQ,KAAK,YAAY,WAAW,mBAAmB;AAAA,IACzD;AAAA,EACF;AAAA,EACA,WAAW,aAAa;AACtB,WAAO,KAAK,YAAY,EAAE,IAAI,WAAW;AAAA,EAC3C;AAAA,EACA,qBAAqB,eAAe,mBAAmB;AACrD,QAAI,KAAK,kBAAkB,EAAE,EAAE,KAAK,UAAQ,SAAS,iBAAiB,KAAK,MAAM;AAC/E,cAAQ,KAAK,0BAA0B,iBAAiB,iCAAiC;AACzF;AAAA,IACF;AACA,QAAI,gBAAgB,KAAK,iBAAiB,KAAK,UAAU,QAAQ;AAC/D,cAAQ,MAAM,yDAAyD;AACvE;AAAA,IACF;AACA,eAAW,aAAa,KAAK,eAAe,GAAG;AAC7C,YAAM,WAAW,UAAU,YAAY,aAAa;AAGpD,UAAI,YAAY,MAAM;AACpB,kBAAU,WAAW,UAAU,iBAAiB;AAAA,MAClD;AAAA,IACF;AAAA,EACF;AAAA,EACA,kBAAkB,aAAa,SAAS;AACtC,UAAM,cAAc,KAAK,YAAY,EAAE,IAAI,WAAW;AACtD,QAAI,eAAe,MAAM;AACvB;AAAA,IACF;AACA,gBAAY,OAAO;AACnB,SAAK,YAAY,EAAE,IAAI,SAAS,WAAW;AAC3C,SAAK,YAAY,EAAE,OAAO,WAAW;AAAA,EACvC;AAAA,EACA,cAAc,aAAa;AACzB,UAAM,UAAU,KAAK,YAAY,EAAE,IAAI,WAAW;AAClD,QAAI,WAAW,MAAM;AACnB;AAAA,IACF;AACA,eAAW,YAAY,KAAK,WAAW;AACrC,UAAI,SAAS,WAAW,WAAW,GAAG;AACpC,iBAAS,eAAe,EAAE,OAAO,QAAQ,KAAK;AAAA,MAChD;AAAA,IACF;AACA,eAAW,aAAa,KAAK,eAAe,GAAG;AAC7C,gBAAU,cAAc,QAAQ,KAAK;AAAA,IACvC;AACA,SAAK,YAAY,EAAE,OAAO,WAAW;AAAA,EACvC;AACF;;;AC7RA,IAAIM,cAAwC,SAAU,YAAYC,SAAQ,KAAKC,OAAM;AACnF,MAAIC,KAAI,UAAU,QAChB,IAAIA,KAAI,IAAIF,UAASC,UAAS,OAAOA,QAAO,OAAO,yBAAyBD,SAAQ,GAAG,IAAIC,OAC3FE;AACF,MAAI,OAAO,YAAY,YAAY,OAAO,QAAQ,aAAa,WAAY,KAAI,QAAQ,SAAS,YAAYH,SAAQ,KAAKC,KAAI;AAAA,MAAO,UAAS,IAAI,WAAW,SAAS,GAAG,KAAK,GAAG,IAAK,KAAIE,KAAI,WAAW,CAAC,EAAG,MAAKD,KAAI,IAAIC,GAAE,CAAC,IAAID,KAAI,IAAIC,GAAEH,SAAQ,KAAK,CAAC,IAAIG,GAAEH,SAAQ,GAAG,MAAM;AAC/Q,SAAOE,KAAI,KAAK,KAAK,OAAO,eAAeF,SAAQ,KAAK,CAAC,GAAG;AAC9D;AAQO,IAAM,eAAe,OAAO,aAAa;AACzC,IAAM,oBAAoB,OAAO,kBAAkB;AACnD,IAAM,SAAS,OAAO,OAAO;AACpC,IAAM,qBAAqB,OAAO,mBAAmB;AACrD,IAAM,gBAAgB,OAAO,cAAc;AAKpC,IAAM,kBAAkB,CAAAI,wBAAsB;AACnD,MAAIC,MAAIC,MAAIC;AAAA,EACZ,MAAM,qCAAqCH,oBAAmB;AAAA,IAC5D,cAAc;AACZ,YAAM,GAAG,SAAS;AAClB,WAAKC,IAAE,IAAI;AACX,WAAKC,IAAE,IAAI;AACX,WAAKC,GAAE,IAAI;AACX,WAAK,cAAc;AACnB,WAAK,cAAc;AACnB,WAAK,QAAQ;AAAA,IACf;AAAA;AAAA;AAAA,IAGA,IAAI,QAAQ;AACV,aAAO,KAAK,MAAM;AAAA,IACpB;AAAA,IACA,IAAI,oBAAoB;AACtB,aAAO,KAAK,QAAQ,KAAK,MAAM,kBAAkB,EAAE,IAAI,CAAC;AAAA,IAC1D;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,IAAI,mBAAmB;AACrB,aAAO,KAAK,iBAAiB;AAAA,IAC/B;AAAA,IACA,EAAEF,OAAK,QAAQC,OAAK,cAAcC,MAAK,mBAAmB,mBAAmB,IAAI;AAC/E,aAAO,MAAM;AACX,aAAK,YAAY,EAAE;AAAA,MACrB;AAAA,IACF;AAAA,IACA,CAAC,aAAa,EAAE,SAAS;AAEvB,cAAQ,aAAa;AACrB,cAAQ,QAAQ;AAChB,cAAQ,QAAQ;AAChB,aAAO,IAAIC,SAAmB,KAAK,kBAAkB,EAAE,GAAG,OAAO;AAAA,IACnE;AAAA,IACM,cAAc,KAAK,OAAO,aAAa;AAAA;AAC3C,cAAM;AAAA,UACJ;AAAA,QACF,IAAI,KAAK,SAAS;AAClB,cAAM,UAAU,MAAM,aAAa,UAAU,KAAK,KAAK,eAAe;AACtE,gBAAQ,SAAS,WAAW;AAC5B,eAAO,KAAK,aAAa,EAAE,OAAO;AAAA,MACpC;AAAA;AAAA,IACM,oBAAoB,KAAK,UAAU,GAAG;AAAA;AAC1C,cAAM;AAAA,UACJ;AAAA,QACF,IAAI,KAAK,SAAS;AAClB,cAAM,UAAU,MAAM,aAAa,WAAW,KAAK,SAAS,KAAK,eAAe;AAChF,eAAO,KAAK,aAAa,EAAE,OAAO;AAAA,MACpC;AAAA;AAAA,IACA,mBAAmB,KAAK;AACtB,YAAM,QAAQ,SAAS,cAAc,OAAO;AAC5C,YAAM,cAAc,KAAK,kBAAkB,oBAAoB;AAC/D,YAAM,MAAM;AACZ,YAAM,QAAQ;AACd,YAAM,cAAc;AACpB,YAAM,OAAO;AACb,YAAM,KAAK;AACX,YAAM,UAAU,IAAI,aAAa,KAAK;AACtC,aAAO,KAAK,aAAa,EAAE,OAAO;AAAA,IACpC;AAAA,IACA,sBAAsB;AACpB,YAAM,SAAS,SAAS,cAAc,QAAQ;AAC9C,YAAM,UAAU,IAAI,cAAc,MAAM;AACxC,aAAO,KAAK,aAAa,EAAE,OAAO;AAAA,IACpC;AAAA,IACM,QAAQ,mBAAmB;AAAA;AAC/B,iEAAM,gBAAN,MAAc,iBAAiB;AAC/B,YAAI,kBAAkB,IAAI,aAAa,GAAG;AACxC,gBAAM,wBAAwB,KAAK,gBAAgB,EAAE,cAAc,gBAAgB;AACnF,gCAAsB,GAAG;AACzB,gBAAM,QAAQ,KAAK,MAAM;AACzB,gBAAM;AAAA,YACJ;AAAA,UACF,IAAI;AACJ,cAAI,SAAS,MAAM;AACjB,kBAAM,MAAM,cAAc,EAAE,WAAW;AACvC,iBAAK,YAAY,EAAE;AACnB,iBAAK,cAAc,IAAI,YAAY,iBAAiB,CAAC;AAAA,UACvD;AACA,gCAAsB,CAAG;AAAA,QAC3B;AACA,YAAI,kBAAkB,IAAI,aAAa,KAAK,kBAAkB,IAAI,OAAO,GAAG;AAC1E,cAAI,CAAC,KAAK,QAAQ;AAChB;AAAA,UACF;AACA,gBAAM,QAAQ,KAAK,MAAM;AACzB,gBAAM,eAAe;AACrB,gBAAM,kBAAkB;AACxB,gBAAM,aAAa;AACnB,eAAK,SAAS,EAAE,WAAW,cAAc;AACzC,eAAK,YAAY,EAAE;AAAA,QACrB;AAAA,MACF;AAAA;AAAA,IACA,CAAC,YAAY,IAAI;AACf,YAAM,YAAY,EAAE;AACpB,YAAM;AAAA,QACJ;AAAA,MACF,IAAI,KAAK,MAAM;AACf,UAAI,eAAe,MAAM;AACvB,cAAM;AAAA,UACJ;AAAA,QACF,IAAI;AACJ,YAAI,wBAAwB,QAAQ,gBAAgB,KAAK,YAAY,GAAG;AACtE,eAAK,MAAM,IAAI,IAAI,MAAM,sBAAsB,KAAK,kBAAkB,EAAE,CAAC;AACzE,eAAK,iBAAiB,IAAI,KAAK,MAAM,KAAK,UAAU,qBAAqB,IAAI,CAAC;AAAA,QAChF;AAGA,YAAI,cAAc,YAAY,UAAU;AACtC,eAAK,cAAc,aAAa;AAAA,QAClC;AAAA,MACF;AACA,WAAK,YAAY,IAAI;AAAA,IACvB;AAAA;AAAA,IAEM,YAAY,SAAS;AAAA;AACzB,cAAM,QAAQ,KAAK,MAAM;AACzB,eAAO,IAAI,QAAQ,CAAO,SAAS,WAAW;AAE5C,gBAAM,OAAO;AAAA,YACX,QAAQ;AAAA,YACR,aAAa;AAAA,YACb,gBAAgB;AAAA,YAChB,yBAAyB;AAAA,YACzB,cAAc;AAAA,UAChB;AACA,iBAAO,OAAO,MAAM,OAAO;AAE3B,eAAK,aAAa,MAAM;AACxB,eAAK,oBAAoB;AACzB,gBAAM,SAAS,MAAM;AACrB,cAAI,UAAU;AAEd,cAAI,UAAU,MAAM;AAClB,sBAAU,OAAO;AACjB,mBAAO,UAAU;AAAA,UACnB;AACA,gBAAM,KAAK,MAAM,EAAE,yBAAyB,EAAE;AAC9C,gBAAM,WAAW,IAAI,aAAa,EAAE,SAAS,YAAU,IAAI,uCAAuC,MAAM,CAAC;AACzG,mBAAS,MAAM,MAAM,OAAO,UAAQ;AAClC,mBAAO,QAAQ,IAAI,KAAK,CAAC,KAAK,SAAS,OAAO,KAAK,UAAU,IAAI,CAAC,GAAG;AAAA,cACnE,MAAM,KAAK,SAAS,6BAA6B;AAAA,YACnD,CAAC,CAAC;AAAA,UACJ,GAAG,MAAM;AACP,mBAAO,OAAO,oBAAoB;AAAA,UACpC,GAAG,IAAI;AACP,cAAI,UAAU,MAAM;AAClB,mBAAO,UAAU;AAAA,UACnB;AAAA,QACF,EAAC;AAAA,MACH;AAAA;AAAA,IACA,kBAAkB,QAAQ,QAAQ;AAChC,YAAM,QAAQ,KAAK,MAAM;AACzB,UAAI,SAAS,MAAM;AACjB,eAAO;AAAA,MACT;AACA,YAAM,QAAQ,KAAK,MAAM;AACzB,YAAM,YAAY,MAAM,OAAO,QAAQ,MAAM;AAC7C,YAAM,MAAM,MAAM,aAAa,SAAS;AACxC,UAAI,OAAO,QAAQ,IAAI,QAAQ,MAAM;AACnC,eAAO;AAAA,MACT;AACA,aAAO,MAAM,kBAAkB,EAAE,GAAG;AAAA,IACtC;AAAA,EACF;AACA,EAAAT,YAAW,CAAC,SAAS;AAAA,IACnB,MAAM;AAAA,IACN,WAAW;AAAA,EACb,CAAC,CAAC,GAAG,6BAA6B,WAAW,eAAe,MAAM;AAClE,EAAAA,YAAW,CAAC,SAAS;AAAA,IACnB,MAAM;AAAA,IACN,WAAW;AAAA,EACb,CAAC,CAAC,GAAG,6BAA6B,WAAW,eAAe,MAAM;AAClE,EAAAA,YAAW,CAAC,SAAS;AAAA,IACnB,MAAM;AAAA,IACN,WAAW;AAAA,EACb,CAAC,CAAC,GAAG,6BAA6B,WAAW,SAAS,MAAM;AAC5D,SAAO;AACT;;;AC7MO,IAAM,iBAAN,cAA6B,KAAK;AAAA,EACvC,cAAc;AACZ,UAAM,QAAW,IAAI,kBAAkB;AAAA,MACrC,YAAY;AAAA,IACd,CAAC,CAAC;AACF,SAAK,SAAS;AACd,SAAK,SAAS;AACd,SAAK,aAAa;AAClB,SAAK,SAAS,QAAQ;AAAA,EACxB;AAAA,EACA,IAAI,MAAM;AACR,WAAO,KAAK,SAAS;AAAA,EACvB;AAAA,EACA,IAAI,IAAI,QAAQ;AACd,SAAK,SAAS,MAAM;AAAA,EACtB;AAAA,EACA,WAAW;AACT,WAAO,KAAK,SAAS,KAAK,KAAK,SAAS,KAAK,KAAK,YAAY,QAAQ,KAAK,OAAO;AAAA,EACpF;AAAA,EACA,eAAe,SAAS,KAAK,QAAQ,SAAS,KAAK,QAAQ,aAAa,KAAK;AAC3E,QAAI,UAAU,KAAK,UAAU,UAAU,KAAK,UAAU,cAAc,KAAK,YAAY;AACnF,WAAK,SAAS;AACd,WAAK,SAAS;AACd,WAAK,aAAa;AAClB,UAAI,SAAS,KAAK,SAAS,GAAG;AAC5B,aAAK,SAAS,QAAQ;AACtB,aAAK,WAAW,aAAa,QAAQ,QAAQ,UAAU;AAAA,MACzD;AAAA,IACF;AAAA,EACF;AACF;AACA,SAAS,aAAa,QAAQ,QAAQ,YAAY;AAChD,QAAM,WAAW,IAAI,eAAe,QAAQ,IAAI,YAAY,UAAU;AACtE,WAAS,MAAM,GAAG,GAAG,EAAE;AACvB,QAAM,MAAM,SAAS,aAAa,UAAU;AAC5C,QAAM,MAAM,IAAI,QAAQ;AACxB,WAAS,IAAI,GAAG,IAAI,IAAI,OAAO,EAAE,GAAG;AAClC,QAAI,oBAAoB,KAAK,CAAC;AAC9B,QAAI,IAAI,IAAI,GAAG;AAEb,YAAM,KAAK,CAAC,SAAS,IAAI;AACzB,YAAM,IAAI,IAAI,IAAI,KAAK,CAAC,SAAS,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK;AACvE,UAAI,eAAe,CAAC;AACpB,UAAI,QAAQ,IAAI,OAAO,IAAI,CAAC;AAAA,IAC9B;AAAA,EACF;AACA,MAAI,cAAc;AAClB,SAAO;AACT;;;AC7CA,IAAM,IAAI,IAAI,QAAQ;AACtB,IAAM,IAAI,IAAI,QAAQ;AACtB,IAAM,IAAI,IAAI,QAAQ;AACtB,IAAM,MAAM,IAAI,QAAQ;AACxB,IAAM,WAAW,IAAI,SAAS;AAC9B,IAAM,OAAO,IAAI,WAAW;AAKrB,IAAM,UAAN,cAAsB,YAAY;AAAA,EACvC,YAAY,QAAQ;AAClB,UAAM,SAAS,cAAc,KAAK,CAAC;AACnC,SAAK,SAAS,IAAI,QAAQ,GAAG,GAAG,CAAC;AACjC,SAAK,cAAc;AACnB,SAAK,iBAAiB;AACtB,SAAK,QAAQ,SAAS,cAAc,KAAK;AACzC,SAAK,OAAO,SAAS,cAAc,MAAM;AACzC,SAAK,QAAQ,UAAU,IAAI,oBAAoB;AAC/C,SAAK,KAAK,OAAO,OAAO;AACxB,SAAK,QAAQ,YAAY,KAAK,KAAK;AACnC,SAAK,MAAM,YAAY,KAAK,IAAI;AAChC,SAAK,eAAe,OAAO,QAAQ;AACnC,SAAK,aAAa,OAAO,MAAM;AAC/B,SAAK,UAAU,OAAO;AAAA,EACxB;AAAA,EACA,IAAI,eAAe;AACjB,WAAO,CAAC,KAAK,QAAQ,UAAU,SAAS,MAAM;AAAA,EAChD;AAAA;AAAA;AAAA;AAAA,EAIA,OAAO;AACL,QAAI,CAAC,KAAK,gBAAgB,CAAC,KAAK,aAAa;AAC3C,WAAK,iBAAiB,IAAI;AAAA,IAC5B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAIA,OAAO;AACL,QAAI,KAAK,gBAAgB,CAAC,KAAK,aAAa;AAC1C,WAAK,iBAAiB,KAAK;AAAA,IAC7B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAIA,YAAY;AACV,SAAK;AAAA,EACP;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,YAAY;AACV,QAAI,KAAK,iBAAiB,GAAG;AAC3B,QAAE,KAAK;AAAA,IACT;AACA,WAAO,KAAK,mBAAmB;AAAA,EACjC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,eAAe,UAAU;AACvB,QAAI,YAAY,KAAM;AACtB,UAAM,gBAAgB,iBAAiB,QAAQ,EAAE,CAAC,EAAE;AACpD,aAAS,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AAC1B,WAAK,SAAS,aAAa,GAAG,cAAc,cAAc,CAAC,CAAC,EAAE,MAAM;AAAA,IACtE;AACA,SAAK,kBAAkB;AAAA,EACzB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa,QAAQ;AACnB,QAAI,UAAU,KAAM;AACpB,UAAM,cAAc,iBAAiB,MAAM,EAAE,CAAC,EAAE;AAChD,aAAS,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AAC1B,WAAK,OAAO,aAAa,GAAG,YAAY,CAAC,EAAE,MAAM;AAAA,IACnD;AAAA,EACF;AAAA,EACA,gBAAgB;AACd,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI;AACJ,QAAI,QAAQ,QAAQ,OAAO,QAAQ,QAAQ,MAAM;AAC/C;AAAA,IACF;AACA,SAAK,kBAAkB,IAAI,GAAG,CAAC;AAC/B,SAAK,kBAAkB,IAAI,GAAG,CAAC;AAC/B,SAAK,kBAAkB,IAAI,GAAG,CAAC;AAC/B,MAAE,QAAQ,IAAI,UAAU,CAAC;AACzB,MAAE,QAAQ,IAAI,UAAU,CAAC;AACzB,MAAE,QAAQ,IAAI,UAAU,CAAC;AACzB,SAAK,SAAS,KAAK,IAAI,EAAE,aAAa,GAAG;AACzC,UAAMU,UAAS,KAAK;AACpB,IAAAA,QAAO,aAAa,KAAK,aAAa,KAAK,QAAQ,CAAC;AACpD,aAAS,IAAI,GAAG,GAAG,CAAC;AACpB,aAAS,UAAU,KAAK,MAAM,EAAE,mBAAmB,KAAK,WAAW;AACnE,UAAM,QAAQA,QAAO;AACrB,SAAK,iBAAiB,EAAE,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,SAAS,CAAC;AACvD,SAAK,OAAO,gBAAgB,IAAI;AAAA,EAClC;AAAA,EACA,OAAO,SAAS;AACd,SAAK,MAAM,MAAM,YAAY,UAAU,OAAO;AAAA,EAChD;AAAA,EACA,iBAAiB,MAAM;AACrB,SAAK,QAAQ,UAAU,OAAO,QAAQ,CAAC,IAAI;AAG3C,SAAK,KAAK,cAAc,EAAE,QAAQ,UAAQ;AACxC,UAAI,KAAK,aAAa,KAAK,cAAc;AACvC;AAAA,MACF;AACA,YAAM,UAAU;AAEhB,YAAM,sBAAsB,QAAQ,QAAQ;AAC5C,UAAI,uBAAuB,MAAM;AAC/B,cAAM,gBAAgB,QAAQ,mBAAmB;AACjD,gBAAQ,gBAAgB,eAAe,IAAI;AAAA,MAC7C;AACA,cAAQ,cAAc,IAAI,YAAY,sBAAsB;AAAA,QAC1D,QAAQ;AAAA,UACN,SAAS;AAAA,QACX;AAAA,MACF,CAAC,CAAC;AAAA,IACJ,CAAC;AACD,SAAK,cAAc;AAAA,EACrB;AACF;;;ACtIA,IAAM,uBAAuB;AAAA,EAC3B,MAAM;AAAA,EACN,UAAU;AAAA,IACR,YAAY;AAAA,MACV,OAAO;AAAA,IACT;AAAA,IACA,KAAK;AAAA,MACH,OAAO,IAAM;AAAA,IACf;AAAA,EACF;AAAA,EACA;AAAA;AAAA,IAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUxB;AAAA;AAAA,IAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwB5B;;;AC9CA,IAAM,qBAAqB;AAAA,EACzB,MAAM;AAAA,EACN,UAAU;AAAA,IACR,YAAY;AAAA,MACV,OAAO;AAAA,IACT;AAAA,IACA,KAAK;AAAA,MACH,OAAO,IAAM;AAAA,IACf;AAAA,EACF;AAAA,EACA;AAAA;AAAA,IAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUxB;AAAA;AAAA,IAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwB5B;;;AC1DA,IAAM,UAAU,KAAK,KAAK;AAC1B,IAAM,UAAU,MAAM,KAAK;AA0F3B,SAAS,KAAK,GAAG,GAAGC,IAAG;AACrB,UAAQ,IAAIA,MAAK,IAAIA,KAAI;AAC3B;;;AC3EA,IAAM,qBAAqB;AAC3B,IAAM,qBAAqB;AAK3B,IAAM,oBAAoB;AAI1B,IAAM,yBAAyB;AAcxB,IAAM,SAAN,cAAqB,SAAS;AAAA,EACnC,YAAY,OAAO,UAAU,MAAM;AACjC,UAAM;AACN,SAAK,SAAS,IAAI,mBAAmB;AAErC,SAAK,eAAe;AACpB,SAAK,mBAAmB;AACxB,SAAK,gBAAgB,IAAI,kBAAkB;AAC3C,SAAK,yBAAyB,IAAI,eAAe,oBAAoB;AACrE,SAAK,uBAAuB,IAAI,eAAe,kBAAkB;AACjE,SAAK,YAAY;AACjB,SAAK,WAAW;AAChB,SAAK,cAAc,IAAI,KAAK;AAC5B,SAAK,OAAO,IAAI,QAAQ;AACxB,SAAK,eAAe;AACpB,SAAK,aAAa;AAClB,SAAK,cAAc;AACnB,UAAM;AAAA,MACJ,QAAAC;AAAA,IACF,IAAI;AACJ,IAAAA,QAAO,SAAS,IAAI,KAAK,KAAK;AAC9B,IAAAA,QAAO,OAAO;AACd,IAAAA,QAAO,QAAQ;AACf,IAAAA,QAAO,SAAS;AAChB,IAAAA,QAAO,MAAM;AACb,SAAK,IAAIA,OAAM;AAKf,UAAM,QAAQ,IAAI,cAAc;AAChC,UAAM,iBAAiB,IAAI,kBAAkB;AAAA;AAAA,MAE3C,SAAS;AAAA,MACT,aAAa;AAAA,MACb,MAAM;AAAA,IACR,CAAC;AACD,SAAK,QAAQ,IAAI,KAAK,OAAO,cAAc;AAC3C,SAAK,MAAM,SAAS,QAAQ;AAC5B,IAAAA,QAAO,IAAI,KAAK,KAAK;AAErB,SAAK,YAAY,IAAI,KAAK,KAAK;AAC/B,SAAK,UAAU,UAAU;AACzB,IAAAA,QAAO,IAAI,KAAK,SAAS;AACzB,UAAM,OAAO,IAAI,IAAI;AAErB,SAAK,cAAc,kBAAkB,SAAU,QAAQ;AACrD,aAAO,iBAAiB,OAAO,eAAe,QAAQ,6DAA6D,qEAAqE;AAAA,IAC1L;AAGA,SAAK,cAAc,OAAO;AAC1B,SAAK,uBAAuB,YAAY;AACxC,SAAK,qBAAqB,YAAY;AACtC,SAAK,SAAS,OAAO,UAAU,IAAI;AAAA,EACrC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,SAAS,OAAO,UAAU,MAAM;AAC9B,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI;AACJ,SAAK,aAAa,MAAM,eAAe,SAAS;AAChD,SAAK,YAAY,KAAK,MAAM,WAAW;AACvC,SAAK,KAAK,KAAK,MAAM,IAAI;AACzB,SAAK,eAAe,KAAK,IAAI,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC,KAAK,KAAK,aAAa,oBAAoB;AAC9F,SAAK,YAAY,UAAU,QAAQ;AACnC,QAAI,SAAS,QAAQ;AACnB,YAAM;AAAA,QACJ;AAAA,QACA,KAAAC;AAAA,MACF,IAAI;AACJ,OAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AAC9B,OAACA,KAAI,GAAGA,KAAI,CAAC,IAAI,CAACA,KAAI,GAAGA,KAAI,CAAC;AAC9B,OAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AAClC,eAAS,IAAI,KAAK,KAAK;AACvB,eAAS,IAAI,KAAK;AAAA,IACpB,OAAO;AACL,eAAS,IAAI;AACb,eAAS,IAAI;AAAA,IACf;AACA,QAAI,KAAK,YAAY;AACnB,YAAM,OAAO,YAAY,IAAI;AAC7B,YAAM,OAAO,YAAY,IAAI;AAC7B,WAAK,IAAI,KAAK;AACd,kBAAY,eAAe,KAAK,UAAU,KAAK,YAAY,EAAE,eAAe,IAAI,CAAC;AACjF,kBAAY,IAAI,IAAI;AACpB,kBAAY,IAAI,IAAI;AACpB,WAAK,IAAI,KAAK,cAAc,OAAO,MAAM,KAAK,YAAY;AAAA,IAC5D;AACA,QAAI,SAAS,UAAU;AACrB,eAAS,IAAI,YAAY,IAAI;AAAA,IAC/B,OAAO;AACL,eAAS,IAAI,YAAY,IAAI;AAAA,IAC/B;AACA,SAAK,YAAY,QAAQ;AAAA,EAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,YAAY,UAAU;AACpB,SAAK,WAAW;AAChB,UAAM;AAAA,MACJ;AAAA,MACA,QAAAD;AAAA,IACF,IAAI;AACJ,UAAM,SAAS,KAAK,aAAa,oBAAoB;AACrD,UAAM,aAAa,SAAS,KAAK,IAAI,GAAG,qBAAqB,YAAY,qBAAqB,mBAAmB;AACjH,SAAK,WAAW,UAAU;AAC1B,UAAM,UAAU,KAAK,IAAI;AACzB,UAAM,UAAU,KAAK,IAAI;AACzB,IAAAA,QAAO,OAAO;AACd,IAAAA,QAAO,MAAM,KAAK,SAAS,SAAS,QAAQ;AAE5C,SAAK,cAAc,UAAU,IAAM;AACnC,IAAAA,QAAO,uBAAuB;AAE9B,SAAK,aAAa,KAAK,SAAS;AAChC,SAAK,UAAU,CAAC;AAAA,EAClB;AAAA;AAAA;AAAA;AAAA,EAIA,WAAW,YAAY;AACrB,UAAM;AAAA,MACJ;AAAA,IACF,IAAI;AACJ,QAAI,KAAK,YAAY;AACnB,oBAAc;AAAA,IAChB;AACA,UAAM,YAAY,KAAK,MAAM,KAAK,IAAI,KAAK,IAAI,aAAa,aAAa,KAAK,IAAI,KAAK,CAAC;AACxF,UAAM,aAAa,KAAK,MAAM,KAAK,IAAI,KAAK,IAAI,aAAa,KAAK,IAAI,KAAK,IAAI,UAAU;AAEzF,UAAM,YAAY;AAClB,UAAM,QAAQ,YAAY;AAC1B,UAAM,SAAS,YAAY;AAC3B,QAAI,KAAK,gBAAgB,SAAS,KAAK,aAAa,UAAU,SAAS,KAAK,aAAa,WAAW,SAAS;AAC3G,WAAK,aAAa,QAAQ;AAC1B,WAAK,eAAe;AACpB,WAAK,iBAAiB,QAAQ;AAC9B,WAAK,mBAAmB;AAAA,IAC1B;AACA,QAAI,KAAK,gBAAgB,MAAM;AAC7B,YAAM,SAAS;AAAA,QACb,QAAQ;AAAA,MACV;AACA,WAAK,eAAe,IAAI,kBAAkB,OAAO,QAAQ,MAAM;AAC/D,WAAK,mBAAmB,IAAI,kBAAkB,OAAO,QAAQ,MAAM;AACnE,WAAK,MAAM,SAAS,MAAM,KAAK,aAAa;AAAA,IAC9C;AAEA,SAAK,OAAO,MAAM,IAAI,KAAK,KAAK,IAAI,YAAY,YAAY,KAAK,KAAK,IAAI,YAAY,aAAa,CAAC;AACpG,SAAK,cAAc;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa,WAAW;AACtB,SAAK,YAAY;AACjB,QAAI,YAAY,GAAG;AACjB,WAAK,UAAU;AACf,WAAK,MAAM,UAAU;AACrB,WAAK,MAAM,SAAS,UAAU,YAAY,KAAK,wBAAwB,GAAG,KAAK,WAAW,KAAK,QAAQ;AAAA,IACzG,OAAO;AACL,WAAK,UAAU;AACf,WAAK,MAAM,UAAU;AAAA,IACvB;AAAA,EACF;AAAA,EACA,eAAe;AACb,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,UAAU,QAAQ;AAChB,SAAK,MAAM,SAAS,IAAI,CAAC,SAAS,KAAK,IAAI;AAAA,EAC7C;AAAA,EACA,MAAM;AACJ,WAAO,OAAQ,KAAK;AAAA,EACtB;AAAA,EACA,OAAO,UAAU,OAAO;AAGtB,UAAM,mBAAmB,KAAK;AAE9B,UAAM,oBAAoB,SAAS,cAAc;AACjD,aAAS,cAAc,CAAC;AACxB,SAAK,MAAM,UAAU;AAErB,UAAM,YAAY,SAAS,GAAG;AAC9B,aAAS,GAAG,UAAU;AAEtB,UAAM,kBAAkB,SAAS,gBAAgB;AACjD,aAAS,gBAAgB,KAAK,YAAY;AAC1C,aAAS,OAAO,OAAO,KAAK,MAAM;AAElC,UAAM,mBAAmB;AACzB,SAAK,MAAM,UAAU;AACrB,SAAK,WAAW,QAAQ;AAExB,aAAS,GAAG,UAAU;AACtB,aAAS,gBAAgB,eAAe;AACxC,aAAS,cAAc,iBAAiB;AAAA,EAE1C;AAAA,EACA,WAAW,UAAU;AACnB,UAAM;AAAA,MACJ,QAAAA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI;AACJ,cAAU,UAAU;AAEpB,cAAU,WAAW;AACrB,2BAAuB,SAAS,EAAE,QAAQ,IAAI,KAAK,aAAa;AAChE,2BAAuB,SAAS,SAAS,QAAQ,KAAK,aAAa;AACnE,aAAS,gBAAgB,gBAAgB;AACzC,aAAS,OAAO,WAAWA,OAAM;AAEjC,cAAU,WAAW;AACrB,yBAAqB,SAAS,EAAE,QAAQ,IAAI,KAAK,aAAa;AAC9D,yBAAqB,SAAS,SAAS,QAAQ,KAAK,iBAAiB;AACrE,aAAS,gBAAgB,YAAY;AACrC,aAAS,OAAO,WAAWA,OAAM;AACjC,cAAU,UAAU;AAAA,EACtB;AAAA,EACA,UAAU;AACR,QAAI,KAAK,gBAAgB,MAAM;AAC7B,WAAK,aAAa,QAAQ;AAAA,IAC5B;AACA,QAAI,KAAK,oBAAoB,MAAM;AACjC,WAAK,iBAAiB,QAAQ;AAAA,IAChC;AACA,SAAK,cAAc,QAAQ;AAC3B,SAAK,uBAAuB,QAAQ;AACpC,SAAK,qBAAqB,QAAQ;AAClC,SAAK,MAAM,SAAS,QAAQ;AAC5B,SAAK,MAAM,SAAS,QAAQ;AAC5B,SAAK,UAAU,SAAS,QAAQ;AAChC,SAAK,iBAAiB;AAAA,EACxB;AACF;;;AChRO,IAAM,uBAAuB;AACpC,IAAM,mBAAmB;AAKzB,IAAM,OAAO,IAAI,QAAQ;AACzB,IAAM,SAAS,IAAI,QAAQ;AAC3B,IAAM,cAAc,IAAI,QAAQ;AAChC,IAAM,YAAY,IAAI,UAAU;AAChC,IAAME,WAAU,IAAI,QAAQ;AAC5B,IAAM,MAAM,IAAI,QAAQ;AAMjB,IAAM,aAAN,cAAyB,MAAM;AAAA,EACpC,YAAY;AAAA,IACV;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,GAAG;AACD,UAAM;AACN,SAAK,qBAAqB,IAAI,cAAc;AAC5C,SAAK,iBAAiB;AACtB,SAAK,gBAAgB,SAAS,cAAc,QAAQ;AACpD,SAAK,QAAQ;AACb,SAAK,SAAS;AACd,SAAK,SAAS;AACd,SAAK,YAAY;AACjB,SAAK,cAAc;AACnB,SAAK,mBAAmB;AACxB,SAAK,qBAAqB,CAAC;AAC3B,SAAK,mBAAmB,CAAC;AAGzB,SAAK,SAAS,IAAI,kBAAkB,IAAI,GAAG,KAAK,GAAG;AACnD,SAAK,WAAW;AAChB,SAAK,MAAM;AACX,SAAK,QAAQ,IAAI,SAAS;AAC1B,SAAK,SAAS,IAAI,SAAS;AAC3B,SAAK,iBAAiB,CAAC;AACvB,SAAK,cAAc,IAAI,KAAK;AAC5B,SAAK,iBAAiB,IAAI,OAAO;AACjC,SAAK,OAAO,IAAI,QAAQ;AACxB,SAAK,cAAc;AACnB,SAAK,eAAe;AACpB,SAAK,SAAS;AACd,SAAK,kBAAkB;AACvB,SAAK,iBAAiB;AACtB,SAAK,eAAe,oBAAI,IAAI;AAC5B,SAAK,WAAW;AAChB,SAAK,cAAc;AACnB,SAAK,WAAW;AAChB,SAAK,UAAU;AACf,SAAK,aAAa,IAAI,QAAQ;AAC9B,SAAK,gBAAgB,IAAI,OAAO;AAChC,SAAK,gBAAgB,IAAI,OAAO;AAChC,SAAK,gBAAgB,IAAI,OAAO;AAChC,SAAK,eAAe;AACpB,SAAK,SAAS;AACd,SAAK,4BAA4B;AACjC,SAAK,mBAAmB,oBAAI,IAAI;AAChC,SAAK,yBAAyB;AAC9B,SAAK,iBAAiB,IAAI,eAAe;AACzC,SAAK,OAAO;AACZ,SAAK,UAAU;AACf,SAAK,SAAS;AAGd,SAAK,SAAS,IAAI,kBAAkB,IAAI,GAAG,KAAK,GAAG;AACnD,SAAK,OAAO,OAAO;AACnB,SAAK,IAAI,KAAK,KAAK;AACnB,SAAK,MAAM,OAAO;AAClB,SAAK,MAAM,IAAI,KAAK,MAAM;AAC1B,SAAK,QAAQ,OAAO,MAAM;AAC1B,SAAK,OAAO,OAAO;AACnB,SAAK,QAAQ,IAAI,eAAe,KAAK,MAAM;AAC3C,UAAM;AAAA,MACJ;AAAA,IACF,IAAI,KAAK;AACT,UAAM;AAAA,MACJ,OAAAC;AAAA,IACF,IAAI;AACJ,IAAAA,OAAM,UAAU;AAChB,IAAAA,OAAM,gBAAgB;AACtB,IAAAA,OAAM,WAAW;AACjB,IAAAA,OAAM,MAAM;AACZ,SAAK,QAAQ,WAAW,cAAc,UAAU,EAAE,YAAY,UAAU;AACxE,SAAK,cAAc,aAAa,QAAQ,qBAAqB;AAAA,EAC/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,IAAI,UAAU;AACZ,WAAO,KAAK,OAAO,WAAW,IAAI;AAAA,EACpC;AAAA,EACA,YAAY;AACV,WAAO,KAAK,YAAY,OAAO,KAAK,WAAW,KAAK;AAAA,EACtD;AAAA,EACA,cAAc;AACZ,SAAK,UAAU;AAAA,EACjB;AAAA,EACA,eAAe;AACb,WAAO,KAAK;AAAA,EACd;AAAA,EACA,cAAc;AACZ,SAAK,UAAU;AAAA,EACjB;AAAA,EACA,eAAe;AACb,SAAK,YAAY;AACjB,SAAK,YAAY;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKM,UAAU,OAAO;AAAA;AACrB,WAAK,MAAM;AACX,WAAK,SAAS;AACd,WAAK,OAAO,IAAI,KAAK;AACrB,YAAM,KAAK,WAAW;AAAA,IACxB;AAAA;AAAA;AAAA;AAAA;AAAA,EAIM,UAAU,KAAK,mBAAmB,MAAM;AAAA,EAAC,GAAG;AAAA;AAChD,UAAI,CAAC,OAAO,QAAQ,KAAK,KAAK;AAC5B,yBAAiB,CAAC;AAClB;AAAA,MACF;AACA,WAAK,MAAM;AACX,WAAK,MAAM;AACX,UAAI,KAAK,oBAAoB,MAAM;AACjC,cAAM,cAAc,MAAM,KAAK,iBAAiB,KAAK,gBAAgB;AACrE,aAAK,eAAe,SAAS,YAAY;AACzC,aAAK,cAAc,YAAY;AAC/B;AAAA,MACF;AAGA,UAAI,KAAK,6BAA6B,MAAM;AAC1C,aAAK,0BAA0B;AAC/B,aAAK,4BAA4B;AAAA,MACnC;AACA,UAAI;AACJ,UAAI;AACF,eAAO,MAAM,IAAI,QAAQ,CAAO,SAAS,WAAW;AAClD,eAAK,4BAA4B,MAAM,OAAO;AAC9C,cAAI;AACF,kBAAM,SAAS,MAAM,KAAK,QAAQ,SAAS,EAAE,OAAO,KAAK,KAAK,KAAK,SAAS,gBAAgB;AAC5F,oBAAQ,MAAM;AAAA,UAChB,SAAS,OAAO;AACd,mBAAO,KAAK;AAAA,UACd;AAAA,QACF,EAAC;AAAA,MACH,SAAS,OAAO;AACd,YAAI,SAAS,MAAM;AAEjB;AAAA,QACF;AACA,cAAM;AAAA,MACR;AACA,WAAK,4BAA4B;AACjC,WAAK,MAAM;AACX,WAAK,MAAM;AACX,WAAK,eAAe;AACpB,UAAI,QAAQ,MAAM;AAChB,aAAK,SAAS,KAAK;AACnB,aAAK,OAAO,IAAI,KAAK,KAAK;AAAA,MAC5B;AACA,YAAM;AAAA,QACJ;AAAA,MACF,IAAI;AACJ,YAAM,mBAAmB,oBAAI,IAAI;AACjC,YAAM,iBAAiB,CAAC;AACxB,iBAAW,aAAa,YAAY;AAClC,yBAAiB,IAAI,UAAU,MAAM,SAAS;AAC9C,uBAAe,KAAK,UAAU,IAAI;AAAA,MACpC;AACA,WAAK,aAAa;AAClB,WAAK,mBAAmB;AACxB,WAAK,iBAAiB;AACtB,YAAM,KAAK,WAAW;AAAA,IACxB;AAAA;AAAA,EACM,aAAa;AAAA;AACjB,WAAK,eAAe;AACpB,WAAK,kBAAkB;AACvB,YAAM,KAAK,cAAc;AACzB,WAAK,aAAa;AAClB,WAAK,mBAAmB,KAAK,eAAe;AAC5C,WAAK,kBAAkB;AAAA,IACzB;AAAA;AAAA,EACA,QAAQ;AACN,SAAK,MAAM;AACX,SAAK,cAAc;AACnB,SAAK,YAAY;AACjB,QAAI,KAAK,UAAU,MAAM;AACvB,WAAK,OAAO,aAAa,CAAC;AAAA,IAC5B;AACA,SAAK,aAAa,MAAM;AACxB,UAAM;AAAA,MACJ;AAAA,IACF,IAAI;AACJ,QAAI,UAAU,MAAM;AAClB,aAAO,iBAAiB;AACxB,WAAK,SAAS;AAAA,IAChB;AACA,UAAM,OAAO,KAAK;AAClB,QAAI,QAAQ,MAAM;AAChB,WAAK,QAAQ;AACb,WAAK,eAAe;AAAA,IACtB;AACA,QAAI,KAAK,0BAA0B,MAAM;AACvC,WAAK,uBAAuB,KAAK;AACjC,WAAK,yBAAyB;AAAA,IAChC;AACA,SAAK,MAAM,cAAc;AACzB,SAAK,MAAM,YAAY,IAAI;AAAA,EAC7B;AAAA,EACA,UAAU;AACR,SAAK,MAAM;AACX,QAAI,KAAK,UAAU,MAAM;AACvB,WAAK,OAAO,QAAQ;AACpB,WAAK,SAAS;AAAA,IAChB;AACA,SAAK,QAAQ,YAAY,IAAI;AAC7B,SAAK,QAAQ,iBAAiB,IAAI;AAClC,SAAK,QAAQ,MAAM,IAAI;AAAA,EACzB;AAAA,EACA,IAAI,cAAc;AAChB,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAIA,QAAQ,OAAO,QAAQ;AACrB,QAAI,KAAK,UAAU,SAAS,KAAK,WAAW,QAAQ;AAClD;AAAA,IACF;AACA,SAAK,QAAQ,KAAK,IAAI,OAAO,CAAC;AAC9B,SAAK,SAAS,KAAK,IAAI,QAAQ,CAAC;AAChC,SAAK,mBAAmB,QAAQ,OAAO,MAAM;AAC7C,SAAK,SAAS,KAAK,QAAQ,KAAK;AAChC,QAAI,KAAK,oBAAoB,MAAM;AACjC,YAAM,MAAM,OAAO;AACnB,WAAK,iBAAiB,OAAO,QAAQ,KAAK,SAAS,GAAG;AAAA,IACxD;AACA,SAAK,YAAY;AAAA,EACnB;AAAA,EACA,gBAAgB,MAAM;AACpB,SAAK,SAAS,QAAQ;AACtB,SAAK,aAAa,IAAI,IAAI;AAAA,EAC5B;AAAA,EACA,kBAAkB,MAAM;AACtB,SAAK,SAAS,QAAQ;AACtB,SAAK,UAAU;AACf,SAAK,aAAa,OAAO,IAAI;AAC7B,SAAK,YAAY,eAAe,IAAI;AAAA,EACtC;AAAA,EACA,iBAAiB,OAAO;AACtB,UAAM,cAAc,IAAI,KAAK;AAC7B,UAAM,SAAS,YAAU;AACvB,YAAM,OAAO;AACb,UAAI,CAAC,KAAK,UAAU;AAClB;AAAA,MACF;AACA,YAAM,WAAW,KAAK;AACtB,UAAI,CAAC,SAAS,aAAa;AACzB;AAAA,MACF;AACA,kBAAY,cAAc,IAAI;AAC9B,YAAM,OAAO,YAAY,QAAQD,QAAO;AACxC,YAAM,SAAS,KAAK,IAAI,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC;AAC9C,YAAM,SAAS,KAAK,IAAI,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC;AAC9C,UAAI,SAAS,mBAAmB,QAAQ;AACtC;AAAA,MACF;AACA,WAAK,gBAAgB,IAAI;AAAA,IAC3B,CAAC;AAAA,EACH;AAAA,EACA,oBAAoB;AAClB,UAAM;AAAA,MACJ;AAAA,MACA,KAAAE;AAAA,IACF,IAAI,KAAK;AACT,UAAM,YAAY,IAAI,KAAK;AAC3B,SAAK,YAAY,QAAQ,KAAK,IAAI;AAClC,eAAW,QAAQ,KAAK,cAAc;AACpC,gBAAU,cAAc,IAAI;AAC5B,UAAI,UAAU,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,oBAAoB,UAAU,IAAI,KAAK,IAAI,KAAK,UAAU,IAAI,KAAKA,KAAI,KAAK,UAAU,IAAI,KAAK,IAAI,KAAK,UAAU,IAAI,KAAKA,KAAI,GAAG;AAE5K;AAAA,MACF;AACA,UAAI,UAAU,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,oBAAoB,UAAU,IAAI,KAAK,IAAI,KAAK,UAAU,IAAI,KAAKA,KAAI,KAAK,UAAU,IAAI,KAAK,IAAI,KAAK,UAAU,IAAI,KAAKA,KAAI,GAAG;AAE5K;AAAA,MACF;AACA,WAAK,kBAAkB,IAAI;AAAA,IAC7B;AAAA,EACF;AAAA,EACA,iBAAiB;AACf,UAAM;AAAA,MACJ;AAAA,IACF,IAAI;AACJ,QAAI,SAAS,MAAM;AACjB;AAAA,IACF;AACA,UAAM,cAAc,iBAAiB,KAAK,QAAQ,WAAW,EAAE,CAAC,EAAE;AAClE,UAAM,OAAO,cAAc,YAAY,CAAC,CAAC,EAAE;AAC3C,UAAM,QAAQ,cAAc,YAAY,CAAC,CAAC,EAAE;AAC5C,UAAM,MAAM,cAAc,YAAY,CAAC,CAAC,EAAE;AAC1C,UAAM,WAAW,aAAa,IAAI,MAAM,OAAO,KAAK,MAAM,KAAK,CAAC;AAChE,UAAM,QAAQ,iBAAiB,KAAK,QAAQ,KAAK,EAAE,CAAC,EAAE;AACtD,UAAM,MAAM,IAAI,MAAM,CAAC,EAAE,QAAQ,MAAM,CAAC,EAAE,QAAQ,MAAM,CAAC,EAAE,MAAM;AAAA,EACnE;AAAA,EACA,oBAAoB;AAClB,UAAM;AAAA,MACJ;AAAA,IACF,IAAI;AACJ,QAAI,SAAS,MAAM;AACjB;AAAA,IACF;AACA,SAAK,OAAO,OAAO,KAAK;AACxB,SAAK,iBAAiB,KAAK;AAC3B,UAAM,QAAQ,CAAC,KAAK,WAAW;AAC7B,aAAO,IAAI,cAAc,MAAM;AAAA,IACjC;AACA,SAAK,yBAAyB,KAAK;AACnC,SAAK,cAAc,eAAe,OAAO,OAAO,IAAI,KAAK,CAAC;AAE1D,QAAI,KAAK,YAAY,QAAQ,GAAG;AAC9B,WAAK,yBAAyB,IAAI;AAClC,WAAK,aAAa,QAAQ,UAAQ,KAAK,kBAAkB,IAAI,CAAC;AAC9D,WAAK,cAAc,eAAe,OAAO,OAAO,IAAI,KAAK,CAAC;AAAA,IAC5D;AACA,SAAK,kBAAkB;AACvB,SAAK,yBAAyB;AAC9B,SAAK,YAAY,QAAQ,KAAK,IAAI;AAClC,SAAK,OAAO,IAAI,KAAK;AAAA,EACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASM,gBAAgB;AAAA;AACpB,YAAM;AAAA,QACJ;AAAA,MACF,IAAI;AACJ,UAAI,SAAS,MAAM;AACjB;AAAA,MACF;AACA,WAAK,OAAO,OAAO,KAAK;AACxB,WAAK,yBAAyB,KAAK;AACnC,YAAM;AAAA,QACJ;AAAA,MACF,IAAI,KAAK;AACT,WAAK,QAAQ,cAAc,cAAc;AACzC,YAAM,KAAK,QAAQ;AACnB,aAAO,KAAK,KAAK,UAAU,CAAC;AAC5B,YAAM,gBAAgB,CAAC,OAAO,WAAW;AACvC,eAAO,KAAK,IAAI,OAAO,OAAO,kBAAkB,MAAM,CAAC;AAAA,MACzD;AACA,WAAK,eAAe,SAAS,KAAK,KAAK,eAAe,OAAO,eAAe,CAAC,CAAC;AAC9E,YAAM,mBAAmB,CAAC,OAAO,WAAW;AAC1C,eAAO,IAAI,MAAM;AACjB,cAAM,WAAW,KAAK,KAAK,OAAO,IAAI,OAAO,IAAI,OAAO,IAAI,OAAO,CAAC;AACpE,eAAO,KAAK,IAAI,OAAO,YAAY,KAAK,oBAAoB,IAAI,KAAK,IAAI,OAAO,CAAC,EAAE;AAAA,MACrF;AACA,WAAK,cAAc,eAAe,OAAO,kBAAkB,CAAC,IAAI,KAAK,IAAI,KAAK,eAAe,IAAI,KAAK,KAAK,GAAG;AAC9G,WAAK,yBAAyB;AAC9B,WAAK,OAAO,IAAI,KAAK;AAAA,IACvB;AAAA;AAAA,EACA,yBAAyB,UAAU,KAAK,mBAAmB,GAAG;AAC5D,eAAW,UAAU,KAAK,cAAc;AACtC,aAAO,UAAU;AAAA,IACnB;AAAA,EACF;AAAA,EACA,sBAAsB;AACpB,UAAM,aAAa,KAAK,eAAe,IAAI,KAAK,KAAK;AACrD,WAAO,KAAK,eAAe,SAAS,KAAK,IAAI,UAAU;AAAA,EACzD;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,YAAY,QAAQ;AAClB,UAAM,WAAW,KAAK,IAAI,SAAS,IAAI,KAAK,KAAK,GAAG,IAAI,KAAK,IAAI,GAAG,KAAK,cAAc,KAAK,MAAM;AAClG,WAAO,IAAI,KAAK,KAAK,QAAQ,IAAI,MAAM,KAAK;AAAA,EAC9C;AAAA,EACA,OAAO,SAAS,SAAS;AACvB,QAAI,KAAK,YAAY,MAAM;AACzB,UAAI,IAAI,UAAU,OAAO,OAAO,OAAO,UAAU,OAAO,OAAO,MAAM;AAAA,IACvE,OAAO;AACL,YAAM,OAAO,KAAK,QAAQ,sBAAsB;AAChD,UAAI,KAAK,UAAU,KAAK,KAAK,KAAK,QAAQ,UAAU,KAAK,KAAK,KAAK,MAAM;AAAA,IAC3E;AACA,QAAI,eAAe,CAAC,EAAE,UAAU,CAAC;AACjC,QAAI,KAAK;AACT,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAIA,UAAU;AACR,WAAO;AAAA,MACL,OAAO,KAAK;AAAA,MACZ,QAAQ,KAAK;AAAA,IACf;AAAA,EACF;AAAA,EACA,wBAAwB,aAAa,QAAQ;AAC3C,QAAI,KAAK,QAAQ,SAAS,EAAE,WAAW,mBAAmB,MAAM;AAC9D;AAAA,IACF;AACA,SAAK,cAAc;AACnB,SAAK,cAAc,MAAM;AACzB,SAAK,YAAY;AAAA,EACnB;AAAA,EACA,cAAc,QAAQ;AACpB,SAAK,eAAe,MAAM;AAC1B,QAAI,KAAK,eAAe,SAAS,GAAG;AAClC,WAAK,OAAO,IAAI,KAAK,cAAc;AACnC,WAAK,aAAa;AAAA,IACpB,OAAO;AACL,WAAK,OAAO,OAAO,KAAK,cAAc;AACtC,WAAK,aAAa;AAAA,IACpB;AAAA,EACF;AAAA,EACA,YAAY;AACV,WAAO,KAAK,eAAe,UAAU,KAAK,eAAe,UAAU,OAAO,uBAAuB;AAAA,EACnG;AAAA,EACA,oBAAoB;AAClB,UAAM,aAAa,iBAAiB,KAAK,QAAQ,YAAY,EAAE,CAAC,EAAE,MAAM,CAAC;AACzE,UAAM,SAAS,cAAc,UAAU,EAAE;AACzC,UAAM,SAAS,uBAAuB,KAAK,eAAe;AAC1D,SAAK,eAAe,eAAe,QAAQ,MAAM;AACjD,SAAK,eAAe,SAAS,IAAI,UAAU,KAAK,SAAS,IAAI,KAAK,OAAO,IAAI,IAAI;AACjF,SAAK,cAAc,KAAK,eAAe,GAAG;AAAA,EAC5C;AAAA;AAAA;AAAA;AAAA,EAIA,UAAU,QAAQ,QAAQ,QAAQ;AAChC,SAAK,WAAW,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM;AAAA,EAC/C;AAAA;AAAA;AAAA;AAAA,EAIA,yBAAyB,mBAAmB;AAC1C,SAAK,cAAc,aAAa,iBAAiB;AACjD,SAAK,cAAc,aAAa,iBAAiB;AACjD,SAAK,cAAc,aAAa,iBAAiB;AAAA,EACnD;AAAA;AAAA;AAAA;AAAA,EAIA,YAAY;AACV,WAAO,KAAK,WAAW,MAAM,EAAE,eAAe,EAAE;AAAA,EAClD;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,mBAAmB;AACjB,WAAO,KAAK,OAAO,SAAS,MAAM,EAAE,eAAe,EAAE;AAAA,EACvD;AAAA;AAAA;AAAA;AAAA,EAIA,aAAa;AACX,SAAK,aAAa,aAAa;AAAA,EACjC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa,OAAO;AAClB,UAAM,OAAO,KAAK;AAClB,UAAMC,UAAS,KAAK,OAAO;AAC3B,QAAI,CAAC,KAAK,OAAOA,OAAM,GAAG;AACxB,YAAM,gBAAgB,KAAK,eAAe,SAAS;AACnD,UAAI;AAAA,QACF;AAAA,QACA;AAAA,QACA;AAAA,MACF,IAAIA;AACJ,UAAI,KAAK,cAAc,OAAO,GAAG,KAAK,GAAG,OAAO,aAAa;AAC7D,UAAI,KAAK,cAAc,OAAO,GAAG,KAAK,GAAG,OAAO,aAAa;AAC7D,UAAI,KAAK,cAAc,OAAO,GAAG,KAAK,GAAG,OAAO,aAAa;AAC7D,WAAK,eAAe,SAAS,IAAI,CAAC;AAClC,WAAK,eAAe,SAAS,IAAI,CAAC;AAClC,WAAK,OAAO,SAAS,IAAI,GAAG,GAAG,CAAC;AAChC,WAAK,OAAO,kBAAkB;AAC9B,WAAK,YAAY;AACjB,aAAO;AAAA,IACT,OAAO;AACL,aAAO;AAAA,IACT;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAIA,aAAa,QAAQ,QAAQ;AAC3B,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,IACF,IAAI,KAAK;AACT,SAAK,MAAM,KAAK,MAAM,SAAS,GAAG,SAAS,CAAC;AAAA,EAC9C;AAAA,EACA,IAAI,QAAQ;AACV,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,IAAI,UAAU;AAChB,SAAK,MAAM,SAAS,IAAI;AACxB,SAAK,eAAe,SAAS,IAAI,CAAC;AAClC,SAAK,YAAY;AAAA,EACnB;AAAA,EACA,IAAI,MAAM;AACR,WAAO,KAAK,MAAM,SAAS;AAAA,EAC7B;AAAA,EACA,IAAI,cAAc,OAAO;AACvB,SAAK,MAAM,QAAQ,KAAK;AACxB,SAAK,kBAAkB;AAAA,EACzB;AAAA,EACA,IAAI,gBAAgB;AAClB,QAAI,KAAK,0BAA0B,MAAM;AACvC,YAAM,YAAY,KAAK,IAAI,KAAK,uBAAuB,YAAY,CAAC;AACpE,UAAI,KAAK,uBAAuB,SAAS,iBAAiB,YAAY,OAAO,GAAG;AAC9E,eAAO,KAAK,WAAW,KAAK,uBAAuB;AAAA,MACrD,OAAO;AACL,eAAO,KAAK,uBAAuB;AAAA,MACrC;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA,EACA,IAAI,mBAAmB,OAAO;AAC5B,SAAK,MAAM,YAAY;AAAA,EACzB;AAAA,EACA,IAAI,qBAAqB;AACvB,WAAO,KAAK,MAAM;AAAA,EACpB;AAAA,EACA,IAAI,WAAW;AACb,QAAI,KAAK,0BAA0B,QAAQ,KAAK,uBAAuB,QAAQ,GAAG;AAChF,aAAO,KAAK,uBAAuB,QAAQ,EAAE;AAAA,IAC/C;AACA,WAAO;AAAA,EACT;AAAA,EACA,IAAI,qBAAqB;AACvB,WAAO,KAAK,0BAA0B;AAAA,EACxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,cAAc,OAAO,MAAM,gBAAgB,GAAG,WAAW,YAAY,kBAAkB,UAAU;AAC/F,QAAI,KAAK,gBAAgB,MAAM;AAC7B;AAAA,IACF;AACA,UAAM;AAAA,MACJ;AAAA,IACF,IAAI;AACJ,QAAI,cAAc,QAAQ,WAAW,WAAW,GAAG;AACjD;AAAA,IACF;AACA,QAAI,gBAAgB;AACpB,QAAI,QAAQ,MAAM;AAChB,sBAAgB,KAAK,iBAAiB,IAAI,IAAI;AAC9C,UAAI,iBAAiB,MAAM;AACzB,cAAM,uBAAuB,SAAS,IAAI;AAC1C,YAAI,CAAC,MAAM,oBAAoB,KAAK,wBAAwB,KAAK,uBAAuB,WAAW,QAAQ;AACzG,0BAAgB,WAAW,oBAAoB;AAAA,QACjD;AAAA,MACF;AAAA,IACF;AACA,QAAI,iBAAiB,MAAM;AACzB,sBAAgB,WAAW,CAAC;AAAA,IAC9B;AACA,QAAI;AACF,YAAM;AAAA,QACJ,wBAAwB;AAAA,MAC1B,IAAI;AACJ,YAAM,SAAS,KAAK,MAAM,WAAW,eAAe,IAAI;AAExD,UAAI,OAAO,aAAa,KAAK,QAAQ,WAAW;AAC9C,eAAO,YAAY,KAAK,QAAQ;AAAA,MAClC;AACA,WAAK,yBAAyB;AAC9B,UAAI,KAAK,QAAQ,QAAQ;AACvB,aAAK,MAAM,cAAc;AAAA,MAC3B,OAAO;AACL,eAAO,SAAS;AAChB,YAAI,uBAAuB,QAAQ,WAAW,qBAAqB;AACjE,iBAAO,cAAc,qBAAqB,eAAe,KAAK;AAAA,QAChE,WAAW,KAAK,qBAAqB,KAAK,KAAK,iBAAiB,KAAK,UAAU;AAE7E,eAAK,gBAAgB;AAAA,QACvB;AAAA,MACF;AACA,aAAO,QAAQ,UAAU,eAAe;AACxC,aAAO,UAAU;AACjB,aAAO,oBAAoB;AAC3B,aAAO,KAAK;AAAA,IACd,SAAS,OAAO;AACd,cAAQ,MAAM,KAAK;AAAA,IACrB;AAAA,EACF;AAAA,EACA,gBAAgB,OAAO,IAAI,WAAW,YAAY,kBAAkB,UAAU,SAAS,GAAG,YAAY,GAAGC,QAAO,OAAO,OAAO,OAAO,eAAe,MAAM,OAAO,MAAM,cAAc,OAAO;AAC1L,QAAI,KAAK,gBAAgB,QAAQ,SAAS,KAAK,QAAQ,eAAe;AACpE;AAAA,IACF;AACA,UAAM;AAAA,MACJ;AAAA,IACF,IAAI;AACJ,QAAI,cAAc,QAAQ,WAAW,WAAW,GAAG;AACjD;AAAA,IACF;AACA,QAAI,gBAAgB;AACpB,UAAM,cAAc;AACpB,QAAI,MAAM;AACR,sBAAgB,KAAK,iBAAiB,IAAI,IAAI;AAAA,IAChD;AACA,QAAI,iBAAiB,MAAM;AACzB;AAAA,IACF;AAEA,QAAI,OAAO,oBAAoB,UAAU;AACvC,UAAI,CAAC,MAAM,eAAe,GAAG;AAC3B,0BAAkB,KAAK,IAAI,SAAS,eAAe,GAAG,CAAC;AAAA,MACzD,OAAO;AACL,0BAAkB;AAClB,gBAAQ,KAAK,mEAAmE;AAAA,MAClF;AAAA,IACF,WAAW,OAAO,oBAAoB,YAAY,kBAAkB,GAAG;AACrE,wBAAkB;AAAA,IACpB;AACA,QAAI,oBAAoB,KAAK,aAAa,UAAU;AAClD,iBAAW;AAAA,IACb;AACA,QAAI,OAAO,WAAW,UAAU;AAC9B,UAAI,CAAC,MAAM,MAAM,GAAG;AAClB,iBAAS,WAAW,MAAM;AAAA,MAC5B,OAAO;AACL,iBAAS;AACT,gBAAQ,KAAK,0CAA0C;AAAA,MACzD;AAAA,IACF;AACA,QAAI,OAAO,cAAc,UAAU;AACjC,UAAI,CAAC,MAAM,SAAS,GAAG;AACrB,oBAAY,WAAW,SAAS;AAAA,MAClC,OAAO;AACL,oBAAY;AACZ,gBAAQ,KAAK,gDAAgD;AAAA,MAC/D;AAAA,IACF;AACA,QAAI,OAAOA,UAAS,UAAU;AAE5B,UAAIA,MAAK,YAAY,EAAE,KAAK,MAAM,QAAQ;AACxC,QAAAA,QAAO;AAAA,MAET,WAAWA,MAAK,YAAY,EAAE,KAAK,MAAM,SAAS;AAChD,QAAAA,QAAO;AAAA,MACT,WAAW,CAAC,MAAMA,KAAI,GAAG;AACvB,QAAAA,QAAO,WAAWA,KAAI;AAAA,MACxB,OAAO;AACL,QAAAA,QAAO;AACP,gBAAQ,KAAK,0CAA0C;AAAA,MACzD;AAAA,IACF;AACA,QAAI,OAAO,SAAS,UAAU;AAE5B,UAAI,KAAK,YAAY,EAAE,KAAK,MAAM,QAAQ;AACxC,eAAO;AAAA,MAET,WAAW,KAAK,YAAY,EAAE,KAAK,MAAM,SAAS;AAChD,eAAO;AAAA,MACT,WAAW,CAAC,MAAM,IAAI,GAAG;AACvB,eAAO,WAAW,IAAI;AAAA,MACxB,OAAO;AACL,eAAO;AACP,gBAAQ,KAAK,0CAA0C;AAAA,MACzD;AAAA,IACF;AACA,QAAI,OAAO,SAAS,UAAU;AAC5B,UAAI,CAAC,MAAM,IAAI,GAAG;AAChB,eAAO,WAAW,IAAI;AAAA,MACxB;AAAA,IACF;AACA,QAAI;AACF,YAAM,SAAS,KAAK,MAAM,eAAe,aAAa,KAAK,KAAK,MAAM,WAAW,eAAe,IAAI;AACpG,YAAM,mBAAmB,OAAO;AAChC,UAAI,eAAe,KAAK,mBAAmB,SAAS,IAAI,GAAG;AACzD,YAAI,CAAC,KAAK,iBAAiB,IAAI,OAAK,EAAE,IAAI,EAAE,SAAS,IAAI,GAAG;AAC1D,eAAK,iBAAiB,KAAK;AAAA,YACzB;AAAA,YACA;AAAA,YACA;AAAA,UACF,CAAC;AAAA,QACH;AAAA,MACF;AACA,UAAI,OAAO,SAAS,UAAU;AAC5B,eAAO,OAAO,KAAK,IAAI,KAAK,IAAI,MAAM,CAAC,GAAG,cAAc,QAAQ;AAAA,MAClE;AACA,UAAI,OAAOA,UAAS,aAAaA,OAAM;AACrC,eAAO,OAAO,WAAW;AAAA,MAC3B,WAAW,OAAOA,UAAS,UAAU;AACnC,eAAO,OAAO,KAAK,IAAIA,OAAM,CAAC,CAAC;AAAA,MACjC,OAAO;AACL,YAAI,UAAU,GAAG;AACf,iBAAO,SAAS,KAAK,IAAI,KAAK,IAAI,QAAQ,CAAC,GAAG,CAAC;AAAA,QACjD;AAAA,MACF;AACA,UAAI,OAAO,SAAS,aAAa,MAAM;AACrC,eAAO,KAAK,eAAe,mBAAmB,GAAG,WAAW,WAAW;AAAA,MACzE,WAAW,OAAO,SAAS,UAAU;AACnC,eAAO,KAAK,eAAe,mBAAmB,GAAG,WAAW,KAAK,IAAI,MAAM,CAAC,CAAC;AAAA,MAC/E,OAAO;AACL,eAAO,YAAY;AAAA,MACrB;AACA,UAAI,CAAC,OAAO,UAAU,GAAG;AACvB,YAAI,OAAO,QAAQ,cAAc,UAAU;AACzC,iBAAO,KAAK;AAAA,QACd;AACA,eAAO,QAAQ,UAAU,eAAe;AACxC,eAAO,SAAS;AAChB,eAAO,UAAU;AACjB,eAAO,oBAAoB;AAC3B,eAAO,KAAK;AAAA,MACd;AACA,UAAI,CAAC,KAAK,mBAAmB,SAAS,IAAI,GAAG;AAC3C,aAAK,QAAQ,MAAM,EAAE,mBAAmB,KAAK,IAAI;AAAA,MACnD;AAAA,IACF,SAAS,OAAO;AACd,cAAQ,MAAM,KAAK;AAAA,IACrB;AAAA,EACF;AAAA,EACA,gBAAgB,OAAO,IAAIA,QAAO,MAAM;AACtC,QAAI,KAAK,gBAAgB,QAAQ,SAAS,KAAK,QAAQ,eAAe;AACpE;AAAA,IACF;AACA,UAAM;AAAA,MACJ;AAAA,IACF,IAAI;AACJ,QAAI,cAAc,QAAQ,WAAW,WAAW,GAAG;AACjD;AAAA,IACF;AACA,QAAI,gBAAgB;AACpB,UAAM,cAAc;AACpB,QAAI,MAAM;AACR,sBAAgB,KAAK,iBAAiB,IAAI,IAAI;AAAA,IAChD;AACA,QAAI,iBAAiB,MAAM;AACzB;AAAA,IACF;AACA,QAAI,OAAOA,UAAS,UAAU;AAE5B,UAAIA,MAAK,YAAY,EAAE,KAAK,MAAM,QAAQ;AACxC,QAAAA,QAAO;AAAA,MAET,WAAWA,MAAK,YAAY,EAAE,KAAK,MAAM,SAAS;AAChD,QAAAA,QAAO;AAAA,MACT,WAAW,CAAC,MAAMA,KAAI,GAAG;AACvB,QAAAA,QAAO,WAAWA,KAAI;AAAA,MACxB,OAAO;AACL,QAAAA,QAAO;AACP,gBAAQ,KAAK,yCAAyC;AAAA,MACxD;AAAA,IACF;AACA,QAAI;AACF,YAAM,SAAS,KAAK,MAAM,eAAe,aAAa,KAAK,KAAK,MAAM,WAAW,eAAe,IAAI;AACpG,UAAI,OAAOA,UAAS,aAAaA,OAAM;AACrC,eAAO,QAAQ,WAAW;AAAA,MAC5B,WAAW,OAAOA,UAAS,UAAU;AACnC,eAAO,QAAQ,KAAK,IAAIA,OAAM,CAAC,CAAC;AAAA,MAClC,OAAO;AACL,eAAO,KAAK;AAAA,MACd;AACA,YAAM,SAAS,KAAK,QAAQ,MAAM,EAAE,mBAAmB,OAAO,OAAK,MAAM,IAAI;AAC7E,WAAK,QAAQ,MAAM,EAAE,qBAAqB;AAAA,IAC5C,SAAS,OAAO;AACd,cAAQ,MAAM,KAAK;AAAA,IACrB;AAAA,EACF;AAAA,EACA,oBAAoB,OAAO,IAAI,WAAW,YAAY,kBAAkB,UAAU;AAChF,QAAI,KAAK,gBAAgB,QAAQ,SAAS,KAAK,QAAQ,eAAe;AACpE;AAAA,IACF;AACA,UAAM;AAAA,MACJ;AAAA,IACF,IAAI;AACJ,QAAI,cAAc,QAAQ,WAAW,WAAW,GAAG;AACjD;AAAA,IACF;AACA,QAAI,gBAAgB;AACpB,QAAI,MAAM;AACR,sBAAgB,KAAK,iBAAiB,IAAI,IAAI;AAAA,IAChD;AACA,QAAI,iBAAiB,MAAM;AACzB;AAAA,IACF;AACA,QAAI;AACF,YAAM,SAAS,KAAK,MAAM,eAAe,aAAa,KAAK,KAAK,MAAM,WAAW,eAAe,IAAI;AACpG,aAAO,KAAK;AACZ,aAAO,QAAQ,UAAU,eAAe;AACxC,aAAO,KAAK;AAAA,IACd,SAAS,OAAO;AACd,cAAQ,MAAM,KAAK;AAAA,IACrB;AAAA,EACF;AAAA,EACA,gBAAgB;AACd,SAAK,yBAAyB;AAC9B,SAAK,MAAM,cAAc;AAAA,EAC3B;AAAA,EACA,gBAAgB,MAAM;AACpB,SAAK,MAAM,OAAO,IAAI;AACtB,SAAK,kBAAkB;AAAA,EACzB;AAAA,EACA,oBAAoB,OAAO,UAAU;AACnC,SAAK,MAAM,iBAAiB,OAAO,QAAQ;AAAA,EAC7C;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,eAAe;AACb,UAAM,SAAS,KAAK;AACpB,QAAI,UAAU,MAAM;AAClB,YAAM,OAAO,KAAK,QAAQ,gBAAgB,SAAS,SAAS;AAC5D,aAAO,SAAS,MAAM,KAAK,gBAAgB,IAAI;AAC/C,aAAO,cAAc;AAAA,IACvB;AAAA,EACF;AAAA,EACA,aAAa,UAAU;AACrB,UAAM,SAAS,KAAK;AACpB,QAAI,UAAU,QAAQ,OAAO,eAAe,MAAM;AAChD,aAAO,OAAO,UAAU,IAAI;AAC5B,aAAO,cAAc;AAAA,IACvB;AAAA,EACF;AAAA,EACA,oBAAoB;AAClB,QAAI,KAAK,UAAU,MAAM;AACvB,WAAK,OAAO,cAAc;AAAA,IAC5B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAIA,mBAAmB,iBAAiB;AAClC,SAAK,kBAAkB;AACvB,QAAI,KAAK,gBAAgB,MAAM;AAC7B;AAAA,IACF;AACA,SAAK,yBAAyB;AAC9B,QAAI,mBAAmB,KAAK,KAAK,UAAU,MAAM;AAC/C;AAAA,IACF;AACA,QAAI,KAAK,UAAU,MAAM;AACvB,YAAM,OAAO,KAAK,QAAQ,gBAAgB,SAAS,SAAS;AAC5D,WAAK,SAAS,IAAI,OAAO,MAAM,KAAK,gBAAgB,IAAI;AAAA,IAC1D;AACA,SAAK,OAAO,aAAa,eAAe;AAAA,EAC1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,kBAAkB,UAAU;AAC1B,SAAK,iBAAiB;AACtB,UAAM,SAAS,KAAK;AACpB,QAAI,UAAU,MAAM;AAClB,aAAO,YAAY,QAAQ;AAAA,IAC7B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,gBAAgB,QAAQ;AACtB,UAAM,SAAS,KAAK;AACpB,QAAI,UAAU,MAAM;AAClB,aAAO,UAAU,MAAM;AAAA,IACzB;AAAA,EACF;AAAA,EACA,OAAO,SAAS,MAAM;AACpB,UAAM,OAAO,UAAU,gBAAgB,QAAQ,IAAI;AACnD,WAAO,KAAK,KAAK,SAAO,IAAI,OAAO,WAAW,CAAC,IAAI,OAAO,SAAS,KAAK;AAAA,EAC1E;AAAA,EACA,kBAAkB,YAAY,SAAS,MAAM;AAC3C,cAAU,oBAAoB,UAAU;AACxC,WAAO,KAAK,OAAO,MAAM;AAAA,EAC3B;AAAA,EACA,aAAa,aAAa,SAAS,MAAM;AACvC,cAAU,cAAc,aAAa,KAAK,UAAU,CAAC;AACrD,WAAO,KAAK,OAAO,MAAM;AAAA,EAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,2BAA2B,aAAa,SAAS,MAAM;AACrD,QAAIC;AACJ,UAAM,MAAM,KAAK,aAAa,aAAa,MAAM;AACjD,QAAI,OAAO,MAAM;AACf,aAAO;AAAA,IACT;AACA,UAAM,WAAW,IAAI;AACrB,UAAM,SAAS,IAAI,QAAQ,OAAO,IAAI,KAAK,OAAO,MAAM,EAAE,kBAAkB,IAAI,QAAQ,EAAE,gBAAgB,IAAI,OAAO,WAAW,CAAC,IAAI,UAAU,IAAI,UAAU,MAAM,EAAE,eAAe,EAAE;AACtL,UAAM,MAAMA,OAAK,IAAI,QAAQ,QAAQA,SAAO,SAASA,OAAK;AAC1D,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,iBAAiB,aAAa,SAAS,MAAM;AAC3C,UAAM,QAAQ,KAAK,QAAQ;AAC3B,QAAI,SAAS,MAAM;AACjB,aAAO;AAAA,IACT;AACA,UAAM,MAAM,KAAK,aAAa,aAAa,MAAM;AACjD,QAAI,OAAO,QAAQ,IAAI,QAAQ,MAAM;AACnC,aAAO;AAAA,IACT;AACA,UAAM,OAAO,MAAM,cAAc,EAAE,GAAG;AACtC,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,IACF,IAAI,KAAK,KAAK,SAAS;AACvB,UAAM,KAAK,IAAI,QAAQ;AACvB,UAAM,KAAK,IAAI,QAAQ;AACvB,UAAM,KAAK,IAAI,QAAQ;AACvB,UAAM;AAAA,MACJ,GAAAC;AAAA,MACA,GAAAC;AAAA,MACA,GAAAC;AAAA,IACF,IAAI,IAAI;AACR,UAAM,OAAO,IAAI;AACjB,SAAK,kBAAkBF,IAAG,EAAE;AAC5B,SAAK,kBAAkBC,IAAG,EAAE;AAC5B,SAAK,kBAAkBC,IAAG,EAAE;AAC5B,UAAM,MAAM,IAAI,SAAS,IAAI,IAAI,EAAE;AACnC,UAAM,MAAM,IAAI,QAAQ;AACxB,QAAI,aAAa,KAAK,aAAa,IAAI,KAAK,GAAG,GAAG;AAClD,WAAO,GAAG,MAAM,IAAI,UAAU,IAAIF,EAAC,IAAIC,EAAC,IAAIC,EAAC,IAAI,IAAI,EAAE,QAAQ,CAAC,CAAC,IAAI,IAAI,EAAE,QAAQ,CAAC,CAAC,IAAI,IAAI,EAAE,QAAQ,CAAC,CAAC;AAAA,EAC3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,WAAW,SAAS;AAClB,SAAK,OAAO,IAAI,OAAO;AAIvB,SAAK,mBAAmB,WAAW,YAAY,QAAQ,OAAO;AAC9D,SAAK,qBAAqB,OAAO;AAAA,EACnC;AAAA,EACA,cAAc,SAAS;AACrB,SAAK,OAAO,OAAO,OAAO;AAAA,EAC5B;AAAA;AAAA;AAAA;AAAA,EAIA,YAAY,MAAM;AAChB,UAAM;AAAA,MACJ;AAAA,IACF,IAAI,KAAK;AACT,aAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,IAAI,GAAG,KAAK;AAC/C,YAAM,UAAU,SAAS,CAAC;AAC1B,UAAI,mBAAmB,SAAS;AAC9B,aAAK,OAAO;AAAA,MACd;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAIA,qBAAqB,SAAS;AAC5B,QAAI,QAAQ,WAAW,QAAQ,KAAK,QAAQ,SAAS,MAAM;AACzD;AAAA,IACF;AACA,UAAM,QAAQ,iBAAiB,QAAQ,OAAO,EAAE,CAAC,EAAE;AACnD,QAAI,MAAM,UAAU,GAAG;AACrB,cAAQ,KAAK,QAAQ,UAAU,mCAAmC;AAClE;AAAA,IACF;AACA,UAAM,gBAAgB,KAAK,QAAQ,MAAM,cAAc,EAAE,MAAM,CAAC,EAAE,QAAQ,MAAM,CAAC,EAAE,MAAM;AACzF,QAAI,iBAAiB,MAAM;AACzB,cAAQ,KAAK,QAAQ,UAAU,uEAAuE;AACtG;AAAA,IACF;AACA,UAAM,UAAU,cAAc,KAAK,SAAS,WAAW,SAAS;AAChE,UAAM,MAAM,IAAI,QAAQ,MAAM,CAAC,EAAE,QAAQ,MAAM,CAAC,EAAE,QAAQ,MAAM,CAAC,EAAE,MAAM;AACzE,QAAI,IAAI,KAAK,WAAW,IAAI,KAAK,WAAW,IAAI,KAAK,SAAS;AAC5D,cAAQ,KAAK,QAAQ,UAAU,mEAAmE;AAClG;AAAA,IACF;AACA,UAAM,OAAO,IAAI,QAAQ,MAAM,CAAC,EAAE,QAAQ,MAAM,CAAC,EAAE,QAAQ,MAAM,CAAC,EAAE,MAAM;AAC1E,YAAQ,OAAO,cAAc;AAC7B,YAAQ,MAAM;AACd,YAAQ,OAAO;AACf,YAAQ,cAAc;AAAA,EACxB;AAAA;AAAA;AAAA;AAAA,EAIA,yBAAyB;AACvB,QAAI,KAAK,QAAQ,QAAQ;AACvB;AAAA,IACF;AACA,SAAK,YAAY,aAAW;AAC1B,cAAQ,cAAc;AAAA,IACxB,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,yBAAyB,gBAAgB;AACvC,SAAK,YAAY,aAAW;AAC1B,WAAK,KAAK,cAAc;AACxB,aAAO,sBAAsB,QAAQ,WAAW;AAChD,WAAK,IAAI,MAAM;AACf,kBAAY,KAAK,QAAQ,MAAM,EAAE,mBAAmB,KAAK,OAAO,WAAW;AAC3E,UAAI,KAAK,IAAI,WAAW,IAAI,GAAG;AAC7B,gBAAQ,KAAK;AAAA,MACf,OAAO;AACL,gBAAQ,KAAK;AAAA,MACf;AAAA,IACF,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,eAAe,SAAS;AACtB,SAAK,YAAY,aAAW;AAC1B,cAAQ,OAAO,OAAO;AAAA,IACxB,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,sBAAsB,SAAS;AAC7B,SAAK,YAAY,aAAW;AAC1B,cAAQ,UAAU;AAAA,IACpB,CAAC;AAAA,EACH;AAAA,EACA,aAAa,KAAK;AAChB,QAAIH;AACJ,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,IACF,IAAI;AACJ,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI;AACJ,QAAI,OAAO,MAAM;AACf,YAAM,WAAW,CAAC;AAAA,QAChB,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,kBAAkBA,OAAK,IAAI,MAAM,GAAG,EAAE,IAAI,OAAO,QAAQA,SAAO,SAAS,SAASA,KAAG,YAAY,OAAO,SAAS,oBAAoB;AAAA,MACvI,CAAC;AACD,UAAI,QAAQ;AACV,iBAAS,KAAK;AAAA,UACZ,SAAS;AAAA,UACT,YAAY;AAAA,UACZ,gBAAgB;AAAA,QAClB,CAAC;AAAA,MACH;AACA,YAAM,iBAAiB;AAAA,QACrB,YAAY;AAAA,QACZ,SAAS;AAAA,QACT,OAAO,WAAW,QAAQ,WAAW,SAAS,SAAS;AAAA,QACvD,MAAM,QAAQ,QAAQ,QAAQ,SAAS,MAAM;AAAA,QAC7C;AAAA,MACF;AACA,oBAAc,cAAc,KAAK,UAAU,cAAc;AACzD,eAAS,KAAK,YAAY,aAAa;AAAA,IACzC,WAAW,cAAc,iBAAiB,MAAM;AAC9C,oBAAc,cAAc,YAAY,aAAa;AAAA,IACvD;AAAA,EACF;AACF;;;AC9kCO,IAAM,kBAAN,cAA8B,YAAY;AAAA,EAC/C,cAAc;AACZ,UAAM,GAAG,SAAS;AAClB,SAAK,oBAAoB,oBAAI,IAAI;AACjC,SAAK,gBAAgB;AAAA,EACvB;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,uBAAuB;AACzB,WAAO,KAAK,kBAAkB;AAAA,EAChC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgBA,cAAc,QAAQ;AACpB,UAAM,WAAW;AAAA,MACf,UAAU;AAAA,MACV,WAAW;AAAA,IACb;AACA,SAAK,kBAAkB,IAAI,QAAQ;AACnC,QAAI,KAAK,yBAAyB,GAAG;AAGnC,WAAK,sBAAsB,UAAU,GAAG,MAAM;AAAA,IAChD;AACA,WAAO,cAAY;AACjB,UAAI;AACJ,qBAAe,KAAK,IAAI,MAAM,UAAU,GAAG,CAAC,GAAG,SAAS,QAAQ;AAChE,UAAI,iBAAiB,SAAS,UAAU;AACtC,aAAK,sBAAsB,UAAU,cAAc,MAAM;AAAA,MAC3D;AACA,aAAO,SAAS;AAAA,IAClB;AAAA,EACF;AAAA,EACA,sBAAsB,iBAAiB,cAAc,QAAQ;AAC3D,QAAI,eAAe;AACnB,QAAI,sBAAsB;AAC1B,QAAI,gBAAgB,EAAK,iBAAgB,YAAY;AACrD,eAAW,YAAY,KAAK,mBAAmB;AAC7C,YAAM;AAAA,QACJ;AAAA,MACF,IAAI;AACJ,sBAAgB,IAAM;AACtB,UAAI,SAAS,WAAW;AACtB;AAAA,MACF;AAAA,IACF;AACA,UAAM,eAAe,gBAAgB;AACrC,oBAAgB,WAAW;AAG3B,SAAK,kBAAkB,eAAe,iBAAiB,IAAM,KAAK,iBAAiB;AACnF,UAAM,gBAAgB,wBAAwB,KAAK,uBAAuB,IAAM,KAAK;AACrF,SAAK,cAAc,IAAI,YAAY,YAAY;AAAA,MAC7C,QAAQ;AAAA,QACN;AAAA,QACA;AAAA,MACF;AAAA,IACF,CAAC,CAAC;AACF,QAAI,wBAAwB,KAAK,sBAAsB;AACrD,WAAK,gBAAgB;AACrB,WAAK,kBAAkB,MAAM;AAAA,IAC/B;AAAA,EACF;AACF;;;AClGA,IAAII,cAAwC,SAAU,YAAYC,SAAQ,KAAKC,OAAM;AACnF,MAAIC,KAAI,UAAU,QAChB,IAAIA,KAAI,IAAIF,UAASC,UAAS,OAAOA,QAAO,OAAO,yBAAyBD,SAAQ,GAAG,IAAIC,OAC3FE;AACF,MAAI,OAAO,YAAY,YAAY,OAAO,QAAQ,aAAa,WAAY,KAAI,QAAQ,SAAS,YAAYH,SAAQ,KAAKC,KAAI;AAAA,MAAO,UAAS,IAAI,WAAW,SAAS,GAAG,KAAK,GAAG,IAAK,KAAIE,KAAI,WAAW,CAAC,EAAG,MAAKD,KAAI,IAAIC,GAAE,CAAC,IAAID,KAAI,IAAIC,GAAEH,SAAQ,KAAK,CAAC,IAAIG,GAAEH,SAAQ,GAAG,MAAM;AAC/Q,SAAOE,KAAI,KAAK,KAAK,OAAO,eAAeF,SAAQ,KAAK,CAAC,GAAG;AAC9D;AACA,IAAII;AAAJ,IAAQC;AAAR,IAAYC;AAAZ,IAAgBC;AAAhB,IAAoBC;AAApB,IAAwBC;AAAxB,IAA4B;AAA5B,IAAgC;AAAhC,IAAoC;AAApC,IAAwC;AAAxC,IAA4C;AAA5C,IAAgD;AAAhD,IAAoD;AAWpD,IAAM,yBAAyB;AAC/B,IAAM,oCAAoC;AAC1C,IAAM,+CAA+C;AACrD,IAAM,sBAAsB;AAC5B,IAAM,uBAAuB;AACtB,IAAM,aAAa,SAAS,cAAc,QAAQ;AACzD,IAAM,yBAAyB,OAAO,uBAAuB;AAC7D,IAAM,oBAAoB,OAAO,kBAAkB;AACnD,IAAM,kBAAkB,OAAO,gBAAgB;AAC/C,IAAM,qBAAqB,OAAO,mBAAmB;AACrD,IAAM,iBAAiB,OAAO,eAAe;AAC7C,IAAM,UAAU,OAAO,QAAQ;AAC/B,IAAM,UAAU,OAAO,QAAQ;AAC/B,IAAM,WAAW,OAAO,SAAS;AACjC,IAAM,UAAU,OAAO,QAAQ;AACxB,IAAM,cAAc,OAAO,YAAY;AACvC,IAAM,wBAAwB,OAAO,sBAAsB;AAC3D,IAAM,uBAAuB,OAAO,qBAAqB;AACzD,IAAM,2BAA2B,OAAO,yBAAyB;AACjE,IAAM,aAAa,OAAO,WAAW;AACrC,IAAM,gBAAgB,OAAO,cAAc;AAC3C,IAAM,iBAAiB,OAAO,eAAe;AAC7C,IAAM,gBAAgB,OAAO,cAAc;AAC3C,IAAM,cAAc,OAAO,YAAY;AACvC,IAAM,gBAAgB,OAAO,cAAc;AAC3C,IAAM,cAAc,OAAO,YAAY;AACvC,IAAM,aAAa,OAAO,WAAW;AACrC,IAAM,oBAAoB,OAAO,OAAO;AACxC,IAAM,UAAU,OAAO,QAAQ;AAC/B,IAAM,SAAS,OAAO,OAAO;AAC7B,IAAM,eAAe,OAAO,aAAa;AACzC,IAAM,QAAQ,OAAO,MAAM;AAC3B,IAAM,eAAe,OAAO,aAAa;AACzC,IAAM,YAAY,OAAO,UAAU;AACnC,IAAM,YAAY,OAAO,UAAU;AACnC,IAAM,mBAAmB,OAAO,iBAAiB;AACjD,IAAM,aAAa,OAAO,WAAW;AACrC,IAAM,qBAAqB,OAAO,mBAAmB;AACrD,IAAM,wBAAwB,OAAO,sBAAsB;AAC3D,IAAM,aAAa,OAAK;AAC7B,SAAO;AAAA,IACL,GAAG,EAAE;AAAA,IACL,GAAG,EAAE;AAAA,IACL,GAAG,EAAE;AAAA,IACL,WAAW;AACT,aAAO,GAAG,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC;AAAA,IACxC;AAAA,EACF;AACF;AACO,IAAM,aAAa,OAAK;AAC7B,SAAO;AAAA,IACL,GAAG,EAAE;AAAA,IACL,GAAG,EAAE;AAAA,IACL,WAAW;AACT,aAAO,GAAG,KAAK,CAAC,IAAI,KAAK,CAAC;AAAA,IAC5B;AAAA,EACF;AACF;AAIA,IAAqB,yBAArB,cAAoD,gBAAgB;AAAA,EAClE,WAAW,KAAK;AACd,WAAO;AAAA,EACT;AAAA;AAAA,EAEA,WAAW,eAAe,OAAO;AAC/B,sBAAkB,eAAe,EAAE,oBAAoB;AAAA,EACzD;AAAA;AAAA,EAEA,WAAW,iBAAiB;AAC1B,WAAO,kBAAkB,eAAe,EAAE;AAAA,EAC5C;AAAA;AAAA,EAEA,WAAW,mBAAmB,OAAO;AACnC,QAAI,QAAQ,GAAG;AACb,cAAQ,KAAK,6EAA6E;AAAA,IAC5F;AACA,QAAI,SAAS,GAAG;AACd,cAAQ,KAAK,gFAAgF;AAAA,IAC/F;AACA,aAAS,UAAU,WAAW;AAAA,EAChC;AAAA;AAAA,EAEA,WAAW,qBAAqB;AAC9B,WAAO,SAAS,UAAU;AAAA,EAC5B;AAAA;AAAA,EAEA,IAAI,SAAS;AACX,WAAO,KAAK,UAAU,EAAE;AAAA,EAC1B;AAAA,EACA,MAAML,OAAK,sBAAsBC,OAAK,SAASC,MAAK,aAAaC,MAAK,SAASC,MAAK,oBAAoBC,MAAK,wBAAwB,KAAK,0BAA0B,KAAK,iBAAiB,KAAK,uBAAuB,KAAK,kBAAkB,UAAU,IAAI;AACzP,WAAO,SAAS;AAAA,EAClB;AAAA;AAAA,EAEA,IAAI,iBAAiB;AACnB,WAAO,KAAK,kBAAkB,EAAE;AAAA,EAClC;AAAA;AAAA;AAAA;AAAA,EAIA,cAAc;AACZ,UAAM;AACN,SAAK,MAAM;AACX,SAAK,MAAM;AACX,SAAK,kBAAkB;AAMvB,SAAK,iBAAiB;AACtB,SAAKL,IAAE,IAAI;AACX,SAAKC,IAAE,IAAI;AACX,SAAKC,GAAE,IAAI;AACX,SAAKC,GAAE,IAAI;AACX,SAAKC,GAAE,IAAI;AACX,SAAKC,GAAE,IAAI,SAAS,MAAM;AACxB,YAAM,eAAe,KAAK,sBAAsB;AAChD,WAAK,WAAW,EAAE,YAAY;AAAA,IAChC,GAAG,iCAAiC;AACpC,SAAK,EAAE,IAAI,SAAS,mBAAiB;AACnC,YAAM,gBAAgB,KAAK;AAC3B,UAAI,kBAAkB,eAAe;AACnC,aAAK,cAAc,IAAI,YAAY,oBAAoB;AAAA,UACrD,QAAQ;AAAA,YACN,SAAS;AAAA,UACX;AAAA,QACF,CAAC,CAAC;AAAA,MACJ;AAAA,IACF,GAAG,4CAA4C;AAC/C,SAAK,EAAE,IAAI;AACX,SAAK,EAAE,IAAI;AACX,SAAK,EAAE,IAAI,IAAI,gBAAgB;AAC/B,SAAK,EAAE,IAAI,MAAM;AACf,WAAK,cAAc,EAAE,cAAc,KAAK,OAAO;AAAA,IACjD;AACA,SAAK,EAAE,IAAI,MAAM;AACf,WAAK,cAAc,EAAE,cAAc;AAAA,IACrC;AACA,SAAK,EAAE,IAAI,WAAS;AAClB,WAAK,cAAc,IAAI,YAAY,SAAS;AAAA,QAC1C,QAAQ;AAAA,UACN,MAAM;AAAA,UACN,aAAa,MAAM;AAAA,QACrB;AAAA,MACF,CAAC,CAAC;AAAA,IACJ;AACA,SAAK,aAAa;AAAA,MAChB,MAAM;AAAA,IACR,CAAC;AACD,UAAM,aAAa,KAAK;AACxB,iBAAa,UAAU;AACvB,SAAK,UAAU,IAAI,WAAW,cAAc,YAAY;AACxD,SAAK,iBAAiB,IAAI,WAAW,cAAc,YAAY;AAC/D,SAAK,OAAO,IAAI,WAAW,cAAc,QAAQ;AACjD,SAAK,cAAc,IAAI,WAAW,cAAc,SAAS;AACzD,SAAK,iBAAiB,IAAI,KAAK,iBAAiB,EAAE,aAAa,YAAY;AAI3E,QAAI,OAAO;AACX,QAAI,KAAK,aAAa;AACpB,YAAM,OAAO,KAAK,sBAAsB;AACxC,cAAQ,KAAK;AACb,eAAS,KAAK;AAAA,IAChB,OAAO;AACL,cAAQ;AACR,eAAS;AAAA,IACX;AAEA,SAAK,MAAM,IAAI,IAAI,WAAW;AAAA,MAC5B,QAAQ,KAAK,OAAO;AAAA,MACpB,SAAS;AAAA,MACT;AAAA,MACA;AAAA,IACF,CAAC;AAGD,YAAQ,QAAQ,EAAE,KAAK,MAAM;AAC3B,WAAK,WAAW,EAAE,KAAK,sBAAsB,CAAC;AAAA,IAChD,CAAC;AACD,QAAI,qBAAqB;AAGvB,WAAK,eAAe,IAAI,IAAI,eAAe,aAAW;AAIpD,YAAI,KAAK,SAAS,EAAE,cAAc;AAChC;AAAA,QACF;AACA,iBAAS,SAAS,SAAS;AACzB,cAAI,MAAM,WAAW,MAAM;AACzB,iBAAK,WAAW,EAAE,MAAM,WAAW;AAAA,UACrC;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACH;AACA,QAAI,2BAA2B;AAC7B,WAAK,qBAAqB,IAAI,IAAI,qBAAqB,aAAW;AAChE,iBAAS,SAAS,SAAS;AACzB,cAAI,MAAM,WAAW,MAAM;AACzB,kBAAM,gBAAgB,KAAK;AAC3B,iBAAK,oBAAoB,IAAI,MAAM;AACnC,iBAAK,wBAAwB,EAAE,aAAa;AAC5C,gBAAI,KAAK,oBAAoB,KAAK,CAAC,KAAK,QAAQ;AAC9C,mBAAK,aAAa,EAAE;AAAA,YACtB;AAAA,UACF;AAAA,QACF;AAAA,MACF,GAAG;AAAA,QACD,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMN,YAAY;AAAA;AAAA;AAAA;AAAA,QAIZ,WAAW;AAAA,MACb,CAAC;AAAA,IACH,OAAO;AAGL,WAAK,oBAAoB,IAAI;AAAA,IAC/B;AAAA,EACF;AAAA,EACA,oBAAoB;AAClB,UAAM,qBAAqB,MAAM,kBAAkB;AACnD,QAAI,qBAAqB;AACvB,WAAK,eAAe,EAAE,QAAQ,IAAI;AAAA,IACpC,OAAO;AACL,WAAK,iBAAiB,UAAU,KAAK,sBAAsB,CAAC;AAAA,IAC9D;AACA,QAAI,2BAA2B;AAC7B,WAAK,qBAAqB,EAAE,QAAQ,IAAI;AAAA,IAC1C;AACA,SAAK,iBAAiB,SAAS,KAAK,QAAQ,CAAC;AAC7C,SAAK,iBAAiB,QAAQ,KAAK,OAAO,CAAC;AAC3C,UAAM,WAAW,KAAK,SAAS;AAC/B,aAAS,iBAAiB,eAAe,KAAK,cAAc,CAAC;AAC7D,aAAS,cAAc,KAAK,MAAM,CAAC;AACnC,QAAI,KAAK,kBAAkB,KAAK,MAAM;AACpC,WAAK,aAAa,KAAK,kBAAkB,CAAC;AAC1C,WAAK,kBAAkB,IAAI;AAG3B,WAAK,cAAc,OAAO,IAAI;AAAA,IAChC;AAAA,EACF;AAAA,EACA,uBAAuB;AACrB,UAAM,wBAAwB,MAAM,qBAAqB;AACzD,QAAI,qBAAqB;AACvB,WAAK,eAAe,EAAE,UAAU,IAAI;AAAA,IACtC,OAAO;AACL,WAAK,oBAAoB,UAAU,KAAK,sBAAsB,CAAC;AAAA,IACjE;AACA,QAAI,2BAA2B;AAC7B,WAAK,qBAAqB,EAAE,UAAU,IAAI;AAAA,IAC5C;AACA,SAAK,oBAAoB,SAAS,KAAK,QAAQ,CAAC;AAChD,SAAK,oBAAoB,QAAQ,KAAK,OAAO,CAAC;AAC9C,UAAM,WAAW,KAAK,SAAS;AAC/B,aAAS,oBAAoB,eAAe,KAAK,cAAc,CAAC;AAChE,aAAS,gBAAgB,KAAK,MAAM,CAAC;AACrC,SAAK,kBAAkB,IAAI,KAAK,WAAW,MAAM;AAC/C,WAAK,MAAM,EAAE,QAAQ;AACrB,WAAK,kBAAkB,IAAI;AAAA,IAC7B,GAAG,sBAAsB;AAAA,EAC3B;AAAA,EACA,QAAQ,mBAAmB;AACzB,UAAM,QAAQ,iBAAiB;AAK/B,QAAI,kBAAkB,IAAI,KAAK,GAAG;AAChC,UAAI,KAAK,OAAO,MAAM;AACpB,aAAK,OAAO,IAAI;AAChB,aAAK,WAAW,IAAI;AACpB,aAAK,MAAM,EAAE,MAAM;AAAA,MACrB,WAAW,KAAK,QAAQ,KAAK,MAAM,EAAE,KAAK;AACxC,aAAK,OAAO,IAAI;AAChB,aAAK,WAAW,IAAI;AACpB,aAAK,aAAa,EAAE;AAAA,MACtB;AAAA,IACF;AACA,QAAI,kBAAkB,IAAI,KAAK,GAAG;AAChC,WAAK,iBAAiB,EAAE,aAAa,cAAc,KAAK,UAAU,CAAC;AAAA,IACrE;AACA,QAAI,kBAAkB,IAAI,gBAAgB,GAAG;AAC3C,UAAI,KAAK,gBAAgB;AACvB,aAAK,MAAM,EAAE,aAAa,KAAK,GAAG;AAAA,MACpC,OAAO;AACL,aAAK,MAAM,EAAE,aAAa,IAAI;AAAA,MAChC;AAAA,IACF;AAAA,EACF;AAAA;AAAA,EAEA,UAAU,MAAM,gBAAgB;AAC9B,WAAO,KAAK,SAAS,EAAE,cAAc,KAAK,MAAM,CAAC,EAAE,UAAU,MAAM,cAAc;AAAA,EACnF;AAAA;AAAA,EAEM,OAAO,SAAS;AAAA;AACpB,YAAM,WAAW,UAAU,QAAQ,WAAW;AAC9C,YAAM,kBAAkB,UAAU,QAAQ,kBAAkB;AAC5D,YAAM,iBAAiB,UAAU,QAAQ,cAAc;AACvD,YAAM;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,IAAI,KAAK,MAAM;AACf,YAAM;AAAA,QACJ;AAAA,QACA;AAAA,MACF,IAAI,KAAK,SAAS;AAClB,UAAI,cAAc,QAAQ,cAAc;AACxC,UAAI,eAAe,SAAS,cAAc;AAC1C,UAAI,UAAU;AACd,UAAI,UAAU;AACd,UAAI,mBAAmB,MAAM;AAC3B,YAAI,cAAc,QAAQ;AACxB,gBAAM,YAAY;AAClB,yBAAe,KAAK,MAAM,cAAc,WAAW;AACnD,qBAAW,YAAY,gBAAgB;AAAA,QACzC,OAAO;AACL,gBAAM,WAAW;AACjB,wBAAc,KAAK,MAAM,eAAe,WAAW;AACnD,qBAAW,WAAW,eAAe;AAAA,QACvC;AAAA,MACF;AACA,iBAAW,QAAQ;AACnB,iBAAW,SAAS;AACpB,UAAI;AACF,eAAO,IAAI,QAAQ,CAAO,SAAS,WAAW;AAC5C,qBAAW,WAAW,IAAI,EAAE,UAAU,KAAK,SAAS,EAAE,cAAc,KAAK,MAAM,CAAC,GAAG,SAAS,SAAS,aAAa,cAAc,GAAG,GAAG,aAAa,YAAY;AAC/J,qBAAW,OAAO,UAAQ;AACxB,gBAAI,CAAC,MAAM;AACT,qBAAO,OAAO,IAAI,MAAM,gCAAgC,CAAC;AAAA,YAC3D;AACA,oBAAQ,IAAI;AAAA,UACd,GAAG,UAAU,eAAe;AAAA,QAC9B,EAAC;AAAA,MACH,UAAE;AACA,aAAK,WAAW,EAAE;AAAA,UAChB;AAAA,UACA;AAAA,QACF,CAAC;AAAA,MACH;AACA;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,uBAAuB,gBAAgB;AACrC,mBAAe,YAAY,KAAK,SAAS,EAAE,aAAa;AACxD,mBAAe,cAAc,KAAK,MAAM,EAAE,UAAU,CAAC;AACrD,mBAAe,aAAa,KAAK,MAAM,CAAC;AACxC,SAAK,MAAM,EAAE,iBAAiB;AAAA,EAChC;AAAA;AAAA;AAAA;AAAA,EAIA,2BAA2B;AACzB,SAAK,MAAM,EAAE,iBAAiB;AAAA,EAChC;AAAA,EACA,iBAAiB,UAAU;AACzB,SAAK,MAAM,EAAE,mBAAmB;AAAA,EAClC;AAAA,EACA,qBAAqB;AACnB,SAAK,MAAM,EAAE,mBAAmB;AAAA,EAClC;AAAA,EACA,KAAK,UAAU,IAAI;AACjB,WAAO,KAAK,aAAa;AAAA,EAC3B;AAAA,EACA,KAAK,aAAa,IAAI;AACpB,WAAO,KAAK,OAAO,QAAQ,KAAK,QAAQ,SAAS,KAAK,iBAAiB,IAAI,KAAK;AAAA,EAClF;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,CAAC,UAAU,IAAI;AACb,WAAO,KAAK,OAAO;AAAA,EACrB;AAAA;AAAA,EAEA,CAAC,kBAAkB,IAAI;AACrB,WAAO,KAAK,UAAU,KAAK,oBAAoB;AAAA,EACjD;AAAA,EACA,CAAC,qBAAqB,IAAI;AACxB,WAAO,CAAC,CAAC,KAAK,OAAO,KAAK,oBAAoB;AAAA,EAChD;AAAA;AAAA;AAAA;AAAA,EAIA,CAAC,WAAW,EAAE;AAAA,IACZ;AAAA,IACA;AAAA,EACF,GAAG;AACD,QAAI,UAAU,KAAK,WAAW,GAAG;AAC/B;AAAA,IACF;AACA,SAAK,UAAU,EAAE,MAAM,QAAQ,GAAG,KAAK;AACvC,SAAK,UAAU,EAAE,MAAM,SAAS,GAAG,MAAM;AACzC,SAAK,SAAS,EAAE;AAAA,MACd;AAAA,MACA;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,CAAC,KAAK,EAAE,MAAM,OAAO;AACnB,QAAI;AACJ,KAAC,KAAK,KAAK,MAAM,EAAE,oBAAoB,QAAQ,OAAO,SAAS,SAAS,GAAG,aAAa,MAAM,KAAK;AAAA,EACrG;AAAA,EACA,CAAC,WAAW,IAAI;AACd,QAAI,KAAK,OAAO,GAAG;AACjB;AAAA,IACF;AACA,SAAK,OAAO,IAAI;AAChB,SAAK,WAAW,IAAI,YAAY,IAAI;AAAA,EACtC;AAAA,EACA,CAAC,YAAY,IAAI;AACf,SAAK,MAAM,EAAE,YAAY;AAAA,EAC3B;AAAA,EACA,CAAC,YAAY,IAAI;AAAA,EAAC;AAAA,EAClB,CAAC,aAAa,EAAE,QAAQ;AACtB,SAAK,OAAO,IAAI;AAChB,UAAM,WAAW,KAAK,YAAY;AAElC,QAAI,YAAY,QAAQ,SAAS,kBAAkB,QAAQ,KAAK,cAAc,EAAE,eAAe,QAAQ;AACrG,WAAK,cAAc,EAAE,cAAc;AAAA,IACrC;AAAA,EACF;AAAA,EACA,EAAE,KAAK,UAAU,KAAK,SAAS,UAAU,EAAE,GAAG;AAC5C,SAAK,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM;AAAA,EACxC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,EAAQ,KAAK,gBAAgB,cAAc,IAAI;AAAA;AAC7C,YAAM,QAAQ,KAAK,MAAM;AACzB,UAAI,KAAK,UAAU,CAAC,KAAK,qBAAqB,EAAE,KAAK,KAAK,QAAQ,MAAM,KAAK;AAC3E;AAAA,MACF;AACA,UAAI,KAAK,gBAAgB;AACvB,cAAM,aAAa,KAAK,GAAG;AAAA,MAC7B;AACA,WAAK,aAAa,EAAE,SAAS;AAK7B,YAAM,cAAc;AACpB,YAAM,uBAAuB,KAAK,gBAAgB,EAAE,cAAc,YAAY;AAC9E,YAAM,SAAS,KAAK;AACpB,UAAI;AACF,cAAM,aAAa,MAAM,UAAU,QAAQ,cAAY,qBAAqB,MAAM,UAAU,GAAG,CAAC,IAAI,IAAI,CAAC;AACzG,cAAM,aAAa,KAAK,kBAAkB,EAAE;AAC5C,cAAM,QAAQ,IAAI,CAAC,YAAY,UAAU,CAAC;AAC1C,aAAK,WAAW,EAAE;AAClB,aAAK,YAAY,EAAE;AACnB,aAAK,eAAe,KAAK,MAAM;AAC7B,eAAK,cAAc,IAAI,YAAY,eAAe,CAAC;AAAA,QACrD,CAAC;AAED,cAAM,IAAI,QAAQ,aAAW;AAC3B,gCAAsB,MAAM;AAC1B,kCAAsB,MAAM;AAC1B,mBAAK,cAAc,IAAI,YAAY,QAAQ;AAAA,gBACzC,QAAQ;AAAA,kBACN,KAAK;AAAA,gBACP;AAAA,cACF,CAAC,CAAC;AACF,sBAAQ;AAAA,YACV,CAAC;AAAA,UACH,CAAC;AAAA,QACH,CAAC;AAAA,MACH,SAAS,OAAO;AACd,aAAK,cAAc,IAAI,YAAY,SAAS;AAAA,UAC1C,QAAQ;AAAA,YACN,MAAM;AAAA,YACN,aAAa;AAAA,UACf;AAAA,QACF,CAAC,CAAC;AAAA,MACJ,UAAE;AACA,6BAAqB,CAAG;AAAA,MAC1B;AAAA,IACF;AAAA;AACF;AACAV,YAAW,CAAC,SAAS;AAAA,EACnB,MAAM;AACR,CAAC,CAAC,GAAG,uBAAuB,WAAW,OAAO,MAAM;AACpDA,YAAW,CAAC,SAAS;AAAA,EACnB,MAAM;AACR,CAAC,CAAC,GAAG,uBAAuB,WAAW,OAAO,MAAM;AACpDA,YAAW,CAAC,SAAS;AAAA,EACnB,MAAM;AAAA,EACN,WAAW;AACb,CAAC,CAAC,GAAG,uBAAuB,WAAW,mBAAmB,MAAM;AAChEA,YAAW,CAAC,SAAS;AAAA,EACnB,MAAM;AAAA,EACN,WAAW;AACb,CAAC,CAAC,GAAG,uBAAuB,WAAW,kBAAkB,MAAM;;;AChhB/D,IAAIW,cAAwC,SAAU,YAAYC,SAAQ,KAAKC,OAAM;AACnF,MAAIC,KAAI,UAAU,QAChB,IAAIA,KAAI,IAAIF,UAASC,UAAS,OAAOA,QAAO,OAAO,yBAAyBD,SAAQ,GAAG,IAAIC,OAC3FE;AACF,MAAI,OAAO,YAAY,YAAY,OAAO,QAAQ,aAAa,WAAY,KAAI,QAAQ,SAAS,YAAYH,SAAQ,KAAKC,KAAI;AAAA,MAAO,UAAS,IAAI,WAAW,SAAS,GAAG,KAAK,GAAG,IAAK,KAAIE,KAAI,WAAW,CAAC,EAAG,MAAKD,KAAI,IAAIC,GAAE,CAAC,IAAID,KAAI,IAAIC,GAAEH,SAAQ,KAAK,CAAC,IAAIG,GAAEH,SAAQ,GAAG,MAAM;AAC/Q,SAAOE,KAAI,KAAK,KAAK,OAAO,eAAeF,SAAQ,KAAK,CAAC,GAAG;AAC9D;AAIA,IAAM,0BAA0B;AAChC,IAAM,mBAAmB,OAAO,iBAAiB;AACjD,IAAM,mBAAmB,OAAO,iBAAiB;AACjD,IAAM,mBAAmB,OAAO,iBAAiB;AACjD,IAAM,UAAU,OAAO,QAAQ;AAC/B,IAAM,uBAAuB;AAAA,EAC3B,aAAa;AAAA,EACb,UAAU;AACZ;AACA,IAAM,yBAAyB;AAAA,EAC7B,UAAU;AAAA,EACV,aAAa;AAAA,EACb,QAAQ;AAAA,EACR,WAAW;AAAA,EACX,MAAM;AAAA,EACN,MAAM;AAAA,EACN,cAAc;AAAA,EACd,MAAM;AACR;AACA,IAAM,yBAAyB;AAAA,EAC7B,MAAM;AACR;AACO,IAAM,iBAAiB,CAAAI,wBAAsB;AAClD,MAAIC;AAAA,EACJ,MAAM,oCAAoCD,oBAAmB;AAAA,IAC3D,eAAe,MAAM;AACnB,YAAM,IAAI;AACV,WAAK,WAAW;AAChB,WAAK,gBAAgB;AACrB,WAAK,6BAA6B;AAClC,WAAKC,IAAE,IAAI;AACX,WAAK,MAAM,EAAE,oBAAoB,QAAQ,OAAK;AAC5C,cAAM,QAAQ,EAAE,OAAO;AACvB,cAAM,OAAO,EAAE,OAAO,MAAM;AAC5B,cAAM,OAAO,EAAE,OAAO,MAAM;AAC5B,cAAM,kBAAkB,KAAK,MAAM,EAAE,iBAAiB,KAAK,CAAAC,OAAKA,GAAE,SAAS,IAAI;AAC/E,YAAI,iBAAiB;AACnB,eAAK,MAAM,EAAE,oBAAoB,gBAAgB,MAAM,gBAAgB,UAAU,gBAAgB,eAAe;AAChH,gBAAM,aAAa,KAAK,MAAM,EAAE,iBAAiB,OAAO,CAAAA,OAAKA,GAAE,SAAS,IAAI;AAC5E,eAAK,MAAM,EAAE,mBAAmB;AAAA,QAClC;AACA,aAAK,cAAc,IAAI,YAAY,QAAQ;AAAA,UACzC,QAAQ;AAAA,YACN;AAAA,YACA;AAAA,YACA;AAAA,UACF;AAAA,QACF,CAAC,CAAC;AAAA,MACJ,CAAC;AACD,WAAK,MAAM,EAAE,oBAAoB,YAAY,OAAK;AAChD,YAAI,CAAC,KAAK,MAAM,EAAE,mBAAmB,SAAS,EAAE,OAAO,MAAM,IAAI,GAAG;AAClE,eAAK,OAAO,IAAI;AAAA,QAClB,OAAO;AACL,gBAAM,cAAc,KAAK,MAAM,EAAE,mBAAmB,OAAO,OAAK,MAAM,EAAE,OAAO,MAAM,IAAI;AACzF,eAAK,MAAM,EAAE,qBAAqB;AAAA,QACpC;AACA,aAAK,cAAc,IAAI,YAAY,UAAU,CAAC;AAAA,MAChD,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA,IAIA,IAAI,sBAAsB;AACxB,UAAI,KAAK,QAAQ;AACf,eAAO,KAAK,MAAM,EAAE;AAAA,MACtB;AACA,aAAO,CAAC;AAAA,IACV;AAAA,IACA,IAAI,WAAW;AACb,aAAO,KAAK,MAAM,EAAE;AAAA,IACtB;AAAA,IACA,IAAI,SAAS;AACX,aAAO,KAAK,OAAO;AAAA,IACrB;AAAA,IACA,IAAI,cAAc;AAChB,aAAO,KAAK,MAAM,EAAE;AAAA,IACtB;AAAA,IACA,IAAI,qBAAqB;AACvB,aAAO,KAAK,MAAM,EAAE;AAAA,IACtB;AAAA,IACA,IAAI,YAAY,OAAO;AACrB,WAAK,MAAM,EAAE,gBAAgB;AAC7B,WAAK,YAAY,EAAE;AAAA,IACrB;AAAA,IACA,IAAI,YAAY;AACd,aAAO,KAAK,MAAM,EAAE;AAAA,IACtB;AAAA,IACA,IAAI,UAAU,OAAO;AACnB,WAAK,MAAM,EAAE,qBAAqB;AAAA,IACpC;AAAA,IACA,QAAQ;AACN,UAAI,KAAK,OAAO,GAAG;AACjB;AAAA,MACF;AACA,WAAK,OAAO,IAAI;AAChB,WAAK,cAAc,IAAI,YAAY,OAAO,CAAC;AAAA,IAC7C;AAAA,IACA,KAAK,SAAS;AACZ,UAAI,KAAK,oBAAoB,SAAS,GAAG;AACvC,aAAK,OAAO,IAAI;AAChB,aAAK,gBAAgB,EAAE,OAAO;AAC9B,aAAK,cAAc,IAAI,YAAY,MAAM,CAAC;AAAA,MAC5C;AAAA,IACF;AAAA,IACA,gBAAgB,eAAe,SAAS;AACtC,UAAI,KAAK,oBAAoB,SAAS,GAAG;AACvC,aAAK,OAAO,IAAI;AAChB,aAAK,gBAAgB,EAAE,eAAe,OAAO;AAC7C,aAAK,cAAc,IAAI,YAAY,kBAAkB,CAAC;AAAA,MACxD;AAAA,IACF;AAAA,IACA,gBAAgB,eAAe,SAAS;AACtC,UAAI,KAAK,oBAAoB,SAAS,GAAG;AACvC,aAAK,OAAO,IAAI;AAChB,aAAK,gBAAgB,EAAE,eAAe,OAAO;AAC7C,aAAK,cAAc,IAAI,YAAY,kBAAkB,CAAC;AAAA,MACxD;AAAA,IACF;AAAA,IACA,EAAED,OAAK,SAAS,aAAa,IAAI;AAC/B,YAAM,YAAY,EAAE;AACpB,WAAK,OAAO,IAAI;AAChB,UAAI,KAAK,iBAAiB,MAAM;AAC9B,aAAK,gBAAgB,EAAE;AAAA,MACzB;AACA,UAAI,KAAK,UAAU;AACjB,aAAK,KAAK;AAAA,MACZ;AAAA,IACF;AAAA,IACA,CAAC,KAAK,EAAE,OAAO,OAAO;AACpB,YAAM,KAAK,EAAE,OAAO,KAAK;AACzB,UAAI,KAAK,OAAO,KAAK,CAAC,KAAK,kBAAkB,EAAE,KAAK,CAAC,KAAK,SAAS,EAAE,cAAc;AACjF;AAAA,MACF;AACA,WAAK,MAAM,EAAE,gBAAgB,QAAQ,uBAAuB;AAC5D,WAAK,YAAY,EAAE;AAAA,IACrB;AAAA,IACA,QAAQ,mBAAmB;AACzB,YAAM,QAAQ,iBAAiB;AAC/B,UAAI,kBAAkB,IAAI,UAAU,KAAK,KAAK,UAAU;AACtD,aAAK,KAAK;AAAA,MACZ;AACA,UAAI,kBAAkB,IAAI,eAAe,GAAG;AAC1C,aAAK,gBAAgB,EAAE;AAAA,MACzB;AAAA,IACF;AAAA,IACA,CAAC,gBAAgB,EAAE,UAAU,sBAAsB;AACjD,UAAIE;AACJ,YAAM,eAAeA,OAAK,QAAQ,iBAAiB,QAAQA,SAAO,SAASA,OAAK;AAChF,YAAM,OAAO,QAAQ,WAAW,eAAe,gBAAgB,IAAI,WAAW;AAC9E,WAAK,MAAM,EAAE,cAAc,KAAK,eAAe,KAAK,6BAA6B,yBAAyB,MAAM,WAAW;AAG3H,UAAI,KAAK,OAAO,GAAG;AACjB,aAAK,MAAM,EAAE,gBAAgB,CAAC;AAC9B,aAAK,YAAY,EAAE;AAAA,MACrB;AAAA,IACF;AAAA,IACA,CAAC,gBAAgB,EAAE,gBAAgB,IAAI,UAAU,wBAAwB;AACvE,UAAIA;AACJ,YAAM,eAAeA,OAAK,QAAQ,iBAAiB,QAAQA,SAAO,SAASA,OAAK;AAChF,YAAM,OAAO,QAAQ,WAAW,eAAe,gBAAgB,IAAI,WAAW;AAC9E,YAAM,cAAc,CAAC,CAAC,QAAQ,eAAe,cAAc;AAC3D,WAAK,MAAM,EAAE,gBAAgB,gBAAgB,gBAAgB,KAAK,eAAe,MAAM,aAAa,QAAQ,QAAQ,QAAQ,WAAW,QAAQ,MAAM,QAAQ,MAAM,QAAQ,cAAc,QAAQ,MAAM,WAAW;AAGlN,UAAI,KAAK,OAAO,GAAG;AACjB,aAAK,MAAM,EAAE,gBAAgB,CAAC;AAC9B,aAAK,YAAY,EAAE;AAAA,MACrB;AAAA,IACF;AAAA,IACA,CAAC,gBAAgB,EAAE,gBAAgB,IAAI,UAAU,wBAAwB;AACvE,WAAK,MAAM,EAAE,gBAAgB,gBAAgB,gBAAgB,KAAK,eAAe,QAAQ,IAAI;AAG7F,UAAI,KAAK,OAAO,GAAG;AACjB,aAAK,MAAM,EAAE,gBAAgB,CAAC;AAC9B,aAAK,YAAY,EAAE;AAAA,MACrB;AAAA,IACF;AAAA,EACF;AACA,EAAAR,YAAW,CAAC,SAAS;AAAA,IACnB,MAAM;AAAA,EACR,CAAC,CAAC,GAAG,4BAA4B,WAAW,YAAY,MAAM;AAC9D,EAAAA,YAAW,CAAC,SAAS;AAAA,IACnB,MAAM;AAAA,IACN,WAAW;AAAA,EACb,CAAC,CAAC,GAAG,4BAA4B,WAAW,iBAAiB,MAAM;AACnE,EAAAA,YAAW,CAAC,SAAS;AAAA,IACnB,MAAM;AAAA,IACN,WAAW;AAAA,EACb,CAAC,CAAC,GAAG,4BAA4B,WAAW,8BAA8B,MAAM;AAChF,SAAO;AACT;;;ACvMA,IAAM,cAAc,OAAO,YAAY;AACvC,IAAM,oBAAoB,OAAO,kBAAkB;AACnD,IAAM,YAAY,OAAO,UAAU;AACnC,IAAM,cAAc,OAAO,YAAY;AACvC,IAAM,iBAAiB,OAAO,eAAe;AAC7C,IAAM,eAAe,IAAI,QAAQ;AAQ1B,IAAM,kBAAkB,CAAAS,wBAAsB;AACnD,MAAIC,MAAIC,MAAIC;AAAA,EACZ,MAAM,qCAAqCH,oBAAmB;AAAA,IAC5D,cAAc;AACZ,YAAM,GAAG,SAAS;AAClB,WAAKC,IAAE,IAAI,oBAAI,IAAI;AACnB,WAAKC,IAAE,IAAI,eAAa;AACtB,kBAAU,QAAQ,cAAY;AAG5B,cAAI,EAAE,oBAAoB,mBAAmB,SAAS,SAAS,aAAa;AAC1E,qBAAS,WAAW,QAAQ,UAAQ;AAClC,mBAAK,WAAW,EAAE,IAAI;AAAA,YACxB,CAAC;AACD,qBAAS,aAAa,QAAQ,UAAQ;AACpC,mBAAK,cAAc,EAAE,IAAI;AAAA,YAC3B,CAAC;AACD,iBAAK,YAAY,EAAE;AAAA,UACrB;AAAA,QACF,CAAC;AAAA,MACH;AACA,WAAKC,GAAE,IAAI,IAAI,iBAAiB,KAAK,iBAAiB,CAAC;AAAA,IACzD;AAAA,IACA,oBAAoB;AAClB,YAAM,kBAAkB;AACxB,eAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,EAAE,GAAG;AAC7C,aAAK,WAAW,EAAE,KAAK,SAAS,CAAC,CAAC;AAAA,MACpC;AACA,YAAM;AAAA,QACJ;AAAA,MACF,IAAI;AACJ,UAAI,YAAY,MAAM;AACpB,aAAK,SAAS,EAAE,QAAQ,MAAM;AAAA,UAC5B,WAAW;AAAA,QACb,CAAC;AAAA,MACH,OAAO;AACL,aAAK,SAAS,IAAI,SAAS,gBAAgB,MAAM,KAAK,iBAAiB,CAAC;AAAA,MAC1E;AAAA,IACF;AAAA,IACA,uBAAuB;AACrB,YAAM,qBAAqB;AAC3B,YAAM;AAAA,QACJ;AAAA,MACF,IAAI;AACJ,UAAI,YAAY,MAAM;AACpB,aAAK,SAAS,EAAE,WAAW;AAAA,MAC7B,OAAO;AACL,iBAAS,kBAAkB,KAAK,SAAS,CAAC;AAAA,MAC5C;AAAA,IACF;AAAA,IACA,EAAEF,OAAK,aAAaC,OAAK,mBAAmBC,MAAK,WAAW,aAAa,IAAI;AAC3E,YAAM,YAAY,EAAE;AACpB,YAAM,QAAQ,KAAK,MAAM;AACzB,YAAM,YAAY,aAAW;AAC3B,cAAM,qBAAqB,OAAO;AAAA,MACpC,CAAC;AAAA,IACH;AAAA,IACA,CAAC,KAAK,EAAE,MAAM,OAAO;AACnB,YAAM,KAAK,EAAE,MAAM,KAAK;AACxB,YAAM,QAAQ,KAAK,MAAM;AACzB,YAAM;AAAA,QACJ;AAAA,MACF,IAAI;AACJ,YAAMC,UAAS,MAAM,UAAU;AAC/B,UAAI,MAAM,aAAa,GAAG;AACxB,cAAM,uBAAuB;AAC7B,cAAM,yBAAyBA,QAAO,QAAQ;AAC9C,2BAAmB,WAAW,MAAM,UAAU;AAC9C,2BAAmB,OAAO,OAAOA,OAAM;AAAA,MACzC;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,cAAc,QAAQ;AACpB,YAAM,UAAU,KAAK,WAAW,EAAE,IAAI,OAAO,IAAI;AACjD,UAAI,WAAW,MAAM;AACnB;AAAA,MACF;AACA,cAAQ,eAAe,OAAO,QAAQ;AACtC,cAAQ,aAAa,OAAO,MAAM;AAClC,cAAQ,UAAU,OAAO;AACzB,WAAK,MAAM,EAAE,qBAAqB,OAAO;AACzC,WAAK,YAAY,EAAE;AAAA,IACrB;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,aAAa,MAAM;AACjB,YAAM,UAAU,KAAK,WAAW,EAAE,IAAI,IAAI;AAC1C,UAAI,WAAW,MAAM;AACnB,eAAO;AAAA,MACT;AACA,YAAM,WAAW,WAAW,QAAQ,QAAQ;AAC5C,YAAM,SAAS,WAAW,QAAQ,MAAM;AACxC,YAAM,eAAe,QAAQ;AAC7B,YAAM,QAAQ,KAAK,MAAM;AACzB,YAAMA,UAAS,MAAM,UAAU;AAC/B,YAAM,SAAS,IAAI,QAAQ;AAC3B,aAAO,sBAAsB,QAAQ,WAAW;AAChD,aAAO,QAAQA,OAAM;AACrB,YAAM,YAAY,MAAM,QAAQ;AAChC,YAAM,aAAa,MAAM,SAAS;AAClC,aAAO,IAAI,OAAO,IAAI,YAAY;AAClC,aAAO,IAAI,EAAE,OAAO,IAAI,cAAc;AACtC,YAAM,iBAAiB,WAAW,IAAI,QAAQ,OAAO,GAAG,OAAO,GAAG,OAAO,CAAC,CAAC;AAC3E,UAAI,CAAC,OAAO,SAAS,eAAe,CAAC,KAAK,CAAC,OAAO,SAAS,eAAe,CAAC,GAAG;AAC5E,eAAO;AAAA,MACT;AACA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASA,2BAA2B,QAAQ,QAAQ;AACzC,YAAM,QAAQ,KAAK,MAAM;AACzB,YAAM,cAAc,MAAM,OAAO,QAAQ,MAAM;AAC/C,YAAM,MAAM,MAAM,2BAA2B,WAAW;AACxD,UAAI,OAAO,MAAM;AACf,eAAO;AAAA,MACT;AACA,mBAAa,KAAK,MAAM,OAAO,WAAW,EAAE,OAAO;AACnD,YAAM,WAAW,WAAW,IAAI,SAAS,aAAa,YAAY,CAAC;AACnE,YAAM,SAAS,WAAW,IAAI,OAAO,mBAAmB,YAAY,CAAC;AACrE,UAAI,KAAK;AACT,UAAI,IAAI,MAAM,MAAM;AAClB,aAAK,WAAW,IAAI,EAAE;AAAA,MACxB;AACA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,iBAAiB,QAAQ,QAAQ;AAC/B,YAAM,QAAQ,KAAK,MAAM;AACzB,YAAM,cAAc,MAAM,OAAO,QAAQ,MAAM;AAC/C,aAAO,MAAM,iBAAiB,WAAW;AAAA,IAC3C;AAAA,IACA,CAAC,WAAW,EAAE,MAAM;AAClB,UAAI,EAAE,gBAAgB,eAAe,KAAK,KAAK,QAAQ,SAAS,MAAM,IAAI;AACxE;AAAA,MACF;AACA,UAAI,UAAU,KAAK,WAAW,EAAE,IAAI,KAAK,IAAI;AAC7C,UAAI,WAAW,MAAM;AACnB,gBAAQ,UAAU;AAAA,MACpB,OAAO;AACL,kBAAU,IAAI,QAAQ;AAAA,UACpB,MAAM,KAAK;AAAA,UACX,UAAU,KAAK,QAAQ;AAAA,UACvB,QAAQ,KAAK,QAAQ;AAAA,UACrB,SAAS,KAAK,QAAQ;AAAA,QACxB,CAAC;AACD,aAAK,WAAW,EAAE,IAAI,KAAK,MAAM,OAAO;AACxC,aAAK,MAAM,EAAE,WAAW,OAAO;AAAA,MACjC;AACA,WAAK,MAAM,EAAE,YAAY;AAAA,IAC3B;AAAA,IACA,CAAC,cAAc,EAAE,MAAM;AACrB,UAAI,EAAE,gBAAgB,cAAc;AAClC;AAAA,MACF;AACA,YAAM,UAAU,KAAK,WAAW,EAAE,IAAI,KAAK,IAAI;AAC/C,UAAI,CAAC,SAAS;AACZ;AAAA,MACF;AACA,UAAI,QAAQ,UAAU,GAAG;AACvB,aAAK,MAAM,EAAE,cAAc,OAAO;AAClC,aAAK,WAAW,EAAE,OAAO,KAAK,IAAI;AAAA,MACpC;AACA,WAAK,MAAM,EAAE,YAAY;AAAA,IAC3B;AAAA,EACF;AACA,SAAO;AACT;;;ACjNA,IAAI,MAAM,CAAC;AACX,IAAI,KAAK,SAAUC,IAAG,IAAI,KAAK,UAAU,IAAI;AAC3C,MAAI,IAAI,IAAI,OAAO,IAAI,EAAE,MAAM,IAAI,EAAE,IAAI,IAAI,gBAAgB,IAAI,KAAK,CAACA,KAAI,iGAAiG,GAAG;AAAA,IAC7K,MAAM;AAAA,EACR,CAAC,CAAC,EAAE;AACJ,IAAE,YAAY,SAAU,GAAG;AACzB,QAAIC,KAAI,EAAE,MACR,KAAKA,GAAE;AACT,QAAI,IAAI;AACN,UAAIC,OAAM,IAAI,MAAM,GAAG,CAAC,CAAC;AACzB,MAAAA,KAAI,MAAM,IAAI,GAAG,CAAC;AAClB,MAAAA,KAAI,QAAQ,GAAG,CAAC;AAChB,SAAGA,MAAK,IAAI;AAAA,IACd,MAAO,IAAG,MAAMD,EAAC;AAAA,EACnB;AACA,IAAE,YAAY,KAAK,QAAQ;AAC3B,SAAO;AACT;AAGA,IAAI,KAAK;AAAT,IACE,MAAM;AADR,IAEE,MAAM;AAER,IAAI,OAAO,IAAI,GAAG;AAAA,EAAC;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA;AAAA,EAAe;AAAA,EAAG;AAAA;AAAA,EAAmB;AAAC,CAAC;AAE9I,IAAI,OAAO,IAAI,GAAG;AAAA,EAAC;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA,EAAI;AAAA;AAAA,EAAgB;AAAA,EAAG;AAAC,CAAC;AAEtI,IAAI,OAAO,IAAI,GAAG,CAAC,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC;AAEpF,IAAI,OAAO,SAAU,IAAI,OAAO;AAC9B,MAAIE,KAAI,IAAI,IAAI,EAAE;AAClB,WAAS,IAAI,GAAG,IAAI,IAAI,EAAE,GAAG;AAC3B,IAAAA,GAAE,CAAC,IAAI,SAAS,KAAK,GAAG,IAAI,CAAC;AAAA,EAC/B;AAEA,MAAI,IAAI,IAAI,IAAIA,GAAE,EAAE,CAAC;AACrB,WAAS,IAAI,GAAG,IAAI,IAAI,EAAE,GAAG;AAC3B,aAAS,IAAIA,GAAE,CAAC,GAAG,IAAIA,GAAE,IAAI,CAAC,GAAG,EAAE,GAAG;AACpC,QAAE,CAAC,IAAI,IAAIA,GAAE,CAAC,KAAK,IAAI;AAAA,IACzB;AAAA,EACF;AACA,SAAO;AAAA,IACL,GAAGA;AAAA,IACH;AAAA,EACF;AACF;AACA,IAAIC,OAAK,KAAK,MAAM,CAAC;AAArB,IACE,KAAKA,KAAG;AADV,IAEE,QAAQA,KAAG;AAEb,GAAG,EAAE,IAAI,KAAK,MAAM,GAAG,IAAI;AAC3B,IAAIC,OAAK,KAAK,MAAM,CAAC;AAArB,IACE,KAAKA,KAAG;AADV,IAEE,QAAQA,KAAG;AAEb,IAAI,MAAM,IAAI,IAAI,KAAK;AACvB,KAAS,IAAI,GAAG,IAAI,OAAO,EAAE,GAAG;AAE1B,OAAK,IAAI,UAAW,KAAK,IAAI,UAAW;AAC5C,OAAK,IAAI,UAAW,KAAK,IAAI,UAAW;AACxC,OAAK,IAAI,UAAW,KAAK,IAAI,SAAW;AACxC,MAAI,CAAC,MAAM,IAAI,UAAW,KAAK,IAAI,QAAW,MAAM;AACtD;AAJM;AAFG;AAUT,IAAI,OAAO,SAAU,IAAI,IAAI,GAAG;AAC9B,MAAI,IAAI,GAAG;AAEX,MAAI,IAAI;AAER,MAAI,IAAI,IAAI,IAAI,EAAE;AAElB,SAAO,IAAI,GAAG,EAAE,GAAG;AACjB,QAAI,GAAG,CAAC,EAAG,GAAE,EAAE,GAAG,CAAC,IAAI,CAAC;AAAA,EAC1B;AAEA,MAAI,KAAK,IAAI,IAAI,EAAE;AACnB,OAAK,IAAI,GAAG,IAAI,IAAI,EAAE,GAAG;AACvB,OAAG,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK;AAAA,EAClC;AACA,MAAI;AACJ,MAAI,GAAG;AAEL,SAAK,IAAI,IAAI,KAAK,EAAE;AAEpB,QAAI,MAAM,KAAK;AACf,SAAK,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AAEtB,UAAI,GAAG,CAAC,GAAG;AAET,YAAI,KAAK,KAAK,IAAI,GAAG,CAAC;AAEtB,YAAI,MAAM,KAAK,GAAG,CAAC;AAEnB,YAAI,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO;AAE3B,iBAAS,IAAI,KAAK,KAAK,OAAO,GAAG,KAAK,GAAG,EAAE,GAAG;AAE5C,aAAG,IAAI,CAAC,KAAK,GAAG,IAAI;AAAA,QACtB;AAAA,MACF;AAAA,IACF;AAAA,EACF,OAAO;AACL,SAAK,IAAI,IAAI,CAAC;AACd,SAAK,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AACtB,UAAI,GAAG,CAAC,GAAG;AACT,WAAG,CAAC,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,KAAK,KAAK,GAAG,CAAC;AAAA,MAC3C;AAAA,IACF;AAAA,EACF;AACA,SAAO;AACT;AAEA,IAAI,MAAM,IAAI,GAAG,GAAG;AACpB,KAAS,IAAI,GAAG,IAAI,KAAK,EAAE,EAAG,KAAI,CAAC,IAAI;AAA9B;AACT,KAAS,IAAI,KAAK,IAAI,KAAK,EAAE,EAAG,KAAI,CAAC,IAAI;AAAhC;AACT,KAAS,IAAI,KAAK,IAAI,KAAK,EAAE,EAAG,KAAI,CAAC,IAAI;AAAhC;AACT,KAAS,IAAI,KAAK,IAAI,KAAK,EAAE,EAAG,KAAI,CAAC,IAAI;AAAhC;AAET,IAAI,MAAM,IAAI,GAAG,EAAE;AACnB,KAAS,IAAI,GAAG,IAAI,IAAI,EAAE,EAAG,KAAI,CAAC,IAAI;AAA7B;AAET,IAAI,MAAmB,KAAK,KAAK,GAAG,CAAC;AAArC,IACE,OAAoB,KAAK,KAAK,GAAG,CAAC;AAEpC,IAAI,MAAmB,KAAK,KAAK,GAAG,CAAC;AAArC,IACE,OAAoB,KAAK,KAAK,GAAG,CAAC;AAEpC,IAAI,MAAM,SAAUC,IAAG;AACrB,MAAI,IAAIA,GAAE,CAAC;AACX,WAAS,IAAI,GAAG,IAAIA,GAAE,QAAQ,EAAE,GAAG;AACjC,QAAIA,GAAE,CAAC,IAAI,EAAG,KAAIA,GAAE,CAAC;AAAA,EACvB;AACA,SAAO;AACT;AAEA,IAAI,OAAO,SAAUL,IAAG,GAAG,GAAG;AAC5B,MAAI,IAAI,IAAI,IAAI;AAChB,UAAQA,GAAE,CAAC,IAAIA,GAAE,IAAI,CAAC,KAAK,OAAO,IAAI,KAAK;AAC7C;AAEA,IAAI,SAAS,SAAUA,IAAG,GAAG;AAC3B,MAAI,IAAI,IAAI,IAAI;AAChB,UAAQA,GAAE,CAAC,IAAIA,GAAE,IAAI,CAAC,KAAK,IAAIA,GAAE,IAAI,CAAC,KAAK,QAAQ,IAAI;AACzD;AAEA,IAAI,OAAO,SAAU,GAAG;AACtB,UAAQ,IAAI,KAAK,IAAI;AACvB;AAGA,IAAI,MAAM,SAAU,GAAG,GAAG,GAAG;AAC3B,MAAI,KAAK,QAAQ,IAAI,EAAG,KAAI;AAC5B,MAAI,KAAK,QAAQ,IAAI,EAAE,OAAQ,KAAI,EAAE;AAErC,SAAO,IAAI,GAAG,EAAE,SAAS,GAAG,CAAC,CAAC;AAChC;AAsBA,IAAI,KAAK;AAAA,EAAC;AAAA,EAAkB;AAAA,EAAsB;AAAA,EAA0B;AAAA,EAAoB;AAAA,EAAmB;AAAA,EAAoB;AAAA,EAAE;AAAA,EAAe;AAAA,EAAsB;AAAA,EAAwB;AAAA,EAA+B;AAAA,EAAqB;AAAA,EAAoB;AAAA;AAE9Q;AAEA,IAAI,MAAM,SAAU,KAAK,KAAK,IAAI;AAChC,MAAI,IAAI,IAAI,MAAM,OAAO,GAAG,GAAG,CAAC;AAChC,IAAE,OAAO;AACT,MAAI,MAAM,kBAAmB,OAAM,kBAAkB,GAAG,GAAG;AAC3D,MAAI,CAAC,GAAI,OAAM;AACf,SAAO;AACT;AAEA,IAAI,QAAQ,SAAU,KAAK,IAAI,KAAK,MAAM;AAExC,MAAI,KAAK,IAAI,QACX,KAAK,OAAO,KAAK,SAAS;AAC5B,MAAI,CAAC,MAAM,GAAG,KAAK,CAAC,GAAG,EAAG,QAAO,OAAO,IAAI,GAAG,CAAC;AAChD,MAAI,QAAQ,CAAC;AAEb,MAAI,SAAS,SAAS,GAAG,KAAK;AAE9B,MAAI,OAAO,GAAG;AAEd,MAAI,MAAO,OAAM,IAAI,GAAG,KAAK,CAAC;AAE9B,MAAI,OAAO,SAAUM,IAAG;AACtB,QAAI,KAAK,IAAI;AAEb,QAAIA,KAAI,IAAI;AAEV,UAAI,OAAO,IAAI,GAAG,KAAK,IAAI,KAAK,GAAGA,EAAC,CAAC;AACrC,WAAK,IAAI,GAAG;AACZ,YAAM;AAAA,IACR;AAAA,EACF;AAEA,MAAI,QAAQ,GAAG,KAAK,GAClB,MAAM,GAAG,KAAK,GACd,KAAK,GAAG,KAAK,GACb,KAAK,GAAG,GACR,KAAK,GAAG,GACR,MAAM,GAAG,GACT,MAAM,GAAG;AAEX,MAAI,OAAO,KAAK;AAChB,KAAG;AACD,QAAI,CAAC,IAAI;AAEP,cAAQ,KAAK,KAAK,KAAK,CAAC;AAExB,UAAI,OAAO,KAAK,KAAK,MAAM,GAAG,CAAC;AAC/B,aAAO;AACP,UAAI,CAAC,MAAM;AAET,YAAI,IAAI,KAAK,GAAG,IAAI,GAClB,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,GAC/BC,KAAI,IAAI;AACV,YAAIA,KAAI,IAAI;AACV,cAAI,KAAM,KAAI,CAAC;AACf;AAAA,QACF;AAEA,YAAI,OAAQ,MAAK,KAAK,CAAC;AAEvB,YAAI,IAAI,IAAI,SAAS,GAAGA,EAAC,GAAG,EAAE;AAE9B,WAAG,IAAI,MAAM,GAAG,GAAG,IAAI,MAAMA,KAAI,GAAG,GAAG,IAAI;AAC3C;AAAA,MACF,WAAW,QAAQ,EAAG,MAAK,MAAM,KAAK,MAAM,MAAM,GAAG,MAAM;AAAA,eAAW,QAAQ,GAAG;AAE/E,YAAI,OAAO,KAAK,KAAK,KAAK,EAAE,IAAI,KAC9B,QAAQ,KAAK,KAAK,MAAM,IAAI,EAAE,IAAI;AACpC,YAAI,KAAK,OAAO,KAAK,KAAK,MAAM,GAAG,EAAE,IAAI;AACzC,eAAO;AAEP,YAAI,MAAM,IAAI,GAAG,EAAE;AAEnB,YAAI,MAAM,IAAI,GAAG,EAAE;AACnB,iBAAS,IAAI,GAAG,IAAI,OAAO,EAAE,GAAG;AAE9B,cAAI,KAAK,CAAC,CAAC,IAAI,KAAK,KAAK,MAAM,IAAI,GAAG,CAAC;AAAA,QACzC;AACA,eAAO,QAAQ;AAEf,YAAI,MAAM,IAAI,GAAG,GACf,UAAU,KAAK,OAAO;AAExB,YAAI,MAAM,KAAK,KAAK,KAAK,CAAC;AAC1B,iBAAS,IAAI,GAAG,IAAI,MAAK;AACvB,cAAI,IAAI,IAAI,KAAK,KAAK,KAAK,MAAM,CAAC;AAElC,iBAAO,IAAI;AAEX,cAAI,IAAI,KAAK;AAEb,cAAI,IAAI,IAAI;AACV,gBAAI,GAAG,IAAI;AAAA,UACb,OAAO;AAEL,gBAAIC,KAAI,GACNC,KAAI;AACN,gBAAI,KAAK,GAAI,CAAAA,KAAI,IAAI,KAAK,KAAK,KAAK,CAAC,GAAG,OAAO,GAAGD,KAAI,IAAI,IAAI,CAAC;AAAA,qBAAW,KAAK,GAAI,CAAAC,KAAI,IAAI,KAAK,KAAK,KAAK,CAAC,GAAG,OAAO;AAAA,qBAAW,KAAK,GAAI,CAAAA,KAAI,KAAK,KAAK,KAAK,KAAK,GAAG,GAAG,OAAO;AAC9K,mBAAOA,KAAK,KAAI,GAAG,IAAID;AAAA,UACzB;AAAA,QACF;AAEA,YAAI,KAAK,IAAI,SAAS,GAAG,IAAI,GAC3B,KAAK,IAAI,SAAS,IAAI;AAExB,cAAM,IAAI,EAAE;AAEZ,cAAM,IAAI,EAAE;AACZ,aAAK,KAAK,IAAI,KAAK,CAAC;AACpB,aAAK,KAAK,IAAI,KAAK,CAAC;AAAA,MACtB,MAAO,KAAI,CAAC;AACZ,UAAI,MAAM,MAAM;AACd,YAAI,KAAM,KAAI,CAAC;AACf;AAAA,MACF;AAAA,IACF;AAGA,QAAI,OAAQ,MAAK,KAAK,MAAM;AAC5B,QAAI,OAAO,KAAK,OAAO,GACrB,OAAO,KAAK,OAAO;AACrB,QAAI,OAAO;AACX,aAAQ,OAAO,KAAK;AAElB,UAAIA,KAAI,GAAG,OAAO,KAAK,GAAG,IAAI,GAAG,GAC/B,MAAMA,MAAK;AACb,aAAOA,KAAI;AACX,UAAI,MAAM,MAAM;AACd,YAAI,KAAM,KAAI,CAAC;AACf;AAAA,MACF;AACA,UAAI,CAACA,GAAG,KAAI,CAAC;AACb,UAAI,MAAM,IAAK,KAAI,IAAI,IAAI;AAAA,eAAa,OAAO,KAAK;AAClD,eAAO,KAAK,KAAK;AACjB;AAAA,MACF,OAAO;AACL,YAAI,MAAM,MAAM;AAEhB,YAAI,MAAM,KAAK;AAEb,cAAI,IAAI,MAAM,KACZE,KAAI,KAAK,CAAC;AACZ,gBAAM,KAAK,KAAK,MAAM,KAAKA,MAAK,CAAC,IAAI,GAAG,CAAC;AACzC,iBAAOA;AAAA,QACT;AAEA,YAAIC,KAAI,GAAG,OAAO,KAAK,GAAG,IAAI,GAAG,GAC/B,OAAOA,MAAK;AACd,YAAI,CAACA,GAAG,KAAI,CAAC;AACb,eAAOA,KAAI;AACX,YAAI,KAAK,GAAG,IAAI;AAChB,YAAI,OAAO,GAAG;AACZ,cAAID,KAAI,KAAK,IAAI;AACjB,gBAAM,OAAO,KAAK,GAAG,KAAK,KAAKA,MAAK,GAAG,OAAOA;AAAA,QAChD;AACA,YAAI,MAAM,MAAM;AACd,cAAI,KAAM,KAAI,CAAC;AACf;AAAA,QACF;AACA,YAAI,OAAQ,MAAK,KAAK,MAAM;AAC5B,YAAI,MAAM,KAAK;AACf,YAAI,KAAK,IAAI;AACX,cAAI,QAAQ,KAAK,IACf,OAAO,KAAK,IAAI,IAAI,GAAG;AACzB,cAAI,QAAQ,KAAK,EAAG,KAAI,CAAC;AACzB,iBAAO,KAAK,MAAM,EAAE,GAAI,KAAI,EAAE,IAAI,KAAK,QAAQ,EAAE;AAAA,QACnD;AACA,eAAO,KAAK,KAAK,EAAE,GAAI,KAAI,EAAE,IAAI,IAAI,KAAK,EAAE;AAAA,MAC9C;AAAA,IACF;AACA,OAAG,IAAI,IAAI,GAAG,IAAI,MAAM,GAAG,IAAI,IAAI,GAAG,IAAI;AAC1C,QAAI,GAAI,SAAQ,GAAG,GAAG,IAAI,KAAK,GAAG,IAAI,IAAI,GAAG,IAAI;AAAA,EACnD,SAAS,CAAC;AAEV,SAAO,MAAM,IAAI,UAAU,QAAQ,IAAI,KAAK,GAAG,EAAE,IAAI,IAAI,SAAS,GAAG,EAAE;AACzE;AAEA,IAAI,QAAQ,SAAUC,IAAG,GAAG,GAAG;AAC7B,QAAM,IAAI;AACV,MAAI,IAAI,IAAI,IAAI;AAChB,EAAAA,GAAE,CAAC,KAAK;AACR,EAAAA,GAAE,IAAI,CAAC,KAAK,KAAK;AACnB;AAEA,IAAI,UAAU,SAAUA,IAAG,GAAG,GAAG;AAC/B,QAAM,IAAI;AACV,MAAI,IAAI,IAAI,IAAI;AAChB,EAAAA,GAAE,CAAC,KAAK;AACR,EAAAA,GAAE,IAAI,CAAC,KAAK,KAAK;AACjB,EAAAA,GAAE,IAAI,CAAC,KAAK,KAAK;AACnB;AAEA,IAAI,QAAQ,SAAUA,IAAG,IAAI;AAE3B,MAAIJ,KAAI,CAAC;AACT,WAAS,IAAI,GAAG,IAAII,GAAE,QAAQ,EAAE,GAAG;AACjC,QAAIA,GAAE,CAAC,EAAG,CAAAJ,GAAE,KAAK;AAAA,MACf,GAAG;AAAA,MACH,GAAGI,GAAE,CAAC;AAAA,IACR,CAAC;AAAA,EACH;AACA,MAAI,IAAIJ,GAAE;AACV,MAAIK,MAAKL,GAAE,MAAM;AACjB,MAAI,CAAC,EAAG,QAAO;AAAA,IACb,GAAG;AAAA,IACH,GAAG;AAAA,EACL;AACA,MAAI,KAAK,GAAG;AACV,QAAI,IAAI,IAAI,GAAGA,GAAE,CAAC,EAAE,IAAI,CAAC;AACzB,MAAEA,GAAE,CAAC,EAAE,CAAC,IAAI;AACZ,WAAO;AAAA,MACL,GAAG;AAAA,MACH,GAAG;AAAA,IACL;AAAA,EACF;AACA,EAAAA,GAAE,KAAK,SAAUM,IAAGH,IAAG;AACrB,WAAOG,GAAE,IAAIH,GAAE;AAAA,EACjB,CAAC;AAGD,EAAAH,GAAE,KAAK;AAAA,IACL,GAAG;AAAA,IACH,GAAG;AAAA,EACL,CAAC;AACD,MAAI,IAAIA,GAAE,CAAC,GACT,IAAIA,GAAE,CAAC,GACP,KAAK,GACL,KAAK,GACL,KAAK;AACP,EAAAA,GAAE,CAAC,IAAI;AAAA,IACL,GAAG;AAAA,IACH,GAAG,EAAE,IAAI,EAAE;AAAA,IACX;AAAA,IACA;AAAA,EACF;AAMA,SAAO,MAAM,IAAI,GAAG;AAClB,QAAIA,GAAEA,GAAE,EAAE,EAAE,IAAIA,GAAE,EAAE,EAAE,IAAI,OAAO,IAAI;AACrC,QAAIA,GAAE,MAAM,MAAMA,GAAE,EAAE,EAAE,IAAIA,GAAE,EAAE,EAAE,IAAI,OAAO,IAAI;AACjD,IAAAA,GAAE,IAAI,IAAI;AAAA,MACR,GAAG;AAAA,MACH,GAAG,EAAE,IAAI,EAAE;AAAA,MACX;AAAA,MACA;AAAA,IACF;AAAA,EACF;AACA,MAAI,SAASK,IAAG,CAAC,EAAE;AACnB,WAAS,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AAC1B,QAAIA,IAAG,CAAC,EAAE,IAAI,OAAQ,UAASA,IAAG,CAAC,EAAE;AAAA,EACvC;AAEA,MAAI,KAAK,IAAI,IAAI,SAAS,CAAC;AAE3B,MAAI,MAAM,GAAGL,GAAE,KAAK,CAAC,GAAG,IAAI,CAAC;AAC7B,MAAI,MAAM,IAAI;AAIZ,QAAI,IAAI,GACN,KAAK;AAEP,QAAI,MAAM,MAAM,IACd,MAAM,KAAK;AACb,IAAAK,IAAG,KAAK,SAAUC,IAAGH,IAAG;AACtB,aAAO,GAAGA,GAAE,CAAC,IAAI,GAAGG,GAAE,CAAC,KAAKA,GAAE,IAAIH,GAAE;AAAA,IACtC,CAAC;AACD,WAAO,IAAI,GAAG,EAAE,GAAG;AACjB,UAAI,OAAOE,IAAG,CAAC,EAAE;AACjB,UAAI,GAAG,IAAI,IAAI,IAAI;AACjB,cAAM,OAAO,KAAK,MAAM,GAAG,IAAI;AAC/B,WAAG,IAAI,IAAI;AAAA,MACb,MAAO;AAAA,IACT;AACA,WAAO;AACP,WAAO,KAAK,GAAG;AACb,UAAI,OAAOA,IAAG,CAAC,EAAE;AACjB,UAAI,GAAG,IAAI,IAAI,GAAI,OAAM,KAAK,KAAK,GAAG,IAAI,MAAM;AAAA,UAAO,GAAE;AAAA,IAC3D;AACA,WAAO,KAAK,KAAK,IAAI,EAAE,GAAG;AACxB,UAAI,OAAOA,IAAG,CAAC,EAAE;AACjB,UAAI,GAAG,IAAI,KAAK,IAAI;AAClB,UAAE,GAAG,IAAI;AACT,UAAE;AAAA,MACJ;AAAA,IACF;AACA,UAAM;AAAA,EACR;AACA,SAAO;AAAA,IACL,GAAG,IAAI,GAAG,EAAE;AAAA,IACZ,GAAG;AAAA,EACL;AACF;AAEA,IAAI,KAAK,SAAUH,IAAG,GAAGE,IAAG;AAC1B,SAAOF,GAAE,KAAK,KAAK,KAAK,IAAI,GAAGA,GAAE,GAAG,GAAGE,KAAI,CAAC,GAAG,GAAGF,GAAE,GAAG,GAAGE,KAAI,CAAC,CAAC,IAAI,EAAEF,GAAE,CAAC,IAAIE;AAC/E;AAEA,IAAI,KAAK,SAAUH,IAAG;AACpB,MAAI,IAAIA,GAAE;AAEV,SAAO,KAAK,CAACA,GAAE,EAAE,CAAC,EAAE;AACpB,MAAI,KAAK,IAAI,IAAI,EAAE,CAAC;AAEpB,MAAI,MAAM,GACR,MAAMA,GAAE,CAAC,GACT,MAAM;AACR,MAAI,IAAI,SAAU,GAAG;AACnB,OAAG,KAAK,IAAI;AAAA,EACd;AACA,WAAS,IAAI,GAAG,KAAK,GAAG,EAAE,GAAG;AAC3B,QAAIA,GAAE,CAAC,KAAK,OAAO,KAAK,EAAG,GAAE;AAAA,SAAS;AACpC,UAAI,CAAC,OAAO,MAAM,GAAG;AACnB,eAAO,MAAM,KAAK,OAAO,IAAK,GAAE,KAAK;AACrC,YAAI,MAAM,GAAG;AACX,YAAE,MAAM,KAAK,MAAM,MAAM,IAAI,QAAQ,MAAM,KAAK,IAAI,KAAK;AACzD,gBAAM;AAAA,QACR;AAAA,MACF,WAAW,MAAM,GAAG;AAClB,UAAE,GAAG,GAAG,EAAE;AACV,eAAO,MAAM,GAAG,OAAO,EAAG,GAAE,IAAI;AAChC,YAAI,MAAM,EAAG,GAAE,MAAM,KAAK,IAAI,IAAI,GAAG,MAAM;AAAA,MAC7C;AACA,aAAO,MAAO,GAAE,GAAG;AACnB,YAAM;AACN,YAAMA,GAAE,CAAC;AAAA,IACX;AAAA,EACF;AACA,SAAO;AAAA,IACL,GAAG,GAAG,SAAS,GAAG,GAAG;AAAA,IACrB,GAAG;AAAA,EACL;AACF;AAEA,IAAI,OAAO,SAAU,IAAI,IAAI;AAC3B,MAAI,IAAI;AACR,WAAS,IAAI,GAAG,IAAI,GAAG,QAAQ,EAAE,EAAG,MAAK,GAAG,CAAC,IAAI,GAAG,CAAC;AACrD,SAAO;AACT;AAGA,IAAI,QAAQ,SAAU,KAAK,KAAK,KAAK;AAEnC,MAAI,IAAI,IAAI;AACZ,MAAI,IAAI,KAAK,MAAM,CAAC;AACpB,MAAI,CAAC,IAAI,IAAI;AACb,MAAI,IAAI,CAAC,IAAI,KAAK;AAClB,MAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI;AACtB,MAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI;AAC1B,WAAS,IAAI,GAAG,IAAI,GAAG,EAAE,EAAG,KAAI,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC;AAClD,UAAQ,IAAI,IAAI,KAAK;AACvB;AAEA,IAAI,OAAO,SAAU,KAAK,KAAK,OAAO,MAAM,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG;AACrE,QAAM,KAAK,KAAK,KAAK;AACrB,IAAE,GAAG,GAAG;AACR,MAAIM,OAAK,MAAM,IAAI,EAAE,GACnB,MAAMA,KAAG,GACT,MAAMA,KAAG;AACX,MAAIC,OAAK,MAAM,IAAI,EAAE,GACnB,MAAMA,KAAG,GACT,MAAMA,KAAG;AACX,MAAIC,MAAK,GAAG,GAAG,GACb,OAAOA,IAAG,GACV,MAAMA,IAAG;AACX,MAAIC,MAAK,GAAG,GAAG,GACb,OAAOA,IAAG,GACVC,OAAMD,IAAG;AACX,MAAI,SAAS,IAAI,IAAI,EAAE;AACvB,WAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,EAAE,EAAG,GAAE,OAAO,KAAK,CAAC,IAAI,EAAE;AAC3D,WAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,EAAE,EAAG,GAAE,OAAO,KAAK,CAAC,IAAI,EAAE;AAC3D,MAAIE,MAAK,MAAM,QAAQ,CAAC,GACtB,MAAMA,IAAG,GACT,OAAOA,IAAG;AACZ,MAAI,OAAO;AACX,SAAO,OAAO,KAAK,CAAC,IAAI,KAAK,OAAO,CAAC,CAAC,GAAG,EAAE,KAAK;AAChD,MAAI,OAAO,KAAK,KAAK;AACrB,MAAI,QAAQ,KAAK,IAAI,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI;AAC5C,MAAI,QAAQ,KAAK,IAAI,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,KAAK,KAAK,IAAI,OAAO,KAAK,QAAQ,GAAG,IAAI,IAAI,OAAO,EAAE,IAAI,IAAI,OAAO,EAAE,IAAI,IAAI,OAAO,EAAE;AACpI,MAAI,MAAM,KAAK,QAAQ,SAAS,QAAQ,MAAO,QAAO,MAAM,KAAK,GAAG,IAAI,SAAS,IAAI,KAAK,EAAE,CAAC;AAC7F,MAAI,IAAI,IAAI,IAAI;AAChB,QAAM,KAAK,GAAG,KAAK,QAAQ,MAAM,GAAG,KAAK;AACzC,MAAI,QAAQ,OAAO;AACjB,SAAK,KAAK,KAAK,KAAK,CAAC,GAAG,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,CAAC,GAAG,KAAK;AAC/D,QAAI,MAAM,KAAK,KAAK,MAAM,CAAC;AAC3B,UAAM,KAAK,GAAG,MAAM,GAAG;AACvB,UAAM,KAAK,IAAI,GAAGD,OAAM,CAAC;AACzB,UAAM,KAAK,IAAI,IAAI,OAAO,CAAC;AAC3B,SAAK;AACL,aAAS,IAAI,GAAG,IAAI,MAAM,EAAE,EAAG,OAAM,KAAK,IAAI,IAAI,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC;AACjE,SAAK,IAAI;AACT,QAAI,OAAO,CAAC,MAAM,IAAI;AACtB,aAASE,MAAK,GAAGA,MAAK,GAAG,EAAEA,KAAI;AAC7B,UAAI,OAAO,KAAKA,GAAE;AAClB,eAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,EAAE,GAAG;AACpC,YAAI,MAAM,KAAK,CAAC,IAAI;AACpB,cAAM,KAAK,GAAG,IAAI,GAAG,CAAC,GAAG,KAAK,IAAI,GAAG;AACrC,YAAI,MAAM,GAAI,OAAM,KAAK,GAAG,KAAK,CAAC,KAAK,IAAI,GAAG,GAAG,KAAK,KAAK,CAAC,KAAK;AAAA,MACnE;AAAA,IACF;AAAA,EACF,OAAO;AACL,SAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK;AAAA,EACrC;AACA,WAAS,IAAI,GAAG,IAAI,IAAI,EAAE,GAAG;AAC3B,QAAI,MAAM,KAAK,CAAC;AAChB,QAAI,MAAM,KAAK;AACb,UAAI,MAAM,OAAO,KAAK;AACtB,cAAQ,KAAK,GAAG,GAAG,MAAM,GAAG,CAAC,GAAG,KAAK,GAAG,MAAM,GAAG;AACjD,UAAI,MAAM,EAAG,OAAM,KAAK,GAAG,OAAO,KAAK,EAAE,GAAG,KAAK,KAAK,GAAG;AACzD,UAAI,MAAM,MAAM;AAChB,cAAQ,KAAK,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,GAAG,GAAG;AACrC,UAAI,MAAM,EAAG,SAAQ,KAAK,GAAG,OAAO,IAAI,IAAI,GAAG,KAAK,KAAK,GAAG;AAAA,IAC9D,OAAO;AACL,cAAQ,KAAK,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,GAAG,GAAG;AAAA,IACvC;AAAA,EACF;AACA,UAAQ,KAAK,GAAG,GAAG,GAAG,CAAC;AACvB,SAAO,IAAI,GAAG,GAAG;AACnB;AAEA,IAAI,MAAmB,IAAI,IAAI,CAAC,OAAO,QAAQ,QAAQ,QAAQ,QAAQ,SAAS,SAAS,SAAS,OAAO,CAAC;AAE1G,IAAI,KAAkB,IAAI,GAAG,CAAC;AAE9B,IAAI,OAAO,SAAU,KAAK,KAAK,MAAM,KAAK,MAAM,IAAI;AAClD,MAAI,IAAI,GAAG,KAAK,IAAI;AACpB,MAAI,IAAI,IAAI,GAAG,MAAM,IAAI,KAAK,IAAI,KAAK,KAAK,IAAI,GAAI,KAAK,IAAI;AAE7D,MAAI,IAAI,EAAE,SAAS,KAAK,EAAE,SAAS,IAAI;AACvC,MAAI,MAAM,GAAG;AACb,MAAI,OAAO,GAAG,KAAK,KAAK;AACxB,MAAI,KAAK;AACP,QAAI,IAAK,GAAE,CAAC,IAAI,GAAG,KAAK;AACxB,QAAI,MAAM,IAAI,MAAM,CAAC;AACrB,QAAIX,KAAI,OAAO,IACbD,KAAI,MAAM;AACZ,QAAI,SAAS,KAAK,QAAQ;AAE1B,QAAI,OAAO,GAAG,KAAK,IAAI,IAAI,KAAK,GAC9B,OAAO,GAAG,KAAK,IAAI,IAAI,QAAQ,CAAC;AAClC,QAAI,QAAQ,KAAK,KAAK,OAAO,CAAC,GAC5B,QAAQ,IAAI;AACd,QAAI,MAAM,SAAUa,IAAG;AACrB,cAAQ,IAAIA,EAAC,IAAI,IAAIA,KAAI,CAAC,KAAK,QAAQ,IAAIA,KAAI,CAAC,KAAK,SAAS;AAAA,IAChE;AAGA,QAAI,OAAO,IAAI,IAAI,IAAK;AAExB,QAAI,KAAK,IAAI,IAAI,GAAG,GAClB,KAAK,IAAI,IAAI,EAAE;AAEjB,QAAI,OAAO,GACT,KAAK,GACL,IAAI,GAAG,KAAK,GACZ,KAAK,GACL,KAAK,GAAG,KAAK,GACb,KAAK;AACP,WAAO,IAAI,IAAI,GAAG,EAAE,GAAG;AAErB,UAAI,KAAK,IAAI,CAAC;AAEd,UAAI,OAAO,IAAI,OACb,QAAQ,KAAK,EAAE;AACjB,WAAK,IAAI,IAAI;AACb,WAAK,EAAE,IAAI;AAGX,UAAI,MAAM,GAAG;AAEX,YAAI,MAAM,IAAI;AACd,aAAK,OAAO,OAAQ,KAAK,WAAW,MAAM,OAAO,CAAC,MAAM;AACtD,gBAAM,KAAK,KAAK,GAAG,GAAG,MAAM,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG;AAC3D,eAAK,OAAO,KAAK,GAAG,KAAK;AACzB,mBAAS,IAAI,GAAG,IAAI,KAAK,EAAE,EAAG,IAAG,CAAC,IAAI;AACtC,mBAAS,IAAI,GAAG,IAAI,IAAI,EAAE,EAAG,IAAG,CAAC,IAAI;AAAA,QACvC;AAEA,YAAI,IAAI,GACNV,KAAI,GACJ,OAAOH,IACP,MAAM,OAAO,QAAQ;AACvB,YAAI,MAAM,KAAK,MAAM,IAAI,IAAI,GAAG,GAAG;AACjC,cAAI,OAAO,KAAK,IAAIC,IAAG,GAAG,IAAI;AAC9B,cAAI,OAAO,KAAK,IAAI,OAAO,CAAC;AAG5B,cAAI,KAAK,KAAK,IAAI,KAAK,GAAG;AAC1B,iBAAO,OAAO,QAAQ,EAAE,QAAQ,QAAQ,OAAO;AAC7C,gBAAI,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,IAAI,GAAG,GAAG;AAClC,kBAAI,KAAK;AACT,qBAAO,KAAK,MAAM,IAAI,IAAI,EAAE,KAAK,IAAI,IAAI,KAAK,GAAG,GAAG,EAAE,GAAG;AACzD,kBAAI,KAAK,GAAG;AACV,oBAAI,IAAIE,KAAI;AAEZ,oBAAI,KAAK,KAAM;AAIf,oBAAI,MAAM,KAAK,IAAI,KAAK,KAAK,CAAC;AAC9B,oBAAI,KAAK;AACT,yBAAS,IAAI,GAAG,IAAI,KAAK,EAAE,GAAG;AAC5B,sBAAI,KAAK,IAAI,MAAM,IAAI;AACvB,sBAAI,MAAM,KAAK,EAAE;AACjB,sBAAI,KAAK,KAAK,MAAM;AACpB,sBAAI,KAAK,GAAI,MAAK,IAAI,QAAQ;AAAA,gBAChC;AAAA,cACF;AAAA,YACF;AAEA,mBAAO,OAAO,QAAQ,KAAK,IAAI;AAC/B,mBAAO,OAAO,QAAQ;AAAA,UACxB;AAAA,QACF;AAEA,YAAIA,IAAG;AAGL,eAAK,IAAI,IAAI,YAAY,MAAM,CAAC,KAAK,KAAK,MAAMA,EAAC;AACjD,cAAI,MAAM,MAAM,CAAC,IAAI,IACnB,MAAM,MAAMA,EAAC,IAAI;AACnB,gBAAM,KAAK,GAAG,IAAI,KAAK,GAAG;AAC1B,YAAE,GAAG,MAAM,GAAG;AACd,YAAE,GAAG,GAAG;AACR,eAAK,IAAI;AACT,YAAE;AAAA,QACJ,OAAO;AACL,eAAK,IAAI,IAAI,IAAI,CAAC;AAClB,YAAE,GAAG,IAAI,CAAC,CAAC;AAAA,QACb;AAAA,MACF;AAAA,IACF;AACA,SAAK,IAAI,KAAK,IAAI,GAAG,EAAE,GAAG,IAAI,GAAG,EAAE,GAAG;AACpC,WAAK,IAAI,IAAI,IAAI,CAAC;AAClB,QAAE,GAAG,IAAI,CAAC,CAAC;AAAA,IACb;AACA,UAAM,KAAK,KAAK,GAAG,KAAK,MAAM,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG;AAC7D,QAAI,CAAC,KAAK;AACR,SAAG,IAAI,MAAM,IAAI,EAAE,MAAM,IAAI,CAAC,KAAK;AAEnC,aAAO;AACP,SAAG,IAAI,MAAM,GAAG,IAAI,MAAM,GAAG,IAAI,GAAG,GAAG,IAAI;AAAA,IAC7C;AAAA,EACF,OAAO;AACL,aAAS,IAAI,GAAG,KAAK,GAAG,IAAI,IAAI,KAAK,KAAK,OAAO;AAE/C,UAAI,IAAI,IAAI;AACZ,UAAI,KAAK,GAAG;AAEV,UAAE,MAAM,IAAI,CAAC,IAAI;AACjB,YAAI;AAAA,MACN;AACA,YAAM,MAAM,GAAG,MAAM,GAAG,IAAI,SAAS,GAAG,CAAC,CAAC;AAAA,IAC5C;AACA,OAAG,IAAI;AAAA,EACT;AACA,SAAO,IAAI,GAAG,GAAG,MAAM,KAAK,GAAG,IAAI,IAAI;AACzC;AAEA,IAAI,OAAoB,WAAY;AAClC,MAAIJ,KAAI,IAAI,WAAW,GAAG;AAC1B,WAAS,IAAI,GAAG,IAAI,KAAK,EAAE,GAAG;AAC5B,QAAIC,KAAI,GACN,IAAI;AACN,WAAO,EAAE,EAAG,CAAAA,MAAKA,KAAI,KAAK,cAAcA,OAAM;AAC9C,IAAAD,GAAE,CAAC,IAAIC;AAAA,EACT;AACA,SAAOD;AACT,EAAE;AAEF,IAAI,MAAM,WAAY;AACpB,MAAIC,KAAI;AACR,SAAO;AAAA,IACL,GAAG,SAAUG,IAAG;AAEd,UAAI,KAAKH;AACT,eAAS,IAAI,GAAG,IAAIG,GAAE,QAAQ,EAAE,EAAG,MAAK,KAAK,KAAK,MAAMA,GAAE,CAAC,CAAC,IAAI,OAAO;AACvE,MAAAH,KAAI;AAAA,IACN;AAAA,IACA,GAAG,WAAY;AACb,aAAO,CAACA;AAAA,IACV;AAAA,EACF;AACF;AAEA,IAAI,QAAQ,WAAY;AACtB,MAAIK,KAAI,GACNH,KAAI;AACN,SAAO;AAAA,IACL,GAAG,SAAUC,IAAG;AAEd,UAAIF,KAAII,IACN,IAAIH;AACN,UAAI,IAAIC,GAAE,SAAS;AACnB,eAAS,IAAI,GAAG,KAAK,KAAI;AACvB,YAAI,IAAI,KAAK,IAAI,IAAI,MAAM,CAAC;AAC5B,eAAO,IAAI,GAAG,EAAE,EAAG,MAAKF,MAAKE,GAAE,CAAC;AAChC,QAAAF,MAAKA,KAAI,SAAS,MAAMA,MAAK,KAAK,KAAK,IAAI,SAAS,MAAM,KAAK;AAAA,MACjE;AACA,MAAAI,KAAIJ,IAAGC,KAAI;AAAA,IACb;AAAA,IACA,GAAG,WAAY;AACb,MAAAG,MAAK,OAAOH,MAAK;AACjB,cAAQG,KAAI,QAAQ,MAAMA,KAAI,UAAW,KAAKH,KAAI,QAAQ,IAAIA,MAAK;AAAA,IACrE;AAAA,EACF;AACF;AAGA,IAAI,OAAO,SAAU,KAAK,KAAK,KAAK,MAAM,IAAI;AAC5C,MAAI,CAAC,IAAI;AACP,SAAK;AAAA,MACH,GAAG;AAAA,IACL;AACA,QAAI,IAAI,YAAY;AAClB,UAAI,OAAO,IAAI,WAAW,SAAS,MAAM;AACzC,UAAI,SAAS,IAAI,GAAG,KAAK,SAAS,IAAI,MAAM;AAC5C,aAAO,IAAI,IAAI;AACf,aAAO,IAAI,KAAK,KAAK,MAAM;AAC3B,YAAM;AACN,SAAG,IAAI,KAAK;AAAA,IACd;AAAA,EACF;AACA,SAAO,KAAK,KAAK,IAAI,SAAS,OAAO,IAAI,IAAI,OAAO,IAAI,OAAO,OAAO,GAAG,IAAI,KAAK,KAAK,KAAK,IAAI,GAAG,KAAK,IAAI,IAAI,KAAK,IAAI,IAAI,MAAM,CAAC,CAAC,IAAI,GAAG,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,MAAM,EAAE;AAClL;AAEA,IAAI,MAAM,SAAUY,IAAGC,IAAG;AACxB,MAAI,IAAI,CAAC;AACT,WAAS,KAAKD,GAAG,GAAE,CAAC,IAAIA,GAAE,CAAC;AAC3B,WAAS,KAAKC,GAAG,GAAE,CAAC,IAAIA,GAAE,CAAC;AAC3B,SAAO;AACT;AAQA,IAAI,OAAO,SAAU,IAAI,OAAOC,KAAI;AAClC,MAAI,KAAK,GAAG;AACZ,MAAI,KAAK,GAAG,SAAS;AACrB,MAAI,KAAK,GAAG,MAAM,GAAG,QAAQ,GAAG,IAAI,GAAG,GAAG,YAAY,GAAG,CAAC,EAAE,QAAQ,QAAQ,EAAE,EAAE,MAAM,GAAG;AACzF,WAAS,IAAI,GAAG,IAAI,GAAG,QAAQ,EAAE,GAAG;AAClC,QAAI,IAAI,GAAG,CAAC,GACV,IAAI,GAAG,CAAC;AACV,QAAI,OAAO,KAAK,YAAY;AAC1B,eAAS,MAAM,IAAI;AACnB,UAAI,OAAO,EAAE,SAAS;AACtB,UAAI,EAAE,WAAW;AAEf,YAAI,KAAK,QAAQ,eAAe,KAAK,IAAI;AACvC,cAAI,QAAQ,KAAK,QAAQ,KAAK,CAAC,IAAI;AACnC,mBAAS,KAAK,MAAM,OAAO,KAAK,QAAQ,KAAK,KAAK,CAAC;AAAA,QACrD,OAAO;AACL,mBAAS;AACT,mBAASC,MAAK,EAAE,UAAW,UAAS,MAAM,IAAI,gBAAgBA,KAAI,MAAM,EAAE,UAAUA,EAAC,EAAE,SAAS;AAAA,QAClG;AAAA,MACF,MAAO,UAAS;AAAA,IAClB,MAAO,CAAAD,IAAG,CAAC,IAAI;AAAA,EACjB;AACA,SAAO;AACT;AACA,IAAI,KAAK,CAAC;AAEV,IAAI,OAAO,SAAU,GAAG;AACtB,MAAI,KAAK,CAAC;AACV,WAAS,KAAK,GAAG;AACf,QAAI,EAAE,CAAC,EAAE,QAAQ;AACf,SAAG,MAAM,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,CAAC,GAAG,MAAM;AAAA,IACpD;AAAA,EACF;AACA,SAAO;AACT;AAEA,IAAI,OAAO,SAAU,KAAK,MAAM,IAAI,IAAI;AACtC,MAAI,CAAC,GAAG,EAAE,GAAG;AACX,QAAI,QAAQ,IACV,OAAO,CAAC,GACR,IAAI,IAAI,SAAS;AACnB,aAAS,IAAI,GAAG,IAAI,GAAG,EAAE,EAAG,SAAQ,KAAK,IAAI,CAAC,GAAG,OAAO,IAAI;AAC5D,OAAG,EAAE,IAAI;AAAA,MACP,GAAG,KAAK,IAAI,CAAC,GAAG,OAAO,IAAI;AAAA,MAC3B,GAAG;AAAA,IACL;AAAA,EACF;AACA,MAAIA,MAAK,IAAI,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC;AACzB,SAAO,GAAG,GAAG,EAAE,EAAE,IAAI,4EAA4E,KAAK,SAAS,IAAI,KAAK,IAAIA,KAAI,KAAKA,GAAE,GAAG,EAAE;AAC9I;AAEA,IAAI,SAAS,WAAY;AACvB,SAAO,CAAC,IAAI,KAAK,KAAK,MAAM,MAAM,MAAM,IAAI,IAAI,MAAM,MAAM,KAAK,IAAI,MAAM,KAAK,MAAM,QAAQ,MAAM,KAAK,KAAK,OAAO,aAAa,KAAK,IAAI;AAC7I;AACA,IAAI,QAAQ,WAAY;AACtB,SAAO,CAAC,IAAI,KAAK,KAAK,MAAM,MAAM,MAAM,OAAO,OAAO,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,MAAM,OAAO,SAAS,OAAO,IAAI,IAAI,MAAM,OAAO,MAAM,MAAM,KAAK,MAAM,MAAM,aAAa,GAAG;AACzL;AAMA,IAAI,OAAO,WAAY;AACrB,SAAO,CAAC,KAAK,GAAG;AAClB;AAMA,IAAI,OAAO,WAAY;AACrB,SAAO,CAAC,GAAG;AACb;AAEA,IAAI,MAAM,SAAU,KAAK;AACvB,SAAO,YAAY,KAAK,CAAC,IAAI,MAAM,CAAC;AACtC;AAEA,IAAI,OAAO,SAAU,GAAG;AACtB,SAAO,KAAK;AAAA,IACV,KAAK,EAAE,QAAQ,IAAI,GAAG,EAAE,IAAI;AAAA,IAC5B,YAAY,EAAE;AAAA,EAChB;AACF;AAaA,IAAI,QAAQ,SAAU,MAAM;AAC1B,OAAK,SAAS,SAAU,KAAK,OAAO;AAClC,WAAO,YAAY,CAAC,KAAK,KAAK,GAAG,CAAC,IAAI,MAAM,CAAC;AAAA,EAC/C;AACA,SAAO,SAAU,IAAI;AACnB,QAAI,GAAG,KAAK,QAAQ;AAClB,WAAK,KAAK,GAAG,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC;AAChC,kBAAY,CAAC,GAAG,KAAK,CAAC,EAAE,MAAM,CAAC;AAAA,IACjC,MAAO,MAAK,MAAM;AAAA,EACpB;AACF;AAEA,IAAI,WAAW,SAAU,KAAK,MAAM,MAAM,MAAM,IAAI,OAAO,KAAK;AAC9D,MAAIE;AACJ,MAAI,IAAI,KAAK,KAAK,MAAM,IAAI,SAAUC,MAAK,KAAK;AAC9C,QAAIA,KAAK,GAAE,UAAU,GAAG,KAAK,OAAO,KAAK,MAAMA,IAAG;AAAA,aAAW,CAAC,MAAM,QAAQ,GAAG,EAAG,KAAI,GAAG;AAAA,aAAW,IAAI,UAAU,GAAG;AACnH,WAAK,cAAc,IAAI,CAAC;AACxB,UAAI,KAAK,QAAS,MAAK,QAAQ,IAAI,CAAC,CAAC;AAAA,IACvC,OAAO;AACL,UAAI,IAAI,CAAC,EAAG,GAAE,UAAU;AACxB,WAAK,OAAO,KAAK,MAAMA,MAAK,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;AAAA,IAC5C;AAAA,EACF,CAAC;AACD,IAAE,YAAY,IAAI;AAClB,OAAK,aAAa;AAClB,OAAK,OAAO,SAAUC,IAAG,GAAG;AAC1B,QAAI,CAAC,KAAK,OAAQ,KAAI,CAAC;AACvB,QAAIF,GAAG,MAAK,OAAO,IAAI,GAAG,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;AAC1C,SAAK,cAAcE,GAAE;AACrB,MAAE,YAAY,CAACA,IAAGF,KAAI,CAAC,GAAG,CAACE,GAAE,MAAM,CAAC;AAAA,EACtC;AACA,OAAK,YAAY,WAAY;AAC3B,MAAE,UAAU;AAAA,EACd;AACA,MAAI,OAAO;AACT,SAAK,QAAQ,WAAY;AACvB,QAAE,YAAY,CAAC,CAAC;AAAA,IAClB;AAAA,EACF;AACF;AAEA,IAAI,KAAK,SAAUA,IAAGC,IAAG;AACvB,SAAOD,GAAEC,EAAC,IAAID,GAAEC,KAAI,CAAC,KAAK;AAC5B;AAEA,IAAI,KAAK,SAAUD,IAAGC,IAAG;AACvB,UAAQD,GAAEC,EAAC,IAAID,GAAEC,KAAI,CAAC,KAAK,IAAID,GAAEC,KAAI,CAAC,KAAK,KAAKD,GAAEC,KAAI,CAAC,KAAK,QAAQ;AACtE;AACA,IAAI,KAAK,SAAUD,IAAGC,IAAG;AACvB,SAAO,GAAGD,IAAGC,EAAC,IAAI,GAAGD,IAAGC,KAAI,CAAC,IAAI;AACnC;AAEA,IAAI,SAAS,SAAUD,IAAGC,IAAG,GAAG;AAC9B,SAAO,GAAG,EAAEA,GAAG,CAAAD,GAAEC,EAAC,IAAI,GAAG,OAAO;AAClC;AAEA,IAAI,MAAM,SAAUC,IAAG,GAAG;AACxB,MAAI,KAAK,EAAE;AACX,EAAAA,GAAE,CAAC,IAAI,IAAIA,GAAE,CAAC,IAAI,KAAKA,GAAE,CAAC,IAAI,GAAGA,GAAE,CAAC,IAAI,EAAE,QAAQ,IAAI,IAAI,EAAE,SAAS,IAAI,IAAI,GAAGA,GAAE,CAAC,IAAI;AACvF,MAAI,EAAE,SAAS,EAAG,QAAOA,IAAG,GAAG,KAAK,MAAM,IAAI,KAAK,EAAE,SAAS,KAAK,IAAI,CAAC,IAAI,GAAI,CAAC;AACjF,MAAI,IAAI;AACN,IAAAA,GAAE,CAAC,IAAI;AACP,aAAS,IAAI,GAAG,KAAK,GAAG,QAAQ,EAAE,EAAG,CAAAA,GAAE,IAAI,EAAE,IAAI,GAAG,WAAW,CAAC;AAAA,EAClE;AACF;AAGA,IAAI,MAAM,SAAUF,IAAG;AACrB,MAAIA,GAAE,CAAC,KAAK,MAAMA,GAAE,CAAC,KAAK,OAAOA,GAAE,CAAC,KAAK,EAAG,KAAI,GAAG,mBAAmB;AACtE,MAAI,MAAMA,GAAE,CAAC;AACb,MAAI,KAAK;AACT,MAAI,MAAM,EAAG,QAAOA,GAAE,EAAE,IAAIA,GAAE,EAAE,KAAK,KAAK;AAC1C,WAAS,MAAM,OAAO,IAAI,MAAM,OAAO,IAAI,IAAI,KAAK,GAAG,MAAM,CAACA,GAAE,IAAI,EAAE;AACtE,SAAO,MAAM,MAAM;AACrB;AAEA,IAAI,MAAM,SAAUA,IAAG;AACrB,MAAI,IAAIA,GAAE;AACV,UAAQA,GAAE,IAAI,CAAC,IAAIA,GAAE,IAAI,CAAC,KAAK,IAAIA,GAAE,IAAI,CAAC,KAAK,KAAKA,GAAE,IAAI,CAAC,KAAK,QAAQ;AAC1E;AAEA,IAAI,OAAO,SAAU,GAAG;AACtB,SAAO,MAAM,EAAE,WAAW,EAAE,SAAS,SAAS,IAAI;AACpD;AAEA,IAAI,MAAM,SAAUE,IAAG,GAAG;AACxB,MAAI,KAAK,EAAE,OACTC,MAAK,MAAM,IAAI,IAAI,KAAK,IAAI,IAAI,MAAM,IAAI,IAAI;AAChD,EAAAD,GAAE,CAAC,IAAI,KAAKA,GAAE,CAAC,IAAIC,OAAM,KAAK,EAAE,cAAc;AAC9C,EAAAD,GAAE,CAAC,KAAK,MAAMA,GAAE,CAAC,KAAK,IAAIA,GAAE,CAAC,KAAK;AAClC,MAAI,EAAE,YAAY;AAChB,QAAI,IAAI,MAAM;AACd,MAAE,EAAE,EAAE,UAAU;AAChB,WAAOA,IAAG,GAAG,EAAE,EAAE,CAAC;AAAA,EACpB;AACF;AAEA,IAAI,MAAM,SAAUF,IAAG,MAAM;AAC3B,OAAKA,GAAE,CAAC,IAAI,OAAO,KAAKA,GAAE,CAAC,KAAK,IAAI,MAAMA,GAAE,CAAC,KAAK,IAAIA,GAAE,CAAC,KAAK,GAAI,KAAI,GAAG,mBAAmB;AAC5F,OAAKA,GAAE,CAAC,KAAK,IAAI,MAAM,CAAC,CAAC,KAAM,KAAI,GAAG,yBAAyBA,GAAE,CAAC,IAAI,KAAK,SAAS,gBAAgB,aAAa;AACjH,UAAQA,GAAE,CAAC,KAAK,IAAI,KAAK;AAC3B;AACA,SAAS,QAAQ,MAAM,IAAI;AACzB,MAAI,OAAO,QAAQ,WAAY,MAAK,MAAM,OAAO,CAAC;AAClD,OAAK,SAAS;AACd,SAAO;AACT;AAIA,IAAI,UAAuB,WAAY;AACrC,WAASI,SAAQ,MAAM,IAAI;AACzB,QAAI,OAAO,QAAQ,WAAY,MAAK,MAAM,OAAO,CAAC;AAClD,SAAK,SAAS;AACd,SAAK,IAAI,QAAQ,CAAC;AAClB,SAAK,IAAI;AAAA,MACP,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACL;AAGA,SAAK,IAAI,IAAI,GAAG,KAAK;AACrB,QAAI,KAAK,EAAE,YAAY;AACrB,UAAI,OAAO,KAAK,EAAE,WAAW,SAAS,MAAM;AAC5C,WAAK,EAAE,IAAI,MAAM,QAAQ,KAAK,MAAM;AACpC,WAAK,EAAE,IAAI,QAAQ,KAAK;AAAA,IAC1B;AAAA,EACF;AACA,EAAAA,SAAQ,UAAU,IAAI,SAAUF,IAAG,GAAG;AACpC,SAAK,OAAO,KAAKA,IAAG,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;AAAA,EAC9C;AAMA,EAAAE,SAAQ,UAAU,OAAO,SAAU,OAAO,OAAO;AAC/C,QAAI,CAAC,KAAK,OAAQ,KAAI,CAAC;AACvB,QAAI,KAAK,EAAE,EAAG,KAAI,CAAC;AACnB,QAAI,SAAS,MAAM,SAAS,KAAK,EAAE;AACnC,QAAI,SAAS,KAAK,EAAE,QAAQ;AAC1B,UAAI,SAAS,IAAI,KAAK,EAAE,SAAS,OAAO;AACtC,YAAI,SAAS,IAAI,GAAG,SAAS,MAAM;AACnC,eAAO,IAAI,KAAK,EAAE,SAAS,GAAG,KAAK,EAAE,CAAC,CAAC;AACvC,aAAK,IAAI;AAAA,MACX;AACA,UAAI,QAAQ,KAAK,EAAE,SAAS,KAAK,EAAE;AACnC,WAAK,EAAE,IAAI,MAAM,SAAS,GAAG,KAAK,GAAG,KAAK,EAAE,CAAC;AAC7C,WAAK,EAAE,IAAI,KAAK,EAAE;AAClB,WAAK,EAAE,KAAK,GAAG,KAAK;AACpB,WAAK,EAAE,IAAI,KAAK,EAAE,SAAS,MAAM,CAAC;AAClC,WAAK,EAAE,IAAI,MAAM,SAAS,KAAK,GAAG,KAAK;AACvC,WAAK,EAAE,IAAI,MAAM,SAAS,QAAQ;AAClC,WAAK,EAAE,IAAI,OAAO,KAAK,EAAE,IAAI;AAAA,IAC/B,OAAO;AACL,WAAK,EAAE,IAAI,OAAO,KAAK,EAAE,CAAC;AAC1B,WAAK,EAAE,KAAK,MAAM;AAAA,IACpB;AACA,SAAK,EAAE,IAAI,QAAQ;AACnB,QAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,QAAQ,OAAO;AACvC,WAAK,EAAE,KAAK,GAAG,SAAS,KAAK;AAC7B,WAAK,EAAE,IAAI,KAAK,EAAE,GAAG,KAAK,EAAE,KAAK;AAAA,IACnC;AAAA,EACF;AAKA,EAAAA,SAAQ,UAAU,QAAQ,WAAY;AACpC,QAAI,CAAC,KAAK,OAAQ,KAAI,CAAC;AACvB,QAAI,KAAK,EAAE,EAAG,KAAI,CAAC;AACnB,SAAK,EAAE,KAAK,GAAG,KAAK;AACpB,SAAK,EAAE,IAAI,KAAK,EAAE,GAAG,KAAK,EAAE,KAAK;AAAA,EACnC;AACA,SAAOA;AACT,EAAE;AAKF,IAAI,eAA4B,2BAAY;AAC1C,WAASC,cAAa,MAAM,IAAI;AAC9B,aAAS,CAAC,OAAO,WAAY;AAC3B,aAAO,CAAC,OAAO,OAAO;AAAA,IACxB,CAAC,GAAG,MAAM,QAAQ,KAAK,MAAM,MAAM,EAAE,GAAG,SAAU,IAAI;AACpD,UAAI,OAAO,IAAI,QAAQ,GAAG,IAAI;AAC9B,kBAAY,MAAM,IAAI;AAAA,IACxB,GAAG,GAAG,CAAC;AAAA,EACT;AACA,SAAOA;AACT,EAAE;AAeK,SAAS,YAAY,MAAM,MAAM;AACtC,SAAO,KAAK,MAAM,QAAQ,CAAC,GAAG,GAAG,CAAC;AACpC;AAIA,IAAI,UAAuB,WAAY;AACrC,WAASC,SAAQ,MAAM,IAAI;AAEzB,QAAI,OAAO,QAAQ,WAAY,MAAK,MAAM,OAAO,CAAC;AAClD,SAAK,SAAS;AACd,QAAI,OAAO,QAAQ,KAAK,cAAc,KAAK,WAAW,SAAS,MAAM;AACrE,SAAK,IAAI;AAAA,MACP,GAAG;AAAA,MACH,GAAG,OAAO,KAAK,SAAS;AAAA,IAC1B;AACA,SAAK,IAAI,IAAI,GAAG,KAAK;AACrB,SAAK,IAAI,IAAI,GAAG,CAAC;AACjB,QAAI,KAAM,MAAK,EAAE,IAAI,IAAI;AAAA,EAC3B;AACA,EAAAA,SAAQ,UAAU,IAAI,SAAUC,IAAG;AACjC,QAAI,CAAC,KAAK,OAAQ,KAAI,CAAC;AACvB,QAAI,KAAK,EAAG,KAAI,CAAC;AACjB,QAAI,CAAC,KAAK,EAAE,OAAQ,MAAK,IAAIA;AAAA,aAAWA,GAAE,QAAQ;AAChD,UAAIC,KAAI,IAAI,GAAG,KAAK,EAAE,SAASD,GAAE,MAAM;AACvC,MAAAC,GAAE,IAAI,KAAK,CAAC,GAAGA,GAAE,IAAID,IAAG,KAAK,EAAE,MAAM,GAAG,KAAK,IAAIC;AAAA,IACnD;AAAA,EACF;AACA,EAAAF,SAAQ,UAAU,IAAI,SAAU,OAAO;AACrC,SAAK,EAAE,IAAI,EAAE,KAAK,IAAI,SAAS;AAC/B,QAAI,MAAM,KAAK,EAAE;AACjB,QAAI,KAAK,MAAM,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC;AACrC,SAAK,OAAO,IAAI,IAAI,KAAK,KAAK,EAAE,CAAC,GAAG,KAAK,CAAC;AAC1C,SAAK,IAAI,IAAI,IAAI,KAAK,EAAE,IAAI,KAAK,GAAG,KAAK,EAAE,IAAI,KAAK,EAAE;AACtD,SAAK,IAAI,IAAI,KAAK,GAAG,KAAK,EAAE,IAAI,IAAI,CAAC,GAAG,KAAK,EAAE,KAAK;AAAA,EACtD;AAMA,EAAAA,SAAQ,UAAU,OAAO,SAAU,OAAO,OAAO;AAC/C,SAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK;AAAA,EAC7B;AACA,SAAOA;AACT,EAAE;AAKF,IAAI,eAA4B,2BAAY;AAC1C,WAASG,cAAa,MAAM,IAAI;AAC9B,aAAS,CAAC,QAAQ,WAAY;AAC5B,aAAO,CAAC,OAAO,OAAO;AAAA,IACxB,CAAC,GAAG,MAAM,QAAQ,KAAK,MAAM,MAAM,EAAE,GAAG,SAAU,IAAI;AACpD,UAAI,OAAO,IAAI,QAAQ,GAAG,IAAI;AAC9B,kBAAY,MAAM,IAAI;AAAA,IACxB,GAAG,GAAG,CAAC;AAAA,EACT;AACA,SAAOA;AACT,EAAE;AAeK,SAAS,YAAY,MAAM,MAAM;AACtC,SAAO,MAAM,MAAM;AAAA,IACjB,GAAG;AAAA,EACL,GAAG,QAAQ,KAAK,KAAK,QAAQ,KAAK,UAAU;AAC9C;AAKA,IAAI,OAAoB,WAAY;AAClC,WAASC,MAAK,MAAM,IAAI;AACtB,SAAK,IAAI,IAAI;AACb,SAAK,IAAI;AACT,SAAK,IAAI;AACT,YAAQ,KAAK,MAAM,MAAM,EAAE;AAAA,EAC7B;AAMA,EAAAA,MAAK,UAAU,OAAO,SAAU,OAAO,OAAO;AAC5C,SAAK,EAAE,EAAE,KAAK;AACd,SAAK,KAAK,MAAM;AAChB,YAAQ,UAAU,KAAK,KAAK,MAAM,OAAO,KAAK;AAAA,EAChD;AACA,EAAAA,MAAK,UAAU,IAAI,SAAUC,IAAG,GAAG;AACjC,QAAI,MAAM,KAAKA,IAAG,KAAK,GAAG,KAAK,KAAK,KAAK,KAAK,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC;AAChE,QAAI,KAAK,EAAG,KAAI,KAAK,KAAK,CAAC,GAAG,KAAK,IAAI;AACvC,QAAI,EAAG,QAAO,KAAK,IAAI,SAAS,GAAG,KAAK,EAAE,EAAE,CAAC,GAAG,OAAO,KAAK,IAAI,SAAS,GAAG,KAAK,CAAC;AAClF,SAAK,OAAO,KAAK,CAAC;AAAA,EACpB;AAKA,EAAAD,MAAK,UAAU,QAAQ,WAAY;AACjC,YAAQ,UAAU,MAAM,KAAK,IAAI;AAAA,EACnC;AACA,SAAOA;AACT,EAAE;AA4CF,IAAI,SAAsB,WAAY;AACpC,WAASE,QAAO,MAAM,IAAI;AACxB,SAAK,IAAI;AACT,SAAK,IAAI;AACT,YAAQ,KAAK,MAAM,MAAM,EAAE;AAAA,EAC7B;AAMA,EAAAA,QAAO,UAAU,OAAO,SAAU,OAAO,OAAO;AAC9C,YAAQ,UAAU,EAAE,KAAK,MAAM,KAAK;AACpC,SAAK,KAAK,MAAM;AAChB,QAAI,KAAK,GAAG;AACV,UAAI,IAAI,KAAK,EAAE,SAAS,KAAK,IAAI,CAAC;AAClC,UAAI,IAAI,EAAE,SAAS,IAAI,IAAI,CAAC,IAAI;AAChC,UAAI,IAAI,EAAE,QAAQ;AAChB,YAAI,CAAC,MAAO;AAAA,MACd,WAAW,KAAK,IAAI,KAAK,KAAK,UAAU;AACtC,aAAK,SAAS,KAAK,IAAI,EAAE,MAAM;AAAA,MACjC;AACA,WAAK,IAAI,EAAE,SAAS,CAAC,GAAG,KAAK,IAAI;AAAA,IACnC;AAGA,YAAQ,UAAU,EAAE,KAAK,MAAM,KAAK;AAEpC,QAAI,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,OAAO;AACnC,WAAK,IAAI,KAAK,KAAK,EAAE,CAAC,IAAI;AAC1B,WAAK,IAAI;AAAA,QACP,GAAG;AAAA,MACL;AACA,WAAK,IAAI,IAAI,GAAG,CAAC;AACjB,WAAK,KAAK,IAAI,GAAG,CAAC,GAAG,KAAK;AAAA,IAC5B;AAAA,EACF;AACA,SAAOA;AACT,EAAE;AAKF,IAAI,cAA2B,2BAAY;AACzC,WAASC,aAAY,MAAM,IAAI;AAC7B,QAAI,QAAQ;AACZ,aAAS,CAAC,QAAQ,MAAM,WAAY;AAClC,aAAO,CAAC,OAAO,SAAS,MAAM;AAAA,IAChC,CAAC,GAAG,MAAM,QAAQ,KAAK,MAAM,MAAM,EAAE,GAAG,SAAU,IAAI;AACpD,UAAI,OAAO,IAAI,OAAO,GAAG,IAAI;AAC7B,WAAK,WAAW,SAAU,QAAQ;AAChC,eAAO,YAAY,MAAM;AAAA,MAC3B;AACA,kBAAY,MAAM,IAAI;AAAA,IACxB,GAAG,GAAG,GAAG,SAAU,QAAQ;AACzB,aAAO,MAAM,YAAY,MAAM,SAAS,MAAM;AAAA,IAChD,CAAC;AAAA,EACH;AACA,SAAOA;AACT,EAAE;AA2BF,IAAI,OAAoB,WAAY;AAClC,WAASC,MAAK,MAAM,IAAI;AACtB,SAAK,IAAI,MAAM;AACf,SAAK,IAAI;AACT,YAAQ,KAAK,MAAM,MAAM,EAAE;AAAA,EAC7B;AAMA,EAAAA,MAAK,UAAU,OAAO,SAAU,OAAO,OAAO;AAC5C,SAAK,EAAE,EAAE,KAAK;AACd,YAAQ,UAAU,KAAK,KAAK,MAAM,OAAO,KAAK;AAAA,EAChD;AACA,EAAAA,MAAK,UAAU,IAAI,SAAUC,IAAG,GAAG;AACjC,QAAI,MAAM,KAAKA,IAAG,KAAK,GAAG,KAAK,MAAM,KAAK,EAAE,aAAa,IAAI,IAAI,KAAK,GAAG,KAAK,CAAC;AAC/E,QAAI,KAAK,EAAG,KAAI,KAAK,KAAK,CAAC,GAAG,KAAK,IAAI;AACvC,QAAI,EAAG,QAAO,KAAK,IAAI,SAAS,GAAG,KAAK,EAAE,EAAE,CAAC;AAC7C,SAAK,OAAO,KAAK,CAAC;AAAA,EACpB;AAKA,EAAAD,MAAK,UAAU,QAAQ,WAAY;AACjC,YAAQ,UAAU,MAAM,KAAK,IAAI;AAAA,EACnC;AACA,SAAOA;AACT,EAAE;AA0CF,IAAI,SAAsB,WAAY;AACpC,WAASE,QAAO,MAAM,IAAI;AACxB,YAAQ,KAAK,MAAM,MAAM,EAAE;AAC3B,SAAK,IAAI,QAAQ,KAAK,aAAa,IAAI;AAAA,EACzC;AAMA,EAAAA,QAAO,UAAU,OAAO,SAAU,OAAO,OAAO;AAC9C,YAAQ,UAAU,EAAE,KAAK,MAAM,KAAK;AACpC,QAAI,KAAK,GAAG;AACV,UAAI,KAAK,EAAE,SAAS,KAAK,CAAC,MAAO;AACjC,WAAK,IAAI,KAAK,EAAE,SAAS,IAAI,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC,GAAG,KAAK,IAAI;AAAA,IAC9D;AACA,QAAI,OAAO;AACT,UAAI,KAAK,EAAE,SAAS,EAAG,KAAI,GAAG,mBAAmB;AACjD,WAAK,IAAI,KAAK,EAAE,SAAS,GAAG,EAAE;AAAA,IAChC;AAGA,YAAQ,UAAU,EAAE,KAAK,MAAM,KAAK;AAAA,EACtC;AACA,SAAOA;AACT,EAAE;AAKF,IAAI,cAA2B,2BAAY;AACzC,WAASC,aAAY,MAAM,IAAI;AAC7B,aAAS,CAAC,QAAQ,MAAM,WAAY;AAClC,aAAO,CAAC,OAAO,SAAS,MAAM;AAAA,IAChC,CAAC,GAAG,MAAM,QAAQ,KAAK,MAAM,MAAM,EAAE,GAAG,SAAU,IAAI;AACpD,UAAI,OAAO,IAAI,OAAO,GAAG,IAAI;AAC7B,kBAAY,MAAM,IAAI;AAAA,IACxB,GAAG,IAAI,CAAC;AAAA,EACV;AACA,SAAOA;AACT,EAAE;AA4BF,IAAI,aAA0B,WAAY;AACxC,WAASC,YAAW,MAAM,IAAI;AAC5B,SAAK,IAAI,QAAQ,KAAK,MAAM,MAAM,EAAE,KAAK,CAAC;AAC1C,SAAK,IAAI;AACT,SAAK,IAAI;AACT,SAAK,IAAI;AAAA,EACX;AAGA,EAAAA,YAAW,UAAU,IAAI,WAAY;AACnC,QAAI,QAAQ;AACZ,SAAK,EAAE,SAAS,SAAU,KAAK,OAAO;AACpC,YAAM,OAAO,KAAK,KAAK;AAAA,IACzB;AAAA,EACF;AAMA,EAAAA,YAAW,UAAU,OAAO,SAAU,OAAO,OAAO;AAClD,QAAI,CAAC,KAAK,OAAQ,KAAI,CAAC;AACvB,QAAI,CAAC,KAAK,GAAG;AACX,UAAI,KAAK,KAAK,KAAK,EAAE,QAAQ;AAC3B,YAAIC,KAAI,IAAI,GAAG,KAAK,EAAE,SAAS,MAAM,MAAM;AAC3C,QAAAA,GAAE,IAAI,KAAK,CAAC,GAAGA,GAAE,IAAI,OAAO,KAAK,EAAE,MAAM;AAAA,MAC3C,MAAO,MAAK,IAAI;AAChB,UAAI,KAAK,EAAE,SAAS,GAAG;AACrB,aAAK,IAAI,KAAK,EAAE,CAAC,KAAK,MAAM,KAAK,EAAE,CAAC,KAAK,OAAO,KAAK,EAAE,CAAC,KAAK,IAAI,IAAI,KAAK,EAAE,KAAK,CAAC,KAAK,KAAK,EAAE,CAAC,IAAI,OAAO,KAAK,KAAK,EAAE,CAAC,KAAK,IAAI,MAAM,KAAK,EAAE,CAAC,KAAK,IAAI,KAAK,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,EAAE,KAAK,CAAC,IAAI,IAAI,KAAK,EAAE,KAAK,CAAC;AAC/M,aAAK,EAAE;AACP,aAAK,EAAE,KAAK,KAAK,GAAG,KAAK;AACzB,aAAK,IAAI;AAAA,MACX;AAAA,IACF,MAAO,MAAK,EAAE,KAAK,OAAO,KAAK;AAAA,EACjC;AACA,SAAOD;AACT,EAAE;AAKF,IAAI,kBAA+B,WAAY;AAC7C,WAASE,iBAAgB,MAAM,IAAI;AACjC,eAAW,KAAK,MAAM,MAAM,EAAE;AAC9B,SAAK,aAAa;AAClB,SAAK,IAAI;AACT,SAAK,IAAI;AACT,SAAK,IAAI;AAAA,EACX;AACA,EAAAA,iBAAgB,UAAU,IAAI,WAAY;AACxC,QAAI,QAAQ;AACZ,SAAK,EAAE,SAAS,SAAUC,MAAK,KAAK,OAAO;AACzC,YAAM,OAAOA,MAAK,KAAK,KAAK;AAAA,IAC9B;AACA,SAAK,EAAE,UAAU,SAAU,MAAM;AAC/B,YAAM,cAAc;AACpB,UAAI,MAAM,QAAS,OAAM,QAAQ,IAAI;AAAA,IACvC;AAAA,EACF;AAMA,EAAAD,iBAAgB,UAAU,OAAO,SAAU,OAAO,OAAO;AACvD,SAAK,cAAc,MAAM;AACzB,eAAW,UAAU,KAAK,KAAK,MAAM,OAAO,KAAK;AAAA,EACnD;AACA,SAAOA;AACT,EAAE;AAiBF,IAAI,OAAO,SAAUE,IAAG,GAAGC,IAAG,GAAG;AAC/B,WAAS,KAAKD,IAAG;AACf,QAAI,MAAMA,GAAE,CAAC,GACXE,KAAI,IAAI,GACR,KAAK;AACP,QAAI,MAAM,QAAQ,GAAG,EAAG,MAAK,IAAI,GAAG,IAAI,CAAC,CAAC,GAAG,MAAM,IAAI,CAAC;AACxD,QAAI,eAAe,GAAI,CAAAD,GAAEC,EAAC,IAAI,CAAC,KAAK,EAAE;AAAA,SAAO;AAC3C,MAAAD,GAAEC,MAAK,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,GAAG,EAAE;AAC5B,WAAK,KAAKA,IAAGD,IAAG,CAAC;AAAA,IACnB;AAAA,EACF;AACF;AAEA,IAAIE,MAAK,OAAO,eAAe,eAA4B,IAAI,YAAY;AAE3E,IAAI,KAAK,OAAO,eAAe,eAA4B,IAAI,YAAY;AAE3E,IAAI,MAAM;AACV,IAAI;AACF,KAAG,OAAO,IAAI;AAAA,IACZ,QAAQ;AAAA,EACV,CAAC;AACD,QAAM;AACR,SAAS,GAAG;AAAC;AAEb,IAAI,QAAQ,SAAUH,IAAG;AACvB,WAAS,IAAI,IAAI,IAAI,OAAK;AACxB,QAAII,KAAIJ,GAAE,GAAG;AACb,QAAI,MAAMI,KAAI,QAAQA,KAAI,QAAQA,KAAI;AACtC,QAAI,IAAI,KAAKJ,GAAE,OAAQ,QAAO;AAAA,MAC5B,GAAG;AAAA,MACH,GAAG,IAAIA,IAAG,IAAI,CAAC;AAAA,IACjB;AACA,QAAI,CAAC,GAAI,MAAK,OAAO,aAAaI,EAAC;AAAA,aAAW,MAAM,GAAG;AACrD,MAAAA,OAAMA,KAAI,OAAO,MAAMJ,GAAE,GAAG,IAAI,OAAO,MAAMA,GAAE,GAAG,IAAI,OAAO,IAAIA,GAAE,GAAG,IAAI,MAAM,OAAO,KAAK,OAAO,aAAa,QAAQI,MAAK,IAAI,QAAQA,KAAI,IAAI;AAAA,IACnJ,WAAW,KAAK,EAAG,MAAK,OAAO,cAAcA,KAAI,OAAO,IAAIJ,GAAE,GAAG,IAAI,EAAE;AAAA,QAAO,MAAK,OAAO,cAAcI,KAAI,OAAO,MAAMJ,GAAE,GAAG,IAAI,OAAO,IAAIA,GAAE,GAAG,IAAI,EAAE;AAAA,EAC1J;AACF;AAIA,IAAI,aAA0B,WAAY;AAKxC,WAASK,YAAW,IAAI;AACtB,SAAK,SAAS;AACd,QAAI,IAAK,MAAK,IAAI,IAAI,YAAY;AAAA,QAAO,MAAK,IAAI;AAAA,EACpD;AAMA,EAAAA,YAAW,UAAU,OAAO,SAAU,OAAO,OAAO;AAClD,QAAI,CAAC,KAAK,OAAQ,KAAI,CAAC;AACvB,YAAQ,CAAC,CAAC;AACV,QAAI,KAAK,GAAG;AACV,WAAK,OAAO,KAAK,EAAE,OAAO,OAAO;AAAA,QAC/B,QAAQ;AAAA,MACV,CAAC,GAAG,KAAK;AACT,UAAI,OAAO;AACT,YAAI,KAAK,EAAE,OAAO,EAAE,OAAQ,KAAI,CAAC;AACjC,aAAK,IAAI;AAAA,MACX;AACA;AAAA,IACF;AACA,QAAI,CAAC,KAAK,EAAG,KAAI,CAAC;AAClB,QAAI,MAAM,IAAI,GAAG,KAAK,EAAE,SAAS,MAAM,MAAM;AAC7C,QAAI,IAAI,KAAK,CAAC;AACd,QAAI,IAAI,OAAO,KAAK,EAAE,MAAM;AAC5B,QAAIC,OAAK,MAAM,GAAG,GAChB,IAAIA,KAAG,GACP,IAAIA,KAAG;AACT,QAAI,OAAO;AACT,UAAI,EAAE,OAAQ,KAAI,CAAC;AACnB,WAAK,IAAI;AAAA,IACX,MAAO,MAAK,IAAI;AAChB,SAAK,OAAO,GAAG,KAAK;AAAA,EACtB;AACA,SAAOD;AACT,EAAE;AAKF,IAAI,aAA0B,WAAY;AAKxC,WAASE,YAAW,IAAI;AACtB,SAAK,SAAS;AAAA,EAChB;AAMA,EAAAA,YAAW,UAAU,OAAO,SAAU,OAAO,OAAO;AAClD,QAAI,CAAC,KAAK,OAAQ,KAAI,CAAC;AACvB,QAAI,KAAK,EAAG,KAAI,CAAC;AACjB,SAAK,OAAO,QAAQ,KAAK,GAAG,KAAK,IAAI,SAAS,KAAK;AAAA,EACrD;AACA,SAAOA;AACT,EAAE;AASK,SAAS,QAAQ,KAAK,QAAQ;AACnC,MAAI,QAAQ;AACV,QAAI,OAAO,IAAI,GAAG,IAAI,MAAM;AAC5B,aAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,EAAE,EAAG,MAAK,CAAC,IAAI,IAAI,WAAW,CAAC;AAC/D,WAAO;AAAA,EACT;AACA,MAAIC,IAAI,QAAOA,IAAG,OAAO,GAAG;AAC5B,MAAI,IAAI,IAAI;AACZ,MAAI,KAAK,IAAI,GAAG,IAAI,UAAU,IAAI,UAAU,EAAE;AAC9C,MAAI,KAAK;AACT,MAAI,IAAI,SAAU,GAAG;AACnB,OAAG,IAAI,IAAI;AAAA,EACb;AACA,WAAS,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AAC1B,QAAI,KAAK,IAAI,GAAG,QAAQ;AACtB,UAAIC,KAAI,IAAI,GAAG,KAAK,KAAK,IAAI,KAAK,EAAE;AACpC,MAAAA,GAAE,IAAI,EAAE;AACR,WAAKA;AAAA,IACP;AACA,QAAIC,KAAI,IAAI,WAAW,CAAC;AACxB,QAAIA,KAAI,OAAO,OAAQ,GAAEA,EAAC;AAAA,aAAWA,KAAI,KAAM,GAAE,MAAMA,MAAK,CAAC,GAAG,EAAE,MAAMA,KAAI,EAAE;AAAA,aAAWA,KAAI,SAASA,KAAI,MAAO,CAAAA,KAAI,SAASA,KAAI,QAAQ,MAAM,IAAI,WAAW,EAAE,CAAC,IAAI,MAAM,EAAE,MAAMA,MAAK,EAAE,GAAG,EAAE,MAAMA,MAAK,KAAK,EAAE,GAAG,EAAE,MAAMA,MAAK,IAAI,EAAE,GAAG,EAAE,MAAMA,KAAI,EAAE;AAAA,QAAO,GAAE,MAAMA,MAAK,EAAE,GAAG,EAAE,MAAMA,MAAK,IAAI,EAAE,GAAG,EAAE,MAAMA,KAAI,EAAE;AAAA,EACxT;AACA,SAAO,IAAI,IAAI,GAAG,EAAE;AACtB;AAQO,SAAS,UAAU,KAAK,QAAQ;AACrC,MAAI,QAAQ;AACV,QAAI,IAAI;AACR,aAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK,MAAO,MAAK,OAAO,aAAa,MAAM,MAAM,IAAI,SAAS,GAAG,IAAI,KAAK,CAAC;AAC3G,WAAO;AAAA,EACT,WAAW,IAAI;AACb,WAAO,GAAG,OAAO,GAAG;AAAA,EACtB,OAAO;AACL,QAAIC,OAAK,MAAM,GAAG,GAChB,IAAIA,KAAG,GACP,IAAIA,KAAG;AACT,QAAI,EAAE,OAAQ,KAAI,CAAC;AACnB,WAAO;AAAA,EACT;AACF;AAGA,IAAI,MAAM,SAAU,GAAG;AACrB,SAAO,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI;AAC/C;AAkBA,IAAI,OAAO,SAAUC,IAAGC,IAAG;AACzB,SAAO,GAAGD,IAAGC,EAAC,KAAK,GAAGA,MAAK,IAAI,GAAGD,IAAGC,KAAI,CAAC,EAAE;AAC5C,SAAO,CAAC,GAAGD,IAAGC,KAAI,EAAE,GAAG,GAAGD,IAAGC,KAAI,CAAC,GAAG,GAAGD,IAAGC,KAAI,EAAE,CAAC;AACpD;AAEA,IAAI,OAAO,SAAU,IAAI;AACvB,MAAI,KAAK;AACT,MAAI,IAAI;AACN,aAAS,KAAK,IAAI;AAChB,UAAI,IAAI,GAAG,CAAC,EAAE;AACd,UAAI,IAAI,MAAO,KAAI,CAAC;AACpB,YAAM,IAAI;AAAA,IACZ;AAAA,EACF;AACA,SAAO;AACT;AAEA,IAAI,MAAM,SAAUD,IAAGC,IAAG,GAAG,IAAIC,IAAGC,IAAG,IAAI,IAAI;AAC7C,MAAIC,MAAK,GAAG,QACV,KAAK,EAAE,OACP,MAAM,MAAM,GAAG;AACjB,MAAI,MAAM,KAAK,EAAE;AACjB,SAAOJ,IAAGC,IAAG,MAAM,OAAO,WAAY,QAAS,GAAGA,MAAK;AACvD,MAAI,MAAM,KAAM,CAAAD,GAAEC,IAAG,IAAI,IAAID,GAAEC,IAAG,IAAI,EAAE;AACxC,EAAAD,GAAEC,EAAC,IAAI,IAAIA,MAAK;AAChB,EAAAD,GAAEC,IAAG,IAAI,EAAE,QAAQ,KAAKE,KAAI,KAAK,IAAIH,GAAEC,IAAG,IAAIC,MAAK;AACnD,EAAAF,GAAEC,IAAG,IAAI,EAAE,cAAc,KAAKD,GAAEC,IAAG,IAAI,EAAE,eAAe;AACxD,MAAI,KAAK,IAAI,KAAK,EAAE,SAAS,OAAO,KAAK,IAAI,IAAI,EAAE,KAAK,GACtD,IAAI,GAAG,YAAY,IAAI;AACzB,MAAI,IAAI,KAAK,IAAI,IAAK,KAAI,EAAE;AAC5B,SAAOD,IAAGC,IAAG,KAAK,KAAK,GAAG,SAAS,IAAI,KAAK,KAAK,GAAG,QAAQ,KAAK,KAAK,GAAG,SAAS,KAAK,KAAK,GAAG,WAAW,KAAK,IAAI,GAAG,WAAW,KAAK,CAAC,GAAGA,MAAK;AAC/I,MAAIE,MAAK,IAAI;AACX,WAAOH,IAAGC,IAAG,EAAE,GAAG;AAClB,WAAOD,IAAGC,KAAI,GAAGE,KAAI,IAAI,CAACA,KAAI,IAAIA,EAAC;AACnC,WAAOH,IAAGC,KAAI,GAAG,EAAE,IAAI;AAAA,EACzB;AACA,SAAOD,IAAGC,KAAI,IAAIG,GAAE;AACpB,SAAOJ,IAAGC,KAAI,IAAI,GAAG,GAAGA,MAAK;AAC7B,MAAI,MAAM,MAAM;AACd,WAAOD,IAAGC,IAAG,GAAG;AAChB,WAAOD,IAAGC,KAAI,GAAG,EAAE,KAAK;AACxB,WAAOD,IAAGC,KAAI,IAAI,EAAE,GAAGA,MAAK;AAAA,EAC9B;AACA,EAAAD,GAAE,IAAI,IAAIC,EAAC;AACX,EAAAA,MAAKG;AACL,MAAI,KAAK;AACP,aAAS,KAAK,IAAI;AAChB,UAAI,MAAM,GAAG,CAAC,GACZ,IAAI,IAAI;AACV,aAAOJ,IAAGC,IAAG,CAAC,CAAC;AACf,aAAOD,IAAGC,KAAI,GAAG,CAAC;AAClB,MAAAD,GAAE,IAAI,KAAKC,KAAI,CAAC,GAAGA,MAAK,IAAI;AAAA,IAC9B;AAAA,EACF;AACA,MAAI,IAAK,CAAAD,GAAE,IAAI,IAAIC,EAAC,GAAGA,MAAK;AAC5B,SAAOA;AACT;AAEA,IAAI,MAAM,SAAU,GAAGA,IAAGE,IAAGH,IAAG,GAAG;AACjC,SAAO,GAAGC,IAAG,SAAS;AACtB,SAAO,GAAGA,KAAI,GAAGE,EAAC;AAClB,SAAO,GAAGF,KAAI,IAAIE,EAAC;AACnB,SAAO,GAAGF,KAAI,IAAID,EAAC;AACnB,SAAO,GAAGC,KAAI,IAAI,CAAC;AACrB;AAIA,IAAI,iBAA8B,WAAY;AAK5C,WAASI,gBAAe,UAAU;AAChC,SAAK,WAAW;AAChB,SAAK,IAAI,IAAI;AACb,SAAK,OAAO;AACZ,SAAK,cAAc;AAAA,EACrB;AASA,EAAAA,gBAAe,UAAU,UAAU,SAAU,OAAO,OAAO;AACzD,SAAK,OAAO,MAAM,OAAO,KAAK;AAAA,EAChC;AAQA,EAAAA,gBAAe,UAAU,OAAO,SAAU,OAAO,OAAO;AACtD,QAAI,CAAC,KAAK,OAAQ,KAAI,CAAC;AACvB,SAAK,EAAE,EAAE,KAAK;AACd,SAAK,QAAQ,MAAM;AACnB,QAAI,MAAO,MAAK,MAAM,KAAK,EAAE,EAAE;AAC/B,SAAK,QAAQ,OAAO,SAAS,KAAK;AAAA,EACpC;AACA,SAAOA;AACT,EAAE;AAOF,IAAI,aAA0B,WAAY;AAMxC,WAASC,YAAW,UAAU,MAAM;AAClC,QAAI,QAAQ;AACZ,QAAI,CAAC,KAAM,QAAO,CAAC;AACnB,mBAAe,KAAK,MAAM,QAAQ;AAClC,SAAK,IAAI,IAAI,QAAQ,MAAM,SAAU,KAAK,OAAO;AAC/C,YAAM,OAAO,MAAM,KAAK,KAAK;AAAA,IAC/B,CAAC;AACD,SAAK,cAAc;AACnB,SAAK,OAAO,IAAI,KAAK,KAAK;AAAA,EAC5B;AACA,EAAAA,YAAW,UAAU,UAAU,SAAU,OAAO,OAAO;AACrD,QAAI;AACF,WAAK,EAAE,KAAK,OAAO,KAAK;AAAA,IAC1B,SAAS,GAAG;AACV,WAAK,OAAO,GAAG,MAAM,KAAK;AAAA,IAC5B;AAAA,EACF;AAMA,EAAAA,YAAW,UAAU,OAAO,SAAU,OAAO,OAAO;AAClD,mBAAe,UAAU,KAAK,KAAK,MAAM,OAAO,KAAK;AAAA,EACvD;AACA,SAAOA;AACT,EAAE;AAKF,IAAI,kBAA+B,WAAY;AAM7C,WAASC,iBAAgB,UAAU,MAAM;AACvC,QAAI,QAAQ;AACZ,QAAI,CAAC,KAAM,QAAO,CAAC;AACnB,mBAAe,KAAK,MAAM,QAAQ;AAClC,SAAK,IAAI,IAAI,aAAa,MAAM,SAAUC,MAAK,KAAK,OAAO;AACzD,YAAM,OAAOA,MAAK,KAAK,KAAK;AAAA,IAC9B,CAAC;AACD,SAAK,cAAc;AACnB,SAAK,OAAO,IAAI,KAAK,KAAK;AAC1B,SAAK,YAAY,KAAK,EAAE;AAAA,EAC1B;AACA,EAAAD,iBAAgB,UAAU,UAAU,SAAU,OAAO,OAAO;AAC1D,SAAK,EAAE,KAAK,OAAO,KAAK;AAAA,EAC1B;AAMA,EAAAA,iBAAgB,UAAU,OAAO,SAAU,OAAO,OAAO;AACvD,mBAAe,UAAU,KAAK,KAAK,MAAM,OAAO,KAAK;AAAA,EACvD;AACA,SAAOA;AACT,EAAE;AAMF,IAAI,MAAmB,WAAY;AAMjC,WAASE,KAAI,IAAI;AACf,SAAK,SAAS;AACd,SAAK,IAAI,CAAC;AACV,SAAK,IAAI;AAAA,EACX;AAKA,EAAAA,KAAI,UAAU,MAAM,SAAU,MAAM;AAClC,QAAI,QAAQ;AACZ,QAAI,CAAC,KAAK,OAAQ,KAAI,CAAC;AAEvB,QAAI,KAAK,IAAI,EAAG,MAAK,OAAO,IAAI,KAAK,KAAK,IAAI,KAAK,GAAG,GAAG,CAAC,GAAG,MAAM,KAAK;AAAA,SAAO;AAC7E,UAAI,IAAI,QAAQ,KAAK,QAAQ,GAC3B,OAAO,EAAE;AACX,UAAI,MAAM,KAAK,SACb,IAAI,OAAO,QAAQ,GAAG;AACxB,UAAIC,KAAI,QAAQ,KAAK,SAAS,UAAU,KAAK,IAAI,UAAU,EAAE;AAC7D,UAAI,OAAO,OAAO,KAAK,KAAK,KAAK,IAAI;AACrC,UAAI,OAAO,MAAO,MAAK,OAAO,IAAI,IAAI,GAAG,CAAC,GAAG,MAAM,KAAK;AACxD,UAAI,SAAS,IAAI,GAAG,IAAI;AACxB,UAAI,QAAQ,GAAG,MAAM,GAAGA,IAAG,EAAE;AAC7B,UAAI,SAAS,CAAC,MAAM;AACpB,UAAI,SAAS,WAAY;AACvB,iBAAS,KAAK,GAAG,SAAS,QAAQ,KAAK,OAAO,QAAQ,MAAM;AAC1D,cAAI,MAAM,OAAO,EAAE;AACnB,gBAAM,OAAO,MAAM,KAAK,KAAK;AAAA,QAC/B;AACA,iBAAS,CAAC;AAAA,MACZ;AACA,UAAI,OAAO,KAAK;AAChB,WAAK,IAAI;AACT,UAAI,QAAQ,KAAK,EAAE;AACnB,UAAI,OAAO,IAAI,MAAM;AAAA,QACnB;AAAA,QACA,GAAGA;AAAA,QACH;AAAA,QACA,GAAG,WAAY;AACb,cAAI,KAAK,UAAW,MAAK,UAAU;AAAA,QACrC;AAAA,QACA,GAAG,WAAY;AACb,iBAAO;AACP,cAAI,MAAM;AACR,gBAAI,MAAM,MAAM,EAAE,QAAQ,CAAC;AAC3B,gBAAI,IAAK,KAAI,EAAE;AAAA,gBAAO,OAAM,IAAI;AAAA,UAClC;AACA,iBAAO;AAAA,QACT;AAAA,MACF,CAAC;AACD,UAAI,OAAO;AACX,WAAK,SAAS,SAAUC,MAAK,KAAK,OAAO;AACvC,YAAIA,MAAK;AACP,gBAAM,OAAOA,MAAK,KAAK,KAAK;AAC5B,gBAAM,UAAU;AAAA,QAClB,OAAO;AACL,kBAAQ,IAAI;AACZ,iBAAO,KAAK,GAAG;AACf,cAAI,OAAO;AACT,gBAAI,KAAK,IAAI,GAAG,EAAE;AAClB,mBAAO,IAAI,GAAG,SAAS;AACvB,mBAAO,IAAI,GAAG,KAAK,GAAG;AACtB,mBAAO,IAAI,GAAG,IAAI;AAClB,mBAAO,IAAI,IAAI,KAAK,IAAI;AACxB,mBAAO,KAAK,EAAE;AACd,iBAAK,IAAI,MAAM,KAAK,IAAI,OAAO,OAAO,IAAI,KAAK,MAAM,KAAK,KAAK,KAAK,OAAO,KAAK;AAChF,gBAAI,KAAM,MAAK,EAAE;AACjB,mBAAO;AAAA,UACT,WAAW,KAAM,QAAO;AAAA,QAC1B;AAAA,MACF;AACA,WAAK,EAAE,KAAK,IAAI;AAAA,IAClB;AAAA,EACF;AAMA,EAAAF,KAAI,UAAU,MAAM,WAAY;AAC9B,QAAI,QAAQ;AACZ,QAAI,KAAK,IAAI,GAAG;AACd,WAAK,OAAO,IAAI,KAAK,KAAK,IAAI,KAAK,GAAG,GAAG,CAAC,GAAG,MAAM,IAAI;AACvD;AAAA,IACF;AACA,QAAI,KAAK,EAAG,MAAK,EAAE;AAAA,QAAO,MAAK,EAAE,KAAK;AAAA,MACpC,GAAG,WAAY;AACb,YAAI,EAAE,MAAM,IAAI,GAAI;AACpB,cAAM,EAAE,OAAO,IAAI,CAAC;AACpB,cAAM,EAAE;AAAA,MACV;AAAA,MACA,GAAG,WAAY;AAAA,MAAC;AAAA,IAClB,CAAC;AACD,SAAK,IAAI;AAAA,EACX;AACA,EAAAA,KAAI,UAAU,IAAI,WAAY;AAC5B,QAAI,KAAK,GACP,IAAI,GACJ,KAAK;AACP,aAAS,KAAK,GAAGG,OAAK,KAAK,GAAG,KAAKA,KAAG,QAAQ,MAAM;AAClD,UAAI,IAAIA,KAAG,EAAE;AACb,YAAM,KAAK,EAAE,EAAE,SAAS,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,EAAE,EAAE,SAAS;AAAA,IAC9D;AACA,QAAI,MAAM,IAAI,GAAG,KAAK,EAAE;AACxB,aAASC,OAAK,GAAGC,MAAK,KAAK,GAAGD,OAAKC,IAAG,QAAQD,QAAM;AAClD,UAAI,IAAIC,IAAGD,IAAE;AACb,UAAI,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC;AAC1C,YAAM,KAAK,EAAE,EAAE,SAAS,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,EAAE,EAAE,SAAS,IAAI,KAAK,EAAE;AAAA,IACzE;AACA,QAAI,KAAK,IAAI,KAAK,EAAE,QAAQ,IAAI,CAAC;AACjC,SAAK,OAAO,MAAM,KAAK,IAAI;AAC3B,SAAK,IAAI;AAAA,EACX;AAKA,EAAAJ,KAAI,UAAU,YAAY,WAAY;AACpC,aAAS,KAAK,GAAGG,OAAK,KAAK,GAAG,KAAKA,KAAG,QAAQ,MAAM;AAClD,UAAI,IAAIA,KAAG,EAAE;AACb,QAAE,EAAE;AAAA,IACN;AACA,SAAK,IAAI;AAAA,EACX;AACA,SAAOH;AACT,EAAE;AAwGK,SAAS,QAAQ,MAAM,MAAM;AAClC,MAAI,CAAC,KAAM,QAAO,CAAC;AACnB,MAAI,IAAI,CAAC;AACT,MAAI,QAAQ,CAAC;AACb,OAAK,MAAM,IAAI,GAAG,IAAI;AACtB,MAAI,IAAI;AACR,MAAI,MAAM;AACV,WAAS,MAAM,GAAG;AAChB,QAAIM,OAAK,EAAE,EAAE,GACX,OAAOA,KAAG,CAAC,GACX,IAAIA,KAAG,CAAC;AACV,QAAI,cAAc,EAAE,SAAS,IAAI,IAAI;AACrC,QAAI,IAAI,QAAQ,EAAE,GAChB,IAAI,EAAE;AACR,QAAI,MAAM,EAAE,SACV,IAAI,OAAO,QAAQ,GAAG,GACtB,KAAK,KAAK,EAAE;AACd,QAAI,MAAM,KAAK,EAAE,KAAK;AACtB,QAAI,IAAI,MAAO,KAAI,EAAE;AACrB,QAAIC,KAAI,cAAc,YAAY,MAAM,CAAC,IAAI,MAC3C,IAAIA,GAAE;AACR,QAAIC,KAAI,IAAI;AACZ,IAAAA,GAAE,EAAE,IAAI;AACR,UAAM,KAAK,IAAI,GAAG;AAAA,MAChB,MAAM,KAAK;AAAA,MACX,KAAKA,GAAE,EAAE;AAAA,MACT,GAAGD;AAAA,MACH;AAAA,MACA;AAAA,MACA,GAAG,KAAK,GAAG,UAAU,KAAK,IAAI,UAAU;AAAA,MACxC;AAAA,MACA;AAAA,IACF,CAAC,CAAC;AACF,SAAK,KAAK,IAAI,MAAM;AACpB,WAAO,KAAK,KAAK,IAAI,QAAQ,MAAM,KAAK;AAAA,EAC1C;AACA,MAAI,MAAM,IAAI,GAAG,MAAM,EAAE,GACvB,KAAK,GACL,MAAM,MAAM;AACd,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,EAAE,GAAG;AACrC,QAAI,IAAI,MAAM,CAAC;AACf,QAAI,KAAK,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,MAAM;AACrC,QAAI,OAAO,KAAK,EAAE,EAAE,SAAS,KAAK,EAAE,KAAK;AACzC,QAAI,IAAI,EAAE,GAAG,EAAE,IAAI,IAAI;AACvB,QAAI,KAAK,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,GAAG,KAAK,KAAK,QAAQ,EAAE,IAAI,EAAE,EAAE,SAAS;AAAA,EACvF;AACA,MAAI,KAAK,GAAG,MAAM,QAAQ,KAAK,EAAE;AACjC,SAAO;AACT;AAIA,IAAI,mBAAgC,WAAY;AAC9C,WAASE,oBAAmB;AAAA,EAAC;AAC7B,EAAAA,kBAAiB,UAAU,OAAO,SAAU,MAAM,OAAO;AACvD,SAAK,OAAO,MAAM,MAAM,KAAK;AAAA,EAC/B;AACA,EAAAA,kBAAiB,cAAc;AAC/B,SAAOA;AACT,EAAE;AAMF,IAAI,eAA4B,WAAY;AAI1C,WAASC,gBAAe;AACtB,QAAI,QAAQ;AACZ,SAAK,IAAI,IAAI,QAAQ,SAAU,KAAK,OAAO;AACzC,YAAM,OAAO,MAAM,KAAK,KAAK;AAAA,IAC/B,CAAC;AAAA,EACH;AACA,EAAAA,cAAa,UAAU,OAAO,SAAU,MAAM,OAAO;AACnD,QAAI;AACF,WAAK,EAAE,KAAK,MAAM,KAAK;AAAA,IACzB,SAAS,GAAG;AACV,WAAK,OAAO,GAAG,MAAM,KAAK;AAAA,IAC5B;AAAA,EACF;AACA,EAAAA,cAAa,cAAc;AAC3B,SAAOA;AACT,EAAE;AAKF,IAAI,oBAAiC,WAAY;AAI/C,WAASC,mBAAkB,GAAG,IAAI;AAChC,QAAI,QAAQ;AACZ,QAAI,KAAK,MAAQ;AACf,WAAK,IAAI,IAAI,QAAQ,SAAU,KAAK,OAAO;AACzC,cAAM,OAAO,MAAM,KAAK,KAAK;AAAA,MAC/B,CAAC;AAAA,IACH,OAAO;AACL,WAAK,IAAI,IAAI,aAAa,SAAUC,MAAK,KAAK,OAAO;AACnD,cAAM,OAAOA,MAAK,KAAK,KAAK;AAAA,MAC9B,CAAC;AACD,WAAK,YAAY,KAAK,EAAE;AAAA,IAC1B;AAAA,EACF;AACA,EAAAD,mBAAkB,UAAU,OAAO,SAAU,MAAM,OAAO;AACxD,QAAI,KAAK,EAAE,UAAW,QAAO,IAAI,MAAM,CAAC;AACxC,SAAK,EAAE,KAAK,MAAM,KAAK;AAAA,EACzB;AACA,EAAAA,mBAAkB,cAAc;AAChC,SAAOA;AACT,EAAE;AAKF,IAAI,QAAqB,WAAY;AAKnC,WAASE,OAAM,IAAI;AACjB,SAAK,SAAS;AACd,SAAK,IAAI,CAAC;AACV,SAAK,IAAI;AAAA,MACP,GAAG;AAAA,IACL;AACA,SAAK,IAAI;AAAA,EACX;AAMA,EAAAA,OAAM,UAAU,OAAO,SAAU,OAAO,OAAO;AAC7C,QAAI,QAAQ;AACZ,QAAI,CAAC,KAAK,OAAQ,KAAI,CAAC;AACvB,QAAI,CAAC,KAAK,EAAG,KAAI,CAAC;AAClB,QAAI,KAAK,IAAI,GAAG;AACd,UAAI,MAAM,KAAK,IAAI,KAAK,GAAG,MAAM,MAAM;AACvC,UAAI,QAAQ,MAAM,SAAS,GAAG,GAAG;AACjC,WAAK,KAAK;AACV,UAAI,KAAK,EAAG,MAAK,EAAE,KAAK,OAAO,CAAC,KAAK,CAAC;AAAA,UAAO,MAAK,EAAE,CAAC,EAAE,KAAK,KAAK;AACjE,cAAQ,MAAM,SAAS,GAAG;AAC1B,UAAI,MAAM,OAAQ,QAAO,KAAK,KAAK,OAAO,KAAK;AAAA,IACjD,OAAO;AACL,UAAI,IAAI,GACN,IAAI,GACJC,MAAK,QACL,MAAM;AACR,UAAI,CAAC,KAAK,EAAE,OAAQ,OAAM;AAAA,eAAe,CAAC,MAAM,OAAQ,OAAM,KAAK;AAAA,WAAO;AACxE,cAAM,IAAI,GAAG,KAAK,EAAE,SAAS,MAAM,MAAM;AACzC,YAAI,IAAI,KAAK,CAAC,GAAG,IAAI,IAAI,OAAO,KAAK,EAAE,MAAM;AAAA,MAC/C;AACA,UAAI,IAAI,IAAI,QACV,KAAK,KAAK,GACV,MAAM,MAAM,KAAK;AACnB,UAAI,UAAU,WAAY;AACxB,YAAIC;AACJ,YAAI,MAAM,GAAG,KAAK,CAAC;AACnB,YAAI,OAAO,UAAW;AACpB,cAAI,GAAGD,MAAK;AACZ,iBAAO,IAAI;AACX,iBAAO,IAAI;AACX,cAAI,KAAK,GAAG,KAAK,IAAI,CAAC,GACpB,QAAQ,GAAG,KAAK,IAAI,CAAC,GACrBE,KAAI,KAAK,MACT,KAAK,KAAK,GACV,MAAM,GAAG,KAAK,IAAI,EAAE,GACpB,KAAK,GAAG,KAAK,IAAI,EAAE;AACrB,cAAI,IAAI,IAAI,KAAK,MAAM,IAAI;AACzB,gBAAI,SAAS,CAAC;AACd,mBAAO,EAAE,QAAQ,MAAM;AACvB,gBAAI;AACJ,gBAAI,OAAO,GAAG,KAAK,IAAI,EAAE,GACvB,OAAO,GAAG,KAAK,IAAI,EAAE;AACvB,gBAAI,OAAO,UAAU,IAAI,SAAS,IAAI,IAAI,KAAK,KAAK,GAAG,GAAG,CAACA,EAAC;AAC5D,gBAAI,QAAQ,YAAY;AACtB,cAAAD,OAAK,KAAK,CAAC,EAAE,IAAI,KAAK,KAAK,CAAC,GAAG,OAAOA,KAAG,CAAC,GAAG,OAAOA,KAAG,CAAC;AAAA,YAC1D,WAAW,GAAI,QAAO;AACtB,iBAAK;AACL,mBAAO,IAAI;AACX,gBAAI;AACJ,gBAAI,SAAS;AAAA,cACX,MAAM;AAAA,cACN,aAAa;AAAA,cACb,OAAO,WAAY;AACjB,oBAAI,CAAC,OAAO,OAAQ,KAAI,CAAC;AACzB,oBAAI,CAAC,KAAM,QAAO,OAAO,MAAM,IAAI,IAAI;AAAA,qBAAO;AAC5C,sBAAI,MAAM,MAAM,EAAE,KAAK;AACvB,sBAAI,CAAC,IAAK,QAAO,OAAO,IAAI,IAAI,8BAA8B,OAAO,CAAC,GAAG,MAAM,KAAK;AACpF,wBAAM,OAAO,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,MAAM,MAAM,IAAI;AACzD,sBAAI,SAAS,SAAUE,MAAKC,MAAKC,QAAO;AACtC,2BAAO,OAAOF,MAAKC,MAAKC,MAAK;AAAA,kBAC/B;AACA,2BAAS,KAAK,GAAG,SAAS,QAAQ,KAAK,OAAO,QAAQ,MAAM;AAC1D,wBAAID,OAAM,OAAO,EAAE;AACnB,wBAAI,KAAKA,MAAK,KAAK;AAAA,kBACrB;AACA,sBAAI,MAAM,EAAE,CAAC,KAAK,UAAU,MAAM,EAAG,OAAM,IAAI;AAAA,sBAAS,KAAI,KAAK,IAAI,IAAI;AAAA,gBAC3E;AAAA,cACF;AAAA,cACA,WAAW,WAAY;AACrB,oBAAI,OAAO,IAAI,UAAW,KAAI,UAAU;AAAA,cAC1C;AAAA,YACF;AACA,gBAAI,QAAQ,EAAG,QAAO,OAAO,MAAM,OAAO,eAAe;AACzD,mBAAO,OAAO,MAAM;AAAA,UACtB;AACA,iBAAO;AAAA,QACT,WAAW,IAAI;AACb,cAAI,OAAO,WAAW;AACpB,YAAAJ,MAAK,KAAK,MAAM,MAAM,MAAM,IAAI,IAAI,GAAG,OAAO,IAAI;AAClD,mBAAO;AAAA,UACT,WAAW,OAAO,UAAW;AAC3B,YAAAA,MAAK,KAAK,GAAG,IAAI,GAAG,OAAO,IAAI;AAC/B,mBAAO;AAAA,UACT;AAAA,QACF;AAAA,MACF;AACA,UAAI,SAAS;AACb,aAAO,IAAI,IAAI,GAAG,EAAE,GAAG;AACrB,YAAI,UAAU,QAAQ;AACtB,YAAI,YAAY,QAAS;AAAA,MAC3B;AACA,WAAK,IAAI;AACT,UAAI,KAAK,GAAG;AACV,YAAI,MAAM,IAAI,IAAI,SAAS,GAAGA,MAAK,MAAM,MAAM,MAAM,MAAM,GAAG,KAAKA,MAAK,EAAE,KAAK,aAAa,EAAE,IAAI,IAAI,SAAS,GAAG,CAAC;AACnH,YAAI,IAAK,KAAI,KAAK,KAAK,CAAC,CAAC,CAAC;AAAA,YAAO,MAAK,EAAE,EAAE,KAAK,EAAE,EAAE,KAAK,GAAG;AAAA,MAC7D;AACA,UAAI,IAAI,EAAG,QAAO,KAAK,KAAK,IAAI,SAAS,CAAC,GAAG,KAAK;AAClD,WAAK,IAAI,IAAI,SAAS,CAAC;AAAA,IACzB;AACA,QAAI,OAAO;AACT,UAAI,KAAK,EAAG,KAAI,EAAE;AAClB,WAAK,IAAI;AAAA,IACX;AAAA,EACF;AAMA,EAAAD,OAAM,UAAU,WAAW,SAAU,SAAS;AAC5C,SAAK,EAAE,QAAQ,WAAW,IAAI;AAAA,EAChC;AACA,SAAOA;AACT,EAAE;;;ACp5EF,IAAM,eAAN,MAAmB;AAAA;AAAA;AAAA;AAAA,EAIjB,cAAc;AAOZ,SAAK,eAAe;AAAA,EACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,gBAAgB,OAAO;AACrB,SAAK,eAAe;AAAA,EACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,MAAM,OAAO,QAAQ,SAAS,SAAS;AACrC,SAAK,WAAW,OAAO,OAAO,EAAE,KAAK,MAAM,EAAE,MAAM,OAAO;AAAA,EAC5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUM,WAAW,IAAqB;AAAA,+CAArB,OAAO,UAAU,CAAC,GAAG;AACpC,gBAAU,OAAO,OAAO;AAAA,QACtB,IAAI;AAAA,UACF,WAAW;AAAA,YACT,MAAM;AAAA,UACR;AAAA,UACA,gBAAgB;AAAA,YACd,WAAW;AAAA,UACb;AAAA,QACF;AAAA,QACA,4BAA4B;AAAA,QAC5B,qBAAqB;AAAA,QACrB,gBAAgB;AAAA,MAClB,GAAG,OAAO;AACV,YAAM,QAAQ,CAAC;AACf,YAAM,gBAAgB;AAGtB,YAAM,aAAa,IAAI;AACvB,UAAI,SAAS,YAAY;AACzB,gBAAU,gBAAgB,OAAO;AACjC,YAAM,YAAY,CAAC;AACnB,YAAM,WAAW,CAAC;AAClB,YAAM,gBAAgB,YAAU;AAC9B,YAAI,OAAO,QAAQ;AACjB,gBAAM,WAAW,OAAO;AACxB,gBAAM,WAAW,OAAO;AACxB,cAAI,SAAS,wBAAwB;AACnC,kBAAM,mBAAmB,yBAAyB,SAAS,KAAK;AAChE,gBAAI,EAAE,oBAAoB,QAAQ;AAChC,oBAAM,aAAa,gBAAgB,QAAQ;AAC3C,oBAAM,gBAAgB,IAAI,qBAAqB,UAAU;AAAA,YAC3D;AACA,gBAAI,EAAE,SAAS,QAAQ,YAAY;AACjC,wBAAU,SAAS,IAAI,IAAI;AAAA,YAC7B;AACA,sBAAU,WAAW,QAAQ,UAAU,UAAU,SAAS,IAAI,CAAC;AAAA,UACjE,OAAO;AACL,oBAAQ,KAAK,2FAA2F,MAAM;AAAA,UAChH;AAAA,QACF,WAAW,OAAO,UAAU;AAC1B,oBAAU,YAAY,MAAM;AAAA,QAC9B;AAAA,MACF,CAAC;AACD,gBAAU,cAAc;AACxB,gBAAU,eAAe,WAAW,UAAU,QAAQ,mBAAmB;AACzE,YAAM,aAAa,IAAI,QAAQ,MAAM;AACrC,eAAS;AACT,iBAAW,MAAM,UAAU;AACzB,YAAI,UAAU,SAAS,EAAE;AACzB,YAAI,QAAQ,wBAAwB,MAAM;AACxC,cAAI,KAAK,iBAAiB,MAAM;AAC9B,kBAAM,IAAI,MAAM,sFAAsF;AAAA,UACxG,OAAO;AACL,sBAAU,MAAM,KAAK,aAAa,WAAW,OAAO;AAAA,UACtD;AAAA,QACF;AACA,cAAM,SAAS,cAAc,QAAQ,OAAO,QAAQ,OAAO,QAAQ,cAAc;AACjF,cAAM,OAAO,MAAM,IAAI,QAAQ,aAAW,OAAO,OAAO,SAAS,aAAa,CAAC,CAAC;AAChF,cAAM,oBAAoB,EAAE,MAAM,IAAI,IAAI,WAAW,MAAM,KAAK,YAAY,CAAC;AAAA,MAC/E;AAKA,UAAI,SAAS;AACb,iBAAW,YAAY,OAAO;AAC5B,cAAM,OAAO,MAAM,QAAQ;AAC3B,cAAM,aAAa,KAAK,SAAS;AACjC,kBAAU;AACV,cAAM,cAAc,SAAS;AAC7B,YAAI,gBAAgB,GAAG;AACrB,gBAAM,YAAY,KAAK;AACvB,gBAAM,UAAU,IAAI,WAAW,SAAS;AACxC,gBAAM,QAAQ,IAAI,CAAC,MAAM;AAAA,YACvB,OAAO;AAAA,cACL,OAAO;AAAA,YACT;AAAA,UACF,CAAC;AAAA,QACH;AACA,iBAAS,KAAK;AAAA,MAChB;AACA,aAAO,QAAQ,OAAO;AAAA,QACpB,OAAO;AAAA,MACT,CAAC;AAAA,IACH;AAAA;AACF;AACA,SAAS,cAAc,OAAO,OAAO,gBAAgB;AACnD,MAAI,OAAO,qBAAqB,eAAe,iBAAiB,oBAAoB,OAAO,sBAAsB,eAAe,iBAAiB,qBAAqB,OAAO,oBAAoB,eAAe,iBAAiB,mBAAmB,OAAO,gBAAgB,eAAe,iBAAiB,aAAa;AACtT,UAAM,QAAQ,iBAAiB,KAAK,IAAI,MAAM,OAAO,MAAM,MAAM;AACjE,UAAM,SAAS,SAAS,cAAc,QAAQ;AAC9C,WAAO,QAAQ,MAAM,QAAQ,KAAK,IAAI,GAAG,KAAK;AAC9C,WAAO,SAAS,MAAM,SAAS,KAAK,IAAI,GAAG,KAAK;AAChD,UAAM,UAAU,OAAO,WAAW,IAAI;AAItC,QAAI,UAAU,MAAM;AAClB,cAAQ,UAAU,GAAG,OAAO,MAAM;AAClC,cAAQ,MAAM,GAAG,EAAE;AAAA,IACrB;AACA,YAAQ,UAAU,OAAO,GAAG,GAAG,OAAO,OAAO,OAAO,MAAM;AAC1D,WAAO;AAAA,EACT,OAAO;AACL,UAAM,IAAI,MAAM,2EAA2E;AAAA,EAC7F;AACF;AAIA,IAAM,YAAY;AAClB,SAAS,cAAc;AACrB,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWT;AACA,SAAS,gBAAgB,SAAS;AAChC,QAAM,YAAY,QAAQ,+BAA+B,OAAO;AAAA,wCAC1B,QAAQ,GAAG,UAAU,IAAI;AAAA,kDACf,QAAQ,GAAG,eAAe,SAAS;AAAA,KAChF;AACH,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaJ,SAAS;AAAA;AAEd;AACA,SAAS,gBAAgB;AACvB,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAMT;AACA,SAAS,qBAAqB,cAAc;AAC1C,MAAI,SAAS,YAAY;AACzB,YAAU;AACV,SAAO,QAAQ,MAAM;AACvB;AAIA,SAAS,WAAW,QAAQ,UAAU,UAAU;AAC9C,QAAM,OAAO,YAAY,OAAO;AAChC,QAAM,YAAY,YAAY,OAAO,WAAW;AAChD,MAAI,OAAO,YAAY,YAAY,IAAI,GAAG;AACxC,YAAQ,KAAK,6DAA6D,MAAM;AAAA,EAClF;AACA,SAAO,iBAAiB,IAAI;AAAA,kDACoB,SAAS,EAAE;AAAA;AAAA;AAAA;AAAA,mCAI1B,SAAS;AAAA;AAAA;AAAA,kDAGM,SAAS,EAAE;AAAA;AAAA;AAAA;AAI7D;AACA,SAAS,YAAY,QAAQ;AAC3B,QAAM,QAAQ,OAAO;AACrB,SAAO,KAAK,eAAe,OAAO,CAAC,CAAC,KAAK,eAAe,OAAO,CAAC,CAAC,KAAK,eAAe,OAAO,CAAC,CAAC,KAAK,eAAe,OAAO,EAAE,CAAC;AAC9H;AACA,SAAS,eAAe,OAAO,QAAQ;AACrC,SAAO,IAAI,MAAM,SAAS,CAAC,CAAC,KAAK,MAAM,SAAS,CAAC,CAAC,KAAK,MAAM,SAAS,CAAC,CAAC,KAAK,MAAM,SAAS,CAAC,CAAC;AAChG;AAIA,SAAS,gBAAgB,UAAU;AACjC,QAAM,OAAO,UAAU,QAAQ;AAC/B,SAAO;AAAA;AAAA;AAAA,EAGP,IAAI;AAAA;AAAA;AAGN;AACA,SAAS,UAAU,UAAU;AAC3B,QAAM,OAAO;AACb,QAAMO,cAAa,SAAS;AAC5B,QAAM,QAAQA,YAAW,SAAS;AAClC,SAAO;AAAA,aACI,IAAI;AAAA;AAAA,8BAEa,qBAAqB,QAAQ,CAAC;AAAA,+BAC7B,uBAAuB,QAAQ,CAAC;AAAA,0BACrC,kBAAkBA,YAAW,QAAQ,KAAK,CAAC;AAAA;AAAA;AAAA,wBAG7C,kBAAkBA,YAAW,UAAU,KAAK,CAAC;AAAA,EACnE,cAAcA,WAAU,CAAC;AAAA;AAAA;AAAA;AAI3B;AACA,SAAS,qBAAqB,UAAU;AACtC,QAAM,QAAQ,SAAS,UAAU,OAAO,SAAS,MAAM,QAAQ,SAAS,WAAW,SAAS;AAC5F,SAAO,MAAM,QAAQ,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,IAAI;AAC3C;AACA,SAAS,uBAAuB,UAAU;AACxC,QAAM,QAAQ,SAAS;AACvB,QAAM,QAAQ,CAAC;AACf,MAAI,UAAU,MAAM;AAClB,aAAS,IAAI,GAAG,IAAI,MAAM,OAAO,KAAK;AACpC,YAAM,KAAK,MAAM,KAAK,CAAC,CAAC;AAAA,IAC1B;AAAA,EACF,OAAO;AACL,UAAM,SAAS,SAAS,WAAW,SAAS;AAC5C,aAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,YAAM,KAAK,CAAC;AAAA,IACd;AAAA,EACF;AACA,SAAO,MAAM,KAAK,IAAI;AACxB;AACA,SAAS,kBAAkB,WAAW,OAAO;AAC3C,MAAI,cAAc,QAAW;AAC3B,YAAQ,KAAK,gCAAgC;AAC7C,WAAO,MAAM,KAAK,EAAE,KAAK,WAAW,EAAE,KAAK,IAAI;AAAA,EACjD;AACA,QAAM,QAAQ,CAAC;AACf,WAAS,IAAI,GAAG,IAAI,UAAU,OAAO,KAAK;AACxC,UAAM,IAAI,UAAU,KAAK,CAAC;AAC1B,UAAM,IAAI,UAAU,KAAK,CAAC;AAC1B,UAAM,IAAI,UAAU,KAAK,CAAC;AAC1B,UAAM,KAAK,IAAI,EAAE,YAAY,SAAS,CAAC,KAAK,EAAE,YAAY,SAAS,CAAC,KAAK,EAAE,YAAY,SAAS,CAAC,GAAG;AAAA,EACtG;AACA,SAAO,MAAM,KAAK,IAAI;AACxB;AACA,SAAS,kBAAkB,WAAW;AACpC,QAAM,QAAQ,CAAC;AACf,WAAS,IAAI,GAAG,IAAI,UAAU,OAAO,KAAK;AACxC,UAAM,IAAI,UAAU,KAAK,CAAC;AAC1B,UAAM,IAAI,UAAU,KAAK,CAAC;AAC1B,UAAM,KAAK,IAAI,EAAE,YAAY,SAAS,CAAC,KAAK,IAAI,EAAE,YAAY,SAAS,CAAC,GAAG;AAAA,EAC7E;AACA,SAAO,MAAM,KAAK,IAAI;AACxB;AACA,SAAS,cAAcA,aAAY;AACjC,MAAI,SAAS;AACb,WAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,UAAM,KAAK,IAAI,IAAI,IAAI;AACvB,UAAM,YAAYA,YAAW,OAAO,EAAE;AACtC,QAAI,cAAc,QAAW;AAC3B,gBAAU;AAAA,4BACY,EAAE,OAAO,kBAAkB,SAAS,CAAC;AAAA;AAAA;AAAA,IAG7D;AAAA,EACF;AAIA,QAAM,iBAAiBA,YAAW;AAClC,MAAI,mBAAmB,QAAW;AAChC,UAAM,QAAQ,eAAe;AAC7B,cAAU;AAAA,sCACwB,kBAAkB,gBAAgB,KAAK,CAAC;AAAA;AAAA;AAAA,EAG5E;AACA,SAAO;AACT;AAIA,SAAS,eAAe,WAAW,UAAU,sBAAsB,OAAO;AACxE,QAAM,QAAQ,CAAC;AACf,aAAW,QAAQ,WAAW;AAC5B,UAAM,WAAW,UAAU,IAAI;AAC/B,UAAM,KAAK,cAAc,UAAU,UAAU,mBAAmB,CAAC;AAAA,EACnE;AACA,SAAO;AAAA;AAAA,EAEP,MAAM,KAAK,EAAE,CAAC;AAAA;AAAA;AAAA;AAIhB;AACA,SAAS,cAAc,UAAU,UAAU,sBAAsB,OAAO;AAGtE,QAAM,MAAM;AACZ,QAAM,SAAS,CAAC;AAChB,QAAM,WAAW,CAAC;AAClB,WAAS,aAAa,SAAS,SAAS,OAAO;AAC7C,UAAM,KAAK,QAAQ,OAAO,KAAK,MAAM,QAAQ;AAC7C,aAAS,EAAE,IAAI;AACf,UAAM,KAAK,QAAQ,UAAU,IAAI,OAAO,QAAQ,UAAU;AAC1D,UAAM,YAAY;AAAA,MAChB,KAAM;AAAA;AAAA,MAEN,MAAM;AAAA;AAAA,MAEN,MAAM;AAAA;AAAA,IACR;AACA,UAAM,SAAS,QAAQ,OAAO,MAAM;AACpC,UAAM,SAAS,QAAQ,OAAO,MAAM;AACpC,UAAM,WAAW,QAAQ;AAGzB,UAAM,kBAAkB,KAAK,IAAI,QAAQ;AACzC,UAAM,kBAAkB,KAAK,IAAI,QAAQ;AAGzC,WAAO,IAAI,IAAI,OAAO,IAAI,OAAO;AAIjC,QAAI,qBAAqB;AAIvB,aAAO,IAAI,OAAO,IAAI,OAAO;AAC7B,aAAO,IAAI,OAAO,IAAI,OAAO;AAC7B,aAAO,KAAK,kBAAkB,OAAO;AACrC,aAAO,KAAK,kBAAkB;AAAA,IAChC,OAAO;AAEL,aAAO,KAAK,kBAAkB,OAAO;AACrC,aAAO,MAAM,IAAI,mBAAmB,OAAO;AAAA,IAC7C;AACA,WAAO;AAAA,8BACmB,OAAO;AAAA;AAAA;AAAA;AAAA,6BAIR,EAAE;AAAA;AAAA;AAAA;AAAA,4BAIH,OAAO;AAAA;AAAA;AAAA,oDAGiB,SAAS,EAAE,kBAAkB,OAAO;AAAA,8BAC1D,YAAY,MAAM,KAAK,KAAK,QAAQ,SAAS,CAAC;AAAA,2BACjD,aAAa,MAAM,CAAC;AAAA,iCACd,aAAa,MAAM,CAAC;AAAA;AAAA;AAAA;AAAA,wBAI7B,QAAQ,EAAE,IAAI,OAAO;AAAA;AAAA;AAAA,2CAGF,EAAE;AAAA,qDACQ,SAAS,EAAE,gBAAgB,OAAO;AAAA,KAClF,UAAU,SAAY,2BAA2B,YAAY,KAAK,IAAI,EAAE;AAAA,sCACvC,QAAQ,eAAe,eAAe,QAAQ,MAAM;AAAA,2BAC/D,UAAU,QAAQ,KAAK,CAAC;AAAA,2BACxB,UAAU,QAAQ,KAAK,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,KAK9C,SAAS,eAAe,SAAS,YAAY,IAAM,oBAAoB,EAAE;AAAA;AAAA,EAE5E;AACA,MAAI,SAAS,SAAS,YAAY;AAChC,YAAQ,KAAK,oEAAoE,QAAQ;AAAA,EAC3F;AACA,MAAI,SAAS,QAAQ,MAAM;AACzB,WAAO,KAAK,GAAG,GAAG,8DAA8D,SAAS,EAAE,YAAY,SAAS,IAAI,EAAE,uBAAuB;AAC7I,QAAI,SAAS,aAAa;AACxB,aAAO,KAAK,GAAG,GAAG,uDAAuD,SAAS,EAAE,YAAY,SAAS,IAAI,EAAE,qBAAqB;AAAA,IACtI,WAAW,SAAS,YAAY,GAAK;AACnC,aAAO,KAAK,GAAG,GAAG,uDAAuD,SAAS,EAAE,YAAY,SAAS,IAAI,EAAE,qBAAqB;AACpI,aAAO,KAAK,GAAG,GAAG,mCAAmC,SAAS,SAAS,EAAE;AAAA,IAC3E;AACA,aAAS,KAAK,aAAa,SAAS,KAAK,WAAW,SAAS,KAAK,CAAC;AAAA,EACrE,OAAO;AACL,WAAO,KAAK,GAAG,GAAG,iCAAiC,WAAW,SAAS,KAAK,CAAC,EAAE;AAAA,EACjF;AACA,MAAI,SAAS,gBAAgB,MAAM;AACjC,WAAO,KAAK,GAAG,GAAG,+DAA+D,SAAS,EAAE,YAAY,SAAS,YAAY,EAAE,wBAAwB;AACvJ,aAAS,KAAK,aAAa,SAAS,aAAa,YAAY,IAAI,MAAM,SAAS,SAAS,IAAI,SAAS,mBAAmB,SAAS,SAAS,IAAI,SAAS,mBAAmB,SAAS,SAAS,IAAI,SAAS,iBAAiB,CAAC,CAAC;AAAA,EAC/N,WAAW,SAAS,SAAS,OAAO,IAAI,GAAG;AACzC,WAAO,KAAK,GAAG,GAAG,kCAAkC,WAAW,SAAS,QAAQ,CAAC,EAAE;AAAA,EACrF;AACA,MAAI,SAAS,cAAc,MAAM;AAC/B,WAAO,KAAK,GAAG,GAAG,yDAAyD,SAAS,EAAE,YAAY,SAAS,UAAU,EAAE,sBAAsB;AAC7I,aAAS,KAAK,aAAa,SAAS,WAAW,QAAQ,CAAC;AAAA,EAC1D;AACA,MAAI,SAAS,UAAU,MAAM;AAC3B,WAAO,KAAK,GAAG,GAAG,yDAAyD,SAAS,EAAE,YAAY,SAAS,MAAM,EAAE,uBAAuB;AAC1I,aAAS,KAAK,aAAa,SAAS,OAAO,aAAa,IAAI,MAAM,SAAS,gBAAgB,SAAS,gBAAgB,SAAS,cAAc,CAAC,CAAC;AAAA,EAC/I;AACA,MAAI,SAAS,iBAAiB,MAAM;AAClC,WAAO,KAAK,GAAG,GAAG,yDAAyD,SAAS,EAAE,YAAY,SAAS,aAAa,EAAE,uBAAuB;AACjJ,aAAS,KAAK,aAAa,SAAS,cAAc,aAAa,IAAI,MAAM,SAAS,WAAW,SAAS,WAAW,SAAS,SAAS,CAAC,CAAC;AAAA,EACvI,OAAO;AACL,WAAO,KAAK,GAAG,GAAG,4BAA4B,SAAS,SAAS,EAAE;AAAA,EACpE;AACA,MAAI,SAAS,iBAAiB,MAAM;AAClC,WAAO,KAAK,GAAG,GAAG,wDAAwD,SAAS,EAAE,YAAY,SAAS,aAAa,EAAE,sBAAsB;AAC/I,aAAS,KAAK,aAAa,SAAS,cAAc,YAAY,IAAI,MAAM,SAAS,WAAW,SAAS,WAAW,SAAS,SAAS,CAAC,CAAC;AAAA,EACtI,OAAO;AACL,WAAO,KAAK,GAAG,GAAG,2BAA2B,SAAS,SAAS,EAAE;AAAA,EACnE;AACA,MAAI,SAAS,aAAa,MAAM;AAC9B,WAAO,KAAK,GAAG,GAAG,uDAAuD,SAAS,EAAE,YAAY,SAAS,SAAS,EAAE,qBAAqB;AACzI,WAAO,KAAK,GAAG,GAAG,wCAAwC;AAC1D,aAAS,KAAK,aAAa,SAAS,UAAU,SAAS,CAAC;AAAA,EAC1D,OAAO;AACL,WAAO,KAAK,GAAG,GAAG,0BAA0B,SAAS,OAAO,EAAE;AAAA,EAChE;AACA,MAAI,SAAS,wBAAwB;AACnC,QAAI,SAAS,iBAAiB,MAAM;AAClC,aAAO,KAAK,GAAG,GAAG,yDAAyD,SAAS,EAAE,YAAY,SAAS,aAAa,EAAE,uBAAuB;AACjJ,eAAS,KAAK,aAAa,SAAS,cAAc,aAAa,IAAI,MAAM,SAAS,WAAW,SAAS,WAAW,SAAS,SAAS,CAAC,CAAC;AAAA,IACvI,OAAO;AACL,aAAO,KAAK,GAAG,GAAG,4BAA4B,SAAS,SAAS,EAAE;AAAA,IACpE;AACA,QAAI,SAAS,0BAA0B,MAAM;AAC3C,aAAO,KAAK,GAAG,GAAG,kEAAkE,SAAS,EAAE,YAAY,SAAS,sBAAsB,EAAE,gCAAgC;AAC5K,eAAS,KAAK,aAAa,SAAS,uBAAuB,sBAAsB,IAAI,MAAM,SAAS,oBAAoB,SAAS,oBAAoB,SAAS,kBAAkB,CAAC,CAAC;AAAA,IACpL,OAAO;AACL,aAAO,KAAK,GAAG,GAAG,qCAAqC,SAAS,kBAAkB,EAAE;AAAA,IACtF;AACA,WAAO,KAAK,GAAG,GAAG,sBAAsB,SAAS,GAAG,EAAE;AAAA,EACxD;AACA,SAAO;AAAA,0BACiB,SAAS,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA,EAKnC,OAAO,KAAK,IAAI,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,yDAKsC,SAAS,EAAE;AAAA;AAAA,EAElE,SAAS,KAAK,IAAI,CAAC;AAAA;AAAA;AAAA;AAIrB;AACA,SAAS,WAAW,OAAO;AACzB,SAAO,IAAI,MAAM,CAAC,KAAK,MAAM,CAAC,KAAK,MAAM,CAAC;AAC5C;AACA,SAAS,YAAY,OAAO;AAC1B,SAAO,IAAI,MAAM,CAAC,KAAK,MAAM,CAAC,KAAK,MAAM,CAAC;AAC5C;AACA,SAAS,aAAa,QAAQ;AAC5B,SAAO,IAAI,OAAO,CAAC,KAAK,OAAO,CAAC;AAClC;AACA,SAAS,YAAYC,SAAQ;AAC3B,QAAM,OAAOA,QAAO,OAAOA,QAAO,OAAO,YAAYA,QAAO;AAC5D,QAAM,YAAY,YAAYA,QAAO,WAAW;AAChD,MAAIA,QAAO,YAAY,YAAY,IAAI,GAAG;AACxC,YAAQ,KAAK,6DAA6DA,OAAM;AAAA,EAClF;AACA,MAAIA,QAAO,sBAAsB;AAC/B,WAAO,eAAe,IAAI;AAAA;AAAA,kCAEI,SAAS;AAAA;AAAA;AAAA,6BAGdA,QAAO,KAAK,YAAY,SAAS,CAAC,KAAKA,QAAO,IAAI,YAAY,SAAS,CAAC;AAAA,kCACnE,KAAK,IAAIA,QAAO,IAAI,IAAI,KAAK,IAAIA,QAAO,KAAK,KAAK,IAAI,YAAY,SAAS,CAAC;AAAA,gCAC9E,KAAK,IAAIA,QAAO,GAAG,IAAI,KAAK,IAAIA,QAAO,MAAM,KAAK,IAAI,YAAY,SAAS,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,EAK1G,OAAO;AACL,WAAO,eAAe,IAAI;AAAA;AAAA,kCAEI,SAAS;AAAA;AAAA;AAAA,6BAGdA,QAAO,KAAK,YAAY,SAAS,CAAC,KAAKA,QAAO,IAAI,YAAY,SAAS,CAAC;AAAA,yBAC5EA,QAAO,eAAe,EAAE,YAAY,SAAS,CAAC;AAAA,2BAC5CA,QAAO,MAAM,YAAY,SAAS,CAAC;AAAA,gCAC9BA,QAAO,aAAa,EAAE,YAAY,SAAS,CAAC;AAAA;AAAA,8BAE9CA,QAAO,cAAc,EAAE,YAAY,SAAS,CAAC;AAAA;AAAA;AAAA;AAAA,EAIzE;AACF;;;AC/gBO,IAAM,0BAA0B,kBAAgB,iBAAe;AACpE,MAAI;AACF,UAAM,cAAc,iBAAiB,WAAW;AAChD,UAAM,SAAS,YAAY,SAAS,YAAY,CAAC,EAAE,QAAQ,CAAC,GAAG,OAAO,eAAa,aAAa,UAAU,SAAS,OAAO,EAAE,IAAI,eAAa,UAAU,KAAK,EAAE,OAAO,UAAQ,aAAa,QAAQ,IAAI,IAAI,EAAE;AAC5M,WAAO,IAAI,IAAI,KAAK;AAAA,EACtB,SAAS,QAAQ;AAAA,EAAC;AAClB,SAAO,oBAAI,IAAI;AACjB;;;AC5BA,IAAIC,cAAwC,SAAU,YAAYC,SAAQ,KAAKC,OAAM;AACnF,MAAIC,KAAI,UAAU,QAChB,IAAIA,KAAI,IAAIF,UAASC,UAAS,OAAOA,QAAO,OAAO,yBAAyBD,SAAQ,GAAG,IAAIC,OAC3FE;AACF,MAAI,OAAO,YAAY,YAAY,OAAO,QAAQ,aAAa,WAAY,KAAI,QAAQ,SAAS,YAAYH,SAAQ,KAAKC,KAAI;AAAA,MAAO,UAAS,IAAI,WAAW,SAAS,GAAG,KAAK,GAAG,IAAK,KAAIE,KAAI,WAAW,CAAC,EAAG,MAAKD,KAAI,IAAIC,GAAE,CAAC,IAAID,KAAI,IAAIC,GAAEH,SAAQ,KAAK,CAAC,IAAIG,GAAEH,SAAQ,GAAG,MAAM;AAC/Q,SAAOE,KAAI,KAAK,KAAK,OAAO,eAAeF,SAAQ,KAAK,CAAC,GAAG;AAC9D;AAQA,IAAI,iBAAiB;AACrB,IAAI,uBAAuB;AAC3B,IAAM,kBAAkB;AACxB,IAAM,qBAAqB,wBAAwB,CAAC,cAAc,gBAAgB,SAAS,MAAM,CAAC;AAClG,IAAM,mBAAmB;AACzB,IAAM,SAAS;AAAA,EACb,YAAY;AAAA,EACZ,cAAc;AAAA,EACd,OAAO;AAAA,EACP,MAAM;AACR;AACA,IAAM,qBAAqB,OAAO,mBAAmB;AACrD,IAAM,oBAAoB,OAAO,kBAAkB;AAC5C,IAAM,mBAAmB,OAAO,iBAAiB;AACjD,IAAM,sBAAsB,OAAO,oBAAoB;AAC9D,IAAM,iBAAiB,OAAO,eAAe;AAC7C,IAAM,UAAU,OAAO,QAAQ;AAC/B,IAAM,WAAW,OAAO,SAAS;AACjC,IAAM,YAAY,OAAO,UAAU;AACnC,IAAM,WAAW,OAAO,SAAS;AACjC,IAAM,4BAA4B,OAAO,0BAA0B;AACnE,IAAM,cAAc,OAAO,YAAY;AACvC,IAAM,gBAAgB,OAAO,cAAc;AAC3C,IAAM,WAAW,OAAO,SAAS;AACjC,IAAM,gBAAgB,OAAO,cAAc;AAC3C,IAAM,eAAe,OAAO,aAAa;AAClC,IAAM,UAAU,CAAAI,wBAAsB;AAC3C,MAAIC,MAAIC,MAAIC,KAAIC,KAAIC,KAAIC,KAAIC,KAAIC,KAAIC,KAAIC;AAAA,EACxC,MAAM,6BAA6BV,oBAAmB;AAAA,IACpD,cAAc;AACZ,YAAM,GAAG,SAAS;AAClB,WAAK,KAAK;AACV,WAAK,UAAU;AACf,WAAK,uBAAuB;AAC5B,WAAK,cAAc;AACnB,WAAK,UAAU;AACf,WAAK,SAAS;AACd,WAAK,gBAAgB;AACrB,WAAKC,IAAE,IAAI;AAGX,WAAKC,IAAE,IAAI,KAAK,WAAW,cAAc,YAAY;AACrD,WAAKC,GAAE,IAAI,SAAS,cAAc,GAAG;AACrC,WAAKC,GAAE,IAAI,oBAAI,IAAI;AACnB,WAAKC,GAAE,IAAI,OAAO;AAClB,WAAKC,GAAE,IAAI;AACX,WAAKC,GAAE,IAAI,WAAS;AAClB,cAAM,eAAe;AACrB,aAAK,WAAW;AAAA,MAClB;AACA,WAAKC,GAAE,IAAI,CAAC;AAAA,QACV;AAAA,MACF,MAAM;AACJ,YAAI,WAAW,SAAS,kBAAkB,KAAK,SAAS,EAAE,WAAW,mBAAmB,KAAK,MAAM,GAAG;AACpG,eAAK,aAAa,aAAa,MAAM;AACrC,eAAK,cAAc,IAAI,YAAY,aAAa;AAAA,YAC9C,QAAQ;AAAA,cACN;AAAA,YACF;AAAA,UACF,CAAC,CAAC;AACF,cAAI,WAAW,SAAS,gBAAgB;AACtC,iBAAK,gBAAgB,aAAa;AAAA,UACpC,WAAW,WAAW,SAAS,iBAAiB;AAC9C,iBAAK,aAAa,eAAe,WAAW,QAAQ;AAAA,UACtD;AAAA,QACF;AAAA,MACF;AACA,WAAKC,GAAE,IAAI,CAAC;AAAA,QACV;AAAA,MACF,MAAM;AACJ,aAAK,aAAa,eAAe,MAAM;AACvC,aAAK,cAAc,IAAI,YAAY,eAAe;AAAA,UAChD,QAAQ;AAAA,YACN;AAAA,UACF;AAAA,QACF,CAAC,CAAC;AAAA,MACJ;AACA,WAAKC,GAAE,IAAI,WAAS;AAClB,YAAI,MAAM,QAAQ,qCAAqC;AACrD,eAAK,cAAc,IAAI,YAAY,0BAA0B,CAAC;AAAA,QAChE;AAAA,MACF;AAAA,IACF;AAAA,IACA,IAAI,gBAAgB;AAClB,aAAO,KAAK,OAAO,MAAM,OAAO;AAAA,IAClC;AAAA,IACA,oBAAoB;AAClB,YAAM,kBAAkB;AACxB,WAAK,SAAS,EAAE,WAAW,iBAAiB,UAAU,KAAK,WAAW,CAAC;AACvE,WAAK,aAAa,aAAa,SAAS,cAAc;AACtD,WAAK,SAAS,EAAE,WAAW,iBAAiB,YAAY,KAAK,aAAa,CAAC;AAC3E,WAAK,SAAS,EAAE,iBAAiB,WAAW,KAAK,QAAQ,CAAC;AAAA,IAC5D;AAAA,IACA,uBAAuB;AACrB,YAAM,qBAAqB;AAC3B,WAAK,SAAS,EAAE,WAAW,oBAAoB,UAAU,KAAK,WAAW,CAAC;AAC1E,WAAK,SAAS,EAAE,WAAW,oBAAoB,YAAY,KAAK,aAAa,CAAC;AAC9E,WAAK,SAAS,EAAE,oBAAoB,WAAW,KAAK,QAAQ,CAAC;AAAA,IAC/D;AAAA,IACA,OAAO,mBAAmB;AACxB,YAAM,OAAO,iBAAiB;AAC9B,UAAI,kBAAkB,IAAI,SAAS,GAAG;AACpC,aAAK,MAAM,EAAE,WAAW,KAAK,YAAY;AAAA,MAC3C;AACA,UAAI,kBAAkB,IAAI,aAAa,GAAG;AACxC,aAAK,MAAM,EAAE,aAAa;AAC1B,aAAK,YAAY,EAAE;AAAA,MACrB;AACA,UAAI,kBAAkB,IAAI,SAAS,GAAG;AACpC,aAAK,QAAQ,IAAI,mBAAmB,KAAK,OAAO;AAAA,MAClD;AACA,UAAI,kBAAkB,IAAI,IAAI,KAAK,kBAAkB,IAAI,SAAS,KAAK,kBAAkB,IAAI,KAAK,KAAK,kBAAkB,IAAI,QAAQ,KAAK,kBAAkB,IAAI,sBAAsB,GAAG;AACvL,aAAK,aAAa,EAAE;AAAA,MACtB;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOM,aAAa;AAAA;AACjB,gBAAQ,KAAK,OAAO,GAAG;AAAA,UACrB,KAAK,OAAO;AACV,kBAAM,KAAK,mBAAmB,EAAE;AAChC;AAAA,UACF,KAAK,OAAO;AACV,kBAAM,KAAK,iBAAiB,EAAE;AAC9B;AAAA,UACF,KAAK,OAAO;AACV,iBAAK,gBAAgB,EAAE;AACvB;AAAA,UACF;AACE,oBAAQ,KAAK,mGACc;AAC3B;AAAA,QACJ;AAAA,MACF;AAAA;AAAA,IACA,EAAQT,OAAK,gBAAgBC,OAAK,oBAAoBC,MAAK,WAAWC,MAAK,UAAUC,MAAK,SAASC,MAAK,UAAUC,MAAK,2BAA2BC,MAAK,aAAaC,MAAK,eAAeC,MAAK,UAAU,cAAc,IAAI;AAAA;AACvN,YAAIC;AACJ,YAAI,SAAS,OAAO;AACpB,YAAI,KAAK,IAAI;AACX,cAAI,KAAK,OAAO,MAAM;AACpB,uBAAW,SAAS,KAAK,QAAQ,GAAG;AAClC,kBAAI,UAAU,WAAW,yBAAyB,CAAC,mBAAmB,MAAM,KAAK,SAAS,EAAE,WAAW,qBAAqB,IAAI;AAC9H,yBAAS,OAAO;AAChB;AAAA,cACF;AACA,kBAAI,UAAU,kBAAkB,CAAC,yBAAyB,4BAA4B,UAAU,iBAAiB,UAAU,cAAc,0BAA0BA,OAAM,MAAM,UAAU,cAAc,qBAAqB,CAAC,YAAY,CAAC,GAAG,gBAAgB,QAAQA,QAAO,SAAS,SAASA,IAAG,SAAS,IAAI,KAAK;AACjT,yBAAS,OAAO;AAChB;AAAA,cACF;AACA,kBAAI,UAAU,gBAAgB,2BAA2B;AACvD,yBAAS,OAAO;AAChB;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAGA,cAAI,WAAW,OAAO,QAAQ,KAAK,UAAU,QAAQ,2BAA2B;AAC9E,qBAAS,OAAO;AAAA,UAClB;AAAA,QACF;AACA,YAAI,WAAW,OAAO,MAAM;AAC1B,eAAK,kBAAkB,EAAE,UAAU,IAAI,SAAS;AAChD,eAAK,kBAAkB,EAAE,iBAAiB,SAAS,KAAK,yBAAyB,CAAC;AAAA,QACpF,WAAW,KAAK,kBAAkB,EAAE,UAAU,SAAS,SAAS,GAAG;AACjE,eAAK,kBAAkB,EAAE,oBAAoB,SAAS,KAAK,yBAAyB,CAAC;AACrF,eAAK,kBAAkB,EAAE,UAAU,OAAO,SAAS;AAEnD,gBAAM,SAAS,SAAS;AACxB,eAAK,aAAa,aAAa,MAAM;AACrC,eAAK,cAAc,IAAI,YAAY,aAAa;AAAA,YAC9C,QAAQ;AAAA,cACN;AAAA,YACF;AAAA,UACF,CAAC,CAAC;AAAA,QACJ;AACA,aAAK,OAAO,IAAI;AAAA,MAClB;AAAA;AAAA,IACA,CAAO,iBAAiB,IAAI;AAAA;AAC1B,gBAAQ,IAAI,2CAA2C;AACvD,cAAM,KAAK,YAAY,EAAE;AACzB,YAAI;AACF,eAAK,kBAAkB,EAAE,oBAAoB,SAAS,KAAK,yBAAyB,CAAC;AACrF,gBAAM;AAAA,YACJ;AAAA,UACF,IAAI,KAAK,SAAS;AAClB,qBAAW,cAAc,KAAK,gBAAgB;AAC9C,gBAAM,WAAW,QAAQ,KAAK,MAAM,GAAG,KAAK,aAAa;AAAA,QAC3D,SAAS,OAAO;AACd,kBAAQ,KAAK,gDAAgD;AAC7D,kBAAQ,MAAM,KAAK;AACnB,gBAAM,KAAK,SAAS,EAAE,WAAW,eAAe;AAChD,2BAAiB;AACjB,kBAAQ,KAAK,8BAA8B;AAC3C,gBAAM,KAAK,aAAa,EAAE;AAC1B,eAAK,WAAW;AAAA,QAClB,UAAE;AACA,eAAK,aAAa,EAAE;AAAA,QACtB;AAAA,MACF;AAAA;AAAA,IACA,CAAO,YAAY,IAAI;AAAA;AACrB,YAAI,CAAC,KAAK,QAAQ;AAChB,eAAK,QAAQ,IAAI;AACjB,eAAK,aAAa,EAAE;AACpB,gBAAM,aAAa,MAAM,MAAM;AAC/B,eAAK,QAAQ,IAAI;AAAA,QACnB;AAAA,MACF;AAAA;AAAA,IACA,CAAC,qBAAqB,IAAI;AACxB,aAAO,MAAM,qBAAqB,EAAE,KAAK,KAAK,QAAQ;AAAA,IACxD;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,CAAC,gBAAgB,IAAI;AACnB,YAAM,WAAW,KAAK,SAAS,SAAS;AACxC,YAAM,cAAc,IAAI,IAAI,QAAQ;AACpC,YAAM,WAAW,IAAI,IAAI,KAAK,KAAK,QAAQ;AAC3C,UAAI,SAAS,KAAM,UAAS,OAAO;AACnC,YAAM,SAAS,IAAI,gBAAgB,SAAS,MAAM;AAClD,kBAAY,OAAO;AAEnB,aAAO,IAAI,QAAQ,cAAc;AACjC,UAAI,CAAC,OAAO,IAAI,mBAAmB,GAAG;AACpC,eAAO,IAAI,qBAAqB,MAAM;AAAA,MACxC;AACA,UAAI,KAAK,YAAY,SAAS;AAC5B,eAAO,IAAI,aAAa,OAAO;AAAA,MACjC;AACA,UAAI,KAAK,gBAAgB,QAAQ;AAC/B,eAAO,IAAI,6BAA6B,MAAM;AAAA,MAChD;AACA,UAAI,OAAO,IAAI,OAAO,GAAG;AACvB,cAAM,WAAW,IAAI,IAAI,OAAO,IAAI,OAAO,GAAG,QAAQ;AACtD,eAAO,IAAI,SAAS,SAAS,SAAS,CAAC;AAAA,MACzC;AACA,UAAI,OAAO,IAAI,MAAM,GAAG;AACtB,cAAM,UAAU,IAAI,IAAI,OAAO,IAAI,MAAM,GAAG,QAAQ;AACpD,eAAO,IAAI,QAAQ,QAAQ,SAAS,CAAC;AAAA,MACvC;AACA,YAAM,SAAS,6CAA6C,OAAO,SAAS,IAAI,WAAW,mBAAmB,SAAS,SAAS,CAAC,CAAC,iIAAiI,mBAAmB,YAAY,SAAS,CAAC,CAAC;AAC7S,YAAM,iBAAiB,MAAM;AAC3B,YAAI,KAAK,SAAS,SAAS,iBAAiB;AAC1C,iCAAuB;AAMvB,eAAK,QAAQ,KAAK;AAClB,kBAAQ,KAAK,uDAAuD;AACpE,kBAAQ,KAAK,8BAA8B;AAC3C,eAAK,aAAa,EAAE;AAAA,QAGtB;AAAA,MACF;AACA,WAAK,iBAAiB,cAAc,gBAAgB;AAAA,QAClD,MAAM;AAAA,MACR,CAAC;AACD,WAAK,SAAS,EAAE,aAAa,QAAQ,MAAM;AAC3C,cAAQ,IAAI,kDAAkD;AAC9D,WAAK,SAAS,EAAE,MAAM;AAAA,IACxB;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,CAAO,mBAAmB,IAAI;AAAA;AAC5B,cAAM,eAAe,CAAC,KAAK;AAC3B,aAAK,kBAAkB,EAAE,UAAU,OAAO,SAAS;AACnD,cAAM,YAAY,eAAe,MAAM,KAAK,YAAY,IAAI,KAAK;AACjE,cAAM,WAAW,IAAI,IAAI,WAAW,KAAK,SAAS,SAAS,CAAC;AAC5D,YAAI,cAAc;AAChB,gBAAM,WAAW,KAAK,SAAS,SAAS;AACxC,gBAAM,cAAc,IAAI,IAAI,QAAQ;AACpC,gBAAM,SAAS,IAAI,IAAI,KAAK,KAAK,WAAW;AAC5C,cAAI,OAAO,MAAM;AACf,qBAAS,OAAO,OAAO;AAAA,UACzB;AAAA,QACF;AACA,YAAI,KAAK,YAAY,SAAS;AAC5B,cAAI,SAAS,MAAM;AACjB,qBAAS,QAAQ;AAAA,UACnB;AACA,mBAAS,QAAQ;AAAA,QACnB;AACA,cAAM,SAAS,KAAK,SAAS;AAC7B,eAAO,aAAa,OAAO,IAAI;AAC/B,cAAM,MAAM,SAAS,cAAc,KAAK;AACxC,eAAO,YAAY,GAAG;AACtB,eAAO,aAAa,QAAQ,SAAS,SAAS,CAAC;AAC/C,YAAI,cAAc;AAChB,iBAAO,aAAa,YAAY,YAAY;AAAA,QAC9C;AAGA,eAAO,MAAM,UAAU;AACvB,YAAI,CAAC,OAAO,YAAa,MAAK,WAAW,YAAY,MAAM;AAC3D,gBAAQ,IAAI,gDAAgD;AAC5D,eAAO,MAAM;AACb,eAAO,YAAY,GAAG;AACtB,YAAI,cAAc;AAChB,cAAI,gBAAgB,SAAS;AAAA,QAC/B;AACA,aAAK,kBAAkB,EAAE,UAAU,IAAI,SAAS;AAAA,MAClD;AAAA;AAAA,IACM,cAAc;AAAA;AAClB,cAAM,uBAAuB,KAAK,gBAAgB,EAAE,cAAc,iBAAiB;AACnF,cAAM,KAAK,YAAY,EAAE;AACzB,cAAM;AAAA,UACJ;AAAA,UACA;AAAA,UACA,QAAAf;AAAA,QACF,IAAI,KAAK,MAAM;AACf,YAAI,SAAS,MAAM;AACjB,iBAAO;AAAA,QACT;AACA,YAAI,UAAU;AAEd,YAAI,UAAU,MAAM;AAClB,oBAAU,OAAO;AACjB,iBAAO,UAAU;AAAA,QACnB;AACA,6BAAqB,GAAG;AACxB,cAAM,WAAW,IAAI,aAAa;AAClC,QAAAA,QAAO,OAAO,KAAK;AACnB,cAAM,SAAS,KAAKA,QAAO,QAAQ;AACnC,cAAM,kBAAkB,OAAO,IAAI;AACnC,cAAM,cAAc,MAAM,SAAS,WAAW,OAAO;AAAA,UACnD,gBAAgB,MAAM,KAAK,oBAAoB,IAAI,WAAW,KAAK,IAAI,SAAS,KAAK,oBAAoB,GAAG,EAAE;AAAA,QAChH,CAAC;AACD,cAAM,SAAS,IAAI,GAAG,GAAG,CAAC;AAC1B,QAAAA,QAAO,IAAI,KAAK;AAChB,cAAM,OAAO,IAAI,KAAK,CAAC,WAAW,GAAG;AAAA,UACnC,MAAM;AAAA,QACR,CAAC;AACD,cAAM,MAAM,IAAI,gBAAgB,IAAI;AACpC,6BAAqB,CAAC;AACtB,YAAI,UAAU,MAAM;AAClB,iBAAO,UAAU;AAAA,QACnB;AACA,eAAO;AAAA,MACT;AAAA;AAAA,EACF;AACA,EAAAD,YAAW,CAAC,SAAS;AAAA,IACnB,MAAM;AAAA,IACN,WAAW;AAAA,EACb,CAAC,CAAC,GAAG,qBAAqB,WAAW,MAAM,MAAM;AACjD,EAAAA,YAAW,CAAC,SAAS;AAAA,IACnB,MAAM;AAAA,IACN,WAAW;AAAA,EACb,CAAC,CAAC,GAAG,qBAAqB,WAAW,WAAW,MAAM;AACtD,EAAAA,YAAW,CAAC,SAAS;AAAA,IACnB,MAAM;AAAA,IACN,WAAW;AAAA,EACb,CAAC,CAAC,GAAG,qBAAqB,WAAW,wBAAwB,MAAM;AACnE,EAAAA,YAAW,CAAC,SAAS;AAAA,IACnB,MAAM;AAAA,IACN,WAAW;AAAA,EACb,CAAC,CAAC,GAAG,qBAAqB,WAAW,eAAe,MAAM;AAC1D,EAAAA,YAAW,CAAC,SAAS;AAAA,IACnB,MAAM;AAAA,IACN,WAAW;AAAA,EACb,CAAC,CAAC,GAAG,qBAAqB,WAAW,WAAW,MAAM;AACtD,EAAAA,YAAW,CAAC,SAAS;AAAA,IACnB,MAAM;AAAA,IACN,WAAW;AAAA,EACb,CAAC,CAAC,GAAG,qBAAqB,WAAW,UAAU,MAAM;AACrD,EAAAA,YAAW,CAAC,SAAS;AAAA,IACnB,MAAM;AAAA,IACN,WAAW;AAAA,EACb,CAAC,CAAC,GAAG,qBAAqB,WAAW,iBAAiB,MAAM;AAC5D,SAAO;AACT;;;ACxYA,IAAIiB,cAAwC,SAAU,YAAYC,SAAQ,KAAKC,OAAM;AACnF,MAAIC,KAAI,UAAU,QAChB,IAAIA,KAAI,IAAIF,UAASC,UAAS,OAAOA,QAAO,OAAO,yBAAyBD,SAAQ,GAAG,IAAIC,OAC3FE;AACF,MAAI,OAAO,YAAY,YAAY,OAAO,QAAQ,aAAa,WAAY,KAAI,QAAQ,SAAS,YAAYH,SAAQ,KAAKC,KAAI;AAAA,MAAO,UAAS,IAAI,WAAW,SAAS,GAAG,KAAK,GAAG,IAAK,KAAIE,KAAI,WAAW,CAAC,EAAG,MAAKD,KAAI,IAAIC,GAAE,CAAC,IAAID,KAAI,IAAIC,GAAEH,SAAQ,KAAK,CAAC,IAAIG,GAAEH,SAAQ,GAAG,MAAM;AAC/Q,SAAOE,KAAI,KAAK,KAAK,OAAO,eAAeF,SAAQ,KAAK,CAAC,GAAG;AAC9D;AAOO,IAAM,gCAAgC;AAC7C,IAAM,iCAAiC;AACvC,IAAM,mCAAmC;AACzC,IAAM,iCAAiC;AACvC,IAAM,iBAAiB;AAAA,EACrB,MAAM;AAAA,EACN,QAAQ;AACV;AACA,IAAM,kBAAkB;AAAA,EACtB,MAAM;AAAA,EACN,MAAM;AAAA,EACN,OAAO;AACT;AACO,IAAM,6BAA6B,OAAO,2BAA2B;AACrE,IAAM,0BAA0B,OAAO,wBAAwB;AAC/D,IAAM,wBAAwB,OAAO,sBAAsB;AAClE,IAAM,uBAAuB,OAAO,qBAAqB;AACzD,IAAM,cAAc,OAAO,YAAY;AACvC,IAAM,mBAAmB,OAAO,iBAAiB;AACjD,IAAM,qBAAqB,OAAO,mBAAmB;AACrD,IAAM,yBAAyB,OAAO,uBAAuB;AAC7D,IAAM,cAAc,OAAO,YAAY;AAkDhC,IAAM,eAAe,CAAAI,wBAAsB;AAChD,MAAIC,MAAIC,MAAIC,KAAIC,KAAIC,KAAIC,KAAIC,KAAIC;AAAA,EAChC,MAAM,kCAAkCR,oBAAmB;AAAA,IACzD,WAAW,qBAAqB,OAAO;AACrC,wBAAkB,wBAAwB,KAAK;AAAA,IACjD;AAAA,IACA,WAAW,uBAAuB;AAChC,aAAO,kBAAkB,wBAAwB;AAAA,IACnD;AAAA,IACA,WAAW,uBAAuB,OAAO;AACvC,wBAAkB,0BAA0B,KAAK;AAAA,IACnD;AAAA,IACA,WAAW,yBAAyB;AAClC,aAAO,kBAAkB,0BAA0B;AAAA,IACrD;AAAA,IACA,WAAW,uBAAuB,OAAO;AACvC,wBAAkB,0BAA0B,KAAK;AAAA,IACnD;AAAA,IACA,WAAW,yBAAyB;AAClC,aAAO,kBAAkB,0BAA0B;AAAA,IACrD;AAAA,IACA,WAAW,qBAAqB,OAAO;AACrC,eAAS,UAAU,aAAa,kBAAkB;AAAA,IACpD;AAAA,IACA,WAAW,uBAAuB;AAChC,aAAO,SAAS,UAAU,aAAa;AAAA,IACzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,OAAO,QAAQ,UAAU;AACvB,eAAS,UAAU,OAAO,OAAO,EAAE,QAAQ,eAAe,QAAQ;AAAA,IACpE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,gBAAgB;AACd,UAAI,KAAK,QAAQ;AACf,aAAK,WAAW,EAAE;AAAA,MACpB,OAAO;AACL,aAAK,oBAAoB,IAAI;AAC7B,aAAK,aAAa,EAAE;AAAA,MACtB;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,aAAa;AACX,YAAM,yBAAyB,KAAK,uBAAuB;AAC3D,UAAI,uBAAuB,UAAU,SAAS,MAAM,GAAG;AACrD;AAAA,MACF;AACA,6BAAuB,UAAU,IAAI,MAAM;AAC3C,WAAK,iBAAiB,EAAE,UAAU,OAAO,MAAM;AAC/C,YAAM,uBAAuB,KAAK,qBAAqB;AACvD,2BAAqB,gBAAgB,UAAU;AAC/C,2BAAqB,gBAAgB,aAAa;AAClD,YAAM,gBAAgB,KAAK;AAC3B,WAAK,gBAAgB,IAAI;AACzB,WAAK,wBAAwB,EAAE,aAAa;AAAA,IAC9C;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,gBAAgB;AACd,aAAO,WAAW,KAAK,MAAM,EAAE,IAAI;AAAA,IACrC;AAAA,IACA,uBAAuB;AACrB,aAAO,WAAW,KAAK,MAAM,EAAE,YAAY,UAAU,IAAI,QAAQ,CAAC,CAAC;AAAA,IACrE;AAAA,IACA,eAAe,MAAM;AACnB,YAAM,GAAG,IAAI;AAKb,WAAK,SAAS;AAQd,WAAK,SAAS,eAAe;AAU7B,WAAK,UAAU,gBAAgB;AAC/B,WAAKC,IAAE,IAAI;AACX,WAAKC,IAAE,IAAI;AAGX,WAAKC,GAAE,IAAI,KAAK,WAAW,cAAc,cAAc;AACvD,WAAKC,GAAE,IAAI,KAAK,WAAW,cAAc,iBAAiB;AAC1D,WAAKC,GAAE,IAAI,KAAK,WAAW,cAAc,8BAA8B;AACvE,WAAKC,GAAE,IAAI,KAAK,qBAAqB,EAAE,aAAa,YAAY;AAChE,WAAKC,GAAE,IAAI,SAAS,cAAY;AAC9B,cAAM,aAAa,KAAK,0BAA0B,EAAE;AACpD,8BAAsB,MAAM;AAC1B,eAAK,0BAA0B,EAAE,MAAM,YAAY,UAAU,QAAQ;AACrE,cAAI,aAAa,GAAG;AAMlB,uBAAW,YAAY,KAAK,0BAA0B,CAAC;AACvD,uBAAW,YAAY,KAAK,0BAA0B,CAAC;AAAA,UACzD;AACA,eAAK,0BAA0B,EAAE,UAAU,OAAO,QAAQ,aAAa,CAAG;AAAA,QAC5E,CAAC;AAAA,MACH,GAAG,6BAA6B;AAChC,WAAKC,GAAE,IAAI,WAAS;AAClB,cAAM,WAAW,MAAM,OAAO;AAC9B,cAAM,SAAS,MAAM,OAAO;AAC5B,YAAI,aAAa,GAAK;AACpB,eAAK,kBAAkB,EAAE,MAAM;AAC/B,cAAI,KAAK,WAAW,KAAK,oBAAoB,KAAK,KAAK,WAAW,eAAe,OAAO;AACtF,iBAAK,WAAW,EAAE;AAAA,UACpB;AAAA,QACF;AACA,aAAK,kBAAkB,EAAE,QAAQ;AACjC,aAAK,cAAc,IAAI,YAAY,YAAY;AAAA,UAC7C,QAAQ;AAAA,YACN,eAAe;AAAA,YACf;AAAA,UACF;AAAA,QACF,CAAC,CAAC;AAAA,MACJ;AACA,YAAMR,sBAAqB,KAAK,sBAAsB,CAAC;AACvD,YAAMS,wBAAuBT,oBAAmB,wBAAwB;AACxE,wBAAkB,wBAAwBS,qBAAoB;AAC9D,YAAMC,0BAAyBV,oBAAmB,0BAA0B;AAC5E,wBAAkB,0BAA0BU,uBAAsB;AAClE,UAAIV,oBAAmB,wBAAwB;AAC7C,0BAAkB,0BAA0BA,oBAAmB,sBAAsB;AAAA,MACvF;AACA,YAAM,uBAAuBA,oBAAmB,wBAAwB;AACxE,eAAS,UAAU,aAAa,kBAAkB;AAAA,IACpD;AAAA,IACA,oBAAoB;AAClB,YAAM,kBAAkB;AACxB,UAAI,CAAC,KAAK,QAAQ;AAChB,aAAK,WAAW;AAAA,MAClB;AACA,WAAK,gBAAgB,EAAE,iBAAiB,YAAY,KAAK,WAAW,CAAC;AAAA,IACvE;AAAA,IACA,uBAAuB;AACrB,YAAM,qBAAqB;AAC3B,WAAK,gBAAgB,EAAE,oBAAoB,YAAY,KAAK,WAAW,CAAC;AAAA,IAC1E;AAAA,IACM,QAAQ,mBAAmB;AAAA;AAC/B,8DAAM,gBAAN,MAAc,iBAAiB;AAC/B,YAAI,kBAAkB,IAAI,QAAQ,KAAK,KAAK,UAAU,MAAM;AAC1D,eAAK,qBAAqB,EAAE,MAAM,kBAAkB,OAAO,KAAK,MAAM;AAAA,QACxE;AACA,YAAI,kBAAkB,IAAI,KAAK,GAAG;AAChC,eAAK,qBAAqB,EAAE,aAAa,cAAc,KAAK,aAAa,CAAC;AAAA,QAC5E;AACA,YAAI,kBAAkB,IAAI,QAAQ,KAAK,kBAAkB,IAAI,SAAS,GAAG;AACvE,eAAK,aAAa,EAAE;AAAA,QACtB;AAAA,MACF;AAAA;AAAA,IACA,EAAEC,OAAK,kBAAkBC,OAAK,sBAAsBC,MAAK,yBAAyBC,MAAK,uBAAuBC,MAAK,4BAA4BC,MAAK,wBAAwBC,MAAK,oBAAoBC,MAAK,aAAa,sBAAsB,IAAI;AAC/O,aAAO,CAAC,CAAC,KAAK,QAAQ,KAAK,oBAAoB,KAAK,KAAK,YAAY,gBAAgB,SAAS,KAAK,WAAW,eAAe,QAAQ,KAAK,oBAAoB;AAAA,IAChK;AAAA,IACA,CAAC,WAAW,IAAI;AACd,WAAK,oBAAoB,IAAI;AAC7B,YAAM,yBAAyB,KAAK,uBAAuB;AAC3D,UAAI,CAAC,uBAAuB,UAAU,SAAS,MAAM,GAAG;AACtD;AAAA,MACF;AACA,6BAAuB,UAAU,OAAO,MAAM;AAC9C,WAAK,iBAAiB,EAAE,UAAU,IAAI,MAAM;AAC5C,YAAM,gBAAgB,KAAK;AAC3B,WAAK,gBAAgB,IAAI;AACzB,WAAK,wBAAwB,EAAE,aAAa;AAC5C,YAAM,OAAO,KAAK,YAAY;AAG9B,UAAI,QAAQ,KAAK,kBAAkB,MAAM;AACvC,aAAK,iBAAiB,EAAE,MAAM;AAAA,MAChC;AAGA,YAAM,uBAAuB,KAAK,qBAAqB;AACvD,2BAAqB,aAAa,eAAe,MAAM;AACvD,2BAAqB,WAAW;AAChC,WAAK,cAAc,IAAI,YAAY,kBAAkB,CAAC;AAAA,IACxD;AAAA,IACA,CAAC,kBAAkB,IAAI;AACrB,aAAO,MAAM,kBAAkB,EAAE,KAAK,KAAK,gBAAgB;AAAA,IAC7D;AAAA,EACF;AACA,EAAAb,YAAW,CAAC,SAAS;AAAA,IACnB,MAAM;AAAA,EACR,CAAC,CAAC,GAAG,0BAA0B,WAAW,UAAU,MAAM;AAC1D,EAAAA,YAAW,CAAC,SAAS;AAAA,IACnB,MAAM;AAAA,EACR,CAAC,CAAC,GAAG,0BAA0B,WAAW,UAAU,MAAM;AAC1D,EAAAA,YAAW,CAAC,SAAS;AAAA,IACnB,MAAM;AAAA,EACR,CAAC,CAAC,GAAG,0BAA0B,WAAW,WAAW,MAAM;AAC3D,SAAO;AACT;;;AC/SA,IAAIgB,cAAwC,SAAU,YAAYC,SAAQ,KAAKC,OAAM;AACnF,MAAIC,KAAI,UAAU,QAChB,IAAIA,KAAI,IAAIF,UAASC,UAAS,OAAOA,QAAO,OAAO,yBAAyBD,SAAQ,GAAG,IAAIC,OAC3FE;AACF,MAAI,OAAO,YAAY,YAAY,OAAO,QAAQ,aAAa,WAAY,KAAI,QAAQ,SAAS,YAAYH,SAAQ,KAAKC,KAAI;AAAA,MAAO,UAAS,IAAI,WAAW,SAAS,GAAG,KAAK,GAAG,IAAK,KAAIE,KAAI,WAAW,CAAC,EAAG,MAAKD,KAAI,IAAIC,GAAE,CAAC,IAAID,KAAI,IAAIC,GAAEH,SAAQ,KAAK,CAAC,IAAIG,GAAEH,SAAQ,GAAG,MAAM;AAC/Q,SAAOE,KAAI,KAAK,KAAK,OAAO,eAAeF,SAAQ,KAAK,CAAC,GAAG;AAC9D;AAQA,IAAM,yBAAyB,KAAK,KAAK;AAClC,IAAM,4BAA4B;AACzC,IAAM,yBAAyB;AAAA,EAC7B,OAAO,CAAC,iBAAiB,WAAW,wBAAwB,KAAK,CAAC,CAAC;AAAA,EACnE,UAAU;AAAA,IACR,MAAM,CAAC,IAAI;AAAA,EACb;AACF;AACA,IAAM,uBAAuB,OAAO,qBAAqB;AACzD,IAAM,oBAAoB,OAAO,kBAAkB;AACnD,IAAM,oBAAoB,OAAO,kBAAkB;AACnD,IAAM,kBAAkB,OAAO,gBAAgB;AACxC,IAAM,eAAe,CAAAI,wBAAsB;AAChD,MAAIC,MAAIC,MAAIC;AAAA,EACZ,MAAM,kCAAkCH,oBAAmB;AAAA,IACzD,cAAc;AACZ,YAAM,GAAG,SAAS;AAClB,WAAK,aAAa;AAClB,WAAK,kBAAkB;AACvB,WAAK,oBAAoB;AACzB,WAAKC,IAAE,IAAI,YAAY,IAAI;AAC3B,WAAKC,IAAE,IAAI;AACX,WAAKC,GAAE,IAAI,WAAS;AAClB,YAAI,CAAC,KAAK,YAAY;AACpB;AAAA,QACF;AACA,YAAI,MAAM,OAAO,WAAW,oBAAoB;AAC9C,eAAK,oBAAoB,IAAI,YAAY,IAAI;AAAA,QAC/C;AAAA,MACF;AAAA,IACF;AAAA,IACA,oBAAoB;AAClB,YAAM,kBAAkB;AACxB,WAAK,iBAAiB,iBAAiB,KAAK,eAAe,CAAC;AAC5D,WAAK,oBAAoB,IAAI,YAAY,IAAI;AAAA,IAC/C;AAAA,IACA,uBAAuB;AACrB,YAAM,qBAAqB;AAC3B,WAAK,oBAAoB,iBAAiB,KAAK,eAAe,CAAC;AAC/D,WAAK,oBAAoB,IAAI,YAAY,IAAI;AAAA,IAC/C;AAAA,IACA,QAAQ,mBAAmB;AACzB,YAAM,QAAQ,iBAAiB;AAC/B,UAAI,kBAAkB,IAAI,YAAY,GAAG;AACvC,aAAK,oBAAoB,IAAI,YAAY,IAAI;AAAA,MAC/C;AAAA,IACF;AAAA,IACA,EAAEF,OAAK,sBAAsBC,OAAK,mBAAmB,kBAAkB,EAAEE,QAAO;AAC9E,WAAK,iBAAiB,IAAIA,OAAM,CAAC;AAAA,IACnC;AAAA,IACA,CAAC,KAAK,EAAE,MAAM,OAAO;AACnB,YAAM,KAAK,EAAE,MAAM,KAAK;AACxB,UAAI,CAAC,KAAK,cAAc,CAAC,KAAK,kBAAkB,EAAE,KAAK,KAAK,SAAS,EAAE,cAAc;AACnF;AAAA,MACF;AACA,YAAM,gBAAgB,KAAK,IAAI,OAAO,OAAO,KAAK,oBAAoB,IAAI,KAAK,eAAe;AAC9F,UAAI,gBAAgB,GAAG;AACrB,aAAK,MAAM,EAAE,MAAM,KAAK,oBAAoB,KAAK,iBAAiB,IAAI,gBAAgB;AAAA,MACxF;AAAA,IACF;AAAA,IACA,IAAI,oBAAoB;AACtB,aAAO,KAAK,MAAM,EAAE;AAAA,IACtB;AAAA,IACA,uBAAuB,QAAQ,GAAG;AAChC,WAAK,MAAM,EAAE,MAAM;AAAA,IACrB;AAAA,EACF;AACA,EAAAD,MAAK;AACL,EAAAR,YAAW,CAAC,SAAS;AAAA,IACnB,MAAM;AAAA,IACN,WAAW;AAAA,EACb,CAAC,CAAC,GAAG,0BAA0B,WAAW,cAAc,MAAM;AAC9D,EAAAA,YAAW,CAAC,SAAS;AAAA,IACnB,MAAM;AAAA,IACN,WAAW;AAAA,EACb,CAAC,CAAC,GAAG,0BAA0B,WAAW,mBAAmB,MAAM;AACnE,EAAAA,YAAW,CAAC,MAAM;AAAA,IAChB,YAAY;AAAA,IACZ,eAAe;AAAA,EACjB,CAAC,GAAG,SAAS;AAAA,IACX,MAAM;AAAA,IACN,WAAW;AAAA,EACb,CAAC,CAAC,GAAG,0BAA0B,WAAW,qBAAqB,MAAM;AACrE,SAAO;AACT;;;ACtFO,IAAM,qBAAqB,gBAAgB,gBAAgB,aAAa,iBAAiB,cAAc,QAAQ,aAAa,eAAe,sBAAsB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/K,eAAe,OAAO,gBAAgB,kBAAkB;",
  "names": ["EventTarget", "target", "Event", "CustomEvent", "HTMLElement", "customElements", "style", "global", "customElements", "c", "issueWarning", "defaultPropertyDeclaration", "target", "issueWarning", "global", "debugLogEvent", "issueWarning", "trustedTypes", "html", "tag", "strings", "n", "polyfillSupport", "global", "issueWarning", "debugLogEvent", "JSCompiler_renameProperty", "global", "issueWarning", "polyfillSupport", "global", "issueWarning", "target", "target", "desc", "c", "d", "ModelViewerElement", "_a", "_b", "_c", "ch", "target", "_color", "worker", "a", "b", "dracoLoader", "ktx2Loader", "meshoptDecoder", "self", "res", "attributes", "t", "td", "cache", "target", "clone", "URL", "sourceURI", "camera", "mat", "node", "max", "accessor", "resolve", "msg", "t", "n", "t", "t", "n", "a", "c", "e", "g", "i", "u", "b", "d", "B", "A", "I", "g", "A", "C", "Q", "_taskCache", "jsContent", "binaryContent", "a", "b", "zstd", "_a", "_b", "cache", "_a", "_b", "GLTFInstance", "clone", "_a", "_b", "cache", "camera", "a", "b", "GLTFMaterialsUnlitExtension", "GLTFMaterialsTransmissionExtension", "GLTFMaterialsVolumeExtension", "GLTFMaterialsIorExtension", "GLTFMaterialsSpecularExtension", "GLTFMaterialsClearcoatExtension", "GLTFMaterialsDispersionExtension", "GLTFMaterialsIridescenceExtension", "GLTFMaterialsSheenExtension", "GLTFMaterialsAnisotropyExtension", "GLTFMaterialsEmissiveStrengthExtension", "GLTFMaterialsBumpExtension", "GLTFMeshGpuInstancing", "WEBGL_CONSTANTS", "PATH_PROPERTIES", "a", "uids", "cache", "c", "target", "attributes", "camera", "quaternion", "a", "b", "n", "i", "cache", "numberNode", "numberNode", "_a", "_b", "numberNode", "_a", "_b", "_c", "t", "__decorate", "target", "desc", "c", "d", "ModelViewerElement", "_a", "_b", "_c", "_d", "_e", "_f", "_g", "_h", "_j", "_k", "_l", "_m", "_o", "style", "vector2", "camera", "element", "_a", "pointer", "target", "style", "vector2", "n", "vector3", "hitPosition", "scene", "target", "view", "clone", "a", "b", "dst", "src", "a", "b", "clone", "camera", "_a", "_b", "_c", "_d", "_e", "_f", "_g", "_h", "_j", "_k", "_l", "_m", "_o", "g", "tag", "marker", "buffer", "w", "h", "texture", "_a", "style", "t", "camera", "target", "_a", "camera", "Filter", "Wrap", "property", "$threeTexture", "$threeTextures", "_a", "$threeTexture", "Texture", "_a", "_a", "_b", "_c", "$onUpdate", "TextureUsage", "Texture", "_d", "_e", "_a", "_a", "_b", "Material", "Node", "mat", "_a", "_b", "_c", "_d", "$materials", "Material", "Node", "a", "b", "clone", "__decorate", "target", "desc", "c", "d", "ModelViewerElement", "_a", "_b", "_c", "Texture", "target", "t", "camera", "max", "vector3", "style", "max", "target", "fade", "_a", "a", "b", "c", "__decorate", "target", "desc", "c", "d", "_a", "_b", "_c", "_d", "_e", "_f", "__decorate", "target", "desc", "c", "d", "ModelViewerElement", "_a", "e", "_b", "ModelViewerElement", "_a", "_b", "_c", "camera", "c", "d", "err", "b", "_a", "_b", "a", "l", "t", "c", "n", "b", "d", "t2", "a", "_a", "_b", "_c", "_d", "ndc", "_e", "it", "i", "a", "b", "td", "t", "t", "err", "d", "b", "c", "fl", "Deflate", "AsyncDeflate", "Inflate", "c", "n", "AsyncInflate", "Gzip", "c", "Gunzip", "AsyncGunzip", "Zlib", "c", "Unzlib", "AsyncUnzlib", "Decompress", "n", "AsyncDecompress", "err", "d", "t", "n", "te", "c", "DecodeUTF8", "_a", "EncodeUTF8", "te", "n", "c", "_a", "d", "b", "u", "c", "fl", "ZipPassThrough", "ZipDeflate", "AsyncZipDeflate", "err", "Zip", "u", "err", "_a", "_b", "_c", "_a", "d", "c", "UnzipPassThrough", "UnzipInflate", "AsyncUnzipInflate", "err", "Unzip", "is", "_a", "u", "err", "dat", "final", "attributes", "camera", "__decorate", "target", "desc", "c", "d", "ModelViewerElement", "_a", "_b", "_c", "_d", "_e", "_f", "_g", "_h", "_j", "_k", "_l", "__decorate", "target", "desc", "c", "d", "ModelViewerElement", "_a", "_b", "_c", "_d", "_e", "_f", "_g", "_h", "dracoDecoderLocation", "ktx2TranscoderLocation", "__decorate", "target", "desc", "c", "d", "ModelViewerElement", "_a", "_b", "_c", "style"]
}
