{
  "version": 3,
  "sources": ["../../../../../../node_modules/@capacitor/synapse/dist/synapse.mjs", "../../../../../../node_modules/@capacitor/filesystem/dist/esm/index.js"],
  "sourcesContent": ["function s(t) {\n  t.CapacitorUtils.Synapse = new Proxy({}, {\n    get(e, n) {\n      return new Proxy({}, {\n        get(w, o) {\n          return (c, p, r) => {\n            const i = t.Capacitor.Plugins[n];\n            if (i === void 0) {\n              r(new Error(`Capacitor plugin ${n} not found`));\n              return;\n            }\n            if (typeof i[o] != \"function\") {\n              r(new Error(`Method ${o} not found in Capacitor plugin ${n}`));\n              return;\n            }\n            (async () => {\n              try {\n                const a = await i[o](c);\n                p(a);\n              } catch (a) {\n                r(a);\n              }\n            })();\n          };\n        }\n      });\n    }\n  });\n}\nfunction u(t) {\n  t.CapacitorUtils.Synapse = new Proxy({}, {\n    get(e, n) {\n      return t.cordova.plugins[n];\n    }\n  });\n}\nfunction f(t = !1) {\n  typeof window > \"u\" || (window.CapacitorUtils = window.CapacitorUtils || {}, window.Capacitor !== void 0 && !t ? s(window) : window.cordova !== void 0 && u(window));\n}\nexport { f as exposeSynapse };", "import { registerPlugin } from '@capacitor/core';\nimport { exposeSynapse } from '@capacitor/synapse';\nconst Filesystem = registerPlugin('Filesystem', {\n  web: () => import('./web').then(m => new m.FilesystemWeb())\n});\nexposeSynapse();\nexport * from './definitions';\nexport { Filesystem };\n"],
  "mappings": ";;;;;;;;;AAAA,SAAS,EAAE,GAAG;AACZ,IAAE,eAAe,UAAU,IAAI,MAAM,CAAC,GAAG;AAAA,IACvC,IAAI,GAAG,GAAG;AACR,aAAO,IAAI,MAAM,CAAC,GAAG;AAAA,QACnB,IAAI,GAAG,GAAG;AACR,iBAAO,CAAC,GAAG,GAAG,MAAM;AAClB,kBAAM,IAAI,EAAE,UAAU,QAAQ,CAAC;AAC/B,gBAAI,MAAM,QAAQ;AAChB,gBAAE,IAAI,MAAM,oBAAoB,CAAC,YAAY,CAAC;AAC9C;AAAA,YACF;AACA,gBAAI,OAAO,EAAE,CAAC,KAAK,YAAY;AAC7B,gBAAE,IAAI,MAAM,UAAU,CAAC,kCAAkC,CAAC,EAAE,CAAC;AAC7D;AAAA,YACF;AACA,aAAC,MAAY;AACX,kBAAI;AACF,sBAAM,IAAI,MAAM,EAAE,CAAC,EAAE,CAAC;AACtB,kBAAE,CAAC;AAAA,cACL,SAAS,GAAG;AACV,kBAAE,CAAC;AAAA,cACL;AAAA,YACF,IAAG;AAAA,UACL;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF,CAAC;AACH;AACA,SAAS,EAAE,GAAG;AACZ,IAAE,eAAe,UAAU,IAAI,MAAM,CAAC,GAAG;AAAA,IACvC,IAAI,GAAG,GAAG;AACR,aAAO,EAAE,QAAQ,QAAQ,CAAC;AAAA,IAC5B;AAAA,EACF,CAAC;AACH;AACA,SAAS,EAAE,IAAI,OAAI;AACjB,SAAO,SAAS,QAAQ,OAAO,iBAAiB,OAAO,kBAAkB,CAAC,GAAG,OAAO,cAAc,UAAU,CAAC,IAAI,EAAE,MAAM,IAAI,OAAO,YAAY,UAAU,EAAE,MAAM;AACpK;;;ACpCA,IAAM,aAAa,eAAe,cAAc;AAAA,EAC9C,KAAK,MAAM,OAAO,mBAAO,EAAE,KAAK,OAAK,IAAI,EAAE,cAAc,CAAC;AAC5D,CAAC;AACD,EAAc;",
  "names": []
}
