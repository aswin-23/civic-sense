{
  "version": 3,
  "sources": ["../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/flags_wasm.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm-threaded-simd.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm-threaded-simd.worker.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/register_all_kernels.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/_FusedMatMul.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/types.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Abs.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/unary_kernel.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Acos.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Acosh.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Add.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/binary_kernel.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/AddN.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/All.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/kernel_utils.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Transpose.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Identity.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Any.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/ArgMax.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/argminmax_kernel.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/ArgMin.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Asin.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Asinh.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Atan.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Atan2.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Atanh.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/AvgPool.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/AvgPool3D.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/AvgPool3DGrad.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/AvgPoolGrad.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/BatchMatMul.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Reshape.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/BatchToSpaceND.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Slice.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Bincount.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/BitwiseAnd.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/BroadcastArgs.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Cast.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Ceil.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/ClipByValue.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Concat.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Conv2D.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Conv2DBackpropInput.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Conv3D.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Conv3DBackpropFilterV2.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Conv3DBackpropInputV2.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Cos.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Cosh.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/CropAndResize.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Cumprod.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Cumsum.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/DenseBincount.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/DepthToSpace.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/DepthwiseConv2dNative.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Diag.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Dilation2D.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Dilation2DBackpropFilter.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Dilation2DBackpropInput.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Elu.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/EluGrad.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Equal.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Erf.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Exp.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/ExpandDims.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Expm1.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Fill.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/FlipLeftRight.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Floor.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/FloorDiv.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/FusedBatchNorm.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/FusedConv2D.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/FusedDepthwiseConv2D.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/GatherNd.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/GatherV2.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Greater.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/GreaterEqual.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/IsFinite.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/IsInf.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/IsNan.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/LeakyRelu.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Less.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/LessEqual.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/LinSpace.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Log.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Log1p.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/LogicalAnd.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/LogicalNot.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/LogicalOr.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/LogicalXor.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/LRN.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/LRNGrad.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Max.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Maximum.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/MaxPool.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/MaxPool3D.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/MaxPool3DGrad.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/MaxPoolGrad.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/MaxPoolWithArgmax.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Mean.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Min.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Minimum.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/MirrorPad.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Multinomial.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Softmax.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Mod.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Multiply.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Neg.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/NonMaxSuppressionV3.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/NonMaxSuppression_util.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/NonMaxSuppressionV4.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/NonMaxSuppressionV5.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/NotEqual.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/OneHot.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/OnesLike.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Pack.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/PadV2.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Pow.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Prelu.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Prod.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Range.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/RealDiv.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Reciprocal.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Relu.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Relu6.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/ResizeBilinear.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/ResizeBilinearGrad.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/ResizeNearestNeighbor.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/ResizeNearestNeighborGrad.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Reverse.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/RotateWithOffset.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Round.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Rsqrt.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/ScatterNd.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/SearchSorted.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Select.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Selu.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Sigmoid.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Sign.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Sin.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Sinh.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Softplus.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/SpaceToBatchND.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/SparseFillEmptyRows.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/SparseReshape.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/SparseSegmentMean.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/SparseSegmentReduction.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/SparseSegmentSum.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/SparseToDense.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/SplitV.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Sqrt.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Square.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/SquaredDifference.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Step.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/StridedSlice.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/StringNGrams.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/StringSplit.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/StringToHashBucketFast.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Sub.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Sum.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Tan.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Tanh.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/TensorScatterUpdate.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Tile.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/TopK.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Transform.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Unique.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/Unpack.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/kernels/ZerosLike.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/base.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/backend_wasm.js", "../../../../../../node_modules/@tensorflow/tfjs-backend-wasm/dist/version.js"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env } from '@tensorflow/tfjs-core';\nconst ENV = env();\n/**\n * True if SIMD is supported.\n */\n// From: https://github.com/GoogleChromeLabs/wasm-feature-detect\nENV.registerFlag('WASM_HAS_SIMD_SUPPORT', async () => {\n  try {\n    // This typed array passed in to WebAssembly.validate is WebAssembly binary\n    // code. In this case it is a small program that contains SIMD\n    // instructions.\n    return WebAssembly.validate(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 9, 1, 7, 0, 65, 0, 253, 15, 26, 11]));\n  } catch (e) {\n    return false;\n  }\n});\n/**\n * True if threads are supported.\n */\n// From: https://github.com/GoogleChromeLabs/wasm-feature-detect\nENV.registerFlag('WASM_HAS_MULTITHREAD_SUPPORT', async () => {\n  // TODO(annxingyuan): Enable node support once this is resolved:\n  // https://github.com/tensorflow/tfjs/issues/3830\n  if (ENV.get('IS_NODE')) {\n    return false;\n  }\n  try {\n    // Test for transferability of SABs (needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n    // This typed array is a WebAssembly program containing threaded\n    // instructions.\n    return WebAssembly.validate(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 5, 4, 1, 3, 1, 1, 10, 11, 1, 9, 0, 65, 0, 254, 16, 2, 0, 26, 11]));\n  } catch (e) {\n    return false;\n  }\n});\n", "var WasmBackendModuleThreadedSimd = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return function (WasmBackendModuleThreadedSimd) {\n    WasmBackendModuleThreadedSimd = WasmBackendModuleThreadedSimd || {};\n    function GROWABLE_HEAP_I8() {\n      if (wasmMemory.buffer != buffer) {\n        updateGlobalBufferAndViews(wasmMemory.buffer);\n      }\n      return HEAP8;\n    }\n    function GROWABLE_HEAP_U8() {\n      if (wasmMemory.buffer != buffer) {\n        updateGlobalBufferAndViews(wasmMemory.buffer);\n      }\n      return HEAPU8;\n    }\n    function GROWABLE_HEAP_I16() {\n      if (wasmMemory.buffer != buffer) {\n        updateGlobalBufferAndViews(wasmMemory.buffer);\n      }\n      return HEAP16;\n    }\n    function GROWABLE_HEAP_I32() {\n      if (wasmMemory.buffer != buffer) {\n        updateGlobalBufferAndViews(wasmMemory.buffer);\n      }\n      return HEAP32;\n    }\n    function GROWABLE_HEAP_U32() {\n      if (wasmMemory.buffer != buffer) {\n        updateGlobalBufferAndViews(wasmMemory.buffer);\n      }\n      return HEAPU32;\n    }\n    function GROWABLE_HEAP_F32() {\n      if (wasmMemory.buffer != buffer) {\n        updateGlobalBufferAndViews(wasmMemory.buffer);\n      }\n      return HEAPF32;\n    }\n    function GROWABLE_HEAP_F64() {\n      if (wasmMemory.buffer != buffer) {\n        updateGlobalBufferAndViews(wasmMemory.buffer);\n      }\n      return HEAPF64;\n    }\n    var Module = typeof WasmBackendModuleThreadedSimd != \"undefined\" ? WasmBackendModuleThreadedSimd : {};\n    var readyPromiseResolve, readyPromiseReject;\n    Module[\"ready\"] = new Promise(function (resolve, reject) {\n      readyPromiseResolve = resolve;\n      readyPromiseReject = reject;\n    });\n    var beforeListeners;\n    if (typeof process !== \"undefined\" && process.listeners) {\n      beforeListeners = {\n        uncaughtException: process.listeners(\"uncaughtException\"),\n        unhandledRejection: process.listeners(\"unhandledRejection\")\n      };\n    }\n    var moduleOverrides = Object.assign({}, Module);\n    var arguments_ = [];\n    var thisProgram = \"./this.program\";\n    var quit_ = (status, toThrow) => {\n      throw toThrow;\n    };\n    var ENVIRONMENT_IS_WEB = typeof window == \"object\";\n    var ENVIRONMENT_IS_WORKER = typeof importScripts == \"function\";\n    var ENVIRONMENT_IS_NODE = typeof process == \"object\" && typeof process.versions == \"object\" && typeof process.versions.node == \"string\";\n    var ENVIRONMENT_IS_PTHREAD = Module[\"ENVIRONMENT_IS_PTHREAD\"] || false;\n    var scriptDirectory = \"\";\n    function locateFile(path) {\n      if (Module[\"locateFile\"]) {\n        return Module[\"locateFile\"](path, scriptDirectory);\n      }\n      return scriptDirectory + path;\n    }\n    var read_, readAsync, readBinary, setWindowTitle;\n    function logExceptionOnExit(e) {\n      if (e instanceof ExitStatus) return;\n      let toLog = e;\n      err(\"exiting due to exception: \" + toLog);\n    }\n    if (ENVIRONMENT_IS_NODE) {\n      var fs = require(\"fs\");\n      var nodePath = require(\"path\");\n      if (ENVIRONMENT_IS_WORKER) {\n        scriptDirectory = nodePath.dirname(scriptDirectory) + \"/\";\n      } else {\n        scriptDirectory = __dirname + \"/\";\n      }\n      read_ = (filename, binary) => {\n        filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);\n        return fs.readFileSync(filename, binary ? undefined : \"utf8\");\n      };\n      readBinary = filename => {\n        var ret = read_(filename, true);\n        if (!ret.buffer) {\n          ret = new Uint8Array(ret);\n        }\n        return ret;\n      };\n      readAsync = (filename, onload, onerror) => {\n        filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);\n        fs.readFile(filename, function (err, data) {\n          if (err) onerror(err);else onload(data.buffer);\n        });\n      };\n      if (process[\"argv\"].length > 1) {\n        thisProgram = process[\"argv\"][1].replace(/\\\\/g, \"/\");\n      }\n      arguments_ = process[\"argv\"].slice(2);\n      process[\"on\"](\"uncaughtException\", function (ex) {\n        if (!(ex instanceof ExitStatus)) {\n          throw ex;\n        }\n      });\n      process[\"on\"](\"unhandledRejection\", function (reason) {\n        throw reason;\n      });\n      quit_ = (status, toThrow) => {\n        if (keepRuntimeAlive()) {\n          process[\"exitCode\"] = status;\n          throw toThrow;\n        }\n        logExceptionOnExit(toThrow);\n        process[\"exit\"](status);\n      };\n      Module[\"inspect\"] = function () {\n        return \"[Emscripten Module object]\";\n      };\n      let nodeWorkerThreads;\n      try {\n        nodeWorkerThreads = require(\"worker_threads\");\n      } catch (e) {\n        console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?');\n        throw e;\n      }\n      global.Worker = nodeWorkerThreads.Worker;\n    } else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n      if (ENVIRONMENT_IS_WORKER) {\n        scriptDirectory = self.location.href;\n      } else if (typeof document != \"undefined\" && document.currentScript) {\n        scriptDirectory = document.currentScript.src;\n      }\n      if (typeof _scriptDir !== \"undefined\" && _scriptDir) {\n        scriptDirectory = _scriptDir;\n      }\n      if (scriptDirectory.indexOf(\"blob:\") !== 0) {\n        scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf(\"/\") + 1);\n      } else {\n        scriptDirectory = \"\";\n      }\n      if (!ENVIRONMENT_IS_NODE) {\n        read_ = url => {\n          var xhr = new XMLHttpRequest();\n          xhr.open(\"GET\", url, false);\n          xhr.send(null);\n          return xhr.responseText;\n        };\n        if (ENVIRONMENT_IS_WORKER) {\n          readBinary = url => {\n            var xhr = new XMLHttpRequest();\n            xhr.open(\"GET\", url, false);\n            xhr.responseType = \"arraybuffer\";\n            xhr.send(null);\n            return new Uint8Array(xhr.response);\n          };\n        }\n        readAsync = (url, onload, onerror) => {\n          var xhr = new XMLHttpRequest();\n          xhr.open(\"GET\", url, true);\n          xhr.responseType = \"arraybuffer\";\n          xhr.onload = () => {\n            if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n              onload(xhr.response);\n              return;\n            }\n            onerror();\n          };\n          xhr.onerror = onerror;\n          xhr.send(null);\n        };\n      }\n      setWindowTitle = title => document.title = title;\n    } else {}\n    if (ENVIRONMENT_IS_NODE) {\n      if (typeof performance == \"undefined\") {\n        global.performance = require(\"perf_hooks\").performance;\n      }\n    }\n    var defaultPrint = console.log.bind(console);\n    var defaultPrintErr = console.warn.bind(console);\n    if (ENVIRONMENT_IS_NODE) {\n      defaultPrint = str => fs.writeSync(1, str + \"\\n\");\n      defaultPrintErr = str => fs.writeSync(2, str + \"\\n\");\n    }\n    var out = Module[\"print\"] || defaultPrint;\n    var err = Module[\"printErr\"] || defaultPrintErr;\n    Object.assign(Module, moduleOverrides);\n    moduleOverrides = null;\n    if (Module[\"arguments\"]) arguments_ = Module[\"arguments\"];\n    if (Module[\"thisProgram\"]) thisProgram = Module[\"thisProgram\"];\n    if (Module[\"quit\"]) quit_ = Module[\"quit\"];\n    var POINTER_SIZE = 4;\n    var Atomics_load = Atomics.load;\n    var Atomics_store = Atomics.store;\n    var Atomics_compareExchange = Atomics.compareExchange;\n    var wasmBinary;\n    if (Module[\"wasmBinary\"]) wasmBinary = Module[\"wasmBinary\"];\n    var noExitRuntime = Module[\"noExitRuntime\"] || true;\n    if (typeof WebAssembly != \"object\") {\n      abort(\"no native wasm support detected\");\n    }\n    var wasmMemory;\n    var wasmModule;\n    var ABORT = false;\n    var EXITSTATUS;\n    function assert(condition, text) {\n      if (!condition) {\n        abort(text);\n      }\n    }\n    var UTF8Decoder = typeof TextDecoder != \"undefined\" ? new TextDecoder(\"utf8\") : undefined;\n    function UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {\n      idx >>>= 0;\n      var endIdx = idx + maxBytesToRead;\n      var endPtr = idx;\n      while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n      if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n        return UTF8Decoder.decode(heapOrArray.buffer instanceof SharedArrayBuffer ? heapOrArray.slice(idx, endPtr) : heapOrArray.subarray(idx, endPtr));\n      }\n      var str = \"\";\n      while (idx < endPtr) {\n        var u0 = heapOrArray[idx++];\n        if (!(u0 & 128)) {\n          str += String.fromCharCode(u0);\n          continue;\n        }\n        var u1 = heapOrArray[idx++] & 63;\n        if ((u0 & 224) == 192) {\n          str += String.fromCharCode((u0 & 31) << 6 | u1);\n          continue;\n        }\n        var u2 = heapOrArray[idx++] & 63;\n        if ((u0 & 240) == 224) {\n          u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n        } else {\n          u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heapOrArray[idx++] & 63;\n        }\n        if (u0 < 65536) {\n          str += String.fromCharCode(u0);\n        } else {\n          var ch = u0 - 65536;\n          str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n        }\n      }\n      return str;\n    }\n    function UTF8ToString(ptr, maxBytesToRead) {\n      ptr >>>= 0;\n      return ptr ? UTF8ArrayToString(GROWABLE_HEAP_U8(), ptr, maxBytesToRead) : \"\";\n    }\n    function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n      outIdx >>>= 0;\n      if (!(maxBytesToWrite > 0)) return 0;\n      var startIdx = outIdx;\n      var endIdx = outIdx + maxBytesToWrite - 1;\n      for (var i = 0; i < str.length; ++i) {\n        var u = str.charCodeAt(i);\n        if (u >= 55296 && u <= 57343) {\n          var u1 = str.charCodeAt(++i);\n          u = 65536 + ((u & 1023) << 10) | u1 & 1023;\n        }\n        if (u <= 127) {\n          if (outIdx >= endIdx) break;\n          heap[outIdx++ >>> 0] = u;\n        } else if (u <= 2047) {\n          if (outIdx + 1 >= endIdx) break;\n          heap[outIdx++ >>> 0] = 192 | u >> 6;\n          heap[outIdx++ >>> 0] = 128 | u & 63;\n        } else if (u <= 65535) {\n          if (outIdx + 2 >= endIdx) break;\n          heap[outIdx++ >>> 0] = 224 | u >> 12;\n          heap[outIdx++ >>> 0] = 128 | u >> 6 & 63;\n          heap[outIdx++ >>> 0] = 128 | u & 63;\n        } else {\n          if (outIdx + 3 >= endIdx) break;\n          heap[outIdx++ >>> 0] = 240 | u >> 18;\n          heap[outIdx++ >>> 0] = 128 | u >> 12 & 63;\n          heap[outIdx++ >>> 0] = 128 | u >> 6 & 63;\n          heap[outIdx++ >>> 0] = 128 | u & 63;\n        }\n      }\n      heap[outIdx >>> 0] = 0;\n      return outIdx - startIdx;\n    }\n    function stringToUTF8(str, outPtr, maxBytesToWrite) {\n      return stringToUTF8Array(str, GROWABLE_HEAP_U8(), outPtr, maxBytesToWrite);\n    }\n    var buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n    if (ENVIRONMENT_IS_PTHREAD) {\n      buffer = Module[\"buffer\"];\n    }\n    function updateGlobalBufferAndViews(buf) {\n      buffer = buf;\n      Module[\"HEAP8\"] = HEAP8 = new Int8Array(buf);\n      Module[\"HEAP16\"] = HEAP16 = new Int16Array(buf);\n      Module[\"HEAP32\"] = HEAP32 = new Int32Array(buf);\n      Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(buf);\n      Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(buf);\n      Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(buf);\n      Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(buf);\n      Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(buf);\n    }\n    var INITIAL_MEMORY = Module[\"INITIAL_MEMORY\"] || 16777216;\n    if (ENVIRONMENT_IS_PTHREAD) {\n      wasmMemory = Module[\"wasmMemory\"];\n      buffer = Module[\"buffer\"];\n    } else {\n      if (Module[\"wasmMemory\"]) {\n        wasmMemory = Module[\"wasmMemory\"];\n      } else {\n        wasmMemory = new WebAssembly.Memory({\n          \"initial\": INITIAL_MEMORY / 65536,\n          \"maximum\": 4294967296 / 65536,\n          \"shared\": true\n        });\n        if (!(wasmMemory.buffer instanceof SharedArrayBuffer)) {\n          err(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\");\n          if (ENVIRONMENT_IS_NODE) {\n            err(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)\");\n          }\n          throw Error(\"bad memory\");\n        }\n      }\n    }\n    if (wasmMemory) {\n      buffer = wasmMemory.buffer;\n    }\n    INITIAL_MEMORY = buffer.byteLength;\n    updateGlobalBufferAndViews(buffer);\n    var wasmTable;\n    var __ATPRERUN__ = [];\n    var __ATINIT__ = [];\n    var __ATPOSTRUN__ = [];\n    var runtimeInitialized = false;\n    function keepRuntimeAlive() {\n      return noExitRuntime;\n    }\n    function preRun() {\n      if (Module[\"preRun\"]) {\n        if (typeof Module[\"preRun\"] == \"function\") Module[\"preRun\"] = [Module[\"preRun\"]];\n        while (Module[\"preRun\"].length) {\n          addOnPreRun(Module[\"preRun\"].shift());\n        }\n      }\n      callRuntimeCallbacks(__ATPRERUN__);\n    }\n    function initRuntime() {\n      runtimeInitialized = true;\n      if (ENVIRONMENT_IS_PTHREAD) return;\n      callRuntimeCallbacks(__ATINIT__);\n    }\n    function postRun() {\n      if (ENVIRONMENT_IS_PTHREAD) return;\n      if (Module[\"postRun\"]) {\n        if (typeof Module[\"postRun\"] == \"function\") Module[\"postRun\"] = [Module[\"postRun\"]];\n        while (Module[\"postRun\"].length) {\n          addOnPostRun(Module[\"postRun\"].shift());\n        }\n      }\n      callRuntimeCallbacks(__ATPOSTRUN__);\n    }\n    function addOnPreRun(cb) {\n      __ATPRERUN__.unshift(cb);\n    }\n    function addOnInit(cb) {\n      __ATINIT__.unshift(cb);\n    }\n    function addOnPostRun(cb) {\n      __ATPOSTRUN__.unshift(cb);\n    }\n    var runDependencies = 0;\n    var runDependencyWatcher = null;\n    var dependenciesFulfilled = null;\n    function addRunDependency(id) {\n      runDependencies++;\n      if (Module[\"monitorRunDependencies\"]) {\n        Module[\"monitorRunDependencies\"](runDependencies);\n      }\n    }\n    function removeRunDependency(id) {\n      runDependencies--;\n      if (Module[\"monitorRunDependencies\"]) {\n        Module[\"monitorRunDependencies\"](runDependencies);\n      }\n      if (runDependencies == 0) {\n        if (runDependencyWatcher !== null) {\n          clearInterval(runDependencyWatcher);\n          runDependencyWatcher = null;\n        }\n        if (dependenciesFulfilled) {\n          var callback = dependenciesFulfilled;\n          dependenciesFulfilled = null;\n          callback();\n        }\n      }\n    }\n    function abort(what) {\n      if (Module[\"onAbort\"]) {\n        Module[\"onAbort\"](what);\n      }\n      what = \"Aborted(\" + what + \")\";\n      err(what);\n      ABORT = true;\n      EXITSTATUS = 1;\n      what += \". Build with -sASSERTIONS for more info.\";\n      var e = new WebAssembly.RuntimeError(what);\n      readyPromiseReject(e);\n      throw e;\n    }\n    var dataURIPrefix = \"data:application/octet-stream;base64,\";\n    function isDataURI(filename) {\n      return filename.startsWith(dataURIPrefix);\n    }\n    function isFileURI(filename) {\n      return filename.startsWith(\"file://\");\n    }\n    var wasmBinaryFile;\n    wasmBinaryFile = \"tfjs-backend-wasm-threaded-simd.wasm\";\n    if (!isDataURI(wasmBinaryFile)) {\n      wasmBinaryFile = locateFile(wasmBinaryFile);\n    }\n    function getBinary(file) {\n      try {\n        if (file == wasmBinaryFile && wasmBinary) {\n          return new Uint8Array(wasmBinary);\n        }\n        if (readBinary) {\n          return readBinary(file);\n        }\n        throw \"both async and sync fetching of the wasm failed\";\n      } catch (err) {\n        abort(err);\n      }\n    }\n    function getBinaryPromise() {\n      if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n        if (typeof fetch == \"function\" && !isFileURI(wasmBinaryFile)) {\n          return fetch(wasmBinaryFile, {\n            credentials: \"same-origin\"\n          }).then(function (response) {\n            if (!response[\"ok\"]) {\n              throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\n            }\n            return response[\"arrayBuffer\"]();\n          }).catch(function () {\n            return getBinary(wasmBinaryFile);\n          });\n        } else {\n          if (readAsync) {\n            return new Promise(function (resolve, reject) {\n              readAsync(wasmBinaryFile, function (response) {\n                resolve(new Uint8Array(response));\n              }, reject);\n            });\n          }\n        }\n      }\n      return Promise.resolve().then(function () {\n        return getBinary(wasmBinaryFile);\n      });\n    }\n    function createWasm() {\n      var info = {\n        \"env\": asmLibraryArg,\n        \"wasi_snapshot_preview1\": asmLibraryArg\n      };\n      function receiveInstance(instance, module) {\n        var exports = instance.exports;\n        Module[\"asm\"] = exports;\n        registerTLSInit(Module[\"asm\"][\"_emscripten_tls_init\"]);\n        wasmTable = Module[\"asm\"][\"__indirect_function_table\"];\n        addOnInit(Module[\"asm\"][\"__wasm_call_ctors\"]);\n        wasmModule = module;\n        if (!ENVIRONMENT_IS_PTHREAD) {\n          var numWorkersToLoad = PThread.unusedWorkers.length;\n          PThread.unusedWorkers.forEach(function (w) {\n            PThread.loadWasmModuleToWorker(w, function () {\n              if (! --numWorkersToLoad) removeRunDependency(\"wasm-instantiate\");\n            });\n          });\n        }\n      }\n      if (!ENVIRONMENT_IS_PTHREAD) {\n        addRunDependency(\"wasm-instantiate\");\n      }\n      function receiveInstantiationResult(result) {\n        receiveInstance(result[\"instance\"], result[\"module\"]);\n      }\n      function instantiateArrayBuffer(receiver) {\n        return getBinaryPromise().then(function (binary) {\n          return WebAssembly.instantiate(binary, info);\n        }).then(function (instance) {\n          return instance;\n        }).then(receiver, function (reason) {\n          err(\"failed to asynchronously prepare wasm: \" + reason);\n          abort(reason);\n        });\n      }\n      function instantiateAsync() {\n        if (!wasmBinary && typeof WebAssembly.instantiateStreaming == \"function\" && !isDataURI(wasmBinaryFile) && !isFileURI(wasmBinaryFile) && !ENVIRONMENT_IS_NODE && typeof fetch == \"function\") {\n          return fetch(wasmBinaryFile, {\n            credentials: \"same-origin\"\n          }).then(function (response) {\n            var result = WebAssembly.instantiateStreaming(response, info);\n            return result.then(receiveInstantiationResult, function (reason) {\n              err(\"wasm streaming compile failed: \" + reason);\n              err(\"falling back to ArrayBuffer instantiation\");\n              return instantiateArrayBuffer(receiveInstantiationResult);\n            });\n          });\n        } else {\n          return instantiateArrayBuffer(receiveInstantiationResult);\n        }\n      }\n      if (Module[\"instantiateWasm\"]) {\n        try {\n          var exports = Module[\"instantiateWasm\"](info, receiveInstance);\n          return exports;\n        } catch (e) {\n          err(\"Module.instantiateWasm callback failed with error: \" + e);\n          readyPromiseReject(e);\n        }\n      }\n      instantiateAsync().catch(readyPromiseReject);\n      return {};\n    }\n    var tempDouble;\n    var tempI64;\n    var ASM_CONSTS = {};\n    function ExitStatus(status) {\n      this.name = \"ExitStatus\";\n      this.message = \"Program terminated with exit(\" + status + \")\";\n      this.status = status;\n    }\n    function killThread(pthread_ptr) {\n      var worker = PThread.pthreads[pthread_ptr];\n      delete PThread.pthreads[pthread_ptr];\n      worker.terminate();\n      __emscripten_thread_free_data(pthread_ptr);\n      PThread.runningWorkers.splice(PThread.runningWorkers.indexOf(worker), 1);\n      worker.pthread_ptr = 0;\n    }\n    function cancelThread(pthread_ptr) {\n      var worker = PThread.pthreads[pthread_ptr];\n      worker.postMessage({\n        \"cmd\": \"cancel\"\n      });\n    }\n    function cleanupThread(pthread_ptr) {\n      var worker = PThread.pthreads[pthread_ptr];\n      assert(worker);\n      PThread.returnWorkerToPool(worker);\n    }\n    function spawnThread(threadParams) {\n      var worker = PThread.getNewWorker();\n      if (!worker) {\n        return 6;\n      }\n      PThread.runningWorkers.push(worker);\n      PThread.pthreads[threadParams.pthread_ptr] = worker;\n      worker.pthread_ptr = threadParams.pthread_ptr;\n      var msg = {\n        \"cmd\": \"run\",\n        \"start_routine\": threadParams.startRoutine,\n        \"arg\": threadParams.arg,\n        \"pthread_ptr\": threadParams.pthread_ptr\n      };\n      worker.runPthread = () => {\n        if (ENVIRONMENT_IS_NODE) {\n          worker.ref();\n        }\n        worker.postMessage(msg, threadParams.transferList);\n        delete worker.runPthread;\n      };\n      if (worker.loaded) {\n        worker.runPthread();\n      }\n      return 0;\n    }\n    var SYSCALLS = {\n      varargs: undefined,\n      get: function () {\n        SYSCALLS.varargs += 4;\n        var ret = GROWABLE_HEAP_I32()[SYSCALLS.varargs - 4 >>> 2];\n        return ret;\n      },\n      getStr: function (ptr) {\n        var ret = UTF8ToString(ptr);\n        return ret;\n      }\n    };\n    function _proc_exit(code) {\n      if (ENVIRONMENT_IS_PTHREAD) return _emscripten_proxy_to_main_thread_js(1, 1, code);\n      EXITSTATUS = code;\n      if (!keepRuntimeAlive()) {\n        PThread.terminateAllThreads();\n        if (Module[\"onExit\"]) Module[\"onExit\"](code);\n        ABORT = true;\n      }\n      quit_(code, new ExitStatus(code));\n    }\n    function exitJS(status, implicit) {\n      EXITSTATUS = status;\n      if (!implicit) {\n        if (ENVIRONMENT_IS_PTHREAD) {\n          exitOnMainThread(status);\n          throw \"unwind\";\n        } else {}\n      }\n      _proc_exit(status);\n    }\n    var _exit = exitJS;\n    function handleException(e) {\n      if (e instanceof ExitStatus || e == \"unwind\") {\n        return EXITSTATUS;\n      }\n      quit_(1, e);\n    }\n    var PThread = {\n      unusedWorkers: [],\n      runningWorkers: [],\n      tlsInitFunctions: [],\n      pthreads: {},\n      init: function () {\n        if (ENVIRONMENT_IS_PTHREAD) {\n          PThread.initWorker();\n        } else {\n          PThread.initMainThread();\n        }\n      },\n      initMainThread: function () {\n        var pthreadPoolSize = 8;\n        while (pthreadPoolSize--) {\n          PThread.allocateUnusedWorker();\n        }\n      },\n      initWorker: function () {\n        noExitRuntime = false;\n      },\n      setExitStatus: function (status) {\n        EXITSTATUS = status;\n      },\n      terminateAllThreads: function () {\n        for (var worker of Object.values(PThread.pthreads)) {\n          PThread.returnWorkerToPool(worker);\n        }\n        for (var worker of PThread.unusedWorkers) {\n          worker.terminate();\n        }\n        PThread.unusedWorkers = [];\n      },\n      returnWorkerToPool: function (worker) {\n        var pthread_ptr = worker.pthread_ptr;\n        delete PThread.pthreads[pthread_ptr];\n        PThread.unusedWorkers.push(worker);\n        PThread.runningWorkers.splice(PThread.runningWorkers.indexOf(worker), 1);\n        worker.pthread_ptr = 0;\n        if (ENVIRONMENT_IS_NODE) {\n          worker.unref();\n        }\n        __emscripten_thread_free_data(pthread_ptr);\n      },\n      receiveObjectTransfer: function (data) {},\n      threadInitTLS: function () {\n        PThread.tlsInitFunctions.forEach(f => f());\n      },\n      loadWasmModuleToWorker: function (worker, onFinishedLoading) {\n        worker.onmessage = e => {\n          var d = e[\"data\"];\n          var cmd = d[\"cmd\"];\n          if (worker.pthread_ptr) PThread.currentProxiedOperationCallerThread = worker.pthread_ptr;\n          if (d[\"targetThread\"] && d[\"targetThread\"] != _pthread_self()) {\n            var targetWorker = PThread.pthreads[d.targetThread];\n            if (targetWorker) {\n              targetWorker.postMessage(d, d[\"transferList\"]);\n            } else {\n              err('Internal error! Worker sent a message \"' + cmd + '\" to target pthread ' + d[\"targetThread\"] + \", but that thread no longer exists!\");\n            }\n            PThread.currentProxiedOperationCallerThread = undefined;\n            return;\n          }\n          if (cmd === \"processProxyingQueue\") {\n            executeNotifiedProxyingQueue(d[\"queue\"]);\n          } else if (cmd === \"spawnThread\") {\n            spawnThread(d);\n          } else if (cmd === \"cleanupThread\") {\n            cleanupThread(d[\"thread\"]);\n          } else if (cmd === \"killThread\") {\n            killThread(d[\"thread\"]);\n          } else if (cmd === \"cancelThread\") {\n            cancelThread(d[\"thread\"]);\n          } else if (cmd === \"loaded\") {\n            worker.loaded = true;\n            if (ENVIRONMENT_IS_NODE) {\n              worker.unref();\n            }\n            if (onFinishedLoading) onFinishedLoading(worker);\n            if (worker.runPthread) {\n              worker.runPthread();\n            }\n          } else if (cmd === \"print\") {\n            out(\"Thread \" + d[\"threadId\"] + \": \" + d[\"text\"]);\n          } else if (cmd === \"printErr\") {\n            err(\"Thread \" + d[\"threadId\"] + \": \" + d[\"text\"]);\n          } else if (cmd === \"alert\") {\n            alert(\"Thread \" + d[\"threadId\"] + \": \" + d[\"text\"]);\n          } else if (d.target === \"setimmediate\") {\n            worker.postMessage(d);\n          } else if (cmd === \"callHandler\") {\n            Module[d[\"handler\"]](...d[\"args\"]);\n          } else if (cmd) {\n            err(\"worker sent an unknown command \" + cmd);\n          }\n          PThread.currentProxiedOperationCallerThread = undefined;\n        };\n        worker.onerror = e => {\n          var message = \"worker sent an error!\";\n          err(message + \" \" + e.filename + \":\" + e.lineno + \": \" + e.message);\n          throw e;\n        };\n        if (ENVIRONMENT_IS_NODE) {\n          worker.on(\"message\", function (data) {\n            worker.onmessage({\n              data: data\n            });\n          });\n          worker.on(\"error\", function (e) {\n            worker.onerror(e);\n          });\n          worker.on(\"detachedExit\", function () {});\n        }\n        var handlers = [];\n        var knownHandlers = [\"onExit\", \"onAbort\", \"print\", \"printErr\"];\n        for (var handler of knownHandlers) {\n          if (Module.hasOwnProperty(handler)) {\n            handlers.push(handler);\n          }\n        }\n        worker.postMessage({\n          \"cmd\": \"load\",\n          \"handlers\": handlers,\n          \"urlOrBlob\": Module[\"mainScriptUrlOrBlob\"] || _scriptDir,\n          \"wasmMemory\": wasmMemory,\n          \"wasmModule\": wasmModule\n        });\n      },\n      allocateUnusedWorker: function () {\n        var worker;\n        var pthreadMainJs = locateFile(\"tfjs-backend-wasm-threaded-simd.worker.js\");\n        worker = new Worker(pthreadMainJs);\n        PThread.unusedWorkers.push(worker);\n      },\n      getNewWorker: function () {\n        if (PThread.unusedWorkers.length == 0) {\n          PThread.allocateUnusedWorker();\n          PThread.loadWasmModuleToWorker(PThread.unusedWorkers[0]);\n        }\n        return PThread.unusedWorkers.pop();\n      }\n    };\n    Module[\"PThread\"] = PThread;\n    function callRuntimeCallbacks(callbacks) {\n      while (callbacks.length > 0) {\n        callbacks.shift()(Module);\n      }\n    }\n    function establishStackSpace() {\n      var pthread_ptr = _pthread_self();\n      var stackTop = GROWABLE_HEAP_I32()[pthread_ptr + 52 >>> 2];\n      var stackSize = GROWABLE_HEAP_I32()[pthread_ptr + 56 >>> 2];\n      var stackMax = stackTop - stackSize;\n      _emscripten_stack_set_limits(stackTop, stackMax);\n      stackRestore(stackTop);\n    }\n    Module[\"establishStackSpace\"] = establishStackSpace;\n    function exitOnMainThread(returnCode) {\n      if (ENVIRONMENT_IS_PTHREAD) return _emscripten_proxy_to_main_thread_js(2, 0, returnCode);\n      try {\n        _exit(returnCode);\n      } catch (e) {\n        handleException(e);\n      }\n    }\n    var wasmTableMirror = [];\n    function getWasmTableEntry(funcPtr) {\n      var func = wasmTableMirror[funcPtr];\n      if (!func) {\n        if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;\n        wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);\n      }\n      return func;\n    }\n    function invokeEntryPoint(ptr, arg) {\n      var result = getWasmTableEntry(ptr)(arg);\n      if (keepRuntimeAlive()) {\n        PThread.setExitStatus(result);\n      } else {\n        __emscripten_thread_exit(result);\n      }\n    }\n    Module[\"invokeEntryPoint\"] = invokeEntryPoint;\n    function registerTLSInit(tlsInitFunc) {\n      PThread.tlsInitFunctions.push(tlsInitFunc);\n    }\n    function ___emscripten_init_main_thread_js(tb) {\n      __emscripten_thread_init(tb, !ENVIRONMENT_IS_WORKER, 1, !ENVIRONMENT_IS_WEB);\n      PThread.threadInitTLS();\n    }\n    function ___emscripten_thread_cleanup(thread) {\n      if (!ENVIRONMENT_IS_PTHREAD) cleanupThread(thread);else postMessage({\n        \"cmd\": \"cleanupThread\",\n        \"thread\": thread\n      });\n    }\n    function pthreadCreateProxied(pthread_ptr, attr, startRoutine, arg) {\n      if (ENVIRONMENT_IS_PTHREAD) return _emscripten_proxy_to_main_thread_js(3, 1, pthread_ptr, attr, startRoutine, arg);\n      return ___pthread_create_js(pthread_ptr, attr, startRoutine, arg);\n    }\n    function ___pthread_create_js(pthread_ptr, attr, startRoutine, arg) {\n      if (typeof SharedArrayBuffer == \"undefined\") {\n        err(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\");\n        return 6;\n      }\n      var transferList = [];\n      var error = 0;\n      if (ENVIRONMENT_IS_PTHREAD && (transferList.length === 0 || error)) {\n        return pthreadCreateProxied(pthread_ptr, attr, startRoutine, arg);\n      }\n      if (error) return error;\n      var threadParams = {\n        startRoutine: startRoutine,\n        pthread_ptr: pthread_ptr,\n        arg: arg,\n        transferList: transferList\n      };\n      if (ENVIRONMENT_IS_PTHREAD) {\n        threadParams.cmd = \"spawnThread\";\n        postMessage(threadParams, transferList);\n        return 0;\n      }\n      return spawnThread(threadParams);\n    }\n    function __emscripten_default_pthread_stack_size() {\n      return 65536;\n    }\n    var nowIsMonotonic = true;\n    function __emscripten_get_now_is_monotonic() {\n      return nowIsMonotonic;\n    }\n    function executeNotifiedProxyingQueue(queue) {\n      Atomics.store(GROWABLE_HEAP_I32(), queue >> 2, 1);\n      if (_pthread_self()) {\n        __emscripten_proxy_execute_task_queue(queue);\n      }\n      Atomics.compareExchange(GROWABLE_HEAP_I32(), queue >> 2, 1, 0);\n    }\n    Module[\"executeNotifiedProxyingQueue\"] = executeNotifiedProxyingQueue;\n    function __emscripten_notify_task_queue(targetThreadId, currThreadId, mainThreadId, queue) {\n      if (targetThreadId == currThreadId) {\n        setTimeout(() => executeNotifiedProxyingQueue(queue));\n      } else if (ENVIRONMENT_IS_PTHREAD) {\n        postMessage({\n          \"targetThread\": targetThreadId,\n          \"cmd\": \"processProxyingQueue\",\n          \"queue\": queue\n        });\n      } else {\n        var worker = PThread.pthreads[targetThreadId];\n        if (!worker) {\n          return;\n        }\n        worker.postMessage({\n          \"cmd\": \"processProxyingQueue\",\n          \"queue\": queue\n        });\n      }\n      return 1;\n    }\n    function __emscripten_set_offscreencanvas_size(target, width, height) {\n      return -1;\n    }\n    function _abort() {\n      abort(\"\");\n    }\n    function warnOnce(text) {\n      if (!warnOnce.shown) warnOnce.shown = {};\n      if (!warnOnce.shown[text]) {\n        warnOnce.shown[text] = 1;\n        if (ENVIRONMENT_IS_NODE) text = \"warning: \" + text;\n        err(text);\n      }\n    }\n    function _emscripten_check_blocking_allowed() {\n      if (ENVIRONMENT_IS_NODE) return;\n      if (ENVIRONMENT_IS_WORKER) return;\n      warnOnce(\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\");\n    }\n    function _emscripten_date_now() {\n      return Date.now();\n    }\n    function getHeapMax() {\n      return 4294901760;\n    }\n    function _emscripten_get_heap_max() {\n      return getHeapMax();\n    }\n    var _emscripten_get_now;\n    if (ENVIRONMENT_IS_NODE) {\n      _emscripten_get_now = () => {\n        var t = process[\"hrtime\"]();\n        return t[0] * 1e3 + t[1] / 1e6;\n      };\n    } else _emscripten_get_now = () => performance.timeOrigin + performance.now();\n    function _emscripten_memcpy_big(dest, src, num) {\n      GROWABLE_HEAP_U8().copyWithin(dest >>> 0, src >>> 0, src + num >>> 0);\n    }\n    function _emscripten_num_logical_cores() {\n      if (ENVIRONMENT_IS_NODE) return require(\"os\").cpus().length;\n      return navigator[\"hardwareConcurrency\"];\n    }\n    function withStackSave(f) {\n      var stack = stackSave();\n      var ret = f();\n      stackRestore(stack);\n      return ret;\n    }\n    function _emscripten_proxy_to_main_thread_js(index, sync) {\n      var numCallArgs = arguments.length - 2;\n      var outerArgs = arguments;\n      return withStackSave(() => {\n        var serializedNumCallArgs = numCallArgs;\n        var args = stackAlloc(serializedNumCallArgs * 8);\n        var b = args >> 3;\n        for (var i = 0; i < numCallArgs; i++) {\n          var arg = outerArgs[2 + i];\n          GROWABLE_HEAP_F64()[b + i >>> 0] = arg;\n        }\n        return _emscripten_run_in_main_runtime_thread_js(index, serializedNumCallArgs, args, sync);\n      });\n    }\n    var _emscripten_receive_on_main_thread_js_callArgs = [];\n    function _emscripten_receive_on_main_thread_js(index, numCallArgs, args) {\n      _emscripten_receive_on_main_thread_js_callArgs.length = numCallArgs;\n      var b = args >> 3;\n      for (var i = 0; i < numCallArgs; i++) {\n        _emscripten_receive_on_main_thread_js_callArgs[i] = GROWABLE_HEAP_F64()[b + i >>> 0];\n      }\n      var isEmAsmConst = index < 0;\n      var func = !isEmAsmConst ? proxiedFunctionTable[index] : ASM_CONSTS[-index - 1];\n      return func.apply(null, _emscripten_receive_on_main_thread_js_callArgs);\n    }\n    function emscripten_realloc_buffer(size) {\n      try {\n        wasmMemory.grow(size - buffer.byteLength + 65535 >>> 16);\n        updateGlobalBufferAndViews(wasmMemory.buffer);\n        return 1;\n      } catch (e) {}\n    }\n    function _emscripten_resize_heap(requestedSize) {\n      var oldSize = GROWABLE_HEAP_U8().length;\n      requestedSize = requestedSize >>> 0;\n      if (requestedSize <= oldSize) {\n        return false;\n      }\n      var maxHeapSize = getHeapMax();\n      if (requestedSize > maxHeapSize) {\n        return false;\n      }\n      let alignUp = (x, multiple) => x + (multiple - x % multiple) % multiple;\n      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n        var overGrownHeapSize = oldSize * (1 + .2 / cutDown);\n        overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n        var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n        var replacement = emscripten_realloc_buffer(newSize);\n        if (replacement) {\n          return true;\n        }\n      }\n      return false;\n    }\n    function _emscripten_unwind_to_js_event_loop() {\n      throw \"unwind\";\n    }\n    function _fd_close(fd) {\n      if (ENVIRONMENT_IS_PTHREAD) return _emscripten_proxy_to_main_thread_js(4, 1, fd);\n      return 52;\n    }\n    function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n      if (ENVIRONMENT_IS_PTHREAD) return _emscripten_proxy_to_main_thread_js(5, 1, fd, offset_low, offset_high, whence, newOffset);\n      return 70;\n    }\n    var printCharBuffers = [null, [], []];\n    function printChar(stream, curr) {\n      var buffer = printCharBuffers[stream];\n      if (curr === 0 || curr === 10) {\n        (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));\n        buffer.length = 0;\n      } else {\n        buffer.push(curr);\n      }\n    }\n    function _fd_write(fd, iov, iovcnt, pnum) {\n      if (ENVIRONMENT_IS_PTHREAD) return _emscripten_proxy_to_main_thread_js(6, 1, fd, iov, iovcnt, pnum);\n      var num = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = GROWABLE_HEAP_U32()[iov >>> 2];\n        var len = GROWABLE_HEAP_U32()[iov + 4 >>> 2];\n        iov += 8;\n        for (var j = 0; j < len; j++) {\n          printChar(fd, GROWABLE_HEAP_U8()[ptr + j >>> 0]);\n        }\n        num += len;\n      }\n      GROWABLE_HEAP_U32()[pnum >>> 2] = num;\n      return 0;\n    }\n    function getCFunc(ident) {\n      var func = Module[\"_\" + ident];\n      return func;\n    }\n    function writeArrayToMemory(array, buffer) {\n      GROWABLE_HEAP_I8().set(array, buffer >>> 0);\n    }\n    function ccall(ident, returnType, argTypes, args, opts) {\n      var toC = {\n        \"string\": str => {\n          var ret = 0;\n          if (str !== null && str !== undefined && str !== 0) {\n            var len = (str.length << 2) + 1;\n            ret = stackAlloc(len);\n            stringToUTF8(str, ret, len);\n          }\n          return ret;\n        },\n        \"array\": arr => {\n          var ret = stackAlloc(arr.length);\n          writeArrayToMemory(arr, ret);\n          return ret;\n        }\n      };\n      function convertReturnValue(ret) {\n        if (returnType === \"string\") {\n          return UTF8ToString(ret);\n        }\n        if (returnType === \"boolean\") return Boolean(ret);\n        return ret;\n      }\n      var func = getCFunc(ident);\n      var cArgs = [];\n      var stack = 0;\n      if (args) {\n        for (var i = 0; i < args.length; i++) {\n          var converter = toC[argTypes[i]];\n          if (converter) {\n            if (stack === 0) stack = stackSave();\n            cArgs[i] = converter(args[i]);\n          } else {\n            cArgs[i] = args[i];\n          }\n        }\n      }\n      var ret = func.apply(null, cArgs);\n      function onDone(ret) {\n        if (stack !== 0) stackRestore(stack);\n        return convertReturnValue(ret);\n      }\n      ret = onDone(ret);\n      return ret;\n    }\n    function cwrap(ident, returnType, argTypes, opts) {\n      argTypes = argTypes || [];\n      var numericArgs = argTypes.every(type => type === \"number\" || type === \"boolean\");\n      var numericRet = returnType !== \"string\";\n      if (numericRet && numericArgs && !opts) {\n        return getCFunc(ident);\n      }\n      return function () {\n        return ccall(ident, returnType, argTypes, arguments, opts);\n      };\n    }\n    PThread.init();\n    var proxiedFunctionTable = [null, _proc_exit, exitOnMainThread, pthreadCreateProxied, _fd_close, _fd_seek, _fd_write];\n    var asmLibraryArg = {\n      \"__emscripten_init_main_thread_js\": ___emscripten_init_main_thread_js,\n      \"__emscripten_thread_cleanup\": ___emscripten_thread_cleanup,\n      \"__pthread_create_js\": ___pthread_create_js,\n      \"_emscripten_default_pthread_stack_size\": __emscripten_default_pthread_stack_size,\n      \"_emscripten_get_now_is_monotonic\": __emscripten_get_now_is_monotonic,\n      \"_emscripten_notify_task_queue\": __emscripten_notify_task_queue,\n      \"_emscripten_set_offscreencanvas_size\": __emscripten_set_offscreencanvas_size,\n      \"abort\": _abort,\n      \"emscripten_check_blocking_allowed\": _emscripten_check_blocking_allowed,\n      \"emscripten_date_now\": _emscripten_date_now,\n      \"emscripten_get_heap_max\": _emscripten_get_heap_max,\n      \"emscripten_get_now\": _emscripten_get_now,\n      \"emscripten_memcpy_big\": _emscripten_memcpy_big,\n      \"emscripten_num_logical_cores\": _emscripten_num_logical_cores,\n      \"emscripten_receive_on_main_thread_js\": _emscripten_receive_on_main_thread_js,\n      \"emscripten_resize_heap\": _emscripten_resize_heap,\n      \"emscripten_unwind_to_js_event_loop\": _emscripten_unwind_to_js_event_loop,\n      \"exit\": _exit,\n      \"fd_close\": _fd_close,\n      \"fd_seek\": _fd_seek,\n      \"fd_write\": _fd_write,\n      \"memory\": wasmMemory || Module[\"wasmMemory\"]\n    };\n    var asm = createWasm();\n    var ___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = function () {\n      return (___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = Module[\"asm\"][\"__wasm_call_ctors\"]).apply(null, arguments);\n    };\n    var _init = Module[\"_init\"] = function () {\n      return (_init = Module[\"_init\"] = Module[\"asm\"][\"init\"]).apply(null, arguments);\n    };\n    var _init_with_threads_count = Module[\"_init_with_threads_count\"] = function () {\n      return (_init_with_threads_count = Module[\"_init_with_threads_count\"] = Module[\"asm\"][\"init_with_threads_count\"]).apply(null, arguments);\n    };\n    var _get_threads_count = Module[\"_get_threads_count\"] = function () {\n      return (_get_threads_count = Module[\"_get_threads_count\"] = Module[\"asm\"][\"get_threads_count\"]).apply(null, arguments);\n    };\n    var _register_tensor = Module[\"_register_tensor\"] = function () {\n      return (_register_tensor = Module[\"_register_tensor\"] = Module[\"asm\"][\"register_tensor\"]).apply(null, arguments);\n    };\n    var _dispose_data = Module[\"_dispose_data\"] = function () {\n      return (_dispose_data = Module[\"_dispose_data\"] = Module[\"asm\"][\"dispose_data\"]).apply(null, arguments);\n    };\n    var _dispose = Module[\"_dispose\"] = function () {\n      return (_dispose = Module[\"_dispose\"] = Module[\"asm\"][\"dispose\"]).apply(null, arguments);\n    };\n    var _Abs = Module[\"_Abs\"] = function () {\n      return (_Abs = Module[\"_Abs\"] = Module[\"asm\"][\"Abs\"]).apply(null, arguments);\n    };\n    var _Acos = Module[\"_Acos\"] = function () {\n      return (_Acos = Module[\"_Acos\"] = Module[\"asm\"][\"Acos\"]).apply(null, arguments);\n    };\n    var _Acosh = Module[\"_Acosh\"] = function () {\n      return (_Acosh = Module[\"_Acosh\"] = Module[\"asm\"][\"Acosh\"]).apply(null, arguments);\n    };\n    var _Add = Module[\"_Add\"] = function () {\n      return (_Add = Module[\"_Add\"] = Module[\"asm\"][\"Add\"]).apply(null, arguments);\n    };\n    var _AddN = Module[\"_AddN\"] = function () {\n      return (_AddN = Module[\"_AddN\"] = Module[\"asm\"][\"AddN\"]).apply(null, arguments);\n    };\n    var _All = Module[\"_All\"] = function () {\n      return (_All = Module[\"_All\"] = Module[\"asm\"][\"All\"]).apply(null, arguments);\n    };\n    var _Any = Module[\"_Any\"] = function () {\n      return (_Any = Module[\"_Any\"] = Module[\"asm\"][\"Any\"]).apply(null, arguments);\n    };\n    var _ArgMax = Module[\"_ArgMax\"] = function () {\n      return (_ArgMax = Module[\"_ArgMax\"] = Module[\"asm\"][\"ArgMax\"]).apply(null, arguments);\n    };\n    var _ArgMin = Module[\"_ArgMin\"] = function () {\n      return (_ArgMin = Module[\"_ArgMin\"] = Module[\"asm\"][\"ArgMin\"]).apply(null, arguments);\n    };\n    var _Asin = Module[\"_Asin\"] = function () {\n      return (_Asin = Module[\"_Asin\"] = Module[\"asm\"][\"Asin\"]).apply(null, arguments);\n    };\n    var _Asinh = Module[\"_Asinh\"] = function () {\n      return (_Asinh = Module[\"_Asinh\"] = Module[\"asm\"][\"Asinh\"]).apply(null, arguments);\n    };\n    var _Atan = Module[\"_Atan\"] = function () {\n      return (_Atan = Module[\"_Atan\"] = Module[\"asm\"][\"Atan\"]).apply(null, arguments);\n    };\n    var _Atan2 = Module[\"_Atan2\"] = function () {\n      return (_Atan2 = Module[\"_Atan2\"] = Module[\"asm\"][\"Atan2\"]).apply(null, arguments);\n    };\n    var _Atanh = Module[\"_Atanh\"] = function () {\n      return (_Atanh = Module[\"_Atanh\"] = Module[\"asm\"][\"Atanh\"]).apply(null, arguments);\n    };\n    var _AvgPool = Module[\"_AvgPool\"] = function () {\n      return (_AvgPool = Module[\"_AvgPool\"] = Module[\"asm\"][\"AvgPool\"]).apply(null, arguments);\n    };\n    var _AvgPool3D = Module[\"_AvgPool3D\"] = function () {\n      return (_AvgPool3D = Module[\"_AvgPool3D\"] = Module[\"asm\"][\"AvgPool3D\"]).apply(null, arguments);\n    };\n    var _AvgPool3DGrad = Module[\"_AvgPool3DGrad\"] = function () {\n      return (_AvgPool3DGrad = Module[\"_AvgPool3DGrad\"] = Module[\"asm\"][\"AvgPool3DGrad\"]).apply(null, arguments);\n    };\n    var _AvgPoolGrad = Module[\"_AvgPoolGrad\"] = function () {\n      return (_AvgPoolGrad = Module[\"_AvgPoolGrad\"] = Module[\"asm\"][\"AvgPoolGrad\"]).apply(null, arguments);\n    };\n    var _BatchMatMul = Module[\"_BatchMatMul\"] = function () {\n      return (_BatchMatMul = Module[\"_BatchMatMul\"] = Module[\"asm\"][\"BatchMatMul\"]).apply(null, arguments);\n    };\n    var _Bincount = Module[\"_Bincount\"] = function () {\n      return (_Bincount = Module[\"_Bincount\"] = Module[\"asm\"][\"Bincount\"]).apply(null, arguments);\n    };\n    var _BitwiseAnd = Module[\"_BitwiseAnd\"] = function () {\n      return (_BitwiseAnd = Module[\"_BitwiseAnd\"] = Module[\"asm\"][\"BitwiseAnd\"]).apply(null, arguments);\n    };\n    var _Ceil = Module[\"_Ceil\"] = function () {\n      return (_Ceil = Module[\"_Ceil\"] = Module[\"asm\"][\"Ceil\"]).apply(null, arguments);\n    };\n    var _ClipByValue = Module[\"_ClipByValue\"] = function () {\n      return (_ClipByValue = Module[\"_ClipByValue\"] = Module[\"asm\"][\"ClipByValue\"]).apply(null, arguments);\n    };\n    var _Conv2D = Module[\"_Conv2D\"] = function () {\n      return (_Conv2D = Module[\"_Conv2D\"] = Module[\"asm\"][\"Conv2D\"]).apply(null, arguments);\n    };\n    var _Conv2DBackpropInput = Module[\"_Conv2DBackpropInput\"] = function () {\n      return (_Conv2DBackpropInput = Module[\"_Conv2DBackpropInput\"] = Module[\"asm\"][\"Conv2DBackpropInput\"]).apply(null, arguments);\n    };\n    var _Conv3D = Module[\"_Conv3D\"] = function () {\n      return (_Conv3D = Module[\"_Conv3D\"] = Module[\"asm\"][\"Conv3D\"]).apply(null, arguments);\n    };\n    var _Conv3DBackpropFilterV2 = Module[\"_Conv3DBackpropFilterV2\"] = function () {\n      return (_Conv3DBackpropFilterV2 = Module[\"_Conv3DBackpropFilterV2\"] = Module[\"asm\"][\"Conv3DBackpropFilterV2\"]).apply(null, arguments);\n    };\n    var _Conv3DBackpropInputV2 = Module[\"_Conv3DBackpropInputV2\"] = function () {\n      return (_Conv3DBackpropInputV2 = Module[\"_Conv3DBackpropInputV2\"] = Module[\"asm\"][\"Conv3DBackpropInputV2\"]).apply(null, arguments);\n    };\n    var _Cos = Module[\"_Cos\"] = function () {\n      return (_Cos = Module[\"_Cos\"] = Module[\"asm\"][\"Cos\"]).apply(null, arguments);\n    };\n    var _Cosh = Module[\"_Cosh\"] = function () {\n      return (_Cosh = Module[\"_Cosh\"] = Module[\"asm\"][\"Cosh\"]).apply(null, arguments);\n    };\n    var _CropAndResize = Module[\"_CropAndResize\"] = function () {\n      return (_CropAndResize = Module[\"_CropAndResize\"] = Module[\"asm\"][\"CropAndResize\"]).apply(null, arguments);\n    };\n    var _Cumprod = Module[\"_Cumprod\"] = function () {\n      return (_Cumprod = Module[\"_Cumprod\"] = Module[\"asm\"][\"Cumprod\"]).apply(null, arguments);\n    };\n    var _Cumsum = Module[\"_Cumsum\"] = function () {\n      return (_Cumsum = Module[\"_Cumsum\"] = Module[\"asm\"][\"Cumsum\"]).apply(null, arguments);\n    };\n    var _DenseBincount = Module[\"_DenseBincount\"] = function () {\n      return (_DenseBincount = Module[\"_DenseBincount\"] = Module[\"asm\"][\"DenseBincount\"]).apply(null, arguments);\n    };\n    var _DepthToSpace = Module[\"_DepthToSpace\"] = function () {\n      return (_DepthToSpace = Module[\"_DepthToSpace\"] = Module[\"asm\"][\"DepthToSpace\"]).apply(null, arguments);\n    };\n    var _DepthwiseConv2dNative = Module[\"_DepthwiseConv2dNative\"] = function () {\n      return (_DepthwiseConv2dNative = Module[\"_DepthwiseConv2dNative\"] = Module[\"asm\"][\"DepthwiseConv2dNative\"]).apply(null, arguments);\n    };\n    var _Diag = Module[\"_Diag\"] = function () {\n      return (_Diag = Module[\"_Diag\"] = Module[\"asm\"][\"Diag\"]).apply(null, arguments);\n    };\n    var _Dilation2D = Module[\"_Dilation2D\"] = function () {\n      return (_Dilation2D = Module[\"_Dilation2D\"] = Module[\"asm\"][\"Dilation2D\"]).apply(null, arguments);\n    };\n    var _Dilation2DBackpropFilter = Module[\"_Dilation2DBackpropFilter\"] = function () {\n      return (_Dilation2DBackpropFilter = Module[\"_Dilation2DBackpropFilter\"] = Module[\"asm\"][\"Dilation2DBackpropFilter\"]).apply(null, arguments);\n    };\n    var _Dilation2DBackpropInput = Module[\"_Dilation2DBackpropInput\"] = function () {\n      return (_Dilation2DBackpropInput = Module[\"_Dilation2DBackpropInput\"] = Module[\"asm\"][\"Dilation2DBackpropInput\"]).apply(null, arguments);\n    };\n    var _Elu = Module[\"_Elu\"] = function () {\n      return (_Elu = Module[\"_Elu\"] = Module[\"asm\"][\"Elu\"]).apply(null, arguments);\n    };\n    var _EluGrad = Module[\"_EluGrad\"] = function () {\n      return (_EluGrad = Module[\"_EluGrad\"] = Module[\"asm\"][\"EluGrad\"]).apply(null, arguments);\n    };\n    var _Equal = Module[\"_Equal\"] = function () {\n      return (_Equal = Module[\"_Equal\"] = Module[\"asm\"][\"Equal\"]).apply(null, arguments);\n    };\n    var _Erf = Module[\"_Erf\"] = function () {\n      return (_Erf = Module[\"_Erf\"] = Module[\"asm\"][\"Erf\"]).apply(null, arguments);\n    };\n    var _Exp = Module[\"_Exp\"] = function () {\n      return (_Exp = Module[\"_Exp\"] = Module[\"asm\"][\"Exp\"]).apply(null, arguments);\n    };\n    var _Expm1 = Module[\"_Expm1\"] = function () {\n      return (_Expm1 = Module[\"_Expm1\"] = Module[\"asm\"][\"Expm1\"]).apply(null, arguments);\n    };\n    var _FlipLeftRight = Module[\"_FlipLeftRight\"] = function () {\n      return (_FlipLeftRight = Module[\"_FlipLeftRight\"] = Module[\"asm\"][\"FlipLeftRight\"]).apply(null, arguments);\n    };\n    var _Floor = Module[\"_Floor\"] = function () {\n      return (_Floor = Module[\"_Floor\"] = Module[\"asm\"][\"Floor\"]).apply(null, arguments);\n    };\n    var _FloorDiv = Module[\"_FloorDiv\"] = function () {\n      return (_FloorDiv = Module[\"_FloorDiv\"] = Module[\"asm\"][\"FloorDiv\"]).apply(null, arguments);\n    };\n    var _FusedBatchNorm = Module[\"_FusedBatchNorm\"] = function () {\n      return (_FusedBatchNorm = Module[\"_FusedBatchNorm\"] = Module[\"asm\"][\"FusedBatchNorm\"]).apply(null, arguments);\n    };\n    var _FusedConv2D = Module[\"_FusedConv2D\"] = function () {\n      return (_FusedConv2D = Module[\"_FusedConv2D\"] = Module[\"asm\"][\"FusedConv2D\"]).apply(null, arguments);\n    };\n    var _FusedDepthwiseConv2D = Module[\"_FusedDepthwiseConv2D\"] = function () {\n      return (_FusedDepthwiseConv2D = Module[\"_FusedDepthwiseConv2D\"] = Module[\"asm\"][\"FusedDepthwiseConv2D\"]).apply(null, arguments);\n    };\n    var _Gather = Module[\"_Gather\"] = function () {\n      return (_Gather = Module[\"_Gather\"] = Module[\"asm\"][\"Gather\"]).apply(null, arguments);\n    };\n    var _GatherNd = Module[\"_GatherNd\"] = function () {\n      return (_GatherNd = Module[\"_GatherNd\"] = Module[\"asm\"][\"GatherNd\"]).apply(null, arguments);\n    };\n    var _Greater = Module[\"_Greater\"] = function () {\n      return (_Greater = Module[\"_Greater\"] = Module[\"asm\"][\"Greater\"]).apply(null, arguments);\n    };\n    var _GreaterEqual = Module[\"_GreaterEqual\"] = function () {\n      return (_GreaterEqual = Module[\"_GreaterEqual\"] = Module[\"asm\"][\"GreaterEqual\"]).apply(null, arguments);\n    };\n    var _IsFinite = Module[\"_IsFinite\"] = function () {\n      return (_IsFinite = Module[\"_IsFinite\"] = Module[\"asm\"][\"IsFinite\"]).apply(null, arguments);\n    };\n    var _IsInf = Module[\"_IsInf\"] = function () {\n      return (_IsInf = Module[\"_IsInf\"] = Module[\"asm\"][\"IsInf\"]).apply(null, arguments);\n    };\n    var _IsNan = Module[\"_IsNan\"] = function () {\n      return (_IsNan = Module[\"_IsNan\"] = Module[\"asm\"][\"IsNan\"]).apply(null, arguments);\n    };\n    var _LRN = Module[\"_LRN\"] = function () {\n      return (_LRN = Module[\"_LRN\"] = Module[\"asm\"][\"LRN\"]).apply(null, arguments);\n    };\n    var _LRNGrad = Module[\"_LRNGrad\"] = function () {\n      return (_LRNGrad = Module[\"_LRNGrad\"] = Module[\"asm\"][\"LRNGrad\"]).apply(null, arguments);\n    };\n    var _LeakyRelu = Module[\"_LeakyRelu\"] = function () {\n      return (_LeakyRelu = Module[\"_LeakyRelu\"] = Module[\"asm\"][\"LeakyRelu\"]).apply(null, arguments);\n    };\n    var _Less = Module[\"_Less\"] = function () {\n      return (_Less = Module[\"_Less\"] = Module[\"asm\"][\"Less\"]).apply(null, arguments);\n    };\n    var _LessEqual = Module[\"_LessEqual\"] = function () {\n      return (_LessEqual = Module[\"_LessEqual\"] = Module[\"asm\"][\"LessEqual\"]).apply(null, arguments);\n    };\n    var _LinSpace = Module[\"_LinSpace\"] = function () {\n      return (_LinSpace = Module[\"_LinSpace\"] = Module[\"asm\"][\"LinSpace\"]).apply(null, arguments);\n    };\n    var _Log = Module[\"_Log\"] = function () {\n      return (_Log = Module[\"_Log\"] = Module[\"asm\"][\"Log\"]).apply(null, arguments);\n    };\n    var _Log1p = Module[\"_Log1p\"] = function () {\n      return (_Log1p = Module[\"_Log1p\"] = Module[\"asm\"][\"Log1p\"]).apply(null, arguments);\n    };\n    var _LogicalAnd = Module[\"_LogicalAnd\"] = function () {\n      return (_LogicalAnd = Module[\"_LogicalAnd\"] = Module[\"asm\"][\"LogicalAnd\"]).apply(null, arguments);\n    };\n    var _LogicalNot = Module[\"_LogicalNot\"] = function () {\n      return (_LogicalNot = Module[\"_LogicalNot\"] = Module[\"asm\"][\"LogicalNot\"]).apply(null, arguments);\n    };\n    var _LogicalOr = Module[\"_LogicalOr\"] = function () {\n      return (_LogicalOr = Module[\"_LogicalOr\"] = Module[\"asm\"][\"LogicalOr\"]).apply(null, arguments);\n    };\n    var _LogicalXor = Module[\"_LogicalXor\"] = function () {\n      return (_LogicalXor = Module[\"_LogicalXor\"] = Module[\"asm\"][\"LogicalXor\"]).apply(null, arguments);\n    };\n    var _Max = Module[\"_Max\"] = function () {\n      return (_Max = Module[\"_Max\"] = Module[\"asm\"][\"Max\"]).apply(null, arguments);\n    };\n    var _MaxPool = Module[\"_MaxPool\"] = function () {\n      return (_MaxPool = Module[\"_MaxPool\"] = Module[\"asm\"][\"MaxPool\"]).apply(null, arguments);\n    };\n    var _MaxPool3D = Module[\"_MaxPool3D\"] = function () {\n      return (_MaxPool3D = Module[\"_MaxPool3D\"] = Module[\"asm\"][\"MaxPool3D\"]).apply(null, arguments);\n    };\n    var _MaxPool3DGrad = Module[\"_MaxPool3DGrad\"] = function () {\n      return (_MaxPool3DGrad = Module[\"_MaxPool3DGrad\"] = Module[\"asm\"][\"MaxPool3DGrad\"]).apply(null, arguments);\n    };\n    var _MaxPoolGrad = Module[\"_MaxPoolGrad\"] = function () {\n      return (_MaxPoolGrad = Module[\"_MaxPoolGrad\"] = Module[\"asm\"][\"MaxPoolGrad\"]).apply(null, arguments);\n    };\n    var _MaxPoolWithArgmax = Module[\"_MaxPoolWithArgmax\"] = function () {\n      return (_MaxPoolWithArgmax = Module[\"_MaxPoolWithArgmax\"] = Module[\"asm\"][\"MaxPoolWithArgmax\"]).apply(null, arguments);\n    };\n    var _Maximum = Module[\"_Maximum\"] = function () {\n      return (_Maximum = Module[\"_Maximum\"] = Module[\"asm\"][\"Maximum\"]).apply(null, arguments);\n    };\n    var _Mean = Module[\"_Mean\"] = function () {\n      return (_Mean = Module[\"_Mean\"] = Module[\"asm\"][\"Mean\"]).apply(null, arguments);\n    };\n    var _Min = Module[\"_Min\"] = function () {\n      return (_Min = Module[\"_Min\"] = Module[\"asm\"][\"Min\"]).apply(null, arguments);\n    };\n    var _Minimum = Module[\"_Minimum\"] = function () {\n      return (_Minimum = Module[\"_Minimum\"] = Module[\"asm\"][\"Minimum\"]).apply(null, arguments);\n    };\n    var _MirrorPad = Module[\"_MirrorPad\"] = function () {\n      return (_MirrorPad = Module[\"_MirrorPad\"] = Module[\"asm\"][\"MirrorPad\"]).apply(null, arguments);\n    };\n    var _Mod = Module[\"_Mod\"] = function () {\n      return (_Mod = Module[\"_Mod\"] = Module[\"asm\"][\"Mod\"]).apply(null, arguments);\n    };\n    var _Multinomial = Module[\"_Multinomial\"] = function () {\n      return (_Multinomial = Module[\"_Multinomial\"] = Module[\"asm\"][\"Multinomial\"]).apply(null, arguments);\n    };\n    var _Multiply = Module[\"_Multiply\"] = function () {\n      return (_Multiply = Module[\"_Multiply\"] = Module[\"asm\"][\"Multiply\"]).apply(null, arguments);\n    };\n    var _Neg = Module[\"_Neg\"] = function () {\n      return (_Neg = Module[\"_Neg\"] = Module[\"asm\"][\"Neg\"]).apply(null, arguments);\n    };\n    var _NonMaxSuppressionV3 = Module[\"_NonMaxSuppressionV3\"] = function () {\n      return (_NonMaxSuppressionV3 = Module[\"_NonMaxSuppressionV3\"] = Module[\"asm\"][\"NonMaxSuppressionV3\"]).apply(null, arguments);\n    };\n    var _NonMaxSuppressionV4 = Module[\"_NonMaxSuppressionV4\"] = function () {\n      return (_NonMaxSuppressionV4 = Module[\"_NonMaxSuppressionV4\"] = Module[\"asm\"][\"NonMaxSuppressionV4\"]).apply(null, arguments);\n    };\n    var _NonMaxSuppressionV5 = Module[\"_NonMaxSuppressionV5\"] = function () {\n      return (_NonMaxSuppressionV5 = Module[\"_NonMaxSuppressionV5\"] = Module[\"asm\"][\"NonMaxSuppressionV5\"]).apply(null, arguments);\n    };\n    var _NotEqual = Module[\"_NotEqual\"] = function () {\n      return (_NotEqual = Module[\"_NotEqual\"] = Module[\"asm\"][\"NotEqual\"]).apply(null, arguments);\n    };\n    var _OneHot = Module[\"_OneHot\"] = function () {\n      return (_OneHot = Module[\"_OneHot\"] = Module[\"asm\"][\"OneHot\"]).apply(null, arguments);\n    };\n    var _PadV2 = Module[\"_PadV2\"] = function () {\n      return (_PadV2 = Module[\"_PadV2\"] = Module[\"asm\"][\"PadV2\"]).apply(null, arguments);\n    };\n    var _Pow = Module[\"_Pow\"] = function () {\n      return (_Pow = Module[\"_Pow\"] = Module[\"asm\"][\"Pow\"]).apply(null, arguments);\n    };\n    var _Prelu = Module[\"_Prelu\"] = function () {\n      return (_Prelu = Module[\"_Prelu\"] = Module[\"asm\"][\"Prelu\"]).apply(null, arguments);\n    };\n    var _Prod = Module[\"_Prod\"] = function () {\n      return (_Prod = Module[\"_Prod\"] = Module[\"asm\"][\"Prod\"]).apply(null, arguments);\n    };\n    var _RealDiv = Module[\"_RealDiv\"] = function () {\n      return (_RealDiv = Module[\"_RealDiv\"] = Module[\"asm\"][\"RealDiv\"]).apply(null, arguments);\n    };\n    var _Reciprocal = Module[\"_Reciprocal\"] = function () {\n      return (_Reciprocal = Module[\"_Reciprocal\"] = Module[\"asm\"][\"Reciprocal\"]).apply(null, arguments);\n    };\n    var _Relu = Module[\"_Relu\"] = function () {\n      return (_Relu = Module[\"_Relu\"] = Module[\"asm\"][\"Relu\"]).apply(null, arguments);\n    };\n    var _Relu6 = Module[\"_Relu6\"] = function () {\n      return (_Relu6 = Module[\"_Relu6\"] = Module[\"asm\"][\"Relu6\"]).apply(null, arguments);\n    };\n    var _ResizeBilinear = Module[\"_ResizeBilinear\"] = function () {\n      return (_ResizeBilinear = Module[\"_ResizeBilinear\"] = Module[\"asm\"][\"ResizeBilinear\"]).apply(null, arguments);\n    };\n    var _ResizeBilinearGrad = Module[\"_ResizeBilinearGrad\"] = function () {\n      return (_ResizeBilinearGrad = Module[\"_ResizeBilinearGrad\"] = Module[\"asm\"][\"ResizeBilinearGrad\"]).apply(null, arguments);\n    };\n    var _ResizeNearestNeighbor = Module[\"_ResizeNearestNeighbor\"] = function () {\n      return (_ResizeNearestNeighbor = Module[\"_ResizeNearestNeighbor\"] = Module[\"asm\"][\"ResizeNearestNeighbor\"]).apply(null, arguments);\n    };\n    var _ResizeNearestNeighborGrad = Module[\"_ResizeNearestNeighborGrad\"] = function () {\n      return (_ResizeNearestNeighborGrad = Module[\"_ResizeNearestNeighborGrad\"] = Module[\"asm\"][\"ResizeNearestNeighborGrad\"]).apply(null, arguments);\n    };\n    var _Reverse = Module[\"_Reverse\"] = function () {\n      return (_Reverse = Module[\"_Reverse\"] = Module[\"asm\"][\"Reverse\"]).apply(null, arguments);\n    };\n    var _RotateWithOffset = Module[\"_RotateWithOffset\"] = function () {\n      return (_RotateWithOffset = Module[\"_RotateWithOffset\"] = Module[\"asm\"][\"RotateWithOffset\"]).apply(null, arguments);\n    };\n    var _Round = Module[\"_Round\"] = function () {\n      return (_Round = Module[\"_Round\"] = Module[\"asm\"][\"Round\"]).apply(null, arguments);\n    };\n    var _Rsqrt = Module[\"_Rsqrt\"] = function () {\n      return (_Rsqrt = Module[\"_Rsqrt\"] = Module[\"asm\"][\"Rsqrt\"]).apply(null, arguments);\n    };\n    var _ScatterNd = Module[\"_ScatterNd\"] = function () {\n      return (_ScatterNd = Module[\"_ScatterNd\"] = Module[\"asm\"][\"ScatterNd\"]).apply(null, arguments);\n    };\n    var _SearchSorted = Module[\"_SearchSorted\"] = function () {\n      return (_SearchSorted = Module[\"_SearchSorted\"] = Module[\"asm\"][\"SearchSorted\"]).apply(null, arguments);\n    };\n    var _SelectV2 = Module[\"_SelectV2\"] = function () {\n      return (_SelectV2 = Module[\"_SelectV2\"] = Module[\"asm\"][\"SelectV2\"]).apply(null, arguments);\n    };\n    var _Selu = Module[\"_Selu\"] = function () {\n      return (_Selu = Module[\"_Selu\"] = Module[\"asm\"][\"Selu\"]).apply(null, arguments);\n    };\n    var _Sigmoid = Module[\"_Sigmoid\"] = function () {\n      return (_Sigmoid = Module[\"_Sigmoid\"] = Module[\"asm\"][\"Sigmoid\"]).apply(null, arguments);\n    };\n    var _Sign = Module[\"_Sign\"] = function () {\n      return (_Sign = Module[\"_Sign\"] = Module[\"asm\"][\"Sign\"]).apply(null, arguments);\n    };\n    var _Sin = Module[\"_Sin\"] = function () {\n      return (_Sin = Module[\"_Sin\"] = Module[\"asm\"][\"Sin\"]).apply(null, arguments);\n    };\n    var _Sinh = Module[\"_Sinh\"] = function () {\n      return (_Sinh = Module[\"_Sinh\"] = Module[\"asm\"][\"Sinh\"]).apply(null, arguments);\n    };\n    var _Softmax = Module[\"_Softmax\"] = function () {\n      return (_Softmax = Module[\"_Softmax\"] = Module[\"asm\"][\"Softmax\"]).apply(null, arguments);\n    };\n    var _Softplus = Module[\"_Softplus\"] = function () {\n      return (_Softplus = Module[\"_Softplus\"] = Module[\"asm\"][\"Softplus\"]).apply(null, arguments);\n    };\n    var _SparseFillEmptyRows = Module[\"_SparseFillEmptyRows\"] = function () {\n      return (_SparseFillEmptyRows = Module[\"_SparseFillEmptyRows\"] = Module[\"asm\"][\"SparseFillEmptyRows\"]).apply(null, arguments);\n    };\n    var _SparseReshape = Module[\"_SparseReshape\"] = function () {\n      return (_SparseReshape = Module[\"_SparseReshape\"] = Module[\"asm\"][\"SparseReshape\"]).apply(null, arguments);\n    };\n    var _SparseSegmentReduction = Module[\"_SparseSegmentReduction\"] = function () {\n      return (_SparseSegmentReduction = Module[\"_SparseSegmentReduction\"] = Module[\"asm\"][\"SparseSegmentReduction\"]).apply(null, arguments);\n    };\n    var _SparseToDense = Module[\"_SparseToDense\"] = function () {\n      return (_SparseToDense = Module[\"_SparseToDense\"] = Module[\"asm\"][\"SparseToDense\"]).apply(null, arguments);\n    };\n    var _Sqrt = Module[\"_Sqrt\"] = function () {\n      return (_Sqrt = Module[\"_Sqrt\"] = Module[\"asm\"][\"Sqrt\"]).apply(null, arguments);\n    };\n    var _Square = Module[\"_Square\"] = function () {\n      return (_Square = Module[\"_Square\"] = Module[\"asm\"][\"Square\"]).apply(null, arguments);\n    };\n    var _SquaredDifference = Module[\"_SquaredDifference\"] = function () {\n      return (_SquaredDifference = Module[\"_SquaredDifference\"] = Module[\"asm\"][\"SquaredDifference\"]).apply(null, arguments);\n    };\n    var _Step = Module[\"_Step\"] = function () {\n      return (_Step = Module[\"_Step\"] = Module[\"asm\"][\"Step\"]).apply(null, arguments);\n    };\n    var _StridedSlice = Module[\"_StridedSlice\"] = function () {\n      return (_StridedSlice = Module[\"_StridedSlice\"] = Module[\"asm\"][\"StridedSlice\"]).apply(null, arguments);\n    };\n    var _Sub = Module[\"_Sub\"] = function () {\n      return (_Sub = Module[\"_Sub\"] = Module[\"asm\"][\"Sub\"]).apply(null, arguments);\n    };\n    var _Sum = Module[\"_Sum\"] = function () {\n      return (_Sum = Module[\"_Sum\"] = Module[\"asm\"][\"Sum\"]).apply(null, arguments);\n    };\n    var _Tan = Module[\"_Tan\"] = function () {\n      return (_Tan = Module[\"_Tan\"] = Module[\"asm\"][\"Tan\"]).apply(null, arguments);\n    };\n    var _Tanh = Module[\"_Tanh\"] = function () {\n      return (_Tanh = Module[\"_Tanh\"] = Module[\"asm\"][\"Tanh\"]).apply(null, arguments);\n    };\n    var _TensorScatterUpdate = Module[\"_TensorScatterUpdate\"] = function () {\n      return (_TensorScatterUpdate = Module[\"_TensorScatterUpdate\"] = Module[\"asm\"][\"TensorScatterUpdate\"]).apply(null, arguments);\n    };\n    var _Tile = Module[\"_Tile\"] = function () {\n      return (_Tile = Module[\"_Tile\"] = Module[\"asm\"][\"Tile\"]).apply(null, arguments);\n    };\n    var _TopK = Module[\"_TopK\"] = function () {\n      return (_TopK = Module[\"_TopK\"] = Module[\"asm\"][\"TopK\"]).apply(null, arguments);\n    };\n    var _Transform = Module[\"_Transform\"] = function () {\n      return (_Transform = Module[\"_Transform\"] = Module[\"asm\"][\"Transform\"]).apply(null, arguments);\n    };\n    var _Transpose = Module[\"_Transpose\"] = function () {\n      return (_Transpose = Module[\"_Transpose\"] = Module[\"asm\"][\"Transpose\"]).apply(null, arguments);\n    };\n    var __FusedMatMul = Module[\"__FusedMatMul\"] = function () {\n      return (__FusedMatMul = Module[\"__FusedMatMul\"] = Module[\"asm\"][\"_FusedMatMul\"]).apply(null, arguments);\n    };\n    var _malloc = Module[\"_malloc\"] = function () {\n      return (_malloc = Module[\"_malloc\"] = Module[\"asm\"][\"malloc\"]).apply(null, arguments);\n    };\n    var _free = Module[\"_free\"] = function () {\n      return (_free = Module[\"_free\"] = Module[\"asm\"][\"free\"]).apply(null, arguments);\n    };\n    var __emscripten_tls_init = Module[\"__emscripten_tls_init\"] = function () {\n      return (__emscripten_tls_init = Module[\"__emscripten_tls_init\"] = Module[\"asm\"][\"_emscripten_tls_init\"]).apply(null, arguments);\n    };\n    var _pthread_self = Module[\"_pthread_self\"] = function () {\n      return (_pthread_self = Module[\"_pthread_self\"] = Module[\"asm\"][\"pthread_self\"]).apply(null, arguments);\n    };\n    var ___errno_location = Module[\"___errno_location\"] = function () {\n      return (___errno_location = Module[\"___errno_location\"] = Module[\"asm\"][\"__errno_location\"]).apply(null, arguments);\n    };\n    var __emscripten_thread_init = Module[\"__emscripten_thread_init\"] = function () {\n      return (__emscripten_thread_init = Module[\"__emscripten_thread_init\"] = Module[\"asm\"][\"_emscripten_thread_init\"]).apply(null, arguments);\n    };\n    var __emscripten_thread_crashed = Module[\"__emscripten_thread_crashed\"] = function () {\n      return (__emscripten_thread_crashed = Module[\"__emscripten_thread_crashed\"] = Module[\"asm\"][\"_emscripten_thread_crashed\"]).apply(null, arguments);\n    };\n    var _emscripten_main_thread_process_queued_calls = Module[\"_emscripten_main_thread_process_queued_calls\"] = function () {\n      return (_emscripten_main_thread_process_queued_calls = Module[\"_emscripten_main_thread_process_queued_calls\"] = Module[\"asm\"][\"emscripten_main_thread_process_queued_calls\"]).apply(null, arguments);\n    };\n    var _emscripten_main_browser_thread_id = Module[\"_emscripten_main_browser_thread_id\"] = function () {\n      return (_emscripten_main_browser_thread_id = Module[\"_emscripten_main_browser_thread_id\"] = Module[\"asm\"][\"emscripten_main_browser_thread_id\"]).apply(null, arguments);\n    };\n    var _emscripten_run_in_main_runtime_thread_js = Module[\"_emscripten_run_in_main_runtime_thread_js\"] = function () {\n      return (_emscripten_run_in_main_runtime_thread_js = Module[\"_emscripten_run_in_main_runtime_thread_js\"] = Module[\"asm\"][\"emscripten_run_in_main_runtime_thread_js\"]).apply(null, arguments);\n    };\n    var _emscripten_dispatch_to_thread_ = Module[\"_emscripten_dispatch_to_thread_\"] = function () {\n      return (_emscripten_dispatch_to_thread_ = Module[\"_emscripten_dispatch_to_thread_\"] = Module[\"asm\"][\"emscripten_dispatch_to_thread_\"]).apply(null, arguments);\n    };\n    var __emscripten_proxy_execute_task_queue = Module[\"__emscripten_proxy_execute_task_queue\"] = function () {\n      return (__emscripten_proxy_execute_task_queue = Module[\"__emscripten_proxy_execute_task_queue\"] = Module[\"asm\"][\"_emscripten_proxy_execute_task_queue\"]).apply(null, arguments);\n    };\n    var __emscripten_thread_free_data = Module[\"__emscripten_thread_free_data\"] = function () {\n      return (__emscripten_thread_free_data = Module[\"__emscripten_thread_free_data\"] = Module[\"asm\"][\"_emscripten_thread_free_data\"]).apply(null, arguments);\n    };\n    var __emscripten_thread_exit = Module[\"__emscripten_thread_exit\"] = function () {\n      return (__emscripten_thread_exit = Module[\"__emscripten_thread_exit\"] = Module[\"asm\"][\"_emscripten_thread_exit\"]).apply(null, arguments);\n    };\n    var _emscripten_stack_set_limits = Module[\"_emscripten_stack_set_limits\"] = function () {\n      return (_emscripten_stack_set_limits = Module[\"_emscripten_stack_set_limits\"] = Module[\"asm\"][\"emscripten_stack_set_limits\"]).apply(null, arguments);\n    };\n    var stackSave = Module[\"stackSave\"] = function () {\n      return (stackSave = Module[\"stackSave\"] = Module[\"asm\"][\"stackSave\"]).apply(null, arguments);\n    };\n    var stackRestore = Module[\"stackRestore\"] = function () {\n      return (stackRestore = Module[\"stackRestore\"] = Module[\"asm\"][\"stackRestore\"]).apply(null, arguments);\n    };\n    var stackAlloc = Module[\"stackAlloc\"] = function () {\n      return (stackAlloc = Module[\"stackAlloc\"] = Module[\"asm\"][\"stackAlloc\"]).apply(null, arguments);\n    };\n    var dynCall_iijjiiii = Module[\"dynCall_iijjiiii\"] = function () {\n      return (dynCall_iijjiiii = Module[\"dynCall_iijjiiii\"] = Module[\"asm\"][\"dynCall_iijjiiii\"]).apply(null, arguments);\n    };\n    var dynCall_jiji = Module[\"dynCall_jiji\"] = function () {\n      return (dynCall_jiji = Module[\"dynCall_jiji\"] = Module[\"asm\"][\"dynCall_jiji\"]).apply(null, arguments);\n    };\n    Module[\"keepRuntimeAlive\"] = keepRuntimeAlive;\n    Module[\"wasmMemory\"] = wasmMemory;\n    Module[\"cwrap\"] = cwrap;\n    Module[\"ExitStatus\"] = ExitStatus;\n    Module[\"PThread\"] = PThread;\n    var calledRun;\n    dependenciesFulfilled = function runCaller() {\n      if (!calledRun) run();\n      if (!calledRun) dependenciesFulfilled = runCaller;\n    };\n    function run(args) {\n      args = args || arguments_;\n      if (runDependencies > 0) {\n        return;\n      }\n      if (ENVIRONMENT_IS_PTHREAD) {\n        readyPromiseResolve(Module);\n        initRuntime();\n        startWorker(Module);\n        return;\n      }\n      preRun();\n      if (runDependencies > 0) {\n        return;\n      }\n      function doRun() {\n        if (calledRun) return;\n        calledRun = true;\n        Module[\"calledRun\"] = true;\n        if (ABORT) return;\n        initRuntime();\n        readyPromiseResolve(Module);\n        if (Module[\"onRuntimeInitialized\"]) Module[\"onRuntimeInitialized\"]();\n        postRun();\n      }\n      if (Module[\"setStatus\"]) {\n        Module[\"setStatus\"](\"Running...\");\n        setTimeout(function () {\n          setTimeout(function () {\n            Module[\"setStatus\"](\"\");\n          }, 1);\n          doRun();\n        }, 1);\n      } else {\n        doRun();\n      }\n    }\n    if (Module[\"preInit\"]) {\n      if (typeof Module[\"preInit\"] == \"function\") Module[\"preInit\"] = [Module[\"preInit\"]];\n      while (Module[\"preInit\"].length > 0) {\n        Module[\"preInit\"].pop()();\n      }\n    }\n    run();\n    var listenersAdded;\n    if (beforeListeners) {\n      listenersAdded = {\n        uncaughtException: process.listeners(\"uncaughtException\").filter(function (listener) {\n          return !beforeListeners.uncaughtException.indexOf(listener) > -1;\n        }),\n        unhandledRejection: process.listeners(\"unhandledRejection\").filter(function (listener) {\n          return !beforeListeners.unhandledRejection.indexOf(listener) > -1;\n        })\n      };\n    }\n    var actualModule;\n    if (typeof WasmBackendModule !== \"undefined\") {\n      actualModule = WasmBackendModule;\n    } else if (typeof WasmBackendModuleThreadedSimd !== \"undefined\") {\n      actualModule = WasmBackendModuleThreadedSimd;\n    } else {\n      throw new Error(\"Could not find wasm module in post.js\");\n    }\n    if (listenersAdded) {\n      var tmpDispose = actualModule[\"_dispose\"];\n      actualModule[\"_dispose\"] = function () {\n        tmpDispose();\n        listenersAdded.uncaughtException.forEach(function (listener) {\n          process.removeListener(\"uncaughtException\", listener);\n        });\n        listenersAdded.unhandledRejection.forEach(function (listener) {\n          process.removeListener(\"unhandledRejection\", listener);\n        });\n      };\n    }\n    return WasmBackendModuleThreadedSimd.ready;\n  };\n})();\nif (typeof exports === 'object' && typeof module === 'object') module.exports = WasmBackendModuleThreadedSimd;else if (typeof define === 'function' && define['amd']) define([], function () {\n  return WasmBackendModuleThreadedSimd;\n});else if (typeof exports === 'object') exports[\"WasmBackendModuleThreadedSimd\"] = WasmBackendModuleThreadedSimd;", "module.exports.wasmWorkerContents = `\"use strict\";var Module={};var ENVIRONMENT_IS_NODE=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require(\"worker_threads\");var parentPort=nodeWorkerThreads.parentPort;parentPort.on(\"message\",data=>onmessage({data:data}));var fs=require(\"fs\");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,\"utf8\")+\"//# sourceURL=\"+f)},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}var initializedJS=false;var pendingNotifiedProxyingQueues=[];function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(\" \");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+\"\\n\");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(\" \");postMessage({cmd:\"alert\",text:text,threadId:Module[\"_pthread_self\"]()})}var err=threadPrintErr;self.alert=threadAlert;Module[\"instantiateWasm\"]=(info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module[\"wasmModule\"],info);receiveInstance(instance);Module[\"wasmModule\"]=null;return instance.exports};self.onunhandledrejection=e=>{throw e.reason??e};self.startWorker=instance=>{Module=instance;postMessage({\"cmd\":\"loaded\"})};self.onmessage=e=>{try{if(e.data.cmd===\"load\"){Module[\"wasmModule\"]=e.data.wasmModule;for(const handler of e.data.handlers){Module[handler]=function(){postMessage({cmd:\"callHandler\",handler:handler,args:[...arguments]})}}Module[\"wasmMemory\"]=e.data.wasmMemory;Module[\"buffer\"]=Module[\"wasmMemory\"].buffer;Module[\"ENVIRONMENT_IS_PTHREAD\"]=true;if(typeof e.data.urlOrBlob==\"string\"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module)}else if(e.data.cmd===\"run\"){Module[\"__emscripten_thread_init\"](e.data.pthread_ptr,0,0,1);Module[\"establishStackSpace\"]();Module[\"PThread\"].receiveObjectTransfer(e.data);Module[\"PThread\"].threadInitTLS();if(!initializedJS){pendingNotifiedProxyingQueues.forEach(queue=>{Module[\"executeNotifiedProxyingQueue\"](queue)});pendingNotifiedProxyingQueues=[];initializedJS=true}try{Module[\"invokeEntryPoint\"](e.data.start_routine,e.data.arg)}catch(ex){if(ex!=\"unwind\"){if(ex instanceof Module[\"ExitStatus\"]){if(Module[\"keepRuntimeAlive\"]()){}else{Module[\"__emscripten_thread_exit\"](ex.status)}}else{throw ex}}}}else if(e.data.cmd===\"cancel\"){if(Module[\"_pthread_self\"]()){Module[\"__emscripten_thread_exit\"](-1)}}else if(e.data.target===\"setimmediate\"){}else if(e.data.cmd===\"processProxyingQueue\"){if(initializedJS){Module[\"executeNotifiedProxyingQueue\"](e.data.queue)}else{pendingNotifiedProxyingQueues.push(e.data.queue)}}else if(e.data.cmd){err(\"worker.js received unknown command \"+e.data.cmd);err(e.data)}}catch(ex){if(Module[\"__emscripten_thread_crashed\"]){Module[\"__emscripten_thread_crashed\"]()}throw ex}};`;", "var WasmBackendModule = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return function (WasmBackendModule) {\n    WasmBackendModule = WasmBackendModule || {};\n    var Module = typeof WasmBackendModule != \"undefined\" ? WasmBackendModule : {};\n    var readyPromiseResolve, readyPromiseReject;\n    Module[\"ready\"] = new Promise(function (resolve, reject) {\n      readyPromiseResolve = resolve;\n      readyPromiseReject = reject;\n    });\n    var beforeListeners;\n    if (typeof process !== \"undefined\" && process.listeners) {\n      beforeListeners = {\n        uncaughtException: process.listeners(\"uncaughtException\"),\n        unhandledRejection: process.listeners(\"unhandledRejection\")\n      };\n    }\n    var moduleOverrides = Object.assign({}, Module);\n    var arguments_ = [];\n    var thisProgram = \"./this.program\";\n    var quit_ = (status, toThrow) => {\n      throw toThrow;\n    };\n    var ENVIRONMENT_IS_WEB = typeof window == \"object\";\n    var ENVIRONMENT_IS_WORKER = typeof importScripts == \"function\";\n    var ENVIRONMENT_IS_NODE = typeof process == \"object\" && typeof process.versions == \"object\" && typeof process.versions.node == \"string\";\n    var scriptDirectory = \"\";\n    function locateFile(path) {\n      if (Module[\"locateFile\"]) {\n        return Module[\"locateFile\"](path, scriptDirectory);\n      }\n      return scriptDirectory + path;\n    }\n    var read_, readAsync, readBinary, setWindowTitle;\n    function logExceptionOnExit(e) {\n      if (e instanceof ExitStatus) return;\n      let toLog = e;\n      err(\"exiting due to exception: \" + toLog);\n    }\n    if (ENVIRONMENT_IS_NODE) {\n      var fs = require(\"fs\");\n      var nodePath = require(\"path\");\n      if (ENVIRONMENT_IS_WORKER) {\n        scriptDirectory = nodePath.dirname(scriptDirectory) + \"/\";\n      } else {\n        scriptDirectory = __dirname + \"/\";\n      }\n      read_ = (filename, binary) => {\n        filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);\n        return fs.readFileSync(filename, binary ? undefined : \"utf8\");\n      };\n      readBinary = filename => {\n        var ret = read_(filename, true);\n        if (!ret.buffer) {\n          ret = new Uint8Array(ret);\n        }\n        return ret;\n      };\n      readAsync = (filename, onload, onerror) => {\n        filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);\n        fs.readFile(filename, function (err, data) {\n          if (err) onerror(err);else onload(data.buffer);\n        });\n      };\n      if (process[\"argv\"].length > 1) {\n        thisProgram = process[\"argv\"][1].replace(/\\\\/g, \"/\");\n      }\n      arguments_ = process[\"argv\"].slice(2);\n      process[\"on\"](\"uncaughtException\", function (ex) {\n        if (!(ex instanceof ExitStatus)) {\n          throw ex;\n        }\n      });\n      process[\"on\"](\"unhandledRejection\", function (reason) {\n        throw reason;\n      });\n      quit_ = (status, toThrow) => {\n        if (keepRuntimeAlive()) {\n          process[\"exitCode\"] = status;\n          throw toThrow;\n        }\n        logExceptionOnExit(toThrow);\n        process[\"exit\"](status);\n      };\n      Module[\"inspect\"] = function () {\n        return \"[Emscripten Module object]\";\n      };\n    } else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n      if (ENVIRONMENT_IS_WORKER) {\n        scriptDirectory = self.location.href;\n      } else if (typeof document != \"undefined\" && document.currentScript) {\n        scriptDirectory = document.currentScript.src;\n      }\n      if (_scriptDir) {\n        scriptDirectory = _scriptDir;\n      }\n      if (scriptDirectory.indexOf(\"blob:\") !== 0) {\n        scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf(\"/\") + 1);\n      } else {\n        scriptDirectory = \"\";\n      }\n      {\n        read_ = url => {\n          var xhr = new XMLHttpRequest();\n          xhr.open(\"GET\", url, false);\n          xhr.send(null);\n          return xhr.responseText;\n        };\n        if (ENVIRONMENT_IS_WORKER) {\n          readBinary = url => {\n            var xhr = new XMLHttpRequest();\n            xhr.open(\"GET\", url, false);\n            xhr.responseType = \"arraybuffer\";\n            xhr.send(null);\n            return new Uint8Array(xhr.response);\n          };\n        }\n        readAsync = (url, onload, onerror) => {\n          var xhr = new XMLHttpRequest();\n          xhr.open(\"GET\", url, true);\n          xhr.responseType = \"arraybuffer\";\n          xhr.onload = () => {\n            if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n              onload(xhr.response);\n              return;\n            }\n            onerror();\n          };\n          xhr.onerror = onerror;\n          xhr.send(null);\n        };\n      }\n      setWindowTitle = title => document.title = title;\n    } else {}\n    var out = Module[\"print\"] || console.log.bind(console);\n    var err = Module[\"printErr\"] || console.warn.bind(console);\n    Object.assign(Module, moduleOverrides);\n    moduleOverrides = null;\n    if (Module[\"arguments\"]) arguments_ = Module[\"arguments\"];\n    if (Module[\"thisProgram\"]) thisProgram = Module[\"thisProgram\"];\n    if (Module[\"quit\"]) quit_ = Module[\"quit\"];\n    var POINTER_SIZE = 4;\n    var wasmBinary;\n    if (Module[\"wasmBinary\"]) wasmBinary = Module[\"wasmBinary\"];\n    var noExitRuntime = Module[\"noExitRuntime\"] || true;\n    if (typeof WebAssembly != \"object\") {\n      abort(\"no native wasm support detected\");\n    }\n    var wasmMemory;\n    var ABORT = false;\n    var EXITSTATUS;\n    function assert(condition, text) {\n      if (!condition) {\n        abort(text);\n      }\n    }\n    var UTF8Decoder = typeof TextDecoder != \"undefined\" ? new TextDecoder(\"utf8\") : undefined;\n    function UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {\n      idx >>>= 0;\n      var endIdx = idx + maxBytesToRead;\n      var endPtr = idx;\n      while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n      if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n        return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n      }\n      var str = \"\";\n      while (idx < endPtr) {\n        var u0 = heapOrArray[idx++];\n        if (!(u0 & 128)) {\n          str += String.fromCharCode(u0);\n          continue;\n        }\n        var u1 = heapOrArray[idx++] & 63;\n        if ((u0 & 224) == 192) {\n          str += String.fromCharCode((u0 & 31) << 6 | u1);\n          continue;\n        }\n        var u2 = heapOrArray[idx++] & 63;\n        if ((u0 & 240) == 224) {\n          u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n        } else {\n          u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heapOrArray[idx++] & 63;\n        }\n        if (u0 < 65536) {\n          str += String.fromCharCode(u0);\n        } else {\n          var ch = u0 - 65536;\n          str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n        }\n      }\n      return str;\n    }\n    function UTF8ToString(ptr, maxBytesToRead) {\n      ptr >>>= 0;\n      return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\";\n    }\n    function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n      outIdx >>>= 0;\n      if (!(maxBytesToWrite > 0)) return 0;\n      var startIdx = outIdx;\n      var endIdx = outIdx + maxBytesToWrite - 1;\n      for (var i = 0; i < str.length; ++i) {\n        var u = str.charCodeAt(i);\n        if (u >= 55296 && u <= 57343) {\n          var u1 = str.charCodeAt(++i);\n          u = 65536 + ((u & 1023) << 10) | u1 & 1023;\n        }\n        if (u <= 127) {\n          if (outIdx >= endIdx) break;\n          heap[outIdx++ >>> 0] = u;\n        } else if (u <= 2047) {\n          if (outIdx + 1 >= endIdx) break;\n          heap[outIdx++ >>> 0] = 192 | u >> 6;\n          heap[outIdx++ >>> 0] = 128 | u & 63;\n        } else if (u <= 65535) {\n          if (outIdx + 2 >= endIdx) break;\n          heap[outIdx++ >>> 0] = 224 | u >> 12;\n          heap[outIdx++ >>> 0] = 128 | u >> 6 & 63;\n          heap[outIdx++ >>> 0] = 128 | u & 63;\n        } else {\n          if (outIdx + 3 >= endIdx) break;\n          heap[outIdx++ >>> 0] = 240 | u >> 18;\n          heap[outIdx++ >>> 0] = 128 | u >> 12 & 63;\n          heap[outIdx++ >>> 0] = 128 | u >> 6 & 63;\n          heap[outIdx++ >>> 0] = 128 | u & 63;\n        }\n      }\n      heap[outIdx >>> 0] = 0;\n      return outIdx - startIdx;\n    }\n    function stringToUTF8(str, outPtr, maxBytesToWrite) {\n      return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n    }\n    var buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n    function updateGlobalBufferAndViews(buf) {\n      buffer = buf;\n      Module[\"HEAP8\"] = HEAP8 = new Int8Array(buf);\n      Module[\"HEAP16\"] = HEAP16 = new Int16Array(buf);\n      Module[\"HEAP32\"] = HEAP32 = new Int32Array(buf);\n      Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(buf);\n      Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(buf);\n      Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(buf);\n      Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(buf);\n      Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(buf);\n    }\n    var INITIAL_MEMORY = Module[\"INITIAL_MEMORY\"] || 16777216;\n    var wasmTable;\n    var __ATPRERUN__ = [];\n    var __ATINIT__ = [];\n    var __ATPOSTRUN__ = [];\n    var runtimeInitialized = false;\n    function keepRuntimeAlive() {\n      return noExitRuntime;\n    }\n    function preRun() {\n      if (Module[\"preRun\"]) {\n        if (typeof Module[\"preRun\"] == \"function\") Module[\"preRun\"] = [Module[\"preRun\"]];\n        while (Module[\"preRun\"].length) {\n          addOnPreRun(Module[\"preRun\"].shift());\n        }\n      }\n      callRuntimeCallbacks(__ATPRERUN__);\n    }\n    function initRuntime() {\n      runtimeInitialized = true;\n      callRuntimeCallbacks(__ATINIT__);\n    }\n    function postRun() {\n      if (Module[\"postRun\"]) {\n        if (typeof Module[\"postRun\"] == \"function\") Module[\"postRun\"] = [Module[\"postRun\"]];\n        while (Module[\"postRun\"].length) {\n          addOnPostRun(Module[\"postRun\"].shift());\n        }\n      }\n      callRuntimeCallbacks(__ATPOSTRUN__);\n    }\n    function addOnPreRun(cb) {\n      __ATPRERUN__.unshift(cb);\n    }\n    function addOnInit(cb) {\n      __ATINIT__.unshift(cb);\n    }\n    function addOnPostRun(cb) {\n      __ATPOSTRUN__.unshift(cb);\n    }\n    var runDependencies = 0;\n    var runDependencyWatcher = null;\n    var dependenciesFulfilled = null;\n    function addRunDependency(id) {\n      runDependencies++;\n      if (Module[\"monitorRunDependencies\"]) {\n        Module[\"monitorRunDependencies\"](runDependencies);\n      }\n    }\n    function removeRunDependency(id) {\n      runDependencies--;\n      if (Module[\"monitorRunDependencies\"]) {\n        Module[\"monitorRunDependencies\"](runDependencies);\n      }\n      if (runDependencies == 0) {\n        if (runDependencyWatcher !== null) {\n          clearInterval(runDependencyWatcher);\n          runDependencyWatcher = null;\n        }\n        if (dependenciesFulfilled) {\n          var callback = dependenciesFulfilled;\n          dependenciesFulfilled = null;\n          callback();\n        }\n      }\n    }\n    function abort(what) {\n      if (Module[\"onAbort\"]) {\n        Module[\"onAbort\"](what);\n      }\n      what = \"Aborted(\" + what + \")\";\n      err(what);\n      ABORT = true;\n      EXITSTATUS = 1;\n      what += \". Build with -sASSERTIONS for more info.\";\n      var e = new WebAssembly.RuntimeError(what);\n      readyPromiseReject(e);\n      throw e;\n    }\n    var dataURIPrefix = \"data:application/octet-stream;base64,\";\n    function isDataURI(filename) {\n      return filename.startsWith(dataURIPrefix);\n    }\n    function isFileURI(filename) {\n      return filename.startsWith(\"file://\");\n    }\n    var wasmBinaryFile;\n    wasmBinaryFile = \"tfjs-backend-wasm.wasm\";\n    if (!isDataURI(wasmBinaryFile)) {\n      wasmBinaryFile = locateFile(wasmBinaryFile);\n    }\n    function getBinary(file) {\n      try {\n        if (file == wasmBinaryFile && wasmBinary) {\n          return new Uint8Array(wasmBinary);\n        }\n        if (readBinary) {\n          return readBinary(file);\n        }\n        throw \"both async and sync fetching of the wasm failed\";\n      } catch (err) {\n        abort(err);\n      }\n    }\n    function getBinaryPromise() {\n      if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n        if (typeof fetch == \"function\" && !isFileURI(wasmBinaryFile)) {\n          return fetch(wasmBinaryFile, {\n            credentials: \"same-origin\"\n          }).then(function (response) {\n            if (!response[\"ok\"]) {\n              throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\n            }\n            return response[\"arrayBuffer\"]();\n          }).catch(function () {\n            return getBinary(wasmBinaryFile);\n          });\n        } else {\n          if (readAsync) {\n            return new Promise(function (resolve, reject) {\n              readAsync(wasmBinaryFile, function (response) {\n                resolve(new Uint8Array(response));\n              }, reject);\n            });\n          }\n        }\n      }\n      return Promise.resolve().then(function () {\n        return getBinary(wasmBinaryFile);\n      });\n    }\n    function createWasm() {\n      var info = {\n        \"env\": asmLibraryArg,\n        \"wasi_snapshot_preview1\": asmLibraryArg\n      };\n      function receiveInstance(instance, module) {\n        var exports = instance.exports;\n        Module[\"asm\"] = exports;\n        wasmMemory = Module[\"asm\"][\"memory\"];\n        updateGlobalBufferAndViews(wasmMemory.buffer);\n        wasmTable = Module[\"asm\"][\"__indirect_function_table\"];\n        addOnInit(Module[\"asm\"][\"__wasm_call_ctors\"]);\n        removeRunDependency(\"wasm-instantiate\");\n      }\n      addRunDependency(\"wasm-instantiate\");\n      function receiveInstantiationResult(result) {\n        receiveInstance(result[\"instance\"]);\n      }\n      function instantiateArrayBuffer(receiver) {\n        return getBinaryPromise().then(function (binary) {\n          return WebAssembly.instantiate(binary, info);\n        }).then(function (instance) {\n          return instance;\n        }).then(receiver, function (reason) {\n          err(\"failed to asynchronously prepare wasm: \" + reason);\n          abort(reason);\n        });\n      }\n      function instantiateAsync() {\n        if (!wasmBinary && typeof WebAssembly.instantiateStreaming == \"function\" && !isDataURI(wasmBinaryFile) && !isFileURI(wasmBinaryFile) && !ENVIRONMENT_IS_NODE && typeof fetch == \"function\") {\n          return fetch(wasmBinaryFile, {\n            credentials: \"same-origin\"\n          }).then(function (response) {\n            var result = WebAssembly.instantiateStreaming(response, info);\n            return result.then(receiveInstantiationResult, function (reason) {\n              err(\"wasm streaming compile failed: \" + reason);\n              err(\"falling back to ArrayBuffer instantiation\");\n              return instantiateArrayBuffer(receiveInstantiationResult);\n            });\n          });\n        } else {\n          return instantiateArrayBuffer(receiveInstantiationResult);\n        }\n      }\n      if (Module[\"instantiateWasm\"]) {\n        try {\n          var exports = Module[\"instantiateWasm\"](info, receiveInstance);\n          return exports;\n        } catch (e) {\n          err(\"Module.instantiateWasm callback failed with error: \" + e);\n          readyPromiseReject(e);\n        }\n      }\n      instantiateAsync().catch(readyPromiseReject);\n      return {};\n    }\n    var tempDouble;\n    var tempI64;\n    function ExitStatus(status) {\n      this.name = \"ExitStatus\";\n      this.message = \"Program terminated with exit(\" + status + \")\";\n      this.status = status;\n    }\n    function callRuntimeCallbacks(callbacks) {\n      while (callbacks.length > 0) {\n        callbacks.shift()(Module);\n      }\n    }\n    function _abort() {\n      abort(\"\");\n    }\n    function getHeapMax() {\n      return 4294901760;\n    }\n    function _emscripten_get_heap_max() {\n      return getHeapMax();\n    }\n    function _emscripten_memcpy_big(dest, src, num) {\n      HEAPU8.copyWithin(dest >>> 0, src >>> 0, src + num >>> 0);\n    }\n    function emscripten_realloc_buffer(size) {\n      try {\n        wasmMemory.grow(size - buffer.byteLength + 65535 >>> 16);\n        updateGlobalBufferAndViews(wasmMemory.buffer);\n        return 1;\n      } catch (e) {}\n    }\n    function _emscripten_resize_heap(requestedSize) {\n      var oldSize = HEAPU8.length;\n      requestedSize = requestedSize >>> 0;\n      var maxHeapSize = getHeapMax();\n      if (requestedSize > maxHeapSize) {\n        return false;\n      }\n      let alignUp = (x, multiple) => x + (multiple - x % multiple) % multiple;\n      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n        var overGrownHeapSize = oldSize * (1 + .2 / cutDown);\n        overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n        var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n        var replacement = emscripten_realloc_buffer(newSize);\n        if (replacement) {\n          return true;\n        }\n      }\n      return false;\n    }\n    var SYSCALLS = {\n      varargs: undefined,\n      get: function () {\n        SYSCALLS.varargs += 4;\n        var ret = HEAP32[SYSCALLS.varargs - 4 >>> 2];\n        return ret;\n      },\n      getStr: function (ptr) {\n        var ret = UTF8ToString(ptr);\n        return ret;\n      }\n    };\n    function _fd_close(fd) {\n      return 52;\n    }\n    function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n      return 70;\n    }\n    var printCharBuffers = [null, [], []];\n    function printChar(stream, curr) {\n      var buffer = printCharBuffers[stream];\n      if (curr === 0 || curr === 10) {\n        (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));\n        buffer.length = 0;\n      } else {\n        buffer.push(curr);\n      }\n    }\n    function _fd_write(fd, iov, iovcnt, pnum) {\n      var num = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[iov >>> 2];\n        var len = HEAPU32[iov + 4 >>> 2];\n        iov += 8;\n        for (var j = 0; j < len; j++) {\n          printChar(fd, HEAPU8[ptr + j >>> 0]);\n        }\n        num += len;\n      }\n      HEAPU32[pnum >>> 2] = num;\n      return 0;\n    }\n    function getCFunc(ident) {\n      var func = Module[\"_\" + ident];\n      return func;\n    }\n    function writeArrayToMemory(array, buffer) {\n      HEAP8.set(array, buffer >>> 0);\n    }\n    function ccall(ident, returnType, argTypes, args, opts) {\n      var toC = {\n        \"string\": str => {\n          var ret = 0;\n          if (str !== null && str !== undefined && str !== 0) {\n            var len = (str.length << 2) + 1;\n            ret = stackAlloc(len);\n            stringToUTF8(str, ret, len);\n          }\n          return ret;\n        },\n        \"array\": arr => {\n          var ret = stackAlloc(arr.length);\n          writeArrayToMemory(arr, ret);\n          return ret;\n        }\n      };\n      function convertReturnValue(ret) {\n        if (returnType === \"string\") {\n          return UTF8ToString(ret);\n        }\n        if (returnType === \"boolean\") return Boolean(ret);\n        return ret;\n      }\n      var func = getCFunc(ident);\n      var cArgs = [];\n      var stack = 0;\n      if (args) {\n        for (var i = 0; i < args.length; i++) {\n          var converter = toC[argTypes[i]];\n          if (converter) {\n            if (stack === 0) stack = stackSave();\n            cArgs[i] = converter(args[i]);\n          } else {\n            cArgs[i] = args[i];\n          }\n        }\n      }\n      var ret = func.apply(null, cArgs);\n      function onDone(ret) {\n        if (stack !== 0) stackRestore(stack);\n        return convertReturnValue(ret);\n      }\n      ret = onDone(ret);\n      return ret;\n    }\n    function cwrap(ident, returnType, argTypes, opts) {\n      argTypes = argTypes || [];\n      var numericArgs = argTypes.every(type => type === \"number\" || type === \"boolean\");\n      var numericRet = returnType !== \"string\";\n      if (numericRet && numericArgs && !opts) {\n        return getCFunc(ident);\n      }\n      return function () {\n        return ccall(ident, returnType, argTypes, arguments, opts);\n      };\n    }\n    var asmLibraryArg = {\n      \"abort\": _abort,\n      \"emscripten_get_heap_max\": _emscripten_get_heap_max,\n      \"emscripten_memcpy_big\": _emscripten_memcpy_big,\n      \"emscripten_resize_heap\": _emscripten_resize_heap,\n      \"fd_close\": _fd_close,\n      \"fd_seek\": _fd_seek,\n      \"fd_write\": _fd_write\n    };\n    var asm = createWasm();\n    var ___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = function () {\n      return (___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = Module[\"asm\"][\"__wasm_call_ctors\"]).apply(null, arguments);\n    };\n    var _init = Module[\"_init\"] = function () {\n      return (_init = Module[\"_init\"] = Module[\"asm\"][\"init\"]).apply(null, arguments);\n    };\n    var _init_with_threads_count = Module[\"_init_with_threads_count\"] = function () {\n      return (_init_with_threads_count = Module[\"_init_with_threads_count\"] = Module[\"asm\"][\"init_with_threads_count\"]).apply(null, arguments);\n    };\n    var _get_threads_count = Module[\"_get_threads_count\"] = function () {\n      return (_get_threads_count = Module[\"_get_threads_count\"] = Module[\"asm\"][\"get_threads_count\"]).apply(null, arguments);\n    };\n    var _register_tensor = Module[\"_register_tensor\"] = function () {\n      return (_register_tensor = Module[\"_register_tensor\"] = Module[\"asm\"][\"register_tensor\"]).apply(null, arguments);\n    };\n    var _dispose_data = Module[\"_dispose_data\"] = function () {\n      return (_dispose_data = Module[\"_dispose_data\"] = Module[\"asm\"][\"dispose_data\"]).apply(null, arguments);\n    };\n    var _dispose = Module[\"_dispose\"] = function () {\n      return (_dispose = Module[\"_dispose\"] = Module[\"asm\"][\"dispose\"]).apply(null, arguments);\n    };\n    var _Abs = Module[\"_Abs\"] = function () {\n      return (_Abs = Module[\"_Abs\"] = Module[\"asm\"][\"Abs\"]).apply(null, arguments);\n    };\n    var _Acos = Module[\"_Acos\"] = function () {\n      return (_Acos = Module[\"_Acos\"] = Module[\"asm\"][\"Acos\"]).apply(null, arguments);\n    };\n    var _Acosh = Module[\"_Acosh\"] = function () {\n      return (_Acosh = Module[\"_Acosh\"] = Module[\"asm\"][\"Acosh\"]).apply(null, arguments);\n    };\n    var _Add = Module[\"_Add\"] = function () {\n      return (_Add = Module[\"_Add\"] = Module[\"asm\"][\"Add\"]).apply(null, arguments);\n    };\n    var _AddN = Module[\"_AddN\"] = function () {\n      return (_AddN = Module[\"_AddN\"] = Module[\"asm\"][\"AddN\"]).apply(null, arguments);\n    };\n    var _All = Module[\"_All\"] = function () {\n      return (_All = Module[\"_All\"] = Module[\"asm\"][\"All\"]).apply(null, arguments);\n    };\n    var _Any = Module[\"_Any\"] = function () {\n      return (_Any = Module[\"_Any\"] = Module[\"asm\"][\"Any\"]).apply(null, arguments);\n    };\n    var _ArgMax = Module[\"_ArgMax\"] = function () {\n      return (_ArgMax = Module[\"_ArgMax\"] = Module[\"asm\"][\"ArgMax\"]).apply(null, arguments);\n    };\n    var _ArgMin = Module[\"_ArgMin\"] = function () {\n      return (_ArgMin = Module[\"_ArgMin\"] = Module[\"asm\"][\"ArgMin\"]).apply(null, arguments);\n    };\n    var _Asin = Module[\"_Asin\"] = function () {\n      return (_Asin = Module[\"_Asin\"] = Module[\"asm\"][\"Asin\"]).apply(null, arguments);\n    };\n    var _Asinh = Module[\"_Asinh\"] = function () {\n      return (_Asinh = Module[\"_Asinh\"] = Module[\"asm\"][\"Asinh\"]).apply(null, arguments);\n    };\n    var _Atan = Module[\"_Atan\"] = function () {\n      return (_Atan = Module[\"_Atan\"] = Module[\"asm\"][\"Atan\"]).apply(null, arguments);\n    };\n    var _Atan2 = Module[\"_Atan2\"] = function () {\n      return (_Atan2 = Module[\"_Atan2\"] = Module[\"asm\"][\"Atan2\"]).apply(null, arguments);\n    };\n    var _Atanh = Module[\"_Atanh\"] = function () {\n      return (_Atanh = Module[\"_Atanh\"] = Module[\"asm\"][\"Atanh\"]).apply(null, arguments);\n    };\n    var _AvgPool = Module[\"_AvgPool\"] = function () {\n      return (_AvgPool = Module[\"_AvgPool\"] = Module[\"asm\"][\"AvgPool\"]).apply(null, arguments);\n    };\n    var _AvgPool3D = Module[\"_AvgPool3D\"] = function () {\n      return (_AvgPool3D = Module[\"_AvgPool3D\"] = Module[\"asm\"][\"AvgPool3D\"]).apply(null, arguments);\n    };\n    var _AvgPool3DGrad = Module[\"_AvgPool3DGrad\"] = function () {\n      return (_AvgPool3DGrad = Module[\"_AvgPool3DGrad\"] = Module[\"asm\"][\"AvgPool3DGrad\"]).apply(null, arguments);\n    };\n    var _AvgPoolGrad = Module[\"_AvgPoolGrad\"] = function () {\n      return (_AvgPoolGrad = Module[\"_AvgPoolGrad\"] = Module[\"asm\"][\"AvgPoolGrad\"]).apply(null, arguments);\n    };\n    var _BatchMatMul = Module[\"_BatchMatMul\"] = function () {\n      return (_BatchMatMul = Module[\"_BatchMatMul\"] = Module[\"asm\"][\"BatchMatMul\"]).apply(null, arguments);\n    };\n    var _Bincount = Module[\"_Bincount\"] = function () {\n      return (_Bincount = Module[\"_Bincount\"] = Module[\"asm\"][\"Bincount\"]).apply(null, arguments);\n    };\n    var _BitwiseAnd = Module[\"_BitwiseAnd\"] = function () {\n      return (_BitwiseAnd = Module[\"_BitwiseAnd\"] = Module[\"asm\"][\"BitwiseAnd\"]).apply(null, arguments);\n    };\n    var _Ceil = Module[\"_Ceil\"] = function () {\n      return (_Ceil = Module[\"_Ceil\"] = Module[\"asm\"][\"Ceil\"]).apply(null, arguments);\n    };\n    var _ClipByValue = Module[\"_ClipByValue\"] = function () {\n      return (_ClipByValue = Module[\"_ClipByValue\"] = Module[\"asm\"][\"ClipByValue\"]).apply(null, arguments);\n    };\n    var _Conv2D = Module[\"_Conv2D\"] = function () {\n      return (_Conv2D = Module[\"_Conv2D\"] = Module[\"asm\"][\"Conv2D\"]).apply(null, arguments);\n    };\n    var _Conv2DBackpropInput = Module[\"_Conv2DBackpropInput\"] = function () {\n      return (_Conv2DBackpropInput = Module[\"_Conv2DBackpropInput\"] = Module[\"asm\"][\"Conv2DBackpropInput\"]).apply(null, arguments);\n    };\n    var _Conv3D = Module[\"_Conv3D\"] = function () {\n      return (_Conv3D = Module[\"_Conv3D\"] = Module[\"asm\"][\"Conv3D\"]).apply(null, arguments);\n    };\n    var _Conv3DBackpropFilterV2 = Module[\"_Conv3DBackpropFilterV2\"] = function () {\n      return (_Conv3DBackpropFilterV2 = Module[\"_Conv3DBackpropFilterV2\"] = Module[\"asm\"][\"Conv3DBackpropFilterV2\"]).apply(null, arguments);\n    };\n    var _Conv3DBackpropInputV2 = Module[\"_Conv3DBackpropInputV2\"] = function () {\n      return (_Conv3DBackpropInputV2 = Module[\"_Conv3DBackpropInputV2\"] = Module[\"asm\"][\"Conv3DBackpropInputV2\"]).apply(null, arguments);\n    };\n    var _Cos = Module[\"_Cos\"] = function () {\n      return (_Cos = Module[\"_Cos\"] = Module[\"asm\"][\"Cos\"]).apply(null, arguments);\n    };\n    var _Cosh = Module[\"_Cosh\"] = function () {\n      return (_Cosh = Module[\"_Cosh\"] = Module[\"asm\"][\"Cosh\"]).apply(null, arguments);\n    };\n    var _CropAndResize = Module[\"_CropAndResize\"] = function () {\n      return (_CropAndResize = Module[\"_CropAndResize\"] = Module[\"asm\"][\"CropAndResize\"]).apply(null, arguments);\n    };\n    var _Cumprod = Module[\"_Cumprod\"] = function () {\n      return (_Cumprod = Module[\"_Cumprod\"] = Module[\"asm\"][\"Cumprod\"]).apply(null, arguments);\n    };\n    var _Cumsum = Module[\"_Cumsum\"] = function () {\n      return (_Cumsum = Module[\"_Cumsum\"] = Module[\"asm\"][\"Cumsum\"]).apply(null, arguments);\n    };\n    var _DenseBincount = Module[\"_DenseBincount\"] = function () {\n      return (_DenseBincount = Module[\"_DenseBincount\"] = Module[\"asm\"][\"DenseBincount\"]).apply(null, arguments);\n    };\n    var _DepthToSpace = Module[\"_DepthToSpace\"] = function () {\n      return (_DepthToSpace = Module[\"_DepthToSpace\"] = Module[\"asm\"][\"DepthToSpace\"]).apply(null, arguments);\n    };\n    var _DepthwiseConv2dNative = Module[\"_DepthwiseConv2dNative\"] = function () {\n      return (_DepthwiseConv2dNative = Module[\"_DepthwiseConv2dNative\"] = Module[\"asm\"][\"DepthwiseConv2dNative\"]).apply(null, arguments);\n    };\n    var _Diag = Module[\"_Diag\"] = function () {\n      return (_Diag = Module[\"_Diag\"] = Module[\"asm\"][\"Diag\"]).apply(null, arguments);\n    };\n    var _Dilation2D = Module[\"_Dilation2D\"] = function () {\n      return (_Dilation2D = Module[\"_Dilation2D\"] = Module[\"asm\"][\"Dilation2D\"]).apply(null, arguments);\n    };\n    var _Dilation2DBackpropFilter = Module[\"_Dilation2DBackpropFilter\"] = function () {\n      return (_Dilation2DBackpropFilter = Module[\"_Dilation2DBackpropFilter\"] = Module[\"asm\"][\"Dilation2DBackpropFilter\"]).apply(null, arguments);\n    };\n    var _Dilation2DBackpropInput = Module[\"_Dilation2DBackpropInput\"] = function () {\n      return (_Dilation2DBackpropInput = Module[\"_Dilation2DBackpropInput\"] = Module[\"asm\"][\"Dilation2DBackpropInput\"]).apply(null, arguments);\n    };\n    var _Elu = Module[\"_Elu\"] = function () {\n      return (_Elu = Module[\"_Elu\"] = Module[\"asm\"][\"Elu\"]).apply(null, arguments);\n    };\n    var _EluGrad = Module[\"_EluGrad\"] = function () {\n      return (_EluGrad = Module[\"_EluGrad\"] = Module[\"asm\"][\"EluGrad\"]).apply(null, arguments);\n    };\n    var _Equal = Module[\"_Equal\"] = function () {\n      return (_Equal = Module[\"_Equal\"] = Module[\"asm\"][\"Equal\"]).apply(null, arguments);\n    };\n    var _Erf = Module[\"_Erf\"] = function () {\n      return (_Erf = Module[\"_Erf\"] = Module[\"asm\"][\"Erf\"]).apply(null, arguments);\n    };\n    var _Exp = Module[\"_Exp\"] = function () {\n      return (_Exp = Module[\"_Exp\"] = Module[\"asm\"][\"Exp\"]).apply(null, arguments);\n    };\n    var _Expm1 = Module[\"_Expm1\"] = function () {\n      return (_Expm1 = Module[\"_Expm1\"] = Module[\"asm\"][\"Expm1\"]).apply(null, arguments);\n    };\n    var _FlipLeftRight = Module[\"_FlipLeftRight\"] = function () {\n      return (_FlipLeftRight = Module[\"_FlipLeftRight\"] = Module[\"asm\"][\"FlipLeftRight\"]).apply(null, arguments);\n    };\n    var _Floor = Module[\"_Floor\"] = function () {\n      return (_Floor = Module[\"_Floor\"] = Module[\"asm\"][\"Floor\"]).apply(null, arguments);\n    };\n    var _FloorDiv = Module[\"_FloorDiv\"] = function () {\n      return (_FloorDiv = Module[\"_FloorDiv\"] = Module[\"asm\"][\"FloorDiv\"]).apply(null, arguments);\n    };\n    var _FusedBatchNorm = Module[\"_FusedBatchNorm\"] = function () {\n      return (_FusedBatchNorm = Module[\"_FusedBatchNorm\"] = Module[\"asm\"][\"FusedBatchNorm\"]).apply(null, arguments);\n    };\n    var _FusedConv2D = Module[\"_FusedConv2D\"] = function () {\n      return (_FusedConv2D = Module[\"_FusedConv2D\"] = Module[\"asm\"][\"FusedConv2D\"]).apply(null, arguments);\n    };\n    var _FusedDepthwiseConv2D = Module[\"_FusedDepthwiseConv2D\"] = function () {\n      return (_FusedDepthwiseConv2D = Module[\"_FusedDepthwiseConv2D\"] = Module[\"asm\"][\"FusedDepthwiseConv2D\"]).apply(null, arguments);\n    };\n    var _Gather = Module[\"_Gather\"] = function () {\n      return (_Gather = Module[\"_Gather\"] = Module[\"asm\"][\"Gather\"]).apply(null, arguments);\n    };\n    var _GatherNd = Module[\"_GatherNd\"] = function () {\n      return (_GatherNd = Module[\"_GatherNd\"] = Module[\"asm\"][\"GatherNd\"]).apply(null, arguments);\n    };\n    var _Greater = Module[\"_Greater\"] = function () {\n      return (_Greater = Module[\"_Greater\"] = Module[\"asm\"][\"Greater\"]).apply(null, arguments);\n    };\n    var _GreaterEqual = Module[\"_GreaterEqual\"] = function () {\n      return (_GreaterEqual = Module[\"_GreaterEqual\"] = Module[\"asm\"][\"GreaterEqual\"]).apply(null, arguments);\n    };\n    var _IsFinite = Module[\"_IsFinite\"] = function () {\n      return (_IsFinite = Module[\"_IsFinite\"] = Module[\"asm\"][\"IsFinite\"]).apply(null, arguments);\n    };\n    var _IsInf = Module[\"_IsInf\"] = function () {\n      return (_IsInf = Module[\"_IsInf\"] = Module[\"asm\"][\"IsInf\"]).apply(null, arguments);\n    };\n    var _IsNan = Module[\"_IsNan\"] = function () {\n      return (_IsNan = Module[\"_IsNan\"] = Module[\"asm\"][\"IsNan\"]).apply(null, arguments);\n    };\n    var _LRN = Module[\"_LRN\"] = function () {\n      return (_LRN = Module[\"_LRN\"] = Module[\"asm\"][\"LRN\"]).apply(null, arguments);\n    };\n    var _LRNGrad = Module[\"_LRNGrad\"] = function () {\n      return (_LRNGrad = Module[\"_LRNGrad\"] = Module[\"asm\"][\"LRNGrad\"]).apply(null, arguments);\n    };\n    var _LeakyRelu = Module[\"_LeakyRelu\"] = function () {\n      return (_LeakyRelu = Module[\"_LeakyRelu\"] = Module[\"asm\"][\"LeakyRelu\"]).apply(null, arguments);\n    };\n    var _Less = Module[\"_Less\"] = function () {\n      return (_Less = Module[\"_Less\"] = Module[\"asm\"][\"Less\"]).apply(null, arguments);\n    };\n    var _LessEqual = Module[\"_LessEqual\"] = function () {\n      return (_LessEqual = Module[\"_LessEqual\"] = Module[\"asm\"][\"LessEqual\"]).apply(null, arguments);\n    };\n    var _LinSpace = Module[\"_LinSpace\"] = function () {\n      return (_LinSpace = Module[\"_LinSpace\"] = Module[\"asm\"][\"LinSpace\"]).apply(null, arguments);\n    };\n    var _Log = Module[\"_Log\"] = function () {\n      return (_Log = Module[\"_Log\"] = Module[\"asm\"][\"Log\"]).apply(null, arguments);\n    };\n    var _Log1p = Module[\"_Log1p\"] = function () {\n      return (_Log1p = Module[\"_Log1p\"] = Module[\"asm\"][\"Log1p\"]).apply(null, arguments);\n    };\n    var _LogicalAnd = Module[\"_LogicalAnd\"] = function () {\n      return (_LogicalAnd = Module[\"_LogicalAnd\"] = Module[\"asm\"][\"LogicalAnd\"]).apply(null, arguments);\n    };\n    var _LogicalNot = Module[\"_LogicalNot\"] = function () {\n      return (_LogicalNot = Module[\"_LogicalNot\"] = Module[\"asm\"][\"LogicalNot\"]).apply(null, arguments);\n    };\n    var _LogicalOr = Module[\"_LogicalOr\"] = function () {\n      return (_LogicalOr = Module[\"_LogicalOr\"] = Module[\"asm\"][\"LogicalOr\"]).apply(null, arguments);\n    };\n    var _LogicalXor = Module[\"_LogicalXor\"] = function () {\n      return (_LogicalXor = Module[\"_LogicalXor\"] = Module[\"asm\"][\"LogicalXor\"]).apply(null, arguments);\n    };\n    var _Max = Module[\"_Max\"] = function () {\n      return (_Max = Module[\"_Max\"] = Module[\"asm\"][\"Max\"]).apply(null, arguments);\n    };\n    var _MaxPool = Module[\"_MaxPool\"] = function () {\n      return (_MaxPool = Module[\"_MaxPool\"] = Module[\"asm\"][\"MaxPool\"]).apply(null, arguments);\n    };\n    var _MaxPool3D = Module[\"_MaxPool3D\"] = function () {\n      return (_MaxPool3D = Module[\"_MaxPool3D\"] = Module[\"asm\"][\"MaxPool3D\"]).apply(null, arguments);\n    };\n    var _MaxPool3DGrad = Module[\"_MaxPool3DGrad\"] = function () {\n      return (_MaxPool3DGrad = Module[\"_MaxPool3DGrad\"] = Module[\"asm\"][\"MaxPool3DGrad\"]).apply(null, arguments);\n    };\n    var _MaxPoolGrad = Module[\"_MaxPoolGrad\"] = function () {\n      return (_MaxPoolGrad = Module[\"_MaxPoolGrad\"] = Module[\"asm\"][\"MaxPoolGrad\"]).apply(null, arguments);\n    };\n    var _MaxPoolWithArgmax = Module[\"_MaxPoolWithArgmax\"] = function () {\n      return (_MaxPoolWithArgmax = Module[\"_MaxPoolWithArgmax\"] = Module[\"asm\"][\"MaxPoolWithArgmax\"]).apply(null, arguments);\n    };\n    var _Maximum = Module[\"_Maximum\"] = function () {\n      return (_Maximum = Module[\"_Maximum\"] = Module[\"asm\"][\"Maximum\"]).apply(null, arguments);\n    };\n    var _Mean = Module[\"_Mean\"] = function () {\n      return (_Mean = Module[\"_Mean\"] = Module[\"asm\"][\"Mean\"]).apply(null, arguments);\n    };\n    var _Min = Module[\"_Min\"] = function () {\n      return (_Min = Module[\"_Min\"] = Module[\"asm\"][\"Min\"]).apply(null, arguments);\n    };\n    var _Minimum = Module[\"_Minimum\"] = function () {\n      return (_Minimum = Module[\"_Minimum\"] = Module[\"asm\"][\"Minimum\"]).apply(null, arguments);\n    };\n    var _MirrorPad = Module[\"_MirrorPad\"] = function () {\n      return (_MirrorPad = Module[\"_MirrorPad\"] = Module[\"asm\"][\"MirrorPad\"]).apply(null, arguments);\n    };\n    var _Mod = Module[\"_Mod\"] = function () {\n      return (_Mod = Module[\"_Mod\"] = Module[\"asm\"][\"Mod\"]).apply(null, arguments);\n    };\n    var _Multinomial = Module[\"_Multinomial\"] = function () {\n      return (_Multinomial = Module[\"_Multinomial\"] = Module[\"asm\"][\"Multinomial\"]).apply(null, arguments);\n    };\n    var _Multiply = Module[\"_Multiply\"] = function () {\n      return (_Multiply = Module[\"_Multiply\"] = Module[\"asm\"][\"Multiply\"]).apply(null, arguments);\n    };\n    var _Neg = Module[\"_Neg\"] = function () {\n      return (_Neg = Module[\"_Neg\"] = Module[\"asm\"][\"Neg\"]).apply(null, arguments);\n    };\n    var _NonMaxSuppressionV3 = Module[\"_NonMaxSuppressionV3\"] = function () {\n      return (_NonMaxSuppressionV3 = Module[\"_NonMaxSuppressionV3\"] = Module[\"asm\"][\"NonMaxSuppressionV3\"]).apply(null, arguments);\n    };\n    var _NonMaxSuppressionV4 = Module[\"_NonMaxSuppressionV4\"] = function () {\n      return (_NonMaxSuppressionV4 = Module[\"_NonMaxSuppressionV4\"] = Module[\"asm\"][\"NonMaxSuppressionV4\"]).apply(null, arguments);\n    };\n    var _NonMaxSuppressionV5 = Module[\"_NonMaxSuppressionV5\"] = function () {\n      return (_NonMaxSuppressionV5 = Module[\"_NonMaxSuppressionV5\"] = Module[\"asm\"][\"NonMaxSuppressionV5\"]).apply(null, arguments);\n    };\n    var _NotEqual = Module[\"_NotEqual\"] = function () {\n      return (_NotEqual = Module[\"_NotEqual\"] = Module[\"asm\"][\"NotEqual\"]).apply(null, arguments);\n    };\n    var _OneHot = Module[\"_OneHot\"] = function () {\n      return (_OneHot = Module[\"_OneHot\"] = Module[\"asm\"][\"OneHot\"]).apply(null, arguments);\n    };\n    var _PadV2 = Module[\"_PadV2\"] = function () {\n      return (_PadV2 = Module[\"_PadV2\"] = Module[\"asm\"][\"PadV2\"]).apply(null, arguments);\n    };\n    var _Pow = Module[\"_Pow\"] = function () {\n      return (_Pow = Module[\"_Pow\"] = Module[\"asm\"][\"Pow\"]).apply(null, arguments);\n    };\n    var _Prelu = Module[\"_Prelu\"] = function () {\n      return (_Prelu = Module[\"_Prelu\"] = Module[\"asm\"][\"Prelu\"]).apply(null, arguments);\n    };\n    var _Prod = Module[\"_Prod\"] = function () {\n      return (_Prod = Module[\"_Prod\"] = Module[\"asm\"][\"Prod\"]).apply(null, arguments);\n    };\n    var _RealDiv = Module[\"_RealDiv\"] = function () {\n      return (_RealDiv = Module[\"_RealDiv\"] = Module[\"asm\"][\"RealDiv\"]).apply(null, arguments);\n    };\n    var _Reciprocal = Module[\"_Reciprocal\"] = function () {\n      return (_Reciprocal = Module[\"_Reciprocal\"] = Module[\"asm\"][\"Reciprocal\"]).apply(null, arguments);\n    };\n    var _Relu = Module[\"_Relu\"] = function () {\n      return (_Relu = Module[\"_Relu\"] = Module[\"asm\"][\"Relu\"]).apply(null, arguments);\n    };\n    var _Relu6 = Module[\"_Relu6\"] = function () {\n      return (_Relu6 = Module[\"_Relu6\"] = Module[\"asm\"][\"Relu6\"]).apply(null, arguments);\n    };\n    var _ResizeBilinear = Module[\"_ResizeBilinear\"] = function () {\n      return (_ResizeBilinear = Module[\"_ResizeBilinear\"] = Module[\"asm\"][\"ResizeBilinear\"]).apply(null, arguments);\n    };\n    var _ResizeBilinearGrad = Module[\"_ResizeBilinearGrad\"] = function () {\n      return (_ResizeBilinearGrad = Module[\"_ResizeBilinearGrad\"] = Module[\"asm\"][\"ResizeBilinearGrad\"]).apply(null, arguments);\n    };\n    var _ResizeNearestNeighbor = Module[\"_ResizeNearestNeighbor\"] = function () {\n      return (_ResizeNearestNeighbor = Module[\"_ResizeNearestNeighbor\"] = Module[\"asm\"][\"ResizeNearestNeighbor\"]).apply(null, arguments);\n    };\n    var _ResizeNearestNeighborGrad = Module[\"_ResizeNearestNeighborGrad\"] = function () {\n      return (_ResizeNearestNeighborGrad = Module[\"_ResizeNearestNeighborGrad\"] = Module[\"asm\"][\"ResizeNearestNeighborGrad\"]).apply(null, arguments);\n    };\n    var _Reverse = Module[\"_Reverse\"] = function () {\n      return (_Reverse = Module[\"_Reverse\"] = Module[\"asm\"][\"Reverse\"]).apply(null, arguments);\n    };\n    var _RotateWithOffset = Module[\"_RotateWithOffset\"] = function () {\n      return (_RotateWithOffset = Module[\"_RotateWithOffset\"] = Module[\"asm\"][\"RotateWithOffset\"]).apply(null, arguments);\n    };\n    var _Round = Module[\"_Round\"] = function () {\n      return (_Round = Module[\"_Round\"] = Module[\"asm\"][\"Round\"]).apply(null, arguments);\n    };\n    var _Rsqrt = Module[\"_Rsqrt\"] = function () {\n      return (_Rsqrt = Module[\"_Rsqrt\"] = Module[\"asm\"][\"Rsqrt\"]).apply(null, arguments);\n    };\n    var _ScatterNd = Module[\"_ScatterNd\"] = function () {\n      return (_ScatterNd = Module[\"_ScatterNd\"] = Module[\"asm\"][\"ScatterNd\"]).apply(null, arguments);\n    };\n    var _SearchSorted = Module[\"_SearchSorted\"] = function () {\n      return (_SearchSorted = Module[\"_SearchSorted\"] = Module[\"asm\"][\"SearchSorted\"]).apply(null, arguments);\n    };\n    var _SelectV2 = Module[\"_SelectV2\"] = function () {\n      return (_SelectV2 = Module[\"_SelectV2\"] = Module[\"asm\"][\"SelectV2\"]).apply(null, arguments);\n    };\n    var _Selu = Module[\"_Selu\"] = function () {\n      return (_Selu = Module[\"_Selu\"] = Module[\"asm\"][\"Selu\"]).apply(null, arguments);\n    };\n    var _Sigmoid = Module[\"_Sigmoid\"] = function () {\n      return (_Sigmoid = Module[\"_Sigmoid\"] = Module[\"asm\"][\"Sigmoid\"]).apply(null, arguments);\n    };\n    var _Sign = Module[\"_Sign\"] = function () {\n      return (_Sign = Module[\"_Sign\"] = Module[\"asm\"][\"Sign\"]).apply(null, arguments);\n    };\n    var _Sin = Module[\"_Sin\"] = function () {\n      return (_Sin = Module[\"_Sin\"] = Module[\"asm\"][\"Sin\"]).apply(null, arguments);\n    };\n    var _Sinh = Module[\"_Sinh\"] = function () {\n      return (_Sinh = Module[\"_Sinh\"] = Module[\"asm\"][\"Sinh\"]).apply(null, arguments);\n    };\n    var _Softmax = Module[\"_Softmax\"] = function () {\n      return (_Softmax = Module[\"_Softmax\"] = Module[\"asm\"][\"Softmax\"]).apply(null, arguments);\n    };\n    var _Softplus = Module[\"_Softplus\"] = function () {\n      return (_Softplus = Module[\"_Softplus\"] = Module[\"asm\"][\"Softplus\"]).apply(null, arguments);\n    };\n    var _SparseFillEmptyRows = Module[\"_SparseFillEmptyRows\"] = function () {\n      return (_SparseFillEmptyRows = Module[\"_SparseFillEmptyRows\"] = Module[\"asm\"][\"SparseFillEmptyRows\"]).apply(null, arguments);\n    };\n    var _SparseReshape = Module[\"_SparseReshape\"] = function () {\n      return (_SparseReshape = Module[\"_SparseReshape\"] = Module[\"asm\"][\"SparseReshape\"]).apply(null, arguments);\n    };\n    var _SparseSegmentReduction = Module[\"_SparseSegmentReduction\"] = function () {\n      return (_SparseSegmentReduction = Module[\"_SparseSegmentReduction\"] = Module[\"asm\"][\"SparseSegmentReduction\"]).apply(null, arguments);\n    };\n    var _SparseToDense = Module[\"_SparseToDense\"] = function () {\n      return (_SparseToDense = Module[\"_SparseToDense\"] = Module[\"asm\"][\"SparseToDense\"]).apply(null, arguments);\n    };\n    var _Sqrt = Module[\"_Sqrt\"] = function () {\n      return (_Sqrt = Module[\"_Sqrt\"] = Module[\"asm\"][\"Sqrt\"]).apply(null, arguments);\n    };\n    var _Square = Module[\"_Square\"] = function () {\n      return (_Square = Module[\"_Square\"] = Module[\"asm\"][\"Square\"]).apply(null, arguments);\n    };\n    var _SquaredDifference = Module[\"_SquaredDifference\"] = function () {\n      return (_SquaredDifference = Module[\"_SquaredDifference\"] = Module[\"asm\"][\"SquaredDifference\"]).apply(null, arguments);\n    };\n    var _Step = Module[\"_Step\"] = function () {\n      return (_Step = Module[\"_Step\"] = Module[\"asm\"][\"Step\"]).apply(null, arguments);\n    };\n    var _StridedSlice = Module[\"_StridedSlice\"] = function () {\n      return (_StridedSlice = Module[\"_StridedSlice\"] = Module[\"asm\"][\"StridedSlice\"]).apply(null, arguments);\n    };\n    var _Sub = Module[\"_Sub\"] = function () {\n      return (_Sub = Module[\"_Sub\"] = Module[\"asm\"][\"Sub\"]).apply(null, arguments);\n    };\n    var _Sum = Module[\"_Sum\"] = function () {\n      return (_Sum = Module[\"_Sum\"] = Module[\"asm\"][\"Sum\"]).apply(null, arguments);\n    };\n    var _Tan = Module[\"_Tan\"] = function () {\n      return (_Tan = Module[\"_Tan\"] = Module[\"asm\"][\"Tan\"]).apply(null, arguments);\n    };\n    var _Tanh = Module[\"_Tanh\"] = function () {\n      return (_Tanh = Module[\"_Tanh\"] = Module[\"asm\"][\"Tanh\"]).apply(null, arguments);\n    };\n    var _TensorScatterUpdate = Module[\"_TensorScatterUpdate\"] = function () {\n      return (_TensorScatterUpdate = Module[\"_TensorScatterUpdate\"] = Module[\"asm\"][\"TensorScatterUpdate\"]).apply(null, arguments);\n    };\n    var _Tile = Module[\"_Tile\"] = function () {\n      return (_Tile = Module[\"_Tile\"] = Module[\"asm\"][\"Tile\"]).apply(null, arguments);\n    };\n    var _TopK = Module[\"_TopK\"] = function () {\n      return (_TopK = Module[\"_TopK\"] = Module[\"asm\"][\"TopK\"]).apply(null, arguments);\n    };\n    var _Transform = Module[\"_Transform\"] = function () {\n      return (_Transform = Module[\"_Transform\"] = Module[\"asm\"][\"Transform\"]).apply(null, arguments);\n    };\n    var _Transpose = Module[\"_Transpose\"] = function () {\n      return (_Transpose = Module[\"_Transpose\"] = Module[\"asm\"][\"Transpose\"]).apply(null, arguments);\n    };\n    var __FusedMatMul = Module[\"__FusedMatMul\"] = function () {\n      return (__FusedMatMul = Module[\"__FusedMatMul\"] = Module[\"asm\"][\"_FusedMatMul\"]).apply(null, arguments);\n    };\n    var _malloc = Module[\"_malloc\"] = function () {\n      return (_malloc = Module[\"_malloc\"] = Module[\"asm\"][\"malloc\"]).apply(null, arguments);\n    };\n    var _free = Module[\"_free\"] = function () {\n      return (_free = Module[\"_free\"] = Module[\"asm\"][\"free\"]).apply(null, arguments);\n    };\n    var ___errno_location = Module[\"___errno_location\"] = function () {\n      return (___errno_location = Module[\"___errno_location\"] = Module[\"asm\"][\"__errno_location\"]).apply(null, arguments);\n    };\n    var stackSave = Module[\"stackSave\"] = function () {\n      return (stackSave = Module[\"stackSave\"] = Module[\"asm\"][\"stackSave\"]).apply(null, arguments);\n    };\n    var stackRestore = Module[\"stackRestore\"] = function () {\n      return (stackRestore = Module[\"stackRestore\"] = Module[\"asm\"][\"stackRestore\"]).apply(null, arguments);\n    };\n    var stackAlloc = Module[\"stackAlloc\"] = function () {\n      return (stackAlloc = Module[\"stackAlloc\"] = Module[\"asm\"][\"stackAlloc\"]).apply(null, arguments);\n    };\n    var dynCall_iijjiiii = Module[\"dynCall_iijjiiii\"] = function () {\n      return (dynCall_iijjiiii = Module[\"dynCall_iijjiiii\"] = Module[\"asm\"][\"dynCall_iijjiiii\"]).apply(null, arguments);\n    };\n    var dynCall_jiji = Module[\"dynCall_jiji\"] = function () {\n      return (dynCall_jiji = Module[\"dynCall_jiji\"] = Module[\"asm\"][\"dynCall_jiji\"]).apply(null, arguments);\n    };\n    Module[\"cwrap\"] = cwrap;\n    var calledRun;\n    dependenciesFulfilled = function runCaller() {\n      if (!calledRun) run();\n      if (!calledRun) dependenciesFulfilled = runCaller;\n    };\n    function run(args) {\n      args = args || arguments_;\n      if (runDependencies > 0) {\n        return;\n      }\n      preRun();\n      if (runDependencies > 0) {\n        return;\n      }\n      function doRun() {\n        if (calledRun) return;\n        calledRun = true;\n        Module[\"calledRun\"] = true;\n        if (ABORT) return;\n        initRuntime();\n        readyPromiseResolve(Module);\n        if (Module[\"onRuntimeInitialized\"]) Module[\"onRuntimeInitialized\"]();\n        postRun();\n      }\n      if (Module[\"setStatus\"]) {\n        Module[\"setStatus\"](\"Running...\");\n        setTimeout(function () {\n          setTimeout(function () {\n            Module[\"setStatus\"](\"\");\n          }, 1);\n          doRun();\n        }, 1);\n      } else {\n        doRun();\n      }\n    }\n    if (Module[\"preInit\"]) {\n      if (typeof Module[\"preInit\"] == \"function\") Module[\"preInit\"] = [Module[\"preInit\"]];\n      while (Module[\"preInit\"].length > 0) {\n        Module[\"preInit\"].pop()();\n      }\n    }\n    run();\n    var listenersAdded;\n    if (beforeListeners) {\n      listenersAdded = {\n        uncaughtException: process.listeners(\"uncaughtException\").filter(function (listener) {\n          return !beforeListeners.uncaughtException.indexOf(listener) > -1;\n        }),\n        unhandledRejection: process.listeners(\"unhandledRejection\").filter(function (listener) {\n          return !beforeListeners.unhandledRejection.indexOf(listener) > -1;\n        })\n      };\n    }\n    var actualModule;\n    if (typeof WasmBackendModule !== \"undefined\") {\n      actualModule = WasmBackendModule;\n    } else if (typeof WasmBackendModuleThreadedSimd !== \"undefined\") {\n      actualModule = WasmBackendModuleThreadedSimd;\n    } else {\n      throw new Error(\"Could not find wasm module in post.js\");\n    }\n    if (listenersAdded) {\n      var tmpDispose = actualModule[\"_dispose\"];\n      actualModule[\"_dispose\"] = function () {\n        tmpDispose();\n        listenersAdded.uncaughtException.forEach(function (listener) {\n          process.removeListener(\"uncaughtException\", listener);\n        });\n        listenersAdded.unhandledRejection.forEach(function (listener) {\n          process.removeListener(\"unhandledRejection\", listener);\n        });\n      };\n    }\n    return WasmBackendModule.ready;\n  };\n})();\nif (typeof exports === 'object' && typeof module === 'object') module.exports = WasmBackendModule;else if (typeof define === 'function' && define['amd']) define([], function () {\n  return WasmBackendModule;\n});else if (typeof exports === 'object') exports[\"WasmBackendModule\"] = WasmBackendModule;", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// We explicitly import the modular kernels so they get registered in the\n// global registry when we compile the library. A modular build would replace\n// the contents of this file and import only the kernels that are needed.\nimport { registerKernel } from '@tensorflow/tfjs-core';\nimport { _fusedMatMulConfig } from './kernels/_FusedMatMul';\nimport { absConfig } from './kernels/Abs';\nimport { acosConfig } from './kernels/Acos';\nimport { acoshConfig } from './kernels/Acosh';\nimport { addConfig } from './kernels/Add';\nimport { addNConfig } from './kernels/AddN';\nimport { allConfig } from './kernels/All';\nimport { anyConfig } from './kernels/Any';\nimport { argMaxConfig } from './kernels/ArgMax';\nimport { argMinConfig } from './kernels/ArgMin';\nimport { asinConfig } from './kernels/Asin';\nimport { asinhConfig } from './kernels/Asinh';\nimport { atanConfig } from './kernels/Atan';\nimport { atan2Config } from './kernels/Atan2';\nimport { atanhConfig } from './kernels/Atanh';\nimport { avgPoolConfig } from './kernels/AvgPool';\nimport { avgPool3DConfig } from './kernels/AvgPool3D';\nimport { avgPool3DGradConfig } from './kernels/AvgPool3DGrad';\nimport { avgPoolGradConfig } from './kernels/AvgPoolGrad';\nimport { batchMatMulConfig } from './kernels/BatchMatMul';\nimport { batchToSpaceNDConfig } from './kernels/BatchToSpaceND';\nimport { bincountConfig } from './kernels/Bincount';\nimport { bitwiseAndConfig } from './kernels/BitwiseAnd';\nimport { broadcastArgsConfig } from './kernels/BroadcastArgs';\nimport { castConfig } from './kernels/Cast';\nimport { ceilConfig } from './kernels/Ceil';\nimport { clipByValueConfig } from './kernels/ClipByValue';\nimport { concatConfig } from './kernels/Concat';\nimport { conv2DConfig } from './kernels/Conv2D';\nimport { conv2DBackpropInputConfig } from './kernels/Conv2DBackpropInput';\nimport { conv3DConfig } from './kernels/Conv3D';\nimport { conv3DBackpropFilterV2Config } from './kernels/Conv3DBackpropFilterV2';\nimport { conv3DBackpropInputV2Config } from './kernels/Conv3DBackpropInputV2';\nimport { cosConfig } from './kernels/Cos';\nimport { coshConfig } from './kernels/Cosh';\nimport { cropAndResizeConfig } from './kernels/CropAndResize';\nimport { cumprodConfig } from './kernels/Cumprod';\nimport { cumsumConfig } from './kernels/Cumsum';\nimport { denseBincountConfig } from './kernels/DenseBincount';\nimport { depthToSpaceConfig } from './kernels/DepthToSpace';\nimport { depthwiseConv2dNativeConfig } from './kernels/DepthwiseConv2dNative';\nimport { diagConfig } from './kernels/Diag';\nimport { dilation2DConfig } from './kernels/Dilation2D';\nimport { dilation2DBackpropFilterConfig } from './kernels/Dilation2DBackpropFilter';\nimport { dilation2DBackpropInputConfig } from './kernels/Dilation2DBackpropInput';\nimport { eluConfig } from './kernels/Elu';\nimport { eluGradConfig } from './kernels/EluGrad';\nimport { equalConfig } from './kernels/Equal';\nimport { erfConfig } from './kernels/Erf';\nimport { expConfig } from './kernels/Exp';\nimport { expandDimsConfig } from './kernels/ExpandDims';\nimport { expm1Config } from './kernels/Expm1';\nimport { fillConfig } from './kernels/Fill';\nimport { flipLeftRightConfig } from './kernels/FlipLeftRight';\nimport { floorConfig } from './kernels/Floor';\nimport { floorDivConfig } from './kernels/FloorDiv';\nimport { fusedBatchNormConfig } from './kernels/FusedBatchNorm';\nimport { fusedConv2DConfig } from './kernels/FusedConv2D';\nimport { fusedDepthwiseConv2DConfig } from './kernels/FusedDepthwiseConv2D';\nimport { gatherNdConfig } from './kernels/GatherNd';\nimport { gatherV2Config } from './kernels/GatherV2';\nimport { greaterConfig } from './kernels/Greater';\nimport { greaterEqualConfig } from './kernels/GreaterEqual';\nimport { identityConfig } from './kernels/Identity';\nimport { isFiniteConfig } from './kernels/IsFinite';\nimport { isInfConfig } from './kernels/IsInf';\nimport { isNaNConfig } from './kernels/IsNan';\nimport { leakyReluConfig } from './kernels/LeakyRelu';\nimport { lessConfig } from './kernels/Less';\nimport { lessEqualConfig } from './kernels/LessEqual';\nimport { linSpaceConfig } from './kernels/LinSpace';\nimport { logConfig } from './kernels/Log';\nimport { log1pConfig } from './kernels/Log1p';\nimport { logicalAndConfig } from './kernels/LogicalAnd';\nimport { logicalNotConfig } from './kernels/LogicalNot';\nimport { logicalOrConfig } from './kernels/LogicalOr';\nimport { logicalXorConfig } from './kernels/LogicalXor';\nimport { lrnConfig } from './kernels/LRN';\nimport { lrnGradConfig } from './kernels/LRNGrad';\nimport { maxConfig } from './kernels/Max';\nimport { maximumConfig } from './kernels/Maximum';\nimport { maxPoolConfig } from './kernels/MaxPool';\nimport { maxPool3DConfig } from './kernels/MaxPool3D';\nimport { maxPool3DGradConfig } from './kernels/MaxPool3DGrad';\nimport { maxPoolGradConfig } from './kernels/MaxPoolGrad';\nimport { maxPoolWithArgmaxConfig } from './kernels/MaxPoolWithArgmax';\nimport { meanConfig } from './kernels/Mean';\nimport { minConfig } from './kernels/Min';\nimport { minimumConfig } from './kernels/Minimum';\nimport { mirrorPadConfig } from './kernels/MirrorPad';\nimport { multinomialConfig } from './kernels/Multinomial';\nimport { modConfig } from './kernels/Mod';\nimport { multiplyConfig } from './kernels/Multiply';\nimport { negConfig } from './kernels/Neg';\nimport { nonMaxSuppressionV3Config } from './kernels/NonMaxSuppressionV3';\nimport { nonMaxSuppressionV4Config } from './kernels/NonMaxSuppressionV4';\nimport { nonMaxSuppressionV5Config } from './kernels/NonMaxSuppressionV5';\nimport { notEqualConfig } from './kernels/NotEqual';\nimport { oneHotConfig } from './kernels/OneHot';\nimport { onesLikeConfig } from './kernels/OnesLike';\nimport { packConfig } from './kernels/Pack';\nimport { padV2Config } from './kernels/PadV2';\nimport { powConfig } from './kernels/Pow';\nimport { preluConfig } from './kernels/Prelu';\nimport { prodConfig } from './kernels/Prod';\nimport { rangeConfig } from './kernels/Range';\nimport { realDivConfig } from './kernels/RealDiv';\nimport { reciprocalConfig } from './kernels/Reciprocal';\nimport { reluConfig } from './kernels/Relu';\nimport { relu6Config } from './kernels/Relu6';\nimport { reshapeConfig } from './kernels/Reshape';\nimport { resizeBilinearConfig } from './kernels/ResizeBilinear';\nimport { resizeBilinearGradConfig } from './kernels/ResizeBilinearGrad';\nimport { resizeNearestNeighborConfig } from './kernels/ResizeNearestNeighbor';\nimport { resizeNearestNeighborGradConfig } from './kernels/ResizeNearestNeighborGrad';\nimport { reverseConfig } from './kernels/Reverse';\nimport { rotateWithOffsetConfig } from './kernels/RotateWithOffset';\nimport { roundConfig } from './kernels/Round';\nimport { rsqrtConfig } from './kernels/Rsqrt';\nimport { scatterNdConfig } from './kernels/ScatterNd';\nimport { searchSortedConfig } from './kernels/SearchSorted';\nimport { selectConfig } from './kernels/Select';\nimport { seluConfig } from './kernels/Selu';\nimport { sigmoidConfig } from './kernels/Sigmoid';\nimport { signConfig } from './kernels/Sign';\nimport { sinConfig } from './kernels/Sin';\nimport { sinhConfig } from './kernels/Sinh';\nimport { sliceConfig } from './kernels/Slice';\nimport { softmaxConfig } from './kernels/Softmax';\nimport { softplusConfig } from './kernels/Softplus';\nimport { spaceToBatchNDConfig } from './kernels/SpaceToBatchND';\nimport { sparseFillEmptyRowsConfig } from './kernels/SparseFillEmptyRows';\nimport { sparseReshapeConfig } from './kernels/SparseReshape';\nimport { sparseSegmentMeanConfig } from './kernels/SparseSegmentMean';\nimport { sparseSegmentSumConfig } from './kernels/SparseSegmentSum';\nimport { sparseToDenseConfig } from './kernels/SparseToDense';\nimport { splitVConfig } from './kernels/SplitV';\nimport { sqrtConfig } from './kernels/Sqrt';\nimport { squareConfig } from './kernels/Square';\nimport { squaredDifferenceConfig } from './kernels/SquaredDifference';\nimport { stepConfig } from './kernels/Step';\nimport { stridedSliceConfig } from './kernels/StridedSlice';\nimport { stringNGramsConfig } from './kernels/StringNGrams';\nimport { stringSplitConfig } from './kernels/StringSplit';\nimport { stringToHashBucketFastConfig } from './kernels/StringToHashBucketFast';\nimport { subConfig } from './kernels/Sub';\nimport { sumConfig } from './kernels/Sum';\nimport { tanConfig } from './kernels/Tan';\nimport { tanhConfig } from './kernels/Tanh';\nimport { tensorScatterUpdateConfig } from './kernels/TensorScatterUpdate';\nimport { tileConfig } from './kernels/Tile';\nimport { topKConfig } from './kernels/TopK';\nimport { transformConfig } from './kernels/Transform';\nimport { transposeConfig } from './kernels/Transpose';\nimport { uniqueConfig } from './kernels/Unique';\nimport { unpackConfig } from './kernels/Unpack';\nimport { zerosLikeConfig } from './kernels/ZerosLike';\n// List all kernel configs here\nconst kernelConfigs = [_fusedMatMulConfig, absConfig, acosConfig, acoshConfig, addConfig, addNConfig, allConfig, anyConfig, argMaxConfig, argMinConfig, asinConfig, asinhConfig, atanConfig, atan2Config, atanhConfig, avgPoolConfig, avgPoolGradConfig, avgPool3DConfig, avgPool3DGradConfig, batchMatMulConfig, batchToSpaceNDConfig, bincountConfig, bitwiseAndConfig, broadcastArgsConfig, castConfig, ceilConfig, clipByValueConfig, concatConfig, conv2DConfig, conv2DBackpropInputConfig, conv3DConfig, conv3DBackpropFilterV2Config, conv3DBackpropInputV2Config, cosConfig, coshConfig, cropAndResizeConfig, cumprodConfig, cumsumConfig, denseBincountConfig, depthToSpaceConfig, depthwiseConv2dNativeConfig, diagConfig, dilation2DConfig, dilation2DBackpropFilterConfig, dilation2DBackpropInputConfig, eluConfig, eluGradConfig, equalConfig, erfConfig, expConfig, expandDimsConfig, expm1Config, fillConfig, flipLeftRightConfig, floorConfig, floorDivConfig, fusedBatchNormConfig, fusedConv2DConfig, fusedDepthwiseConv2DConfig, gatherNdConfig, gatherV2Config, greaterConfig, greaterEqualConfig, identityConfig, isFiniteConfig, isInfConfig, isNaNConfig, leakyReluConfig, lessConfig, lessEqualConfig, linSpaceConfig, log1pConfig, logConfig, logicalAndConfig, logicalNotConfig, logicalOrConfig, logicalXorConfig, lrnConfig, lrnGradConfig, maxConfig, maximumConfig, maxPoolConfig, maxPool3DConfig, maxPool3DGradConfig, maxPoolGradConfig, maxPoolWithArgmaxConfig, meanConfig, minConfig, minimumConfig, mirrorPadConfig, multinomialConfig, modConfig, multiplyConfig, negConfig, nonMaxSuppressionV3Config, nonMaxSuppressionV4Config, nonMaxSuppressionV5Config, notEqualConfig, oneHotConfig, onesLikeConfig, packConfig, padV2Config, powConfig, preluConfig, prodConfig, rangeConfig, realDivConfig, reciprocalConfig, reluConfig, relu6Config, reshapeConfig, resizeBilinearConfig, resizeBilinearGradConfig, resizeNearestNeighborConfig, resizeNearestNeighborGradConfig, reverseConfig, rotateWithOffsetConfig, roundConfig, rsqrtConfig, scatterNdConfig, searchSortedConfig, selectConfig, seluConfig, sigmoidConfig, signConfig, sinConfig, sinhConfig, sliceConfig, softmaxConfig, softplusConfig, spaceToBatchNDConfig, sparseFillEmptyRowsConfig, sparseReshapeConfig, sparseSegmentMeanConfig, sparseSegmentSumConfig, sparseToDenseConfig, splitVConfig, sqrtConfig, squareConfig, squaredDifferenceConfig, stepConfig, stridedSliceConfig, stringNGramsConfig, stringSplitConfig, stringToHashBucketFastConfig, subConfig, sumConfig, tanConfig, tanhConfig, tensorScatterUpdateConfig, tileConfig, topKConfig, transformConfig, transposeConfig, uniqueConfig, unpackConfig, zerosLikeConfig];\nfor (const kernelConfig of kernelConfigs) {\n  registerKernel(kernelConfig);\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { _FusedMatMul, broadcast_util } from '@tensorflow/tfjs-core';\nimport { FusableActivation } from './types';\nlet wasmFusedMatMul;\nfunction setup(backend) {\n  wasmFusedMatMul = backend.wasm.cwrap(_FusedMatMul, null /* void */, ['number', 'array', 'number', 'number', 'array', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number' // out_id\n  ]);\n}\nfunction fusedBatchMatMul(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    a,\n    b,\n    bias,\n    preluActivationWeights\n  } = inputs;\n  if (a.dtype !== 'float32' || b.dtype !== 'float32') {\n    throw new Error(`_FusedMatMul for non non-float32 tensors not yet supported.`);\n  }\n  const {\n    transposeA,\n    transposeB,\n    activation,\n    leakyreluAlpha\n  } = attrs;\n  const aId = backend.dataIdMap.get(a.dataId).id;\n  const bId = backend.dataIdMap.get(b.dataId).id;\n  let biasId = 0;\n  if (bias != null) {\n    const biasData = backend.dataIdMap.get(bias.dataId);\n    if (biasData.shape.length !== 1) {\n      throw new Error(`_FusedMatMul only supports rank-1 bias but got ` + `rank ${biasData.shape.length}.`);\n    }\n    biasId = biasData.id;\n  }\n  const preluActivationWeightsId = preluActivationWeights == null ? 0 : backend.dataIdMap.get(preluActivationWeights.dataId).id;\n  const fusedActivation = FusableActivation[activation];\n  if (fusedActivation == null) {\n    throw new Error(`${activation} activation not yet supported for FusedConv2D ` + `in the wasm backend.`);\n  }\n  const leftDim = transposeA ? a.shape[2] : a.shape[1];\n  const rightDim = transposeB ? b.shape[1] : b.shape[2];\n  const batchDims = broadcast_util.assertAndGetBroadcastShape(a.shape.slice(0, -2), b.shape.slice(0, -2));\n  const out = backend.makeOutput([...batchDims, leftDim, rightDim], a.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const aShapeBytes = new Uint8Array(new Int32Array(a.shape).buffer);\n  const bShapeBytes = new Uint8Array(new Int32Array(b.shape).buffer);\n  wasmFusedMatMul(aId, aShapeBytes, a.shape.length, bId, bShapeBytes, b.shape.length, transposeA, transposeB, fusedActivation, biasId, preluActivationWeightsId, leakyreluAlpha || 0, outId);\n  return out;\n}\nexport const _fusedMatMulConfig = {\n  kernelName: _FusedMatMul,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedBatchMatMul\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// This enum must align with the enum defined in cc/backend.h.\nexport var CppDType;\n(function (CppDType) {\n  CppDType[CppDType[\"float32\"] = 0] = \"float32\";\n  CppDType[CppDType[\"int32\"] = 1] = \"int32\";\n  CppDType[CppDType[\"bool\"] = 2] = \"bool\";\n  CppDType[CppDType[\"string\"] = 3] = \"string\";\n  CppDType[CppDType[\"complex64\"] = 4] = \"complex64\";\n})(CppDType || (CppDType = {}));\n// Must match enum in cc/fusable_activations.h.\nexport var FusableActivation;\n(function (FusableActivation) {\n  FusableActivation[FusableActivation[\"linear\"] = 0] = \"linear\";\n  FusableActivation[FusableActivation[\"relu\"] = 1] = \"relu\";\n  FusableActivation[FusableActivation[\"relu6\"] = 2] = \"relu6\";\n  FusableActivation[FusableActivation[\"prelu\"] = 3] = \"prelu\";\n  FusableActivation[FusableActivation[\"leakyrelu\"] = 4] = \"leakyrelu\";\n  FusableActivation[FusableActivation[\"sigmoid\"] = 5] = \"sigmoid\";\n  FusableActivation[FusableActivation[\"elu\"] = 6] = \"elu\";\n})(FusableActivation || (FusableActivation = {}));\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Abs } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const absConfig = createUnaryKernelConfig(Abs);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nimport { CppDType } from './types';\nexport function createUnaryKernelConfig(kernelName, outType) {\n  let wasmFunc;\n  function setupFunc(backend) {\n    wasmFunc = backend.wasm.cwrap(kernelName, null /* void */, ['number', 'number', 'number' // out_id\n    ]);\n  }\n  function kernelFunc(args) {\n    const {\n      backend,\n      inputs: {\n        x\n      }\n    } = args;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const out = backend.makeOutput(x.shape, outType || x.dtype);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    // Short-circuit zero-sized tensors.\n    if (util.sizeFromShape(out.shape) === 0) {\n      return out;\n    }\n    wasmFunc(xId, CppDType[x.dtype], outId);\n    return out;\n  }\n  return {\n    kernelName,\n    backendName: 'wasm',\n    setupFunc,\n    kernelFunc\n  };\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Acos } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const acosConfig = createUnaryKernelConfig(Acos);\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Acosh } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const acoshConfig = createUnaryKernelConfig(Acosh);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Add } from '@tensorflow/tfjs-core';\nimport { createBinaryKernelConfig } from './binary_kernel';\nconst supportsFullBroadcast = true;\nexport const addConfig = createBinaryKernelConfig(Add, supportsFullBroadcast);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, util } from '@tensorflow/tfjs-core';\nimport { CppDType } from './types';\nexport function createBinaryKernelConfig(kernelName, supportsFullBroadcast, dtype) {\n  let wasmFunc;\n  function setupFunc(backend) {\n    wasmFunc = backend.wasm.cwrap(kernelName, null /* void */, ['number', 'array', 'number', 'number', 'array', 'number', 'number', 'number' // out_id\n    ]);\n  }\n  function kernelFunc(args) {\n    const {\n      backend,\n      inputs\n    } = args;\n    const {\n      a,\n      b\n    } = inputs;\n    const aId = backend.dataIdMap.get(a.dataId).id;\n    const bId = backend.dataIdMap.get(b.dataId).id;\n    const outputType = dtype != null ? dtype : a.dtype;\n    const newShape = backend_util.assertAndGetBroadcastShape(a.shape, b.shape);\n    const out = backend.makeOutput(newShape, outputType);\n    // Short-circuit zero-sized tensors.\n    if (util.sizeFromShape(newShape) === 0) {\n      return out;\n    }\n    const aShapeBytes = new Uint8Array(new Int32Array(a.shape).buffer);\n    const bShapeBytes = new Uint8Array(new Int32Array(b.shape).buffer);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const kernelFunc = () => wasmFunc(aId, aShapeBytes, a.shape.length, bId, bShapeBytes, b.shape.length, CppDType[a.dtype], outId);\n    kernelFunc();\n    return out;\n  }\n  return {\n    kernelName,\n    backendName: 'wasm',\n    setupFunc,\n    kernelFunc\n  };\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AddN, util } from '@tensorflow/tfjs-core';\nimport { CppDType } from './types';\nlet wasmFunc;\nfunction setupFunc(backend) {\n  wasmFunc = backend.wasm.cwrap(AddN, null /* void */, ['array', 'number', 'number', 'number' // out_id\n  ]);\n}\nfunction addn(args) {\n  const {\n    inputs,\n    backend\n  } = args;\n  const out = backend.makeOutput(inputs[0].shape, inputs[0].dtype);\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(out.shape) === 0) {\n    return out;\n  }\n  const inputIds = inputs.map(x => backend.dataIdMap.get(x.dataId).id);\n  const inputIdsBytes = new Uint8Array(new Int32Array(inputIds).buffer);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmFunc(inputIdsBytes, inputIds.length, CppDType[out.dtype], outId);\n  return out;\n}\nexport const addNConfig = {\n  kernelName: AddN,\n  backendName: 'wasm',\n  setupFunc,\n  kernelFunc: addn\n};\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { All, backend_util, util } from '@tensorflow/tfjs-core';\nimport { permuteAxesAndTranspose } from './kernel_utils';\nlet wasmAll;\nfunction setup(backend) {\n  wasmAll = backend.wasm.cwrap(All, null /*void*/, ['number, number, number']);\n}\nfunction all(args) {\n  const {\n    backend,\n    inputs,\n    attrs\n  } = args;\n  const {\n    axis,\n    keepDims\n  } = attrs;\n  const {\n    x\n  } = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n  const {\n    transposed,\n    axes,\n    originalAxes,\n    inputWasTransposed\n  } = permuteAxesAndTranspose(x, axis, backend);\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    input = transposed;\n    inputId = transposedId;\n  }\n  const inputRank = input.shape.length;\n  backend_util.assertAxesAreInnerMostDims('all', axes, inputRank);\n  const [outShape, reduceShape] = backend_util.computeOutAndReduceShapes(input.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n  const out = backend.makeOutput(outShape, x.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmAll(inputId, reduceSize, outId);\n  }\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n  return out;\n}\nexport const allConfig = {\n  kernelName: All,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: all\n};\n", "/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, util } from '@tensorflow/tfjs-core';\nimport { transpose } from './Transpose';\n/**\n * Compute permutation axes and do a transpose if necessary.\n *\n * Used by reduction ops.\n * @param x input TensorInfo\n * @param axis reduction axes\n * @param backend wasm backend instance\n */\nexport function permuteAxesAndTranspose(x, axis, backend) {\n  const xShape = x.shape;\n  const xRank = x.shape.length;\n  const originalAxes = util.parseAxisParam(axis, xShape);\n  let axes = originalAxes;\n  const permutedAxes = backend_util.getAxesPermutation(axes, xRank);\n  let xTransposed = null;\n  let inputWasTransposed = false;\n  if (permutedAxes != null) {\n    const newShape = new Array(xRank);\n    for (let i = 0; i < newShape.length; i++) {\n      newShape[i] = xShape[permutedAxes[i]];\n    }\n    axes = backend_util.getInnerMostAxes(axes.length, xRank);\n    xTransposed = transpose({\n      inputs: {\n        x\n      },\n      attrs: {\n        perm: permutedAxes\n      },\n      backend\n    });\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const transposedId = backend.dataIdMap.get(xTransposed.dataId).id;\n    if (transposedId !== xId) {\n      inputWasTransposed = true;\n    }\n  }\n  return {\n    transposed: xTransposed,\n    originalAxes,\n    axes,\n    inputWasTransposed\n  };\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Transpose } from '@tensorflow/tfjs-core';\nimport { identity } from './Identity';\nimport { CppDType } from './types';\nlet wasmTranspose;\nfunction setup(backend) {\n  wasmTranspose = backend.wasm.cwrap(Transpose, null /* void */, ['number', 'array', 'number', 'number', 'number', 'array', 'number' // perm.length\n  ]);\n}\nexport function transpose(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  // Reduce any dimensions with size one. Lower-rank transpose kernel performs\n  // better due to simpler memory access pattern.\n  const [reducedShape, perm] = removeOneSizeDims(inputs.x.shape, attrs.perm);\n  let permIsNoOp = true;\n  for (let i = 0; i < perm.length; i++) {\n    if (perm[i] !== i) {\n      permIsNoOp = false;\n    }\n  }\n  const outShape = computeOutShape(inputs.x.shape, attrs.perm);\n  const x = {\n    dataId: inputs.x.dataId,\n    shape: reducedShape,\n    dtype: inputs.x.dtype\n  };\n  if (permIsNoOp) {\n    const cloned = identity({\n      inputs,\n      backend\n    });\n    cloned.shape = outShape;\n    return cloned;\n  }\n  const out = backend.makeOutput(outShape, x.dtype);\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const permBytes = new Uint8Array(new Int32Array(perm).buffer);\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n  wasmTranspose(xId, xShapeBytes, x.shape.length, CppDType[x.dtype], outId, permBytes, perm.length);\n  return out;\n}\nfunction computeOutShape(inShape, perm) {\n  const outShape = new Array(inShape.length);\n  for (let i = 0; i < outShape.length; i++) {\n    outShape[i] = inShape[perm[i]];\n  }\n  return outShape;\n}\nfunction removeOneSizeDims(shape, perm) {\n  const newShape = [];\n  const newPerm = [];\n  for (let i = 0; i < shape.length; ++i) {\n    if (shape[i] !== 1) {\n      newShape.push(shape[i]);\n    }\n    if (shape[perm[i]] !== 1) {\n      newPerm.push(perm[i]);\n    }\n  }\n  for (let i = 0; i < newPerm.length; ++i) {\n    let minValIdx = -1;\n    for (let j = 0; j < newPerm.length; ++j) {\n      if (newPerm[j] >= i && (minValIdx === -1 || newPerm[minValIdx] > newPerm[j])) {\n        minValIdx = j;\n      }\n    }\n    newPerm[minValIdx] = i;\n  }\n  return [newShape, newPerm];\n}\nexport const transposeConfig = {\n  kernelName: Transpose,\n  backendName: 'wasm',\n  kernelFunc: transpose,\n  setupFunc: setup\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Identity, tensor } from '@tensorflow/tfjs-core';\nexport function identity(args) {\n  const {\n    inputs: {\n      x\n    },\n    backend\n  } = args;\n  if (x.dtype === 'string') {\n    return tensor(backend.readSync(x.dataId), x.shape, x.dtype);\n  }\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const inVals = backend.typedArrayFromHeap(x);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.set(inVals);\n  return out;\n}\nexport const identityConfig = {\n  kernelName: Identity,\n  backendName: 'wasm',\n  kernelFunc: identity\n};\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Any, backend_util, util } from '@tensorflow/tfjs-core';\nimport { permuteAxesAndTranspose } from './kernel_utils';\nlet wasmAny;\nfunction setup(backend) {\n  wasmAny = backend.wasm.cwrap(Any, null /*void*/, ['number, number, number']);\n}\nfunction any(args) {\n  const {\n    backend,\n    inputs,\n    attrs\n  } = args;\n  const {\n    axis,\n    keepDims\n  } = attrs;\n  const {\n    x\n  } = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n  const {\n    transposed,\n    axes,\n    originalAxes,\n    inputWasTransposed\n  } = permuteAxesAndTranspose(x, axis, backend);\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    input = transposed;\n    inputId = transposedId;\n  }\n  const inputRank = input.shape.length;\n  backend_util.assertAxesAreInnerMostDims('any', axes, inputRank);\n  const [outShape, reduceShape] = backend_util.computeOutAndReduceShapes(input.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n  const out = backend.makeOutput(outShape, x.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmAny(inputId, reduceSize, outId);\n  }\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n  return out;\n}\nexport const anyConfig = {\n  kernelName: Any,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: any\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ArgMax } from '@tensorflow/tfjs-core';\nimport { createArgMinMaxKernelConfig } from './argminmax_kernel';\nexport const argMaxConfig = createArgMinMaxKernelConfig(ArgMax);\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nimport { permuteAxesAndTranspose } from './kernel_utils';\nimport { CppDType } from './types';\nexport function createArgMinMaxKernelConfig(kernelName) {\n  let wasmFunc;\n  function setupFunc(backend) {\n    wasmFunc = backend.wasm.cwrap(kernelName, null /* void */, ['number', 'number', 'number', 'number', 'number' // out_id\n    ]);\n  }\n  function kernelFunc(args) {\n    const {\n      backend,\n      inputs,\n      attrs\n    } = args;\n    const {\n      axis\n    } = attrs;\n    const {\n      x\n    } = inputs;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    let inputId = xId;\n    let input = x;\n    const {\n      transposed,\n      axes,\n      inputWasTransposed\n    } = permuteAxesAndTranspose(x, axis, backend);\n    if (inputWasTransposed) {\n      const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n      if (transposedId !== xId) {\n        // transpose was not a no-op. We will need to dispose of this\n        // once we are done.\n        input = transposed;\n        inputId = transposedId;\n      }\n    }\n    const outShape = input.shape.slice(0, -1);\n    const out = backend.makeOutput(outShape, 'int32');\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const outerSize = util.sizeFromShape(out.shape);\n    const innerSize = input.shape[axes[0]];\n    wasmFunc(inputId, CppDType[input.dtype], outerSize, innerSize, outId);\n    if (inputWasTransposed) {\n      // dispose of the transposed tensor.\n      backend.disposeData(transposed.dataId);\n    }\n    return out;\n  }\n  return {\n    kernelName,\n    backendName: 'wasm',\n    setupFunc,\n    kernelFunc: kernelFunc\n  };\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ArgMin } from '@tensorflow/tfjs-core';\nimport { createArgMinMaxKernelConfig } from './argminmax_kernel';\nexport const argMinConfig = createArgMinMaxKernelConfig(ArgMin);\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Asin } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const asinConfig = createUnaryKernelConfig(Asin);\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Asinh } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const asinhConfig = createUnaryKernelConfig(Asinh);\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Atan } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const atanConfig = createUnaryKernelConfig(Atan);\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Atan2 } from '@tensorflow/tfjs-core';\nimport { createBinaryKernelConfig } from './binary_kernel';\nexport const atan2Config = createBinaryKernelConfig(Atan2, /*supportsFullBroadcast=*/false);\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Atanh } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const atanhConfig = createUnaryKernelConfig(Atanh);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AvgPool, backend_util } from '@tensorflow/tfjs-core';\nlet wasmAvgPool;\nfunction setup(backend) {\n  wasmAvgPool = backend.wasm.cwrap(AvgPool, null /* void */, ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number' // outId\n  ]);\n}\nfunction avgPool(args) {\n  const {\n    inputs,\n    attrs,\n    backend\n  } = args;\n  const x = inputs.x;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const {\n    filterSize,\n    strides,\n    pad,\n    dimRoundingMode\n  } = attrs;\n  const convInfo = backend_util.computePool2DInfo(x.shape, filterSize, strides, 1 /* dilations */, pad, dimRoundingMode);\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const channels = convInfo.inChannels;\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(`wasm backend does not support dataFormat:'` + `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n  if (convInfo.dilationWidth !== 1 || convInfo.dilationHeight !== 1) {\n    throw new Error(`was backend only supports average pooling with dilation = [1, 1], ` + `got [${convInfo.dilationHeight}, ${convInfo.dilationWidth}].`);\n  }\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmAvgPool(xId, x.shape[0], x.shape[1], x.shape[2], filterHeight, filterWidth, padTop, padRight, padBottom, padLeft, strideHeight, strideWidth, channels, outId);\n  return out;\n}\nexport const avgPoolConfig = {\n  kernelName: AvgPool,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: avgPool\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AvgPool3D, backend_util } from '@tensorflow/tfjs-core';\nlet wasmAvgPool3D;\nfunction setup(backend) {\n  wasmAvgPool3D = backend.wasm.cwrap('AvgPool3D', null, ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number' // padLeft\n  ]);\n}\nexport function avgPool3D(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    x\n  } = inputs;\n  const {\n    filterSize,\n    strides,\n    pad,\n    dimRoundingMode,\n    dataFormat\n  } = attrs;\n  const convInfo = backend_util.computePool3DInfo(x.shape, filterSize, strides, /*dilations=*/1, pad, dimRoundingMode, dataFormat);\n  const out = backend.makeOutput(convInfo.outShape, x.dtype);\n  wasmAvgPool3D(backend.dataIdMap.get(x.dataId).id, backend.dataIdMap.get(out.dataId).id, convInfo.batchSize,\n  // Since Pool3D ops (AvgPool3D and MaxPool3D) support 3D filter only, in\n  // channels should always equal to out channels.\n  /*channelSize=*/\n  convInfo.inChannels, convInfo.inDepth, convInfo.inHeight, convInfo.inWidth, convInfo.outDepth, convInfo.outHeight, convInfo.outWidth, convInfo.strideDepth, convInfo.strideHeight, convInfo.strideWidth, convInfo.dilationDepth, convInfo.dilationHeight, convInfo.dilationWidth, convInfo.effectiveFilterDepth, convInfo.effectiveFilterHeight, convInfo.effectiveFilterWidth, convInfo.padInfo.front, convInfo.padInfo.top, convInfo.padInfo.left);\n  return out;\n}\nexport const avgPool3DConfig = {\n  kernelName: AvgPool3D,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: avgPool3D\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AvgPool3DGrad, backend_util } from '@tensorflow/tfjs-core';\nlet wasmAvgPool3DGrad;\nfunction setup(backend) {\n  wasmAvgPool3DGrad = backend.wasm.cwrap('AvgPool3DGrad', null, ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number' // filterWidth\n  ]);\n}\nexport function avgPool3DGrad(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    dy,\n    input\n  } = inputs;\n  const {\n    filterSize,\n    strides,\n    pad,\n    dimRoundingMode\n  } = attrs;\n  const convInfo = backend_util.computePool3DInfo(input.shape, filterSize, strides, /*dilations=*/1, pad, dimRoundingMode);\n  const dx = backend.makeOutput(input.shape, input.dtype);\n  wasmAvgPool3DGrad(backend.dataIdMap.get(dy.dataId).id, backend.dataIdMap.get(dx.dataId).id, convInfo.batchSize,\n  // Since Pool3D ops (AvgPool3D and MaxPool3D) support 3D filter only, in\n  // channels should always equal to out channels.\n  /*channelSize=*/\n  convInfo.inChannels, convInfo.inDepth, convInfo.inHeight, convInfo.inWidth, convInfo.outDepth, convInfo.outHeight, convInfo.outWidth, convInfo.strideDepth, convInfo.strideHeight, convInfo.strideWidth, convInfo.dilationDepth, convInfo.dilationHeight, convInfo.dilationWidth, convInfo.effectiveFilterDepth, convInfo.effectiveFilterHeight, convInfo.effectiveFilterWidth, convInfo.padInfo.front, convInfo.padInfo.top, convInfo.padInfo.left, convInfo.filterDepth, convInfo.filterHeight, convInfo.filterWidth);\n  return dx;\n}\nexport const avgPool3DGradConfig = {\n  kernelName: AvgPool3DGrad,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: avgPool3DGrad\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AvgPoolGrad, backend_util } from '@tensorflow/tfjs-core';\nlet wasmAvgPoolGrad;\nfunction setup(backend) {\n  wasmAvgPoolGrad = backend.wasm.cwrap('AvgPoolGrad', null, ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number' // filterWidth\n  ]);\n}\nexport function avgPoolGrad(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    dy,\n    input\n  } = inputs;\n  const {\n    filterSize,\n    strides,\n    pad\n  } = attrs;\n  const convInfo = backend_util.computePool2DInfo(input.shape, filterSize, strides, /*dilations=*/1, pad);\n  const dx = backend.makeOutput(input.shape, input.dtype);\n  wasmAvgPoolGrad(backend.dataIdMap.get(dy.dataId).id, backend.dataIdMap.get(dx.dataId).id, convInfo.batchSize,\n  // Since Pool ops (AvgPool and MaxPool) support 2D filter only, in\n  // channels should always equal to out channels.\n  /*channelSize=*/\n  convInfo.inChannels, convInfo.inHeight, convInfo.inWidth, convInfo.outHeight, convInfo.outWidth, convInfo.strideHeight, convInfo.strideWidth, convInfo.dilationHeight, convInfo.dilationWidth, convInfo.effectiveFilterHeight, convInfo.effectiveFilterWidth, convInfo.padInfo.top, convInfo.padInfo.left, convInfo.filterHeight, convInfo.filterWidth);\n  return dx;\n}\nexport const avgPoolGradConfig = {\n  kernelName: AvgPoolGrad,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: avgPoolGrad\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { BatchMatMul, broadcast_util, util } from '@tensorflow/tfjs-core';\nimport { reshape } from './Reshape';\nlet wasmBatchMatMul;\nfunction setup(backend) {\n  wasmBatchMatMul = backend.wasm.cwrap(BatchMatMul, null /* void */, ['number', 'array', 'number', 'number', 'array', 'number', 'number', 'number', 'number' // out_id\n  ]);\n}\nfunction batchMatMul(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    a,\n    b\n  } = inputs;\n  const {\n    transposeA,\n    transposeB\n  } = attrs;\n  if (a.dtype !== 'float32' || b.dtype !== 'float32') {\n    throw new Error(`BatchMatMul for non non-float32 tensors not yet supported.`);\n  }\n  const aRank = a.shape.length;\n  const bRank = b.shape.length;\n  const innerShapeA = transposeA ? a.shape[aRank - 2] : a.shape[aRank - 1];\n  const innerShapeB = transposeB ? b.shape[bRank - 1] : b.shape[bRank - 2];\n  const outerShapeA = transposeA ? a.shape[aRank - 1] : a.shape[aRank - 2];\n  const outerShapeB = transposeB ? b.shape[bRank - 2] : b.shape[bRank - 1];\n  const outerDimsA = a.shape.slice(0, -2);\n  const outerDimsB = b.shape.slice(0, -2);\n  const batchDimA = util.sizeFromShape(outerDimsA);\n  const batchDimB = util.sizeFromShape(outerDimsB);\n  const outShapeOuterDims = broadcast_util.assertAndGetBroadcastShape(a.shape.slice(0, -2), b.shape.slice(0, -2));\n  const outShape = outShapeOuterDims.concat([outerShapeA, outerShapeB]);\n  util.assert(innerShapeA === innerShapeB, () => `Error in matMul: inner shapes (${innerShapeA}) and (` + `${innerShapeB}) of Tensors with shapes ${a.shape} and ` + `${b.shape} and transposeA=${transposeA}` + ` and transposeB=${transposeB} must match.`);\n  const a3dShape = transposeA ? [batchDimA, innerShapeA, outerShapeA] : [batchDimA, outerShapeA, innerShapeA];\n  const b3dShape = transposeB ? [batchDimB, outerShapeB, innerShapeB] : [batchDimB, innerShapeB, outerShapeB];\n  // The rest of the implementation is designed to operate on rank-3 tensors\n  const a3d = reshape({\n    inputs: {\n      x: a\n    },\n    backend,\n    attrs: {\n      shape: a3dShape\n    }\n  });\n  const b3d = reshape({\n    inputs: {\n      x: b\n    },\n    backend,\n    attrs: {\n      shape: b3dShape\n    }\n  });\n  const a3dId = backend.dataIdMap.get(a3d.dataId).id;\n  const b3dId = backend.dataIdMap.get(b3d.dataId).id;\n  const leftDim = transposeA ? a3d.shape[2] : a3d.shape[1];\n  const rightDim = transposeB ? b3d.shape[1] : b3d.shape[2];\n  const batchDim = Math.max(batchDimA, batchDimB);\n  const out = backend.makeOutput([batchDim, leftDim, rightDim], a3d.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const aShapeBytes = new Uint8Array(new Int32Array(a3d.shape).buffer);\n  const bShapeBytes = new Uint8Array(new Int32Array(b3d.shape).buffer);\n  wasmBatchMatMul(a3dId, aShapeBytes, a3d.shape.length, b3dId, bShapeBytes, b3d.shape.length, transposeA, transposeB, outId);\n  backend.disposeData(a3d.dataId);\n  backend.disposeData(b3d.dataId);\n  out.shape = outShape;\n  return out;\n}\nexport const batchMatMulConfig = {\n  kernelName: BatchMatMul,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: batchMatMul\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Reshape, util } from '@tensorflow/tfjs-core';\nexport function reshape(args) {\n  const {\n    inputs,\n    attrs\n  } = args;\n  const {\n    x\n  } = inputs;\n  const {\n    shape\n  } = attrs;\n  const xSize = util.sizeFromShape(x.shape);\n  const $shape = util.inferFromImplicitShape(shape, xSize);\n  util.assert(xSize === util.sizeFromShape($shape), () => `new shape: ${$shape}, old shape: ${x.shape}. New shape and old ` + `shape must have the same number of elements.`);\n  // Backend needs to track refCount for the dataId for reshape op\n  args.backend.incRef(x.dataId);\n  return {\n    dataId: x.dataId,\n    shape: $shape,\n    dtype: x.dtype\n  };\n}\nexport const reshapeConfig = {\n  kernelName: Reshape,\n  backendName: 'wasm',\n  kernelFunc: reshape\n};\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, BatchToSpaceND } from '@tensorflow/tfjs-core';\nimport { reshape } from './Reshape';\nimport { slice } from './Slice';\nimport { transpose } from './Transpose';\nfunction batchToSpaceND(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    x\n  } = inputs;\n  const {\n    blockShape,\n    crops\n  } = attrs;\n  const prod = blockShape.reduce((a, b) => a * b);\n  const reshaped = backend_util.getReshaped(x.shape, blockShape, prod);\n  const permuted = backend_util.getPermuted(reshaped.length, blockShape.length);\n  const reshapedPermuted = backend_util.getReshapedPermuted(x.shape, blockShape, prod);\n  const sliceBeginCoords = backend_util.getSliceBeginCoords(crops, blockShape.length);\n  const sliceSize = backend_util.getSliceSize(reshapedPermuted, crops, blockShape.length);\n  const xReshaped = reshape({\n    inputs: {\n      x\n    },\n    backend,\n    attrs: {\n      shape: reshaped\n    }\n  });\n  const xTransposed = transpose({\n    inputs: {\n      x: xReshaped\n    },\n    backend,\n    attrs: {\n      perm: permuted\n    }\n  });\n  const xTransposedReshaped = reshape({\n    inputs: {\n      x: xTransposed\n    },\n    backend,\n    attrs: {\n      shape: reshapedPermuted\n    }\n  });\n  const result = slice({\n    inputs: {\n      x: xTransposedReshaped\n    },\n    backend,\n    attrs: {\n      begin: sliceBeginCoords,\n      size: sliceSize\n    }\n  });\n  backend.disposeData(xReshaped.dataId);\n  backend.disposeData(xTransposed.dataId);\n  backend.disposeData(xTransposedReshaped.dataId);\n  return result;\n}\nexport const batchToSpaceNDConfig = {\n  kernelName: BatchToSpaceND,\n  backendName: 'wasm',\n  kernelFunc: batchToSpaceND\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Slice, slice_util, util } from '@tensorflow/tfjs-core';\nimport { sliceImplCPU } from '../kernel_utils/shared';\nexport function slice(args) {\n  const {\n    inputs: {\n      x\n    },\n    attrs: {\n      begin,\n      size\n    },\n    backend\n  } = args;\n  const [begin_, size_] = slice_util.parseSliceParams(x, begin, size);\n  const isContinous = slice_util.isSliceContinous(x.shape, begin_, size_);\n  const xVals = backend.readSync(x.dataId);\n  const out = backend.makeOutput(size_, x.dtype);\n  const xStrides = util.computeStrides(x.shape);\n  const outData = backend.dataIdMap.get(out.dataId);\n  if (isContinous) {\n    const flatOffset = slice_util.computeFlatOffset(begin_, xStrides);\n    if (x.dtype === 'string') {\n      outData.stringBytes = xVals.slice(flatOffset, flatOffset + util.sizeFromShape(size_));\n    } else {\n      const outVals = backend.typedArrayFromHeap(out);\n      outVals.set(xVals.subarray(flatOffset, flatOffset + util.sizeFromShape(size_)));\n    }\n    return out;\n  }\n  if (x.dtype === 'string') {\n    const res = sliceImplCPU(xVals, begin_, size_, x.shape, x.dtype);\n    outData.stringBytes = res;\n    return out;\n  }\n  const outVals = backend.typedArrayFromHeap(out);\n  const rank = x.shape.length;\n  if (rank === 2) {\n    slice2d(xVals, xStrides[0], outVals, begin_, size_);\n  } else if (rank === 3) {\n    slice3d(xVals, xStrides[0], xStrides[1], outVals, begin_, size_);\n  } else if (rank === 4) {\n    slice4d(xVals, xStrides[0], xStrides[1], xStrides[2], outVals, begin_, size_);\n  } else {\n    const res = sliceImplCPU(xVals, begin_, size_, x.shape, x.dtype);\n    outVals.set(res);\n  }\n  return out;\n}\nfunction slice2d(xVals, xStride, outVals, begin, size) {\n  let outOffset = 0;\n  const beginI = begin[0];\n  const beginJ = begin[1];\n  const endI = beginI + size[0];\n  for (let i = beginI; i < endI; i++) {\n    const xOffset = i * xStride + beginJ;\n    outVals.set(xVals.subarray(xOffset, xOffset + size[1]), outOffset);\n    outOffset += size[1];\n  }\n}\nfunction slice3d(xVals, xStride1, xStride2, outVals, begin, size) {\n  let outOffset = 0;\n  const beginI = begin[0];\n  const beginJ = begin[1];\n  const beginK = begin[2];\n  const endI = beginI + size[0];\n  const endJ = beginJ + size[1];\n  for (let i = beginI; i < endI; i++) {\n    for (let j = beginJ; j < endJ; j++) {\n      const xOffset = i * xStride1 + j * xStride2 + beginK;\n      outVals.set(xVals.subarray(xOffset, xOffset + size[2]), outOffset);\n      outOffset += size[2];\n    }\n  }\n}\nfunction slice4d(xVals, xStride1, xStride2, xStride3, outVals, begin, size) {\n  let outOffset = 0;\n  const beginI = begin[0];\n  const beginJ = begin[1];\n  const beginK = begin[2];\n  const endI = beginI + size[0];\n  const endJ = beginJ + size[1];\n  const endK = beginK + size[2];\n  const beginL = begin[3];\n  for (let i = beginI; i < endI; i++) {\n    for (let j = beginJ; j < endJ; j++) {\n      for (let k = beginK; k < endK; k++) {\n        const xOffset = i * xStride1 + j * xStride2 + k * xStride3 + beginL;\n        outVals.set(xVals.subarray(xOffset, xOffset + size[3]), outOffset);\n        outOffset += size[3];\n      }\n    }\n  }\n}\nexport const sliceConfig = {\n  kernelName: Slice,\n  backendName: 'wasm',\n  kernelFunc: slice\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Bincount } from '@tensorflow/tfjs-core';\nimport { CppDType } from './types';\nlet wasmBincount;\nfunction setup(backend) {\n  wasmBincount = backend.wasm.cwrap(Bincount, null /*void*/, ['number', 'number', 'boolean', 'number', 'number', 'number' // outId\n  ]);\n}\nfunction bincount(args) {\n  const {\n    backend,\n    inputs,\n    attrs\n  } = args;\n  const {\n    x,\n    weights\n  } = inputs;\n  const {\n    size\n  } = attrs;\n  const hasWeights = weights.shape.reduce((p, v) => p * v, 1) !== 0;\n  const outShape = x.shape.length === 1 ? [size] : [x.shape[0], size];\n  const out = backend.makeOutput(outShape, weights.dtype);\n  function tensorId(x) {\n    return backend.dataIdMap.get(x.dataId).id;\n  }\n  wasmBincount(tensorId(x), size, hasWeights, tensorId(weights), CppDType[weights.dtype], tensorId(out));\n  return out;\n}\nexport const bincountConfig = {\n  kernelName: Bincount,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: bincount\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { BitwiseAnd } from '@tensorflow/tfjs-core';\nimport { createBinaryKernelConfig } from './binary_kernel';\nconst supportsFullBroadcast = true;\nexport const bitwiseAndConfig = createBinaryKernelConfig(BitwiseAnd, supportsFullBroadcast);\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, BroadcastArgs } from '@tensorflow/tfjs-core';\nexport function broadcastArgs(args) {\n  const {\n    inputs,\n    backend\n  } = args;\n  const {\n    s0,\n    s1\n  } = inputs;\n  const s0Vals = backend.typedArrayFromHeap(s0);\n  const s1Vals = backend.typedArrayFromHeap(s1);\n  const broadcastShape = backend_util.assertAndGetBroadcastShape(Array.from(s0Vals), Array.from(s1Vals));\n  return backend.makeOutput([broadcastShape.length], 'int32', /*memoryOffset=*/undefined, /*values=*/new Int32Array(broadcastShape));\n}\nexport const broadcastArgsConfig = {\n  kernelName: BroadcastArgs,\n  backendName: 'wasm',\n  kernelFunc: broadcastArgs\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Cast } from '@tensorflow/tfjs-core';\nexport function cast(args) {\n  const {\n    inputs: {\n      x\n    },\n    attrs: {\n      dtype\n    },\n    backend\n  } = args;\n  const out = backend.makeOutput(x.shape, dtype);\n  const inVals = backend.typedArrayFromHeap(x);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.set(inVals);\n  return out;\n}\nexport const castConfig = {\n  kernelName: Cast,\n  backendName: 'wasm',\n  kernelFunc: cast\n};\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Ceil } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const ceilConfig = createUnaryKernelConfig(Ceil);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ClipByValue } from '@tensorflow/tfjs-core';\nlet wasmClip;\nfunction setup(backend) {\n  wasmClip = backend.wasm.cwrap(ClipByValue, null /* void */, ['number', 'number', 'number', 'number' // out_id\n  ]);\n}\nfunction clip(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    x\n  } = inputs;\n  const {\n    clipValueMin,\n    clipValueMax\n  } = attrs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmClip(xId, clipValueMin, clipValueMax, outId);\n  return out;\n}\nexport const clipByValueConfig = {\n  kernelName: ClipByValue,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: clip\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Concat, util } from '@tensorflow/tfjs-core';\nimport { concatImplCPU } from '../kernel_utils/shared';\nimport { identity } from './Identity';\nimport { reshape } from './Reshape';\nexport function concat(args) {\n  const {\n    inputs,\n    backend\n  } = args;\n  const axis = util.parseAxisParam(args.attrs.axis, inputs[0].shape)[0];\n  const shapes = inputs.map(t => t.shape);\n  backend_util.assertParamsConsistent(shapes, axis);\n  let outShape = backend_util.computeOutShape(inputs.map(t => t.shape), axis);\n  // Keep only non-empty tensors (ignore tensors with 0 in their shape).\n  const $inputs = inputs.filter(t => util.sizeFromShape(t.shape) > 0);\n  if ($inputs.length === 1) {\n    return identity({\n      inputs: {\n        x: $inputs[0]\n      },\n      backend\n    });\n  }\n  const out = backend.makeOutput(outShape, inputs[0].dtype);\n  if (util.sizeFromShape(outShape) === 0) {\n    return out;\n  }\n  if ($inputs[0].dtype === 'string') {\n    // Any concat of n-dimensional tensors across any axis can be reduced to\n    // a concatenation of two-dimensional tensors across the axis 1 by first\n    // partitioning the axes of the original tensors into those less than the\n    // axis to be concatenated and the rest. Then reshape the tensors\n    // into a two-dimensional tensor by collapsing these two sets of axes and\n    // concatenate the resulting matrices across the axis 1, finally reshaping\n    // the result to have the proper shape.\n    const inputs2D = $inputs.map(t => {\n      const innerSize = util.sizeFromShape(t.shape.slice(axis));\n      const shape = [-1, innerSize];\n      return reshape({\n        inputs: {\n          x: t\n        },\n        backend,\n        attrs: {\n          shape\n        }\n      });\n    });\n    const inputsValShapes = inputs2D.map(t => {\n      return {\n        vals: backend.readSync(t.dataId),\n        shape: t.shape\n      };\n    });\n    // Concats 2d tensors along axis=1.\n    outShape = backend_util.computeOutShape(inputs2D.map(t => t.shape), 1 /* axis */);\n    const simplyConcat = inputs2D[0].shape[0] === 1;\n    const outVals = concatImplCPU(inputsValShapes, outShape, inputs[0].dtype, simplyConcat);\n    const finalOutShape = backend_util.computeOutShape($inputs.map(t => t.shape), axis);\n    out.shape = finalOutShape;\n    const outData = backend.dataIdMap.get(out.dataId);\n    outData.stringBytes = backend_util.fromStringArrayToUint8(outVals);\n    inputs2D.forEach(t => backend.disposeData(t.dataId));\n    return out;\n  }\n  const batchDim = util.sizeFromShape($inputs[0].shape.slice(0, axis));\n  let sumInnerDims = 0;\n  const innerDims = $inputs.map(input => {\n    const innerDim = util.sizeFromShape(input.shape.slice(axis));\n    sumInnerDims += innerDim;\n    return innerDim;\n  });\n  const inVals = $inputs.map(input => backend.typedArrayFromHeap(input));\n  const outVals = backend.typedArrayFromHeap(out);\n  for (let b = 0; b < batchDim; b++) {\n    let outOffset = b * sumInnerDims;\n    for (let i = 0; i < inVals.length; i++) {\n      const innerDim = innerDims[i];\n      const inOffset = b * innerDim;\n      const vals = inVals[i].subarray(inOffset, inOffset + innerDim);\n      outVals.set(vals, outOffset);\n      outOffset += innerDim;\n    }\n  }\n  return out;\n}\nexport const concatConfig = {\n  kernelName: Concat,\n  backendName: 'wasm',\n  kernelFunc: concat\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Conv2D } from '@tensorflow/tfjs-core';\nlet wasmConv2d;\nfunction setup(backend) {\n  wasmConv2d = backend.wasm.cwrap(Conv2D, null /* void */, ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number' // outId\n  ]);\n}\nfunction conv2d(args) {\n  const {\n    inputs,\n    attrs,\n    backend\n  } = args;\n  const {\n    x,\n    filter\n  } = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n  const {\n    strides,\n    dilations,\n    pad,\n    dimRoundingMode,\n    dataFormat\n  } = attrs;\n  const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n  const convInfo = backend_util.computeConv2DInfo(x.shape, filter.shape, strides, dilations, pad, dimRoundingMode, false, $dataFormat);\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const outputChannels = convInfo.outChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(`wasm backend Conv2D does not support dataFormat:'` + `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmConv2d(xId, x.shape[0], x.shape[1], x.shape[2], filterId, filterHeight, filterWidth, padTop, padRight, padBottom, padLeft, isSamePad, dilationHeight, dilationWidth, strideHeight, strideWidth, inputChannels, outputChannels, outId);\n  return out;\n}\nexport const conv2DConfig = {\n  kernelName: Conv2D,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: conv2d\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Conv2DBackpropInput, util } from '@tensorflow/tfjs-core';\nlet wasmConv2DBackpropInput;\nfunction setup(backend) {\n  wasmConv2DBackpropInput = backend.wasm.cwrap(Conv2DBackpropInput, null, ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number' // outId\n  ]);\n}\nfunction conv2DBackpropInput(args) {\n  const {\n    backend,\n    inputs,\n    attrs\n  } = args;\n  const {\n    dy,\n    filter\n  } = inputs;\n  const {\n    strides,\n    pad,\n    dataFormat,\n    dimRoundingMode,\n    inputShape\n  } = attrs;\n  const dilations = 1;\n  const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n  const convInfo = backend_util.computeConv2DInfo(inputShape, filter.shape, strides, dilations, pad, dimRoundingMode, false /* depthwise */, $dataFormat);\n  const {\n    batchSize,\n    filterHeight,\n    filterWidth,\n    inChannels,\n    inHeight,\n    inWidth,\n    outChannels,\n    outHeight,\n    outWidth,\n    strideHeight,\n    strideWidth\n  } = convInfo;\n  const topPad = filterHeight - 1 - convInfo.padInfo.top;\n  const leftPad = filterWidth - 1 - convInfo.padInfo.left;\n  const isChannelsLast = convInfo.dataFormat === 'channelsLast';\n  const dxStrides = util.computeStrides(convInfo.inShape);\n  const dyStrides = util.computeStrides(dy.shape);\n  const [fltS0, fltS1, fltS2] = util.computeStrides(filter.shape);\n  const xBatchStride = dxStrides[0];\n  const xRowStride = isChannelsLast ? dxStrides[1] : dxStrides[2];\n  const xColStride = isChannelsLast ? dxStrides[2] : 1;\n  const xChannelStride = isChannelsLast ? 1 : dxStrides[1];\n  const yBatchStride = dyStrides[0];\n  const yRowStride = isChannelsLast ? dyStrides[1] : dyStrides[2];\n  const yColStride = isChannelsLast ? dyStrides[2] : 1;\n  const yChannelStride = isChannelsLast ? 1 : dyStrides[1];\n  const out = backend.makeOutput(convInfo.inShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const dyId = backend.dataIdMap.get(dy.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n  wasmConv2DBackpropInput(dyId, filterId, batchSize, filterHeight, filterWidth, inHeight, inWidth, inChannels, outHeight, outWidth, outChannels, strideHeight, strideWidth, topPad, leftPad, fltS0, fltS1, fltS2, xBatchStride, xRowStride, xColStride, xChannelStride, yBatchStride, yRowStride, yColStride, yChannelStride, outId);\n  return out;\n}\nexport const conv2DBackpropInputConfig = {\n  kernelName: Conv2DBackpropInput,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: conv2DBackpropInput\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Conv3D } from '@tensorflow/tfjs-core';\nlet wasmConv3D;\nfunction setup(backend) {\n  wasmConv3D = backend.wasm.cwrap(Conv3D, null, ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number' // padLeft\n  ]);\n}\nexport function conv3D(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    x,\n    filter\n  } = inputs;\n  const {\n    strides,\n    pad,\n    dilations\n  } = attrs;\n  if (x.dtype !== 'float32') {\n    throw new Error(`Tensor x must have dtype float32, got ${x.dtype}`);\n  }\n  if (filter.dtype !== 'float32') {\n    throw new Error(`Tensor filter must have dtype float32, got ${filter.dtype}`);\n  }\n  const convInfo = backend_util.computeConv3DInfo(x.shape, filter.shape, strides, dilations, pad);\n  const out = backend.makeOutput(convInfo.outShape, x.dtype);\n  wasmConv3D(backend.dataIdMap.get(x.dataId).id, backend.dataIdMap.get(filter.dataId).id, backend.dataIdMap.get(out.dataId).id, convInfo.batchSize, convInfo.inDepth, convInfo.inHeight, convInfo.inWidth, convInfo.inChannels, convInfo.outDepth, convInfo.outHeight, convInfo.outWidth, convInfo.outChannels, convInfo.strideDepth, convInfo.strideHeight, convInfo.strideWidth, convInfo.dilationDepth, convInfo.dilationHeight, convInfo.dilationWidth, convInfo.filterDepth, convInfo.filterHeight, convInfo.filterWidth, convInfo.padInfo.front, convInfo.padInfo.top, convInfo.padInfo.left);\n  return out;\n}\nexport const conv3DConfig = {\n  kernelName: Conv3D,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: conv3D\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Conv3DBackpropFilterV2 } from '@tensorflow/tfjs-core';\nlet wasmConv3DBackpropFilterV2;\nfunction setup(backend) {\n  wasmConv3DBackpropFilterV2 = backend.wasm.cwrap(Conv3DBackpropFilterV2, null, ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number' // padLeft\n  ]);\n}\nexport function conv3DBackpropFilterV2(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    x,\n    dy\n  } = inputs;\n  const {\n    strides,\n    pad,\n    filterShape\n  } = attrs;\n  if (x.dtype !== 'float32') {\n    throw new Error(`Tensor dy must have dtype float32, got ${x.dtype}`);\n  }\n  if (dy.dtype !== 'float32') {\n    throw new Error(`Tensor filter must have dtype float32, got ${dy.dtype}`);\n  }\n  const convInfo = backend_util.computeConv3DInfo(x.shape, filterShape, strides, /*dilations=*/1, pad);\n  const dw = backend.makeOutput(convInfo.filterShape, dy.dtype);\n  wasmConv3DBackpropFilterV2(backend.dataIdMap.get(x.dataId).id, backend.dataIdMap.get(dy.dataId).id, backend.dataIdMap.get(dw.dataId).id, convInfo.batchSize, convInfo.inDepth, convInfo.inHeight, convInfo.inWidth, convInfo.inChannels, convInfo.outDepth, convInfo.outHeight, convInfo.outWidth, convInfo.outChannels, convInfo.strideDepth, convInfo.strideHeight, convInfo.strideWidth, convInfo.dilationDepth, convInfo.dilationHeight, convInfo.dilationWidth, convInfo.filterDepth, convInfo.filterHeight, convInfo.filterWidth, convInfo.padInfo.front, convInfo.padInfo.top, convInfo.padInfo.left);\n  return dw;\n}\nexport const conv3DBackpropFilterV2Config = {\n  kernelName: Conv3DBackpropFilterV2,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: conv3DBackpropFilterV2\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Conv3DBackpropInputV2 } from '@tensorflow/tfjs-core';\nlet wasmConv3DBackpropInputV2;\nfunction setup(backend) {\n  wasmConv3DBackpropInputV2 = backend.wasm.cwrap(Conv3DBackpropInputV2, null, ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number' // padLeft\n  ]);\n}\nexport function conv3DBackpropInputV2(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    dy,\n    filter\n  } = inputs;\n  const {\n    pad,\n    strides,\n    inputShape\n  } = attrs;\n  if (dy.dtype !== 'float32') {\n    throw new Error(`Tensor dy must have dtype float32, got ${dy.dtype}`);\n  }\n  if (filter.dtype !== 'float32') {\n    throw new Error(`Tensor filter must have dtype float32, got ${filter.dtype}`);\n  }\n  const convInfo = backend_util.computeConv3DInfo(inputShape, filter.shape, strides, /*dilations=*/1, pad);\n  const dx = backend.makeOutput(convInfo.inShape, dy.dtype);\n  wasmConv3DBackpropInputV2(backend.dataIdMap.get(filter.dataId).id, backend.dataIdMap.get(dy.dataId).id, backend.dataIdMap.get(dx.dataId).id, convInfo.batchSize, convInfo.inDepth, convInfo.inHeight, convInfo.inWidth, convInfo.inChannels, convInfo.outDepth, convInfo.outHeight, convInfo.outWidth, convInfo.outChannels, convInfo.strideDepth, convInfo.strideHeight, convInfo.strideWidth, convInfo.dilationDepth, convInfo.dilationHeight, convInfo.dilationWidth, convInfo.filterDepth, convInfo.filterHeight, convInfo.filterWidth, convInfo.padInfo.front, convInfo.padInfo.top, convInfo.padInfo.left);\n  return dx;\n}\nexport const conv3DBackpropInputV2Config = {\n  kernelName: Conv3DBackpropInputV2,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: conv3DBackpropInputV2\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Cos } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const cosConfig = createUnaryKernelConfig(Cos);\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Cosh } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const coshConfig = createUnaryKernelConfig(Cosh);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { CropAndResize } from '@tensorflow/tfjs-core';\nimport { cast } from './Cast';\n// Must match enum in CropAndResize.cc\nvar InterpolationMethod;\n(function (InterpolationMethod) {\n  InterpolationMethod[InterpolationMethod[\"bilinear\"] = 0] = \"bilinear\";\n  InterpolationMethod[InterpolationMethod[\"nearest\"] = 1] = \"nearest\";\n})(InterpolationMethod || (InterpolationMethod = {}));\nlet wasmCropAndResize;\nfunction setup(backend) {\n  wasmCropAndResize = backend.wasm.cwrap(CropAndResize, null /*void*/, ['number', 'number', 'number', 'number', 'array', 'number', 'number', 'number', 'number', 'number' // out id\n  ]);\n}\nfunction cropAndResize(args) {\n  const {\n    backend,\n    inputs,\n    attrs\n  } = args;\n  const {\n    method,\n    extrapolationValue,\n    cropSize\n  } = attrs;\n  const {\n    image,\n    boxes,\n    boxInd\n  } = inputs;\n  const numBoxes = boxes.shape[0];\n  const [cropHeight, cropWidth] = cropSize;\n  const outShape = [numBoxes, cropHeight, cropWidth, image.shape[3]];\n  let imagesData = backend.dataIdMap.get(image.dataId);\n  let castedData;\n  if (image.dtype !== 'float32') {\n    castedData = cast({\n      backend,\n      inputs: {\n        x: image\n      },\n      attrs: {\n        dtype: 'float32'\n      }\n    });\n    imagesData = backend.dataIdMap.get(castedData.dataId);\n  }\n  const imagesId = imagesData.id;\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const boxIndId = backend.dataIdMap.get(boxInd.dataId).id;\n  const out = backend.makeOutput(outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const imagesShapeBytes = new Uint8Array(new Int32Array(image.shape).buffer);\n  wasmCropAndResize(imagesId, boxesId, boxIndId, numBoxes, imagesShapeBytes, cropHeight, cropWidth, InterpolationMethod[method], extrapolationValue, outId);\n  if (castedData != null) {\n    backend.disposeData(castedData.dataId);\n  }\n  return out;\n}\nexport const cropAndResizeConfig = {\n  kernelName: CropAndResize,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: cropAndResize\n};\n", "/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Cumprod, util } from '@tensorflow/tfjs-core';\nimport { CppDType } from './types';\nimport { transpose } from './Transpose';\nlet wasmCumprod;\nfunction setup(backend) {\n  wasmCumprod = backend.wasm.cwrap(Cumprod, null /* void */, ['number', 'number', 'number', 'number', 'number', 'number' // dtype\n  ]);\n}\nexport function cumprod(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    x\n  } = inputs;\n  const {\n    axis,\n    exclusive,\n    reverse\n  } = attrs;\n  const xRank = x.shape.length;\n  util.assert(x.dtype === 'float32' || x.dtype === 'int32', () => `cumprod does not support ${x.dtype} tensors in the WASM backend`);\n  // permute required axis to inner most axis\n  const permutation = backend_util.getAxesPermutation([axis], xRank);\n  let permutedX = x;\n  if (permutation !== null) {\n    permutedX = transpose({\n      inputs: {\n        x\n      },\n      attrs: {\n        perm: permutation\n      },\n      backend\n    });\n  }\n  const permutedAxis = backend_util.getInnerMostAxes(1, xRank)[0];\n  backend_util.assertAxesAreInnerMostDims('cumprod', [permutedAxis], xRank);\n  const permutedOut = backend.makeOutput(permutedX.shape, permutedX.dtype);\n  const finalDim = permutedX.shape[permutedAxis];\n  const permutedXId = backend.dataIdMap.get(permutedX.dataId).id;\n  const permutedOutId = backend.dataIdMap.get(permutedOut.dataId).id;\n  wasmCumprod(permutedXId, exclusive ? 1 : 0, reverse ? 1 : 0, finalDim, permutedOutId, CppDType[x.dtype]);\n  // transpose data back if permuted\n  let out = permutedOut;\n  if (permutation !== null) {\n    const undoPermutation = backend_util.getUndoAxesPermutation(permutation);\n    out = transpose({\n      inputs: {\n        x: permutedOut\n      },\n      attrs: {\n        perm: undoPermutation\n      },\n      backend\n    });\n    backend.disposeData(permutedX.dataId);\n    backend.disposeData(permutedOut.dataId);\n  }\n  return out;\n}\nexport const cumprodConfig = {\n  kernelName: Cumprod,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: cumprod\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Cumsum, util } from '@tensorflow/tfjs-core';\nimport { CppDType } from './types';\nimport { transpose } from './Transpose';\nlet wasmCumsum;\nfunction setup(backend) {\n  wasmCumsum = backend.wasm.cwrap(Cumsum, null /* void */, ['number', 'number', 'number', 'number', 'number', 'number' // dtype\n  ]);\n}\nexport function cumsum(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    x\n  } = inputs;\n  const {\n    axis,\n    exclusive,\n    reverse\n  } = attrs;\n  const xRank = x.shape.length;\n  util.assert(x.dtype === 'float32' || x.dtype === 'int32', () => `cumsum does not support ${x.dtype} tensors in the WASM backend`);\n  // permute required axis to inner most axis\n  const permutation = backend_util.getAxesPermutation([axis], xRank);\n  let permutedX = x;\n  if (permutation !== null) {\n    permutedX = transpose({\n      inputs: {\n        x\n      },\n      attrs: {\n        perm: permutation\n      },\n      backend\n    });\n  }\n  const permutedAxis = backend_util.getInnerMostAxes(1, xRank)[0];\n  backend_util.assertAxesAreInnerMostDims('cumsum', [permutedAxis], xRank);\n  const permutedOut = backend.makeOutput(permutedX.shape, permutedX.dtype);\n  const finalDim = permutedX.shape[permutedAxis];\n  const permutedXId = backend.dataIdMap.get(permutedX.dataId).id;\n  const permutedOutId = backend.dataIdMap.get(permutedOut.dataId).id;\n  wasmCumsum(permutedXId, exclusive ? 1 : 0, reverse ? 1 : 0, finalDim, permutedOutId, CppDType[x.dtype]);\n  // transpose data back if permuted\n  let out = permutedOut;\n  if (permutation !== null) {\n    const undoPermutation = backend_util.getUndoAxesPermutation(permutation);\n    out = transpose({\n      inputs: {\n        x: permutedOut\n      },\n      attrs: {\n        perm: undoPermutation\n      },\n      backend\n    });\n    backend.disposeData(permutedX.dataId);\n    backend.disposeData(permutedOut.dataId);\n  }\n  return out;\n}\nexport const cumsumConfig = {\n  kernelName: Cumsum,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: cumsum\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { DenseBincount } from '@tensorflow/tfjs-core';\nimport { CppDType } from './types';\nlet wasmDenseBincount;\nfunction setup(backend) {\n  wasmDenseBincount = backend.wasm.cwrap('DenseBincount', null /*void*/, ['number', 'array', 'number', 'number', 'boolean', 'number', 'number', 'boolean', 'number' // outId\n  ]);\n}\nfunction denseBincount(args) {\n  const {\n    backend,\n    inputs,\n    attrs\n  } = args;\n  const {\n    x,\n    weights\n  } = inputs;\n  const {\n    size,\n    binaryOutput\n  } = attrs;\n  const hasWeights = weights.shape.reduce((p, v) => p * v, 1) !== 0;\n  const outShape = x.shape.length === 1 ? [size] : [x.shape[0], size];\n  const out = backend.makeOutput(outShape, weights.dtype);\n  function tensorId(x) {\n    return backend.dataIdMap.get(x.dataId).id;\n  }\n  wasmDenseBincount(tensorId(x), new Uint8Array(new Int32Array(x.shape).buffer), x.shape.length, size, hasWeights, tensorId(weights), CppDType[weights.dtype], binaryOutput, tensorId(out));\n  return out;\n}\nexport const denseBincountConfig = {\n  kernelName: DenseBincount,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: denseBincount\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { DepthToSpace, util } from '@tensorflow/tfjs-core';\nlet wasmDepthToSpace;\nfunction setup(backend) {\n  wasmDepthToSpace = backend.wasm.cwrap(DepthToSpace, null /*void*/, ['number', 'number', 'number', 'array', 'number', 'array', 'array', 'number', 'number' // outId\n  ]);\n}\nexport function depthToSpace(args) {\n  const {\n    backend,\n    inputs,\n    attrs\n  } = args;\n  const {\n    x\n  } = inputs;\n  const {\n    blockSize,\n    dataFormat\n  } = attrs;\n  const batchSize = x.shape[0];\n  const inputHeight = dataFormat === 'NHWC' ? x.shape[1] : x.shape[2];\n  const inputWidth = dataFormat === 'NHWC' ? x.shape[2] : x.shape[3];\n  const inputDepth = dataFormat === 'NHWC' ? x.shape[3] : x.shape[1];\n  const outputHeight = inputHeight * blockSize;\n  const outputWidth = inputWidth * blockSize;\n  const outputDepth = inputDepth / (blockSize * blockSize);\n  const outputShape = dataFormat === 'NHWC' ? [batchSize, outputHeight, outputWidth, outputDepth] : [batchSize, outputDepth, outputHeight, outputWidth];\n  const out = backend.makeOutput(outputShape, 'float32');\n  const xData = backend.dataIdMap.get(x.dataId);\n  const xId = xData.id;\n  const xStridesBytes = new Uint8Array(new Int32Array(util.computeStrides(x.shape)).buffer);\n  const outputShapeBytes = new Uint8Array(new Int32Array(outputShape).buffer);\n  const outStridesBytes = new Uint8Array(new Int32Array(util.computeStrides(outputShape)).buffer);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const channelsLast = dataFormat === 'NHWC' ? 1 : 0;\n  wasmDepthToSpace(xId, blockSize, channelsLast, xStridesBytes, x.shape.length - 1, outputShapeBytes, outStridesBytes, outputShape.length, outId);\n  return out;\n}\nexport const depthToSpaceConfig = {\n  kernelName: DepthToSpace,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: depthToSpace\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, DepthwiseConv2dNative } from '@tensorflow/tfjs-core';\nlet wasmDepthwiseConv2d;\nfunction setup(backend) {\n  wasmDepthwiseConv2d = backend.wasm.cwrap(DepthwiseConv2dNative, null /* void */, ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number' // outId\n  ]);\n}\nfunction depthwiseConv2d(args) {\n  const {\n    inputs,\n    attrs,\n    backend\n  } = args;\n  const {\n    x,\n    filter\n  } = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n  const {\n    strides,\n    dilations,\n    pad,\n    dimRoundingMode\n  } = attrs;\n  const $dilations = dilations == null ? [1, 1] : dilations;\n  const convInfo = backend_util.computeConv2DInfo(x.shape, filter.shape, strides, $dilations, pad, dimRoundingMode, true /* depthwise */);\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const outputChannels = convInfo.outChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'` + `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmDepthwiseConv2d(xId, x.shape[0], x.shape[1], x.shape[2], filterId, filterHeight, filterWidth, padTop, padRight, padBottom, padLeft, isSamePad, dilationHeight, dilationWidth, strideHeight, strideWidth, inputChannels, outputChannels, outId);\n  return out;\n}\nexport const depthwiseConv2dNativeConfig = {\n  kernelName: DepthwiseConv2dNative,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: depthwiseConv2d\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Diag, util } from '@tensorflow/tfjs-core';\nimport { CppDType } from './types';\nlet wasmDiag;\nfunction setup(backend) {\n  wasmDiag = backend.wasm.cwrap('Diag', null, ['number', 'number', 'number', 'number' // outId\n  ]);\n}\nexport function diag(args) {\n  const {\n    inputs,\n    backend\n  } = args;\n  const {\n    x\n  } = inputs;\n  const xSize = util.sizeFromShape(x.shape);\n  const out = backend.makeOutput([...x.shape, ...x.shape], x.dtype);\n  wasmDiag(backend.dataIdMap.get(x.dataId).id, CppDType[x.dtype], xSize, backend.dataIdMap.get(out.dataId).id);\n  return out;\n}\nexport const diagConfig = {\n  kernelName: Diag,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: diag\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Dilation2D } from '@tensorflow/tfjs-core';\nimport { CppDType } from './types';\nlet wasmDilation2D;\nfunction setup(backend) {\n  wasmDilation2D = backend.wasm.cwrap(Dilation2D, null, ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number' // padLeft\n  ]);\n}\nexport function dilation2D(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    x,\n    filter\n  } = inputs;\n  const {\n    strides,\n    pad,\n    dilations\n  } = attrs;\n  if (x.dtype !== filter.dtype) {\n    throw new Error(`Dilation2D error: x must have the same dtype as filter. Got ${x.dtype} and ${filter.dtype}`);\n  }\n  const dilationInfo = backend_util.computeDilation2DInfo(x.shape, filter.shape, strides, pad, /*dataFormat=*/'NHWC', dilations);\n  const out = backend.makeOutput(dilationInfo.outShape, x.dtype);\n  wasmDilation2D(backend.dataIdMap.get(x.dataId).id, backend.dataIdMap.get(filter.dataId).id, backend.dataIdMap.get(out.dataId).id, CppDType[x.dtype], dilationInfo.batchSize, /*depth=*/dilationInfo.inChannels, dilationInfo.inHeight, dilationInfo.inWidth, dilationInfo.outHeight, dilationInfo.outWidth, dilationInfo.strideHeight, dilationInfo.strideWidth, dilationInfo.dilationHeight, dilationInfo.dilationWidth, dilationInfo.filterHeight, dilationInfo.filterWidth, dilationInfo.padInfo.top, dilationInfo.padInfo.left);\n  return out;\n}\nexport const dilation2DConfig = {\n  kernelName: Dilation2D,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: dilation2D\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Dilation2DBackpropFilter } from '@tensorflow/tfjs-core';\nimport { CppDType } from './types';\nlet wasmDilation2DBackpropFilter;\nfunction setup(backend) {\n  wasmDilation2DBackpropFilter = backend.wasm.cwrap(Dilation2DBackpropFilter, null, ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number' // padLeft\n  ]);\n}\nexport function dilation2DBackpropFilter(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    x,\n    filter,\n    dy\n  } = inputs;\n  const {\n    strides,\n    pad,\n    dilations\n  } = attrs;\n  if (x.dtype !== filter.dtype || x.dtype !== dy.dtype) {\n    throw new Error(`Dilation2DBackpropFilter error: x must have the same dtype as filter and dy. Got ${x.dtype}, ${filter.dtype}, and ${dy.dtype}`);\n  }\n  const dilationInfo = backend_util.computeDilation2DInfo(x.shape, filter.shape, strides, pad, /*dataFormat=*/'NHWC', dilations);\n  const gradients = backend.makeOutput(filter.shape, filter.dtype);\n  wasmDilation2DBackpropFilter(backend.dataIdMap.get(x.dataId).id, backend.dataIdMap.get(filter.dataId).id, backend.dataIdMap.get(dy.dataId).id, backend.dataIdMap.get(gradients.dataId).id, CppDType[x.dtype], dilationInfo.batchSize, /*depth=*/dilationInfo.inChannels, dilationInfo.inHeight, dilationInfo.inWidth, dilationInfo.outHeight, dilationInfo.outWidth, dilationInfo.strideHeight, dilationInfo.strideWidth, dilationInfo.dilationHeight, dilationInfo.dilationWidth, dilationInfo.filterHeight, dilationInfo.filterWidth, dilationInfo.padInfo.top, dilationInfo.padInfo.left);\n  return gradients;\n}\nexport const dilation2DBackpropFilterConfig = {\n  kernelName: Dilation2DBackpropFilter,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: dilation2DBackpropFilter\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Dilation2DBackpropInput } from '@tensorflow/tfjs-core';\nimport { CppDType } from './types';\nlet wasmDilation2DBackpropInput;\nfunction setup(backend) {\n  wasmDilation2DBackpropInput = backend.wasm.cwrap(Dilation2DBackpropInput, null, ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number' // padLeft\n  ]);\n}\nexport function dilation2DBackpropInput(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    x,\n    filter,\n    dy\n  } = inputs;\n  const {\n    strides,\n    pad,\n    dilations\n  } = attrs;\n  if (x.dtype !== filter.dtype || x.dtype !== dy.dtype) {\n    throw new Error(`Dilation2DBackpropInput error: x must have the same dtype as filter and dy. Got ${x.dtype}, ${filter.dtype}, and ${dy.dtype}`);\n  }\n  const dilationInfo = backend_util.computeDilation2DInfo(x.shape, filter.shape, strides, pad, /*dataFormat=*/'NHWC', dilations);\n  const gradients = backend.makeOutput(x.shape, x.dtype);\n  wasmDilation2DBackpropInput(backend.dataIdMap.get(x.dataId).id, backend.dataIdMap.get(filter.dataId).id, backend.dataIdMap.get(dy.dataId).id, backend.dataIdMap.get(gradients.dataId).id, CppDType[x.dtype], dilationInfo.batchSize, /*depth=*/dilationInfo.inChannels, dilationInfo.inHeight, dilationInfo.inWidth, dilationInfo.outHeight, dilationInfo.outWidth, dilationInfo.strideHeight, dilationInfo.strideWidth, dilationInfo.dilationHeight, dilationInfo.dilationWidth, dilationInfo.filterHeight, dilationInfo.filterWidth, dilationInfo.padInfo.top, dilationInfo.padInfo.left);\n  return gradients;\n}\nexport const dilation2DBackpropInputConfig = {\n  kernelName: Dilation2DBackpropInput,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: dilation2DBackpropInput\n};\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Elu } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const eluConfig = createUnaryKernelConfig(Elu);\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { EluGrad } from '@tensorflow/tfjs-core';\nlet wasmEluGrad;\nfunction setup(backend) {\n  wasmEluGrad = backend.wasm.cwrap(EluGrad, null, ['number', 'number', 'number' // outId\n  ]);\n}\nexport function eluGrad(args) {\n  const {\n    inputs,\n    backend\n  } = args;\n  const {\n    dy,\n    y\n  } = inputs;\n  const out = backend.makeOutput(y.shape, 'float32');\n  const tensorId = x => {\n    return backend.dataIdMap.get(x.dataId).id;\n  };\n  wasmEluGrad(tensorId(y), tensorId(dy), tensorId(out));\n  return out;\n}\nexport const eluGradConfig = {\n  kernelName: EluGrad,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: eluGrad\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Equal } from '@tensorflow/tfjs-core';\nimport { createBinaryKernelConfig } from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const equalConfig = createBinaryKernelConfig(Equal, supportsFullBroadcast, 'bool');\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Erf } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const erfConfig = createUnaryKernelConfig(Erf);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Exp } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const expConfig = createUnaryKernelConfig(Exp, 'float32');\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ExpandDims, util } from '@tensorflow/tfjs-core';\nimport { reshape } from './Reshape';\nexport function expandDims(args) {\n  const {\n    inputs,\n    attrs,\n    backend\n  } = args;\n  const {\n    input\n  } = inputs;\n  const {\n    dim\n  } = attrs;\n  const inputRank = input.shape.length;\n  const newShape = input.shape.slice();\n  let $dim = dim;\n  if (dim < 0) {\n    // Negative value is counted from the tail of rank.\n    util.assert(-(inputRank + 1) <= dim, () => `Axis must be in the interval [${-(inputRank + 1)}, ${inputRank}]`);\n    $dim = inputRank + dim + 1;\n  }\n  newShape.splice($dim, 0, 1);\n  return reshape({\n    inputs: {\n      x: input\n    },\n    backend,\n    attrs: {\n      shape: newShape\n    }\n  });\n}\nexport const expandDimsConfig = {\n  kernelName: ExpandDims,\n  backendName: 'wasm',\n  kernelFunc: expandDims\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Expm1 } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const expm1Config = createUnaryKernelConfig(Expm1, 'float32');\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nimport { Fill } from '@tensorflow/tfjs-core';\nexport function fill(args) {\n  const {\n    attrs: {\n      shape,\n      value\n    },\n    backend\n  } = args;\n  let {\n    attrs: {\n      dtype\n    }\n  } = args;\n  dtype = dtype || util.inferDtype(value);\n  const out = backend.makeOutput(shape, dtype);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.fill(value);\n  return out;\n}\nexport const fillConfig = {\n  kernelName: Fill,\n  backendName: 'wasm',\n  kernelFunc: fill\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { FlipLeftRight } from '@tensorflow/tfjs-core';\nlet wasmFlipLeftRight;\nfunction setup(backend) {\n  wasmFlipLeftRight = backend.wasm.cwrap(FlipLeftRight, null /* void */, ['number', 'number', 'number', 'number', 'number', 'number' // outId\n  ]);\n}\nexport function flipLeftRight(args) {\n  const {\n    inputs,\n    backend\n  } = args;\n  const {\n    image\n  } = inputs;\n  const out = backend.makeOutput(image.shape, image.dtype);\n  const imageId = backend.dataIdMap.get(image.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n  wasmFlipLeftRight(imageId, batch, imageHeight, imageWidth, numChannels, outId);\n  return out;\n}\nexport const flipLeftRightConfig = {\n  kernelName: FlipLeftRight,\n  backendName: 'wasm',\n  kernelFunc: flipLeftRight,\n  setupFunc: setup\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Floor } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const floorConfig = createUnaryKernelConfig(Floor);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { FloorDiv } from '@tensorflow/tfjs-core';\nimport { createBinaryKernelConfig } from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const floorDivConfig = createBinaryKernelConfig(FloorDiv, supportsFullBroadcast);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { FusedBatchNorm, util } from '@tensorflow/tfjs-core';\nlet wasmBatchNorm;\nfunction setup(backend) {\n  wasmBatchNorm = backend.wasm.cwrap(FusedBatchNorm, null /* void */, ['number', 'number', 'number', 'number', 'number', 'number', 'number']);\n}\nfunction fusedBatchNorm(args) {\n  const {\n    backend,\n    inputs,\n    attrs\n  } = args;\n  const {\n    varianceEpsilon\n  } = attrs;\n  const {\n    x,\n    mean,\n    variance,\n    offset,\n    scale\n  } = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const meanId = backend.dataIdMap.get(mean.dataId).id;\n  const varianceId = backend.dataIdMap.get(variance.dataId).id;\n  const offsetId = offset != null ? backend.dataIdMap.get(offset.dataId).id : 0;\n  const scaleId = scale != null ? backend.dataIdMap.get(scale.dataId).id : 0;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(x.shape) === 0) {\n    return out;\n  }\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmBatchNorm(xId, meanId, varianceId, offsetId, scaleId, varianceEpsilon, outId);\n  return out;\n}\nexport const fusedBatchNormConfig = {\n  kernelName: FusedBatchNorm,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedBatchNorm\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, FusedConv2D } from '@tensorflow/tfjs-core';\nimport { FusableActivation } from './types';\nlet wasmFusedConv2d;\nfunction setup(backend) {\n  wasmFusedConv2d = backend.wasm.cwrap(FusedConv2D, null /* void */, ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number' // outId\n  ]);\n}\nfunction fusedConv2d(args) {\n  const {\n    inputs,\n    attrs,\n    backend\n  } = args;\n  const {\n    x,\n    filter,\n    bias,\n    preluActivationWeights\n  } = inputs;\n  const {\n    strides,\n    pad,\n    dilations,\n    dataFormat,\n    dimRoundingMode,\n    activation,\n    leakyreluAlpha\n  } = attrs;\n  const convInfo = backend_util.computeConv2DInfo(x.shape, filter.shape, strides, dilations, pad, dimRoundingMode);\n  const fusedActivation = FusableActivation[activation];\n  if (fusedActivation == null) {\n    throw new Error(`${activation} activation not yet supported for FusedConv2D ` + `in the wasm backend.`);\n  }\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n  const outputChannels = convInfo.outChannels;\n  let biasId = 0;\n  if (bias != null) {\n    const biasData = backend.dataIdMap.get(bias.dataId);\n    if (biasData.shape.length !== 1) {\n      throw new Error(`FusedConv2D only supports rank-1 bias but got ` + `rank ${biasData.shape.length}.`);\n    }\n    if (biasData.shape[0] !== outputChannels) {\n      throw new Error(`FusedConv2D bias shape (${biasData.shape}) does not ` + `match the number of output channels (${outputChannels})`);\n    }\n    biasId = biasData.id;\n  }\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n  const batchSize = convInfo.batchSize;\n  const inHeight = convInfo.inHeight;\n  const inWidth = convInfo.inWidth;\n  if (dataFormat !== 'NHWC') {\n    throw new Error(`wasm backend FusedConv2D does not support dataFormat:'` + `${dataFormat}'. Please use 'NHWC'.`);\n  }\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const preluActivationWeightsId = preluActivationWeights == null ? 0 : backend.dataIdMap.get(preluActivationWeights.dataId).id;\n  wasmFusedConv2d(xId, batchSize, inHeight, inWidth, filterId, filterHeight, filterWidth, biasId, padTop, padRight, padBottom, padLeft, isSamePad, dilationHeight, dilationWidth, strideHeight, strideWidth, inputChannels, outputChannels, fusedActivation, preluActivationWeightsId, leakyreluAlpha || 0, outId);\n  return out;\n}\nexport const fusedConv2DConfig = {\n  kernelName: FusedConv2D,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedConv2d\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, FusedDepthwiseConv2D } from '@tensorflow/tfjs-core';\nimport { FusableActivation } from './types';\nlet wasmFusedDepthwiseConv2d;\nfunction setup(backend) {\n  wasmFusedDepthwiseConv2d = backend.wasm.cwrap(FusedDepthwiseConv2D, null /* void */, ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number' // outId\n  ]);\n}\nfunction fusedDepthwiseConv2d(args) {\n  const {\n    inputs,\n    attrs,\n    backend\n  } = args;\n  const {\n    x,\n    filter,\n    bias,\n    preluActivationWeights\n  } = inputs;\n  const {\n    strides,\n    pad,\n    dilations,\n    dataFormat,\n    dimRoundingMode,\n    activation,\n    leakyreluAlpha\n  } = attrs;\n  const convInfo = backend_util.computeConv2DInfo(x.shape, filter.shape, strides, dilations, pad, dimRoundingMode, true /* depthwise */);\n  const fusedActivation = FusableActivation[activation];\n  if (fusedActivation == null) {\n    throw new Error(`${activation} activation not yet supported for FusedDepthwiseConv2D ` + `in the wasm backend.`);\n  }\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n  const outputChannels = convInfo.outChannels;\n  let biasId = 0;\n  if (bias != null) {\n    const biasData = backend.dataIdMap.get(bias.dataId);\n    if (biasData.shape.length !== 1) {\n      throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got ` + `rank ${biasData.shape.length}.`);\n    }\n    if (biasData.shape[0] !== outputChannels) {\n      throw new Error(`FusedDepthwiseConv2D bias shape (${biasData.shape}) does not ` + `match the number of output channels (${outputChannels})`);\n    }\n    biasId = biasData.id;\n  }\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n  const batchSize = convInfo.batchSize;\n  const inHeight = convInfo.inHeight;\n  const inWidth = convInfo.inWidth;\n  if (dataFormat !== 'NHWC') {\n    throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'` + `${dataFormat}'. Please use 'NHWC'.`);\n  }\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const preluActivationWeightsId = preluActivationWeights == null ? 0 : backend.dataIdMap.get(preluActivationWeights.dataId).id;\n  wasmFusedDepthwiseConv2d(xId, batchSize, inHeight, inWidth, filterId, filterHeight, filterWidth, biasId, padTop, padRight, padBottom, padLeft, isSamePad, dilationHeight, dilationWidth, strideHeight, strideWidth, inputChannels, outputChannels, fusedActivation, preluActivationWeightsId, leakyreluAlpha || 0, outId);\n  return out;\n}\nexport const fusedDepthwiseConv2DConfig = {\n  kernelName: FusedDepthwiseConv2D,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedDepthwiseConv2d\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { gather_util, GatherNd } from '@tensorflow/tfjs-core';\nimport { CppDType } from './types';\nlet wasmGatherNd;\nfunction setup(backend) {\n  wasmGatherNd = backend.wasm.cwrap(GatherNd, null /*void*/, ['number', 'number', 'number', 'number', 'number', 'number', 'array', 'number' // outId\n  ]);\n}\nfunction gatherNd(args) {\n  const {\n    backend,\n    inputs\n  } = args;\n  const {\n    params,\n    indices\n  } = inputs;\n  const [resultShape, numSlices, sliceSize, strides] = gather_util.prepareAndValidate(params, indices);\n  const out = backend.makeOutput(resultShape, params.dtype);\n  if (numSlices === 0) {\n    return out;\n  }\n  const indicesShape = indices.shape;\n  const sliceRank = indicesShape[indicesShape.length - 1];\n  const xData = backend.dataIdMap.get(params.dataId);\n  const xId = xData.id;\n  const indicesData = backend.dataIdMap.get(indices.dataId);\n  const indicesId = indicesData.id;\n  const stridesBytes = new Uint8Array(new Int32Array(strides).buffer);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmGatherNd(xId, CppDType[params.dtype], indicesId, numSlices, sliceRank, sliceSize, stridesBytes, outId);\n  return out;\n}\nexport const gatherNdConfig = {\n  kernelName: GatherNd,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: gatherNd\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, GatherV2, util } from '@tensorflow/tfjs-core';\nimport { reshape } from './Reshape';\nimport { CppDType } from './types';\nlet wasmGather;\nfunction setup(backend) {\n  wasmGather = backend.wasm.cwrap('Gather', null /*void*/, ['number', 'number', 'array', 'number', 'number', 'number', 'array', 'number' // outId\n  ]);\n}\nfunction gatherV2(args) {\n  const {\n    backend,\n    inputs,\n    attrs\n  } = args;\n  const {\n    x,\n    indices\n  } = inputs;\n  const {\n    axis,\n    batchDims\n  } = attrs;\n  // Throw error when any index is out of bound.\n  const parsedAxis = util.parseAxisParam(axis, x.shape)[0];\n  const indicesVals = backend.readSync(indices.dataId);\n  const axisDim = x.shape[parsedAxis];\n  for (let i = 0; i < indicesVals.length; ++i) {\n    const index = indicesVals[i];\n    util.assert(index <= axisDim - 1 && index >= 0, () => `GatherV2: the index value ${index} is not in [0, ${axisDim - 1}]`);\n  }\n  const shapeInfo = backend_util.segment_util.collectGatherOpShapeInfo(x, indices, parsedAxis, batchDims);\n  const flattenX = reshape({\n    inputs: {\n      x\n    },\n    attrs: {\n      shape: [shapeInfo.batchSize, shapeInfo.outerSize, shapeInfo.dimSize, shapeInfo.sliceSize]\n    },\n    backend\n  });\n  const indicesSize = util.sizeFromShape(indices.shape);\n  const flattenIndex = reshape({\n    inputs: {\n      x: indices\n    },\n    attrs: {\n      shape: [shapeInfo.batchSize, indicesSize / shapeInfo.batchSize]\n    },\n    backend\n  });\n  const flattenOutputShape = [shapeInfo.batchSize, shapeInfo.outerSize, indicesSize / shapeInfo.batchSize, shapeInfo.sliceSize];\n  const out = backend.makeOutput(flattenOutputShape, x.dtype);\n  if (util.sizeFromShape(x.shape) === 0) {\n    return out;\n  }\n  const stridesSize = flattenX.shape.length - 1;\n  const xData = backend.dataIdMap.get(flattenX.dataId);\n  const xId = xData.id;\n  const indicesData = backend.dataIdMap.get(flattenIndex.dataId);\n  const indicesId = indicesData.id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const xStridesBytes = new Uint8Array(new Int32Array(util.computeStrides(flattenX.shape)).buffer);\n  const outStridesBytes = new Uint8Array(new Int32Array(util.computeStrides(flattenOutputShape)).buffer);\n  wasmGather(xId, CppDType[x.dtype], xStridesBytes, stridesSize, indicesId, shapeInfo.batchSize, outStridesBytes, outId);\n  backend.disposeData(flattenX.dataId);\n  backend.disposeData(flattenIndex.dataId);\n  // reshape\n  out.shape = shapeInfo.outputShape;\n  return out;\n}\nexport const gatherV2Config = {\n  kernelName: GatherV2,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: gatherV2\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Greater } from '@tensorflow/tfjs-core';\nimport { createBinaryKernelConfig } from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const greaterConfig = createBinaryKernelConfig(Greater, supportsFullBroadcast, 'bool');\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { GreaterEqual } from '@tensorflow/tfjs-core';\nimport { createBinaryKernelConfig } from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const greaterEqualConfig = createBinaryKernelConfig(GreaterEqual, supportsFullBroadcast, 'bool');\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { IsFinite } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const isFiniteConfig = createUnaryKernelConfig(IsFinite, 'bool');\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { IsInf } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const isInfConfig = createUnaryKernelConfig(IsInf, 'bool');\n", "/**\n * @license\n * Copyright 2022 The TensorFlow Authors. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { IsNan } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const isNaNConfig = createUnaryKernelConfig(IsNan, 'bool');\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LeakyRelu, util } from '@tensorflow/tfjs-core';\nimport { CppDType } from './types';\nlet wasmFunc;\nfunction setupFunc(backend) {\n  wasmFunc = backend.wasm.cwrap(LeakyRelu, null /* void */, ['number', 'number', 'number', 'number' // out_id\n  ]);\n}\nexport function leakyRelu(args) {\n  const {\n    inputs: {\n      x\n    },\n    attrs: {\n      alpha\n    },\n    backend\n  } = args;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  // According to TF API, LeakyRelu returns float32 when input is either float32\n  // or int32.\n  const out = backend.makeOutput(x.shape, 'float32');\n  if (util.sizeFromShape(x.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmFunc(xId, CppDType[x.dtype], alpha, outId);\n  }\n  return out;\n}\nexport const leakyReluConfig = {\n  kernelName: LeakyRelu,\n  backendName: 'wasm',\n  setupFunc,\n  kernelFunc: leakyRelu\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Less } from '@tensorflow/tfjs-core';\nimport { createBinaryKernelConfig } from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const lessConfig = createBinaryKernelConfig(Less, supportsFullBroadcast, 'bool');\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LessEqual } from '@tensorflow/tfjs-core';\nimport { createBinaryKernelConfig } from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const lessEqualConfig = createBinaryKernelConfig(LessEqual, supportsFullBroadcast, 'bool');\n", "/**\n * @license\n * Copyright 2023 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LinSpace } from '@tensorflow/tfjs-core';\nlet wasmLinSpace;\nfunction setup(backend) {\n  wasmLinSpace = backend.wasm.cwrap(LinSpace, null, ['number', 'number', 'number', 'number' // num\n  ]);\n}\nexport function linSpace(args) {\n  const {\n    attrs,\n    backend\n  } = args;\n  const {\n    start,\n    stop,\n    num\n  } = attrs;\n  // TFJS Cpu backend supports num as a float and returns undetermined tensor in\n  // that case. However, according to TensorFlow spec, num should be a integer.\n  const numInt = Math.floor(num);\n  const out = backend.makeOutput([numInt], 'float32');\n  wasmLinSpace(backend.dataIdMap.get(out.dataId).id, start, stop, numInt);\n  return out;\n}\nexport const linSpaceConfig = {\n  kernelName: LinSpace,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: linSpace\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Log } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const logConfig = createUnaryKernelConfig(Log);\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Log1p } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const log1pConfig = createUnaryKernelConfig(Log1p);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LogicalAnd } from '@tensorflow/tfjs-core';\nimport { createBinaryKernelConfig } from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const logicalAndConfig = createBinaryKernelConfig(LogicalAnd, supportsFullBroadcast, 'bool');\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LogicalNot } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const logicalNotConfig = createUnaryKernelConfig(LogicalNot);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LogicalOr } from '@tensorflow/tfjs-core';\nimport { createBinaryKernelConfig } from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const logicalOrConfig = createBinaryKernelConfig(LogicalOr, supportsFullBroadcast, 'bool');\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LogicalXor } from '@tensorflow/tfjs-core';\nimport { createBinaryKernelConfig } from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const logicalXorConfig = createBinaryKernelConfig(LogicalXor, supportsFullBroadcast, 'bool');\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LRN } from '@tensorflow/tfjs-core';\nlet wasmLRN;\nfunction setup(backend) {\n  wasmLRN = backend.wasm.cwrap(LRN, null, ['number', 'number', 'number', 'number', 'number', 'number', 'number' // beta\n  ]);\n}\nexport function lrn(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    x\n  } = inputs;\n  const {\n    depthRadius,\n    bias,\n    alpha,\n    beta\n  } = attrs;\n  if (x.dtype !== 'float32') {\n    throw new Error('LRN error: x must have dtype float32');\n  }\n  const out = backend.makeOutput(x.shape, x.dtype);\n  wasmLRN(backend.dataIdMap.get(x.dataId).id, backend.dataIdMap.get(out.dataId).id, /*channels=*/x.shape[3], depthRadius, bias, alpha, beta);\n  return out;\n}\nexport const lrnConfig = {\n  kernelName: LRN,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: lrn\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LRNGrad } from '@tensorflow/tfjs-core';\nlet wasmLRNGrad;\nfunction setup(backend) {\n  wasmLRNGrad = backend.wasm.cwrap(LRNGrad, null, ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number' // beta\n  ]);\n}\nexport function lrnGrad(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    x,\n    y,\n    dy\n  } = inputs;\n  const {\n    depthRadius,\n    bias,\n    alpha,\n    beta\n  } = attrs;\n  if (x.dtype !== 'float32' || y.dtype !== 'float32' || dy.dtype !== 'float32') {\n    throw new Error('LRNGrad error: x, y, and dy must have dtype float32');\n  }\n  const dx = backend.makeOutput(x.shape, x.dtype);\n  wasmLRNGrad(backend.dataIdMap.get(x.dataId).id, backend.dataIdMap.get(y.dataId).id, backend.dataIdMap.get(dy.dataId).id, backend.dataIdMap.get(dx.dataId).id, /*channels=*/dy.shape[3], depthRadius, bias, alpha, beta);\n  return dx;\n}\nexport const lrnGradConfig = {\n  kernelName: LRNGrad,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: lrnGrad\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Max, util } from '@tensorflow/tfjs-core';\nimport { permuteAxesAndTranspose } from './kernel_utils';\nimport { CppDType } from './types';\nlet wasmMax;\nfunction setup(backend) {\n  wasmMax = backend.wasm.cwrap(Max, null /*void*/, ['number', 'number', 'number', 'number' // out_id\n  ]);\n}\nfunction max(args) {\n  const {\n    backend,\n    inputs,\n    attrs\n  } = args;\n  const {\n    reductionIndices: axis,\n    keepDims\n  } = attrs;\n  const {\n    x\n  } = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n  const {\n    transposed,\n    axes,\n    originalAxes,\n    inputWasTransposed\n  } = permuteAxesAndTranspose(x, axis, backend);\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    input = transposed;\n    inputId = transposedId;\n  }\n  const inputRank = input.shape.length;\n  backend_util.assertAxesAreInnerMostDims('max', axes, inputRank);\n  const [outShape, reduceShape] = backend_util.computeOutAndReduceShapes(input.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n  const out = backend.makeOutput(outShape, x.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmMax(inputId, CppDType[x.dtype], reduceSize, outId);\n  }\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n  return out;\n}\nexport const maxConfig = {\n  kernelName: Max,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: max\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Maximum } from '@tensorflow/tfjs-core';\nimport { createBinaryKernelConfig } from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const maximumConfig = createBinaryKernelConfig(Maximum, supportsFullBroadcast);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, MaxPool, util } from '@tensorflow/tfjs-core';\nlet wasmMaxPool;\nfunction setup(backend) {\n  wasmMaxPool = backend.wasm.cwrap(MaxPool, null /* void */, ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number' // outId\n  ]);\n}\nfunction maxPool(args) {\n  const {\n    inputs,\n    attrs,\n    backend\n  } = args;\n  const x = inputs.x;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  // TF API supports int32 input. CPU and WebGL backend also support int32\n  // input. WASM backend doesn't support it because it uses xnnpack which only\n  // supports float32.\n  //\n  // Add the following assert only for the WASM backend instead of at core op\n  // level.\n  //\n  // TODO: add support for int32 input.\n  util.assert(x.dtype === 'float32', () => `Error in MaxPool: only float32 input is supported. Got ${x.dtype}.`);\n  const {\n    filterSize,\n    strides,\n    pad,\n    dimRoundingMode\n  } = attrs;\n  const convInfo = backend_util.computePool2DInfo(x.shape, filterSize, strides, 1 /* dilations */, pad, dimRoundingMode);\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const outputChannels = convInfo.outChannels;\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(`wasm backend does not support dataFormat:'` + `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmMaxPool(xId, x.shape[0], x.shape[1], x.shape[2], filterHeight, filterWidth, padTop, padRight, padBottom, padLeft, dilationHeight, dilationWidth, strideHeight, strideWidth, inputChannels, outputChannels, outId);\n  return out;\n}\nexport const maxPoolConfig = {\n  kernelName: MaxPool,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: maxPool\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, MaxPool3D } from '@tensorflow/tfjs-core';\nlet wasmMaxPool3D;\nfunction setup(backend) {\n  wasmMaxPool3D = backend.wasm.cwrap('MaxPool3D', null, ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number' // padLeft\n  ]);\n}\nexport function maxPool3D(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    x\n  } = inputs;\n  const {\n    filterSize,\n    strides,\n    pad,\n    dimRoundingMode,\n    dataFormat\n  } = attrs;\n  const convInfo = backend_util.computePool3DInfo(x.shape, filterSize, strides, /*dilations=*/1, pad, dimRoundingMode, dataFormat);\n  const out = backend.makeOutput(convInfo.outShape, x.dtype);\n  wasmMaxPool3D(backend.dataIdMap.get(x.dataId).id, backend.dataIdMap.get(out.dataId).id, convInfo.batchSize,\n  // Since Pool3D ops (AvgPool3D and MaxPool3D) support 3D filter only, in\n  // channels should always equal to out channels.\n  /*channelSize=*/\n  convInfo.inChannels, convInfo.inDepth, convInfo.inHeight, convInfo.inWidth, convInfo.outDepth, convInfo.outHeight, convInfo.outWidth, convInfo.strideDepth, convInfo.strideHeight, convInfo.strideWidth, convInfo.dilationDepth, convInfo.dilationHeight, convInfo.dilationWidth, convInfo.effectiveFilterDepth, convInfo.effectiveFilterHeight, convInfo.effectiveFilterWidth, convInfo.padInfo.front, convInfo.padInfo.top, convInfo.padInfo.left);\n  return out;\n}\nexport const maxPool3DConfig = {\n  kernelName: MaxPool3D,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: maxPool3D\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, MaxPool3DGrad } from '@tensorflow/tfjs-core';\nlet wasmMaxPool3DGrad;\nfunction setup(backend) {\n  wasmMaxPool3DGrad = backend.wasm.cwrap('MaxPool3DGrad', null, ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number' // padLeft\n  ]);\n}\nexport function maxPool3DGrad(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    dy,\n    input\n  } = inputs;\n  const {\n    filterSize,\n    strides,\n    pad,\n    dimRoundingMode\n  } = attrs;\n  const convInfo = backend_util.computePool3DInfo(input.shape, filterSize, strides, /*dilations=*/1, pad, dimRoundingMode);\n  const dx = backend.makeOutput(input.shape, input.dtype);\n  wasmMaxPool3DGrad(backend.dataIdMap.get(input.dataId).id, backend.dataIdMap.get(dy.dataId).id, backend.dataIdMap.get(dx.dataId).id, convInfo.batchSize,\n  // Since Pool3D ops (MaxPool3D and MaxPool3D) support 3D filter only, in\n  // channels should always equal to out channels.\n  /*channelSize=*/\n  convInfo.inChannels, convInfo.inDepth, convInfo.inHeight, convInfo.inWidth, convInfo.outDepth, convInfo.outHeight, convInfo.outWidth, convInfo.strideDepth, convInfo.strideHeight, convInfo.strideWidth, convInfo.dilationDepth, convInfo.dilationHeight, convInfo.dilationWidth, convInfo.effectiveFilterDepth, convInfo.effectiveFilterHeight, convInfo.effectiveFilterWidth, convInfo.padInfo.front, convInfo.padInfo.top, convInfo.padInfo.left);\n  return dx;\n}\nexport const maxPool3DGradConfig = {\n  kernelName: MaxPool3DGrad,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: maxPool3DGrad\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, MaxPoolGrad } from '@tensorflow/tfjs-core';\nlet wasmMaxPoolGrad;\nfunction setup(backend) {\n  wasmMaxPoolGrad = backend.wasm.cwrap('MaxPoolGrad', null, ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number' // padLeft\n  ]);\n}\nexport function maxPoolGrad(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    dy,\n    input\n  } = inputs;\n  const {\n    filterSize,\n    strides,\n    pad,\n    dimRoundingMode\n  } = attrs;\n  const convInfo = backend_util.computePool2DInfo(input.shape, filterSize, strides, /*dilations=*/1, pad, dimRoundingMode);\n  const dx = backend.makeOutput(input.shape, input.dtype);\n  wasmMaxPoolGrad(backend.dataIdMap.get(input.dataId).id, backend.dataIdMap.get(dy.dataId).id, backend.dataIdMap.get(dx.dataId).id, convInfo.batchSize,\n  // Since Pool ops (MaxPool and MaxPool) support 2D filter only, in\n  // channels should always equal to out channels.\n  /*channelSize=*/\n  convInfo.inChannels, convInfo.inHeight, convInfo.inWidth, convInfo.outHeight, convInfo.outWidth, convInfo.strideHeight, convInfo.strideWidth, convInfo.dilationHeight, convInfo.dilationWidth, convInfo.effectiveFilterHeight, convInfo.effectiveFilterWidth, convInfo.padInfo.top, convInfo.padInfo.left);\n  return dx;\n}\nexport const maxPoolGradConfig = {\n  kernelName: MaxPoolGrad,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: maxPoolGrad\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, MaxPoolWithArgmax, util } from '@tensorflow/tfjs-core';\nimport { CppDType } from './types';\nlet wasmMaxPoolWithArgmax;\nfunction setup(backend) {\n  wasmMaxPoolWithArgmax = backend.wasm.cwrap('MaxPoolWithArgmax', null, ['number', 'number', 'number', 'number', 'boolean', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number' // padLeft\n  ]);\n}\nexport function maxPoolWithArgmax(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    x\n  } = inputs;\n  const {\n    filterSize,\n    strides,\n    pad,\n    includeBatchInIndex\n  } = attrs;\n  util.assert(x.shape.length === 4, () => `Error in maxPool: input must be rank 4 but got rank ${x.shape.length}.`);\n  const dilations = [1, 1];\n  util.assert(backend_util.eitherStridesOrDilationsAreOne(strides, dilations), () => 'Error in maxPool: Either strides or dilations must be 1. ' + `Got strides ${strides} and dilations '${dilations}'`);\n  const convInfo = backend_util.computePool2DInfo(x.shape, filterSize, strides, [1, 1], pad);\n  const pooled = backend.makeOutput(convInfo.outShape, x.dtype);\n  const indexes = backend.makeOutput(convInfo.outShape, 'int32');\n  wasmMaxPoolWithArgmax(backend.dataIdMap.get(x.dataId).id, backend.dataIdMap.get(pooled.dataId).id, backend.dataIdMap.get(indexes.dataId).id, CppDType[x.dtype], includeBatchInIndex, convInfo.batchSize, convInfo.inChannels, convInfo.inHeight, convInfo.inWidth, convInfo.outHeight, convInfo.outWidth, convInfo.strideHeight, convInfo.strideWidth, convInfo.dilationHeight, convInfo.dilationWidth, convInfo.effectiveFilterHeight, convInfo.effectiveFilterWidth, convInfo.padInfo.top, convInfo.padInfo.left);\n  return [pooled, indexes];\n}\nexport const maxPoolWithArgmaxConfig = {\n  kernelName: MaxPoolWithArgmax,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: maxPoolWithArgmax\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Mean, util } from '@tensorflow/tfjs-core';\nimport { cast } from './Cast';\nimport { permuteAxesAndTranspose } from './kernel_utils';\nlet wasmMean;\nfunction setup(backend) {\n  wasmMean = backend.wasm.cwrap(Mean, null /*void*/, ['number, number, number']);\n}\nexport function mean(args) {\n  const {\n    backend,\n    inputs,\n    attrs\n  } = args;\n  const {\n    axis,\n    keepDims\n  } = attrs;\n  const {\n    x\n  } = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n  const {\n    transposed,\n    axes,\n    originalAxes,\n    inputWasTransposed\n  } = permuteAxesAndTranspose(x, axis, backend);\n  let reductionAxes = axes;\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n      reductionAxes = backend_util.getInnerMostAxes(reductionAxes.length, input.shape.length);\n    }\n  }\n  backend_util.assertAxesAreInnerMostDims('mean', reductionAxes, input.shape.length);\n  const [outShape, reduceShape] = backend_util.computeOutAndReduceShapes(input.shape, reductionAxes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n  let castedInput = input;\n  if (input.dtype !== 'float32') {\n    castedInput = cast({\n      backend,\n      inputs: {\n        x: input\n      },\n      attrs: {\n        dtype: 'float32'\n      }\n    });\n    inputId = backend.dataIdMap.get(castedInput.dataId).id;\n  }\n  const out = backend.makeOutput(outShape, 'float32');\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmMean(inputId, reduceSize, outId);\n  }\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n  if (input.dtype !== 'float32') {\n    backend.disposeData(castedInput.dataId);\n  }\n  return out;\n}\nexport const meanConfig = {\n  kernelName: Mean,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: mean\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Min, util } from '@tensorflow/tfjs-core';\nimport { permuteAxesAndTranspose } from './kernel_utils';\nimport { CppDType } from './types';\nlet wasmMin;\nfunction setup(backend) {\n  wasmMin = backend.wasm.cwrap(Min, null /*void*/, ['number', 'number', 'number', 'number' // out_id\n  ]);\n}\nfunction min(args) {\n  const {\n    backend,\n    inputs,\n    attrs\n  } = args;\n  const {\n    axis,\n    keepDims\n  } = attrs;\n  const {\n    x\n  } = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n  const {\n    transposed,\n    axes,\n    originalAxes,\n    inputWasTransposed\n  } = permuteAxesAndTranspose(x, axis, backend);\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n    }\n  }\n  const inputRank = input.shape.length;\n  backend_util.assertAxesAreInnerMostDims('min', axes, inputRank);\n  const [outShape, reduceShape] = backend_util.computeOutAndReduceShapes(input.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n  const out = backend.makeOutput(outShape, input.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmMin(inputId, CppDType[x.dtype], reduceSize, outId);\n  }\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n  return out;\n}\nexport const minConfig = {\n  kernelName: Min,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: min\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Minimum } from '@tensorflow/tfjs-core';\nimport { createBinaryKernelConfig } from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const minimumConfig = createBinaryKernelConfig(Minimum, supportsFullBroadcast);\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { MirrorPad } from '@tensorflow/tfjs-core';\nimport { CppDType } from './types';\n// Must match enum in MirrorPad.cc\nvar MirrorPaddingMode;\n(function (MirrorPaddingMode) {\n  MirrorPaddingMode[MirrorPaddingMode[\"reflect\"] = 0] = \"reflect\";\n  MirrorPaddingMode[MirrorPaddingMode[\"symmetric\"] = 1] = \"symmetric\";\n})(MirrorPaddingMode || (MirrorPaddingMode = {}));\nlet wasmMirrorPad;\nfunction setup(backend) {\n  wasmMirrorPad = backend.wasm.cwrap(MirrorPad, null /* void */, ['number', 'array', 'number', 'number', 'array', 'array', 'number', 'number' // outId\n  ]);\n}\nfunction mirrorPad(args) {\n  const {\n    inputs: {\n      x\n    },\n    backend,\n    attrs: {\n      paddings,\n      mode\n    }\n  } = args;\n  const outShape = paddings.map((p, i) => p[0] /* beforePad */ + x.shape[i] + p[1] /* afterPad */);\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(outShape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n  const prePaddingsFlat = paddings.map(padTuple => padTuple[0]);\n  const postPaddingsFlat = paddings.map(padTuple => padTuple[1]);\n  const prePaddingsBytes = new Uint8Array(new Int32Array(prePaddingsFlat).buffer);\n  const postPaddingsBytes = new Uint8Array(new Int32Array(postPaddingsFlat).buffer);\n  wasmMirrorPad(xId, xShapeBytes, x.shape.length, CppDType[x.dtype], prePaddingsBytes, postPaddingsBytes, MirrorPaddingMode[mode], outId);\n  return out;\n}\nexport const mirrorPadConfig = {\n  kernelName: MirrorPad,\n  backendName: 'wasm',\n  kernelFunc: mirrorPad,\n  setupFunc: setup\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Multinomial } from '@tensorflow/tfjs-core';\nimport { softmax } from './Softmax';\nlet wasmMultinomial;\nfunction setup(backend) {\n  wasmMultinomial = backend.wasm.cwrap(Multinomial, null, ['number', 'number', 'number', 'number', 'number', 'number' // outId\n  ]);\n}\nexport function multinomial(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    logits\n  } = inputs;\n  const {\n    numSamples,\n    seed,\n    normalized\n  } = attrs;\n  if (logits.dtype !== 'float32') {\n    throw new Error(`Tensor logits must have dtype float32, got ${logits.dtype}`);\n  }\n  const probabilities = normalized ? logits : softmax({\n    inputs: {\n      logits\n    },\n    backend,\n    attrs: {\n      dim: logits.shape.length - 1\n    }\n  });\n  const [batchSize, numEvents] = probabilities.shape;\n  const out = backend.makeOutput([batchSize, numSamples], 'int32');\n  wasmMultinomial(backend.dataIdMap.get(probabilities.dataId).id, batchSize, numEvents, numSamples, seed, backend.dataIdMap.get(out.dataId).id);\n  if (!normalized) {\n    backend.disposeData(probabilities.dataId);\n  }\n  return out;\n}\nexport const multinomialConfig = {\n  kernelName: Multinomial,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: multinomial\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Softmax, util } from '@tensorflow/tfjs-core';\nlet wasmFunc;\nfunction setup(backend) {\n  wasmFunc = backend.wasm.cwrap(Softmax, null /* void */, ['number', 'number', 'number', 'number' // batch\n  ]);\n}\nexport function softmax(args) {\n  const {\n    backend,\n    inputs: {\n      logits\n    },\n    attrs: {\n      dim\n    }\n  } = args;\n  const xId = backend.dataIdMap.get(logits.dataId).id;\n  const out = backend.makeOutput(logits.shape, logits.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const channels = logits.shape[dim];\n  const batch = util.sizeFromShape(logits.shape) / channels;\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(out.shape) === 0) {\n    return out;\n  }\n  wasmFunc(xId, outId, channels, batch);\n  return out;\n}\nexport const softmaxConfig = {\n  kernelName: Softmax,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: softmax\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Mod } from '@tensorflow/tfjs-core';\nimport { createBinaryKernelConfig } from './binary_kernel';\nexport const modConfig = createBinaryKernelConfig(Mod, /*supportsFullBroadcast=*/true);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Multiply } from '@tensorflow/tfjs-core';\nimport { createBinaryKernelConfig } from './binary_kernel';\nconst supportsFullBroadcast = true;\nexport const multiplyConfig = createBinaryKernelConfig(Multiply, supportsFullBroadcast);\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Neg } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const negConfig = createUnaryKernelConfig(Neg);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { NonMaxSuppressionV3 } from '@tensorflow/tfjs-core';\nimport { parseResultStruct } from './NonMaxSuppression_util';\nlet wasmFunc;\nfunction setup(backend) {\n  wasmFunc = backend.wasm.cwrap(NonMaxSuppressionV3, 'number',\n  // Result*\n  ['number', 'number', 'number', 'number', 'number' // scoreThreshold\n  ]);\n}\nfunction kernelFunc(args) {\n  const {\n    backend,\n    inputs,\n    attrs\n  } = args;\n  const {\n    iouThreshold,\n    maxOutputSize,\n    scoreThreshold\n  } = attrs;\n  const {\n    boxes,\n    scores\n  } = inputs;\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const scoresId = backend.dataIdMap.get(scores.dataId).id;\n  const resOffset = wasmFunc(boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold);\n  const {\n    pSelectedIndices,\n    selectedSize,\n    pSelectedScores,\n    pValidOutputs\n  } = parseResultStruct(backend, resOffset);\n  // Since we are not using scores for V3, we have to delete it from the heap.\n  backend.wasm._free(pSelectedScores);\n  backend.wasm._free(pValidOutputs);\n  const selectedIndicesTensor = backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\n  return selectedIndicesTensor;\n}\nexport const nonMaxSuppressionV3Config = {\n  kernelName: NonMaxSuppressionV3,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: kernelFunc\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * Parse the result of the c++ method, which has the shape equivalent to\n * `Result`.\n */\nexport function parseResultStruct(backend, resOffset) {\n  const result = new Int32Array(backend.wasm.HEAPU8.buffer, resOffset, 4);\n  const pSelectedIndices = result[0];\n  const selectedSize = result[1];\n  const pSelectedScores = result[2];\n  const pValidOutputs = result[3];\n  // Since the result was allocated on the heap, we have to delete it.\n  backend.wasm._free(resOffset);\n  return {\n    pSelectedIndices,\n    selectedSize,\n    pSelectedScores,\n    pValidOutputs\n  };\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { NonMaxSuppressionV4 } from '@tensorflow/tfjs-core';\nimport { parseResultStruct } from './NonMaxSuppression_util';\nlet wasmFunc;\nfunction setup(backend) {\n  wasmFunc = backend.wasm.cwrap(NonMaxSuppressionV4, 'number',\n  // Result*\n  ['number', 'number', 'number', 'number', 'number', 'bool' // padToMaxOutputSize\n  ]);\n}\nfunction nonMaxSuppressionV4(args) {\n  const {\n    backend,\n    inputs,\n    attrs\n  } = args;\n  const {\n    iouThreshold,\n    maxOutputSize,\n    scoreThreshold,\n    padToMaxOutputSize\n  } = attrs;\n  const {\n    boxes,\n    scores\n  } = inputs;\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const scoresId = backend.dataIdMap.get(scores.dataId).id;\n  const resOffset = wasmFunc(boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold, padToMaxOutputSize);\n  const {\n    pSelectedIndices,\n    selectedSize,\n    pSelectedScores,\n    pValidOutputs\n  } = parseResultStruct(backend, resOffset);\n  // Since we are not using scores for V4, we have to delete it from the heap.\n  backend.wasm._free(pSelectedScores);\n  const selectedIndicesTensor = backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\n  const validOutputsTensor = backend.makeOutput([], 'int32', pValidOutputs);\n  return [selectedIndicesTensor, validOutputsTensor];\n}\nexport const nonMaxSuppressionV4Config = {\n  kernelName: NonMaxSuppressionV4,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: nonMaxSuppressionV4\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { NonMaxSuppressionV5 } from '@tensorflow/tfjs-core';\nimport { parseResultStruct } from './NonMaxSuppression_util';\nlet wasmFunc;\nfunction setup(backend) {\n  wasmFunc = backend.wasm.cwrap(NonMaxSuppressionV5, 'number',\n  // Result*\n  ['number', 'number', 'number', 'number', 'number', 'number' // softNmsSigma\n  ]);\n}\nfunction kernelFunc(args) {\n  const {\n    backend,\n    inputs,\n    attrs\n  } = args;\n  const {\n    iouThreshold,\n    maxOutputSize,\n    scoreThreshold,\n    softNmsSigma\n  } = attrs;\n  const {\n    boxes,\n    scores\n  } = inputs;\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const scoresId = backend.dataIdMap.get(scores.dataId).id;\n  const resOffset = wasmFunc(boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma);\n  const {\n    pSelectedIndices,\n    selectedSize,\n    pSelectedScores,\n    pValidOutputs\n  } = parseResultStruct(backend, resOffset);\n  // Since we are not using validOutputs for V5, we have to delete it from the\n  // heap.\n  backend.wasm._free(pValidOutputs);\n  const selectedIndicesTensor = backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\n  const selectedScoresTensor = backend.makeOutput([selectedSize], 'float32', pSelectedScores);\n  return [selectedIndicesTensor, selectedScoresTensor];\n}\nexport const nonMaxSuppressionV5Config = {\n  kernelName: NonMaxSuppressionV5,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: kernelFunc\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { NotEqual } from '@tensorflow/tfjs-core';\nimport { createBinaryKernelConfig } from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const notEqualConfig = createBinaryKernelConfig(NotEqual, supportsFullBroadcast, 'bool');\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { OneHot } from '@tensorflow/tfjs-core';\nlet wasmOneHot;\nfunction setup(backend) {\n  wasmOneHot = backend.wasm.cwrap(OneHot, null /* void */, ['number', 'number', 'number', 'number', 'number' // out_id\n  ]);\n}\nfunction oneHot(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    indices\n  } = inputs;\n  const {\n    dtype,\n    depth,\n    onValue,\n    offValue\n  } = attrs;\n  const out = backend.makeOutput([...indices.shape, depth], dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const indicesData = backend.dataIdMap.get(indices.dataId);\n  const indicesId = indicesData.id;\n  wasmOneHot(indicesId, depth, onValue, offValue, outId);\n  return out;\n}\nexport const oneHotConfig = {\n  kernelName: OneHot,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: oneHot\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { OnesLike } from '@tensorflow/tfjs-core';\nfunction onesLike(args) {\n  const {\n    inputs: {\n      x\n    },\n    backend\n  } = args;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.fill(1);\n  return out;\n}\nexport const onesLikeConfig = {\n  kernelName: OnesLike,\n  backendName: 'wasm',\n  kernelFunc: onesLike\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Pack, util } from '@tensorflow/tfjs-core';\nimport { concat } from './Concat';\nimport { expandDims } from './ExpandDims';\nexport function pack(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    axis\n  } = attrs;\n  if (inputs.length === 1) {\n    return expandDims({\n      inputs: {\n        input: inputs[0]\n      },\n      backend,\n      attrs: {\n        dim: axis\n      }\n    });\n  }\n  const shape = inputs[0].shape;\n  const dtype = inputs[0].dtype;\n  inputs.forEach(t => {\n    util.assertShapesMatch(shape, t.shape, 'All tensors passed to stack must have matching shapes');\n    util.assert(dtype === t.dtype, () => 'All tensors passed to stack must have matching dtypes');\n  });\n  const intermediateTensorInfos = [];\n  const expandedTensors = inputs.map(t => {\n    const expandedT = expandDims({\n      inputs: {\n        input: t\n      },\n      backend,\n      attrs: {\n        dim: axis\n      }\n    });\n    intermediateTensorInfos.push(expandedT);\n    return expandedT;\n  });\n  const result = concat({\n    inputs: expandedTensors,\n    backend,\n    attrs: {\n      axis\n    }\n  });\n  intermediateTensorInfos.forEach(t => backend.disposeData(t.dataId));\n  return result;\n}\nexport const packConfig = {\n  kernelName: Pack,\n  backendName: 'wasm',\n  kernelFunc: pack\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { PadV2, util } from '@tensorflow/tfjs-core';\nimport { fill } from './Fill';\nimport { CppDType } from './types';\nlet wasmPadV2;\nfunction setup(backend) {\n  wasmPadV2 = backend.wasm.cwrap(PadV2, null /* void */, ['number', 'array', 'number', 'number', 'array', 'array', 'number', 'number' // outId\n  ]);\n}\nfunction pad(args) {\n  const {\n    inputs: {\n      x\n    },\n    backend,\n    attrs: {\n      paddings,\n      constantValue\n    }\n  } = args;\n  const outShape = paddings.map((p, i) => p[0] /* beforePad */ + x.shape[i] + p[1] /* afterPad */);\n  if (util.sizeFromShape(x.shape) === 0) {\n    // Short-circuit the computation, since x doesn't have value, only\n    // the shape is used to compute output shape to pad.\n    return fill({\n      backend,\n      attrs: {\n        shape: outShape,\n        value: constantValue,\n        dtype: x.dtype\n      }\n    });\n  }\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(outShape, x.dtype);\n  const outTensorData = backend.dataIdMap.get(out.dataId);\n  const outId = outTensorData.id;\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n  const prePaddingsFlat = paddings.map(padTuple => padTuple[0]);\n  const postPaddingsFlat = paddings.map(padTuple => padTuple[1]);\n  const prePaddingsBytes = new Uint8Array(new Int32Array(prePaddingsFlat).buffer);\n  const postPaddingsBytes = new Uint8Array(new Int32Array(postPaddingsFlat).buffer);\n  wasmPadV2(xId, xShapeBytes, x.shape.length, CppDType[x.dtype], prePaddingsBytes, postPaddingsBytes, constantValue, outId);\n  return out;\n}\nexport const padV2Config = {\n  kernelName: PadV2,\n  backendName: 'wasm',\n  kernelFunc: pad,\n  setupFunc: setup\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Pow } from '@tensorflow/tfjs-core';\nimport { createBinaryKernelConfig } from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const powConfig = createBinaryKernelConfig(Pow, supportsFullBroadcast);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Prelu } from '@tensorflow/tfjs-core';\nimport { cast } from './Cast';\nlet wasmPrelu;\nfunction setup(backend) {\n  wasmPrelu = backend.wasm.cwrap(Prelu, null /* void */, ['number', 'number', 'number' // out_id\n  ]);\n}\nfunction prelu(args) {\n  const {\n    inputs,\n    backend\n  } = args;\n  const {\n    x,\n    alpha\n  } = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const weightsId = backend.dataIdMap.get(alpha.dataId).id;\n  let inputId = xId;\n  const input = x;\n  let castedInput = input;\n  if (input.dtype !== 'float32') {\n    castedInput = cast({\n      backend,\n      inputs: {\n        x\n      },\n      attrs: {\n        dtype: 'float32'\n      }\n    });\n    inputId = backend.dataIdMap.get(castedInput.dataId).id;\n  }\n  const out = backend.makeOutput(x.shape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmPrelu(inputId, weightsId, outId);\n  if (input.dtype !== 'float32') {\n    backend.disposeData(castedInput.dataId);\n  }\n  return out;\n}\nexport const preluConfig = {\n  kernelName: Prelu,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: prelu\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Prod, util } from '@tensorflow/tfjs-core';\nimport { permuteAxesAndTranspose } from './kernel_utils';\nimport { CppDType } from './types';\nlet wasmProd;\nfunction setup(backend) {\n  wasmProd = backend.wasm.cwrap(Prod, null /*void*/, ['number', 'number', 'number', 'number']);\n}\nfunction prod(args) {\n  const {\n    backend,\n    inputs,\n    attrs\n  } = args;\n  const {\n    axis,\n    keepDims\n  } = attrs;\n  const {\n    x\n  } = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n  const {\n    transposed,\n    axes,\n    originalAxes,\n    inputWasTransposed\n  } = permuteAxesAndTranspose(x, axis, backend);\n  let reductionAxes = axes;\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n      reductionAxes = backend_util.getInnerMostAxes(reductionAxes.length, input.shape.length);\n    }\n  }\n  backend_util.assertAxesAreInnerMostDims('prod', reductionAxes, input.shape.length);\n  const [outShape, reduceShape] = backend_util.computeOutAndReduceShapes(input.shape, reductionAxes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n  const out = backend.makeOutput(outShape, input.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmProd(inputId, reduceSize, CppDType[out.dtype], outId);\n  }\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n  return out;\n}\nexport const prodConfig = {\n  kernelName: Prod,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: prod\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Range } from '@tensorflow/tfjs-core';\nimport { rangeImplCPU } from '../kernel_utils/shared';\nexport const range = args => {\n  const {\n    backend,\n    attrs\n  } = args;\n  const {\n    start,\n    stop,\n    step,\n    dtype\n  } = attrs;\n  const values = rangeImplCPU(start, stop, step, dtype);\n  const out = backend.makeOutput([values.length], dtype);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.set(values);\n  return out;\n};\nexport const rangeConfig = {\n  kernelName: Range,\n  backendName: 'wasm',\n  kernelFunc: range\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { RealDiv } from '@tensorflow/tfjs-core';\nimport { createBinaryKernelConfig } from './binary_kernel';\nconst supportsFullBroadcast = true;\nexport const realDivConfig = createBinaryKernelConfig(RealDiv, supportsFullBroadcast);\n", "/**\n * @license\n * Copyright 2022 The TensorFlow Authors. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Reciprocal } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const reciprocalConfig = createUnaryKernelConfig(Reciprocal);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Relu } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const reluConfig = createUnaryKernelConfig(Relu);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Relu6 } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const relu6Config = createUnaryKernelConfig(Relu6);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ResizeBilinear, util } from '@tensorflow/tfjs-core';\nimport { cast } from './Cast';\nlet wasmResizeBilinear;\nfunction setup(backend) {\n  wasmResizeBilinear = backend.wasm.cwrap(ResizeBilinear, null /*void*/, ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number' // outId\n  ]);\n}\nfunction resizeBilinear(args) {\n  const {\n    backend,\n    inputs,\n    attrs\n  } = args;\n  const {\n    images\n  } = inputs;\n  const {\n    alignCorners,\n    halfPixelCenters,\n    size\n  } = attrs;\n  const [newHeight, newWidth] = size;\n  const [batch, oldHeight, oldWidth, numChannels] = images.shape;\n  const outShape = [batch, newHeight, newWidth, numChannels];\n  let xData = backend.dataIdMap.get(images.dataId);\n  let castedData;\n  if (xData.dtype !== 'float32') {\n    castedData = cast({\n      backend,\n      inputs: {\n        x: images\n      },\n      attrs: {\n        dtype: 'float32'\n      }\n    });\n    xData = backend.dataIdMap.get(castedData.dataId);\n  }\n  const xId = xData.id;\n  const out = backend.makeOutput(outShape, 'float32');\n  if (util.sizeFromShape(images.shape) === 0) {\n    return out;\n  }\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmResizeBilinear(xId, batch, oldHeight, oldWidth, numChannels, newHeight, newWidth, alignCorners ? 1 : 0, halfPixelCenters ? 1 : 0, outId);\n  if (castedData != null) {\n    backend.disposeData(castedData.dataId);\n  }\n  return out;\n}\nexport const resizeBilinearConfig = {\n  kernelName: ResizeBilinear,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: resizeBilinear\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ResizeBilinearGrad } from '@tensorflow/tfjs-core';\nimport { cast } from './Cast';\nlet wasmResizeBilinearGrad;\nfunction setup(backend) {\n  wasmResizeBilinearGrad = backend.wasm.cwrap(ResizeBilinearGrad, null /*void*/, ['number', 'number', 'number', 'array', 'array', 'boolean' // alignCorners\n  ]);\n}\nfunction resizeBilinearGrad(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    images,\n    dy\n  } = inputs;\n  const {\n    alignCorners\n  } = attrs;\n  const dx = backend.makeOutput(images.shape, 'float32');\n  let xData = backend.dataIdMap.get(images.dataId);\n  let castedData;\n  if (xData.dtype !== 'float32') {\n    castedData = cast({\n      backend,\n      inputs: {\n        x: images\n      },\n      attrs: {\n        dtype: 'float32'\n      }\n    });\n    xData = backend.dataIdMap.get(castedData.dataId);\n  }\n  wasmResizeBilinearGrad(backend.dataIdMap.get(images.dataId).id, backend.dataIdMap.get(dy.dataId).id, backend.dataIdMap.get(dx.dataId).id, new Uint8Array(new Int32Array(images.shape).buffer), new Uint8Array(new Int32Array(dy.shape).buffer), alignCorners);\n  if (castedData != null) {\n    backend.disposeData(castedData.dataId);\n  }\n  return dx;\n}\nexport const resizeBilinearGradConfig = {\n  kernelName: ResizeBilinearGrad,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: resizeBilinearGrad\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ResizeNearestNeighbor, util } from '@tensorflow/tfjs-core';\nimport { cast } from './Cast';\nlet wasmResizeNearestNeighbor;\nfunction setup(backend) {\n  wasmResizeNearestNeighbor = backend.wasm.cwrap(ResizeNearestNeighbor, null /*void*/, ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number' // outId\n  ]);\n}\nfunction resizeNearestNeighbor(args) {\n  const {\n    backend,\n    inputs,\n    attrs\n  } = args;\n  const {\n    images\n  } = inputs;\n  const {\n    alignCorners,\n    halfPixelCenters,\n    size\n  } = attrs;\n  const [newHeight, newWidth] = size;\n  const [batch, oldHeight, oldWidth, numChannels] = images.shape;\n  const outShape = [batch, newHeight, newWidth, numChannels];\n  const out = backend.makeOutput(outShape, 'float32');\n  if (util.sizeFromShape(images.shape) === 0) {\n    return out;\n  }\n  let xData = backend.dataIdMap.get(images.dataId);\n  let castedData;\n  if (xData.dtype !== 'float32') {\n    castedData = cast({\n      backend,\n      inputs: {\n        x: images\n      },\n      attrs: {\n        dtype: 'float32'\n      }\n    });\n    xData = backend.dataIdMap.get(castedData.dataId);\n  }\n  const xId = xData.id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmResizeNearestNeighbor(xId, batch, oldHeight, oldWidth, numChannels, newHeight, newWidth, alignCorners ? 1 : 0, halfPixelCenters ? 1 : 0, outId);\n  if (castedData != null) {\n    backend.disposeData(castedData.dataId);\n  }\n  return out;\n}\nexport const resizeNearestNeighborConfig = {\n  kernelName: ResizeNearestNeighbor,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: resizeNearestNeighbor\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ResizeNearestNeighborGrad } from '@tensorflow/tfjs-core';\nimport { cast } from './Cast';\nlet wasmResizeNearestNeighborGrad;\nfunction setup(backend) {\n  wasmResizeNearestNeighborGrad = backend.wasm.cwrap(ResizeNearestNeighborGrad, null /*void*/, ['number', 'number', 'number', 'array', 'array', 'boolean' // alignCorners\n  ]);\n}\nfunction resizeNearestNeighborGrad(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    images,\n    dy\n  } = inputs;\n  const {\n    alignCorners\n  } = attrs;\n  const dx = backend.makeOutput(images.shape, 'float32');\n  let xData = backend.dataIdMap.get(images.dataId);\n  let castedData;\n  if (xData.dtype !== 'float32') {\n    castedData = cast({\n      backend,\n      inputs: {\n        x: images\n      },\n      attrs: {\n        dtype: 'float32'\n      }\n    });\n    xData = backend.dataIdMap.get(castedData.dataId);\n  }\n  wasmResizeNearestNeighborGrad(backend.dataIdMap.get(images.dataId).id, backend.dataIdMap.get(dy.dataId).id, backend.dataIdMap.get(dx.dataId).id, new Uint8Array(new Int32Array(images.shape).buffer), new Uint8Array(new Int32Array(dy.shape).buffer), alignCorners);\n  if (castedData != null) {\n    backend.disposeData(castedData.dataId);\n  }\n  return dx;\n}\nexport const resizeNearestNeighborGradConfig = {\n  kernelName: ResizeNearestNeighborGrad,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: resizeNearestNeighborGrad\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Reverse, util } from '@tensorflow/tfjs-core';\nimport { identity } from './Identity';\nimport { reshape } from './Reshape';\nlet wasmReverse;\nfunction setup(backend) {\n  wasmReverse = backend.wasm.cwrap(Reverse, null, ['number', 'array', 'number', 'array', 'number', 'number' // out_id\n  ]);\n}\nexport function reverse(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    x\n  } = inputs;\n  const {\n    dims\n  } = attrs;\n  const axes = util.parseAxisParam(dims, x.shape);\n  if (x.shape.length === 0) {\n    return identity({\n      inputs: {\n        x\n      },\n      backend\n    });\n  }\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const axesBytes = new Uint8Array(new Int32Array(axes).buffer);\n  const outShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n  wasmReverse(xId, axesBytes, axes.length, outShapeBytes, x.shape.length, outId);\n  const reshaped = reshape({\n    inputs: {\n      x: out\n    },\n    attrs: {\n      shape: x.shape\n    },\n    backend\n  });\n  backend.disposeData(out.dataId);\n  return reshaped;\n}\nexport const reverseConfig = {\n  kernelName: Reverse,\n  backendName: 'wasm',\n  kernelFunc: reverse,\n  setupFunc: setup\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { RotateWithOffset } from '@tensorflow/tfjs-core';\nimport { backend_util } from '@tensorflow/tfjs-core';\nlet wasmRotate;\nfunction setup(backend) {\n  wasmRotate = backend.wasm.cwrap(RotateWithOffset, null /* void */, ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'array', 'number', 'number' // outId\n  ]);\n}\nexport function rotateWithOffset(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    image\n  } = inputs;\n  const {\n    radians,\n    fillValue,\n    center\n  } = attrs;\n  const out = backend.makeOutput(image.shape, image.dtype);\n  const imageId = backend.dataIdMap.get(image.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n  const [centerX, centerY] = backend_util.getImageCenter(center, imageHeight, imageWidth);\n  const fillIsBlack = fillValue === 0;\n  const fullOpacityValue = 255;\n  const fillValues = typeof fillValue === 'number' ? [fillValue, fillValue, fillValue, fillIsBlack ? 0 : fullOpacityValue] : [...fillValue, fullOpacityValue];\n  const fillBytes = new Uint8Array(new Int32Array(fillValues).buffer);\n  wasmRotate(imageId, batch, imageHeight, imageWidth, numChannels, radians, centerX, centerY, fillBytes, fillValues.length, outId);\n  return out;\n}\nexport const rotateWithOffsetConfig = {\n  kernelName: RotateWithOffset,\n  backendName: 'wasm',\n  kernelFunc: rotateWithOffset,\n  setupFunc: setup\n};\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Round } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const roundConfig = createUnaryKernelConfig(Round);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Rsqrt } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const rsqrtConfig = createUnaryKernelConfig(Rsqrt);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { scatter_util, ScatterNd, util } from '@tensorflow/tfjs-core';\nimport { CppDType } from './types';\nlet wasmScatterNd;\nfunction setup(backend) {\n  wasmScatterNd = backend.wasm.cwrap(ScatterNd, null /*void*/, ['number', 'number', 'number', 'number', 'number', 'number', 'array', 'number', 'number' // outId\n  ]);\n}\nfunction scatterNd(args) {\n  const {\n    backend,\n    inputs,\n    attrs\n  } = args;\n  const {\n    indices,\n    updates\n  } = inputs;\n  const {\n    shape\n  } = attrs;\n  const out = backend.makeOutput(shape, updates.dtype);\n  if (util.sizeFromShape(shape) === 0) {\n    return out;\n  }\n  const {\n    sliceRank,\n    numUpdates,\n    sliceSize,\n    strides,\n    outputSize\n  } = scatter_util.calculateShapes(updates, indices, shape);\n  const indicesData = backend.dataIdMap.get(indices.dataId);\n  const indicesId = indicesData.id;\n  const updatesData = backend.dataIdMap.get(updates.dataId);\n  const updatesId = updatesData.id;\n  const stridesBytes = new Uint8Array(new Int32Array(strides).buffer);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmScatterNd(indicesId, updatesId, CppDType[updates.dtype], sliceRank, numUpdates, sliceSize, stridesBytes, outputSize, outId);\n  return out;\n}\nexport const scatterNdConfig = {\n  kernelName: ScatterNd,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: scatterNd\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { SearchSorted } from '@tensorflow/tfjs-core';\nimport { CppDType } from './types';\nlet wasmSearchSorted;\nfunction setup(backend) {\n  wasmSearchSorted = backend.wasm.cwrap(SearchSorted, null /* void */, ['number', 'number', 'number', 'number', 'number', 'number', 'bool', 'number' // outId\n  ]);\n}\nfunction searchSorted(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    sortedSequence,\n    values\n  } = inputs;\n  const {\n    side\n  } = attrs;\n  if (sortedSequence.dtype !== values.dtype) {\n    throw new Error(`SearchSorted error: sorted_sequence must have the same dtype as values. Got ${sortedSequence.dtype} and ${values.dtype}`);\n  }\n  const out = backend.makeOutput(values.shape, 'int32');\n  function tensorId(x) {\n    return backend.dataIdMap.get(x.dataId).id;\n  }\n  wasmSearchSorted(tensorId(sortedSequence), tensorId(values), /*batchSize=*/sortedSequence.shape[0], /*sequenceSize=*/sortedSequence.shape[1], /*valuesSize=*/values.shape[1], /*dtype=*/CppDType[sortedSequence.dtype], /*isSideLeft=*/side === 'left', tensorId(out));\n  return out;\n}\nexport const searchSortedConfig = {\n  kernelName: SearchSorted,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: searchSorted\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Select, util } from '@tensorflow/tfjs-core';\nlet wasmSelect;\nfunction setup(backend) {\n  wasmSelect = backend.wasm.cwrap('SelectV2', null, ['number', 'number', 'number', 'number', 'number' // outId\n  ]);\n}\nfunction select(args) {\n  const {\n    inputs,\n    backend\n  } = args;\n  const {\n    condition,\n    t,\n    e\n  } = inputs;\n  const conditionId = backend.dataIdMap.get(condition.dataId).id;\n  const tId = backend.dataIdMap.get(t.dataId).id;\n  const eId = backend.dataIdMap.get(e.dataId).id;\n  const out = backend.makeOutput(t.shape, t.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const cRank = condition.shape.length;\n  const tRank = t.shape.length;\n  const offset = cRank === 0 || cRank > 1 || tRank === 1 ? 1 : util.sizeFromShape(t.shape.slice(1));\n  wasmSelect(conditionId, tId, eId, offset, outId);\n  return out;\n}\nexport const selectConfig = {\n  kernelName: Select,\n  backendName: 'wasm',\n  kernelFunc: select,\n  setupFunc: setup\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Selu } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const seluConfig = createUnaryKernelConfig(Selu);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sigmoid, util } from '@tensorflow/tfjs-core';\nlet wasmFunc;\nfunction setup(backend) {\n  wasmFunc = backend.wasm.cwrap(Sigmoid, null /* void */, ['number', 'number']);\n}\nfunction sigmoid(args) {\n  const {\n    backend,\n    inputs: {\n      x\n    }\n  } = args;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(out.shape) === 0) {\n    return out;\n  }\n  wasmFunc(xId, outId);\n  return out;\n}\nexport const sigmoidConfig = {\n  kernelName: 'Sigmoid',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sigmoid\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sign } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const signConfig = createUnaryKernelConfig(Sign);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sin } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const sinConfig = createUnaryKernelConfig(Sin);\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sinh } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const sinhConfig = createUnaryKernelConfig(Sinh);\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Softplus } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const softplusConfig = createUnaryKernelConfig(Softplus);\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, SpaceToBatchND, util } from '@tensorflow/tfjs-core';\nimport { padV2Config } from './PadV2';\nimport { reshape } from './Reshape';\nimport { transpose } from './Transpose';\nfunction spaceToBatchND(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    x\n  } = inputs;\n  const {\n    blockShape,\n    paddings\n  } = attrs;\n  const prod = util.sizeFromShape(blockShape);\n  const completePaddings = [[0, 0]];\n  completePaddings.push(...paddings);\n  for (let i = 1 + blockShape.length; i < x.shape.length; ++i) {\n    completePaddings.push([0, 0]);\n  }\n  const paddedX = padV2Config.kernelFunc({\n    inputs: {\n      x\n    },\n    backend,\n    attrs: {\n      paddings: completePaddings,\n      constantValue: 0\n    }\n  });\n  const reshapedPaddedShape = backend_util.getReshaped(paddedX.shape, blockShape, prod, false);\n  const permutedReshapedPaddedPermutation = backend_util.getPermuted(reshapedPaddedShape.length, blockShape.length, false);\n  const flattenShape = backend_util.getReshapedPermuted(paddedX.shape, blockShape, prod, false);\n  const reshapeInputs = {\n    x: paddedX\n  };\n  const reshapeAttrs = {\n    shape: reshapedPaddedShape\n  };\n  const paddedXReshaped = reshape({\n    inputs: reshapeInputs,\n    backend,\n    attrs: reshapeAttrs\n  });\n  const transposeInputs = {\n    x: paddedXReshaped\n  };\n  const transposeAttrs = {\n    perm: permutedReshapedPaddedPermutation\n  };\n  const paddedXT = transpose({\n    inputs: transposeInputs,\n    backend,\n    attrs: transposeAttrs\n  });\n  const resultReshapeInputs = {\n    x: paddedXT\n  };\n  const resultReshapeAttrs = {\n    shape: flattenShape\n  };\n  const result = reshape({\n    inputs: resultReshapeInputs,\n    backend,\n    attrs: resultReshapeAttrs\n  });\n  backend.disposeData(paddedX.dataId);\n  backend.disposeData(paddedXReshaped.dataId);\n  backend.disposeData(paddedXT.dataId);\n  return result;\n}\nexport const spaceToBatchNDConfig = {\n  kernelName: SpaceToBatchND,\n  backendName: 'wasm',\n  kernelFunc: spaceToBatchND\n};\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, SparseFillEmptyRows } from '@tensorflow/tfjs-core';\nimport { slice } from './Slice';\nimport { CppDType } from './types';\nlet wasmSparseFillEmptyRows;\nexport function setup(backend) {\n  wasmSparseFillEmptyRows = backend.wasm.cwrap('SparseFillEmptyRows', 'number', ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number' // exceptionValuesId\n  ]);\n}\nexport function sparseFillEmptyRows(args) {\n  const {\n    backend,\n    inputs\n  } = args;\n  const {\n    indices,\n    values,\n    denseShape,\n    defaultValue\n  } = inputs;\n  const indicesCount = indices.shape[0];\n  const rank = indices.shape[1];\n  const denseRows = backend.readSync(denseShape.dataId)[0];\n  // Set output size to maximum possible and resize later (actual result\n  // might be smaller).\n  const maxOutputIndicesShape = [indicesCount + denseRows, rank];\n  const indicesId = backend.dataIdMap.get(indices.dataId).id;\n  const valuesId = backend.dataIdMap.get(values.dataId).id;\n  const defaultValueId = backend.dataIdMap.get(defaultValue.dataId).id;\n  const outputIndices = backend.makeOutput(maxOutputIndicesShape, indices.dtype);\n  const outputIndicesId = backend.dataIdMap.get(outputIndices.dataId).id;\n  const outputValues = backend.makeOutput(maxOutputIndicesShape.slice(0, 1), values.dtype);\n  const outputValuesId = backend.dataIdMap.get(outputValues.dataId).id;\n  const emptyRowIndicator = backend.makeOutput([denseRows], 'bool');\n  const emptyRowIndicatorId = backend.dataIdMap.get(emptyRowIndicator.dataId).id;\n  const reverseIndexMap = backend.makeOutput([indicesCount], indices.dtype);\n  const reverseIndexMapId = backend.dataIdMap.get(reverseIndexMap.dataId).id;\n  const exceptionValues = backend.makeOutput([4], 'int32');\n  const exceptionValuesId = backend.dataIdMap.get(exceptionValues.dataId).id;\n  const outputRows = wasmSparseFillEmptyRows(indicesId, valuesId, CppDType[values.dtype], indicesCount, denseRows, rank, defaultValueId, outputIndicesId, outputValuesId, emptyRowIndicatorId, reverseIndexMapId, exceptionValuesId);\n  const exceptionValuesArray = backend.readSync(exceptionValues.dataId);\n  let exceptionMessage;\n  switch (exceptionValuesArray[0]) {\n    case 1:\n      {\n        exceptionMessage = backend_util.getSparseFillEmptyRowsIndicesDenseShapeMismatch(exceptionValuesArray[1]);\n        break;\n      }\n    case 2:\n      {\n        exceptionMessage = backend_util.getSparseFillEmptyRowsNegativeIndexErrorMessage(exceptionValuesArray[1], exceptionValuesArray[2]);\n        break;\n      }\n    case 3:\n      exceptionMessage = backend_util.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(exceptionValuesArray[1], exceptionValuesArray[2], exceptionValuesArray[3]);\n      break;\n    default:\n      exceptionMessage = '';\n  }\n  backend.disposeData(exceptionValues.dataId);\n  if (exceptionMessage) {\n    backend.disposeData(outputIndices.dataId);\n    backend.disposeData(outputValues.dataId);\n    backend.disposeData(emptyRowIndicator.dataId);\n    backend.disposeData(reverseIndexMap.dataId);\n    throw new Error(exceptionMessage);\n  }\n  let resizedIndices = outputIndices;\n  let resizedValues = outputValues;\n  // Overestimated output size.\n  if (outputRows !== maxOutputIndicesShape[0]) {\n    resizedIndices = slice({\n      inputs: {\n        x: outputIndices\n      },\n      attrs: {\n        begin: 0,\n        size: [outputRows, rank]\n      },\n      backend\n    });\n    resizedValues = slice({\n      inputs: {\n        x: outputValues\n      },\n      attrs: {\n        begin: 0,\n        size: outputRows\n      },\n      backend\n    });\n    backend.disposeData(outputIndices.dataId);\n    backend.disposeData(outputValues.dataId);\n  }\n  return [resizedIndices, resizedValues, emptyRowIndicator, reverseIndexMap];\n}\nexport const sparseFillEmptyRowsConfig = {\n  kernelName: SparseFillEmptyRows,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sparseFillEmptyRows\n};\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, SparseReshape, util } from '@tensorflow/tfjs-core';\nlet wasmSparseReshape;\nfunction setup(backend) {\n  wasmSparseReshape = backend.wasm.cwrap(SparseReshape, null /*void*/, ['number', 'number', 'number', 'number', 'number', 'number', 'number' // exceptionValuesId\n  ]);\n}\nfunction sparseReshape(args) {\n  const {\n    backend,\n    inputs\n  } = args;\n  const {\n    inputIndices,\n    inputShape,\n    newShape\n  } = inputs;\n  if (inputIndices.shape.length !== 2) {\n    throw new Error(`Input indices should be a matrix but received shape\n        ${inputIndices.shape}`);\n  }\n  if (inputShape.shape.length !== 1) {\n    throw new Error(`Input shape should be a vector but received shape\n        ${inputShape.shape}`);\n  }\n  if (newShape.shape.length !== 1) {\n    throw new Error(`Target shape should be a vector but received shape ${newShape.shape}`);\n  }\n  const inputIndicesId = backend.dataIdMap.get(inputIndices.dataId).id;\n  const inputShapeId = backend.dataIdMap.get(inputShape.dataId).id;\n  const newShapeId = backend.dataIdMap.get(newShape.dataId).id;\n  const nnz = inputIndices.shape[0];\n  const outputRank = util.sizeFromShape(newShape.shape);\n  const newIndices = backend.makeOutput([nnz, outputRank], inputIndices.dtype);\n  const newIndicesId = backend.dataIdMap.get(newIndices.dataId).id;\n  const outputShape = backend.makeOutput([outputRank], newShape.dtype);\n  const outputShapeId = backend.dataIdMap.get(outputShape.dataId).id;\n  const exceptionValues = backend.makeOutput([3], 'int32');\n  const exceptionValuesId = backend.dataIdMap.get(exceptionValues.dataId).id;\n  wasmSparseReshape(inputIndicesId, inputShapeId, newShapeId, nnz, newIndicesId, outputShapeId, exceptionValuesId);\n  const exceptionValuesArray = backend.readSync(exceptionValues.dataId);\n  let exceptionMessage;\n  switch (exceptionValuesArray[0]) {\n    case 0:\n      {\n        exceptionMessage = backend_util.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(exceptionValuesArray[1], exceptionValuesArray[2]);\n        break;\n      }\n    case 1:\n      {\n        exceptionMessage = backend_util.getSparseReshapeNegativeOutputDimErrorMessage(exceptionValuesArray[1], exceptionValuesArray[2]);\n        break;\n      }\n    case 2:\n      exceptionMessage = backend_util.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();\n      break;\n    case 3:\n      {\n        const inputShapeValues = Array.from(backend.readSync(inputShape.dataId)),\n          outputShapeValues = Array.from(backend.readSync(outputShape.dataId));\n        exceptionMessage = backend_util.getSparseReshapeInputOutputMultipleErrorMessage(inputShapeValues, outputShapeValues);\n        break;\n      }\n    case 4:\n      {\n        const inputShapeValues = Array.from(backend.readSync(inputShape.dataId)),\n          outputShapeValues = Array.from(backend.readSync(outputShape.dataId));\n        exceptionMessage = backend_util.getSparseReshapeInputOutputMismatchErrorMessage(inputShapeValues, outputShapeValues);\n        break;\n      }\n    default:\n      exceptionMessage = '';\n  }\n  backend.disposeData(exceptionValues.dataId);\n  if (exceptionMessage) {\n    backend.disposeData(newIndices.dataId);\n    backend.disposeData(outputShape.dataId);\n    throw new Error(exceptionMessage);\n  }\n  return [newIndices, outputShape];\n}\nexport const sparseReshapeConfig = {\n  kernelName: SparseReshape,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sparseReshape\n};\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { SparseSegmentMean } from '@tensorflow/tfjs-core';\nimport { setup, sparseSegmentReduction } from './SparseSegmentReduction';\nfunction sparseSegmentMean(args) {\n  return sparseSegmentReduction(args, true);\n}\nexport const sparseSegmentMeanConfig = {\n  kernelName: SparseSegmentMean,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sparseSegmentMean\n};\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util } from '@tensorflow/tfjs-core';\nimport { CppDType } from './types';\nlet wasmSparseSegmentReduction;\nexport function setup(backend) {\n  wasmSparseSegmentReduction = backend.wasm.cwrap('SparseSegmentReduction', null /*void*/, ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number' // defaultValue\n  ]);\n}\nexport function sparseSegmentReduction(args, isMean) {\n  const {\n    backend,\n    inputs\n  } = args;\n  const {\n    data,\n    indices,\n    segmentIds\n  } = inputs;\n  const numIndices = indices.shape[0];\n  const segmentIdsBack = backend.readSync(segmentIds.dataId, numIndices - 1, numIndices)[0];\n  const lastSegmentIdPlusOne = numIndices > 0 ? segmentIdsBack + 1 : 0;\n  const outputRows = lastSegmentIdPlusOne;\n  if (outputRows < 0) {\n    throw new Error(backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());\n  }\n  const outputShape = data.shape.slice();\n  outputShape[0] = outputRows;\n  const dataId = backend.dataIdMap.get(data.dataId).id;\n  const indicesId = backend.dataIdMap.get(indices.dataId).id;\n  const segmentIdsId = backend.dataIdMap.get(segmentIds.dataId).id;\n  const output = backend.makeOutput(outputShape, data.dtype);\n  const outputId = backend.dataIdMap.get(output.dataId).id;\n  const exceptionValues = backend.makeOutput([4], 'int32');\n  const exceptionValuesId = backend.dataIdMap.get(exceptionValues.dataId).id;\n  wasmSparseSegmentReduction(dataId, CppDType[data.dtype], data.shape[0], indicesId, segmentIdsId, outputId, exceptionValuesId, isMean, 0);\n  const exceptionValuesArray = backend.readSync(exceptionValues.dataId);\n  let exceptionMessage;\n  switch (exceptionValuesArray[0]) {\n    case 0:\n      {\n        exceptionMessage = backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();\n        break;\n      }\n    case 1:\n      {\n        exceptionMessage = backend_util.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();\n        break;\n      }\n    case 2:\n      exceptionMessage = backend_util.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(exceptionValuesArray[1], exceptionValuesArray[2]);\n      break;\n    case 3:\n      exceptionMessage = backend_util.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(exceptionValuesArray[1], exceptionValuesArray[2], exceptionValuesArray[3]);\n      break;\n    default:\n      exceptionMessage = '';\n  }\n  backend.disposeData(exceptionValues.dataId);\n  if (exceptionMessage) {\n    backend.disposeData(output.dataId);\n    throw new Error(exceptionMessage);\n  }\n  return output;\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { SparseSegmentSum } from '@tensorflow/tfjs-core';\nimport { setup, sparseSegmentReduction } from './SparseSegmentReduction';\nfunction sparseSegmentSum(args) {\n  return sparseSegmentReduction(args, false);\n}\nexport const sparseSegmentSumConfig = {\n  kernelName: SparseSegmentSum,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sparseSegmentSum\n};\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, SparseToDense, util } from '@tensorflow/tfjs-core';\nimport { CppDType } from './types';\nlet wasmSparseToDense;\nfunction setup(backend) {\n  wasmSparseToDense = backend.wasm.cwrap(SparseToDense, null /*void*/, ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'array', 'number', 'number' // outId\n  ]);\n}\nfunction sparseToDense(args) {\n  const {\n    backend,\n    inputs,\n    attrs\n  } = args;\n  const {\n    sparseIndices,\n    sparseValues,\n    defaultValue\n  } = inputs;\n  const {\n    outputShape\n  } = attrs;\n  const out = backend.makeOutput(outputShape, defaultValue.dtype);\n  if (util.sizeFromShape(outputShape) === 0) {\n    return out;\n  }\n  const {\n    sliceRank,\n    numUpdates,\n    sliceSize,\n    strides,\n    outputSize\n  } = backend_util.calculateShapes(sparseValues, sparseIndices, outputShape);\n  const sparseIndicesId = backend.dataIdMap.get(sparseIndices.dataId).id;\n  const sparseValuesId = backend.dataIdMap.get(sparseValues.dataId).id;\n  const defaultValueId = backend.dataIdMap.get(defaultValue.dataId).id;\n  const stridesBytes = new Uint8Array(new Int32Array(strides).buffer);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmSparseToDense(sparseIndicesId, sparseValuesId, sparseValues.shape.length, defaultValueId, CppDType[defaultValue.dtype], sliceRank, numUpdates, sliceSize, stridesBytes, outputSize, outId);\n  return out;\n}\nexport const sparseToDenseConfig = {\n  kernelName: SparseToDense,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sparseToDense\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { SplitV, util } from '@tensorflow/tfjs-core';\nimport { backend_util } from '@tensorflow/tfjs-core';\nimport { slice } from './Slice';\nexport function splitV(args) {\n  const {\n    inputs,\n    attrs,\n    backend\n  } = args;\n  const {\n    x\n  } = inputs;\n  const {\n    numOrSizeSplits,\n    axis\n  } = attrs;\n  const $axis = util.parseAxisParam(axis, x.shape)[0];\n  const splitSizes = backend_util.prepareSplitSize(x, numOrSizeSplits, $axis);\n  const begin = new Array(x.shape.length).fill(0);\n  const size = x.shape.slice();\n  return splitSizes.map(s => {\n    const xSliceSize = [...size];\n    xSliceSize[$axis] = s;\n    const xSlice = slice({\n      inputs: {\n        x\n      },\n      attrs: {\n        begin,\n        size: xSliceSize\n      },\n      backend\n    });\n    begin[$axis] += s;\n    return xSlice;\n  });\n}\nexport const splitVConfig = {\n  kernelName: SplitV,\n  backendName: 'wasm',\n  kernelFunc: splitV\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sqrt } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const sqrtConfig = createUnaryKernelConfig(Sqrt);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Square } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const squareConfig = createUnaryKernelConfig(Square);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { SquaredDifference } from '@tensorflow/tfjs-core';\nimport { createBinaryKernelConfig } from './binary_kernel';\nconst supportsFullBroadcast = true;\nexport const squaredDifferenceConfig = createBinaryKernelConfig(SquaredDifference, supportsFullBroadcast);\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Step } from '@tensorflow/tfjs-core';\nimport { CppDType } from './types';\nlet wasmStep;\nfunction setup(backend) {\n  wasmStep = backend.wasm.cwrap(Step, null /*void*/, ['number', 'number', 'number', 'number' // out_id\n  ]);\n}\nfunction step(args) {\n  const {\n    backend,\n    inputs,\n    attrs\n  } = args;\n  const {\n    alpha\n  } = attrs;\n  const {\n    x\n  } = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmStep(xId, alpha, CppDType[x.dtype], outId);\n  return out;\n}\nexport const stepConfig = {\n  kernelName: Step,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: step\n};\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { slice_util, StridedSlice, util } from '@tensorflow/tfjs-core';\nimport { reshape } from './Reshape';\nimport { slice } from './Slice';\nlet wasmStridedSlice;\nfunction setup(backend) {\n  wasmStridedSlice = backend.wasm.cwrap(StridedSlice, null /*void*/, ['number', 'array', 'number', 'array', 'array', 'array', 'array', 'array', 'number', 'number' // outId\n  ]);\n}\nexport function stridedSlice(args) {\n  const {\n    backend,\n    inputs,\n    attrs\n  } = args;\n  const {\n    x\n  } = inputs;\n  const {\n    begin,\n    end,\n    strides,\n    beginMask,\n    endMask,\n    ellipsisMask,\n    newAxisMask,\n    shrinkAxisMask\n  } = attrs;\n  const {\n    finalShapeSparse,\n    finalShape,\n    isIdentity,\n    sliceDim0,\n    isSimpleSlice,\n    begin: $begin,\n    end: $end,\n    strides: $strides\n  } = slice_util.sliceInfo(x.shape, begin, end, strides, beginMask, endMask, ellipsisMask, newAxisMask, shrinkAxisMask);\n  let result;\n  if (isIdentity) {\n    // Optimization #1, slice is a no-op plus reshape\n    result = reshape({\n      inputs: {\n        x\n      },\n      backend,\n      attrs: {\n        shape: finalShape\n      }\n    });\n  } else if (sliceDim0 || isSimpleSlice) {\n    // Optimization #2, slice is memory contiguous (only occurs in dim 0)\n    util.assert(x.shape.length >= 1, () => `Input must have rank at least 1, got: ${x.shape.length}`);\n    const size = slice_util.computeOutShape($begin, $end, $strides);\n    // To tolerate begin[0] > end[0] (a 0-output slice), we min(begin, end).\n    const sliced = slice({\n      inputs: {\n        x\n      },\n      backend,\n      attrs: {\n        begin: $begin,\n        size\n      }\n    });\n    result = reshape({\n      inputs: {\n        x: sliced\n      },\n      backend,\n      attrs: {\n        shape: finalShape\n      }\n    });\n    backend.disposeData(sliced.dataId);\n  } else {\n    const out = backend.makeOutput(finalShapeSparse, 'float32');\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const xStridesBytes = new Uint8Array(new Int32Array(util.computeStrides(x.shape)).buffer);\n    const beginBytes = new Uint8Array(new Int32Array($begin).buffer);\n    const endBytes = new Uint8Array(new Int32Array($end).buffer);\n    const stridesBytes = new Uint8Array(new Int32Array($strides).buffer);\n    const outputShapeBytes = new Uint8Array(new Int32Array(finalShapeSparse).buffer);\n    const outStridesBytes = new Uint8Array(new Int32Array(util.computeStrides(finalShapeSparse)).buffer);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmStridedSlice(xId, xStridesBytes, x.shape.length, beginBytes, endBytes, stridesBytes, outputShapeBytes, outStridesBytes, finalShapeSparse.length, outId);\n    result = reshape({\n      inputs: {\n        x: out\n      },\n      backend,\n      attrs: {\n        shape: finalShape\n      }\n    });\n    backend.disposeData(out.dataId);\n  }\n  return result;\n}\nexport const stridedSliceConfig = {\n  kernelName: StridedSlice,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: stridedSlice\n};\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { StringNGrams } from '@tensorflow/tfjs-core';\nimport { stringNGramsImplCPU } from '../kernel_utils/shared';\nfunction stringNGrams(args) {\n  const {\n    backend,\n    inputs,\n    attrs\n  } = args;\n  const {\n    data,\n    dataSplits\n  } = inputs;\n  const {\n    separator,\n    nGramWidths,\n    leftPad,\n    rightPad,\n    padWidth,\n    preserveShortSequences\n  } = attrs;\n  const $data = backend.readSync(data.dataId);\n  const $dataSplits = backend.readSync(dataSplits.dataId);\n  const [nGrams, nGramsSplits] = stringNGramsImplCPU($data, $dataSplits, separator, nGramWidths, leftPad, rightPad, padWidth, preserveShortSequences);\n  const nGramsOut = backend.makeOutput([nGrams.length], 'string');\n  const nGramsOutData = backend.dataIdMap.get(nGramsOut.dataId);\n  nGramsOutData.stringBytes = nGrams;\n  const nGramsSplitsOut = backend.makeOutput(dataSplits.shape, 'int32');\n  const nGramsSplitsOutVals = backend.typedArrayFromHeap(nGramsSplitsOut);\n  nGramsSplitsOutVals.set(nGramsSplits);\n  return [nGramsOut, nGramsSplitsOut];\n}\nexport const stringNGramsConfig = {\n  kernelName: StringNGrams,\n  backendName: 'wasm',\n  kernelFunc: stringNGrams\n};\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { StringSplit } from '@tensorflow/tfjs-core';\nimport { stringSplitImplCPU } from '../kernel_utils/shared';\nfunction stringSplit(args) {\n  const {\n    backend,\n    inputs,\n    attrs\n  } = args;\n  const {\n    input,\n    delimiter\n  } = inputs;\n  const {\n    skipEmpty\n  } = attrs;\n  const inputVals = backend.readSync(input.dataId);\n  const delimiterVals = backend.readSync(delimiter.dataId);\n  const [indices, values, shape] = stringSplitImplCPU(inputVals, delimiterVals[0], skipEmpty);\n  const outputSize = values.length;\n  const indicesOut = backend.makeOutput([outputSize, 2], 'int32');\n  const indicesOutVals = backend.typedArrayFromHeap(indicesOut);\n  indicesOutVals.set(indices);\n  const valuesOut = backend.makeOutput([outputSize], 'string');\n  const valuesOutData = backend.dataIdMap.get(valuesOut.dataId);\n  valuesOutData.stringBytes = values;\n  const shapeOut = backend.makeOutput([2], 'int32');\n  const shapeOutVals = backend.typedArrayFromHeap(shapeOut);\n  shapeOutVals.set(shape);\n  return [indicesOut, valuesOut, shapeOut];\n}\nexport const stringSplitConfig = {\n  kernelName: StringSplit,\n  backendName: 'wasm',\n  kernelFunc: stringSplit\n};\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { StringToHashBucketFast } from '@tensorflow/tfjs-core';\nimport { stringToHashBucketFastImplCPU } from '../kernel_utils/shared';\nfunction stringToHashBucketFast(args) {\n  const {\n    backend,\n    inputs,\n    attrs\n  } = args;\n  const {\n    input\n  } = inputs;\n  const {\n    numBuckets\n  } = attrs;\n  const inputVals = backend.readSync(input.dataId);\n  const values = stringToHashBucketFastImplCPU(inputVals, numBuckets);\n  const out = backend.makeOutput(input.shape, 'int32');\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.set(values);\n  return out;\n}\nexport const stringToHashBucketFastConfig = {\n  kernelName: StringToHashBucketFast,\n  backendName: 'wasm',\n  kernelFunc: stringToHashBucketFast\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sub } from '@tensorflow/tfjs-core';\nimport { createBinaryKernelConfig } from './binary_kernel';\nconst supportsFullBroadcast = true;\nexport const subConfig = createBinaryKernelConfig(Sub, supportsFullBroadcast);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Sum, util } from '@tensorflow/tfjs-core';\nimport { permuteAxesAndTranspose } from './kernel_utils';\nimport { CppDType } from './types';\nlet wasmSum;\nfunction setup(backend) {\n  wasmSum = backend.wasm.cwrap(Sum, null /*void*/, ['number', 'number', 'number', 'number' // out_id\n  ]);\n}\nfunction sum(args) {\n  const {\n    backend,\n    inputs,\n    attrs\n  } = args;\n  const {\n    axis,\n    keepDims\n  } = attrs;\n  const {\n    x\n  } = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n  const {\n    transposed,\n    axes,\n    originalAxes,\n    inputWasTransposed\n  } = permuteAxesAndTranspose(x, axis, backend);\n  let reductionAxes = axes;\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n      reductionAxes = backend_util.getInnerMostAxes(reductionAxes.length, input.shape.length);\n    }\n  }\n  backend_util.assertAxesAreInnerMostDims('sum', reductionAxes, input.shape.length);\n  const [outShape, reduceShape] = backend_util.computeOutAndReduceShapes(input.shape, reductionAxes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n  const out = backend.makeOutput(outShape, input.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmSum(inputId, reduceSize, CppDType[out.dtype], outId);\n  }\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n  return out;\n}\nexport const sumConfig = {\n  kernelName: Sum,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sum\n};\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Tan } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const tanConfig = createUnaryKernelConfig(Tan);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Tanh } from '@tensorflow/tfjs-core';\nimport { createUnaryKernelConfig } from './unary_kernel';\nexport const tanhConfig = createUnaryKernelConfig(Tanh);\n", "/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { scatter_util, TensorScatterUpdate, util } from '@tensorflow/tfjs-core';\nimport { CppDType } from './types';\nlet wasmTensorScatterUpdate;\nfunction setup(backend) {\n  wasmTensorScatterUpdate = backend.wasm.cwrap(TensorScatterUpdate, null /*void*/, ['number', 'number', 'number', 'number', 'number', 'number', 'array', 'number', 'number', 'number' // tensorId\n  ]);\n}\nfunction tensorScatterUpdate(args) {\n  const {\n    backend,\n    inputs,\n    attrs\n  } = args;\n  const {\n    tensor,\n    indices,\n    updates\n  } = inputs;\n  const {} = attrs;\n  const out = backend.makeOutput(tensor.shape, tensor.dtype);\n  if (util.sizeFromShape(tensor.shape) === 0) {\n    return out;\n  }\n  const {\n    sliceRank,\n    numUpdates,\n    sliceSize,\n    strides,\n    outputSize\n  } = scatter_util.calculateShapes(updates, indices, tensor.shape);\n  const indicesData = backend.dataIdMap.get(indices.dataId);\n  const indicesId = indicesData.id;\n  const updatesData = backend.dataIdMap.get(updates.dataId);\n  const updatesId = updatesData.id;\n  const tensorData = backend.dataIdMap.get(tensor.dataId);\n  const tensorId = tensorData.id;\n  const stridesBytes = new Uint8Array(new Int32Array(strides).buffer);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmTensorScatterUpdate(indicesId, updatesId, CppDType[updates.dtype], sliceRank, numUpdates, sliceSize, stridesBytes, outputSize, outId, tensorId);\n  return out;\n}\nexport const tensorScatterUpdateConfig = {\n  kernelName: TensorScatterUpdate,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: tensorScatterUpdate\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Tile } from '@tensorflow/tfjs-core';\nimport { CppDType } from './types';\nlet wasmTile;\nfunction setup(backend) {\n  wasmTile = backend.wasm.cwrap(Tile, null /* void */, ['number', 'array', 'number', 'array', 'number', 'number' // out_id\n  ]);\n}\nfunction tile(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    x\n  } = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const {\n    reps\n  } = attrs;\n  const newShape = new Array(x.shape.length);\n  for (let i = 0; i < newShape.length; i++) {\n    newShape[i] = x.shape[i] * reps[i];\n  }\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n  const newShapeBytes = new Uint8Array(new Int32Array(newShape).buffer);\n  const out = backend.makeOutput(newShape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmTile(xId, xShapeBytes, x.shape.length, newShapeBytes, newShape.length, CppDType[out.dtype], outId);\n  return out;\n}\nexport const tileConfig = {\n  kernelName: Tile,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: tile\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { TopK } from '@tensorflow/tfjs-core';\nimport { CppDType } from './types';\nlet wasmTopK;\nfunction setup(backend) {\n  wasmTopK = backend.wasm.cwrap(TopK, null /* void */, ['number', 'array', 'number', 'number', 'number', 'bool', 'number', 'number' // outIndicesId\n  ]);\n}\nexport const topk = ({\n  inputs,\n  backend,\n  attrs\n}) => {\n  const {\n    x\n  } = inputs;\n  const {\n    k,\n    sorted\n  } = attrs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n  const outputShape = x.shape.slice();\n  outputShape[outputShape.length - 1] = k;\n  const outValues = backend.makeOutput(outputShape, x.dtype);\n  const outValuesId = backend.dataIdMap.get(outValues.dataId).id;\n  const outIndices = backend.makeOutput(outputShape, 'int32');\n  const outIndicesId = backend.dataIdMap.get(outIndices.dataId).id;\n  wasmTopK(xId, xShapeBytes, x.shape.length, CppDType[x.dtype], k, sorted, outValuesId, outIndicesId);\n  return [outValues, outIndices];\n};\nexport const topKConfig = {\n  kernelName: TopK,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: topk\n};\n", "/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Transform, util } from '@tensorflow/tfjs-core';\nlet wasmTransform;\nfunction setup(backend) {\n  wasmTransform = backend.wasm.cwrap(Transform, null /*void*/, ['number', 'number', 'bool', 'number', 'number', 'number', 'number', 'number', 'number', 'array', 'number', 'array', 'number', 'number', 'number', 'number', 'number' // outId\n  ]);\n}\nfunction transform(args) {\n  const {\n    backend,\n    inputs,\n    attrs\n  } = args;\n  const {\n    image,\n    transforms\n  } = inputs;\n  const {\n    interpolation,\n    fillMode,\n    fillValue,\n    outputShape\n  } = attrs;\n  const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n  const [outHeight, outWidth] = outputShape != null ? outputShape : [imageHeight, imageWidth];\n  const outShape = [batch, outHeight, outWidth, numChannels];\n  const inputStrides = new Uint8Array(new Int32Array(util.computeStrides(image.shape)).buffer);\n  const outputStrides = new Uint8Array(new Int32Array(util.computeStrides(outShape)).buffer);\n  const out = backend.makeOutput(outShape, image.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const imageData = backend.dataIdMap.get(image.dataId);\n  const imageId = imageData.id;\n  const transformsData = backend.dataIdMap.get(transforms.dataId);\n  const transformsId = transformsData.id;\n  const interpolationModeId = interpolation === 'nearest' ? 1 : 2;\n  let fillModeId;\n  switch (fillMode) {\n    case 'constant':\n      fillModeId = 1;\n      break;\n    case 'reflect':\n      fillModeId = 2;\n      break;\n    case 'wrap':\n      fillModeId = 3;\n      break;\n    case 'nearest':\n      fillModeId = 4;\n      break;\n    default:\n      fillModeId = 1;\n      break;\n  }\n  wasmTransform(imageId, transformsId, transforms.shape[0] > 1, batch, outHeight, outWidth, numChannels, imageWidth, imageHeight, inputStrides, image.shape.length - 1, outputStrides, outShape.length - 1, interpolationModeId, fillModeId, fillValue, outId);\n  return out;\n}\nexport const transformConfig = {\n  kernelName: Transform,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: transform\n};\n", "/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Unique } from '@tensorflow/tfjs-core';\nimport { uniqueImplCPU } from '../kernel_utils/shared';\nfunction unique(args) {\n  const {\n    inputs,\n    attrs,\n    backend\n  } = args;\n  const {\n    axis\n  } = attrs;\n  const {\n    x\n  } = inputs;\n  const {\n    outputValues,\n    outputShape,\n    indices\n  } = uniqueImplCPU(backend.readSync(x.dataId), axis, x.shape, x.dtype);\n  return [backend.makeOutput(outputShape, x.dtype, /*memoryOffset=*/undefined, outputValues), backend.makeOutput([indices.length], 'int32', /*memoryOffset=*/undefined, indices)];\n}\nexport const uniqueConfig = {\n  kernelName: Unique,\n  backendName: 'wasm',\n  kernelFunc: unique\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Unpack } from '@tensorflow/tfjs-core';\nimport { slice } from './Slice';\nfunction unpack(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    value\n  } = inputs;\n  let {\n    axis\n  } = attrs;\n  if (axis < 0) {\n    axis += value.shape.length;\n  }\n  const numOutputs = value.shape[axis];\n  const rank = value.shape.length;\n  const outShape = new Array(rank - 1);\n  let outIndex = 0;\n  for (let i = 0; i < rank; i++) {\n    if (i !== axis) {\n      outShape[outIndex++] = value.shape[i];\n    }\n  }\n  const outs = new Array(numOutputs);\n  const begin = new Array(rank).fill(0);\n  const size = value.shape.slice();\n  size[axis] = 1;\n  for (let i = 0; i < outs.length; i++) {\n    begin[axis] = i;\n    outs[i] = slice({\n      inputs: {\n        x: value\n      },\n      attrs: {\n        begin,\n        size\n      },\n      backend\n    });\n  }\n  return outs.map(({\n    dataId,\n    dtype\n  }) => ({\n    dataId,\n    dtype,\n    shape: outShape\n  }));\n}\nexport const unpackConfig = {\n  kernelName: Unpack,\n  backendName: 'wasm',\n  kernelFunc: unpack\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ZerosLike } from '@tensorflow/tfjs-core';\nfunction zerosLike(args) {\n  const {\n    inputs: {\n      x\n    },\n    backend\n  } = args;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.fill(0);\n  return out;\n}\nexport const zerosLikeConfig = {\n  kernelName: ZerosLike,\n  backendName: 'wasm',\n  kernelFunc: zerosLike\n};\n", "/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport './flags_wasm';\nimport { registerBackend } from '@tensorflow/tfjs-core';\nimport { BackendWasm, init } from './backend_wasm';\nexport { BackendWasm, getThreadsCount, setThreadsCount, setWasmPath, setWasmPaths } from './backend_wasm';\nexport { version as version_wasm } from './version';\nconst WASM_PRIORITY = 2;\nregisterBackend('wasm', async () => {\n  const {\n    wasm\n  } = await init();\n  return new BackendWasm(wasm);\n}, WASM_PRIORITY);\n", "/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport './flags_wasm';\nimport { DataStorage, deprecationWarn, engine, env, KernelBackend, util } from '@tensorflow/tfjs-core';\nimport * as wasmFactoryThreadedSimd_import from '../wasm-out/tfjs-backend-wasm-threaded-simd.js';\n// @ts-ignore\nimport { wasmWorkerContents } from '../wasm-out/tfjs-backend-wasm-threaded-simd.worker.js';\nimport * as wasmFactory_import from '../wasm-out/tfjs-backend-wasm.js';\n// This workaround is required for importing in Node.js without using\n// the node bundle (for testing). This would not be necessary if we\n// flipped esModuleInterop to true, but we likely can't do that since\n// google3 does not use it.\nconst wasmFactoryThreadedSimd = wasmFactoryThreadedSimd_import.default || wasmFactoryThreadedSimd_import;\nconst wasmFactory = wasmFactory_import.default || wasmFactory_import;\nexport class BackendWasm extends KernelBackend {\n  constructor(wasm) {\n    super();\n    this.wasm = wasm;\n    // 0 is reserved for null data ids.\n    this.dataIdNextNumber = 1;\n    this.wasm.tfjs.initWithThreadsCount(threadsCount);\n    actualThreadsCount = this.wasm.tfjs.getThreadsCount();\n    this.dataIdMap = new DataStorage(this, engine());\n  }\n  write(values, shape, dtype) {\n    const dataId = {\n      id: this.dataIdNextNumber++\n    };\n    this.move(dataId, values, shape, dtype, 1);\n    return dataId;\n  }\n  numDataIds() {\n    return this.dataIdMap.numDataIds();\n  }\n  async time(f) {\n    const start = util.now();\n    f();\n    const kernelMs = util.now() - start;\n    return {\n      kernelMs\n    };\n  }\n  move(dataId, values, shape, dtype, refCount) {\n    const id = this.dataIdNextNumber++;\n    if (dtype === 'string') {\n      const stringBytes = values;\n      this.dataIdMap.set(dataId, {\n        id,\n        stringBytes,\n        shape,\n        dtype,\n        memoryOffset: null,\n        refCount\n      });\n      return;\n    }\n    const size = util.sizeFromShape(shape);\n    const numBytes = size * util.bytesPerElement(dtype);\n    // `>>> 0` is needed for above 2GB allocations because wasm._malloc returns\n    // a signed int32 instead of an unsigned int32.\n    // https://v8.dev/blog/4gb-wasm-memory\n    const memoryOffset = this.wasm._malloc(numBytes) >>> 0;\n    this.dataIdMap.set(dataId, {\n      id,\n      memoryOffset,\n      shape,\n      dtype,\n      refCount\n    });\n    this.wasm.tfjs.registerTensor(id, size, memoryOffset);\n    if (values != null) {\n      this.wasm.HEAPU8.set(new Uint8Array(values.buffer, values.byteOffset, numBytes), memoryOffset);\n    }\n  }\n  async read(dataId) {\n    return this.readSync(dataId);\n  }\n  readSync(dataId, start, end) {\n    const {\n      memoryOffset,\n      dtype,\n      shape,\n      stringBytes\n    } = this.dataIdMap.get(dataId);\n    if (dtype === 'string') {\n      // Slice all elements.\n      if ((start == null || start === 0) && (end == null || end >= stringBytes.length)) {\n        return stringBytes;\n      }\n      return stringBytes.slice(start, end);\n    }\n    start = start || 0;\n    end = end || util.sizeFromShape(shape);\n    const bytesPerElement = util.bytesPerElement(dtype);\n    const bytes = this.wasm.HEAPU8.slice(memoryOffset + start * bytesPerElement, memoryOffset + end * bytesPerElement);\n    return typedArrayFromBuffer(bytes.buffer, dtype);\n  }\n  /**\n   * Dispose the memory if the dataId has 0 refCount. Return true if the memory\n   * is released, false otherwise.\n   * @param dataId\n   * @oaram force Optional, remove the data regardless of refCount\n   */\n  disposeData(dataId, force = false) {\n    if (this.dataIdMap.has(dataId)) {\n      const data = this.dataIdMap.get(dataId);\n      data.refCount--;\n      if (!force && data.refCount > 0) {\n        return false;\n      }\n      this.wasm._free(data.memoryOffset);\n      this.wasm.tfjs.disposeData(data.id);\n      this.dataIdMap.delete(dataId);\n    }\n    return true;\n  }\n  /** Return refCount of a `TensorData`. */\n  refCount(dataId) {\n    if (this.dataIdMap.has(dataId)) {\n      const tensorData = this.dataIdMap.get(dataId);\n      return tensorData.refCount;\n    }\n    return 0;\n  }\n  incRef(dataId) {\n    const data = this.dataIdMap.get(dataId);\n    if (data != null) {\n      data.refCount++;\n    }\n  }\n  floatPrecision() {\n    return 32;\n  }\n  // Returns the memory offset of a tensor. Useful for debugging and unit\n  // testing.\n  getMemoryOffset(dataId) {\n    return this.dataIdMap.get(dataId).memoryOffset;\n  }\n  dispose() {\n    this.wasm.tfjs.dispose();\n    if ('PThread' in this.wasm) {\n      this.wasm.PThread.terminateAllThreads();\n    }\n    this.wasm = null;\n  }\n  memory() {\n    return {\n      unreliable: false\n    };\n  }\n  /**\n   * Make a tensor info for the output of an op. If `memoryOffset` is not\n   * present, this method allocates memory on the WASM heap. If `memoryOffset`\n   * is present, the memory was allocated elsewhere (in c++) and we just record\n   * the pointer where that memory lives.\n   */\n  makeOutput(shape, dtype, memoryOffset, values) {\n    let dataId;\n    if (memoryOffset == null) {\n      dataId = this.write(values !== null && values !== void 0 ? values : null, shape, dtype);\n    } else {\n      const id = this.dataIdNextNumber++;\n      dataId = {\n        id\n      };\n      this.dataIdMap.set(dataId, {\n        id,\n        memoryOffset,\n        shape,\n        dtype,\n        refCount: 1\n      });\n      const size = util.sizeFromShape(shape);\n      this.wasm.tfjs.registerTensor(id, size, memoryOffset);\n    }\n    return {\n      dataId,\n      shape,\n      dtype\n    };\n  }\n  typedArrayFromHeap({\n    shape,\n    dtype,\n    dataId\n  }) {\n    const buffer = this.wasm.HEAPU8.buffer;\n    const {\n      memoryOffset\n    } = this.dataIdMap.get(dataId);\n    const size = util.sizeFromShape(shape);\n    switch (dtype) {\n      case 'float32':\n        return new Float32Array(buffer, memoryOffset, size);\n      case 'int32':\n        return new Int32Array(buffer, memoryOffset, size);\n      case 'bool':\n        return new Uint8Array(buffer, memoryOffset, size);\n      default:\n        throw new Error(`Unknown dtype ${dtype}`);\n    }\n  }\n}\nfunction createInstantiateWasmFunc(path) {\n  // this will be replace by rollup plugin patchWechatWebAssembly in\n  // minprogram's output.\n  // tslint:disable-next-line:no-any\n  return (imports, callback) => {\n    util.fetch(path, {\n      credentials: 'same-origin'\n    }).then(response => {\n      if (!response['ok']) {\n        imports.env.a(`failed to load wasm binary file at '${path}'`);\n      }\n      response.arrayBuffer().then(binary => {\n        WebAssembly.instantiate(binary, imports).then(output => {\n          callback(output.instance, output.module);\n        });\n      });\n    });\n    return {};\n  };\n}\n/**\n * Returns the path of the WASM binary.\n * @param simdSupported whether SIMD is supported\n * @param threadsSupported whether multithreading is supported\n * @param wasmModuleFolder the directory containing the WASM binaries.\n */\nfunction getPathToWasmBinary(simdSupported, threadsSupported, wasmModuleFolder) {\n  if (wasmPath != null) {\n    // If wasmPath is defined, the user has supplied a full path to\n    // the vanilla .wasm binary.\n    return wasmPath;\n  }\n  let path = 'tfjs-backend-wasm.wasm';\n  if (simdSupported && threadsSupported) {\n    path = 'tfjs-backend-wasm-threaded-simd.wasm';\n  } else if (simdSupported) {\n    path = 'tfjs-backend-wasm-simd.wasm';\n  }\n  if (wasmFileMap != null) {\n    if (wasmFileMap[path] != null) {\n      return wasmFileMap[path];\n    }\n  }\n  return wasmModuleFolder + path;\n}\n/**\n * Initializes the wasm module and creates the js <--> wasm bridge.\n *\n * NOTE: We wrap the wasm module in a object with property 'wasm' instead of\n * returning Promise<BackendWasmModule> to avoid freezing Chrome (last tested\n * in Chrome 76).\n */\nexport async function init() {\n  const [simdSupported, threadsSupported] = await Promise.all([env().getAsync('WASM_HAS_SIMD_SUPPORT'), env().getAsync('WASM_HAS_MULTITHREAD_SUPPORT')]);\n  return new Promise((resolve, reject) => {\n    const factoryConfig = {};\n    /**\n     * This function overrides the Emscripten module locateFile utility.\n     * @param path The relative path to the file that needs to be loaded.\n     * @param prefix The path to the main JavaScript file's directory.\n     */\n    factoryConfig.locateFile = (path, prefix) => {\n      if (path.endsWith('.worker.js')) {\n        // Escape '\\n' because Blob will turn it into a newline.\n        // There should be a setting for this, but 'endings: \"native\"' does\n        // not seem to work.\n        const response = wasmWorkerContents.replace(/\\n/g, '\\\\n');\n        const blob = new Blob([response], {\n          type: 'application/javascript'\n        });\n        return URL.createObjectURL(blob);\n      }\n      if (path.endsWith('.wasm')) {\n        return getPathToWasmBinary(simdSupported, threadsSupported, wasmPathPrefix != null ? wasmPathPrefix : prefix);\n      }\n      return prefix + path;\n    };\n    // Use the instantiateWasm override when system fetch is not available.\n    // Reference:\n    // https://github.com/emscripten-core/emscripten/blob/2bca083cbbd5a4133db61fbd74d04f7feecfa907/tests/manual_wasm_instantiate.html#L170\n    if (customFetch) {\n      factoryConfig.instantiateWasm = createInstantiateWasmFunc(getPathToWasmBinary(simdSupported, threadsSupported, wasmPathPrefix != null ? wasmPathPrefix : ''));\n    }\n    let initialized = false;\n    factoryConfig.onAbort = () => {\n      if (initialized) {\n        // Emscripten already called console.warn so no need to double log.\n        return;\n      }\n      if (initAborted) {\n        // Emscripten calls `onAbort` twice, resulting in double error\n        // messages.\n        return;\n      }\n      initAborted = true;\n      const rejectMsg = 'Make sure the server can serve the `.wasm` file relative to the ' + 'bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers';\n      reject({\n        message: rejectMsg\n      });\n    };\n    let wasm;\n    // If `wasmPath` has been defined we must initialize the vanilla module.\n    if (threadsSupported && simdSupported && wasmPath == null) {\n      factoryConfig.mainScriptUrlOrBlob = new Blob([`var WasmBackendModuleThreadedSimd = ` + wasmFactoryThreadedSimd.toString()], {\n        type: 'text/javascript'\n      });\n      wasm = wasmFactoryThreadedSimd(factoryConfig);\n    } else {\n      // The wasmFactory works for both vanilla and SIMD binaries.\n      wasm = wasmFactory(factoryConfig);\n    }\n    // The `wasm` promise will resolve to the WASM module created by\n    // the factory, but it might have had errors during creation. Most\n    // errors are caught by the onAbort callback defined above.\n    // However, some errors, such as those occurring from a\n    // failed fetch, result in this promise being rejected. These are\n    // caught and re-rejected below.\n    wasm.then(module => {\n      initialized = true;\n      initAborted = false;\n      const voidReturnType = null;\n      // Using the tfjs namespace to avoid conflict with emscripten's API.\n      module.tfjs = {\n        init: module.cwrap('init', null, []),\n        initWithThreadsCount: module.cwrap('init_with_threads_count', null, ['number']),\n        getThreadsCount: module.cwrap('get_threads_count', 'number', []),\n        registerTensor: module.cwrap('register_tensor', null, ['number', 'number', 'number' // memoryOffset\n        ]),\n        disposeData: module.cwrap('dispose_data', voidReturnType, ['number']),\n        dispose: module.cwrap('dispose', voidReturnType, [])\n      };\n      resolve({\n        wasm: module\n      });\n    }).catch(reject);\n  });\n}\nfunction typedArrayFromBuffer(buffer, dtype) {\n  switch (dtype) {\n    case 'float32':\n      return new Float32Array(buffer);\n    case 'int32':\n      return new Int32Array(buffer);\n    case 'bool':\n      return new Uint8Array(buffer);\n    default:\n      throw new Error(`Unknown dtype ${dtype}`);\n  }\n}\nconst wasmBinaryNames = ['tfjs-backend-wasm.wasm', 'tfjs-backend-wasm-simd.wasm', 'tfjs-backend-wasm-threaded-simd.wasm'];\nlet wasmPath = null;\nlet wasmPathPrefix = null;\nlet wasmFileMap = {};\nlet initAborted = false;\nlet customFetch = false;\n/**\n * @deprecated Use `setWasmPaths` instead.\n * Sets the path to the `.wasm` file which will be fetched when the wasm\n * backend is initialized. See\n * https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers\n * for more details.\n * @param path wasm file path or url\n * @param usePlatformFetch optional boolean to use platform fetch to download\n *     the wasm file, default to false.\n *\n * @doc {heading: 'Environment', namespace: 'wasm'}\n */\nexport function setWasmPath(path, usePlatformFetch = false) {\n  deprecationWarn('setWasmPath has been deprecated in favor of setWasmPaths and' + ' will be removed in a future release.');\n  if (initAborted) {\n    throw new Error('The WASM backend was already initialized. Make sure you call ' + '`setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`');\n  }\n  wasmPath = path;\n  customFetch = usePlatformFetch;\n}\n/**\n * Configures the locations of the WASM binaries.\n *\n * ```js\n * setWasmPaths({\n *  'tfjs-backend-wasm.wasm': 'renamed.wasm',\n *  'tfjs-backend-wasm-simd.wasm': 'renamed-simd.wasm',\n *  'tfjs-backend-wasm-threaded-simd.wasm': 'renamed-threaded-simd.wasm'\n * });\n * tf.setBackend('wasm');\n * ```\n *\n * @param prefixOrFileMap This can be either a string or object:\n *  - (string) The path to the directory where the WASM binaries are located.\n *     Note that this prefix will be used to load each binary (vanilla,\n *     SIMD-enabled, threading-enabled, etc.).\n *  - (object) Mapping from names of WASM binaries to custom\n *     full paths specifying the locations of those binaries. This is useful if\n *     your WASM binaries are not all located in the same directory, or if your\n *     WASM binaries have been renamed.\n * @param usePlatformFetch optional boolean to use platform fetch to download\n *     the wasm file, default to false.\n *\n * @doc {heading: 'Environment', namespace: 'wasm'}\n */\nexport function setWasmPaths(prefixOrFileMap, usePlatformFetch = false) {\n  if (initAborted) {\n    throw new Error('The WASM backend was already initialized. Make sure you call ' + '`setWasmPaths()` before you call `tf.setBackend()` or ' + '`tf.ready()`');\n  }\n  if (typeof prefixOrFileMap === 'string') {\n    wasmPathPrefix = prefixOrFileMap;\n  } else {\n    wasmFileMap = prefixOrFileMap;\n    const missingPaths = wasmBinaryNames.filter(name => wasmFileMap[name] == null);\n    if (missingPaths.length > 0) {\n      throw new Error(`There were no entries found for the following binaries: ` + `${missingPaths.join(',')}. Please either call setWasmPaths with a ` + `map providing a path for each binary, or with a string indicating ` + `the directory where all the binaries can be found.`);\n    }\n  }\n  customFetch = usePlatformFetch;\n}\n/** Used in unit tests. */\nexport function resetWasmPath() {\n  wasmPath = null;\n  wasmPathPrefix = null;\n  wasmFileMap = {};\n  customFetch = false;\n  initAborted = false;\n}\nlet threadsCount = -1;\nlet actualThreadsCount = -1;\n/**\n * Sets the number of threads that will be used by XNNPACK to create\n * threadpool (default to the number of logical CPU cores).\n *\n * This must be called before calling `tf.setBackend('wasm')`.\n */\nexport function setThreadsCount(numThreads) {\n  threadsCount = numThreads;\n}\n/**\n * Gets the actual threads count that is used by XNNPACK.\n *\n * It is set after the backend is intialized.\n */\nexport function getThreadsCount() {\n  if (actualThreadsCount === -1) {\n    throw new Error(`WASM backend not initialized.`);\n  }\n  return actualThreadsCount;\n}\n", "/** @license See the LICENSE file. */\n// This code is auto-generated, do not modify this file!\nconst version = '4.22.0';\nexport { version };\n"],
  "mappings": "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",
  "names": ["WasmBackendModuleThreadedSimd", "err", "module", "exports", "buffer", "ret", "WasmBackendModule", "err", "module", "exports", "buffer", "ret", "CppDType", "FusableActivation", "wasmFunc", "setupFunc", "kernelFunc", "supportsFullBroadcast", "wasmFunc", "setupFunc", "kernelFunc", "setup", "setup", "setup", "wasmFunc", "setupFunc", "kernelFunc", "setup", "pad", "setup", "pad", "setup", "pad", "setup", "pad", "setup", "outVals", "prod", "setup", "x", "supportsFullBroadcast", "setup", "outVals", "setup", "pad", "setup", "pad", "setup", "pad", "setup", "pad", "setup", "pad", "InterpolationMethod", "setup", "setup", "reverse", "setup", "reverse", "setup", "x", "setup", "setup", "pad", "setup", "setup", "pad", "setup", "pad", "setup", "pad", "setup", "supportsFullBroadcast", "setup", "supportsFullBroadcast", "setup", "mean", "setup", "pad", "setup", "pad", "setup", "setup", "supportsFullBroadcast", "supportsFullBroadcast", "wasmFunc", "setupFunc", "supportsFullBroadcast", "supportsFullBroadcast", "setup", "supportsFullBroadcast", "supportsFullBroadcast", "supportsFullBroadcast", "setup", "setup", "setup", "supportsFullBroadcast", "setup", "pad", "setup", "pad", "setup", "pad", "setup", "pad", "setup", "pad", "setup", "setup", "supportsFullBroadcast", "MirrorPaddingMode", "setup", "wasmFunc", "setup", "setup", "supportsFullBroadcast", "wasmFunc", "setup", "wasmFunc", "setup", "wasmFunc", "setup", "kernelFunc", "supportsFullBroadcast", "setup", "setup", "supportsFullBroadcast", "setup", "setup", "step", "supportsFullBroadcast", "setup", "setup", "setup", "setup", "setup", "setup", "setup", "setup", "setup", "wasmFunc", "setup", "prod", "setup", "setup", "setup", "setup", "setup", "setup", "supportsFullBroadcast", "setup", "setup", "supportsFullBroadcast", "setup", "setup", "tensor", "setup", "setup", "setup", "import_flags_wasm"]
}
