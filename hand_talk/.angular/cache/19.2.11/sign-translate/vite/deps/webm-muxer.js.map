{
  "version": 3,
  "sources": ["../../../../../../node_modules/webm-muxer/build/webm-muxer.mjs"],
  "sourcesContent": ["var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj)) throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj)) throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar __privateMethod = (obj, member, method) => {\n  __accessCheck(obj, member, \"access private method\");\n  return method;\n};\n\n// src/ebml.ts\nvar EBMLFloat32 = class {\n  constructor(value) {\n    this.value = value;\n  }\n};\nvar EBMLFloat64 = class {\n  constructor(value) {\n    this.value = value;\n  }\n};\nvar measureUnsignedInt = value => {\n  if (value < 1 << 8) {\n    return 1;\n  } else if (value < 1 << 16) {\n    return 2;\n  } else if (value < 1 << 24) {\n    return 3;\n  } else if (value < 2 ** 32) {\n    return 4;\n  } else if (value < 2 ** 40) {\n    return 5;\n  } else {\n    return 6;\n  }\n};\nvar measureEBMLVarInt = value => {\n  if (value < (1 << 7) - 1) {\n    return 1;\n  } else if (value < (1 << 14) - 1) {\n    return 2;\n  } else if (value < (1 << 21) - 1) {\n    return 3;\n  } else if (value < (1 << 28) - 1) {\n    return 4;\n  } else if (value < 2 ** 35 - 1) {\n    return 5;\n  } else if (value < 2 ** 42 - 1) {\n    return 6;\n  } else {\n    throw new Error(\"EBML VINT size not supported \" + value);\n  }\n};\n\n// src/misc.ts\nvar readBits = (bytes, start, end) => {\n  let result = 0;\n  for (let i = start; i < end; i++) {\n    let byteIndex = Math.floor(i / 8);\n    let byte = bytes[byteIndex];\n    let bitIndex = 7 - (i & 7);\n    let bit = (byte & 1 << bitIndex) >> bitIndex;\n    result <<= 1;\n    result |= bit;\n  }\n  return result;\n};\nvar writeBits = (bytes, start, end, value) => {\n  for (let i = start; i < end; i++) {\n    let byteIndex = Math.floor(i / 8);\n    let byte = bytes[byteIndex];\n    let bitIndex = 7 - (i & 7);\n    byte &= ~(1 << bitIndex);\n    byte |= (value & 1 << end - i - 1) >> end - i - 1 << bitIndex;\n    bytes[byteIndex] = byte;\n  }\n};\n\n// src/target.ts\nvar isTarget = Symbol(\"isTarget\");\nvar Target = class {};\nisTarget;\nvar ArrayBufferTarget = class extends Target {\n  constructor() {\n    super(...arguments);\n    this.buffer = null;\n  }\n};\nvar StreamTarget = class extends Target {\n  constructor(options) {\n    super();\n    this.options = options;\n    if (typeof options !== \"object\") {\n      throw new TypeError(\"StreamTarget requires an options object to be passed to its constructor.\");\n    }\n    if (options.onData) {\n      if (typeof options.onData !== \"function\") {\n        throw new TypeError(\"options.onData, when provided, must be a function.\");\n      }\n      if (options.onData.length < 2) {\n        throw new TypeError(\"options.onData, when provided, must be a function that takes in at least two arguments (data and position). Ignoring the position argument, which specifies the byte offset at which the data is to be written, can lead to broken outputs.\");\n      }\n    }\n    if (options.onHeader && typeof options.onHeader !== \"function\") {\n      throw new TypeError(\"options.onHeader, when provided, must be a function.\");\n    }\n    if (options.onCluster && typeof options.onCluster !== \"function\") {\n      throw new TypeError(\"options.onCluster, when provided, must be a function.\");\n    }\n    if (options.chunked !== void 0 && typeof options.chunked !== \"boolean\") {\n      throw new TypeError(\"options.chunked, when provided, must be a boolean.\");\n    }\n    if (options.chunkSize !== void 0 && (!Number.isInteger(options.chunkSize) || options.chunkSize < 1024)) {\n      throw new TypeError(\"options.chunkSize, when provided, must be an integer and not smaller than 1024.\");\n    }\n  }\n};\nvar FileSystemWritableFileStreamTarget = class extends Target {\n  constructor(stream, options) {\n    super();\n    this.stream = stream;\n    this.options = options;\n    if (!(stream instanceof FileSystemWritableFileStream)) {\n      throw new TypeError(\"FileSystemWritableFileStreamTarget requires a FileSystemWritableFileStream instance.\");\n    }\n    if (options !== void 0 && typeof options !== \"object\") {\n      throw new TypeError(\"FileSystemWritableFileStreamTarget's options, when provided, must be an object.\");\n    }\n    if (options) {\n      if (options.chunkSize !== void 0 && (!Number.isInteger(options.chunkSize) || options.chunkSize <= 0)) {\n        throw new TypeError(\"options.chunkSize, when provided, must be a positive integer\");\n      }\n    }\n  }\n};\n\n// src/writer.ts\nvar _helper, _helperView, _writeByte, writeByte_fn, _writeFloat32, writeFloat32_fn, _writeFloat64, writeFloat64_fn, _writeUnsignedInt, writeUnsignedInt_fn, _writeString, writeString_fn;\nvar Writer = class {\n  constructor() {\n    __privateAdd(this, _writeByte);\n    __privateAdd(this, _writeFloat32);\n    __privateAdd(this, _writeFloat64);\n    __privateAdd(this, _writeUnsignedInt);\n    __privateAdd(this, _writeString);\n    this.pos = 0;\n    __privateAdd(this, _helper, new Uint8Array(8));\n    __privateAdd(this, _helperView, new DataView(__privateGet(this, _helper).buffer));\n    this.offsets = /* @__PURE__ */new WeakMap();\n    this.dataOffsets = /* @__PURE__ */new WeakMap();\n  }\n  seek(newPos) {\n    this.pos = newPos;\n  }\n  writeEBMLVarInt(value, width = measureEBMLVarInt(value)) {\n    let pos = 0;\n    switch (width) {\n      case 1:\n        __privateGet(this, _helperView).setUint8(pos++, 1 << 7 | value);\n        break;\n      case 2:\n        __privateGet(this, _helperView).setUint8(pos++, 1 << 6 | value >> 8);\n        __privateGet(this, _helperView).setUint8(pos++, value);\n        break;\n      case 3:\n        __privateGet(this, _helperView).setUint8(pos++, 1 << 5 | value >> 16);\n        __privateGet(this, _helperView).setUint8(pos++, value >> 8);\n        __privateGet(this, _helperView).setUint8(pos++, value);\n        break;\n      case 4:\n        __privateGet(this, _helperView).setUint8(pos++, 1 << 4 | value >> 24);\n        __privateGet(this, _helperView).setUint8(pos++, value >> 16);\n        __privateGet(this, _helperView).setUint8(pos++, value >> 8);\n        __privateGet(this, _helperView).setUint8(pos++, value);\n        break;\n      case 5:\n        __privateGet(this, _helperView).setUint8(pos++, 1 << 3 | value / 2 ** 32 & 7);\n        __privateGet(this, _helperView).setUint8(pos++, value >> 24);\n        __privateGet(this, _helperView).setUint8(pos++, value >> 16);\n        __privateGet(this, _helperView).setUint8(pos++, value >> 8);\n        __privateGet(this, _helperView).setUint8(pos++, value);\n        break;\n      case 6:\n        __privateGet(this, _helperView).setUint8(pos++, 1 << 2 | value / 2 ** 40 & 3);\n        __privateGet(this, _helperView).setUint8(pos++, value / 2 ** 32 | 0);\n        __privateGet(this, _helperView).setUint8(pos++, value >> 24);\n        __privateGet(this, _helperView).setUint8(pos++, value >> 16);\n        __privateGet(this, _helperView).setUint8(pos++, value >> 8);\n        __privateGet(this, _helperView).setUint8(pos++, value);\n        break;\n      default:\n        throw new Error(\"Bad EBML VINT size \" + width);\n    }\n    this.write(__privateGet(this, _helper).subarray(0, pos));\n  }\n  writeEBML(data) {\n    if (data === null) return;\n    if (data instanceof Uint8Array) {\n      this.write(data);\n    } else if (Array.isArray(data)) {\n      for (let elem of data) {\n        this.writeEBML(elem);\n      }\n    } else {\n      this.offsets.set(data, this.pos);\n      __privateMethod(this, _writeUnsignedInt, writeUnsignedInt_fn).call(this, data.id);\n      if (Array.isArray(data.data)) {\n        let sizePos = this.pos;\n        let sizeSize = data.size === -1 ? 1 : data.size ?? 4;\n        if (data.size === -1) {\n          __privateMethod(this, _writeByte, writeByte_fn).call(this, 255);\n        } else {\n          this.seek(this.pos + sizeSize);\n        }\n        let startPos = this.pos;\n        this.dataOffsets.set(data, startPos);\n        this.writeEBML(data.data);\n        if (data.size !== -1) {\n          let size = this.pos - startPos;\n          let endPos = this.pos;\n          this.seek(sizePos);\n          this.writeEBMLVarInt(size, sizeSize);\n          this.seek(endPos);\n        }\n      } else if (typeof data.data === \"number\") {\n        let size = data.size ?? measureUnsignedInt(data.data);\n        this.writeEBMLVarInt(size);\n        __privateMethod(this, _writeUnsignedInt, writeUnsignedInt_fn).call(this, data.data, size);\n      } else if (typeof data.data === \"string\") {\n        this.writeEBMLVarInt(data.data.length);\n        __privateMethod(this, _writeString, writeString_fn).call(this, data.data);\n      } else if (data.data instanceof Uint8Array) {\n        this.writeEBMLVarInt(data.data.byteLength, data.size);\n        this.write(data.data);\n      } else if (data.data instanceof EBMLFloat32) {\n        this.writeEBMLVarInt(4);\n        __privateMethod(this, _writeFloat32, writeFloat32_fn).call(this, data.data.value);\n      } else if (data.data instanceof EBMLFloat64) {\n        this.writeEBMLVarInt(8);\n        __privateMethod(this, _writeFloat64, writeFloat64_fn).call(this, data.data.value);\n      }\n    }\n  }\n};\n_helper = new WeakMap();\n_helperView = new WeakMap();\n_writeByte = new WeakSet();\nwriteByte_fn = function (value) {\n  __privateGet(this, _helperView).setUint8(0, value);\n  this.write(__privateGet(this, _helper).subarray(0, 1));\n};\n_writeFloat32 = new WeakSet();\nwriteFloat32_fn = function (value) {\n  __privateGet(this, _helperView).setFloat32(0, value, false);\n  this.write(__privateGet(this, _helper).subarray(0, 4));\n};\n_writeFloat64 = new WeakSet();\nwriteFloat64_fn = function (value) {\n  __privateGet(this, _helperView).setFloat64(0, value, false);\n  this.write(__privateGet(this, _helper));\n};\n_writeUnsignedInt = new WeakSet();\nwriteUnsignedInt_fn = function (value, width = measureUnsignedInt(value)) {\n  let pos = 0;\n  switch (width) {\n    case 6:\n      __privateGet(this, _helperView).setUint8(pos++, value / 2 ** 40 | 0);\n    case 5:\n      __privateGet(this, _helperView).setUint8(pos++, value / 2 ** 32 | 0);\n    case 4:\n      __privateGet(this, _helperView).setUint8(pos++, value >> 24);\n    case 3:\n      __privateGet(this, _helperView).setUint8(pos++, value >> 16);\n    case 2:\n      __privateGet(this, _helperView).setUint8(pos++, value >> 8);\n    case 1:\n      __privateGet(this, _helperView).setUint8(pos++, value);\n      break;\n    default:\n      throw new Error(\"Bad UINT size \" + width);\n  }\n  this.write(__privateGet(this, _helper).subarray(0, pos));\n};\n_writeString = new WeakSet();\nwriteString_fn = function (str) {\n  this.write(new Uint8Array(str.split(\"\").map(x => x.charCodeAt(0))));\n};\nvar _target, _buffer, _bytes, _ensureSize, ensureSize_fn;\nvar ArrayBufferTargetWriter = class extends Writer {\n  constructor(target) {\n    super();\n    __privateAdd(this, _ensureSize);\n    __privateAdd(this, _target, void 0);\n    __privateAdd(this, _buffer, new ArrayBuffer(2 ** 16));\n    __privateAdd(this, _bytes, new Uint8Array(__privateGet(this, _buffer)));\n    __privateSet(this, _target, target);\n  }\n  write(data) {\n    __privateMethod(this, _ensureSize, ensureSize_fn).call(this, this.pos + data.byteLength);\n    __privateGet(this, _bytes).set(data, this.pos);\n    this.pos += data.byteLength;\n  }\n  finalize() {\n    __privateMethod(this, _ensureSize, ensureSize_fn).call(this, this.pos);\n    __privateGet(this, _target).buffer = __privateGet(this, _buffer).slice(0, this.pos);\n  }\n};\n_target = new WeakMap();\n_buffer = new WeakMap();\n_bytes = new WeakMap();\n_ensureSize = new WeakSet();\nensureSize_fn = function (size) {\n  let newLength = __privateGet(this, _buffer).byteLength;\n  while (newLength < size) newLength *= 2;\n  if (newLength === __privateGet(this, _buffer).byteLength) return;\n  let newBuffer = new ArrayBuffer(newLength);\n  let newBytes = new Uint8Array(newBuffer);\n  newBytes.set(__privateGet(this, _bytes), 0);\n  __privateSet(this, _buffer, newBuffer);\n  __privateSet(this, _bytes, newBytes);\n};\nvar _trackingWrites, _trackedWrites, _trackedStart, _trackedEnd;\nvar BaseStreamTargetWriter = class extends Writer {\n  constructor(target) {\n    super();\n    this.target = target;\n    __privateAdd(this, _trackingWrites, false);\n    __privateAdd(this, _trackedWrites, void 0);\n    __privateAdd(this, _trackedStart, void 0);\n    __privateAdd(this, _trackedEnd, void 0);\n  }\n  write(data) {\n    if (!__privateGet(this, _trackingWrites)) return;\n    let pos = this.pos;\n    if (pos < __privateGet(this, _trackedStart)) {\n      if (pos + data.byteLength <= __privateGet(this, _trackedStart)) return;\n      data = data.subarray(__privateGet(this, _trackedStart) - pos);\n      pos = 0;\n    }\n    let neededSize = pos + data.byteLength - __privateGet(this, _trackedStart);\n    let newLength = __privateGet(this, _trackedWrites).byteLength;\n    while (newLength < neededSize) newLength *= 2;\n    if (newLength !== __privateGet(this, _trackedWrites).byteLength) {\n      let copy = new Uint8Array(newLength);\n      copy.set(__privateGet(this, _trackedWrites), 0);\n      __privateSet(this, _trackedWrites, copy);\n    }\n    __privateGet(this, _trackedWrites).set(data, pos - __privateGet(this, _trackedStart));\n    __privateSet(this, _trackedEnd, Math.max(__privateGet(this, _trackedEnd), pos + data.byteLength));\n  }\n  startTrackingWrites() {\n    __privateSet(this, _trackingWrites, true);\n    __privateSet(this, _trackedWrites, new Uint8Array(2 ** 10));\n    __privateSet(this, _trackedStart, this.pos);\n    __privateSet(this, _trackedEnd, this.pos);\n  }\n  getTrackedWrites() {\n    if (!__privateGet(this, _trackingWrites)) {\n      throw new Error(\"Can't get tracked writes since nothing was tracked.\");\n    }\n    let slice = __privateGet(this, _trackedWrites).subarray(0, __privateGet(this, _trackedEnd) - __privateGet(this, _trackedStart));\n    let result = {\n      data: slice,\n      start: __privateGet(this, _trackedStart),\n      end: __privateGet(this, _trackedEnd)\n    };\n    __privateSet(this, _trackedWrites, void 0);\n    __privateSet(this, _trackingWrites, false);\n    return result;\n  }\n};\n_trackingWrites = new WeakMap();\n_trackedWrites = new WeakMap();\n_trackedStart = new WeakMap();\n_trackedEnd = new WeakMap();\nvar DEFAULT_CHUNK_SIZE = 2 ** 24;\nvar MAX_CHUNKS_AT_ONCE = 2;\nvar _sections, _lastFlushEnd, _ensureMonotonicity, _chunked, _chunkSize, _chunks, _writeDataIntoChunks, writeDataIntoChunks_fn, _insertSectionIntoChunk, insertSectionIntoChunk_fn, _createChunk, createChunk_fn, _flushChunks, flushChunks_fn;\nvar StreamTargetWriter = class extends BaseStreamTargetWriter {\n  constructor(target, ensureMonotonicity) {\n    super(target);\n    __privateAdd(this, _writeDataIntoChunks);\n    __privateAdd(this, _insertSectionIntoChunk);\n    __privateAdd(this, _createChunk);\n    __privateAdd(this, _flushChunks);\n    __privateAdd(this, _sections, []);\n    __privateAdd(this, _lastFlushEnd, 0);\n    __privateAdd(this, _ensureMonotonicity, void 0);\n    __privateAdd(this, _chunked, void 0);\n    __privateAdd(this, _chunkSize, void 0);\n    __privateAdd(this, _chunks, []);\n    __privateSet(this, _ensureMonotonicity, ensureMonotonicity);\n    __privateSet(this, _chunked, target.options?.chunked ?? false);\n    __privateSet(this, _chunkSize, target.options?.chunkSize ?? DEFAULT_CHUNK_SIZE);\n  }\n  write(data) {\n    super.write(data);\n    __privateGet(this, _sections).push({\n      data: data.slice(),\n      start: this.pos\n    });\n    this.pos += data.byteLength;\n  }\n  flush() {\n    if (__privateGet(this, _sections).length === 0) return;\n    let chunks = [];\n    let sorted = [...__privateGet(this, _sections)].sort((a, b) => a.start - b.start);\n    chunks.push({\n      start: sorted[0].start,\n      size: sorted[0].data.byteLength\n    });\n    for (let i = 1; i < sorted.length; i++) {\n      let lastChunk = chunks[chunks.length - 1];\n      let section = sorted[i];\n      if (section.start <= lastChunk.start + lastChunk.size) {\n        lastChunk.size = Math.max(lastChunk.size, section.start + section.data.byteLength - lastChunk.start);\n      } else {\n        chunks.push({\n          start: section.start,\n          size: section.data.byteLength\n        });\n      }\n    }\n    for (let chunk of chunks) {\n      chunk.data = new Uint8Array(chunk.size);\n      for (let section of __privateGet(this, _sections)) {\n        if (chunk.start <= section.start && section.start < chunk.start + chunk.size) {\n          chunk.data.set(section.data, section.start - chunk.start);\n        }\n      }\n      if (__privateGet(this, _chunked)) {\n        __privateMethod(this, _writeDataIntoChunks, writeDataIntoChunks_fn).call(this, chunk.data, chunk.start);\n        __privateMethod(this, _flushChunks, flushChunks_fn).call(this);\n      } else {\n        if (__privateGet(this, _ensureMonotonicity) && chunk.start < __privateGet(this, _lastFlushEnd)) {\n          throw new Error(\"Internal error: Monotonicity violation.\");\n        }\n        this.target.options.onData?.(chunk.data, chunk.start);\n        __privateSet(this, _lastFlushEnd, chunk.start + chunk.data.byteLength);\n      }\n    }\n    __privateGet(this, _sections).length = 0;\n  }\n  finalize() {\n    if (__privateGet(this, _chunked)) {\n      __privateMethod(this, _flushChunks, flushChunks_fn).call(this, true);\n    }\n  }\n};\n_sections = new WeakMap();\n_lastFlushEnd = new WeakMap();\n_ensureMonotonicity = new WeakMap();\n_chunked = new WeakMap();\n_chunkSize = new WeakMap();\n_chunks = new WeakMap();\n_writeDataIntoChunks = new WeakSet();\nwriteDataIntoChunks_fn = function (data, position) {\n  let chunkIndex = __privateGet(this, _chunks).findIndex(x => x.start <= position && position < x.start + __privateGet(this, _chunkSize));\n  if (chunkIndex === -1) chunkIndex = __privateMethod(this, _createChunk, createChunk_fn).call(this, position);\n  let chunk = __privateGet(this, _chunks)[chunkIndex];\n  let relativePosition = position - chunk.start;\n  let toWrite = data.subarray(0, Math.min(__privateGet(this, _chunkSize) - relativePosition, data.byteLength));\n  chunk.data.set(toWrite, relativePosition);\n  let section = {\n    start: relativePosition,\n    end: relativePosition + toWrite.byteLength\n  };\n  __privateMethod(this, _insertSectionIntoChunk, insertSectionIntoChunk_fn).call(this, chunk, section);\n  if (chunk.written[0].start === 0 && chunk.written[0].end === __privateGet(this, _chunkSize)) {\n    chunk.shouldFlush = true;\n  }\n  if (__privateGet(this, _chunks).length > MAX_CHUNKS_AT_ONCE) {\n    for (let i = 0; i < __privateGet(this, _chunks).length - 1; i++) {\n      __privateGet(this, _chunks)[i].shouldFlush = true;\n    }\n    __privateMethod(this, _flushChunks, flushChunks_fn).call(this);\n  }\n  if (toWrite.byteLength < data.byteLength) {\n    __privateMethod(this, _writeDataIntoChunks, writeDataIntoChunks_fn).call(this, data.subarray(toWrite.byteLength), position + toWrite.byteLength);\n  }\n};\n_insertSectionIntoChunk = new WeakSet();\ninsertSectionIntoChunk_fn = function (chunk, section) {\n  let low = 0;\n  let high = chunk.written.length - 1;\n  let index = -1;\n  while (low <= high) {\n    let mid = Math.floor(low + (high - low + 1) / 2);\n    if (chunk.written[mid].start <= section.start) {\n      low = mid + 1;\n      index = mid;\n    } else {\n      high = mid - 1;\n    }\n  }\n  chunk.written.splice(index + 1, 0, section);\n  if (index === -1 || chunk.written[index].end < section.start) index++;\n  while (index < chunk.written.length - 1 && chunk.written[index].end >= chunk.written[index + 1].start) {\n    chunk.written[index].end = Math.max(chunk.written[index].end, chunk.written[index + 1].end);\n    chunk.written.splice(index + 1, 1);\n  }\n};\n_createChunk = new WeakSet();\ncreateChunk_fn = function (includesPosition) {\n  let start = Math.floor(includesPosition / __privateGet(this, _chunkSize)) * __privateGet(this, _chunkSize);\n  let chunk = {\n    start,\n    data: new Uint8Array(__privateGet(this, _chunkSize)),\n    written: [],\n    shouldFlush: false\n  };\n  __privateGet(this, _chunks).push(chunk);\n  __privateGet(this, _chunks).sort((a, b) => a.start - b.start);\n  return __privateGet(this, _chunks).indexOf(chunk);\n};\n_flushChunks = new WeakSet();\nflushChunks_fn = function (force = false) {\n  for (let i = 0; i < __privateGet(this, _chunks).length; i++) {\n    let chunk = __privateGet(this, _chunks)[i];\n    if (!chunk.shouldFlush && !force) continue;\n    for (let section of chunk.written) {\n      if (__privateGet(this, _ensureMonotonicity) && chunk.start + section.start < __privateGet(this, _lastFlushEnd)) {\n        throw new Error(\"Internal error: Monotonicity violation.\");\n      }\n      this.target.options.onData?.(chunk.data.subarray(section.start, section.end), chunk.start + section.start);\n      __privateSet(this, _lastFlushEnd, chunk.start + section.end);\n    }\n    __privateGet(this, _chunks).splice(i--, 1);\n  }\n};\nvar FileSystemWritableFileStreamTargetWriter = class extends StreamTargetWriter {\n  constructor(target, ensureMonotonicity) {\n    super(new StreamTarget({\n      onData: (data, position) => target.stream.write({\n        type: \"write\",\n        data,\n        position\n      }),\n      chunked: true,\n      chunkSize: target.options?.chunkSize\n    }), ensureMonotonicity);\n  }\n};\n\n// src/muxer.ts\nvar VIDEO_TRACK_NUMBER = 1;\nvar AUDIO_TRACK_NUMBER = 2;\nvar SUBTITLE_TRACK_NUMBER = 3;\nvar VIDEO_TRACK_TYPE = 1;\nvar AUDIO_TRACK_TYPE = 2;\nvar SUBTITLE_TRACK_TYPE = 17;\nvar MAX_CHUNK_LENGTH_MS = 2 ** 15;\nvar CODEC_PRIVATE_MAX_SIZE = 2 ** 13;\nvar APP_NAME = \"https://github.com/Vanilagy/webm-muxer\";\nvar SEGMENT_SIZE_BYTES = 6;\nvar CLUSTER_SIZE_BYTES = 5;\nvar FIRST_TIMESTAMP_BEHAVIORS = [\"strict\", \"offset\", \"permissive\"];\nvar _options, _writer, _segment, _segmentInfo, _seekHead, _tracksElement, _segmentDuration, _colourElement, _videoCodecPrivate, _audioCodecPrivate, _subtitleCodecPrivate, _cues, _currentCluster, _currentClusterTimestamp, _duration, _videoChunkQueue, _audioChunkQueue, _subtitleChunkQueue, _firstVideoTimestamp, _firstAudioTimestamp, _lastVideoTimestamp, _lastAudioTimestamp, _lastSubtitleTimestamp, _colorSpace, _finalized, _validateOptions, validateOptions_fn, _createFileHeader, createFileHeader_fn, _writeEBMLHeader, writeEBMLHeader_fn, _createCodecPrivatePlaceholders, createCodecPrivatePlaceholders_fn, _createColourElement, createColourElement_fn, _createSeekHead, createSeekHead_fn, _createSegmentInfo, createSegmentInfo_fn, _createTracks, createTracks_fn, _createSegment, createSegment_fn, _createCues, createCues_fn, _maybeFlushStreamingTargetWriter, maybeFlushStreamingTargetWriter_fn, _segmentDataOffset, segmentDataOffset_get, _writeVideoDecoderConfig, writeVideoDecoderConfig_fn, _fixVP9ColorSpace, fixVP9ColorSpace_fn, _writeSubtitleChunks, writeSubtitleChunks_fn, _createInternalChunk, createInternalChunk_fn, _validateTimestamp, validateTimestamp_fn, _writeBlock, writeBlock_fn, _createCodecPrivateElement, createCodecPrivateElement_fn, _writeCodecPrivate, writeCodecPrivate_fn, _createNewCluster, createNewCluster_fn, _finalizeCurrentCluster, finalizeCurrentCluster_fn, _ensureNotFinalized, ensureNotFinalized_fn;\nvar Muxer = class {\n  constructor(options) {\n    __privateAdd(this, _validateOptions);\n    __privateAdd(this, _createFileHeader);\n    __privateAdd(this, _writeEBMLHeader);\n    __privateAdd(this, _createCodecPrivatePlaceholders);\n    __privateAdd(this, _createColourElement);\n    __privateAdd(this, _createSeekHead);\n    __privateAdd(this, _createSegmentInfo);\n    __privateAdd(this, _createTracks);\n    __privateAdd(this, _createSegment);\n    __privateAdd(this, _createCues);\n    __privateAdd(this, _maybeFlushStreamingTargetWriter);\n    __privateAdd(this, _segmentDataOffset);\n    __privateAdd(this, _writeVideoDecoderConfig);\n    __privateAdd(this, _fixVP9ColorSpace);\n    __privateAdd(this, _writeSubtitleChunks);\n    __privateAdd(this, _createInternalChunk);\n    __privateAdd(this, _validateTimestamp);\n    __privateAdd(this, _writeBlock);\n    __privateAdd(this, _createCodecPrivateElement);\n    __privateAdd(this, _writeCodecPrivate);\n    __privateAdd(this, _createNewCluster);\n    __privateAdd(this, _finalizeCurrentCluster);\n    __privateAdd(this, _ensureNotFinalized);\n    __privateAdd(this, _options, void 0);\n    __privateAdd(this, _writer, void 0);\n    __privateAdd(this, _segment, void 0);\n    __privateAdd(this, _segmentInfo, void 0);\n    __privateAdd(this, _seekHead, void 0);\n    __privateAdd(this, _tracksElement, void 0);\n    __privateAdd(this, _segmentDuration, void 0);\n    __privateAdd(this, _colourElement, void 0);\n    __privateAdd(this, _videoCodecPrivate, void 0);\n    __privateAdd(this, _audioCodecPrivate, void 0);\n    __privateAdd(this, _subtitleCodecPrivate, void 0);\n    __privateAdd(this, _cues, void 0);\n    __privateAdd(this, _currentCluster, void 0);\n    __privateAdd(this, _currentClusterTimestamp, void 0);\n    __privateAdd(this, _duration, 0);\n    __privateAdd(this, _videoChunkQueue, []);\n    __privateAdd(this, _audioChunkQueue, []);\n    __privateAdd(this, _subtitleChunkQueue, []);\n    __privateAdd(this, _firstVideoTimestamp, void 0);\n    __privateAdd(this, _firstAudioTimestamp, void 0);\n    __privateAdd(this, _lastVideoTimestamp, -1);\n    __privateAdd(this, _lastAudioTimestamp, -1);\n    __privateAdd(this, _lastSubtitleTimestamp, -1);\n    __privateAdd(this, _colorSpace, void 0);\n    __privateAdd(this, _finalized, false);\n    __privateMethod(this, _validateOptions, validateOptions_fn).call(this, options);\n    __privateSet(this, _options, {\n      type: \"webm\",\n      firstTimestampBehavior: \"strict\",\n      ...options\n    });\n    this.target = options.target;\n    let ensureMonotonicity = !!__privateGet(this, _options).streaming;\n    if (options.target instanceof ArrayBufferTarget) {\n      __privateSet(this, _writer, new ArrayBufferTargetWriter(options.target));\n    } else if (options.target instanceof StreamTarget) {\n      __privateSet(this, _writer, new StreamTargetWriter(options.target, ensureMonotonicity));\n    } else if (options.target instanceof FileSystemWritableFileStreamTarget) {\n      __privateSet(this, _writer, new FileSystemWritableFileStreamTargetWriter(options.target, ensureMonotonicity));\n    } else {\n      throw new Error(`Invalid target: ${options.target}`);\n    }\n    __privateMethod(this, _createFileHeader, createFileHeader_fn).call(this);\n  }\n  addVideoChunk(chunk, meta, timestamp) {\n    if (!(chunk instanceof EncodedVideoChunk)) {\n      throw new TypeError(\"addVideoChunk's first argument (chunk) must be of type EncodedVideoChunk.\");\n    }\n    if (meta && typeof meta !== \"object\") {\n      throw new TypeError(\"addVideoChunk's second argument (meta), when provided, must be an object.\");\n    }\n    if (timestamp !== void 0 && (!Number.isFinite(timestamp) || timestamp < 0)) {\n      throw new TypeError(\"addVideoChunk's third argument (timestamp), when provided, must be a non-negative real number.\");\n    }\n    let data = new Uint8Array(chunk.byteLength);\n    chunk.copyTo(data);\n    this.addVideoChunkRaw(data, chunk.type, timestamp ?? chunk.timestamp, meta);\n  }\n  addVideoChunkRaw(data, type, timestamp, meta) {\n    if (!(data instanceof Uint8Array)) {\n      throw new TypeError(\"addVideoChunkRaw's first argument (data) must be an instance of Uint8Array.\");\n    }\n    if (type !== \"key\" && type !== \"delta\") {\n      throw new TypeError(\"addVideoChunkRaw's second argument (type) must be either 'key' or 'delta'.\");\n    }\n    if (!Number.isFinite(timestamp) || timestamp < 0) {\n      throw new TypeError(\"addVideoChunkRaw's third argument (timestamp) must be a non-negative real number.\");\n    }\n    if (meta && typeof meta !== \"object\") {\n      throw new TypeError(\"addVideoChunkRaw's fourth argument (meta), when provided, must be an object.\");\n    }\n    __privateMethod(this, _ensureNotFinalized, ensureNotFinalized_fn).call(this);\n    if (!__privateGet(this, _options).video) throw new Error(\"No video track declared.\");\n    if (__privateGet(this, _firstVideoTimestamp) === void 0) __privateSet(this, _firstVideoTimestamp, timestamp);\n    if (meta) __privateMethod(this, _writeVideoDecoderConfig, writeVideoDecoderConfig_fn).call(this, meta);\n    let videoChunk = __privateMethod(this, _createInternalChunk, createInternalChunk_fn).call(this, data, type, timestamp, VIDEO_TRACK_NUMBER);\n    if (__privateGet(this, _options).video.codec === \"V_VP9\") __privateMethod(this, _fixVP9ColorSpace, fixVP9ColorSpace_fn).call(this, videoChunk);\n    __privateSet(this, _lastVideoTimestamp, videoChunk.timestamp);\n    while (__privateGet(this, _audioChunkQueue).length > 0 && __privateGet(this, _audioChunkQueue)[0].timestamp <= videoChunk.timestamp) {\n      let audioChunk = __privateGet(this, _audioChunkQueue).shift();\n      __privateMethod(this, _writeBlock, writeBlock_fn).call(this, audioChunk, false);\n    }\n    if (!__privateGet(this, _options).audio || videoChunk.timestamp <= __privateGet(this, _lastAudioTimestamp)) {\n      __privateMethod(this, _writeBlock, writeBlock_fn).call(this, videoChunk, true);\n    } else {\n      __privateGet(this, _videoChunkQueue).push(videoChunk);\n    }\n    __privateMethod(this, _writeSubtitleChunks, writeSubtitleChunks_fn).call(this);\n    __privateMethod(this, _maybeFlushStreamingTargetWriter, maybeFlushStreamingTargetWriter_fn).call(this);\n  }\n  addAudioChunk(chunk, meta, timestamp) {\n    if (!(chunk instanceof EncodedAudioChunk)) {\n      throw new TypeError(\"addAudioChunk's first argument (chunk) must be of type EncodedAudioChunk.\");\n    }\n    if (meta && typeof meta !== \"object\") {\n      throw new TypeError(\"addAudioChunk's second argument (meta), when provided, must be an object.\");\n    }\n    if (timestamp !== void 0 && (!Number.isFinite(timestamp) || timestamp < 0)) {\n      throw new TypeError(\"addAudioChunk's third argument (timestamp), when provided, must be a non-negative real number.\");\n    }\n    let data = new Uint8Array(chunk.byteLength);\n    chunk.copyTo(data);\n    this.addAudioChunkRaw(data, chunk.type, timestamp ?? chunk.timestamp, meta);\n  }\n  addAudioChunkRaw(data, type, timestamp, meta) {\n    if (!(data instanceof Uint8Array)) {\n      throw new TypeError(\"addAudioChunkRaw's first argument (data) must be an instance of Uint8Array.\");\n    }\n    if (type !== \"key\" && type !== \"delta\") {\n      throw new TypeError(\"addAudioChunkRaw's second argument (type) must be either 'key' or 'delta'.\");\n    }\n    if (!Number.isFinite(timestamp) || timestamp < 0) {\n      throw new TypeError(\"addAudioChunkRaw's third argument (timestamp) must be a non-negative real number.\");\n    }\n    if (meta && typeof meta !== \"object\") {\n      throw new TypeError(\"addAudioChunkRaw's fourth argument (meta), when provided, must be an object.\");\n    }\n    __privateMethod(this, _ensureNotFinalized, ensureNotFinalized_fn).call(this);\n    if (!__privateGet(this, _options).audio) throw new Error(\"No audio track declared.\");\n    if (__privateGet(this, _firstAudioTimestamp) === void 0) __privateSet(this, _firstAudioTimestamp, timestamp);\n    if (meta?.decoderConfig) {\n      if (__privateGet(this, _options).streaming) {\n        __privateSet(this, _audioCodecPrivate, __privateMethod(this, _createCodecPrivateElement, createCodecPrivateElement_fn).call(this, meta.decoderConfig.description));\n      } else {\n        __privateMethod(this, _writeCodecPrivate, writeCodecPrivate_fn).call(this, __privateGet(this, _audioCodecPrivate), meta.decoderConfig.description);\n      }\n    }\n    let audioChunk = __privateMethod(this, _createInternalChunk, createInternalChunk_fn).call(this, data, type, timestamp, AUDIO_TRACK_NUMBER);\n    __privateSet(this, _lastAudioTimestamp, audioChunk.timestamp);\n    while (__privateGet(this, _videoChunkQueue).length > 0 && __privateGet(this, _videoChunkQueue)[0].timestamp <= audioChunk.timestamp) {\n      let videoChunk = __privateGet(this, _videoChunkQueue).shift();\n      __privateMethod(this, _writeBlock, writeBlock_fn).call(this, videoChunk, true);\n    }\n    if (!__privateGet(this, _options).video || audioChunk.timestamp <= __privateGet(this, _lastVideoTimestamp)) {\n      __privateMethod(this, _writeBlock, writeBlock_fn).call(this, audioChunk, !__privateGet(this, _options).video);\n    } else {\n      __privateGet(this, _audioChunkQueue).push(audioChunk);\n    }\n    __privateMethod(this, _writeSubtitleChunks, writeSubtitleChunks_fn).call(this);\n    __privateMethod(this, _maybeFlushStreamingTargetWriter, maybeFlushStreamingTargetWriter_fn).call(this);\n  }\n  addSubtitleChunk(chunk, meta, timestamp) {\n    if (typeof chunk !== \"object\" || !chunk) {\n      throw new TypeError(\"addSubtitleChunk's first argument (chunk) must be an object.\");\n    } else {\n      if (!(chunk.body instanceof Uint8Array)) {\n        throw new TypeError(\"body must be an instance of Uint8Array.\");\n      }\n      if (!Number.isFinite(chunk.timestamp) || chunk.timestamp < 0) {\n        throw new TypeError(\"timestamp must be a non-negative real number.\");\n      }\n      if (!Number.isFinite(chunk.duration) || chunk.duration < 0) {\n        throw new TypeError(\"duration must be a non-negative real number.\");\n      }\n      if (chunk.additions && !(chunk.additions instanceof Uint8Array)) {\n        throw new TypeError(\"additions, when present, must be an instance of Uint8Array.\");\n      }\n    }\n    if (typeof meta !== \"object\") {\n      throw new TypeError(\"addSubtitleChunk's second argument (meta) must be an object.\");\n    }\n    __privateMethod(this, _ensureNotFinalized, ensureNotFinalized_fn).call(this);\n    if (!__privateGet(this, _options).subtitles) throw new Error(\"No subtitle track declared.\");\n    if (meta?.decoderConfig) {\n      if (__privateGet(this, _options).streaming) {\n        __privateSet(this, _subtitleCodecPrivate, __privateMethod(this, _createCodecPrivateElement, createCodecPrivateElement_fn).call(this, meta.decoderConfig.description));\n      } else {\n        __privateMethod(this, _writeCodecPrivate, writeCodecPrivate_fn).call(this, __privateGet(this, _subtitleCodecPrivate), meta.decoderConfig.description);\n      }\n    }\n    let subtitleChunk = __privateMethod(this, _createInternalChunk, createInternalChunk_fn).call(this, chunk.body, \"key\", timestamp ?? chunk.timestamp, SUBTITLE_TRACK_NUMBER, chunk.duration, chunk.additions);\n    __privateSet(this, _lastSubtitleTimestamp, subtitleChunk.timestamp);\n    __privateGet(this, _subtitleChunkQueue).push(subtitleChunk);\n    __privateMethod(this, _writeSubtitleChunks, writeSubtitleChunks_fn).call(this);\n    __privateMethod(this, _maybeFlushStreamingTargetWriter, maybeFlushStreamingTargetWriter_fn).call(this);\n  }\n  finalize() {\n    if (__privateGet(this, _finalized)) {\n      throw new Error(\"Cannot finalize a muxer more than once.\");\n    }\n    while (__privateGet(this, _videoChunkQueue).length > 0) __privateMethod(this, _writeBlock, writeBlock_fn).call(this, __privateGet(this, _videoChunkQueue).shift(), true);\n    while (__privateGet(this, _audioChunkQueue).length > 0) __privateMethod(this, _writeBlock, writeBlock_fn).call(this, __privateGet(this, _audioChunkQueue).shift(), true);\n    while (__privateGet(this, _subtitleChunkQueue).length > 0 && __privateGet(this, _subtitleChunkQueue)[0].timestamp <= __privateGet(this, _duration)) {\n      __privateMethod(this, _writeBlock, writeBlock_fn).call(this, __privateGet(this, _subtitleChunkQueue).shift(), false);\n    }\n    if (__privateGet(this, _currentCluster)) {\n      __privateMethod(this, _finalizeCurrentCluster, finalizeCurrentCluster_fn).call(this);\n    }\n    __privateGet(this, _writer).writeEBML(__privateGet(this, _cues));\n    if (!__privateGet(this, _options).streaming) {\n      let endPos = __privateGet(this, _writer).pos;\n      let segmentSize = __privateGet(this, _writer).pos - __privateGet(this, _segmentDataOffset, segmentDataOffset_get);\n      __privateGet(this, _writer).seek(__privateGet(this, _writer).offsets.get(__privateGet(this, _segment)) + 4);\n      __privateGet(this, _writer).writeEBMLVarInt(segmentSize, SEGMENT_SIZE_BYTES);\n      __privateGet(this, _segmentDuration).data = new EBMLFloat64(__privateGet(this, _duration));\n      __privateGet(this, _writer).seek(__privateGet(this, _writer).offsets.get(__privateGet(this, _segmentDuration)));\n      __privateGet(this, _writer).writeEBML(__privateGet(this, _segmentDuration));\n      __privateGet(this, _seekHead).data[0].data[1].data = __privateGet(this, _writer).offsets.get(__privateGet(this, _cues)) - __privateGet(this, _segmentDataOffset, segmentDataOffset_get);\n      __privateGet(this, _seekHead).data[1].data[1].data = __privateGet(this, _writer).offsets.get(__privateGet(this, _segmentInfo)) - __privateGet(this, _segmentDataOffset, segmentDataOffset_get);\n      __privateGet(this, _seekHead).data[2].data[1].data = __privateGet(this, _writer).offsets.get(__privateGet(this, _tracksElement)) - __privateGet(this, _segmentDataOffset, segmentDataOffset_get);\n      __privateGet(this, _writer).seek(__privateGet(this, _writer).offsets.get(__privateGet(this, _seekHead)));\n      __privateGet(this, _writer).writeEBML(__privateGet(this, _seekHead));\n      __privateGet(this, _writer).seek(endPos);\n    }\n    __privateMethod(this, _maybeFlushStreamingTargetWriter, maybeFlushStreamingTargetWriter_fn).call(this);\n    __privateGet(this, _writer).finalize();\n    __privateSet(this, _finalized, true);\n  }\n};\n_options = new WeakMap();\n_writer = new WeakMap();\n_segment = new WeakMap();\n_segmentInfo = new WeakMap();\n_seekHead = new WeakMap();\n_tracksElement = new WeakMap();\n_segmentDuration = new WeakMap();\n_colourElement = new WeakMap();\n_videoCodecPrivate = new WeakMap();\n_audioCodecPrivate = new WeakMap();\n_subtitleCodecPrivate = new WeakMap();\n_cues = new WeakMap();\n_currentCluster = new WeakMap();\n_currentClusterTimestamp = new WeakMap();\n_duration = new WeakMap();\n_videoChunkQueue = new WeakMap();\n_audioChunkQueue = new WeakMap();\n_subtitleChunkQueue = new WeakMap();\n_firstVideoTimestamp = new WeakMap();\n_firstAudioTimestamp = new WeakMap();\n_lastVideoTimestamp = new WeakMap();\n_lastAudioTimestamp = new WeakMap();\n_lastSubtitleTimestamp = new WeakMap();\n_colorSpace = new WeakMap();\n_finalized = new WeakMap();\n_validateOptions = new WeakSet();\nvalidateOptions_fn = function (options) {\n  if (typeof options !== \"object\") {\n    throw new TypeError(\"The muxer requires an options object to be passed to its constructor.\");\n  }\n  if (!(options.target instanceof Target)) {\n    throw new TypeError(\"The target must be provided and an instance of Target.\");\n  }\n  if (options.video) {\n    if (typeof options.video.codec !== \"string\") {\n      throw new TypeError(`Invalid video codec: ${options.video.codec}. Must be a string.`);\n    }\n    if (!Number.isInteger(options.video.width) || options.video.width <= 0) {\n      throw new TypeError(`Invalid video width: ${options.video.width}. Must be a positive integer.`);\n    }\n    if (!Number.isInteger(options.video.height) || options.video.height <= 0) {\n      throw new TypeError(`Invalid video height: ${options.video.height}. Must be a positive integer.`);\n    }\n    if (options.video.frameRate !== void 0) {\n      if (!Number.isFinite(options.video.frameRate) || options.video.frameRate <= 0) {\n        throw new TypeError(`Invalid video frame rate: ${options.video.frameRate}. Must be a positive number.`);\n      }\n    }\n    if (options.video.alpha !== void 0 && typeof options.video.alpha !== \"boolean\") {\n      throw new TypeError(`Invalid video alpha: ${options.video.alpha}. Must be a boolean.`);\n    }\n  }\n  if (options.audio) {\n    if (typeof options.audio.codec !== \"string\") {\n      throw new TypeError(`Invalid audio codec: ${options.audio.codec}. Must be a string.`);\n    }\n    if (!Number.isInteger(options.audio.numberOfChannels) || options.audio.numberOfChannels <= 0) {\n      throw new TypeError(`Invalid number of audio channels: ${options.audio.numberOfChannels}. Must be a positive integer.`);\n    }\n    if (!Number.isInteger(options.audio.sampleRate) || options.audio.sampleRate <= 0) {\n      throw new TypeError(`Invalid audio sample rate: ${options.audio.sampleRate}. Must be a positive integer.`);\n    }\n    if (options.audio.bitDepth !== void 0) {\n      if (!Number.isInteger(options.audio.bitDepth) || options.audio.bitDepth <= 0) {\n        throw new TypeError(`Invalid audio bit depth: ${options.audio.bitDepth}. Must be a positive integer.`);\n      }\n    }\n  }\n  if (options.subtitles) {\n    if (typeof options.subtitles.codec !== \"string\") {\n      throw new TypeError(`Invalid subtitles codec: ${options.subtitles.codec}. Must be a string.`);\n    }\n  }\n  if (options.type !== void 0 && ![\"webm\", \"matroska\"].includes(options.type)) {\n    throw new TypeError(`Invalid type: ${options.type}. Must be 'webm' or 'matroska'.`);\n  }\n  if (options.firstTimestampBehavior && !FIRST_TIMESTAMP_BEHAVIORS.includes(options.firstTimestampBehavior)) {\n    throw new TypeError(`Invalid first timestamp behavior: ${options.firstTimestampBehavior}`);\n  }\n  if (options.streaming !== void 0 && typeof options.streaming !== \"boolean\") {\n    throw new TypeError(`Invalid streaming option: ${options.streaming}. Must be a boolean.`);\n  }\n};\n_createFileHeader = new WeakSet();\ncreateFileHeader_fn = function () {\n  if (__privateGet(this, _writer) instanceof BaseStreamTargetWriter && __privateGet(this, _writer).target.options.onHeader) {\n    __privateGet(this, _writer).startTrackingWrites();\n  }\n  __privateMethod(this, _writeEBMLHeader, writeEBMLHeader_fn).call(this);\n  if (!__privateGet(this, _options).streaming) {\n    __privateMethod(this, _createSeekHead, createSeekHead_fn).call(this);\n  }\n  __privateMethod(this, _createSegmentInfo, createSegmentInfo_fn).call(this);\n  __privateMethod(this, _createCodecPrivatePlaceholders, createCodecPrivatePlaceholders_fn).call(this);\n  __privateMethod(this, _createColourElement, createColourElement_fn).call(this);\n  if (!__privateGet(this, _options).streaming) {\n    __privateMethod(this, _createTracks, createTracks_fn).call(this);\n    __privateMethod(this, _createSegment, createSegment_fn).call(this);\n  } else {}\n  __privateMethod(this, _createCues, createCues_fn).call(this);\n  __privateMethod(this, _maybeFlushStreamingTargetWriter, maybeFlushStreamingTargetWriter_fn).call(this);\n};\n_writeEBMLHeader = new WeakSet();\nwriteEBMLHeader_fn = function () {\n  let ebmlHeader = {\n    id: 440786851 /* EBML */,\n    data: [{\n      id: 17030 /* EBMLVersion */,\n      data: 1\n    }, {\n      id: 17143 /* EBMLReadVersion */,\n      data: 1\n    }, {\n      id: 17138 /* EBMLMaxIDLength */,\n      data: 4\n    }, {\n      id: 17139 /* EBMLMaxSizeLength */,\n      data: 8\n    }, {\n      id: 17026 /* DocType */,\n      data: __privateGet(this, _options).type ?? \"webm\"\n    }, {\n      id: 17031 /* DocTypeVersion */,\n      data: 2\n    }, {\n      id: 17029 /* DocTypeReadVersion */,\n      data: 2\n    }]\n  };\n  __privateGet(this, _writer).writeEBML(ebmlHeader);\n};\n_createCodecPrivatePlaceholders = new WeakSet();\ncreateCodecPrivatePlaceholders_fn = function () {\n  __privateSet(this, _videoCodecPrivate, {\n    id: 236 /* Void */,\n    size: 4,\n    data: new Uint8Array(CODEC_PRIVATE_MAX_SIZE)\n  });\n  __privateSet(this, _audioCodecPrivate, {\n    id: 236 /* Void */,\n    size: 4,\n    data: new Uint8Array(CODEC_PRIVATE_MAX_SIZE)\n  });\n  __privateSet(this, _subtitleCodecPrivate, {\n    id: 236 /* Void */,\n    size: 4,\n    data: new Uint8Array(CODEC_PRIVATE_MAX_SIZE)\n  });\n};\n_createColourElement = new WeakSet();\ncreateColourElement_fn = function () {\n  __privateSet(this, _colourElement, {\n    id: 21936 /* Colour */,\n    data: [{\n      id: 21937 /* MatrixCoefficients */,\n      data: 2\n    }, {\n      id: 21946 /* TransferCharacteristics */,\n      data: 2\n    }, {\n      id: 21947 /* Primaries */,\n      data: 2\n    }, {\n      id: 21945 /* Range */,\n      data: 0\n    }]\n  });\n};\n_createSeekHead = new WeakSet();\ncreateSeekHead_fn = function () {\n  const kaxCues = new Uint8Array([28, 83, 187, 107]);\n  const kaxInfo = new Uint8Array([21, 73, 169, 102]);\n  const kaxTracks = new Uint8Array([22, 84, 174, 107]);\n  let seekHead = {\n    id: 290298740 /* SeekHead */,\n    data: [{\n      id: 19899 /* Seek */,\n      data: [{\n        id: 21419 /* SeekID */,\n        data: kaxCues\n      }, {\n        id: 21420 /* SeekPosition */,\n        size: 5,\n        data: 0\n      }]\n    }, {\n      id: 19899 /* Seek */,\n      data: [{\n        id: 21419 /* SeekID */,\n        data: kaxInfo\n      }, {\n        id: 21420 /* SeekPosition */,\n        size: 5,\n        data: 0\n      }]\n    }, {\n      id: 19899 /* Seek */,\n      data: [{\n        id: 21419 /* SeekID */,\n        data: kaxTracks\n      }, {\n        id: 21420 /* SeekPosition */,\n        size: 5,\n        data: 0\n      }]\n    }]\n  };\n  __privateSet(this, _seekHead, seekHead);\n};\n_createSegmentInfo = new WeakSet();\ncreateSegmentInfo_fn = function () {\n  let segmentDuration = {\n    id: 17545 /* Duration */,\n    data: new EBMLFloat64(0)\n  };\n  __privateSet(this, _segmentDuration, segmentDuration);\n  let segmentInfo = {\n    id: 357149030 /* Info */,\n    data: [{\n      id: 2807729 /* TimestampScale */,\n      data: 1e6\n    }, {\n      id: 19840 /* MuxingApp */,\n      data: APP_NAME\n    }, {\n      id: 22337 /* WritingApp */,\n      data: APP_NAME\n    }, !__privateGet(this, _options).streaming ? segmentDuration : null]\n  };\n  __privateSet(this, _segmentInfo, segmentInfo);\n};\n_createTracks = new WeakSet();\ncreateTracks_fn = function () {\n  let tracksElement = {\n    id: 374648427 /* Tracks */,\n    data: []\n  };\n  __privateSet(this, _tracksElement, tracksElement);\n  if (__privateGet(this, _options).video) {\n    tracksElement.data.push({\n      id: 174 /* TrackEntry */,\n      data: [{\n        id: 215 /* TrackNumber */,\n        data: VIDEO_TRACK_NUMBER\n      }, {\n        id: 29637 /* TrackUID */,\n        data: VIDEO_TRACK_NUMBER\n      }, {\n        id: 131 /* TrackType */,\n        data: VIDEO_TRACK_TYPE\n      }, {\n        id: 134 /* CodecID */,\n        data: __privateGet(this, _options).video.codec\n      }, __privateGet(this, _videoCodecPrivate), __privateGet(this, _options).video.frameRate ? {\n        id: 2352003 /* DefaultDuration */,\n        data: 1e9 / __privateGet(this, _options).video.frameRate\n      } : null, {\n        id: 224 /* Video */,\n        data: [{\n          id: 176 /* PixelWidth */,\n          data: __privateGet(this, _options).video.width\n        }, {\n          id: 186 /* PixelHeight */,\n          data: __privateGet(this, _options).video.height\n        }, __privateGet(this, _options).video.alpha ? {\n          id: 21440 /* AlphaMode */,\n          data: 1\n        } : null, __privateGet(this, _colourElement)]\n      }]\n    });\n  }\n  if (__privateGet(this, _options).audio) {\n    __privateSet(this, _audioCodecPrivate, __privateGet(this, _options).streaming ? __privateGet(this, _audioCodecPrivate) || null : {\n      id: 236 /* Void */,\n      size: 4,\n      data: new Uint8Array(CODEC_PRIVATE_MAX_SIZE)\n    });\n    tracksElement.data.push({\n      id: 174 /* TrackEntry */,\n      data: [{\n        id: 215 /* TrackNumber */,\n        data: AUDIO_TRACK_NUMBER\n      }, {\n        id: 29637 /* TrackUID */,\n        data: AUDIO_TRACK_NUMBER\n      }, {\n        id: 131 /* TrackType */,\n        data: AUDIO_TRACK_TYPE\n      }, {\n        id: 134 /* CodecID */,\n        data: __privateGet(this, _options).audio.codec\n      }, __privateGet(this, _audioCodecPrivate), {\n        id: 225 /* Audio */,\n        data: [{\n          id: 181 /* SamplingFrequency */,\n          data: new EBMLFloat32(__privateGet(this, _options).audio.sampleRate)\n        }, {\n          id: 159 /* Channels */,\n          data: __privateGet(this, _options).audio.numberOfChannels\n        }, __privateGet(this, _options).audio.bitDepth ? {\n          id: 25188 /* BitDepth */,\n          data: __privateGet(this, _options).audio.bitDepth\n        } : null]\n      }]\n    });\n  }\n  if (__privateGet(this, _options).subtitles) {\n    tracksElement.data.push({\n      id: 174 /* TrackEntry */,\n      data: [{\n        id: 215 /* TrackNumber */,\n        data: SUBTITLE_TRACK_NUMBER\n      }, {\n        id: 29637 /* TrackUID */,\n        data: SUBTITLE_TRACK_NUMBER\n      }, {\n        id: 131 /* TrackType */,\n        data: SUBTITLE_TRACK_TYPE\n      }, {\n        id: 134 /* CodecID */,\n        data: __privateGet(this, _options).subtitles.codec\n      }, __privateGet(this, _subtitleCodecPrivate)]\n    });\n  }\n};\n_createSegment = new WeakSet();\ncreateSegment_fn = function () {\n  let segment = {\n    id: 408125543 /* Segment */,\n    size: __privateGet(this, _options).streaming ? -1 : SEGMENT_SIZE_BYTES,\n    data: [!__privateGet(this, _options).streaming ? __privateGet(this, _seekHead) : null, __privateGet(this, _segmentInfo), __privateGet(this, _tracksElement)]\n  };\n  __privateSet(this, _segment, segment);\n  __privateGet(this, _writer).writeEBML(segment);\n  if (__privateGet(this, _writer) instanceof BaseStreamTargetWriter && __privateGet(this, _writer).target.options.onHeader) {\n    let {\n      data,\n      start\n    } = __privateGet(this, _writer).getTrackedWrites();\n    __privateGet(this, _writer).target.options.onHeader(data, start);\n  }\n};\n_createCues = new WeakSet();\ncreateCues_fn = function () {\n  __privateSet(this, _cues, {\n    id: 475249515 /* Cues */,\n    data: []\n  });\n};\n_maybeFlushStreamingTargetWriter = new WeakSet();\nmaybeFlushStreamingTargetWriter_fn = function () {\n  if (__privateGet(this, _writer) instanceof StreamTargetWriter) {\n    __privateGet(this, _writer).flush();\n  }\n};\n_segmentDataOffset = new WeakSet();\nsegmentDataOffset_get = function () {\n  return __privateGet(this, _writer).dataOffsets.get(__privateGet(this, _segment));\n};\n_writeVideoDecoderConfig = new WeakSet();\nwriteVideoDecoderConfig_fn = function (meta) {\n  if (!meta.decoderConfig) return;\n  if (meta.decoderConfig.colorSpace) {\n    let colorSpace = meta.decoderConfig.colorSpace;\n    __privateSet(this, _colorSpace, colorSpace);\n    __privateGet(this, _colourElement).data = [{\n      id: 21937 /* MatrixCoefficients */,\n      data: {\n        \"rgb\": 1,\n        \"bt709\": 1,\n        \"bt470bg\": 5,\n        \"smpte170m\": 6\n      }[colorSpace.matrix]\n    }, {\n      id: 21946 /* TransferCharacteristics */,\n      data: {\n        \"bt709\": 1,\n        \"smpte170m\": 6,\n        \"iec61966-2-1\": 13\n      }[colorSpace.transfer]\n    }, {\n      id: 21947 /* Primaries */,\n      data: {\n        \"bt709\": 1,\n        \"bt470bg\": 5,\n        \"smpte170m\": 6\n      }[colorSpace.primaries]\n    }, {\n      id: 21945 /* Range */,\n      data: [1, 2][Number(colorSpace.fullRange)]\n    }];\n    if (!__privateGet(this, _options).streaming) {\n      let endPos = __privateGet(this, _writer).pos;\n      __privateGet(this, _writer).seek(__privateGet(this, _writer).offsets.get(__privateGet(this, _colourElement)));\n      __privateGet(this, _writer).writeEBML(__privateGet(this, _colourElement));\n      __privateGet(this, _writer).seek(endPos);\n    }\n  }\n  if (meta.decoderConfig.description) {\n    if (__privateGet(this, _options).streaming) {\n      __privateSet(this, _videoCodecPrivate, __privateMethod(this, _createCodecPrivateElement, createCodecPrivateElement_fn).call(this, meta.decoderConfig.description));\n    } else {\n      __privateMethod(this, _writeCodecPrivate, writeCodecPrivate_fn).call(this, __privateGet(this, _videoCodecPrivate), meta.decoderConfig.description);\n    }\n  }\n};\n_fixVP9ColorSpace = new WeakSet();\nfixVP9ColorSpace_fn = function (chunk) {\n  if (chunk.type !== \"key\") return;\n  if (!__privateGet(this, _colorSpace)) return;\n  let i = 0;\n  if (readBits(chunk.data, 0, 2) !== 2) return;\n  i += 2;\n  let profile = (readBits(chunk.data, i + 1, i + 2) << 1) + readBits(chunk.data, i + 0, i + 1);\n  i += 2;\n  if (profile === 3) i++;\n  let showExistingFrame = readBits(chunk.data, i + 0, i + 1);\n  i++;\n  if (showExistingFrame) return;\n  let frameType = readBits(chunk.data, i + 0, i + 1);\n  i++;\n  if (frameType !== 0) return;\n  i += 2;\n  let syncCode = readBits(chunk.data, i + 0, i + 24);\n  i += 24;\n  if (syncCode !== 4817730) return;\n  if (profile >= 2) i++;\n  let colorSpaceID = {\n    \"rgb\": 7,\n    \"bt709\": 2,\n    \"bt470bg\": 1,\n    \"smpte170m\": 3\n  }[__privateGet(this, _colorSpace).matrix];\n  writeBits(chunk.data, i + 0, i + 3, colorSpaceID);\n};\n_writeSubtitleChunks = new WeakSet();\nwriteSubtitleChunks_fn = function () {\n  let lastWrittenMediaTimestamp = Math.min(__privateGet(this, _options).video ? __privateGet(this, _lastVideoTimestamp) : Infinity, __privateGet(this, _options).audio ? __privateGet(this, _lastAudioTimestamp) : Infinity);\n  let queue = __privateGet(this, _subtitleChunkQueue);\n  while (queue.length > 0 && queue[0].timestamp <= lastWrittenMediaTimestamp) {\n    __privateMethod(this, _writeBlock, writeBlock_fn).call(this, queue.shift(), !__privateGet(this, _options).video && !__privateGet(this, _options).audio);\n  }\n};\n_createInternalChunk = new WeakSet();\ncreateInternalChunk_fn = function (data, type, timestamp, trackNumber, duration, additions) {\n  let adjustedTimestamp = __privateMethod(this, _validateTimestamp, validateTimestamp_fn).call(this, timestamp, trackNumber);\n  let internalChunk = {\n    data,\n    additions,\n    type,\n    timestamp: adjustedTimestamp,\n    duration,\n    trackNumber\n  };\n  return internalChunk;\n};\n_validateTimestamp = new WeakSet();\nvalidateTimestamp_fn = function (timestamp, trackNumber) {\n  let lastTimestamp = trackNumber === VIDEO_TRACK_NUMBER ? __privateGet(this, _lastVideoTimestamp) : trackNumber === AUDIO_TRACK_NUMBER ? __privateGet(this, _lastAudioTimestamp) : __privateGet(this, _lastSubtitleTimestamp);\n  if (trackNumber !== SUBTITLE_TRACK_NUMBER) {\n    let firstTimestamp = trackNumber === VIDEO_TRACK_NUMBER ? __privateGet(this, _firstVideoTimestamp) : __privateGet(this, _firstAudioTimestamp);\n    if (__privateGet(this, _options).firstTimestampBehavior === \"strict\" && lastTimestamp === -1 && timestamp !== 0) {\n      throw new Error(`The first chunk for your media track must have a timestamp of 0 (received ${timestamp}). Non-zero first timestamps are often caused by directly piping frames or audio data from a MediaStreamTrack into the encoder. Their timestamps are typically relative to the age of the document, which is probably what you want.\n\nIf you want to offset all timestamps of a track such that the first one is zero, set firstTimestampBehavior: 'offset' in the options.\nIf you want to allow non-zero first timestamps, set firstTimestampBehavior: 'permissive'.\n`);\n    } else if (__privateGet(this, _options).firstTimestampBehavior === \"offset\") {\n      timestamp -= firstTimestamp;\n    }\n  }\n  if (timestamp < lastTimestamp) {\n    throw new Error(`Timestamps must be monotonically increasing (went from ${lastTimestamp} to ${timestamp}).`);\n  }\n  if (timestamp < 0) {\n    throw new Error(`Timestamps must be non-negative (received ${timestamp}).`);\n  }\n  return timestamp;\n};\n_writeBlock = new WeakSet();\nwriteBlock_fn = function (chunk, canCreateNewCluster) {\n  if (__privateGet(this, _options).streaming && !__privateGet(this, _tracksElement)) {\n    __privateMethod(this, _createTracks, createTracks_fn).call(this);\n    __privateMethod(this, _createSegment, createSegment_fn).call(this);\n  }\n  let msTimestamp = Math.floor(chunk.timestamp / 1e3);\n  let relativeTimestamp = msTimestamp - __privateGet(this, _currentClusterTimestamp);\n  let shouldCreateNewClusterFromKeyFrame = canCreateNewCluster && chunk.type === \"key\" && relativeTimestamp >= 1e3;\n  let clusterWouldBeTooLong = relativeTimestamp >= MAX_CHUNK_LENGTH_MS;\n  if (!__privateGet(this, _currentCluster) || shouldCreateNewClusterFromKeyFrame || clusterWouldBeTooLong) {\n    __privateMethod(this, _createNewCluster, createNewCluster_fn).call(this, msTimestamp);\n    relativeTimestamp = 0;\n  }\n  if (relativeTimestamp < 0) {\n    return;\n  }\n  let prelude = new Uint8Array(4);\n  let view = new DataView(prelude.buffer);\n  view.setUint8(0, 128 | chunk.trackNumber);\n  view.setInt16(1, relativeTimestamp, false);\n  if (chunk.duration === void 0 && !chunk.additions) {\n    view.setUint8(3, Number(chunk.type === \"key\") << 7);\n    let simpleBlock = {\n      id: 163 /* SimpleBlock */,\n      data: [prelude, chunk.data]\n    };\n    __privateGet(this, _writer).writeEBML(simpleBlock);\n  } else {\n    let msDuration = Math.floor(chunk.duration / 1e3);\n    let blockGroup = {\n      id: 160 /* BlockGroup */,\n      data: [{\n        id: 161 /* Block */,\n        data: [prelude, chunk.data]\n      }, chunk.duration !== void 0 ? {\n        id: 155 /* BlockDuration */,\n        data: msDuration\n      } : null, chunk.additions ? {\n        id: 30113 /* BlockAdditions */,\n        data: chunk.additions\n      } : null]\n    };\n    __privateGet(this, _writer).writeEBML(blockGroup);\n  }\n  __privateSet(this, _duration, Math.max(__privateGet(this, _duration), msTimestamp));\n};\n_createCodecPrivateElement = new WeakSet();\ncreateCodecPrivateElement_fn = function (data) {\n  return {\n    id: 25506 /* CodecPrivate */,\n    size: 4,\n    data: new Uint8Array(data)\n  };\n};\n_writeCodecPrivate = new WeakSet();\nwriteCodecPrivate_fn = function (element, data) {\n  let endPos = __privateGet(this, _writer).pos;\n  __privateGet(this, _writer).seek(__privateGet(this, _writer).offsets.get(element));\n  let codecPrivateElementSize = 2 + 4 + data.byteLength;\n  let voidDataSize = CODEC_PRIVATE_MAX_SIZE - codecPrivateElementSize;\n  if (voidDataSize < 0) {\n    let newByteLength = data.byteLength + voidDataSize;\n    if (data instanceof ArrayBuffer) {\n      data = data.slice(0, newByteLength);\n    } else {\n      data = data.buffer.slice(0, newByteLength);\n    }\n    voidDataSize = 0;\n  }\n  element = [__privateMethod(this, _createCodecPrivateElement, createCodecPrivateElement_fn).call(this, data), {\n    id: 236 /* Void */,\n    size: 4,\n    data: new Uint8Array(voidDataSize)\n  }];\n  __privateGet(this, _writer).writeEBML(element);\n  __privateGet(this, _writer).seek(endPos);\n};\n_createNewCluster = new WeakSet();\ncreateNewCluster_fn = function (timestamp) {\n  if (__privateGet(this, _currentCluster)) {\n    __privateMethod(this, _finalizeCurrentCluster, finalizeCurrentCluster_fn).call(this);\n  }\n  if (__privateGet(this, _writer) instanceof BaseStreamTargetWriter && __privateGet(this, _writer).target.options.onCluster) {\n    __privateGet(this, _writer).startTrackingWrites();\n  }\n  __privateSet(this, _currentCluster, {\n    id: 524531317 /* Cluster */,\n    size: __privateGet(this, _options).streaming ? -1 : CLUSTER_SIZE_BYTES,\n    data: [{\n      id: 231 /* Timestamp */,\n      data: timestamp\n    }]\n  });\n  __privateGet(this, _writer).writeEBML(__privateGet(this, _currentCluster));\n  __privateSet(this, _currentClusterTimestamp, timestamp);\n  let clusterOffsetFromSegment = __privateGet(this, _writer).offsets.get(__privateGet(this, _currentCluster)) - __privateGet(this, _segmentDataOffset, segmentDataOffset_get);\n  __privateGet(this, _cues).data.push({\n    id: 187 /* CuePoint */,\n    data: [{\n      id: 179 /* CueTime */,\n      data: timestamp\n    }, __privateGet(this, _options).video ? {\n      id: 183 /* CueTrackPositions */,\n      data: [{\n        id: 247 /* CueTrack */,\n        data: VIDEO_TRACK_NUMBER\n      }, {\n        id: 241 /* CueClusterPosition */,\n        data: clusterOffsetFromSegment\n      }]\n    } : null, __privateGet(this, _options).audio ? {\n      id: 183 /* CueTrackPositions */,\n      data: [{\n        id: 247 /* CueTrack */,\n        data: AUDIO_TRACK_NUMBER\n      }, {\n        id: 241 /* CueClusterPosition */,\n        data: clusterOffsetFromSegment\n      }]\n    } : null]\n  });\n};\n_finalizeCurrentCluster = new WeakSet();\nfinalizeCurrentCluster_fn = function () {\n  if (!__privateGet(this, _options).streaming) {\n    let clusterSize = __privateGet(this, _writer).pos - __privateGet(this, _writer).dataOffsets.get(__privateGet(this, _currentCluster));\n    let endPos = __privateGet(this, _writer).pos;\n    __privateGet(this, _writer).seek(__privateGet(this, _writer).offsets.get(__privateGet(this, _currentCluster)) + 4);\n    __privateGet(this, _writer).writeEBMLVarInt(clusterSize, CLUSTER_SIZE_BYTES);\n    __privateGet(this, _writer).seek(endPos);\n  }\n  if (__privateGet(this, _writer) instanceof BaseStreamTargetWriter && __privateGet(this, _writer).target.options.onCluster) {\n    let {\n      data,\n      start\n    } = __privateGet(this, _writer).getTrackedWrites();\n    __privateGet(this, _writer).target.options.onCluster(data, start, __privateGet(this, _currentClusterTimestamp));\n  }\n};\n_ensureNotFinalized = new WeakSet();\nensureNotFinalized_fn = function () {\n  if (__privateGet(this, _finalized)) {\n    throw new Error(\"Cannot add new video or audio chunks after the file has been finalized.\");\n  }\n};\n\n// src/subtitles.ts\nvar cueBlockHeaderRegex = /(?:(.+?)\\n)?((?:\\d{2}:)?\\d{2}:\\d{2}.\\d{3})\\s+-->\\s+((?:\\d{2}:)?\\d{2}:\\d{2}.\\d{3})/g;\nvar preambleStartRegex = /^WEBVTT.*?\\n{2}/;\nvar timestampRegex = /(?:(\\d{2}):)?(\\d{2}):(\\d{2}).(\\d{3})/;\nvar inlineTimestampRegex = /<(?:(\\d{2}):)?(\\d{2}):(\\d{2}).(\\d{3})>/g;\nvar textEncoder = new TextEncoder();\nvar _options2, _config, _preambleSeen, _preambleBytes, _preambleEmitted, _parseTimestamp, parseTimestamp_fn, _formatTimestamp, formatTimestamp_fn;\nvar SubtitleEncoder = class {\n  constructor(options) {\n    __privateAdd(this, _parseTimestamp);\n    __privateAdd(this, _formatTimestamp);\n    __privateAdd(this, _options2, void 0);\n    __privateAdd(this, _config, void 0);\n    __privateAdd(this, _preambleSeen, false);\n    __privateAdd(this, _preambleBytes, void 0);\n    __privateAdd(this, _preambleEmitted, false);\n    __privateSet(this, _options2, options);\n  }\n  configure(config) {\n    if (config.codec !== \"webvtt\") {\n      throw new Error(\"Codec must be 'webvtt'.\");\n    }\n    __privateSet(this, _config, config);\n  }\n  encode(text) {\n    if (!__privateGet(this, _config)) {\n      throw new Error(\"Encoder not configured.\");\n    }\n    text = text.replace(\"\\r\\n\", \"\\n\").replace(\"\\r\", \"\\n\");\n    cueBlockHeaderRegex.lastIndex = 0;\n    let match;\n    if (!__privateGet(this, _preambleSeen)) {\n      if (!preambleStartRegex.test(text)) {\n        let error = new Error(\"WebVTT preamble incorrect.\");\n        __privateGet(this, _options2).error(error);\n        throw error;\n      }\n      match = cueBlockHeaderRegex.exec(text);\n      let preamble = text.slice(0, match?.index ?? text.length).trimEnd();\n      if (!preamble) {\n        let error = new Error(\"No WebVTT preamble provided.\");\n        __privateGet(this, _options2).error(error);\n        throw error;\n      }\n      __privateSet(this, _preambleBytes, textEncoder.encode(preamble));\n      __privateSet(this, _preambleSeen, true);\n      if (match) {\n        text = text.slice(match.index);\n        cueBlockHeaderRegex.lastIndex = 0;\n      }\n    }\n    while (match = cueBlockHeaderRegex.exec(text)) {\n      let notes = text.slice(0, match.index);\n      let cueIdentifier = match[1] || \"\";\n      let matchEnd = match.index + match[0].length;\n      let bodyStart = text.indexOf(\"\\n\", matchEnd) + 1;\n      let cueSettings = text.slice(matchEnd, bodyStart).trim();\n      let bodyEnd = text.indexOf(\"\\n\\n\", matchEnd);\n      if (bodyEnd === -1) bodyEnd = text.length;\n      let startTime = __privateMethod(this, _parseTimestamp, parseTimestamp_fn).call(this, match[2]);\n      let endTime = __privateMethod(this, _parseTimestamp, parseTimestamp_fn).call(this, match[3]);\n      let duration = endTime - startTime;\n      let body = text.slice(bodyStart, bodyEnd);\n      let additions = `${cueSettings}\n${cueIdentifier}\n${notes}`;\n      inlineTimestampRegex.lastIndex = 0;\n      body = body.replace(inlineTimestampRegex, match2 => {\n        let time = __privateMethod(this, _parseTimestamp, parseTimestamp_fn).call(this, match2.slice(1, -1));\n        let offsetTime = time - startTime;\n        return `<${__privateMethod(this, _formatTimestamp, formatTimestamp_fn).call(this, offsetTime)}>`;\n      });\n      text = text.slice(bodyEnd).trimStart();\n      cueBlockHeaderRegex.lastIndex = 0;\n      let chunk = {\n        body: textEncoder.encode(body),\n        additions: additions.trim() === \"\" ? void 0 : textEncoder.encode(additions),\n        timestamp: startTime * 1e3,\n        duration: duration * 1e3\n      };\n      let meta = {};\n      if (!__privateGet(this, _preambleEmitted)) {\n        meta.decoderConfig = {\n          description: __privateGet(this, _preambleBytes)\n        };\n        __privateSet(this, _preambleEmitted, true);\n      }\n      __privateGet(this, _options2).output(chunk, meta);\n    }\n  }\n};\n_options2 = new WeakMap();\n_config = new WeakMap();\n_preambleSeen = new WeakMap();\n_preambleBytes = new WeakMap();\n_preambleEmitted = new WeakMap();\n_parseTimestamp = new WeakSet();\nparseTimestamp_fn = function (string) {\n  let match = timestampRegex.exec(string);\n  if (!match) throw new Error(\"Expected match.\");\n  return 60 * 60 * 1e3 * Number(match[1] || \"0\") + 60 * 1e3 * Number(match[2]) + 1e3 * Number(match[3]) + Number(match[4]);\n};\n_formatTimestamp = new WeakSet();\nformatTimestamp_fn = function (timestamp) {\n  let hours = Math.floor(timestamp / (60 * 60 * 1e3));\n  let minutes = Math.floor(timestamp % (60 * 60 * 1e3) / (60 * 1e3));\n  let seconds = Math.floor(timestamp % (60 * 1e3) / 1e3);\n  let milliseconds = timestamp % 1e3;\n  return hours.toString().padStart(2, \"0\") + \":\" + minutes.toString().padStart(2, \"0\") + \":\" + seconds.toString().padStart(2, \"0\") + \".\" + milliseconds.toString().padStart(3, \"0\");\n};\nexport { ArrayBufferTarget, FileSystemWritableFileStreamTarget, Muxer, StreamTarget, SubtitleEncoder };"],
  "mappings": "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",
  "names": []
}
