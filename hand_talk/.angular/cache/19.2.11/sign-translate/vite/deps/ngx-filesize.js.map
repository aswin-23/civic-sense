{
  "version": 3,
  "sources": ["../../../../../../node_modules/filesize/lib/filesize.esm.js", "../../../../../../node_modules/ngx-filesize/fesm2020/ngx-filesize.mjs"],
  "sourcesContent": ["/**\n * filesize\n *\n * @copyright 2022 Jason Mulligan <jason.mulligan@avoidwork.com>\n * @license BSD-3-Clause\n * @version 9.0.11\n */\nconst ARRAY = \"array\";\nconst BIT = \"bit\";\nconst BITS = \"bits\";\nconst BYTE = \"byte\";\nconst BYTES = \"bytes\";\nconst EMPTY = \"\";\nconst EXPONENT = \"exponent\";\nconst FUNCTION = \"function\";\nconst IEC = \"iec\";\nconst INVALID_NUMBER = \"Invalid number\";\nconst INVALID_ROUND = \"Invalid rounding method\";\nconst JEDEC = \"jedec\";\nconst OBJECT = \"object\";\nconst PERIOD = \".\";\nconst ROUND = \"round\";\nconst S = \"s\";\nconst SI_KBIT = \"kbit\";\nconst SI_KBYTE = \"kB\";\nconst SPACE = \" \";\nconst STRING = \"string\";\nconst ZERO = \"0\";\nconst strings = {\n  symbol: {\n    iec: {\n      bits: [\"bit\", \"Kibit\", \"Mibit\", \"Gibit\", \"Tibit\", \"Pibit\", \"Eibit\", \"Zibit\", \"Yibit\"],\n      bytes: [\"B\", \"KiB\", \"MiB\", \"GiB\", \"TiB\", \"PiB\", \"EiB\", \"ZiB\", \"YiB\"]\n    },\n    jedec: {\n      bits: [\"bit\", \"Kbit\", \"Mbit\", \"Gbit\", \"Tbit\", \"Pbit\", \"Ebit\", \"Zbit\", \"Ybit\"],\n      bytes: [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"]\n    }\n  },\n  fullform: {\n    iec: [\"\", \"kibi\", \"mebi\", \"gibi\", \"tebi\", \"pebi\", \"exbi\", \"zebi\", \"yobi\"],\n    jedec: [\"\", \"kilo\", \"mega\", \"giga\", \"tera\", \"peta\", \"exa\", \"zetta\", \"yotta\"]\n  }\n};\n\n/**\n * filesize\n *\n * @method filesize\n * @param  {Mixed}   arg        String, Int or Float to transform\n * @param  {Object}  descriptor [Optional] Flags\n * @return {String}             Readable file size String\n */\nfunction filesize(arg, {\n  bits = false,\n  pad = false,\n  base = -1,\n  round = 2,\n  locale = EMPTY,\n  localeOptions = {},\n  separator = EMPTY,\n  spacer = SPACE,\n  symbols = {},\n  standard = EMPTY,\n  output = STRING,\n  fullform = false,\n  fullforms = [],\n  exponent = -1,\n  roundingMethod = ROUND,\n  precision = 0\n} = {}) {\n  let e = exponent,\n    num = Number(arg),\n    result = [],\n    val = 0,\n    u = EMPTY;\n\n  // Sync base & standard\n  if (base === -1 && standard.length === 0) {\n    base = 10;\n    standard = JEDEC;\n  } else if (base === -1 && standard.length > 0) {\n    standard = standard === IEC ? IEC : JEDEC;\n    base = standard === IEC ? 2 : 10;\n  } else {\n    base = base === 2 ? 2 : 10;\n    standard = base === 10 ? JEDEC : standard === JEDEC ? JEDEC : IEC;\n  }\n  const ceil = base === 10 ? 1000 : 1024,\n    full = fullform === true,\n    neg = num < 0,\n    roundingFunc = Math[roundingMethod];\n  if (isNaN(arg)) {\n    throw new TypeError(INVALID_NUMBER);\n  }\n  if (typeof roundingFunc !== FUNCTION) {\n    throw new TypeError(INVALID_ROUND);\n  }\n\n  // Flipping a negative number to determine the size\n  if (neg) {\n    num = -num;\n  }\n\n  // Determining the exponent\n  if (e === -1 || isNaN(e)) {\n    e = Math.floor(Math.log(num) / Math.log(ceil));\n    if (e < 0) {\n      e = 0;\n    }\n  }\n\n  // Exceeding supported length, time to reduce & multiply\n  if (e > 8) {\n    if (precision > 0) {\n      precision += 8 - e;\n    }\n    e = 8;\n  }\n  if (output === EXPONENT) {\n    return e;\n  }\n\n  // Zero is now a special case because bytes divide by 1\n  if (num === 0) {\n    result[0] = 0;\n    u = result[1] = strings.symbol[standard][bits ? BITS : BYTES][e];\n  } else {\n    val = num / (base === 2 ? Math.pow(2, e * 10) : Math.pow(1000, e));\n    if (bits) {\n      val = val * 8;\n      if (val >= ceil && e < 8) {\n        val = val / ceil;\n        e++;\n      }\n    }\n    const p = Math.pow(10, e > 0 ? round : 0);\n    result[0] = roundingFunc(val * p) / p;\n    if (result[0] === ceil && e < 8 && exponent === -1) {\n      result[0] = 1;\n      e++;\n    }\n    u = result[1] = base === 10 && e === 1 ? bits ? SI_KBIT : SI_KBYTE : strings.symbol[standard][bits ? BITS : BYTES][e];\n  }\n\n  // Decorating a 'diff'\n  if (neg) {\n    result[0] = -result[0];\n  }\n\n  // Setting optional precision\n  if (precision > 0) {\n    result[0] = result[0].toPrecision(precision);\n  }\n\n  // Applying custom symbol\n  result[1] = symbols[result[1]] || result[1];\n  if (locale === true) {\n    result[0] = result[0].toLocaleString();\n  } else if (locale.length > 0) {\n    result[0] = result[0].toLocaleString(locale, localeOptions);\n  } else if (separator.length > 0) {\n    result[0] = result[0].toString().replace(PERIOD, separator);\n  }\n  if (pad && Number.isInteger(result[0]) === false && round > 0) {\n    const x = separator || PERIOD,\n      tmp = result[0].toString().split(x),\n      s = tmp[1] || EMPTY,\n      l = s.length,\n      n = round - l;\n    result[0] = `${tmp[0]}${x}${s.padEnd(l + n, ZERO)}`;\n  }\n  if (full) {\n    result[1] = fullforms[e] ? fullforms[e] : strings.fullform[standard][e] + (bits ? BIT : BYTE) + (result[0] === 1 ? EMPTY : S);\n  }\n\n  // Returning Array, Object, or String (default)\n  return output === ARRAY ? result : output === OBJECT ? {\n    value: result[0],\n    symbol: result[1],\n    exponent: e,\n    unit: u\n  } : result.join(spacer);\n}\n\n// Partial application for functional programming\nfilesize.partial = opt => arg => filesize(arg, opt);\nexport { filesize as default };", "import * as i0 from '@angular/core';\nimport { Pipe, NgModule } from '@angular/core';\nimport filesize from 'filesize';\nclass FileSizePipe {\n  static transformOne(value, options) {\n    return filesize(value, options);\n  }\n  transform(value, options) {\n    if (Array.isArray(value)) {\n      return value.map(val => FileSizePipe.transformOne(val, options));\n    }\n    return FileSizePipe.transformOne(value, options);\n  }\n}\nFileSizePipe.ɵfac = function FileSizePipe_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || FileSizePipe)();\n};\nFileSizePipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"filesize\",\n  type: FileSizePipe,\n  pure: true,\n  standalone: false\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FileSizePipe, [{\n    type: Pipe,\n    args: [{\n      name: 'filesize'\n    }]\n  }], null, null);\n})();\nclass NgxFilesizeModule {}\nNgxFilesizeModule.ɵfac = function NgxFilesizeModule_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || NgxFilesizeModule)();\n};\nNgxFilesizeModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgxFilesizeModule,\n  declarations: [FileSizePipe],\n  exports: [FileSizePipe]\n});\nNgxFilesizeModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxFilesizeModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [FileSizePipe],\n      exports: [FileSizePipe]\n    }]\n  }], null, null);\n})();\n\n/*\n * Public API Surface of ngx-filesize\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FileSizePipe, NgxFilesizeModule };\n"],
  "mappings": "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",
  "names": []
}
