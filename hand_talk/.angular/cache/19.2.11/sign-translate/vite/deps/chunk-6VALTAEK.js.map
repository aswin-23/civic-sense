{
  "version": 3,
  "sources": ["../../../../../../node_modules/@sutton-signwriting/sgnw-components/dist/esm/draggabilly-b10e2ab0.js"],
  "sourcesContent": ["/*!\n * The Sutton SignWriting Web Components\n */\nimport { c as createCommonjsModule, a as commonjsGlobal } from './_commonjsHelpers-383fba37.js';\nvar getSize = createCommonjsModule(function (module) {\n  /*!\n   * Infinite Scroll v2.0.4\n   * measure size of elements\n   * MIT license\n   */\n\n  (function (window, factory) {\n    if (module.exports) {\n      // CommonJS\n      module.exports = factory();\n    } else {\n      // browser global\n      window.getSize = factory();\n    }\n  })(window, function factory() {\n    // -------------------------- helpers -------------------------- //\n\n    // get a number from a string, not a percentage\n    function getStyleSize(value) {\n      let num = parseFloat(value);\n      // not a percent like '100%', and a number\n      let isValid = value.indexOf('%') == -1 && !isNaN(num);\n      return isValid && num;\n    }\n\n    // -------------------------- measurements -------------------------- //\n\n    let measurements = ['paddingLeft', 'paddingRight', 'paddingTop', 'paddingBottom', 'marginLeft', 'marginRight', 'marginTop', 'marginBottom', 'borderLeftWidth', 'borderRightWidth', 'borderTopWidth', 'borderBottomWidth'];\n    function getZeroSize() {\n      let size = {\n        width: 0,\n        height: 0,\n        innerWidth: 0,\n        innerHeight: 0,\n        outerWidth: 0,\n        outerHeight: 0\n      };\n      measurements.forEach(measurement => {\n        size[measurement] = 0;\n      });\n      return size;\n    }\n\n    // -------------------------- getSize -------------------------- //\n\n    function getSize(elem) {\n      // use querySeletor if elem is string\n      if (typeof elem == 'string') elem = document.querySelector(elem);\n\n      // do not proceed on non-objects\n      let isElement = elem && typeof elem == 'object' && elem.nodeType;\n      if (!isElement) return;\n      let style = getComputedStyle(elem);\n\n      // if hidden, everything is 0\n      if (style.display == 'none') return getZeroSize();\n      let size = {};\n      size.width = elem.offsetWidth;\n      size.height = elem.offsetHeight;\n      let isBorderBox = size.isBorderBox = style.boxSizing == 'border-box';\n\n      // get all measurements\n      measurements.forEach(measurement => {\n        let value = style[measurement];\n        let num = parseFloat(value);\n        // any 'auto', 'medium' value will be 0\n        size[measurement] = !isNaN(num) ? num : 0;\n      });\n      let paddingWidth = size.paddingLeft + size.paddingRight;\n      let paddingHeight = size.paddingTop + size.paddingBottom;\n      let marginWidth = size.marginLeft + size.marginRight;\n      let marginHeight = size.marginTop + size.marginBottom;\n      let borderWidth = size.borderLeftWidth + size.borderRightWidth;\n      let borderHeight = size.borderTopWidth + size.borderBottomWidth;\n\n      // overwrite width and height if we can get it from style\n      let styleWidth = getStyleSize(style.width);\n      if (styleWidth !== false) {\n        size.width = styleWidth + (\n        // add padding and border unless it's already including it\n        isBorderBox ? 0 : paddingWidth + borderWidth);\n      }\n      let styleHeight = getStyleSize(style.height);\n      if (styleHeight !== false) {\n        size.height = styleHeight + (\n        // add padding and border unless it's already including it\n        isBorderBox ? 0 : paddingHeight + borderHeight);\n      }\n      size.innerWidth = size.width - (paddingWidth + borderWidth);\n      size.innerHeight = size.height - (paddingHeight + borderHeight);\n      size.outerWidth = size.width + marginWidth;\n      size.outerHeight = size.height + marginHeight;\n      return size;\n    }\n    return getSize;\n  });\n});\nvar evEmitter = createCommonjsModule(function (module) {\n  /**\n   * EvEmitter v2.1.1\n   * Lil' event emitter\n   * MIT License\n   */\n\n  (function (global, factory) {\n    // universal module definition\n    if (module.exports) {\n      // CommonJS - Browserify, Webpack\n      module.exports = factory();\n    } else {\n      // Browser globals\n      global.EvEmitter = factory();\n    }\n  })(typeof window != 'undefined' ? window : commonjsGlobal, function () {\n    function EvEmitter() {}\n    let proto = EvEmitter.prototype;\n    proto.on = function (eventName, listener) {\n      if (!eventName || !listener) return this;\n\n      // set events hash\n      let events = this._events = this._events || {};\n      // set listeners array\n      let listeners = events[eventName] = events[eventName] || [];\n      // only add once\n      if (!listeners.includes(listener)) {\n        listeners.push(listener);\n      }\n      return this;\n    };\n    proto.once = function (eventName, listener) {\n      if (!eventName || !listener) return this;\n\n      // add event\n      this.on(eventName, listener);\n      // set once flag\n      // set onceEvents hash\n      let onceEvents = this._onceEvents = this._onceEvents || {};\n      // set onceListeners object\n      let onceListeners = onceEvents[eventName] = onceEvents[eventName] || {};\n      // set flag\n      onceListeners[listener] = true;\n      return this;\n    };\n    proto.off = function (eventName, listener) {\n      let listeners = this._events && this._events[eventName];\n      if (!listeners || !listeners.length) return this;\n      let index = listeners.indexOf(listener);\n      if (index != -1) {\n        listeners.splice(index, 1);\n      }\n      return this;\n    };\n    proto.emitEvent = function (eventName, args) {\n      let listeners = this._events && this._events[eventName];\n      if (!listeners || !listeners.length) return this;\n\n      // copy over to avoid interference if .off() in listener\n      listeners = listeners.slice(0);\n      args = args || [];\n      // once stuff\n      let onceListeners = this._onceEvents && this._onceEvents[eventName];\n      for (let listener of listeners) {\n        let isOnce = onceListeners && onceListeners[listener];\n        if (isOnce) {\n          // remove listener\n          // remove before trigger to prevent recursion\n          this.off(eventName, listener);\n          // unset once flag\n          delete onceListeners[listener];\n        }\n        // trigger listener\n        listener.apply(this, args);\n      }\n      return this;\n    };\n    proto.allOff = function () {\n      delete this._events;\n      delete this._onceEvents;\n      return this;\n    };\n    return EvEmitter;\n  });\n});\nvar unidragger = createCommonjsModule(function (module) {\n  /*!\n   * Unidragger v3.0.1\n   * Draggable base class\n   * MIT license\n   */\n\n  (function (window, factory) {\n    // universal module definition\n    if (module.exports) {\n      // CommonJS\n      module.exports = factory(window, evEmitter);\n    } else {\n      // browser global\n      window.Unidragger = factory(window, window.EvEmitter);\n    }\n  })(typeof window != 'undefined' ? window : commonjsGlobal, function factory(window, EvEmitter) {\n    function Unidragger() {}\n\n    // inherit EvEmitter\n    let proto = Unidragger.prototype = Object.create(EvEmitter.prototype);\n\n    // ----- bind start ----- //\n\n    // trigger handler methods for events\n    proto.handleEvent = function (event) {\n      let method = 'on' + event.type;\n      if (this[method]) {\n        this[method](event);\n      }\n    };\n    let startEvent, activeEvents;\n    if ('ontouchstart' in window) {\n      // HACK prefer Touch Events as you can preventDefault on touchstart to\n      // disable scroll in iOS & mobile Chrome metafizzy/flickity#1177\n      startEvent = 'touchstart';\n      activeEvents = ['touchmove', 'touchend', 'touchcancel'];\n    } else if (window.PointerEvent) {\n      // Pointer Events\n      startEvent = 'pointerdown';\n      activeEvents = ['pointermove', 'pointerup', 'pointercancel'];\n    } else {\n      // mouse events\n      startEvent = 'mousedown';\n      activeEvents = ['mousemove', 'mouseup'];\n    }\n\n    // prototype so it can be overwriteable by Flickity\n    proto.touchActionValue = 'none';\n    proto.bindHandles = function () {\n      this._bindHandles('addEventListener', this.touchActionValue);\n    };\n    proto.unbindHandles = function () {\n      this._bindHandles('removeEventListener', '');\n    };\n\n    /**\n     * Add or remove start event\n     * @param {String} bindMethod - addEventListener or removeEventListener\n     * @param {String} touchAction - value for touch-action CSS property\n     */\n    proto._bindHandles = function (bindMethod, touchAction) {\n      this.handles.forEach(handle => {\n        handle[bindMethod](startEvent, this);\n        handle[bindMethod]('click', this);\n        // touch-action: none to override browser touch gestures. metafizzy/flickity#540\n        if (window.PointerEvent) handle.style.touchAction = touchAction;\n      });\n    };\n    proto.bindActivePointerEvents = function () {\n      activeEvents.forEach(eventName => {\n        window.addEventListener(eventName, this);\n      });\n    };\n    proto.unbindActivePointerEvents = function () {\n      activeEvents.forEach(eventName => {\n        window.removeEventListener(eventName, this);\n      });\n    };\n\n    // ----- event handler helpers ----- //\n\n    // trigger method with matching pointer\n    proto.withPointer = function (methodName, event) {\n      if (event.pointerId === this.pointerIdentifier) {\n        this[methodName](event, event);\n      }\n    };\n\n    // trigger method with matching touch\n    proto.withTouch = function (methodName, event) {\n      let touch;\n      for (let changedTouch of event.changedTouches) {\n        if (changedTouch.identifier === this.pointerIdentifier) {\n          touch = changedTouch;\n        }\n      }\n      if (touch) this[methodName](event, touch);\n    };\n\n    // ----- start event ----- //\n\n    proto.onmousedown = function (event) {\n      this.pointerDown(event, event);\n    };\n    proto.ontouchstart = function (event) {\n      this.pointerDown(event, event.changedTouches[0]);\n    };\n    proto.onpointerdown = function (event) {\n      this.pointerDown(event, event);\n    };\n\n    // nodes that have text fields\n    const cursorNodes = ['TEXTAREA', 'INPUT', 'SELECT', 'OPTION'];\n    // input types that do not have text fields\n    const clickTypes = ['radio', 'checkbox', 'button', 'submit', 'image', 'file'];\n\n    /**\n     * any time you set `event, pointer` it refers to:\n     * @param {Event} event\n     * @param {Event | Touch} pointer\n     */\n    proto.pointerDown = function (event, pointer) {\n      // dismiss multi-touch taps, right clicks, and clicks on text fields\n      let isCursorNode = cursorNodes.includes(event.target.nodeName);\n      let isClickType = clickTypes.includes(event.target.type);\n      let isOkayElement = !isCursorNode || isClickType;\n      let isOkay = !this.isPointerDown && !event.button && isOkayElement;\n      if (!isOkay) return;\n      this.isPointerDown = true;\n      // save pointer identifier to match up touch events\n      this.pointerIdentifier = pointer.pointerId !== undefined ?\n      // pointerId for pointer events, touch.indentifier for touch events\n      pointer.pointerId : pointer.identifier;\n      // track position for move\n      this.pointerDownPointer = {\n        pageX: pointer.pageX,\n        pageY: pointer.pageY\n      };\n      this.bindActivePointerEvents();\n      this.emitEvent('pointerDown', [event, pointer]);\n    };\n\n    // ----- move ----- //\n\n    proto.onmousemove = function (event) {\n      this.pointerMove(event, event);\n    };\n    proto.onpointermove = function (event) {\n      this.withPointer('pointerMove', event);\n    };\n    proto.ontouchmove = function (event) {\n      this.withTouch('pointerMove', event);\n    };\n    proto.pointerMove = function (event, pointer) {\n      let moveVector = {\n        x: pointer.pageX - this.pointerDownPointer.pageX,\n        y: pointer.pageY - this.pointerDownPointer.pageY\n      };\n      this.emitEvent('pointerMove', [event, pointer, moveVector]);\n      // start drag if pointer has moved far enough to start drag\n      let isDragStarting = !this.isDragging && this.hasDragStarted(moveVector);\n      if (isDragStarting) this.dragStart(event, pointer);\n      if (this.isDragging) this.dragMove(event, pointer, moveVector);\n    };\n\n    // condition if pointer has moved far enough to start drag\n    proto.hasDragStarted = function (moveVector) {\n      return Math.abs(moveVector.x) > 3 || Math.abs(moveVector.y) > 3;\n    };\n\n    // ----- drag ----- //\n\n    proto.dragStart = function (event, pointer) {\n      this.isDragging = true;\n      this.isPreventingClicks = true; // set flag to prevent clicks\n      this.emitEvent('dragStart', [event, pointer]);\n    };\n    proto.dragMove = function (event, pointer, moveVector) {\n      this.emitEvent('dragMove', [event, pointer, moveVector]);\n    };\n\n    // ----- end ----- //\n\n    proto.onmouseup = function (event) {\n      this.pointerUp(event, event);\n    };\n    proto.onpointerup = function (event) {\n      this.withPointer('pointerUp', event);\n    };\n    proto.ontouchend = function (event) {\n      this.withTouch('pointerUp', event);\n    };\n    proto.pointerUp = function (event, pointer) {\n      this.pointerDone();\n      this.emitEvent('pointerUp', [event, pointer]);\n      if (this.isDragging) {\n        this.dragEnd(event, pointer);\n      } else {\n        // pointer didn't move enough for drag to start\n        this.staticClick(event, pointer);\n      }\n    };\n    proto.dragEnd = function (event, pointer) {\n      this.isDragging = false; // reset flag\n      // re-enable clicking async\n      setTimeout(() => delete this.isPreventingClicks);\n      this.emitEvent('dragEnd', [event, pointer]);\n    };\n\n    // triggered on pointer up & pointer cancel\n    proto.pointerDone = function () {\n      this.isPointerDown = false;\n      delete this.pointerIdentifier;\n      this.unbindActivePointerEvents();\n      this.emitEvent('pointerDone');\n    };\n\n    // ----- cancel ----- //\n\n    proto.onpointercancel = function (event) {\n      this.withPointer('pointerCancel', event);\n    };\n    proto.ontouchcancel = function (event) {\n      this.withTouch('pointerCancel', event);\n    };\n    proto.pointerCancel = function (event, pointer) {\n      this.pointerDone();\n      this.emitEvent('pointerCancel', [event, pointer]);\n    };\n\n    // ----- click ----- //\n\n    // handle all clicks and prevent clicks when dragging\n    proto.onclick = function (event) {\n      if (this.isPreventingClicks) event.preventDefault();\n    };\n\n    // triggered after pointer down & up with no/tiny movement\n    proto.staticClick = function (event, pointer) {\n      // ignore emulated mouse up clicks\n      let isMouseup = event.type === 'mouseup';\n      if (isMouseup && this.isIgnoringMouseUp) return;\n      this.emitEvent('staticClick', [event, pointer]);\n\n      // set flag for emulated clicks 300ms after touchend\n      if (isMouseup) {\n        this.isIgnoringMouseUp = true;\n        // reset flag after 400ms\n        setTimeout(() => {\n          delete this.isIgnoringMouseUp;\n        }, 400);\n      }\n    };\n\n    // -----  ----- //\n\n    return Unidragger;\n  });\n});\nvar draggabilly = createCommonjsModule(function (module) {\n  /*!\n   * Draggabilly v3.0.0\n   * Make that shiz draggable\n   * https://draggabilly.desandro.com\n   * MIT license\n   */\n\n  (function (window, factory) {\n    // universal module definition\n    if (module.exports) {\n      // CommonJS\n      module.exports = factory(window, getSize, unidragger);\n    } else {\n      // browser global\n      window.Draggabilly = factory(window, window.getSize, window.Unidragger);\n    }\n  })(typeof window != 'undefined' ? window : commonjsGlobal, function factory(window, getSize, Unidragger) {\n    // -------------------------- helpers & variables -------------------------- //\n\n    function noop() {}\n    let jQuery = window.jQuery;\n\n    // -------------------------- Draggabilly -------------------------- //\n\n    function Draggabilly(element, options) {\n      // querySelector if string\n      this.element = typeof element == 'string' ? document.querySelector(element) : element;\n      if (jQuery) {\n        this.$element = jQuery(this.element);\n      }\n\n      // options\n      this.options = {};\n      this.option(options);\n      this._create();\n    }\n\n    // inherit Unidragger methods\n    let proto = Draggabilly.prototype = Object.create(Unidragger.prototype);\n\n    /**\n     * set options\n     * @param {Object} opts\n     */\n    proto.option = function (opts) {\n      this.options = {\n        ...this.options,\n        ...opts\n      };\n    };\n\n    // css position values that don't need to be set\n    const positionValues = ['relative', 'absolute', 'fixed'];\n    proto._create = function () {\n      // properties\n      this.position = {};\n      this._getPosition();\n      this.startPoint = {\n        x: 0,\n        y: 0\n      };\n      this.dragPoint = {\n        x: 0,\n        y: 0\n      };\n      this.startPosition = {\n        ...this.position\n      };\n\n      // set relative positioning\n      let style = getComputedStyle(this.element);\n      if (!positionValues.includes(style.position)) {\n        this.element.style.position = 'relative';\n      }\n\n      // events\n      this.on('pointerDown', this.handlePointerDown);\n      this.on('pointerUp', this.handlePointerUp);\n      this.on('dragStart', this.handleDragStart);\n      this.on('dragMove', this.handleDragMove);\n      this.on('dragEnd', this.handleDragEnd);\n      this.setHandles();\n      this.enable();\n    };\n\n    // set this.handles  and bind start events to 'em\n    proto.setHandles = function () {\n      let {\n        handle\n      } = this.options;\n      if (typeof handle == 'string') {\n        this.handles = this.element.querySelectorAll(handle);\n      } else if (typeof handle == 'object' && handle.length) {\n        this.handles = handle;\n      } else if (handle instanceof HTMLElement) {\n        this.handles = [handle];\n      } else {\n        this.handles = [this.element];\n      }\n    };\n    const cancelableEvents = ['dragStart', 'dragMove', 'dragEnd'];\n\n    // duck-punch emitEvent to dispatch jQuery events as well\n    let emitEvent = proto.emitEvent;\n    proto.emitEvent = function (eventName, args) {\n      // do not emit cancelable events if dragging is disabled\n      let isCanceled = !this.isEnabled && cancelableEvents.includes(eventName);\n      if (isCanceled) return;\n      emitEvent.call(this, eventName, args);\n\n      // trigger jQuery event\n      let jquery = window.jQuery;\n      if (!jquery || !this.$element) return;\n      // create jQuery event\n      let event;\n      let jqArgs = args;\n      let isFirstArgEvent = args && args[0] instanceof Event;\n      if (isFirstArgEvent) [event, ...jqArgs] = args;\n      /* eslint-disable-next-line new-cap */\n      let $event = jquery.Event(event);\n      $event.type = eventName;\n      this.$element.trigger($event, jqArgs);\n    };\n\n    // -------------------------- position -------------------------- //\n\n    // get x/y position from style\n    proto._getPosition = function () {\n      let style = getComputedStyle(this.element);\n      let x = this._getPositionCoord(style.left, 'width');\n      let y = this._getPositionCoord(style.top, 'height');\n      // clean up 'auto' or other non-integer values\n      this.position.x = isNaN(x) ? 0 : x;\n      this.position.y = isNaN(y) ? 0 : y;\n      this._addTransformPosition(style);\n    };\n    proto._getPositionCoord = function (styleSide, measure) {\n      if (styleSide.includes('%')) {\n        // convert percent into pixel for Safari, #75\n        let parentSize = getSize(this.element.parentNode);\n        // prevent not-in-DOM element throwing bug, #131\n        return !parentSize ? 0 : parseFloat(styleSide) / 100 * parentSize[measure];\n      }\n      return parseInt(styleSide, 10);\n    };\n\n    // add transform: translate( x, y ) to position\n    proto._addTransformPosition = function (style) {\n      let transform = style.transform;\n      // bail out if value is 'none'\n      if (!transform.startsWith('matrix')) return;\n\n      // split matrix(1, 0, 0, 1, x, y)\n      let matrixValues = transform.split(',');\n      // translate X value is in 12th or 4th position\n      let xIndex = transform.startsWith('matrix3d') ? 12 : 4;\n      let translateX = parseInt(matrixValues[xIndex], 10);\n      // translate Y value is in 13th or 5th position\n      let translateY = parseInt(matrixValues[xIndex + 1], 10);\n      this.position.x += translateX;\n      this.position.y += translateY;\n    };\n\n    // -------------------------- events -------------------------- //\n\n    proto.handlePointerDown = function (event, pointer) {\n      if (!this.isEnabled) return;\n      // track start event position\n      // Safari 9 overrides pageX and pageY. These values needs to be copied. flickity#842\n      this.pointerDownPointer = {\n        pageX: pointer.pageX,\n        pageY: pointer.pageY\n      };\n      event.preventDefault();\n      document.activeElement.blur();\n      // bind move and end events\n      this.bindActivePointerEvents(event);\n      this.element.classList.add('is-pointer-down');\n    };\n    proto.handleDragStart = function () {\n      if (!this.isEnabled) return;\n      this._getPosition();\n      this.measureContainment();\n      // position _when_ drag began\n      this.startPosition.x = this.position.x;\n      this.startPosition.y = this.position.y;\n      // reset left/top style\n      this.setLeftTop();\n      this.dragPoint.x = 0;\n      this.dragPoint.y = 0;\n      this.element.classList.add('is-dragging');\n      // start animation\n      this.animate();\n    };\n    proto.measureContainment = function () {\n      let container = this.getContainer();\n      if (!container) return;\n      let elemSize = getSize(this.element);\n      let containerSize = getSize(container);\n      let {\n        borderLeftWidth,\n        borderRightWidth,\n        borderTopWidth,\n        borderBottomWidth\n      } = containerSize;\n      let elemRect = this.element.getBoundingClientRect();\n      let containerRect = container.getBoundingClientRect();\n      let borderSizeX = borderLeftWidth + borderRightWidth;\n      let borderSizeY = borderTopWidth + borderBottomWidth;\n      let position = this.relativeStartPosition = {\n        x: elemRect.left - (containerRect.left + borderLeftWidth),\n        y: elemRect.top - (containerRect.top + borderTopWidth)\n      };\n      this.containSize = {\n        width: containerSize.width - borderSizeX - position.x - elemSize.width,\n        height: containerSize.height - borderSizeY - position.y - elemSize.height\n      };\n    };\n    proto.getContainer = function () {\n      let containment = this.options.containment;\n      if (!containment) return;\n      let isElement = containment instanceof HTMLElement;\n      // use as element\n      if (isElement) return containment;\n\n      // querySelector if string\n      if (typeof containment == 'string') {\n        return document.querySelector(containment);\n      }\n      // fallback to parent element\n      return this.element.parentNode;\n    };\n\n    // ----- move event ----- //\n\n    /**\n     * drag move\n     * @param {Event} event\n     * @param {Event | Touch} pointer\n     * @param {Object} moveVector - x and y coordinates\n     */\n    proto.handleDragMove = function (event, pointer, moveVector) {\n      if (!this.isEnabled) return;\n      let dragX = moveVector.x;\n      let dragY = moveVector.y;\n      let grid = this.options.grid;\n      let gridX = grid && grid[0];\n      let gridY = grid && grid[1];\n      dragX = applyGrid(dragX, gridX);\n      dragY = applyGrid(dragY, gridY);\n      dragX = this.containDrag('x', dragX, gridX);\n      dragY = this.containDrag('y', dragY, gridY);\n\n      // constrain to axis\n      dragX = this.options.axis == 'y' ? 0 : dragX;\n      dragY = this.options.axis == 'x' ? 0 : dragY;\n      this.position.x = this.startPosition.x + dragX;\n      this.position.y = this.startPosition.y + dragY;\n      // set dragPoint properties\n      this.dragPoint.x = dragX;\n      this.dragPoint.y = dragY;\n    };\n    function applyGrid(value, grid, method) {\n      if (!grid) return value;\n      method = method || 'round';\n      return Math[method](value / grid) * grid;\n    }\n    proto.containDrag = function (axis, drag, grid) {\n      if (!this.options.containment) return drag;\n      let measure = axis == 'x' ? 'width' : 'height';\n      let rel = this.relativeStartPosition[axis];\n      let min = applyGrid(-rel, grid, 'ceil');\n      let max = this.containSize[measure];\n      max = applyGrid(max, grid, 'floor');\n      return Math.max(min, Math.min(max, drag));\n    };\n\n    // ----- end event ----- //\n\n    proto.handlePointerUp = function () {\n      this.element.classList.remove('is-pointer-down');\n    };\n    proto.handleDragEnd = function () {\n      if (!this.isEnabled) return;\n\n      // use top left position when complete\n      this.element.style.transform = '';\n      this.setLeftTop();\n      this.element.classList.remove('is-dragging');\n    };\n\n    // -------------------------- animation -------------------------- //\n\n    proto.animate = function () {\n      // only render and animate if dragging\n      if (!this.isDragging) return;\n      this.positionDrag();\n      requestAnimationFrame(() => this.animate());\n    };\n\n    // left/top positioning\n    proto.setLeftTop = function () {\n      let {\n        x,\n        y\n      } = this.position;\n      this.element.style.left = `${x}px`;\n      this.element.style.top = `${y}px`;\n    };\n    proto.positionDrag = function () {\n      let {\n        x,\n        y\n      } = this.dragPoint;\n      this.element.style.transform = `translate3d(${x}px, ${y}px, 0)`;\n    };\n\n    // ----- methods ----- //\n\n    /**\n     * @param {Number} x\n     * @param {Number} y\n     */\n    proto.setPosition = function (x, y) {\n      this.position.x = x;\n      this.position.y = y;\n      this.setLeftTop();\n    };\n    proto.enable = function () {\n      if (this.isEnabled) return;\n      this.isEnabled = true;\n      this.bindHandles();\n    };\n    proto.disable = function () {\n      if (!this.isEnabled) return;\n      this.isEnabled = false;\n      if (this.isDragging) this.dragEnd();\n      this.unbindHandles();\n    };\n    const resetCssProperties = ['transform', 'left', 'top', 'position'];\n    proto.destroy = function () {\n      this.disable();\n      // reset styles\n      resetCssProperties.forEach(prop => {\n        this.element.style[prop] = '';\n      });\n      // unbind handles\n      this.unbindHandles();\n      // remove jQuery data\n      if (this.$element) this.$element.removeData('draggabilly');\n    };\n\n    // ----- jQuery bridget ----- //\n\n    // required for jQuery bridget\n    proto._init = noop;\n    if (jQuery && jQuery.bridget) {\n      jQuery.bridget('draggabilly', Draggabilly);\n    }\n\n    // -----  ----- //\n\n    return Draggabilly;\n  });\n});\nexport { draggabilly as d };"],
  "mappings": "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",
  "names": ["window", "getSize"]
}
