{
  "version": 3,
  "sources": ["../../../../../../node_modules/@firebase/performance/node_modules/web-vitals/dist/web-vitals.attribution.js", "../../../../../../node_modules/@firebase/performance/dist/esm/index.esm2017.js", "../../../../../../node_modules/@capacitor-firebase/performance/dist/esm/web.js"],
  "sourcesContent": ["var t,\n  e,\n  n = function () {\n    var t = self.performance && performance.getEntriesByType && performance.getEntriesByType(\"navigation\")[0];\n    if (t && t.responseStart > 0 && t.responseStart < performance.now()) return t;\n  },\n  r = function (t) {\n    if (\"loading\" === document.readyState) return \"loading\";\n    var e = n();\n    if (e) {\n      if (t < e.domInteractive) return \"loading\";\n      if (0 === e.domContentLoadedEventStart || t < e.domContentLoadedEventStart) return \"dom-interactive\";\n      if (0 === e.domComplete || t < e.domComplete) return \"dom-content-loaded\";\n    }\n    return \"complete\";\n  },\n  i = function (t) {\n    var e = t.nodeName;\n    return 1 === t.nodeType ? e.toLowerCase() : e.toUpperCase().replace(/^#/, \"\");\n  },\n  a = function (t, e) {\n    var n = \"\";\n    try {\n      for (; t && 9 !== t.nodeType;) {\n        var r = t,\n          a = r.id ? \"#\" + r.id : i(r) + (r.classList && r.classList.value && r.classList.value.trim() && r.classList.value.trim().length ? \".\" + r.classList.value.trim().replace(/\\s+/g, \".\") : \"\");\n        if (n.length + a.length > (e || 100) - 1) return n || a;\n        if (n = n ? a + \">\" + n : a, r.id) break;\n        t = r.parentNode;\n      }\n    } catch (t) {}\n    return n;\n  },\n  o = -1,\n  c = function () {\n    return o;\n  },\n  u = function (t) {\n    addEventListener(\"pageshow\", function (e) {\n      e.persisted && (o = e.timeStamp, t(e));\n    }, !0);\n  },\n  s = function () {\n    var t = n();\n    return t && t.activationStart || 0;\n  },\n  f = function (t, e) {\n    var r = n(),\n      i = \"navigate\";\n    c() >= 0 ? i = \"back-forward-cache\" : r && (document.prerendering || s() > 0 ? i = \"prerender\" : document.wasDiscarded ? i = \"restore\" : r.type && (i = r.type.replace(/_/g, \"-\")));\n    return {\n      name: t,\n      value: void 0 === e ? -1 : e,\n      rating: \"good\",\n      delta: 0,\n      entries: [],\n      id: \"v4-\".concat(Date.now(), \"-\").concat(Math.floor(8999999999999 * Math.random()) + 1e12),\n      navigationType: i\n    };\n  },\n  d = function (t, e, n) {\n    try {\n      if (PerformanceObserver.supportedEntryTypes.includes(t)) {\n        var r = new PerformanceObserver(function (t) {\n          Promise.resolve().then(function () {\n            e(t.getEntries());\n          });\n        });\n        return r.observe(Object.assign({\n          type: t,\n          buffered: !0\n        }, n || {})), r;\n      }\n    } catch (t) {}\n  },\n  l = function (t, e, n, r) {\n    var i, a;\n    return function (o) {\n      e.value >= 0 && (o || r) && ((a = e.value - (i || 0)) || void 0 === i) && (i = e.value, e.delta = a, e.rating = function (t, e) {\n        return t > e[1] ? \"poor\" : t > e[0] ? \"needs-improvement\" : \"good\";\n      }(e.value, n), t(e));\n    };\n  },\n  m = function (t) {\n    requestAnimationFrame(function () {\n      return requestAnimationFrame(function () {\n        return t();\n      });\n    });\n  },\n  p = function (t) {\n    document.addEventListener(\"visibilitychange\", function () {\n      \"hidden\" === document.visibilityState && t();\n    });\n  },\n  v = function (t) {\n    var e = !1;\n    return function () {\n      e || (t(), e = !0);\n    };\n  },\n  g = -1,\n  h = function () {\n    return \"hidden\" !== document.visibilityState || document.prerendering ? 1 / 0 : 0;\n  },\n  T = function (t) {\n    \"hidden\" === document.visibilityState && g > -1 && (g = \"visibilitychange\" === t.type ? t.timeStamp : 0, E());\n  },\n  y = function () {\n    addEventListener(\"visibilitychange\", T, !0), addEventListener(\"prerenderingchange\", T, !0);\n  },\n  E = function () {\n    removeEventListener(\"visibilitychange\", T, !0), removeEventListener(\"prerenderingchange\", T, !0);\n  },\n  S = function () {\n    return g < 0 && (g = h(), y(), u(function () {\n      setTimeout(function () {\n        g = h(), y();\n      }, 0);\n    })), {\n      get firstHiddenTime() {\n        return g;\n      }\n    };\n  },\n  b = function (t) {\n    document.prerendering ? addEventListener(\"prerenderingchange\", function () {\n      return t();\n    }, !0) : t();\n  },\n  L = [1800, 3e3],\n  C = function (t, e) {\n    e = e || {}, b(function () {\n      var n,\n        r = S(),\n        i = f(\"FCP\"),\n        a = d(\"paint\", function (t) {\n          t.forEach(function (t) {\n            \"first-contentful-paint\" === t.name && (a.disconnect(), t.startTime < r.firstHiddenTime && (i.value = Math.max(t.startTime - s(), 0), i.entries.push(t), n(!0)));\n          });\n        });\n      a && (n = l(t, i, L, e.reportAllChanges), u(function (r) {\n        i = f(\"FCP\"), n = l(t, i, L, e.reportAllChanges), m(function () {\n          i.value = performance.now() - r.timeStamp, n(!0);\n        });\n      }));\n    });\n  },\n  M = [.1, .25],\n  D = function (t, e) {\n    !function (t, e) {\n      e = e || {}, C(v(function () {\n        var n,\n          r = f(\"CLS\", 0),\n          i = 0,\n          a = [],\n          o = function (t) {\n            t.forEach(function (t) {\n              if (!t.hadRecentInput) {\n                var e = a[0],\n                  n = a[a.length - 1];\n                i && t.startTime - n.startTime < 1e3 && t.startTime - e.startTime < 5e3 ? (i += t.value, a.push(t)) : (i = t.value, a = [t]);\n              }\n            }), i > r.value && (r.value = i, r.entries = a, n());\n          },\n          c = d(\"layout-shift\", o);\n        c && (n = l(t, r, M, e.reportAllChanges), p(function () {\n          o(c.takeRecords()), n(!0);\n        }), u(function () {\n          i = 0, r = f(\"CLS\", 0), n = l(t, r, M, e.reportAllChanges), m(function () {\n            return n();\n          });\n        }), setTimeout(n, 0));\n      }));\n    }(function (e) {\n      var n = function (t) {\n        var e,\n          n = {};\n        if (t.entries.length) {\n          var i = t.entries.reduce(function (t, e) {\n            return t && t.value > e.value ? t : e;\n          });\n          if (i && i.sources && i.sources.length) {\n            var o = (e = i.sources).find(function (t) {\n              return t.node && 1 === t.node.nodeType;\n            }) || e[0];\n            o && (n = {\n              largestShiftTarget: a(o.node),\n              largestShiftTime: i.startTime,\n              largestShiftValue: i.value,\n              largestShiftSource: o,\n              largestShiftEntry: i,\n              loadState: r(i.startTime)\n            });\n          }\n        }\n        return Object.assign(t, {\n          attribution: n\n        });\n      }(e);\n      t(n);\n    }, e);\n  },\n  w = function (t, e) {\n    C(function (e) {\n      var i = function (t) {\n        var e = {\n          timeToFirstByte: 0,\n          firstByteToFCP: t.value,\n          loadState: r(c())\n        };\n        if (t.entries.length) {\n          var i = n(),\n            a = t.entries[t.entries.length - 1];\n          if (i) {\n            var o = i.activationStart || 0,\n              u = Math.max(0, i.responseStart - o);\n            e = {\n              timeToFirstByte: u,\n              firstByteToFCP: t.value - u,\n              loadState: r(t.entries[0].startTime),\n              navigationEntry: i,\n              fcpEntry: a\n            };\n          }\n        }\n        return Object.assign(t, {\n          attribution: e\n        });\n      }(e);\n      t(i);\n    }, e);\n  },\n  x = 0,\n  I = 1 / 0,\n  k = 0,\n  A = function (t) {\n    t.forEach(function (t) {\n      t.interactionId && (I = Math.min(I, t.interactionId), k = Math.max(k, t.interactionId), x = k ? (k - I) / 7 + 1 : 0);\n    });\n  },\n  F = function () {\n    return t ? x : performance.interactionCount || 0;\n  },\n  P = function () {\n    \"interactionCount\" in performance || t || (t = d(\"event\", A, {\n      type: \"event\",\n      buffered: !0,\n      durationThreshold: 0\n    }));\n  },\n  B = [],\n  O = new Map(),\n  R = 0,\n  j = function () {\n    var t = Math.min(B.length - 1, Math.floor((F() - R) / 50));\n    return B[t];\n  },\n  q = [],\n  H = function (t) {\n    if (q.forEach(function (e) {\n      return e(t);\n    }), t.interactionId || \"first-input\" === t.entryType) {\n      var e = B[B.length - 1],\n        n = O.get(t.interactionId);\n      if (n || B.length < 10 || t.duration > e.latency) {\n        if (n) t.duration > n.latency ? (n.entries = [t], n.latency = t.duration) : t.duration === n.latency && t.startTime === n.entries[0].startTime && n.entries.push(t);else {\n          var r = {\n            id: t.interactionId,\n            latency: t.duration,\n            entries: [t]\n          };\n          O.set(r.id, r), B.push(r);\n        }\n        B.sort(function (t, e) {\n          return e.latency - t.latency;\n        }), B.length > 10 && B.splice(10).forEach(function (t) {\n          return O.delete(t.id);\n        });\n      }\n    }\n  },\n  N = function (t) {\n    var e = self.requestIdleCallback || self.setTimeout,\n      n = -1;\n    return t = v(t), \"hidden\" === document.visibilityState ? t() : (n = e(t), p(t)), n;\n  },\n  W = [200, 500],\n  z = function (t, e) {\n    \"PerformanceEventTiming\" in self && \"interactionId\" in PerformanceEventTiming.prototype && (e = e || {}, b(function () {\n      var n;\n      P();\n      var r,\n        i = f(\"INP\"),\n        a = function (t) {\n          N(function () {\n            t.forEach(H);\n            var e = j();\n            e && e.latency !== i.value && (i.value = e.latency, i.entries = e.entries, r());\n          });\n        },\n        o = d(\"event\", a, {\n          durationThreshold: null !== (n = e.durationThreshold) && void 0 !== n ? n : 40\n        });\n      r = l(t, i, W, e.reportAllChanges), o && (o.observe({\n        type: \"first-input\",\n        buffered: !0\n      }), p(function () {\n        a(o.takeRecords()), r(!0);\n      }), u(function () {\n        R = F(), B.length = 0, O.clear(), i = f(\"INP\"), r = l(t, i, W, e.reportAllChanges);\n      }));\n    }));\n  },\n  U = [],\n  V = [],\n  _ = 0,\n  G = new WeakMap(),\n  J = new Map(),\n  K = -1,\n  Q = function (t) {\n    U = U.concat(t), X();\n  },\n  X = function () {\n    K < 0 && (K = N(Y));\n  },\n  Y = function () {\n    J.size > 10 && J.forEach(function (t, e) {\n      O.has(e) || J.delete(e);\n    });\n    var t = B.map(function (t) {\n        return G.get(t.entries[0]);\n      }),\n      e = V.length - 50;\n    V = V.filter(function (n, r) {\n      return r >= e || t.includes(n);\n    });\n    for (var n = new Set(), r = 0; r < V.length; r++) {\n      var i = V[r];\n      nt(i.startTime, i.processingEnd).forEach(function (t) {\n        n.add(t);\n      });\n    }\n    var a = U.length - 1 - 50;\n    U = U.filter(function (t, e) {\n      return t.startTime > _ && e > a || n.has(t);\n    }), K = -1;\n  };\nq.push(function (t) {\n  t.interactionId && t.target && !J.has(t.interactionId) && J.set(t.interactionId, t.target);\n}, function (t) {\n  var e,\n    n = t.startTime + t.duration;\n  _ = Math.max(_, t.processingEnd);\n  for (var r = V.length - 1; r >= 0; r--) {\n    var i = V[r];\n    if (Math.abs(n - i.renderTime) <= 8) {\n      (e = i).startTime = Math.min(t.startTime, e.startTime), e.processingStart = Math.min(t.processingStart, e.processingStart), e.processingEnd = Math.max(t.processingEnd, e.processingEnd), e.entries.push(t);\n      break;\n    }\n  }\n  e || (e = {\n    startTime: t.startTime,\n    processingStart: t.processingStart,\n    processingEnd: t.processingEnd,\n    renderTime: n,\n    entries: [t]\n  }, V.push(e)), (t.interactionId || \"first-input\" === t.entryType) && G.set(t, e), X();\n});\nvar Z,\n  $,\n  tt,\n  et,\n  nt = function (t, e) {\n    for (var n, r = [], i = 0; n = U[i]; i++) if (!(n.startTime + n.duration < t)) {\n      if (n.startTime > e) break;\n      r.push(n);\n    }\n    return r;\n  },\n  rt = function (t, n) {\n    e || (e = d(\"long-animation-frame\", Q)), z(function (e) {\n      var n = function (t) {\n        var e = t.entries[0],\n          n = G.get(e),\n          i = e.processingStart,\n          o = n.processingEnd,\n          c = n.entries.sort(function (t, e) {\n            return t.processingStart - e.processingStart;\n          }),\n          u = nt(e.startTime, o),\n          s = t.entries.find(function (t) {\n            return t.target;\n          }),\n          f = s && s.target || J.get(e.interactionId),\n          d = [e.startTime + e.duration, o].concat(u.map(function (t) {\n            return t.startTime + t.duration;\n          })),\n          l = Math.max.apply(Math, d),\n          m = {\n            interactionTarget: a(f),\n            interactionTargetElement: f,\n            interactionType: e.name.startsWith(\"key\") ? \"keyboard\" : \"pointer\",\n            interactionTime: e.startTime,\n            nextPaintTime: l,\n            processedEventEntries: c,\n            longAnimationFrameEntries: u,\n            inputDelay: i - e.startTime,\n            processingDuration: o - i,\n            presentationDelay: Math.max(l - o, 0),\n            loadState: r(e.startTime)\n          };\n        return Object.assign(t, {\n          attribution: m\n        });\n      }(e);\n      t(n);\n    }, n);\n  },\n  it = [2500, 4e3],\n  at = {},\n  ot = function (t, e) {\n    !function (t, e) {\n      e = e || {}, b(function () {\n        var n,\n          r = S(),\n          i = f(\"LCP\"),\n          a = function (t) {\n            e.reportAllChanges || (t = t.slice(-1)), t.forEach(function (t) {\n              t.startTime < r.firstHiddenTime && (i.value = Math.max(t.startTime - s(), 0), i.entries = [t], n());\n            });\n          },\n          o = d(\"largest-contentful-paint\", a);\n        if (o) {\n          n = l(t, i, it, e.reportAllChanges);\n          var c = v(function () {\n            at[i.id] || (a(o.takeRecords()), o.disconnect(), at[i.id] = !0, n(!0));\n          });\n          [\"keydown\", \"click\"].forEach(function (t) {\n            addEventListener(t, function () {\n              return N(c);\n            }, {\n              once: !0,\n              capture: !0\n            });\n          }), p(c), u(function (r) {\n            i = f(\"LCP\"), n = l(t, i, it, e.reportAllChanges), m(function () {\n              i.value = performance.now() - r.timeStamp, at[i.id] = !0, n(!0);\n            });\n          });\n        }\n      });\n    }(function (e) {\n      var r = function (t) {\n        var e = {\n          timeToFirstByte: 0,\n          resourceLoadDelay: 0,\n          resourceLoadDuration: 0,\n          elementRenderDelay: t.value\n        };\n        if (t.entries.length) {\n          var r = n();\n          if (r) {\n            var i = r.activationStart || 0,\n              o = t.entries[t.entries.length - 1],\n              c = o.url && performance.getEntriesByType(\"resource\").filter(function (t) {\n                return t.name === o.url;\n              })[0],\n              u = Math.max(0, r.responseStart - i),\n              s = Math.max(u, c ? (c.requestStart || c.startTime) - i : 0),\n              f = Math.max(s, c ? c.responseEnd - i : 0),\n              d = Math.max(f, o.startTime - i);\n            e = {\n              element: a(o.element),\n              timeToFirstByte: u,\n              resourceLoadDelay: s - u,\n              resourceLoadDuration: f - s,\n              elementRenderDelay: d - f,\n              navigationEntry: r,\n              lcpEntry: o\n            }, o.url && (e.url = o.url), c && (e.lcpResourceEntry = c);\n          }\n        }\n        return Object.assign(t, {\n          attribution: e\n        });\n      }(e);\n      t(r);\n    }, e);\n  },\n  ct = [800, 1800],\n  ut = function t(e) {\n    document.prerendering ? b(function () {\n      return t(e);\n    }) : \"complete\" !== document.readyState ? addEventListener(\"load\", function () {\n      return t(e);\n    }, !0) : setTimeout(e, 0);\n  },\n  st = function (t, e) {\n    e = e || {};\n    var r = f(\"TTFB\"),\n      i = l(t, r, ct, e.reportAllChanges);\n    ut(function () {\n      var a = n();\n      a && (r.value = Math.max(a.responseStart - s(), 0), r.entries = [a], i(!0), u(function () {\n        r = f(\"TTFB\", 0), (i = l(t, r, ct, e.reportAllChanges))(!0);\n      }));\n    });\n  },\n  ft = function (t, e) {\n    st(function (e) {\n      var n = function (t) {\n        var e = {\n          waitingDuration: 0,\n          cacheDuration: 0,\n          dnsDuration: 0,\n          connectionDuration: 0,\n          requestDuration: 0\n        };\n        if (t.entries.length) {\n          var n = t.entries[0],\n            r = n.activationStart || 0,\n            i = Math.max((n.workerStart || n.fetchStart) - r, 0),\n            a = Math.max(n.domainLookupStart - r, 0),\n            o = Math.max(n.connectStart - r, 0),\n            c = Math.max(n.connectEnd - r, 0);\n          e = {\n            waitingDuration: i,\n            cacheDuration: a - i,\n            dnsDuration: o - a,\n            connectionDuration: c - o,\n            requestDuration: t.value - c,\n            navigationEntry: n\n          };\n        }\n        return Object.assign(t, {\n          attribution: e\n        });\n      }(e);\n      t(n);\n    }, e);\n  },\n  dt = {\n    passive: !0,\n    capture: !0\n  },\n  lt = new Date(),\n  mt = function (t, e) {\n    Z || (Z = e, $ = t, tt = new Date(), gt(removeEventListener), pt());\n  },\n  pt = function () {\n    if ($ >= 0 && $ < tt - lt) {\n      var t = {\n        entryType: \"first-input\",\n        name: Z.type,\n        target: Z.target,\n        cancelable: Z.cancelable,\n        startTime: Z.timeStamp,\n        processingStart: Z.timeStamp + $\n      };\n      et.forEach(function (e) {\n        e(t);\n      }), et = [];\n    }\n  },\n  vt = function (t) {\n    if (t.cancelable) {\n      var e = (t.timeStamp > 1e12 ? new Date() : performance.now()) - t.timeStamp;\n      \"pointerdown\" == t.type ? function (t, e) {\n        var n = function () {\n            mt(t, e), i();\n          },\n          r = function () {\n            i();\n          },\n          i = function () {\n            removeEventListener(\"pointerup\", n, dt), removeEventListener(\"pointercancel\", r, dt);\n          };\n        addEventListener(\"pointerup\", n, dt), addEventListener(\"pointercancel\", r, dt);\n      }(e, t) : mt(e, t);\n    }\n  },\n  gt = function (t) {\n    [\"mousedown\", \"keydown\", \"touchstart\", \"pointerdown\"].forEach(function (e) {\n      return t(e, vt, dt);\n    });\n  },\n  ht = [100, 300],\n  Tt = function (t, e) {\n    e = e || {}, b(function () {\n      var n,\n        r = S(),\n        i = f(\"FID\"),\n        a = function (t) {\n          t.startTime < r.firstHiddenTime && (i.value = t.processingStart - t.startTime, i.entries.push(t), n(!0));\n        },\n        o = function (t) {\n          t.forEach(a);\n        },\n        c = d(\"first-input\", o);\n      n = l(t, i, ht, e.reportAllChanges), c && (p(v(function () {\n        o(c.takeRecords()), c.disconnect();\n      })), u(function () {\n        var r;\n        i = f(\"FID\"), n = l(t, i, ht, e.reportAllChanges), et = [], $ = -1, Z = null, gt(addEventListener), r = a, et.push(r), pt();\n      }));\n    });\n  },\n  yt = function (t, e) {\n    Tt(function (e) {\n      var n = function (t) {\n        var e = t.entries[0],\n          n = {\n            eventTarget: a(e.target),\n            eventType: e.name,\n            eventTime: e.startTime,\n            eventEntry: e,\n            loadState: r(e.startTime)\n          };\n        return Object.assign(t, {\n          attribution: n\n        });\n      }(e);\n      t(n);\n    }, e);\n  };\nexport { M as CLSThresholds, L as FCPThresholds, ht as FIDThresholds, W as INPThresholds, it as LCPThresholds, ct as TTFBThresholds, D as onCLS, w as onFCP, yt as onFID, rt as onINP, ot as onLCP, ft as onTTFB };", "import { ErrorFactory, areCookiesEnabled, isIndexedDBAvailable, validateIndexedDBOpenable, getModularInstance, deepEqual } from '@firebase/util';\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { onLCP, onINP, onCLS } from 'web-vitals/attribution';\nimport { _getProvider, getApp, _registerComponent, registerVersion } from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport '@firebase/installations';\nconst name = \"@firebase/performance\";\nconst version = \"0.7.6\";\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst SDK_VERSION = version;\n/** The prefix for start User Timing marks used for creating Traces. */\nconst TRACE_START_MARK_PREFIX = 'FB-PERF-TRACE-START';\n/** The prefix for stop User Timing marks used for creating Traces. */\nconst TRACE_STOP_MARK_PREFIX = 'FB-PERF-TRACE-STOP';\n/** The prefix for User Timing measure used for creating Traces. */\nconst TRACE_MEASURE_PREFIX = 'FB-PERF-TRACE-MEASURE';\n/** The prefix for out of the box page load Trace name. */\nconst OOB_TRACE_PAGE_LOAD_PREFIX = '_wt_';\nconst FIRST_PAINT_COUNTER_NAME = '_fp';\nconst FIRST_CONTENTFUL_PAINT_COUNTER_NAME = '_fcp';\nconst FIRST_INPUT_DELAY_COUNTER_NAME = '_fid';\nconst LARGEST_CONTENTFUL_PAINT_METRIC_NAME = '_lcp';\nconst LARGEST_CONTENTFUL_PAINT_ATTRIBUTE_NAME = 'lcp_element';\nconst INTERACTION_TO_NEXT_PAINT_METRIC_NAME = '_inp';\nconst INTERACTION_TO_NEXT_PAINT_ATTRIBUTE_NAME = 'inp_interactionTarget';\nconst CUMULATIVE_LAYOUT_SHIFT_METRIC_NAME = '_cls';\nconst CUMULATIVE_LAYOUT_SHIFT_ATTRIBUTE_NAME = 'cls_largestShiftTarget';\nconst CONFIG_LOCAL_STORAGE_KEY = '@firebase/performance/config';\nconst CONFIG_EXPIRY_LOCAL_STORAGE_KEY = '@firebase/performance/configexpire';\nconst SERVICE = 'performance';\nconst SERVICE_NAME = 'Performance';\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst ERROR_DESCRIPTION_MAP = {\n  [\"trace started\" /* ErrorCode.TRACE_STARTED_BEFORE */]: 'Trace {$traceName} was started before.',\n  [\"trace stopped\" /* ErrorCode.TRACE_STOPPED_BEFORE */]: 'Trace {$traceName} is not running.',\n  [\"nonpositive trace startTime\" /* ErrorCode.NONPOSITIVE_TRACE_START_TIME */]: 'Trace {$traceName} startTime should be positive.',\n  [\"nonpositive trace duration\" /* ErrorCode.NONPOSITIVE_TRACE_DURATION */]: 'Trace {$traceName} duration should be positive.',\n  [\"no window\" /* ErrorCode.NO_WINDOW */]: 'Window is not available.',\n  [\"no app id\" /* ErrorCode.NO_APP_ID */]: 'App id is not available.',\n  [\"no project id\" /* ErrorCode.NO_PROJECT_ID */]: 'Project id is not available.',\n  [\"no api key\" /* ErrorCode.NO_API_KEY */]: 'Api key is not available.',\n  [\"invalid cc log\" /* ErrorCode.INVALID_CC_LOG */]: 'Attempted to queue invalid cc event',\n  [\"FB not default\" /* ErrorCode.FB_NOT_DEFAULT */]: 'Performance can only start when Firebase app instance is the default one.',\n  [\"RC response not ok\" /* ErrorCode.RC_NOT_OK */]: 'RC response is not ok',\n  [\"invalid attribute name\" /* ErrorCode.INVALID_ATTRIBUTE_NAME */]: 'Attribute name {$attributeName} is invalid.',\n  [\"invalid attribute value\" /* ErrorCode.INVALID_ATTRIBUTE_VALUE */]: 'Attribute value {$attributeValue} is invalid.',\n  [\"invalid custom metric name\" /* ErrorCode.INVALID_CUSTOM_METRIC_NAME */]: 'Custom metric name {$customMetricName} is invalid',\n  [\"invalid String merger input\" /* ErrorCode.INVALID_STRING_MERGER_PARAMETER */]: 'Input for String merger is invalid, contact support team to resolve.',\n  [\"already initialized\" /* ErrorCode.ALREADY_INITIALIZED */]: 'initializePerformance() has already been called with ' + 'different options. To avoid this error, call initializePerformance() with the ' + 'same options as when it was originally called, or call getPerformance() to return the' + ' already initialized instance.'\n};\nconst ERROR_FACTORY = new ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst consoleLogger = new Logger(SERVICE_NAME);\nconsoleLogger.logLevel = LogLevel.INFO;\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet apiInstance;\nlet windowInstance;\n/**\n * This class holds a reference to various browser related objects injected by\n * set methods.\n */\nclass Api {\n  constructor(window) {\n    this.window = window;\n    if (!window) {\n      throw ERROR_FACTORY.create(\"no window\" /* ErrorCode.NO_WINDOW */);\n    }\n    this.performance = window.performance;\n    this.PerformanceObserver = window.PerformanceObserver;\n    this.windowLocation = window.location;\n    this.navigator = window.navigator;\n    this.document = window.document;\n    if (this.navigator && this.navigator.cookieEnabled) {\n      // If user blocks cookies on the browser, accessing localStorage will\n      // throw an exception.\n      this.localStorage = window.localStorage;\n    }\n    if (window.perfMetrics && window.perfMetrics.onFirstInputDelay) {\n      this.onFirstInputDelay = window.perfMetrics.onFirstInputDelay;\n    }\n    this.onLCP = onLCP;\n    this.onINP = onINP;\n    this.onCLS = onCLS;\n  }\n  getUrl() {\n    // Do not capture the string query part of url.\n    return this.windowLocation.href.split('?')[0];\n  }\n  mark(name) {\n    if (!this.performance || !this.performance.mark) {\n      return;\n    }\n    this.performance.mark(name);\n  }\n  measure(measureName, mark1, mark2) {\n    if (!this.performance || !this.performance.measure) {\n      return;\n    }\n    this.performance.measure(measureName, mark1, mark2);\n  }\n  getEntriesByType(type) {\n    if (!this.performance || !this.performance.getEntriesByType) {\n      return [];\n    }\n    return this.performance.getEntriesByType(type);\n  }\n  getEntriesByName(name) {\n    if (!this.performance || !this.performance.getEntriesByName) {\n      return [];\n    }\n    return this.performance.getEntriesByName(name);\n  }\n  getTimeOrigin() {\n    // Polyfill the time origin with performance.timing.navigationStart.\n    return this.performance && (this.performance.timeOrigin || this.performance.timing.navigationStart);\n  }\n  requiredApisAvailable() {\n    if (!fetch || !Promise || !areCookiesEnabled()) {\n      consoleLogger.info('Firebase Performance cannot start if browser does not support fetch and Promise or cookie is disabled.');\n      return false;\n    }\n    if (!isIndexedDBAvailable()) {\n      consoleLogger.info('IndexedDB is not supported by current browser');\n      return false;\n    }\n    return true;\n  }\n  setupObserver(entryType, callback) {\n    if (!this.PerformanceObserver) {\n      return;\n    }\n    const observer = new this.PerformanceObserver(list => {\n      for (const entry of list.getEntries()) {\n        // `entry` is a PerformanceEntry instance.\n        callback(entry);\n      }\n    });\n    // Start observing the entry types you care about.\n    observer.observe({\n      entryTypes: [entryType]\n    });\n  }\n  static getInstance() {\n    if (apiInstance === undefined) {\n      apiInstance = new Api(windowInstance);\n    }\n    return apiInstance;\n  }\n}\nfunction setupApi(window) {\n  windowInstance = window;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet iid;\nfunction getIidPromise(installationsService) {\n  const iidPromise = installationsService.getId();\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  iidPromise.then(iidVal => {\n    iid = iidVal;\n  });\n  return iidPromise;\n}\n// This method should be used after the iid is retrieved by getIidPromise method.\nfunction getIid() {\n  return iid;\n}\nfunction getAuthTokenPromise(installationsService) {\n  const authTokenPromise = installationsService.getToken();\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  authTokenPromise.then(authTokenVal => {});\n  return authTokenPromise;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction mergeStrings(part1, part2) {\n  const sizeDiff = part1.length - part2.length;\n  if (sizeDiff < 0 || sizeDiff > 1) {\n    throw ERROR_FACTORY.create(\"invalid String merger input\" /* ErrorCode.INVALID_STRING_MERGER_PARAMETER */);\n  }\n  const resultArray = [];\n  for (let i = 0; i < part1.length; i++) {\n    resultArray.push(part1.charAt(i));\n    if (part2.length > i) {\n      resultArray.push(part2.charAt(i));\n    }\n  }\n  return resultArray.join('');\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet settingsServiceInstance;\nclass SettingsService {\n  constructor() {\n    // The variable which controls logging of automatic traces and HTTP/S network monitoring.\n    this.instrumentationEnabled = true;\n    // The variable which controls logging of custom traces.\n    this.dataCollectionEnabled = true;\n    // Configuration flags set through remote config.\n    this.loggingEnabled = false;\n    // Sampling rate between 0 and 1.\n    this.tracesSamplingRate = 1;\n    this.networkRequestsSamplingRate = 1;\n    // Address of logging service.\n    this.logEndPointUrl = 'https://firebaselogging.googleapis.com/v0cc/log?format=json_proto';\n    // Performance event transport endpoint URL which should be compatible with proto3.\n    // New Address for transport service, not configurable via Remote Config.\n    this.flTransportEndpointUrl = mergeStrings('hts/frbslgigp.ogepscmv/ieo/eaylg', 'tp:/ieaeogn-agolai.o/1frlglgc/o');\n    this.transportKey = mergeStrings('AzSC8r6ReiGqFMyfvgow', 'Iayx0u-XT3vksVM-pIV');\n    // Source type for performance event logs.\n    this.logSource = 462;\n    // Flags which control per session logging of traces and network requests.\n    this.logTraceAfterSampling = false;\n    this.logNetworkAfterSampling = false;\n    // TTL of config retrieved from remote config in hours.\n    this.configTimeToLive = 12;\n  }\n  getFlTransportFullUrl() {\n    return this.flTransportEndpointUrl.concat('?key=', this.transportKey);\n  }\n  static getInstance() {\n    if (settingsServiceInstance === undefined) {\n      settingsServiceInstance = new SettingsService();\n    }\n    return settingsServiceInstance;\n  }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar VisibilityState;\n(function (VisibilityState) {\n  VisibilityState[VisibilityState[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  VisibilityState[VisibilityState[\"VISIBLE\"] = 1] = \"VISIBLE\";\n  VisibilityState[VisibilityState[\"HIDDEN\"] = 2] = \"HIDDEN\";\n})(VisibilityState || (VisibilityState = {}));\nconst RESERVED_ATTRIBUTE_PREFIXES = ['firebase_', 'google_', 'ga_'];\nconst ATTRIBUTE_FORMAT_REGEX = new RegExp('^[a-zA-Z]\\\\w*$');\nconst MAX_ATTRIBUTE_NAME_LENGTH = 40;\nconst MAX_ATTRIBUTE_VALUE_LENGTH = 100;\nfunction getServiceWorkerStatus() {\n  const navigator = Api.getInstance().navigator;\n  if (navigator === null || navigator === void 0 ? void 0 : navigator.serviceWorker) {\n    if (navigator.serviceWorker.controller) {\n      return 2 /* ServiceWorkerStatus.CONTROLLED */;\n    } else {\n      return 3 /* ServiceWorkerStatus.UNCONTROLLED */;\n    }\n  } else {\n    return 1 /* ServiceWorkerStatus.UNSUPPORTED */;\n  }\n}\nfunction getVisibilityState() {\n  const document = Api.getInstance().document;\n  const visibilityState = document.visibilityState;\n  switch (visibilityState) {\n    case 'visible':\n      return VisibilityState.VISIBLE;\n    case 'hidden':\n      return VisibilityState.HIDDEN;\n    default:\n      return VisibilityState.UNKNOWN;\n  }\n}\nfunction getEffectiveConnectionType() {\n  const navigator = Api.getInstance().navigator;\n  const navigatorConnection = navigator.connection;\n  const effectiveType = navigatorConnection && navigatorConnection.effectiveType;\n  switch (effectiveType) {\n    case 'slow-2g':\n      return 1 /* EffectiveConnectionType.CONNECTION_SLOW_2G */;\n    case '2g':\n      return 2 /* EffectiveConnectionType.CONNECTION_2G */;\n    case '3g':\n      return 3 /* EffectiveConnectionType.CONNECTION_3G */;\n    case '4g':\n      return 4 /* EffectiveConnectionType.CONNECTION_4G */;\n    default:\n      return 0 /* EffectiveConnectionType.UNKNOWN */;\n  }\n}\nfunction isValidCustomAttributeName(name) {\n  if (name.length === 0 || name.length > MAX_ATTRIBUTE_NAME_LENGTH) {\n    return false;\n  }\n  const matchesReservedPrefix = RESERVED_ATTRIBUTE_PREFIXES.some(prefix => name.startsWith(prefix));\n  return !matchesReservedPrefix && !!name.match(ATTRIBUTE_FORMAT_REGEX);\n}\nfunction isValidCustomAttributeValue(value) {\n  return value.length !== 0 && value.length <= MAX_ATTRIBUTE_VALUE_LENGTH;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction getAppId(firebaseApp) {\n  var _a;\n  const appId = (_a = firebaseApp.options) === null || _a === void 0 ? void 0 : _a.appId;\n  if (!appId) {\n    throw ERROR_FACTORY.create(\"no app id\" /* ErrorCode.NO_APP_ID */);\n  }\n  return appId;\n}\nfunction getProjectId(firebaseApp) {\n  var _a;\n  const projectId = (_a = firebaseApp.options) === null || _a === void 0 ? void 0 : _a.projectId;\n  if (!projectId) {\n    throw ERROR_FACTORY.create(\"no project id\" /* ErrorCode.NO_PROJECT_ID */);\n  }\n  return projectId;\n}\nfunction getApiKey(firebaseApp) {\n  var _a;\n  const apiKey = (_a = firebaseApp.options) === null || _a === void 0 ? void 0 : _a.apiKey;\n  if (!apiKey) {\n    throw ERROR_FACTORY.create(\"no api key\" /* ErrorCode.NO_API_KEY */);\n  }\n  return apiKey;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst REMOTE_CONFIG_SDK_VERSION = '0.0.1';\n// These values will be used if the remote config object is successfully\n// retrieved, but the template does not have these fields.\nconst DEFAULT_CONFIGS = {\n  loggingEnabled: true\n};\nconst FIS_AUTH_PREFIX = 'FIREBASE_INSTALLATIONS_AUTH';\nfunction getConfig(performanceController, iid) {\n  const config = getStoredConfig();\n  if (config) {\n    processConfig(config);\n    return Promise.resolve();\n  }\n  return getRemoteConfig(performanceController, iid).then(processConfig).then(config => storeConfig(config), /** Do nothing for error, use defaults set in settings service. */\n  () => {});\n}\nfunction getStoredConfig() {\n  const localStorage = Api.getInstance().localStorage;\n  if (!localStorage) {\n    return;\n  }\n  const expiryString = localStorage.getItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY);\n  if (!expiryString || !configValid(expiryString)) {\n    return;\n  }\n  const configStringified = localStorage.getItem(CONFIG_LOCAL_STORAGE_KEY);\n  if (!configStringified) {\n    return;\n  }\n  try {\n    const configResponse = JSON.parse(configStringified);\n    return configResponse;\n  } catch (_a) {\n    return;\n  }\n}\nfunction storeConfig(config) {\n  const localStorage = Api.getInstance().localStorage;\n  if (!config || !localStorage) {\n    return;\n  }\n  localStorage.setItem(CONFIG_LOCAL_STORAGE_KEY, JSON.stringify(config));\n  localStorage.setItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY, String(Date.now() + SettingsService.getInstance().configTimeToLive * 60 * 60 * 1000));\n}\nconst COULD_NOT_GET_CONFIG_MSG = 'Could not fetch config, will use default configs';\nfunction getRemoteConfig(performanceController, iid) {\n  // Perf needs auth token only to retrieve remote config.\n  return getAuthTokenPromise(performanceController.installations).then(authToken => {\n    const projectId = getProjectId(performanceController.app);\n    const apiKey = getApiKey(performanceController.app);\n    const configEndPoint = `https://firebaseremoteconfig.googleapis.com/v1/projects/${projectId}/namespaces/fireperf:fetch?key=${apiKey}`;\n    const request = new Request(configEndPoint, {\n      method: 'POST',\n      headers: {\n        Authorization: `${FIS_AUTH_PREFIX} ${authToken}`\n      },\n      /* eslint-disable camelcase */\n      body: JSON.stringify({\n        app_instance_id: iid,\n        app_instance_id_token: authToken,\n        app_id: getAppId(performanceController.app),\n        app_version: SDK_VERSION,\n        sdk_version: REMOTE_CONFIG_SDK_VERSION\n      })\n      /* eslint-enable camelcase */\n    });\n    return fetch(request).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      // In case response is not ok. This will be caught by catch.\n      throw ERROR_FACTORY.create(\"RC response not ok\" /* ErrorCode.RC_NOT_OK */);\n    });\n  }).catch(() => {\n    consoleLogger.info(COULD_NOT_GET_CONFIG_MSG);\n    return undefined;\n  });\n}\n/**\n * Processes config coming either from calling RC or from local storage.\n * This method only runs if call is successful or config in storage\n * is valid.\n */\nfunction processConfig(config) {\n  if (!config) {\n    return config;\n  }\n  const settingsServiceInstance = SettingsService.getInstance();\n  const entries = config.entries || {};\n  if (entries.fpr_enabled !== undefined) {\n    // TODO: Change the assignment of loggingEnabled once the received type is\n    // known.\n    settingsServiceInstance.loggingEnabled = String(entries.fpr_enabled) === 'true';\n  } else {\n    // Config retrieved successfully, but there is no fpr_enabled in template.\n    // Use secondary configs value.\n    settingsServiceInstance.loggingEnabled = DEFAULT_CONFIGS.loggingEnabled;\n  }\n  if (entries.fpr_log_source) {\n    settingsServiceInstance.logSource = Number(entries.fpr_log_source);\n  } else if (DEFAULT_CONFIGS.logSource) {\n    settingsServiceInstance.logSource = DEFAULT_CONFIGS.logSource;\n  }\n  if (entries.fpr_log_endpoint_url) {\n    settingsServiceInstance.logEndPointUrl = entries.fpr_log_endpoint_url;\n  } else if (DEFAULT_CONFIGS.logEndPointUrl) {\n    settingsServiceInstance.logEndPointUrl = DEFAULT_CONFIGS.logEndPointUrl;\n  }\n  // Key from Remote Config has to be non-empty string, otherwise use local value.\n  if (entries.fpr_log_transport_key) {\n    settingsServiceInstance.transportKey = entries.fpr_log_transport_key;\n  } else if (DEFAULT_CONFIGS.transportKey) {\n    settingsServiceInstance.transportKey = DEFAULT_CONFIGS.transportKey;\n  }\n  if (entries.fpr_vc_network_request_sampling_rate !== undefined) {\n    settingsServiceInstance.networkRequestsSamplingRate = Number(entries.fpr_vc_network_request_sampling_rate);\n  } else if (DEFAULT_CONFIGS.networkRequestsSamplingRate !== undefined) {\n    settingsServiceInstance.networkRequestsSamplingRate = DEFAULT_CONFIGS.networkRequestsSamplingRate;\n  }\n  if (entries.fpr_vc_trace_sampling_rate !== undefined) {\n    settingsServiceInstance.tracesSamplingRate = Number(entries.fpr_vc_trace_sampling_rate);\n  } else if (DEFAULT_CONFIGS.tracesSamplingRate !== undefined) {\n    settingsServiceInstance.tracesSamplingRate = DEFAULT_CONFIGS.tracesSamplingRate;\n  }\n  // Set the per session trace and network logging flags.\n  settingsServiceInstance.logTraceAfterSampling = shouldLogAfterSampling(settingsServiceInstance.tracesSamplingRate);\n  settingsServiceInstance.logNetworkAfterSampling = shouldLogAfterSampling(settingsServiceInstance.networkRequestsSamplingRate);\n  return config;\n}\nfunction configValid(expiry) {\n  return Number(expiry) > Date.now();\n}\nfunction shouldLogAfterSampling(samplingRate) {\n  return Math.random() <= samplingRate;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet initializationStatus = 1 /* InitializationStatus.notInitialized */;\nlet initializationPromise;\nfunction getInitializationPromise(performanceController) {\n  initializationStatus = 2 /* InitializationStatus.initializationPending */;\n  initializationPromise = initializationPromise || initializePerf(performanceController);\n  return initializationPromise;\n}\nfunction isPerfInitialized() {\n  return initializationStatus === 3 /* InitializationStatus.initialized */;\n}\nfunction initializePerf(performanceController) {\n  return getDocumentReadyComplete().then(() => getIidPromise(performanceController.installations)).then(iid => getConfig(performanceController, iid)).then(() => changeInitializationStatus(), () => changeInitializationStatus());\n}\n/**\n * Returns a promise which resolves whenever the document readystate is complete or\n * immediately if it is called after page load complete.\n */\nfunction getDocumentReadyComplete() {\n  const document = Api.getInstance().document;\n  return new Promise(resolve => {\n    if (document && document.readyState !== 'complete') {\n      const handler = () => {\n        if (document.readyState === 'complete') {\n          document.removeEventListener('readystatechange', handler);\n          resolve();\n        }\n      };\n      document.addEventListener('readystatechange', handler);\n    } else {\n      resolve();\n    }\n  });\n}\nfunction changeInitializationStatus() {\n  initializationStatus = 3 /* InitializationStatus.initialized */;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst DEFAULT_SEND_INTERVAL_MS = 10 * 1000;\nconst INITIAL_SEND_TIME_DELAY_MS = 5.5 * 1000;\nconst MAX_EVENT_COUNT_PER_REQUEST = 1000;\nconst DEFAULT_REMAINING_TRIES = 3;\nlet remainingTries = DEFAULT_REMAINING_TRIES;\n/* eslint-enable camelcase */\nlet queue = [];\nlet isTransportSetup = false;\nfunction setupTransportService() {\n  if (!isTransportSetup) {\n    processQueue(INITIAL_SEND_TIME_DELAY_MS);\n    isTransportSetup = true;\n  }\n}\nfunction processQueue(timeOffset) {\n  setTimeout(() => {\n    // If there is no remainingTries left, stop retrying.\n    if (remainingTries <= 0) {\n      return;\n    }\n    if (queue.length > 0) {\n      dispatchQueueEvents();\n    }\n    processQueue(DEFAULT_SEND_INTERVAL_MS);\n  }, timeOffset);\n}\nfunction dispatchQueueEvents() {\n  // Extract events up to the maximum cap of single logRequest from top of \"official queue\".\n  // The staged events will be used for current logRequest attempt, remaining events will be kept\n  // for next attempt.\n  const staged = queue.splice(0, MAX_EVENT_COUNT_PER_REQUEST);\n  /* eslint-disable camelcase */\n  // We will pass the JSON serialized event to the backend.\n  const log_event = staged.map(evt => ({\n    source_extension_json_proto3: evt.message,\n    event_time_ms: String(evt.eventTime)\n  }));\n  const data = {\n    request_time_ms: String(Date.now()),\n    client_info: {\n      client_type: 1,\n      // 1 is JS\n      js_client_info: {}\n    },\n    log_source: SettingsService.getInstance().logSource,\n    log_event\n  };\n  /* eslint-enable camelcase */\n  postToFlEndpoint(data).then(() => {\n    remainingTries = DEFAULT_REMAINING_TRIES;\n  }).catch(() => {\n    // If the request fails for some reason, add the events that were attempted\n    // back to the primary queue to retry later.\n    queue = [...staged, ...queue];\n    remainingTries--;\n    consoleLogger.info(`Tries left: ${remainingTries}.`);\n    processQueue(DEFAULT_SEND_INTERVAL_MS);\n  });\n}\nfunction postToFlEndpoint(data) {\n  const flTransportFullUrl = SettingsService.getInstance().getFlTransportFullUrl();\n  const body = JSON.stringify(data);\n  return navigator.sendBeacon && navigator.sendBeacon(flTransportFullUrl, body) ? Promise.resolve() : fetch(flTransportFullUrl, {\n    method: 'POST',\n    body,\n    keepalive: true\n  }).then();\n}\nfunction addToQueue(evt) {\n  if (!evt.eventTime || !evt.message) {\n    throw ERROR_FACTORY.create(\"invalid cc log\" /* ErrorCode.INVALID_CC_LOG */);\n  }\n  // Add the new event to the queue.\n  queue = [...queue, evt];\n}\n/** Log handler for cc service to send the performance logs to the server. */\nfunction transportHandler(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nserializer) {\n  return (...args) => {\n    const message = serializer(...args);\n    addToQueue({\n      message,\n      eventTime: Date.now()\n    });\n  };\n}\n/**\n * Force flush the queued events. Useful at page unload time to ensure all\n * events are uploaded.\n */\nfunction flushQueuedEvents() {\n  while (queue.length > 0) {\n    dispatchQueueEvents();\n  }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet logger;\n//\n// This method is not called before initialization.\nfunction sendLog(resource, resourceType) {\n  if (!logger) {\n    logger = {\n      send: transportHandler(serializer),\n      flush: flushQueuedEvents\n    };\n  }\n  logger.send(resource, resourceType);\n}\nfunction logTrace(trace) {\n  const settingsService = SettingsService.getInstance();\n  // Do not log if trace is auto generated and instrumentation is disabled.\n  if (!settingsService.instrumentationEnabled && trace.isAuto) {\n    return;\n  }\n  // Do not log if trace is custom and data collection is disabled.\n  if (!settingsService.dataCollectionEnabled && !trace.isAuto) {\n    return;\n  }\n  // Do not log if required apis are not available.\n  if (!Api.getInstance().requiredApisAvailable()) {\n    return;\n  }\n  if (isPerfInitialized()) {\n    sendTraceLog(trace);\n  } else {\n    // Custom traces can be used before the initialization but logging\n    // should wait until after.\n    getInitializationPromise(trace.performanceController).then(() => sendTraceLog(trace), () => sendTraceLog(trace));\n  }\n}\nfunction flushLogs() {\n  if (logger) {\n    logger.flush();\n  }\n}\nfunction sendTraceLog(trace) {\n  if (!getIid()) {\n    return;\n  }\n  const settingsService = SettingsService.getInstance();\n  if (!settingsService.loggingEnabled || !settingsService.logTraceAfterSampling) {\n    return;\n  }\n  sendLog(trace, 1 /* ResourceType.Trace */);\n}\nfunction logNetworkRequest(networkRequest) {\n  const settingsService = SettingsService.getInstance();\n  // Do not log network requests if instrumentation is disabled.\n  if (!settingsService.instrumentationEnabled) {\n    return;\n  }\n  // Do not log the js sdk's call to transport service domain to avoid unnecessary cycle.\n  // Need to blacklist both old and new endpoints to avoid migration gap.\n  const networkRequestUrl = networkRequest.url;\n  // Blacklist old log endpoint and new transport endpoint.\n  // Because Performance SDK doesn't instrument requests sent from SDK itself.\n  const logEndpointUrl = settingsService.logEndPointUrl.split('?')[0];\n  const flEndpointUrl = settingsService.flTransportEndpointUrl.split('?')[0];\n  if (networkRequestUrl === logEndpointUrl || networkRequestUrl === flEndpointUrl) {\n    return;\n  }\n  if (!settingsService.loggingEnabled || !settingsService.logNetworkAfterSampling) {\n    return;\n  }\n  sendLog(networkRequest, 0 /* ResourceType.NetworkRequest */);\n}\nfunction serializer(resource, resourceType) {\n  if (resourceType === 0 /* ResourceType.NetworkRequest */) {\n    return serializeNetworkRequest(resource);\n  }\n  return serializeTrace(resource);\n}\nfunction serializeNetworkRequest(networkRequest) {\n  const networkRequestMetric = {\n    url: networkRequest.url,\n    http_method: networkRequest.httpMethod || 0,\n    http_response_code: 200,\n    response_payload_bytes: networkRequest.responsePayloadBytes,\n    client_start_time_us: networkRequest.startTimeUs,\n    time_to_response_initiated_us: networkRequest.timeToResponseInitiatedUs,\n    time_to_response_completed_us: networkRequest.timeToResponseCompletedUs\n  };\n  const perfMetric = {\n    application_info: getApplicationInfo(networkRequest.performanceController.app),\n    network_request_metric: networkRequestMetric\n  };\n  return JSON.stringify(perfMetric);\n}\nfunction serializeTrace(trace) {\n  const traceMetric = {\n    name: trace.name,\n    is_auto: trace.isAuto,\n    client_start_time_us: trace.startTimeUs,\n    duration_us: trace.durationUs\n  };\n  if (Object.keys(trace.counters).length !== 0) {\n    traceMetric.counters = trace.counters;\n  }\n  const customAttributes = trace.getAttributes();\n  if (Object.keys(customAttributes).length !== 0) {\n    traceMetric.custom_attributes = customAttributes;\n  }\n  const perfMetric = {\n    application_info: getApplicationInfo(trace.performanceController.app),\n    trace_metric: traceMetric\n  };\n  return JSON.stringify(perfMetric);\n}\nfunction getApplicationInfo(firebaseApp) {\n  return {\n    google_app_id: getAppId(firebaseApp),\n    app_instance_id: getIid(),\n    web_app_info: {\n      sdk_version: SDK_VERSION,\n      page_url: Api.getInstance().getUrl(),\n      service_worker_status: getServiceWorkerStatus(),\n      visibility_state: getVisibilityState(),\n      effective_connection_type: getEffectiveConnectionType()\n    },\n    application_process_state: 0\n  };\n}\n/* eslint-enable camelcase */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction createNetworkRequestEntry(performanceController, entry) {\n  const performanceEntry = entry;\n  if (!performanceEntry || performanceEntry.responseStart === undefined) {\n    return;\n  }\n  const timeOrigin = Api.getInstance().getTimeOrigin();\n  const startTimeUs = Math.floor((performanceEntry.startTime + timeOrigin) * 1000);\n  const timeToResponseInitiatedUs = performanceEntry.responseStart ? Math.floor((performanceEntry.responseStart - performanceEntry.startTime) * 1000) : undefined;\n  const timeToResponseCompletedUs = Math.floor((performanceEntry.responseEnd - performanceEntry.startTime) * 1000);\n  // Remove the query params from logged network request url.\n  const url = performanceEntry.name && performanceEntry.name.split('?')[0];\n  const networkRequest = {\n    performanceController,\n    url,\n    responsePayloadBytes: performanceEntry.transferSize,\n    startTimeUs,\n    timeToResponseInitiatedUs,\n    timeToResponseCompletedUs\n  };\n  logNetworkRequest(networkRequest);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst MAX_METRIC_NAME_LENGTH = 100;\nconst RESERVED_AUTO_PREFIX = '_';\nconst oobMetrics = [FIRST_PAINT_COUNTER_NAME, FIRST_CONTENTFUL_PAINT_COUNTER_NAME, FIRST_INPUT_DELAY_COUNTER_NAME, LARGEST_CONTENTFUL_PAINT_METRIC_NAME, CUMULATIVE_LAYOUT_SHIFT_METRIC_NAME, INTERACTION_TO_NEXT_PAINT_METRIC_NAME];\n/**\n * Returns true if the metric is custom and does not start with reserved prefix, or if\n * the metric is one of out of the box page load trace metrics.\n */\nfunction isValidMetricName(name, traceName) {\n  if (name.length === 0 || name.length > MAX_METRIC_NAME_LENGTH) {\n    return false;\n  }\n  return traceName && traceName.startsWith(OOB_TRACE_PAGE_LOAD_PREFIX) && oobMetrics.indexOf(name) > -1 || !name.startsWith(RESERVED_AUTO_PREFIX);\n}\n/**\n * Converts the provided value to an integer value to be used in case of a metric.\n * @param providedValue Provided number value of the metric that needs to be converted to an integer.\n *\n * @returns Converted integer number to be set for the metric.\n */\nfunction convertMetricValueToInteger(providedValue) {\n  const valueAsInteger = Math.floor(providedValue);\n  if (valueAsInteger < providedValue) {\n    consoleLogger.info(`Metric value should be an Integer, setting the value as : ${valueAsInteger}.`);\n  }\n  return valueAsInteger;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass Trace {\n  /**\n   * @param performanceController The performance controller running.\n   * @param name The name of the trace.\n   * @param isAuto If the trace is auto-instrumented.\n   * @param traceMeasureName The name of the measure marker in user timing specification. This field\n   * is only set when the trace is built for logging when the user directly uses the user timing\n   * api (performance.mark and performance.measure).\n   */\n  constructor(performanceController, name, isAuto = false, traceMeasureName) {\n    this.performanceController = performanceController;\n    this.name = name;\n    this.isAuto = isAuto;\n    this.state = 1 /* TraceState.UNINITIALIZED */;\n    this.customAttributes = {};\n    this.counters = {};\n    this.api = Api.getInstance();\n    this.randomId = Math.floor(Math.random() * 1000000);\n    if (!this.isAuto) {\n      this.traceStartMark = `${TRACE_START_MARK_PREFIX}-${this.randomId}-${this.name}`;\n      this.traceStopMark = `${TRACE_STOP_MARK_PREFIX}-${this.randomId}-${this.name}`;\n      this.traceMeasure = traceMeasureName || `${TRACE_MEASURE_PREFIX}-${this.randomId}-${this.name}`;\n      if (traceMeasureName) {\n        // For the case of direct user timing traces, no start stop will happen. The measure object\n        // is already available.\n        this.calculateTraceMetrics();\n      }\n    }\n  }\n  /**\n   * Starts a trace. The measurement of the duration starts at this point.\n   */\n  start() {\n    if (this.state !== 1 /* TraceState.UNINITIALIZED */) {\n      throw ERROR_FACTORY.create(\"trace started\" /* ErrorCode.TRACE_STARTED_BEFORE */, {\n        traceName: this.name\n      });\n    }\n    this.api.mark(this.traceStartMark);\n    this.state = 2 /* TraceState.RUNNING */;\n  }\n  /**\n   * Stops the trace. The measurement of the duration of the trace stops at this point and trace\n   * is logged.\n   */\n  stop() {\n    if (this.state !== 2 /* TraceState.RUNNING */) {\n      throw ERROR_FACTORY.create(\"trace stopped\" /* ErrorCode.TRACE_STOPPED_BEFORE */, {\n        traceName: this.name\n      });\n    }\n    this.state = 3 /* TraceState.TERMINATED */;\n    this.api.mark(this.traceStopMark);\n    this.api.measure(this.traceMeasure, this.traceStartMark, this.traceStopMark);\n    this.calculateTraceMetrics();\n    logTrace(this);\n  }\n  /**\n   * Records a trace with predetermined values. If this method is used a trace is created and logged\n   * directly. No need to use start and stop methods.\n   * @param startTime Trace start time since epoch in millisec\n   * @param duration The duration of the trace in millisec\n   * @param options An object which can optionally hold maps of custom metrics and custom attributes\n   */\n  record(startTime, duration, options) {\n    if (startTime <= 0) {\n      throw ERROR_FACTORY.create(\"nonpositive trace startTime\" /* ErrorCode.NONPOSITIVE_TRACE_START_TIME */, {\n        traceName: this.name\n      });\n    }\n    if (duration <= 0) {\n      throw ERROR_FACTORY.create(\"nonpositive trace duration\" /* ErrorCode.NONPOSITIVE_TRACE_DURATION */, {\n        traceName: this.name\n      });\n    }\n    this.durationUs = Math.floor(duration * 1000);\n    this.startTimeUs = Math.floor(startTime * 1000);\n    if (options && options.attributes) {\n      this.customAttributes = Object.assign({}, options.attributes);\n    }\n    if (options && options.metrics) {\n      for (const metricName of Object.keys(options.metrics)) {\n        if (!isNaN(Number(options.metrics[metricName]))) {\n          this.counters[metricName] = Math.floor(Number(options.metrics[metricName]));\n        }\n      }\n    }\n    logTrace(this);\n  }\n  /**\n   * Increments a custom metric by a certain number or 1 if number not specified. Will create a new\n   * custom metric if one with the given name does not exist. The value will be floored down to an\n   * integer.\n   * @param counter Name of the custom metric\n   * @param numAsInteger Increment by value\n   */\n  incrementMetric(counter, numAsInteger = 1) {\n    if (this.counters[counter] === undefined) {\n      this.putMetric(counter, numAsInteger);\n    } else {\n      this.putMetric(counter, this.counters[counter] + numAsInteger);\n    }\n  }\n  /**\n   * Sets a custom metric to a specified value. Will create a new custom metric if one with the\n   * given name does not exist. The value will be floored down to an integer.\n   * @param counter Name of the custom metric\n   * @param numAsInteger Set custom metric to this value\n   */\n  putMetric(counter, numAsInteger) {\n    if (isValidMetricName(counter, this.name)) {\n      this.counters[counter] = convertMetricValueToInteger(numAsInteger !== null && numAsInteger !== void 0 ? numAsInteger : 0);\n    } else {\n      throw ERROR_FACTORY.create(\"invalid custom metric name\" /* ErrorCode.INVALID_CUSTOM_METRIC_NAME */, {\n        customMetricName: counter\n      });\n    }\n  }\n  /**\n   * Returns the value of the custom metric by that name. If a custom metric with that name does\n   * not exist will return zero.\n   * @param counter\n   */\n  getMetric(counter) {\n    return this.counters[counter] || 0;\n  }\n  /**\n   * Sets a custom attribute of a trace to a certain value.\n   * @param attr\n   * @param value\n   */\n  putAttribute(attr, value) {\n    const isValidName = isValidCustomAttributeName(attr);\n    const isValidValue = isValidCustomAttributeValue(value);\n    if (isValidName && isValidValue) {\n      this.customAttributes[attr] = value;\n      return;\n    }\n    // Throw appropriate error when the attribute name or value is invalid.\n    if (!isValidName) {\n      throw ERROR_FACTORY.create(\"invalid attribute name\" /* ErrorCode.INVALID_ATTRIBUTE_NAME */, {\n        attributeName: attr\n      });\n    }\n    if (!isValidValue) {\n      throw ERROR_FACTORY.create(\"invalid attribute value\" /* ErrorCode.INVALID_ATTRIBUTE_VALUE */, {\n        attributeValue: value\n      });\n    }\n  }\n  /**\n   * Retrieves the value a custom attribute of a trace is set to.\n   * @param attr\n   */\n  getAttribute(attr) {\n    return this.customAttributes[attr];\n  }\n  removeAttribute(attr) {\n    if (this.customAttributes[attr] === undefined) {\n      return;\n    }\n    delete this.customAttributes[attr];\n  }\n  getAttributes() {\n    return Object.assign({}, this.customAttributes);\n  }\n  setStartTime(startTime) {\n    this.startTimeUs = startTime;\n  }\n  setDuration(duration) {\n    this.durationUs = duration;\n  }\n  /**\n   * Calculates and assigns the duration and start time of the trace using the measure performance\n   * entry.\n   */\n  calculateTraceMetrics() {\n    const perfMeasureEntries = this.api.getEntriesByName(this.traceMeasure);\n    const perfMeasureEntry = perfMeasureEntries && perfMeasureEntries[0];\n    if (perfMeasureEntry) {\n      this.durationUs = Math.floor(perfMeasureEntry.duration * 1000);\n      this.startTimeUs = Math.floor((perfMeasureEntry.startTime + this.api.getTimeOrigin()) * 1000);\n    }\n  }\n  /**\n   * @param navigationTimings A single element array which contains the navigationTIming object of\n   * the page load\n   * @param paintTimings A array which contains paintTiming object of the page load\n   * @param firstInputDelay First input delay in millisec\n   */\n  static createOobTrace(performanceController, navigationTimings, paintTimings, webVitalMetrics, firstInputDelay) {\n    const route = Api.getInstance().getUrl();\n    if (!route) {\n      return;\n    }\n    const trace = new Trace(performanceController, OOB_TRACE_PAGE_LOAD_PREFIX + route, true);\n    const timeOriginUs = Math.floor(Api.getInstance().getTimeOrigin() * 1000);\n    trace.setStartTime(timeOriginUs);\n    // navigationTimings includes only one element.\n    if (navigationTimings && navigationTimings[0]) {\n      trace.setDuration(Math.floor(navigationTimings[0].duration * 1000));\n      trace.putMetric('domInteractive', Math.floor(navigationTimings[0].domInteractive * 1000));\n      trace.putMetric('domContentLoadedEventEnd', Math.floor(navigationTimings[0].domContentLoadedEventEnd * 1000));\n      trace.putMetric('loadEventEnd', Math.floor(navigationTimings[0].loadEventEnd * 1000));\n    }\n    const FIRST_PAINT = 'first-paint';\n    const FIRST_CONTENTFUL_PAINT = 'first-contentful-paint';\n    if (paintTimings) {\n      const firstPaint = paintTimings.find(paintObject => paintObject.name === FIRST_PAINT);\n      if (firstPaint && firstPaint.startTime) {\n        trace.putMetric(FIRST_PAINT_COUNTER_NAME, Math.floor(firstPaint.startTime * 1000));\n      }\n      const firstContentfulPaint = paintTimings.find(paintObject => paintObject.name === FIRST_CONTENTFUL_PAINT);\n      if (firstContentfulPaint && firstContentfulPaint.startTime) {\n        trace.putMetric(FIRST_CONTENTFUL_PAINT_COUNTER_NAME, Math.floor(firstContentfulPaint.startTime * 1000));\n      }\n      if (firstInputDelay) {\n        trace.putMetric(FIRST_INPUT_DELAY_COUNTER_NAME, Math.floor(firstInputDelay * 1000));\n      }\n    }\n    this.addWebVitalMetric(trace, LARGEST_CONTENTFUL_PAINT_METRIC_NAME, LARGEST_CONTENTFUL_PAINT_ATTRIBUTE_NAME, webVitalMetrics.lcp);\n    this.addWebVitalMetric(trace, CUMULATIVE_LAYOUT_SHIFT_METRIC_NAME, CUMULATIVE_LAYOUT_SHIFT_ATTRIBUTE_NAME, webVitalMetrics.cls);\n    this.addWebVitalMetric(trace, INTERACTION_TO_NEXT_PAINT_METRIC_NAME, INTERACTION_TO_NEXT_PAINT_ATTRIBUTE_NAME, webVitalMetrics.inp);\n    // Page load logs are sent at unload time and so should be logged and\n    // flushed immediately.\n    logTrace(trace);\n    flushLogs();\n  }\n  static addWebVitalMetric(trace, metricKey, attributeKey, metric) {\n    if (metric) {\n      trace.putMetric(metricKey, Math.floor(metric.value * 1000));\n      if (metric.elementAttribution) {\n        trace.putAttribute(attributeKey, metric.elementAttribution);\n      }\n    }\n  }\n  static createUserTimingTrace(performanceController, measureName) {\n    const trace = new Trace(performanceController, measureName, false, measureName);\n    logTrace(trace);\n  }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet webVitalMetrics = {};\nlet sentPageLoadTrace = false;\nlet firstInputDelay;\nfunction setupOobResources(performanceController) {\n  // Do not initialize unless iid is available.\n  if (!getIid()) {\n    return;\n  }\n  // The load event might not have fired yet, and that means performance\n  // navigation timing object has a duration of 0. The setup should run after\n  // all current tasks in js queue.\n  setTimeout(() => setupOobTraces(performanceController), 0);\n  setTimeout(() => setupNetworkRequests(performanceController), 0);\n  setTimeout(() => setupUserTimingTraces(performanceController), 0);\n}\nfunction setupNetworkRequests(performanceController) {\n  const api = Api.getInstance();\n  const resources = api.getEntriesByType('resource');\n  for (const resource of resources) {\n    createNetworkRequestEntry(performanceController, resource);\n  }\n  api.setupObserver('resource', entry => createNetworkRequestEntry(performanceController, entry));\n}\nfunction setupOobTraces(performanceController) {\n  const api = Api.getInstance();\n  // Better support for Safari\n  if ('onpagehide' in window) {\n    api.document.addEventListener('pagehide', () => sendOobTrace(performanceController));\n  } else {\n    api.document.addEventListener('unload', () => sendOobTrace(performanceController));\n  }\n  api.document.addEventListener('visibilitychange', () => {\n    if (api.document.visibilityState === 'hidden') {\n      sendOobTrace(performanceController);\n    }\n  });\n  if (api.onFirstInputDelay) {\n    api.onFirstInputDelay(fid => {\n      firstInputDelay = fid;\n    });\n  }\n  api.onLCP(metric => {\n    var _a;\n    webVitalMetrics.lcp = {\n      value: metric.value,\n      elementAttribution: (_a = metric.attribution) === null || _a === void 0 ? void 0 : _a.element\n    };\n  });\n  api.onCLS(metric => {\n    var _a;\n    webVitalMetrics.cls = {\n      value: metric.value,\n      elementAttribution: (_a = metric.attribution) === null || _a === void 0 ? void 0 : _a.largestShiftTarget\n    };\n  });\n  api.onINP(metric => {\n    var _a;\n    webVitalMetrics.inp = {\n      value: metric.value,\n      elementAttribution: (_a = metric.attribution) === null || _a === void 0 ? void 0 : _a.interactionTarget\n    };\n  });\n}\nfunction setupUserTimingTraces(performanceController) {\n  const api = Api.getInstance();\n  // Run through the measure performance entries collected up to this point.\n  const measures = api.getEntriesByType('measure');\n  for (const measure of measures) {\n    createUserTimingTrace(performanceController, measure);\n  }\n  // Setup an observer to capture the measures from this point on.\n  api.setupObserver('measure', entry => createUserTimingTrace(performanceController, entry));\n}\nfunction createUserTimingTrace(performanceController, measure) {\n  const measureName = measure.name;\n  // Do not create a trace, if the user timing marks and measures are created by\n  // the sdk itself.\n  if (measureName.substring(0, TRACE_MEASURE_PREFIX.length) === TRACE_MEASURE_PREFIX) {\n    return;\n  }\n  Trace.createUserTimingTrace(performanceController, measureName);\n}\nfunction sendOobTrace(performanceController) {\n  if (!sentPageLoadTrace) {\n    sentPageLoadTrace = true;\n    const api = Api.getInstance();\n    const navigationTimings = api.getEntriesByType('navigation');\n    const paintTimings = api.getEntriesByType('paint');\n    // On page unload web vitals may be updated so queue the oob trace creation\n    // so that these updates have time to be included.\n    setTimeout(() => {\n      Trace.createOobTrace(performanceController, navigationTimings, paintTimings, webVitalMetrics, firstInputDelay);\n    }, 0);\n  }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass PerformanceController {\n  constructor(app, installations) {\n    this.app = app;\n    this.installations = installations;\n    this.initialized = false;\n  }\n  /**\n   * This method *must* be called internally as part of creating a\n   * PerformanceController instance.\n   *\n   * Currently it's not possible to pass the settings object through the\n   * constructor using Components, so this method exists to be called with the\n   * desired settings, to ensure nothing is collected without the user's\n   * consent.\n   */\n  _init(settings) {\n    if (this.initialized) {\n      return;\n    }\n    if ((settings === null || settings === void 0 ? void 0 : settings.dataCollectionEnabled) !== undefined) {\n      this.dataCollectionEnabled = settings.dataCollectionEnabled;\n    }\n    if ((settings === null || settings === void 0 ? void 0 : settings.instrumentationEnabled) !== undefined) {\n      this.instrumentationEnabled = settings.instrumentationEnabled;\n    }\n    if (Api.getInstance().requiredApisAvailable()) {\n      validateIndexedDBOpenable().then(isAvailable => {\n        if (isAvailable) {\n          setupTransportService();\n          getInitializationPromise(this).then(() => setupOobResources(this), () => setupOobResources(this));\n          this.initialized = true;\n        }\n      }).catch(error => {\n        consoleLogger.info(`Environment doesn't support IndexedDB: ${error}`);\n      });\n    } else {\n      consoleLogger.info('Firebase Performance cannot start if the browser does not support ' + '\"Fetch\" and \"Promise\", or cookies are disabled.');\n    }\n  }\n  set instrumentationEnabled(val) {\n    SettingsService.getInstance().instrumentationEnabled = val;\n  }\n  get instrumentationEnabled() {\n    return SettingsService.getInstance().instrumentationEnabled;\n  }\n  set dataCollectionEnabled(val) {\n    SettingsService.getInstance().dataCollectionEnabled = val;\n  }\n  get dataCollectionEnabled() {\n    return SettingsService.getInstance().dataCollectionEnabled;\n  }\n}\n\n/**\n * The Firebase Performance Monitoring Web SDK.\n * This SDK does not work in a Node.js environment.\n *\n * @packageDocumentation\n */\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\n/**\n * Returns a {@link FirebasePerformance} instance for the given app.\n * @param app - The {@link @firebase/app#FirebaseApp} to use.\n * @public\n */\nfunction getPerformance(app = getApp()) {\n  app = getModularInstance(app);\n  const provider = _getProvider(app, 'performance');\n  const perfInstance = provider.getImmediate();\n  return perfInstance;\n}\n/**\n * Returns a {@link FirebasePerformance} instance for the given app. Can only be called once.\n * @param app - The {@link @firebase/app#FirebaseApp} to use.\n * @param settings - Optional settings for the {@link FirebasePerformance} instance.\n * @public\n */\nfunction initializePerformance(app, settings) {\n  app = getModularInstance(app);\n  const provider = _getProvider(app, 'performance');\n  // throw if an instance was already created.\n  // It could happen if initializePerformance() is called more than once, or getPerformance() is called first.\n  if (provider.isInitialized()) {\n    const existingInstance = provider.getImmediate();\n    const initialSettings = provider.getOptions();\n    if (deepEqual(initialSettings, settings !== null && settings !== void 0 ? settings : {})) {\n      return existingInstance;\n    } else {\n      throw ERROR_FACTORY.create(\"already initialized\" /* ErrorCode.ALREADY_INITIALIZED */);\n    }\n  }\n  const perfInstance = provider.initialize({\n    options: settings\n  });\n  return perfInstance;\n}\n/**\n * Returns a new `PerformanceTrace` instance.\n * @param performance - The {@link FirebasePerformance} instance to use.\n * @param name - The name of the trace.\n * @public\n */\nfunction trace(performance, name) {\n  performance = getModularInstance(performance);\n  return new Trace(performance, name);\n}\nconst factory = (container, {\n  options: settings\n}) => {\n  // Dependencies\n  const app = container.getProvider('app').getImmediate();\n  const installations = container.getProvider('installations-internal').getImmediate();\n  if (app.name !== DEFAULT_ENTRY_NAME) {\n    throw ERROR_FACTORY.create(\"FB not default\" /* ErrorCode.FB_NOT_DEFAULT */);\n  }\n  if (typeof window === 'undefined') {\n    throw ERROR_FACTORY.create(\"no window\" /* ErrorCode.NO_WINDOW */);\n  }\n  setupApi(window);\n  const perfInstance = new PerformanceController(app, installations);\n  perfInstance._init(settings);\n  return perfInstance;\n};\nfunction registerPerformance() {\n  _registerComponent(new Component('performance', factory, \"PUBLIC\" /* ComponentType.PUBLIC */));\n  registerVersion(name, version);\n  // BUILD_TARGET will be replaced by values like esm2017, cjs2017, etc during the compilation\n  registerVersion(name, version, 'esm2017');\n}\nregisterPerformance();\nexport { getPerformance, initializePerformance, trace };\n", "import { WebPlugin } from '@capacitor/core';\nimport { trace as createTrace, getPerformance } from 'firebase/performance';\nexport class FirebasePerformanceWeb extends WebPlugin {\n  constructor() {\n    super(...arguments);\n    this.traces = {};\n  }\n  async startTrace(options) {\n    const perf = getPerformance();\n    const trace = createTrace(perf, options.traceName);\n    trace.start();\n    this.traces[options.traceName] = trace;\n  }\n  async stopTrace(options) {\n    const trace = this.traces[options.traceName];\n    if (!trace) {\n      throw new Error(FirebasePerformanceWeb.ERROR_TRACE_NOT_FOUND);\n    }\n    trace.stop();\n    delete this.traces[options.traceName];\n  }\n  async incrementMetric(options) {\n    const trace = this.traces[options.traceName];\n    if (!trace) {\n      throw new Error(FirebasePerformanceWeb.ERROR_TRACE_NOT_FOUND);\n    }\n    trace.incrementMetric(options.metricName, options.incrementBy);\n  }\n  async setEnabled(options) {\n    const perf = getPerformance();\n    perf.instrumentationEnabled = options.enabled;\n    perf.dataCollectionEnabled = options.enabled;\n  }\n  async isEnabled() {\n    const perf = getPerformance();\n    const result = {\n      enabled: perf.instrumentationEnabled || perf.dataCollectionEnabled\n    };\n    return result;\n  }\n  async putAttribute({\n    traceName,\n    attribute,\n    value\n  }) {\n    const trace = this.traces[traceName];\n    if (!trace) {\n      throw new Error(FirebasePerformanceWeb.ERROR_TRACE_NOT_FOUND);\n    }\n    trace.putAttribute(attribute, value);\n    return;\n  }\n  async getAttribute({\n    traceName,\n    attribute\n  }) {\n    var _a;\n    const trace = this.traces[traceName];\n    if (!trace) {\n      throw new Error(FirebasePerformanceWeb.ERROR_TRACE_NOT_FOUND);\n    }\n    return {\n      value: (_a = trace.getAttribute(attribute)) !== null && _a !== void 0 ? _a : null\n    };\n  }\n  async getAttributes({\n    traceName\n  }) {\n    const trace = this.traces[traceName];\n    if (!trace) {\n      throw new Error(FirebasePerformanceWeb.ERROR_TRACE_NOT_FOUND);\n    }\n    return {\n      attributes: trace.getAttributes()\n    };\n  }\n  async removeAttribute({\n    traceName,\n    attribute\n  }) {\n    const trace = this.traces[traceName];\n    if (!trace) {\n      throw new Error(FirebasePerformanceWeb.ERROR_TRACE_NOT_FOUND);\n    }\n    trace.removeAttribute(attribute);\n  }\n  async putMetric({\n    traceName,\n    metricName,\n    num\n  }) {\n    const trace = this.traces[traceName];\n    if (!trace) {\n      throw new Error(FirebasePerformanceWeb.ERROR_TRACE_NOT_FOUND);\n    }\n    trace.putMetric(metricName, num);\n  }\n  async getMetric({\n    traceName,\n    metricName\n  }) {\n    const trace = this.traces[traceName];\n    if (!trace) {\n      throw new Error(FirebasePerformanceWeb.ERROR_TRACE_NOT_FOUND);\n    }\n    return {\n      value: trace.getMetric(metricName)\n    };\n  }\n  async record({\n    traceName,\n    startTime,\n    duration,\n    options\n  }) {\n    const perf = getPerformance();\n    const trace = createTrace(perf, traceName);\n    trace.record(startTime, duration, options);\n  }\n}\nFirebasePerformanceWeb.ERROR_TRACE_NOT_FOUND = 'No trace was found with the provided traceName.';\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAI;AAAJ,IACE;AADF,IAEE,IAAI,WAAY;AACd,MAAIA,KAAI,KAAK,eAAe,YAAY,oBAAoB,YAAY,iBAAiB,YAAY,EAAE,CAAC;AACxG,MAAIA,MAAKA,GAAE,gBAAgB,KAAKA,GAAE,gBAAgB,YAAY,IAAI,EAAG,QAAOA;AAC9E;AALF,IAME,IAAI,SAAUA,IAAG;AACf,MAAI,cAAc,SAAS,WAAY,QAAO;AAC9C,MAAIC,KAAI,EAAE;AACV,MAAIA,IAAG;AACL,QAAID,KAAIC,GAAE,eAAgB,QAAO;AACjC,QAAI,MAAMA,GAAE,8BAA8BD,KAAIC,GAAE,2BAA4B,QAAO;AACnF,QAAI,MAAMA,GAAE,eAAeD,KAAIC,GAAE,YAAa,QAAO;AAAA,EACvD;AACA,SAAO;AACT;AAfF,IAgBE,IAAI,SAAUD,IAAG;AACf,MAAIC,KAAID,GAAE;AACV,SAAO,MAAMA,GAAE,WAAWC,GAAE,YAAY,IAAIA,GAAE,YAAY,EAAE,QAAQ,MAAM,EAAE;AAC9E;AAnBF,IAoBE,IAAI,SAAUD,IAAGC,IAAG;AAClB,MAAIC,KAAI;AACR,MAAI;AACF,WAAOF,MAAK,MAAMA,GAAE,YAAW;AAC7B,UAAIG,KAAIH,IACNI,KAAID,GAAE,KAAK,MAAMA,GAAE,KAAK,EAAEA,EAAC,KAAKA,GAAE,aAAaA,GAAE,UAAU,SAASA,GAAE,UAAU,MAAM,KAAK,KAAKA,GAAE,UAAU,MAAM,KAAK,EAAE,SAAS,MAAMA,GAAE,UAAU,MAAM,KAAK,EAAE,QAAQ,QAAQ,GAAG,IAAI;AAC1L,UAAID,GAAE,SAASE,GAAE,UAAUH,MAAK,OAAO,EAAG,QAAOC,MAAKE;AACtD,UAAIF,KAAIA,KAAIE,KAAI,MAAMF,KAAIE,IAAGD,GAAE,GAAI;AACnC,MAAAH,KAAIG,GAAE;AAAA,IACR;AAAA,EACF,SAASH,IAAG;AAAA,EAAC;AACb,SAAOE;AACT;AAhCF,IAiCE,IAAI;AAjCN,IAkCE,IAAI,WAAY;AACd,SAAO;AACT;AApCF,IAqCE,IAAI,SAAUF,IAAG;AACf,mBAAiB,YAAY,SAAUC,IAAG;AACxC,IAAAA,GAAE,cAAc,IAAIA,GAAE,WAAWD,GAAEC,EAAC;AAAA,EACtC,GAAG,IAAE;AACP;AAzCF,IA0CE,IAAI,WAAY;AACd,MAAID,KAAI,EAAE;AACV,SAAOA,MAAKA,GAAE,mBAAmB;AACnC;AA7CF,IA8CE,IAAI,SAAUA,IAAGC,IAAG;AAClB,MAAIE,KAAI,EAAE,GACRE,KAAI;AACN,IAAE,KAAK,IAAIA,KAAI,uBAAuBF,OAAM,SAAS,gBAAgB,EAAE,IAAI,IAAIE,KAAI,cAAc,SAAS,eAAeA,KAAI,YAAYF,GAAE,SAASE,KAAIF,GAAE,KAAK,QAAQ,MAAM,GAAG;AAChL,SAAO;AAAA,IACL,MAAMH;AAAA,IACN,OAAO,WAAWC,KAAI,KAAKA;AAAA,IAC3B,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,SAAS,CAAC;AAAA,IACV,IAAI,MAAM,OAAO,KAAK,IAAI,GAAG,GAAG,EAAE,OAAO,KAAK,MAAM,gBAAgB,KAAK,OAAO,CAAC,IAAI,IAAI;AAAA,IACzF,gBAAgBI;AAAA,EAClB;AACF;AA3DF,IA4DE,IAAI,SAAUL,IAAGC,IAAGC,IAAG;AACrB,MAAI;AACF,QAAI,oBAAoB,oBAAoB,SAASF,EAAC,GAAG;AACvD,UAAIG,KAAI,IAAI,oBAAoB,SAAUH,IAAG;AAC3C,gBAAQ,QAAQ,EAAE,KAAK,WAAY;AACjC,UAAAC,GAAED,GAAE,WAAW,CAAC;AAAA,QAClB,CAAC;AAAA,MACH,CAAC;AACD,aAAOG,GAAE,QAAQ,OAAO,OAAO;AAAA,QAC7B,MAAMH;AAAA,QACN,UAAU;AAAA,MACZ,GAAGE,MAAK,CAAC,CAAC,CAAC,GAAGC;AAAA,IAChB;AAAA,EACF,SAASH,IAAG;AAAA,EAAC;AACf;AA1EF,IA2EE,IAAI,SAAUA,IAAGC,IAAGC,IAAGC,IAAG;AACxB,MAAIE,IAAGD;AACP,SAAO,SAAUE,IAAG;AAClB,IAAAL,GAAE,SAAS,MAAMK,MAAKH,SAAQC,KAAIH,GAAE,SAASI,MAAK,OAAO,WAAWA,QAAOA,KAAIJ,GAAE,OAAOA,GAAE,QAAQG,IAAGH,GAAE,SAAS,SAAUD,IAAGC,IAAG;AAC9H,aAAOD,KAAIC,GAAE,CAAC,IAAI,SAASD,KAAIC,GAAE,CAAC,IAAI,sBAAsB;AAAA,IAC9D,EAAEA,GAAE,OAAOC,EAAC,GAAGF,GAAEC,EAAC;AAAA,EACpB;AACF;AAlFF,IAmFE,IAAI,SAAUD,IAAG;AACf,wBAAsB,WAAY;AAChC,WAAO,sBAAsB,WAAY;AACvC,aAAOA,GAAE;AAAA,IACX,CAAC;AAAA,EACH,CAAC;AACH;AAzFF,IA0FE,IAAI,SAAUA,IAAG;AACf,WAAS,iBAAiB,oBAAoB,WAAY;AACxD,iBAAa,SAAS,mBAAmBA,GAAE;AAAA,EAC7C,CAAC;AACH;AA9FF,IA+FE,IAAI,SAAUA,IAAG;AACf,MAAIC,KAAI;AACR,SAAO,WAAY;AACjB,IAAAA,OAAMD,GAAE,GAAGC,KAAI;AAAA,EACjB;AACF;AApGF,IAqGE,IAAI;AArGN,IAsGE,IAAI,WAAY;AACd,SAAO,aAAa,SAAS,mBAAmB,SAAS,eAAe,IAAI,IAAI;AAClF;AAxGF,IAyGE,IAAI,SAAUD,IAAG;AACf,eAAa,SAAS,mBAAmB,IAAI,OAAO,IAAI,uBAAuBA,GAAE,OAAOA,GAAE,YAAY,GAAG,EAAE;AAC7G;AA3GF,IA4GE,IAAI,WAAY;AACd,mBAAiB,oBAAoB,GAAG,IAAE,GAAG,iBAAiB,sBAAsB,GAAG,IAAE;AAC3F;AA9GF,IA+GE,IAAI,WAAY;AACd,sBAAoB,oBAAoB,GAAG,IAAE,GAAG,oBAAoB,sBAAsB,GAAG,IAAE;AACjG;AAjHF,IAkHE,IAAI,WAAY;AACd,SAAO,IAAI,MAAM,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,WAAY;AAC3C,eAAW,WAAY;AACrB,UAAI,EAAE,GAAG,EAAE;AAAA,IACb,GAAG,CAAC;AAAA,EACN,CAAC,IAAI;AAAA,IACH,IAAI,kBAAkB;AACpB,aAAO;AAAA,IACT;AAAA,EACF;AACF;AA5HF,IA6HE,IAAI,SAAUA,IAAG;AACf,WAAS,eAAe,iBAAiB,sBAAsB,WAAY;AACzE,WAAOA,GAAE;AAAA,EACX,GAAG,IAAE,IAAIA,GAAE;AACb;AAjIF,IAkIE,IAAI,CAAC,MAAM,GAAG;AAlIhB,IAmIE,IAAI,SAAUA,IAAGC,IAAG;AAClB,EAAAA,KAAIA,MAAK,CAAC,GAAG,EAAE,WAAY;AACzB,QAAIC,IACFC,KAAI,EAAE,GACNE,KAAI,EAAE,KAAK,GACXD,KAAI,EAAE,SAAS,SAAUJ,IAAG;AAC1B,MAAAA,GAAE,QAAQ,SAAUA,IAAG;AACrB,qCAA6BA,GAAE,SAASI,GAAE,WAAW,GAAGJ,GAAE,YAAYG,GAAE,oBAAoBE,GAAE,QAAQ,KAAK,IAAIL,GAAE,YAAY,EAAE,GAAG,CAAC,GAAGK,GAAE,QAAQ,KAAKL,EAAC,GAAGE,GAAE,IAAE;AAAA,MAC/J,CAAC;AAAA,IACH,CAAC;AACH,IAAAE,OAAMF,KAAI,EAAEF,IAAGK,IAAG,GAAGJ,GAAE,gBAAgB,GAAG,EAAE,SAAUE,IAAG;AACvD,MAAAE,KAAI,EAAE,KAAK,GAAGH,KAAI,EAAEF,IAAGK,IAAG,GAAGJ,GAAE,gBAAgB,GAAG,EAAE,WAAY;AAC9D,QAAAI,GAAE,QAAQ,YAAY,IAAI,IAAIF,GAAE,WAAWD,GAAE,IAAE;AAAA,MACjD,CAAC;AAAA,IACH,CAAC;AAAA,EACH,CAAC;AACH;AAnJF,IAoJE,IAAI,CAAC,KAAI,IAAG;AApJd,IAqJE,IAAI,SAAUF,IAAGC,IAAG;AAClB,GAAC,SAAUD,IAAGC,IAAG;AACf,IAAAA,KAAIA,MAAK,CAAC,GAAG,EAAE,EAAE,WAAY;AAC3B,UAAIC,IACFC,KAAI,EAAE,OAAO,CAAC,GACdE,KAAI,GACJD,KAAI,CAAC,GACLE,KAAI,SAAUN,IAAG;AACf,QAAAA,GAAE,QAAQ,SAAUA,IAAG;AACrB,cAAI,CAACA,GAAE,gBAAgB;AACrB,gBAAIC,KAAIG,GAAE,CAAC,GACTF,KAAIE,GAAEA,GAAE,SAAS,CAAC;AACpB,YAAAC,MAAKL,GAAE,YAAYE,GAAE,YAAY,OAAOF,GAAE,YAAYC,GAAE,YAAY,OAAOI,MAAKL,GAAE,OAAOI,GAAE,KAAKJ,EAAC,MAAMK,KAAIL,GAAE,OAAOI,KAAI,CAACJ,EAAC;AAAA,UAC5H;AAAA,QACF,CAAC,GAAGK,KAAIF,GAAE,UAAUA,GAAE,QAAQE,IAAGF,GAAE,UAAUC,IAAGF,GAAE;AAAA,MACpD,GACAK,KAAI,EAAE,gBAAgBD,EAAC;AACzB,MAAAC,OAAML,KAAI,EAAEF,IAAGG,IAAG,GAAGF,GAAE,gBAAgB,GAAG,EAAE,WAAY;AACtD,QAAAK,GAAEC,GAAE,YAAY,CAAC,GAAGL,GAAE,IAAE;AAAA,MAC1B,CAAC,GAAG,EAAE,WAAY;AAChB,QAAAG,KAAI,GAAGF,KAAI,EAAE,OAAO,CAAC,GAAGD,KAAI,EAAEF,IAAGG,IAAG,GAAGF,GAAE,gBAAgB,GAAG,EAAE,WAAY;AACxE,iBAAOC,GAAE;AAAA,QACX,CAAC;AAAA,MACH,CAAC,GAAG,WAAWA,IAAG,CAAC;AAAA,IACrB,CAAC,CAAC;AAAA,EACJ,EAAE,SAAUD,IAAG;AACb,QAAIC,KAAI,SAAUF,IAAG;AACnB,UAAIC,IACFC,KAAI,CAAC;AACP,UAAIF,GAAE,QAAQ,QAAQ;AACpB,YAAIK,KAAIL,GAAE,QAAQ,OAAO,SAAUA,IAAGC,IAAG;AACvC,iBAAOD,MAAKA,GAAE,QAAQC,GAAE,QAAQD,KAAIC;AAAA,QACtC,CAAC;AACD,YAAII,MAAKA,GAAE,WAAWA,GAAE,QAAQ,QAAQ;AACtC,cAAIC,MAAKL,KAAII,GAAE,SAAS,KAAK,SAAUL,IAAG;AACxC,mBAAOA,GAAE,QAAQ,MAAMA,GAAE,KAAK;AAAA,UAChC,CAAC,KAAKC,GAAE,CAAC;AACT,UAAAK,OAAMJ,KAAI;AAAA,YACR,oBAAoB,EAAEI,GAAE,IAAI;AAAA,YAC5B,kBAAkBD,GAAE;AAAA,YACpB,mBAAmBA,GAAE;AAAA,YACrB,oBAAoBC;AAAA,YACpB,mBAAmBD;AAAA,YACnB,WAAW,EAAEA,GAAE,SAAS;AAAA,UAC1B;AAAA,QACF;AAAA,MACF;AACA,aAAO,OAAO,OAAOL,IAAG;AAAA,QACtB,aAAaE;AAAA,MACf,CAAC;AAAA,IACH,EAAED,EAAC;AACH,IAAAD,GAAEE,EAAC;AAAA,EACL,GAAGD,EAAC;AACN;AA1MF,IAyOE,IAAI;AAzON,IA0OE,IAAI,IAAI;AA1OV,IA2OE,IAAI;AA3ON,IA4OE,IAAI,SAAUO,IAAG;AACf,EAAAA,GAAE,QAAQ,SAAUA,IAAG;AACrB,IAAAA,GAAE,kBAAkB,IAAI,KAAK,IAAI,GAAGA,GAAE,aAAa,GAAG,IAAI,KAAK,IAAI,GAAGA,GAAE,aAAa,GAAG,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI;AAAA,EACpH,CAAC;AACH;AAhPF,IAiPE,IAAI,WAAY;AACd,SAAO,IAAI,IAAI,YAAY,oBAAoB;AACjD;AAnPF,IAoPE,IAAI,WAAY;AACd,wBAAsB,eAAe,MAAM,IAAI,EAAE,SAAS,GAAG;AAAA,IAC3D,MAAM;AAAA,IACN,UAAU;AAAA,IACV,mBAAmB;AAAA,EACrB,CAAC;AACH;AA1PF,IA2PE,IAAI,CAAC;AA3PP,IA4PE,IAAI,oBAAI,IAAI;AA5Pd,IA6PE,IAAI;AA7PN,IA8PE,IAAI,WAAY;AACd,MAAIA,KAAI,KAAK,IAAI,EAAE,SAAS,GAAG,KAAK,OAAO,EAAE,IAAI,KAAK,EAAE,CAAC;AACzD,SAAO,EAAEA,EAAC;AACZ;AAjQF,IAkQE,IAAI,CAAC;AAlQP,IAmQE,IAAI,SAAUA,IAAG;AACf,MAAI,EAAE,QAAQ,SAAUC,IAAG;AACzB,WAAOA,GAAED,EAAC;AAAA,EACZ,CAAC,GAAGA,GAAE,iBAAiB,kBAAkBA,GAAE,WAAW;AACpD,QAAIC,KAAI,EAAE,EAAE,SAAS,CAAC,GACpBC,KAAI,EAAE,IAAIF,GAAE,aAAa;AAC3B,QAAIE,MAAK,EAAE,SAAS,MAAMF,GAAE,WAAWC,GAAE,SAAS;AAChD,UAAIC,GAAG,CAAAF,GAAE,WAAWE,GAAE,WAAWA,GAAE,UAAU,CAACF,EAAC,GAAGE,GAAE,UAAUF,GAAE,YAAYA,GAAE,aAAaE,GAAE,WAAWF,GAAE,cAAcE,GAAE,QAAQ,CAAC,EAAE,aAAaA,GAAE,QAAQ,KAAKF,EAAC;AAAA,WAAO;AACvK,YAAIG,KAAI;AAAA,UACN,IAAIH,GAAE;AAAA,UACN,SAASA,GAAE;AAAA,UACX,SAAS,CAACA,EAAC;AAAA,QACb;AACA,UAAE,IAAIG,GAAE,IAAIA,EAAC,GAAG,EAAE,KAAKA,EAAC;AAAA,MAC1B;AACA,QAAE,KAAK,SAAUH,IAAGC,IAAG;AACrB,eAAOA,GAAE,UAAUD,GAAE;AAAA,MACvB,CAAC,GAAG,EAAE,SAAS,MAAM,EAAE,OAAO,EAAE,EAAE,QAAQ,SAAUA,IAAG;AACrD,eAAO,EAAE,OAAOA,GAAE,EAAE;AAAA,MACtB,CAAC;AAAA,IACH;AAAA,EACF;AACF;AAzRF,IA0RE,IAAI,SAAUA,IAAG;AACf,MAAIC,KAAI,KAAK,uBAAuB,KAAK,YACvCC,KAAI;AACN,SAAOF,KAAI,EAAEA,EAAC,GAAG,aAAa,SAAS,kBAAkBA,GAAE,KAAKE,KAAID,GAAED,EAAC,GAAG,EAAEA,EAAC,IAAIE;AACnF;AA9RF,IA+RE,IAAI,CAAC,KAAK,GAAG;AA/Rf,IAgSE,IAAI,SAAUF,IAAGC,IAAG;AAClB,8BAA4B,QAAQ,mBAAmB,uBAAuB,cAAcA,KAAIA,MAAK,CAAC,GAAG,EAAE,WAAY;AACrH,QAAIC;AACJ,MAAE;AACF,QAAIC,IACFC,KAAI,EAAE,KAAK,GACXC,KAAI,SAAUL,IAAG;AACf,QAAE,WAAY;AACZ,QAAAA,GAAE,QAAQ,CAAC;AACX,YAAIC,KAAI,EAAE;AACV,QAAAA,MAAKA,GAAE,YAAYG,GAAE,UAAUA,GAAE,QAAQH,GAAE,SAASG,GAAE,UAAUH,GAAE,SAASE,GAAE;AAAA,MAC/E,CAAC;AAAA,IACH,GACAG,KAAI,EAAE,SAASD,IAAG;AAAA,MAChB,mBAAmB,UAAUH,KAAID,GAAE,sBAAsB,WAAWC,KAAIA,KAAI;AAAA,IAC9E,CAAC;AACH,IAAAC,KAAI,EAAEH,IAAGI,IAAG,GAAGH,GAAE,gBAAgB,GAAGK,OAAMA,GAAE,QAAQ;AAAA,MAClD,MAAM;AAAA,MACN,UAAU;AAAA,IACZ,CAAC,GAAG,EAAE,WAAY;AAChB,MAAAD,GAAEC,GAAE,YAAY,CAAC,GAAGH,GAAE,IAAE;AAAA,IAC1B,CAAC,GAAG,EAAE,WAAY;AAChB,UAAI,EAAE,GAAG,EAAE,SAAS,GAAG,EAAE,MAAM,GAAGC,KAAI,EAAE,KAAK,GAAGD,KAAI,EAAEH,IAAGI,IAAG,GAAGH,GAAE,gBAAgB;AAAA,IACnF,CAAC;AAAA,EACH,CAAC;AACH;AAzTF,IA0TE,IAAI,CAAC;AA1TP,IA2TE,IAAI,CAAC;AA3TP,IA4TE,IAAI;AA5TN,IA6TE,IAAI,oBAAI,QAAQ;AA7TlB,IA8TE,IAAI,oBAAI,IAAI;AA9Td,IA+TE,IAAI;AA/TN,IAgUE,IAAI,SAAUD,IAAG;AACf,MAAI,EAAE,OAAOA,EAAC,GAAG,EAAE;AACrB;AAlUF,IAmUE,IAAI,WAAY;AACd,MAAI,MAAM,IAAI,EAAE,CAAC;AACnB;AArUF,IAsUE,IAAI,WAAY;AACd,IAAE,OAAO,MAAM,EAAE,QAAQ,SAAUA,IAAGC,IAAG;AACvC,MAAE,IAAIA,EAAC,KAAK,EAAE,OAAOA,EAAC;AAAA,EACxB,CAAC;AACD,MAAID,KAAI,EAAE,IAAI,SAAUA,IAAG;AACvB,WAAO,EAAE,IAAIA,GAAE,QAAQ,CAAC,CAAC;AAAA,EAC3B,CAAC,GACDC,KAAI,EAAE,SAAS;AACjB,MAAI,EAAE,OAAO,SAAUC,IAAGC,IAAG;AAC3B,WAAOA,MAAKF,MAAKD,GAAE,SAASE,EAAC;AAAA,EAC/B,CAAC;AACD,WAASA,KAAI,oBAAI,IAAI,GAAGC,KAAI,GAAGA,KAAI,EAAE,QAAQA,MAAK;AAChD,QAAIC,KAAI,EAAED,EAAC;AACX,OAAGC,GAAE,WAAWA,GAAE,aAAa,EAAE,QAAQ,SAAUJ,IAAG;AACpD,MAAAE,GAAE,IAAIF,EAAC;AAAA,IACT,CAAC;AAAA,EACH;AACA,MAAIK,KAAI,EAAE,SAAS,IAAI;AACvB,MAAI,EAAE,OAAO,SAAUL,IAAGC,IAAG;AAC3B,WAAOD,GAAE,YAAY,KAAKC,KAAII,MAAKH,GAAE,IAAIF,EAAC;AAAA,EAC5C,CAAC,GAAG,IAAI;AACV;AACF,EAAE,KAAK,SAAUA,IAAG;AAClB,EAAAA,GAAE,iBAAiBA,GAAE,UAAU,CAAC,EAAE,IAAIA,GAAE,aAAa,KAAK,EAAE,IAAIA,GAAE,eAAeA,GAAE,MAAM;AAC3F,GAAG,SAAUA,IAAG;AACd,MAAIC,IACFC,KAAIF,GAAE,YAAYA,GAAE;AACtB,MAAI,KAAK,IAAI,GAAGA,GAAE,aAAa;AAC/B,WAASG,KAAI,EAAE,SAAS,GAAGA,MAAK,GAAGA,MAAK;AACtC,QAAIC,KAAI,EAAED,EAAC;AACX,QAAI,KAAK,IAAID,KAAIE,GAAE,UAAU,KAAK,GAAG;AACnC,OAACH,KAAIG,IAAG,YAAY,KAAK,IAAIJ,GAAE,WAAWC,GAAE,SAAS,GAAGA,GAAE,kBAAkB,KAAK,IAAID,GAAE,iBAAiBC,GAAE,eAAe,GAAGA,GAAE,gBAAgB,KAAK,IAAID,GAAE,eAAeC,GAAE,aAAa,GAAGA,GAAE,QAAQ,KAAKD,EAAC;AAC1M;AAAA,IACF;AAAA,EACF;AACA,EAAAC,OAAMA,KAAI;AAAA,IACR,WAAWD,GAAE;AAAA,IACb,iBAAiBA,GAAE;AAAA,IACnB,eAAeA,GAAE;AAAA,IACjB,YAAYE;AAAA,IACZ,SAAS,CAACF,EAAC;AAAA,EACb,GAAG,EAAE,KAAKC,EAAC,KAAKD,GAAE,iBAAiB,kBAAkBA,GAAE,cAAc,EAAE,IAAIA,IAAGC,EAAC,GAAG,EAAE;AACtF,CAAC;AACD,IAIE,KAAK,SAAUM,IAAGC,IAAG;AACnB,WAASC,IAAGC,KAAI,CAAC,GAAGC,KAAI,GAAGF,KAAI,EAAEE,EAAC,GAAGA,KAAK,KAAI,EAAEF,GAAE,YAAYA,GAAE,WAAWF,KAAI;AAC7E,QAAIE,GAAE,YAAYD,GAAG;AACrB,IAAAE,GAAE,KAAKD,EAAC;AAAA,EACV;AACA,SAAOC;AACT;AAVF,IAWE,KAAK,SAAUH,IAAGE,IAAG;AACnB,QAAM,IAAI,EAAE,wBAAwB,CAAC,IAAI,EAAE,SAAUD,IAAG;AACtD,QAAIC,KAAI,SAAUF,IAAG;AACnB,UAAIC,KAAID,GAAE,QAAQ,CAAC,GACjBE,KAAI,EAAE,IAAID,EAAC,GACXG,KAAIH,GAAE,iBACNI,KAAIH,GAAE,eACNI,KAAIJ,GAAE,QAAQ,KAAK,SAAUF,IAAGC,IAAG;AACjC,eAAOD,GAAE,kBAAkBC,GAAE;AAAA,MAC/B,CAAC,GACDM,KAAI,GAAGN,GAAE,WAAWI,EAAC,GACrBG,KAAIR,GAAE,QAAQ,KAAK,SAAUA,IAAG;AAC9B,eAAOA,GAAE;AAAA,MACX,CAAC,GACDS,KAAID,MAAKA,GAAE,UAAU,EAAE,IAAIP,GAAE,aAAa,GAC1CS,KAAI,CAACT,GAAE,YAAYA,GAAE,UAAUI,EAAC,EAAE,OAAOE,GAAE,IAAI,SAAUP,IAAG;AAC1D,eAAOA,GAAE,YAAYA,GAAE;AAAA,MACzB,CAAC,CAAC,GACFW,KAAI,KAAK,IAAI,MAAM,MAAMD,EAAC,GAC1BE,KAAI;AAAA,QACF,mBAAmB,EAAEH,EAAC;AAAA,QACtB,0BAA0BA;AAAA,QAC1B,iBAAiBR,GAAE,KAAK,WAAW,KAAK,IAAI,aAAa;AAAA,QACzD,iBAAiBA,GAAE;AAAA,QACnB,eAAeU;AAAA,QACf,uBAAuBL;AAAA,QACvB,2BAA2BC;AAAA,QAC3B,YAAYH,KAAIH,GAAE;AAAA,QAClB,oBAAoBI,KAAID;AAAA,QACxB,mBAAmB,KAAK,IAAIO,KAAIN,IAAG,CAAC;AAAA,QACpC,WAAW,EAAEJ,GAAE,SAAS;AAAA,MAC1B;AACF,aAAO,OAAO,OAAOD,IAAG;AAAA,QACtB,aAAaY;AAAA,MACf,CAAC;AAAA,IACH,EAAEX,EAAC;AACH,IAAAD,GAAEE,EAAC;AAAA,EACL,GAAGA,EAAC;AACN;AAjDF,IAkDE,KAAK,CAAC,MAAM,GAAG;AAlDjB,IAmDE,KAAK,CAAC;AAnDR,IAoDE,KAAK,SAAUF,IAAGC,IAAG;AACnB,GAAC,SAAUD,IAAGC,IAAG;AACf,IAAAA,KAAIA,MAAK,CAAC,GAAG,EAAE,WAAY;AACzB,UAAIC,IACFC,KAAI,EAAE,GACNC,KAAI,EAAE,KAAK,GACXS,KAAI,SAAUb,IAAG;AACf,QAAAC,GAAE,qBAAqBD,KAAIA,GAAE,MAAM,EAAE,IAAIA,GAAE,QAAQ,SAAUA,IAAG;AAC9D,UAAAA,GAAE,YAAYG,GAAE,oBAAoBC,GAAE,QAAQ,KAAK,IAAIJ,GAAE,YAAY,EAAE,GAAG,CAAC,GAAGI,GAAE,UAAU,CAACJ,EAAC,GAAGE,GAAE;AAAA,QACnG,CAAC;AAAA,MACH,GACAG,KAAI,EAAE,4BAA4BQ,EAAC;AACrC,UAAIR,IAAG;AACL,QAAAH,KAAI,EAAEF,IAAGI,IAAG,IAAIH,GAAE,gBAAgB;AAClC,YAAIK,KAAI,EAAE,WAAY;AACpB,aAAGF,GAAE,EAAE,MAAMS,GAAER,GAAE,YAAY,CAAC,GAAGA,GAAE,WAAW,GAAG,GAAGD,GAAE,EAAE,IAAI,MAAIF,GAAE,IAAE;AAAA,QACtE,CAAC;AACD,SAAC,WAAW,OAAO,EAAE,QAAQ,SAAUF,IAAG;AACxC,2BAAiBA,IAAG,WAAY;AAC9B,mBAAO,EAAEM,EAAC;AAAA,UACZ,GAAG;AAAA,YACD,MAAM;AAAA,YACN,SAAS;AAAA,UACX,CAAC;AAAA,QACH,CAAC,GAAG,EAAEA,EAAC,GAAG,EAAE,SAAUH,IAAG;AACvB,UAAAC,KAAI,EAAE,KAAK,GAAGF,KAAI,EAAEF,IAAGI,IAAG,IAAIH,GAAE,gBAAgB,GAAG,EAAE,WAAY;AAC/D,YAAAG,GAAE,QAAQ,YAAY,IAAI,IAAID,GAAE,WAAW,GAAGC,GAAE,EAAE,IAAI,MAAIF,GAAE,IAAE;AAAA,UAChE,CAAC;AAAA,QACH,CAAC;AAAA,MACH;AAAA,IACF,CAAC;AAAA,EACH,EAAE,SAAUD,IAAG;AACb,QAAIE,KAAI,SAAUH,IAAG;AACnB,UAAIC,KAAI;AAAA,QACN,iBAAiB;AAAA,QACjB,mBAAmB;AAAA,QACnB,sBAAsB;AAAA,QACtB,oBAAoBD,GAAE;AAAA,MACxB;AACA,UAAIA,GAAE,QAAQ,QAAQ;AACpB,YAAIG,KAAI,EAAE;AACV,YAAIA,IAAG;AACL,cAAIC,KAAID,GAAE,mBAAmB,GAC3BE,KAAIL,GAAE,QAAQA,GAAE,QAAQ,SAAS,CAAC,GAClCM,KAAID,GAAE,OAAO,YAAY,iBAAiB,UAAU,EAAE,OAAO,SAAUL,IAAG;AACxE,mBAAOA,GAAE,SAASK,GAAE;AAAA,UACtB,CAAC,EAAE,CAAC,GACJE,KAAI,KAAK,IAAI,GAAGJ,GAAE,gBAAgBC,EAAC,GACnCI,KAAI,KAAK,IAAID,IAAGD,MAAKA,GAAE,gBAAgBA,GAAE,aAAaF,KAAI,CAAC,GAC3DK,KAAI,KAAK,IAAID,IAAGF,KAAIA,GAAE,cAAcF,KAAI,CAAC,GACzCM,KAAI,KAAK,IAAID,IAAGJ,GAAE,YAAYD,EAAC;AACjC,UAAAH,KAAI;AAAA,YACF,SAAS,EAAEI,GAAE,OAAO;AAAA,YACpB,iBAAiBE;AAAA,YACjB,mBAAmBC,KAAID;AAAA,YACvB,sBAAsBE,KAAID;AAAA,YAC1B,oBAAoBE,KAAID;AAAA,YACxB,iBAAiBN;AAAA,YACjB,UAAUE;AAAA,UACZ,GAAGA,GAAE,QAAQJ,GAAE,MAAMI,GAAE,MAAMC,OAAML,GAAE,mBAAmBK;AAAA,QAC1D;AAAA,MACF;AACA,aAAO,OAAO,OAAON,IAAG;AAAA,QACtB,aAAaC;AAAA,MACf,CAAC;AAAA,IACH,EAAEA,EAAC;AACH,IAAAD,GAAEG,EAAC;AAAA,EACL,GAAGF,EAAC;AACN;;;ACneF,IAAM,OAAO;AACb,IAAM,UAAU;AAkBhB,IAAM,cAAc;AAEpB,IAAM,0BAA0B;AAEhC,IAAM,yBAAyB;AAE/B,IAAM,uBAAuB;AAE7B,IAAM,6BAA6B;AACnC,IAAM,2BAA2B;AACjC,IAAM,sCAAsC;AAC5C,IAAM,iCAAiC;AACvC,IAAM,uCAAuC;AAC7C,IAAM,0CAA0C;AAChD,IAAM,wCAAwC;AAC9C,IAAM,2CAA2C;AACjD,IAAM,sCAAsC;AAC5C,IAAM,yCAAyC;AAC/C,IAAM,2BAA2B;AACjC,IAAM,kCAAkC;AACxC,IAAM,UAAU;AAChB,IAAM,eAAe;AAkBrB,IAAM,wBAAwB;AAAA,EAC5B;AAAA,IAAC;AAAA;AAAA,EAAoD,GAAG;AAAA,EACxD;AAAA,IAAC;AAAA;AAAA,EAAoD,GAAG;AAAA,EACxD;AAAA,IAAC;AAAA;AAAA,EAA0E,GAAG;AAAA,EAC9E;AAAA,IAAC;AAAA;AAAA,EAAuE,GAAG;AAAA,EAC3E;AAAA,IAAC;AAAA;AAAA,EAAqC,GAAG;AAAA,EACzC;AAAA,IAAC;AAAA;AAAA,EAAqC,GAAG;AAAA,EACzC;AAAA,IAAC;AAAA;AAAA,EAA6C,GAAG;AAAA,EACjD;AAAA,IAAC;AAAA;AAAA,EAAuC,GAAG;AAAA,EAC3C;AAAA,IAAC;AAAA;AAAA,EAA+C,GAAG;AAAA,EACnD;AAAA,IAAC;AAAA;AAAA,EAA+C,GAAG;AAAA,EACnD;AAAA,IAAC;AAAA;AAAA,EAA8C,GAAG;AAAA,EAClD;AAAA,IAAC;AAAA;AAAA,EAA+D,GAAG;AAAA,EACnE;AAAA,IAAC;AAAA;AAAA,EAAiE,GAAG;AAAA,EACrE;AAAA,IAAC;AAAA;AAAA,EAAuE,GAAG;AAAA,EAC3E;AAAA,IAAC;AAAA;AAAA,EAA6E,GAAG;AAAA,EACjF;AAAA,IAAC;AAAA;AAAA,EAAyD,GAAG;AAC/D;AACA,IAAM,gBAAgB,IAAI,aAAa,SAAS,cAAc,qBAAqB;AAkBnF,IAAM,gBAAgB,IAAI,OAAO,YAAY;AAC7C,cAAc,WAAW,SAAS;AAkBlC,IAAI;AACJ,IAAI;AAKJ,IAAM,MAAN,MAAM,KAAI;AAAA,EACR,YAAYa,SAAQ;AAClB,SAAK,SAASA;AACd,QAAI,CAACA,SAAQ;AACX,YAAM,cAAc;AAAA,QAAO;AAAA;AAAA,MAAqC;AAAA,IAClE;AACA,SAAK,cAAcA,QAAO;AAC1B,SAAK,sBAAsBA,QAAO;AAClC,SAAK,iBAAiBA,QAAO;AAC7B,SAAK,YAAYA,QAAO;AACxB,SAAK,WAAWA,QAAO;AACvB,QAAI,KAAK,aAAa,KAAK,UAAU,eAAe;AAGlD,WAAK,eAAeA,QAAO;AAAA,IAC7B;AACA,QAAIA,QAAO,eAAeA,QAAO,YAAY,mBAAmB;AAC9D,WAAK,oBAAoBA,QAAO,YAAY;AAAA,IAC9C;AACA,SAAK,QAAQ;AACb,SAAK,QAAQ;AACb,SAAK,QAAQ;AAAA,EACf;AAAA,EACA,SAAS;AAEP,WAAO,KAAK,eAAe,KAAK,MAAM,GAAG,EAAE,CAAC;AAAA,EAC9C;AAAA,EACA,KAAKC,OAAM;AACT,QAAI,CAAC,KAAK,eAAe,CAAC,KAAK,YAAY,MAAM;AAC/C;AAAA,IACF;AACA,SAAK,YAAY,KAAKA,KAAI;AAAA,EAC5B;AAAA,EACA,QAAQ,aAAa,OAAO,OAAO;AACjC,QAAI,CAAC,KAAK,eAAe,CAAC,KAAK,YAAY,SAAS;AAClD;AAAA,IACF;AACA,SAAK,YAAY,QAAQ,aAAa,OAAO,KAAK;AAAA,EACpD;AAAA,EACA,iBAAiB,MAAM;AACrB,QAAI,CAAC,KAAK,eAAe,CAAC,KAAK,YAAY,kBAAkB;AAC3D,aAAO,CAAC;AAAA,IACV;AACA,WAAO,KAAK,YAAY,iBAAiB,IAAI;AAAA,EAC/C;AAAA,EACA,iBAAiBA,OAAM;AACrB,QAAI,CAAC,KAAK,eAAe,CAAC,KAAK,YAAY,kBAAkB;AAC3D,aAAO,CAAC;AAAA,IACV;AACA,WAAO,KAAK,YAAY,iBAAiBA,KAAI;AAAA,EAC/C;AAAA,EACA,gBAAgB;AAEd,WAAO,KAAK,gBAAgB,KAAK,YAAY,cAAc,KAAK,YAAY,OAAO;AAAA,EACrF;AAAA,EACA,wBAAwB;AACtB,QAAI,CAAC,SAAS,CAAC,WAAW,CAAC,kBAAkB,GAAG;AAC9C,oBAAc,KAAK,wGAAwG;AAC3H,aAAO;AAAA,IACT;AACA,QAAI,CAAC,qBAAqB,GAAG;AAC3B,oBAAc,KAAK,+CAA+C;AAClE,aAAO;AAAA,IACT;AACA,WAAO;AAAA,EACT;AAAA,EACA,cAAc,WAAW,UAAU;AACjC,QAAI,CAAC,KAAK,qBAAqB;AAC7B;AAAA,IACF;AACA,UAAM,WAAW,IAAI,KAAK,oBAAoB,UAAQ;AACpD,iBAAW,SAAS,KAAK,WAAW,GAAG;AAErC,iBAAS,KAAK;AAAA,MAChB;AAAA,IACF,CAAC;AAED,aAAS,QAAQ;AAAA,MACf,YAAY,CAAC,SAAS;AAAA,IACxB,CAAC;AAAA,EACH;AAAA,EACA,OAAO,cAAc;AACnB,QAAI,gBAAgB,QAAW;AAC7B,oBAAc,IAAI,KAAI,cAAc;AAAA,IACtC;AACA,WAAO;AAAA,EACT;AACF;AACA,SAAS,SAASD,SAAQ;AACxB,mBAAiBA;AACnB;AAkBA,IAAI;AACJ,SAAS,cAAc,sBAAsB;AAC3C,QAAM,aAAa,qBAAqB,MAAM;AAE9C,aAAW,KAAK,YAAU;AACxB,UAAM;AAAA,EACR,CAAC;AACD,SAAO;AACT;AAEA,SAAS,SAAS;AAChB,SAAO;AACT;AACA,SAAS,oBAAoB,sBAAsB;AACjD,QAAM,mBAAmB,qBAAqB,SAAS;AAEvD,mBAAiB,KAAK,kBAAgB;AAAA,EAAC,CAAC;AACxC,SAAO;AACT;AAkBA,SAAS,aAAa,OAAO,OAAO;AAClC,QAAM,WAAW,MAAM,SAAS,MAAM;AACtC,MAAI,WAAW,KAAK,WAAW,GAAG;AAChC,UAAM,cAAc;AAAA,MAAO;AAAA;AAAA,IAA6E;AAAA,EAC1G;AACA,QAAM,cAAc,CAAC;AACrB,WAASE,KAAI,GAAGA,KAAI,MAAM,QAAQA,MAAK;AACrC,gBAAY,KAAK,MAAM,OAAOA,EAAC,CAAC;AAChC,QAAI,MAAM,SAASA,IAAG;AACpB,kBAAY,KAAK,MAAM,OAAOA,EAAC,CAAC;AAAA,IAClC;AAAA,EACF;AACA,SAAO,YAAY,KAAK,EAAE;AAC5B;AAkBA,IAAI;AACJ,IAAM,kBAAN,MAAM,iBAAgB;AAAA,EACpB,cAAc;AAEZ,SAAK,yBAAyB;AAE9B,SAAK,wBAAwB;AAE7B,SAAK,iBAAiB;AAEtB,SAAK,qBAAqB;AAC1B,SAAK,8BAA8B;AAEnC,SAAK,iBAAiB;AAGtB,SAAK,yBAAyB,aAAa,oCAAoC,iCAAiC;AAChH,SAAK,eAAe,aAAa,wBAAwB,qBAAqB;AAE9E,SAAK,YAAY;AAEjB,SAAK,wBAAwB;AAC7B,SAAK,0BAA0B;AAE/B,SAAK,mBAAmB;AAAA,EAC1B;AAAA,EACA,wBAAwB;AACtB,WAAO,KAAK,uBAAuB,OAAO,SAAS,KAAK,YAAY;AAAA,EACtE;AAAA,EACA,OAAO,cAAc;AACnB,QAAI,4BAA4B,QAAW;AACzC,gCAA0B,IAAI,iBAAgB;AAAA,IAChD;AACA,WAAO;AAAA,EACT;AACF;AAkBA,IAAI;AAAA,CACH,SAAUC,kBAAiB;AAC1B,EAAAA,iBAAgBA,iBAAgB,SAAS,IAAI,CAAC,IAAI;AAClD,EAAAA,iBAAgBA,iBAAgB,SAAS,IAAI,CAAC,IAAI;AAClD,EAAAA,iBAAgBA,iBAAgB,QAAQ,IAAI,CAAC,IAAI;AACnD,GAAG,oBAAoB,kBAAkB,CAAC,EAAE;AAC5C,IAAM,8BAA8B,CAAC,aAAa,WAAW,KAAK;AAClE,IAAM,yBAAyB,IAAI,OAAO,gBAAgB;AAC1D,IAAM,4BAA4B;AAClC,IAAM,6BAA6B;AACnC,SAAS,yBAAyB;AAChC,QAAMC,aAAY,IAAI,YAAY,EAAE;AACpC,MAAIA,eAAc,QAAQA,eAAc,SAAS,SAASA,WAAU,eAAe;AACjF,QAAIA,WAAU,cAAc,YAAY;AACtC,aAAO;AAAA,IACT,OAAO;AACL,aAAO;AAAA,IACT;AAAA,EACF,OAAO;AACL,WAAO;AAAA,EACT;AACF;AACA,SAAS,qBAAqB;AAC5B,QAAMC,YAAW,IAAI,YAAY,EAAE;AACnC,QAAM,kBAAkBA,UAAS;AACjC,UAAQ,iBAAiB;AAAA,IACvB,KAAK;AACH,aAAO,gBAAgB;AAAA,IACzB,KAAK;AACH,aAAO,gBAAgB;AAAA,IACzB;AACE,aAAO,gBAAgB;AAAA,EAC3B;AACF;AACA,SAAS,6BAA6B;AACpC,QAAMD,aAAY,IAAI,YAAY,EAAE;AACpC,QAAM,sBAAsBA,WAAU;AACtC,QAAM,gBAAgB,uBAAuB,oBAAoB;AACjE,UAAQ,eAAe;AAAA,IACrB,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT;AACE,aAAO;AAAA,EACX;AACF;AACA,SAAS,2BAA2BH,OAAM;AACxC,MAAIA,MAAK,WAAW,KAAKA,MAAK,SAAS,2BAA2B;AAChE,WAAO;AAAA,EACT;AACA,QAAM,wBAAwB,4BAA4B,KAAK,YAAUA,MAAK,WAAW,MAAM,CAAC;AAChG,SAAO,CAAC,yBAAyB,CAAC,CAACA,MAAK,MAAM,sBAAsB;AACtE;AACA,SAAS,4BAA4B,OAAO;AAC1C,SAAO,MAAM,WAAW,KAAK,MAAM,UAAU;AAC/C;AAkBA,SAAS,SAAS,aAAa;AAC7B,MAAI;AACJ,QAAM,SAAS,KAAK,YAAY,aAAa,QAAQ,OAAO,SAAS,SAAS,GAAG;AACjF,MAAI,CAAC,OAAO;AACV,UAAM,cAAc;AAAA,MAAO;AAAA;AAAA,IAAqC;AAAA,EAClE;AACA,SAAO;AACT;AACA,SAAS,aAAa,aAAa;AACjC,MAAI;AACJ,QAAM,aAAa,KAAK,YAAY,aAAa,QAAQ,OAAO,SAAS,SAAS,GAAG;AACrF,MAAI,CAAC,WAAW;AACd,UAAM,cAAc;AAAA,MAAO;AAAA;AAAA,IAA6C;AAAA,EAC1E;AACA,SAAO;AACT;AACA,SAAS,UAAU,aAAa;AAC9B,MAAI;AACJ,QAAM,UAAU,KAAK,YAAY,aAAa,QAAQ,OAAO,SAAS,SAAS,GAAG;AAClF,MAAI,CAAC,QAAQ;AACX,UAAM,cAAc;AAAA,MAAO;AAAA;AAAA,IAAuC;AAAA,EACpE;AACA,SAAO;AACT;AAkBA,IAAM,4BAA4B;AAGlC,IAAM,kBAAkB;AAAA,EACtB,gBAAgB;AAClB;AACA,IAAM,kBAAkB;AACxB,SAAS,UAAU,uBAAuBK,MAAK;AAC7C,QAAM,SAAS,gBAAgB;AAC/B,MAAI,QAAQ;AACV,kBAAc,MAAM;AACpB,WAAO,QAAQ,QAAQ;AAAA,EACzB;AACA,SAAO,gBAAgB,uBAAuBA,IAAG,EAAE,KAAK,aAAa,EAAE;AAAA,IAAK,CAAAC,YAAU,YAAYA,OAAM;AAAA;AAAA,IACxG,MAAM;AAAA,IAAC;AAAA,EAAC;AACV;AACA,SAAS,kBAAkB;AACzB,QAAM,eAAe,IAAI,YAAY,EAAE;AACvC,MAAI,CAAC,cAAc;AACjB;AAAA,EACF;AACA,QAAM,eAAe,aAAa,QAAQ,+BAA+B;AACzE,MAAI,CAAC,gBAAgB,CAAC,YAAY,YAAY,GAAG;AAC/C;AAAA,EACF;AACA,QAAM,oBAAoB,aAAa,QAAQ,wBAAwB;AACvE,MAAI,CAAC,mBAAmB;AACtB;AAAA,EACF;AACA,MAAI;AACF,UAAM,iBAAiB,KAAK,MAAM,iBAAiB;AACnD,WAAO;AAAA,EACT,SAAS,IAAI;AACX;AAAA,EACF;AACF;AACA,SAAS,YAAY,QAAQ;AAC3B,QAAM,eAAe,IAAI,YAAY,EAAE;AACvC,MAAI,CAAC,UAAU,CAAC,cAAc;AAC5B;AAAA,EACF;AACA,eAAa,QAAQ,0BAA0B,KAAK,UAAU,MAAM,CAAC;AACrE,eAAa,QAAQ,iCAAiC,OAAO,KAAK,IAAI,IAAI,gBAAgB,YAAY,EAAE,mBAAmB,KAAK,KAAK,GAAI,CAAC;AAC5I;AACA,IAAM,2BAA2B;AACjC,SAAS,gBAAgB,uBAAuBD,MAAK;AAEnD,SAAO,oBAAoB,sBAAsB,aAAa,EAAE,KAAK,eAAa;AAChF,UAAM,YAAY,aAAa,sBAAsB,GAAG;AACxD,UAAM,SAAS,UAAU,sBAAsB,GAAG;AAClD,UAAM,iBAAiB,2DAA2D,SAAS,kCAAkC,MAAM;AACnI,UAAM,UAAU,IAAI,QAAQ,gBAAgB;AAAA,MAC1C,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,eAAe,GAAG,eAAe,IAAI,SAAS;AAAA,MAChD;AAAA;AAAA,MAEA,MAAM,KAAK,UAAU;AAAA,QACnB,iBAAiBA;AAAA,QACjB,uBAAuB;AAAA,QACvB,QAAQ,SAAS,sBAAsB,GAAG;AAAA,QAC1C,aAAa;AAAA,QACb,aAAa;AAAA,MACf,CAAC;AAAA;AAAA,IAEH,CAAC;AACD,WAAO,MAAM,OAAO,EAAE,KAAK,cAAY;AACrC,UAAI,SAAS,IAAI;AACf,eAAO,SAAS,KAAK;AAAA,MACvB;AAEA,YAAM,cAAc;AAAA,QAAO;AAAA;AAAA,MAA8C;AAAA,IAC3E,CAAC;AAAA,EACH,CAAC,EAAE,MAAM,MAAM;AACb,kBAAc,KAAK,wBAAwB;AAC3C,WAAO;AAAA,EACT,CAAC;AACH;AAMA,SAAS,cAAc,QAAQ;AAC7B,MAAI,CAAC,QAAQ;AACX,WAAO;AAAA,EACT;AACA,QAAME,2BAA0B,gBAAgB,YAAY;AAC5D,QAAM,UAAU,OAAO,WAAW,CAAC;AACnC,MAAI,QAAQ,gBAAgB,QAAW;AAGrC,IAAAA,yBAAwB,iBAAiB,OAAO,QAAQ,WAAW,MAAM;AAAA,EAC3E,OAAO;AAGL,IAAAA,yBAAwB,iBAAiB,gBAAgB;AAAA,EAC3D;AACA,MAAI,QAAQ,gBAAgB;AAC1B,IAAAA,yBAAwB,YAAY,OAAO,QAAQ,cAAc;AAAA,EACnE,WAAW,gBAAgB,WAAW;AACpC,IAAAA,yBAAwB,YAAY,gBAAgB;AAAA,EACtD;AACA,MAAI,QAAQ,sBAAsB;AAChC,IAAAA,yBAAwB,iBAAiB,QAAQ;AAAA,EACnD,WAAW,gBAAgB,gBAAgB;AACzC,IAAAA,yBAAwB,iBAAiB,gBAAgB;AAAA,EAC3D;AAEA,MAAI,QAAQ,uBAAuB;AACjC,IAAAA,yBAAwB,eAAe,QAAQ;AAAA,EACjD,WAAW,gBAAgB,cAAc;AACvC,IAAAA,yBAAwB,eAAe,gBAAgB;AAAA,EACzD;AACA,MAAI,QAAQ,yCAAyC,QAAW;AAC9D,IAAAA,yBAAwB,8BAA8B,OAAO,QAAQ,oCAAoC;AAAA,EAC3G,WAAW,gBAAgB,gCAAgC,QAAW;AACpE,IAAAA,yBAAwB,8BAA8B,gBAAgB;AAAA,EACxE;AACA,MAAI,QAAQ,+BAA+B,QAAW;AACpD,IAAAA,yBAAwB,qBAAqB,OAAO,QAAQ,0BAA0B;AAAA,EACxF,WAAW,gBAAgB,uBAAuB,QAAW;AAC3D,IAAAA,yBAAwB,qBAAqB,gBAAgB;AAAA,EAC/D;AAEA,EAAAA,yBAAwB,wBAAwB,uBAAuBA,yBAAwB,kBAAkB;AACjH,EAAAA,yBAAwB,0BAA0B,uBAAuBA,yBAAwB,2BAA2B;AAC5H,SAAO;AACT;AACA,SAAS,YAAY,QAAQ;AAC3B,SAAO,OAAO,MAAM,IAAI,KAAK,IAAI;AACnC;AACA,SAAS,uBAAuB,cAAc;AAC5C,SAAO,KAAK,OAAO,KAAK;AAC1B;AAkBA,IAAI,uBAAuB;AAC3B,IAAI;AACJ,SAAS,yBAAyB,uBAAuB;AACvD,yBAAuB;AACvB,0BAAwB,yBAAyB,eAAe,qBAAqB;AACrF,SAAO;AACT;AACA,SAAS,oBAAoB;AAC3B,SAAO,yBAAyB;AAClC;AACA,SAAS,eAAe,uBAAuB;AAC7C,SAAO,yBAAyB,EAAE,KAAK,MAAM,cAAc,sBAAsB,aAAa,CAAC,EAAE,KAAK,CAAAF,SAAO,UAAU,uBAAuBA,IAAG,CAAC,EAAE,KAAK,MAAM,2BAA2B,GAAG,MAAM,2BAA2B,CAAC;AACjO;AAKA,SAAS,2BAA2B;AAClC,QAAMD,YAAW,IAAI,YAAY,EAAE;AACnC,SAAO,IAAI,QAAQ,aAAW;AAC5B,QAAIA,aAAYA,UAAS,eAAe,YAAY;AAClD,YAAM,UAAU,MAAM;AACpB,YAAIA,UAAS,eAAe,YAAY;AACtC,UAAAA,UAAS,oBAAoB,oBAAoB,OAAO;AACxD,kBAAQ;AAAA,QACV;AAAA,MACF;AACA,MAAAA,UAAS,iBAAiB,oBAAoB,OAAO;AAAA,IACvD,OAAO;AACL,cAAQ;AAAA,IACV;AAAA,EACF,CAAC;AACH;AACA,SAAS,6BAA6B;AACpC,yBAAuB;AACzB;AAkBA,IAAM,2BAA2B,KAAK;AACtC,IAAM,6BAA6B,MAAM;AACzC,IAAM,8BAA8B;AACpC,IAAM,0BAA0B;AAChC,IAAI,iBAAiB;AAErB,IAAI,QAAQ,CAAC;AACb,IAAI,mBAAmB;AACvB,SAAS,wBAAwB;AAC/B,MAAI,CAAC,kBAAkB;AACrB,iBAAa,0BAA0B;AACvC,uBAAmB;AAAA,EACrB;AACF;AACA,SAAS,aAAa,YAAY;AAChC,aAAW,MAAM;AAEf,QAAI,kBAAkB,GAAG;AACvB;AAAA,IACF;AACA,QAAI,MAAM,SAAS,GAAG;AACpB,0BAAoB;AAAA,IACtB;AACA,iBAAa,wBAAwB;AAAA,EACvC,GAAG,UAAU;AACf;AACA,SAAS,sBAAsB;AAI7B,QAAM,SAAS,MAAM,OAAO,GAAG,2BAA2B;AAG1D,QAAM,YAAY,OAAO,IAAI,UAAQ;AAAA,IACnC,8BAA8B,IAAI;AAAA,IAClC,eAAe,OAAO,IAAI,SAAS;AAAA,EACrC,EAAE;AACF,QAAM,OAAO;AAAA,IACX,iBAAiB,OAAO,KAAK,IAAI,CAAC;AAAA,IAClC,aAAa;AAAA,MACX,aAAa;AAAA;AAAA,MAEb,gBAAgB,CAAC;AAAA,IACnB;AAAA,IACA,YAAY,gBAAgB,YAAY,EAAE;AAAA,IAC1C;AAAA,EACF;AAEA,mBAAiB,IAAI,EAAE,KAAK,MAAM;AAChC,qBAAiB;AAAA,EACnB,CAAC,EAAE,MAAM,MAAM;AAGb,YAAQ,CAAC,GAAG,QAAQ,GAAG,KAAK;AAC5B;AACA,kBAAc,KAAK,eAAe,cAAc,GAAG;AACnD,iBAAa,wBAAwB;AAAA,EACvC,CAAC;AACH;AACA,SAAS,iBAAiB,MAAM;AAC9B,QAAM,qBAAqB,gBAAgB,YAAY,EAAE,sBAAsB;AAC/E,QAAM,OAAO,KAAK,UAAU,IAAI;AAChC,SAAO,UAAU,cAAc,UAAU,WAAW,oBAAoB,IAAI,IAAI,QAAQ,QAAQ,IAAI,MAAM,oBAAoB;AAAA,IAC5H,QAAQ;AAAA,IACR;AAAA,IACA,WAAW;AAAA,EACb,CAAC,EAAE,KAAK;AACV;AACA,SAAS,WAAW,KAAK;AACvB,MAAI,CAAC,IAAI,aAAa,CAAC,IAAI,SAAS;AAClC,UAAM,cAAc;AAAA,MAAO;AAAA;AAAA,IAA+C;AAAA,EAC5E;AAEA,UAAQ,CAAC,GAAG,OAAO,GAAG;AACxB;AAEA,SAAS,iBAETI,aAAY;AACV,SAAO,IAAI,SAAS;AAClB,UAAM,UAAUA,YAAW,GAAG,IAAI;AAClC,eAAW;AAAA,MACT;AAAA,MACA,WAAW,KAAK,IAAI;AAAA,IACtB,CAAC;AAAA,EACH;AACF;AAKA,SAAS,oBAAoB;AAC3B,SAAO,MAAM,SAAS,GAAG;AACvB,wBAAoB;AAAA,EACtB;AACF;AAkBA,IAAI;AAGJ,SAAS,QAAQ,UAAU,cAAc;AACvC,MAAI,CAAC,QAAQ;AACX,aAAS;AAAA,MACP,MAAM,iBAAiB,UAAU;AAAA,MACjC,OAAO;AAAA,IACT;AAAA,EACF;AACA,SAAO,KAAK,UAAU,YAAY;AACpC;AACA,SAAS,SAASC,QAAO;AACvB,QAAM,kBAAkB,gBAAgB,YAAY;AAEpD,MAAI,CAAC,gBAAgB,0BAA0BA,OAAM,QAAQ;AAC3D;AAAA,EACF;AAEA,MAAI,CAAC,gBAAgB,yBAAyB,CAACA,OAAM,QAAQ;AAC3D;AAAA,EACF;AAEA,MAAI,CAAC,IAAI,YAAY,EAAE,sBAAsB,GAAG;AAC9C;AAAA,EACF;AACA,MAAI,kBAAkB,GAAG;AACvB,iBAAaA,MAAK;AAAA,EACpB,OAAO;AAGL,6BAAyBA,OAAM,qBAAqB,EAAE,KAAK,MAAM,aAAaA,MAAK,GAAG,MAAM,aAAaA,MAAK,CAAC;AAAA,EACjH;AACF;AACA,SAAS,YAAY;AACnB,MAAI,QAAQ;AACV,WAAO,MAAM;AAAA,EACf;AACF;AACA,SAAS,aAAaA,QAAO;AAC3B,MAAI,CAAC,OAAO,GAAG;AACb;AAAA,EACF;AACA,QAAM,kBAAkB,gBAAgB,YAAY;AACpD,MAAI,CAAC,gBAAgB,kBAAkB,CAAC,gBAAgB,uBAAuB;AAC7E;AAAA,EACF;AACA;AAAA,IAAQA;AAAA,IAAO;AAAA;AAAA,EAA0B;AAC3C;AACA,SAAS,kBAAkB,gBAAgB;AACzC,QAAM,kBAAkB,gBAAgB,YAAY;AAEpD,MAAI,CAAC,gBAAgB,wBAAwB;AAC3C;AAAA,EACF;AAGA,QAAM,oBAAoB,eAAe;AAGzC,QAAM,iBAAiB,gBAAgB,eAAe,MAAM,GAAG,EAAE,CAAC;AAClE,QAAM,gBAAgB,gBAAgB,uBAAuB,MAAM,GAAG,EAAE,CAAC;AACzE,MAAI,sBAAsB,kBAAkB,sBAAsB,eAAe;AAC/E;AAAA,EACF;AACA,MAAI,CAAC,gBAAgB,kBAAkB,CAAC,gBAAgB,yBAAyB;AAC/E;AAAA,EACF;AACA;AAAA,IAAQ;AAAA,IAAgB;AAAA;AAAA,EAAmC;AAC7D;AACA,SAAS,WAAW,UAAU,cAAc;AAC1C,MAAI,iBAAiB,GAAqC;AACxD,WAAO,wBAAwB,QAAQ;AAAA,EACzC;AACA,SAAO,eAAe,QAAQ;AAChC;AACA,SAAS,wBAAwB,gBAAgB;AAC/C,QAAM,uBAAuB;AAAA,IAC3B,KAAK,eAAe;AAAA,IACpB,aAAa,eAAe,cAAc;AAAA,IAC1C,oBAAoB;AAAA,IACpB,wBAAwB,eAAe;AAAA,IACvC,sBAAsB,eAAe;AAAA,IACrC,+BAA+B,eAAe;AAAA,IAC9C,+BAA+B,eAAe;AAAA,EAChD;AACA,QAAM,aAAa;AAAA,IACjB,kBAAkB,mBAAmB,eAAe,sBAAsB,GAAG;AAAA,IAC7E,wBAAwB;AAAA,EAC1B;AACA,SAAO,KAAK,UAAU,UAAU;AAClC;AACA,SAAS,eAAeA,QAAO;AAC7B,QAAM,cAAc;AAAA,IAClB,MAAMA,OAAM;AAAA,IACZ,SAASA,OAAM;AAAA,IACf,sBAAsBA,OAAM;AAAA,IAC5B,aAAaA,OAAM;AAAA,EACrB;AACA,MAAI,OAAO,KAAKA,OAAM,QAAQ,EAAE,WAAW,GAAG;AAC5C,gBAAY,WAAWA,OAAM;AAAA,EAC/B;AACA,QAAM,mBAAmBA,OAAM,cAAc;AAC7C,MAAI,OAAO,KAAK,gBAAgB,EAAE,WAAW,GAAG;AAC9C,gBAAY,oBAAoB;AAAA,EAClC;AACA,QAAM,aAAa;AAAA,IACjB,kBAAkB,mBAAmBA,OAAM,sBAAsB,GAAG;AAAA,IACpE,cAAc;AAAA,EAChB;AACA,SAAO,KAAK,UAAU,UAAU;AAClC;AACA,SAAS,mBAAmB,aAAa;AACvC,SAAO;AAAA,IACL,eAAe,SAAS,WAAW;AAAA,IACnC,iBAAiB,OAAO;AAAA,IACxB,cAAc;AAAA,MACZ,aAAa;AAAA,MACb,UAAU,IAAI,YAAY,EAAE,OAAO;AAAA,MACnC,uBAAuB,uBAAuB;AAAA,MAC9C,kBAAkB,mBAAmB;AAAA,MACrC,2BAA2B,2BAA2B;AAAA,IACxD;AAAA,IACA,2BAA2B;AAAA,EAC7B;AACF;AAmBA,SAAS,0BAA0B,uBAAuB,OAAO;AAC/D,QAAM,mBAAmB;AACzB,MAAI,CAAC,oBAAoB,iBAAiB,kBAAkB,QAAW;AACrE;AAAA,EACF;AACA,QAAM,aAAa,IAAI,YAAY,EAAE,cAAc;AACnD,QAAM,cAAc,KAAK,OAAO,iBAAiB,YAAY,cAAc,GAAI;AAC/E,QAAM,4BAA4B,iBAAiB,gBAAgB,KAAK,OAAO,iBAAiB,gBAAgB,iBAAiB,aAAa,GAAI,IAAI;AACtJ,QAAM,4BAA4B,KAAK,OAAO,iBAAiB,cAAc,iBAAiB,aAAa,GAAI;AAE/G,QAAM,MAAM,iBAAiB,QAAQ,iBAAiB,KAAK,MAAM,GAAG,EAAE,CAAC;AACvE,QAAM,iBAAiB;AAAA,IACrB;AAAA,IACA;AAAA,IACA,sBAAsB,iBAAiB;AAAA,IACvC;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACA,oBAAkB,cAAc;AAClC;AAkBA,IAAM,yBAAyB;AAC/B,IAAM,uBAAuB;AAC7B,IAAM,aAAa,CAAC,0BAA0B,qCAAqC,gCAAgC,sCAAsC,qCAAqC,qCAAqC;AAKnO,SAAS,kBAAkBT,OAAM,WAAW;AAC1C,MAAIA,MAAK,WAAW,KAAKA,MAAK,SAAS,wBAAwB;AAC7D,WAAO;AAAA,EACT;AACA,SAAO,aAAa,UAAU,WAAW,0BAA0B,KAAK,WAAW,QAAQA,KAAI,IAAI,MAAM,CAACA,MAAK,WAAW,oBAAoB;AAChJ;AAOA,SAAS,4BAA4B,eAAe;AAClD,QAAM,iBAAiB,KAAK,MAAM,aAAa;AAC/C,MAAI,iBAAiB,eAAe;AAClC,kBAAc,KAAK,6DAA6D,cAAc,GAAG;AAAA,EACnG;AACA,SAAO;AACT;AAkBA,IAAM,QAAN,MAAM,OAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASV,YAAY,uBAAuBA,OAAM,SAAS,OAAO,kBAAkB;AACzE,SAAK,wBAAwB;AAC7B,SAAK,OAAOA;AACZ,SAAK,SAAS;AACd,SAAK,QAAQ;AACb,SAAK,mBAAmB,CAAC;AACzB,SAAK,WAAW,CAAC;AACjB,SAAK,MAAM,IAAI,YAAY;AAC3B,SAAK,WAAW,KAAK,MAAM,KAAK,OAAO,IAAI,GAAO;AAClD,QAAI,CAAC,KAAK,QAAQ;AAChB,WAAK,iBAAiB,GAAG,uBAAuB,IAAI,KAAK,QAAQ,IAAI,KAAK,IAAI;AAC9E,WAAK,gBAAgB,GAAG,sBAAsB,IAAI,KAAK,QAAQ,IAAI,KAAK,IAAI;AAC5E,WAAK,eAAe,oBAAoB,GAAG,oBAAoB,IAAI,KAAK,QAAQ,IAAI,KAAK,IAAI;AAC7F,UAAI,kBAAkB;AAGpB,aAAK,sBAAsB;AAAA,MAC7B;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAIA,QAAQ;AACN,QAAI,KAAK,UAAU,GAAkC;AACnD,YAAM,cAAc,OAAO,iBAAsD;AAAA,QAC/E,WAAW,KAAK;AAAA,MAClB,CAAC;AAAA,IACH;AACA,SAAK,IAAI,KAAK,KAAK,cAAc;AACjC,SAAK,QAAQ;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO;AACL,QAAI,KAAK,UAAU,GAA4B;AAC7C,YAAM,cAAc,OAAO,iBAAsD;AAAA,QAC/E,WAAW,KAAK;AAAA,MAClB,CAAC;AAAA,IACH;AACA,SAAK,QAAQ;AACb,SAAK,IAAI,KAAK,KAAK,aAAa;AAChC,SAAK,IAAI,QAAQ,KAAK,cAAc,KAAK,gBAAgB,KAAK,aAAa;AAC3E,SAAK,sBAAsB;AAC3B,aAAS,IAAI;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,OAAO,WAAW,UAAU,SAAS;AACnC,QAAI,aAAa,GAAG;AAClB,YAAM,cAAc,OAAO,+BAA4E;AAAA,QACrG,WAAW,KAAK;AAAA,MAClB,CAAC;AAAA,IACH;AACA,QAAI,YAAY,GAAG;AACjB,YAAM,cAAc,OAAO,8BAAyE;AAAA,QAClG,WAAW,KAAK;AAAA,MAClB,CAAC;AAAA,IACH;AACA,SAAK,aAAa,KAAK,MAAM,WAAW,GAAI;AAC5C,SAAK,cAAc,KAAK,MAAM,YAAY,GAAI;AAC9C,QAAI,WAAW,QAAQ,YAAY;AACjC,WAAK,mBAAmB,OAAO,OAAO,CAAC,GAAG,QAAQ,UAAU;AAAA,IAC9D;AACA,QAAI,WAAW,QAAQ,SAAS;AAC9B,iBAAW,cAAc,OAAO,KAAK,QAAQ,OAAO,GAAG;AACrD,YAAI,CAAC,MAAM,OAAO,QAAQ,QAAQ,UAAU,CAAC,CAAC,GAAG;AAC/C,eAAK,SAAS,UAAU,IAAI,KAAK,MAAM,OAAO,QAAQ,QAAQ,UAAU,CAAC,CAAC;AAAA,QAC5E;AAAA,MACF;AAAA,IACF;AACA,aAAS,IAAI;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,gBAAgB,SAAS,eAAe,GAAG;AACzC,QAAI,KAAK,SAAS,OAAO,MAAM,QAAW;AACxC,WAAK,UAAU,SAAS,YAAY;AAAA,IACtC,OAAO;AACL,WAAK,UAAU,SAAS,KAAK,SAAS,OAAO,IAAI,YAAY;AAAA,IAC/D;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,UAAU,SAAS,cAAc;AAC/B,QAAI,kBAAkB,SAAS,KAAK,IAAI,GAAG;AACzC,WAAK,SAAS,OAAO,IAAI,4BAA4B,iBAAiB,QAAQ,iBAAiB,SAAS,eAAe,CAAC;AAAA,IAC1H,OAAO;AACL,YAAM,cAAc,OAAO,8BAAyE;AAAA,QAClG,kBAAkB;AAAA,MACpB,CAAC;AAAA,IACH;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,UAAU,SAAS;AACjB,WAAO,KAAK,SAAS,OAAO,KAAK;AAAA,EACnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,aAAa,MAAM,OAAO;AACxB,UAAM,cAAc,2BAA2B,IAAI;AACnD,UAAM,eAAe,4BAA4B,KAAK;AACtD,QAAI,eAAe,cAAc;AAC/B,WAAK,iBAAiB,IAAI,IAAI;AAC9B;AAAA,IACF;AAEA,QAAI,CAAC,aAAa;AAChB,YAAM,cAAc,OAAO,0BAAiE;AAAA,QAC1F,eAAe;AAAA,MACjB,CAAC;AAAA,IACH;AACA,QAAI,CAAC,cAAc;AACjB,YAAM,cAAc,OAAO,2BAAmE;AAAA,QAC5F,gBAAgB;AAAA,MAClB,CAAC;AAAA,IACH;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa,MAAM;AACjB,WAAO,KAAK,iBAAiB,IAAI;AAAA,EACnC;AAAA,EACA,gBAAgB,MAAM;AACpB,QAAI,KAAK,iBAAiB,IAAI,MAAM,QAAW;AAC7C;AAAA,IACF;AACA,WAAO,KAAK,iBAAiB,IAAI;AAAA,EACnC;AAAA,EACA,gBAAgB;AACd,WAAO,OAAO,OAAO,CAAC,GAAG,KAAK,gBAAgB;AAAA,EAChD;AAAA,EACA,aAAa,WAAW;AACtB,SAAK,cAAc;AAAA,EACrB;AAAA,EACA,YAAY,UAAU;AACpB,SAAK,aAAa;AAAA,EACpB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,wBAAwB;AACtB,UAAM,qBAAqB,KAAK,IAAI,iBAAiB,KAAK,YAAY;AACtE,UAAM,mBAAmB,sBAAsB,mBAAmB,CAAC;AACnE,QAAI,kBAAkB;AACpB,WAAK,aAAa,KAAK,MAAM,iBAAiB,WAAW,GAAI;AAC7D,WAAK,cAAc,KAAK,OAAO,iBAAiB,YAAY,KAAK,IAAI,cAAc,KAAK,GAAI;AAAA,IAC9F;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,OAAO,eAAe,uBAAuB,mBAAmB,cAAcU,kBAAiBC,kBAAiB;AAC9G,UAAM,QAAQ,IAAI,YAAY,EAAE,OAAO;AACvC,QAAI,CAAC,OAAO;AACV;AAAA,IACF;AACA,UAAMF,SAAQ,IAAI,OAAM,uBAAuB,6BAA6B,OAAO,IAAI;AACvF,UAAM,eAAe,KAAK,MAAM,IAAI,YAAY,EAAE,cAAc,IAAI,GAAI;AACxE,IAAAA,OAAM,aAAa,YAAY;AAE/B,QAAI,qBAAqB,kBAAkB,CAAC,GAAG;AAC7C,MAAAA,OAAM,YAAY,KAAK,MAAM,kBAAkB,CAAC,EAAE,WAAW,GAAI,CAAC;AAClE,MAAAA,OAAM,UAAU,kBAAkB,KAAK,MAAM,kBAAkB,CAAC,EAAE,iBAAiB,GAAI,CAAC;AACxF,MAAAA,OAAM,UAAU,4BAA4B,KAAK,MAAM,kBAAkB,CAAC,EAAE,2BAA2B,GAAI,CAAC;AAC5G,MAAAA,OAAM,UAAU,gBAAgB,KAAK,MAAM,kBAAkB,CAAC,EAAE,eAAe,GAAI,CAAC;AAAA,IACtF;AACA,UAAM,cAAc;AACpB,UAAM,yBAAyB;AAC/B,QAAI,cAAc;AAChB,YAAM,aAAa,aAAa,KAAK,iBAAe,YAAY,SAAS,WAAW;AACpF,UAAI,cAAc,WAAW,WAAW;AACtC,QAAAA,OAAM,UAAU,0BAA0B,KAAK,MAAM,WAAW,YAAY,GAAI,CAAC;AAAA,MACnF;AACA,YAAM,uBAAuB,aAAa,KAAK,iBAAe,YAAY,SAAS,sBAAsB;AACzG,UAAI,wBAAwB,qBAAqB,WAAW;AAC1D,QAAAA,OAAM,UAAU,qCAAqC,KAAK,MAAM,qBAAqB,YAAY,GAAI,CAAC;AAAA,MACxG;AACA,UAAIE,kBAAiB;AACnB,QAAAF,OAAM,UAAU,gCAAgC,KAAK,MAAME,mBAAkB,GAAI,CAAC;AAAA,MACpF;AAAA,IACF;AACA,SAAK,kBAAkBF,QAAO,sCAAsC,yCAAyCC,iBAAgB,GAAG;AAChI,SAAK,kBAAkBD,QAAO,qCAAqC,wCAAwCC,iBAAgB,GAAG;AAC9H,SAAK,kBAAkBD,QAAO,uCAAuC,0CAA0CC,iBAAgB,GAAG;AAGlI,aAASD,MAAK;AACd,cAAU;AAAA,EACZ;AAAA,EACA,OAAO,kBAAkBA,QAAO,WAAW,cAAc,QAAQ;AAC/D,QAAI,QAAQ;AACV,MAAAA,OAAM,UAAU,WAAW,KAAK,MAAM,OAAO,QAAQ,GAAI,CAAC;AAC1D,UAAI,OAAO,oBAAoB;AAC7B,QAAAA,OAAM,aAAa,cAAc,OAAO,kBAAkB;AAAA,MAC5D;AAAA,IACF;AAAA,EACF;AAAA,EACA,OAAO,sBAAsB,uBAAuB,aAAa;AAC/D,UAAMA,SAAQ,IAAI,OAAM,uBAAuB,aAAa,OAAO,WAAW;AAC9E,aAASA,MAAK;AAAA,EAChB;AACF;AAkBA,IAAI,kBAAkB,CAAC;AACvB,IAAI,oBAAoB;AACxB,IAAI;AACJ,SAAS,kBAAkB,uBAAuB;AAEhD,MAAI,CAAC,OAAO,GAAG;AACb;AAAA,EACF;AAIA,aAAW,MAAM,eAAe,qBAAqB,GAAG,CAAC;AACzD,aAAW,MAAM,qBAAqB,qBAAqB,GAAG,CAAC;AAC/D,aAAW,MAAM,sBAAsB,qBAAqB,GAAG,CAAC;AAClE;AACA,SAAS,qBAAqB,uBAAuB;AACnD,QAAM,MAAM,IAAI,YAAY;AAC5B,QAAM,YAAY,IAAI,iBAAiB,UAAU;AACjD,aAAW,YAAY,WAAW;AAChC,8BAA0B,uBAAuB,QAAQ;AAAA,EAC3D;AACA,MAAI,cAAc,YAAY,WAAS,0BAA0B,uBAAuB,KAAK,CAAC;AAChG;AACA,SAAS,eAAe,uBAAuB;AAC7C,QAAM,MAAM,IAAI,YAAY;AAE5B,MAAI,gBAAgB,QAAQ;AAC1B,QAAI,SAAS,iBAAiB,YAAY,MAAM,aAAa,qBAAqB,CAAC;AAAA,EACrF,OAAO;AACL,QAAI,SAAS,iBAAiB,UAAU,MAAM,aAAa,qBAAqB,CAAC;AAAA,EACnF;AACA,MAAI,SAAS,iBAAiB,oBAAoB,MAAM;AACtD,QAAI,IAAI,SAAS,oBAAoB,UAAU;AAC7C,mBAAa,qBAAqB;AAAA,IACpC;AAAA,EACF,CAAC;AACD,MAAI,IAAI,mBAAmB;AACzB,QAAI,kBAAkB,SAAO;AAC3B,wBAAkB;AAAA,IACpB,CAAC;AAAA,EACH;AACA,MAAI,MAAM,YAAU;AAClB,QAAI;AACJ,oBAAgB,MAAM;AAAA,MACpB,OAAO,OAAO;AAAA,MACd,qBAAqB,KAAK,OAAO,iBAAiB,QAAQ,OAAO,SAAS,SAAS,GAAG;AAAA,IACxF;AAAA,EACF,CAAC;AACD,MAAI,MAAM,YAAU;AAClB,QAAI;AACJ,oBAAgB,MAAM;AAAA,MACpB,OAAO,OAAO;AAAA,MACd,qBAAqB,KAAK,OAAO,iBAAiB,QAAQ,OAAO,SAAS,SAAS,GAAG;AAAA,IACxF;AAAA,EACF,CAAC;AACD,MAAI,MAAM,YAAU;AAClB,QAAI;AACJ,oBAAgB,MAAM;AAAA,MACpB,OAAO,OAAO;AAAA,MACd,qBAAqB,KAAK,OAAO,iBAAiB,QAAQ,OAAO,SAAS,SAAS,GAAG;AAAA,IACxF;AAAA,EACF,CAAC;AACH;AACA,SAAS,sBAAsB,uBAAuB;AACpD,QAAM,MAAM,IAAI,YAAY;AAE5B,QAAM,WAAW,IAAI,iBAAiB,SAAS;AAC/C,aAAW,WAAW,UAAU;AAC9B,0BAAsB,uBAAuB,OAAO;AAAA,EACtD;AAEA,MAAI,cAAc,WAAW,WAAS,sBAAsB,uBAAuB,KAAK,CAAC;AAC3F;AACA,SAAS,sBAAsB,uBAAuB,SAAS;AAC7D,QAAM,cAAc,QAAQ;AAG5B,MAAI,YAAY,UAAU,GAAG,qBAAqB,MAAM,MAAM,sBAAsB;AAClF;AAAA,EACF;AACA,QAAM,sBAAsB,uBAAuB,WAAW;AAChE;AACA,SAAS,aAAa,uBAAuB;AAC3C,MAAI,CAAC,mBAAmB;AACtB,wBAAoB;AACpB,UAAM,MAAM,IAAI,YAAY;AAC5B,UAAM,oBAAoB,IAAI,iBAAiB,YAAY;AAC3D,UAAM,eAAe,IAAI,iBAAiB,OAAO;AAGjD,eAAW,MAAM;AACf,YAAM,eAAe,uBAAuB,mBAAmB,cAAc,iBAAiB,eAAe;AAAA,IAC/G,GAAG,CAAC;AAAA,EACN;AACF;AAkBA,IAAM,wBAAN,MAA4B;AAAA,EAC1B,YAAY,KAAK,eAAe;AAC9B,SAAK,MAAM;AACX,SAAK,gBAAgB;AACrB,SAAK,cAAc;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,MAAM,UAAU;AACd,QAAI,KAAK,aAAa;AACpB;AAAA,IACF;AACA,SAAK,aAAa,QAAQ,aAAa,SAAS,SAAS,SAAS,2BAA2B,QAAW;AACtG,WAAK,wBAAwB,SAAS;AAAA,IACxC;AACA,SAAK,aAAa,QAAQ,aAAa,SAAS,SAAS,SAAS,4BAA4B,QAAW;AACvG,WAAK,yBAAyB,SAAS;AAAA,IACzC;AACA,QAAI,IAAI,YAAY,EAAE,sBAAsB,GAAG;AAC7C,gCAA0B,EAAE,KAAK,iBAAe;AAC9C,YAAI,aAAa;AACf,gCAAsB;AACtB,mCAAyB,IAAI,EAAE,KAAK,MAAM,kBAAkB,IAAI,GAAG,MAAM,kBAAkB,IAAI,CAAC;AAChG,eAAK,cAAc;AAAA,QACrB;AAAA,MACF,CAAC,EAAE,MAAM,WAAS;AAChB,sBAAc,KAAK,0CAA0C,KAAK,EAAE;AAAA,MACtE,CAAC;AAAA,IACH,OAAO;AACL,oBAAc,KAAK,mHAAwH;AAAA,IAC7I;AAAA,EACF;AAAA,EACA,IAAI,uBAAuB,KAAK;AAC9B,oBAAgB,YAAY,EAAE,yBAAyB;AAAA,EACzD;AAAA,EACA,IAAI,yBAAyB;AAC3B,WAAO,gBAAgB,YAAY,EAAE;AAAA,EACvC;AAAA,EACA,IAAI,sBAAsB,KAAK;AAC7B,oBAAgB,YAAY,EAAE,wBAAwB;AAAA,EACxD;AAAA,EACA,IAAI,wBAAwB;AAC1B,WAAO,gBAAgB,YAAY,EAAE;AAAA,EACvC;AACF;AAQA,IAAM,qBAAqB;AAM3B,SAAS,eAAe,MAAM,OAAO,GAAG;AACtC,QAAM,mBAAmB,GAAG;AAC5B,QAAM,WAAW,aAAa,KAAK,aAAa;AAChD,QAAM,eAAe,SAAS,aAAa;AAC3C,SAAO;AACT;AAgCA,SAAS,MAAMG,cAAaC,OAAM;AAChC,EAAAD,eAAc,mBAAmBA,YAAW;AAC5C,SAAO,IAAI,MAAMA,cAAaC,KAAI;AACpC;AACA,IAAM,UAAU,CAAC,WAAW;AAAA,EAC1B,SAAS;AACX,MAAM;AAEJ,QAAM,MAAM,UAAU,YAAY,KAAK,EAAE,aAAa;AACtD,QAAM,gBAAgB,UAAU,YAAY,wBAAwB,EAAE,aAAa;AACnF,MAAI,IAAI,SAAS,oBAAoB;AACnC,UAAM,cAAc;AAAA,MAAO;AAAA;AAAA,IAA+C;AAAA,EAC5E;AACA,MAAI,OAAO,WAAW,aAAa;AACjC,UAAM,cAAc;AAAA,MAAO;AAAA;AAAA,IAAqC;AAAA,EAClE;AACA,WAAS,MAAM;AACf,QAAM,eAAe,IAAI,sBAAsB,KAAK,aAAa;AACjE,eAAa,MAAM,QAAQ;AAC3B,SAAO;AACT;AACA,SAAS,sBAAsB;AAC7B,qBAAmB,IAAI;AAAA,IAAU;AAAA,IAAe;AAAA,IAAS;AAAA;AAAA,EAAmC,CAAC;AAC7F,kBAAgB,MAAM,OAAO;AAE7B,kBAAgB,MAAM,SAAS,SAAS;AAC1C;AACA,oBAAoB;;;ACx+Cb,IAAM,yBAAN,MAAM,gCAA+B,UAAU;AAAA,EACpD,cAAc;AACZ,UAAM,GAAG,SAAS;AAClB,SAAK,SAAS,CAAC;AAAA,EACjB;AAAA,EACM,WAAW,SAAS;AAAA;AACxB,YAAM,OAAO,eAAe;AAC5B,YAAMC,SAAQ,MAAY,MAAM,QAAQ,SAAS;AACjD,MAAAA,OAAM,MAAM;AACZ,WAAK,OAAO,QAAQ,SAAS,IAAIA;AAAA,IACnC;AAAA;AAAA,EACM,UAAU,SAAS;AAAA;AACvB,YAAMA,SAAQ,KAAK,OAAO,QAAQ,SAAS;AAC3C,UAAI,CAACA,QAAO;AACV,cAAM,IAAI,MAAM,wBAAuB,qBAAqB;AAAA,MAC9D;AACA,MAAAA,OAAM,KAAK;AACX,aAAO,KAAK,OAAO,QAAQ,SAAS;AAAA,IACtC;AAAA;AAAA,EACM,gBAAgB,SAAS;AAAA;AAC7B,YAAMA,SAAQ,KAAK,OAAO,QAAQ,SAAS;AAC3C,UAAI,CAACA,QAAO;AACV,cAAM,IAAI,MAAM,wBAAuB,qBAAqB;AAAA,MAC9D;AACA,MAAAA,OAAM,gBAAgB,QAAQ,YAAY,QAAQ,WAAW;AAAA,IAC/D;AAAA;AAAA,EACM,WAAW,SAAS;AAAA;AACxB,YAAM,OAAO,eAAe;AAC5B,WAAK,yBAAyB,QAAQ;AACtC,WAAK,wBAAwB,QAAQ;AAAA,IACvC;AAAA;AAAA,EACM,YAAY;AAAA;AAChB,YAAM,OAAO,eAAe;AAC5B,YAAM,SAAS;AAAA,QACb,SAAS,KAAK,0BAA0B,KAAK;AAAA,MAC/C;AACA,aAAO;AAAA,IACT;AAAA;AAAA,EACM,aAAa,IAIhB;AAAA,+CAJgB;AAAA,MACjB;AAAA,MACA;AAAA,MACA;AAAA,IACF,GAAG;AACD,YAAMA,SAAQ,KAAK,OAAO,SAAS;AACnC,UAAI,CAACA,QAAO;AACV,cAAM,IAAI,MAAM,wBAAuB,qBAAqB;AAAA,MAC9D;AACA,MAAAA,OAAM,aAAa,WAAW,KAAK;AACnC;AAAA,IACF;AAAA;AAAA,EACM,aAAa,IAGhB;AAAA,+CAHgB;AAAA,MACjB;AAAA,MACA;AAAA,IACF,GAAG;AACD,UAAI;AACJ,YAAMA,SAAQ,KAAK,OAAO,SAAS;AACnC,UAAI,CAACA,QAAO;AACV,cAAM,IAAI,MAAM,wBAAuB,qBAAqB;AAAA,MAC9D;AACA,aAAO;AAAA,QACL,QAAQ,KAAKA,OAAM,aAAa,SAAS,OAAO,QAAQ,OAAO,SAAS,KAAK;AAAA,MAC/E;AAAA,IACF;AAAA;AAAA,EACM,cAAc,IAEjB;AAAA,+CAFiB;AAAA,MAClB;AAAA,IACF,GAAG;AACD,YAAMA,SAAQ,KAAK,OAAO,SAAS;AACnC,UAAI,CAACA,QAAO;AACV,cAAM,IAAI,MAAM,wBAAuB,qBAAqB;AAAA,MAC9D;AACA,aAAO;AAAA,QACL,YAAYA,OAAM,cAAc;AAAA,MAClC;AAAA,IACF;AAAA;AAAA,EACM,gBAAgB,IAGnB;AAAA,+CAHmB;AAAA,MACpB;AAAA,MACA;AAAA,IACF,GAAG;AACD,YAAMA,SAAQ,KAAK,OAAO,SAAS;AACnC,UAAI,CAACA,QAAO;AACV,cAAM,IAAI,MAAM,wBAAuB,qBAAqB;AAAA,MAC9D;AACA,MAAAA,OAAM,gBAAgB,SAAS;AAAA,IACjC;AAAA;AAAA,EACM,UAAU,IAIb;AAAA,+CAJa;AAAA,MACd;AAAA,MACA;AAAA,MACA;AAAA,IACF,GAAG;AACD,YAAMA,SAAQ,KAAK,OAAO,SAAS;AACnC,UAAI,CAACA,QAAO;AACV,cAAM,IAAI,MAAM,wBAAuB,qBAAqB;AAAA,MAC9D;AACA,MAAAA,OAAM,UAAU,YAAY,GAAG;AAAA,IACjC;AAAA;AAAA,EACM,UAAU,IAGb;AAAA,+CAHa;AAAA,MACd;AAAA,MACA;AAAA,IACF,GAAG;AACD,YAAMA,SAAQ,KAAK,OAAO,SAAS;AACnC,UAAI,CAACA,QAAO;AACV,cAAM,IAAI,MAAM,wBAAuB,qBAAqB;AAAA,MAC9D;AACA,aAAO;AAAA,QACL,OAAOA,OAAM,UAAU,UAAU;AAAA,MACnC;AAAA,IACF;AAAA;AAAA,EACM,OAAO,IAKV;AAAA,+CALU;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,GAAG;AACD,YAAM,OAAO,eAAe;AAC5B,YAAMA,SAAQ,MAAY,MAAM,SAAS;AACzC,MAAAA,OAAM,OAAO,WAAW,UAAU,OAAO;AAAA,IAC3C;AAAA;AACF;AACA,uBAAuB,wBAAwB;",
  "names": ["t", "e", "n", "r", "a", "i", "o", "c", "t", "e", "n", "r", "i", "a", "o", "t", "e", "n", "r", "i", "o", "c", "u", "s", "f", "d", "l", "m", "a", "window", "name", "i", "VisibilityState", "navigator", "document", "iid", "config", "settingsServiceInstance", "serializer", "trace", "webVitalMetrics", "firstInputDelay", "performance", "name", "trace"]
}
