{
  "version": 3,
  "sources": ["../../../../../../node_modules/pose-viewer/dist/esm/pose-viewer-8421959f.js"],
  "sourcesContent": ["import { h, r as registerInstance, c as createEvent, g as getElement, H as Host } from './index-82963b9b.js';\nconst global$1 = typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {};\nvar lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar inited = false;\nfunction init() {\n  inited = true;\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n  for (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i];\n    revLookup[code.charCodeAt(i)] = i;\n  }\n  revLookup['-'.charCodeAt(0)] = 62;\n  revLookup['_'.charCodeAt(0)] = 63;\n}\nfunction toByteArray(b64) {\n  if (!inited) {\n    init();\n  }\n  var i, j, l, tmp, placeHolders, arr;\n  var len = b64.length;\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4');\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0;\n\n  // base64 is 4/3 + up to two characters of the original data\n  arr = new Arr(len * 3 / 4 - placeHolders);\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len;\n  var L = 0;\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n    arr[L++] = tmp >> 16 & 0xFF;\n    arr[L++] = tmp >> 8 & 0xFF;\n    arr[L++] = tmp & 0xFF;\n  }\n  if (placeHolders === 2) {\n    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n    arr[L++] = tmp & 0xFF;\n  } else if (placeHolders === 1) {\n    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n    arr[L++] = tmp >> 8 & 0xFF;\n    arr[L++] = tmp & 0xFF;\n  }\n  return arr;\n}\nfunction tripletToBase64(num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n}\nfunction encodeChunk(uint8, start, end) {\n  var tmp;\n  var output = [];\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + uint8[i + 2];\n    output.push(tripletToBase64(tmp));\n  }\n  return output.join('');\n}\nfunction fromByteArray(uint8) {\n  if (!inited) {\n    init();\n  }\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n  var output = '';\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    output += lookup[tmp >> 2];\n    output += lookup[tmp << 4 & 0x3F];\n    output += '==';\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n    output += lookup[tmp >> 10];\n    output += lookup[tmp >> 4 & 0x3F];\n    output += lookup[tmp << 2 & 0x3F];\n    output += '=';\n  }\n  parts.push(output);\n  return parts.join('');\n}\nfunction read(buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? nBytes - 1 : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n  i += d;\n  e = s & (1 << -nBits) - 1;\n  s >>= -nBits;\n  nBits += eLen;\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : (s ? -1 : 1) * Infinity;\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n}\nfunction write(buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n  var i = isLE ? 0 : nBytes - 1;\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  value = Math.abs(value);\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n  e = e << mLen | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n  buffer[offset + i - d] |= s * 128;\n}\nvar toString = {}.toString;\nvar isArray = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\nvar INSPECT_MAX_BYTES = 50;\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global$1.TYPED_ARRAY_SUPPORT !== undefined ? global$1.TYPED_ARRAY_SUPPORT : true;\nfunction kMaxLength() {\n  return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff;\n}\nfunction createBuffer(that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length');\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length);\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length);\n    }\n    that.length = length;\n  }\n  return that;\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer(arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length);\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error('If encoding is specified then the first argument must be a string');\n    }\n    return allocUnsafe(this, arg);\n  }\n  return from(this, arg, encodingOrOffset, length);\n}\nBuffer.poolSize = 8192; // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype;\n  return arr;\n};\nfunction from(that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number');\n  }\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length);\n  }\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset);\n  }\n  return fromObject(that, value);\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length);\n};\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype;\n  Buffer.__proto__ = Uint8Array;\n}\nfunction assertSize(size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number');\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative');\n  }\n}\nfunction alloc(that, size, fill, encoding) {\n  assertSize(size);\n  if (size <= 0) {\n    return createBuffer(that, size);\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string' ? createBuffer(that, size).fill(fill, encoding) : createBuffer(that, size).fill(fill);\n  }\n  return createBuffer(that, size);\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding);\n};\nfunction allocUnsafe(that, size) {\n  assertSize(size);\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0;\n    }\n  }\n  return that;\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size);\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size);\n};\nfunction fromString(that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding');\n  }\n  var length = byteLength(string, encoding) | 0;\n  that = createBuffer(that, length);\n  var actual = that.write(string, encoding);\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual);\n  }\n  return that;\n}\nfunction fromArrayLike(that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  that = createBuffer(that, length);\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n  return that;\n}\nfunction fromArrayBuffer(that, array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds');\n  }\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds');\n  }\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array);\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset);\n  } else {\n    array = new Uint8Array(array, byteOffset, length);\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array;\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array);\n  }\n  return that;\n}\nfunction fromObject(that, obj) {\n  if (internalIsBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    that = createBuffer(that, len);\n    if (that.length === 0) {\n      return that;\n    }\n    obj.copy(that, 0, 0, len);\n    return that;\n  }\n  if (obj) {\n    if (typeof ArrayBuffer !== 'undefined' && obj.buffer instanceof ArrayBuffer || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0);\n      }\n      return fromArrayLike(that, obj);\n    }\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data);\n    }\n  }\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');\n}\nfunction checked(length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + kMaxLength().toString(16) + ' bytes');\n  }\n  return length | 0;\n}\nBuffer.isBuffer = isBuffer;\nfunction internalIsBuffer(b) {\n  return !!(b != null && b._isBuffer);\n}\nBuffer.compare = function compare(a, b) {\n  if (!internalIsBuffer(a) || !internalIsBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers');\n  }\n  if (a === b) return 0;\n  var x = a.length;\n  var y = b.length;\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n};\nBuffer.isEncoding = function isEncoding(encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true;\n    default:\n      return false;\n  }\n};\nBuffer.concat = function concat(list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers');\n  }\n  if (list.length === 0) {\n    return Buffer.alloc(0);\n  }\n  var i;\n  if (length === undefined) {\n    length = 0;\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n  var buffer = Buffer.allocUnsafe(length);\n  var pos = 0;\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n    if (!internalIsBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers');\n    }\n    buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n  return buffer;\n};\nfunction byteLength(string, encoding) {\n  if (internalIsBuffer(string)) {\n    return string.length;\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength;\n  }\n  if (typeof string !== 'string') {\n    string = '' + string;\n  }\n  var len = string.length;\n  if (len === 0) return 0;\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len;\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length;\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2;\n      case 'hex':\n        return len >>> 1;\n      case 'base64':\n        return base64ToBytes(string).length;\n      default:\n        if (loweredCase) return utf8ToBytes(string).length; // assume utf8\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\nBuffer.byteLength = byteLength;\nfunction slowToString(encoding, start, end) {\n  var loweredCase = false;\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0;\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return '';\n  }\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n  if (end <= 0) {\n    return '';\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0;\n  start >>>= 0;\n  if (end <= start) {\n    return '';\n  }\n  if (!encoding) encoding = 'utf8';\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end);\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end);\n      case 'ascii':\n        return asciiSlice(this, start, end);\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end);\n      case 'base64':\n        return base64Slice(this, start, end);\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end);\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true;\nfunction swap(b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\nBuffer.prototype.swap16 = function swap16() {\n  var len = this.length;\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits');\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n  return this;\n};\nBuffer.prototype.swap32 = function swap32() {\n  var len = this.length;\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits');\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n  return this;\n};\nBuffer.prototype.swap64 = function swap64() {\n  var len = this.length;\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits');\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n  return this;\n};\nBuffer.prototype.toString = function toString() {\n  var length = this.length | 0;\n  if (length === 0) return '';\n  if (arguments.length === 0) return utf8Slice(this, 0, length);\n  return slowToString.apply(this, arguments);\n};\nBuffer.prototype.equals = function equals(b) {\n  if (!internalIsBuffer(b)) throw new TypeError('Argument must be a Buffer');\n  if (this === b) return true;\n  return Buffer.compare(this, b) === 0;\n};\nBuffer.prototype.inspect = function inspect() {\n  var str = '';\n  var max = INSPECT_MAX_BYTES;\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n    if (this.length > max) str += ' ... ';\n  }\n  return '<Buffer ' + str + '>';\n};\nBuffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n  if (!internalIsBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer');\n  }\n  if (start === undefined) {\n    start = 0;\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index');\n  }\n  if (thisStart >= thisEnd && start >= end) {\n    return 0;\n  }\n  if (thisStart >= thisEnd) {\n    return -1;\n  }\n  if (start >= end) {\n    return 1;\n  }\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n  if (this === target) return 0;\n  var x = thisEnd - thisStart;\n  var y = end - start;\n  var len = Math.min(x, y);\n  var thisCopy = this.slice(thisStart, thisEnd);\n  var targetCopy = target.slice(start, end);\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break;\n    }\n  }\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n};\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1;\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n  byteOffset = +byteOffset; // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : buffer.length - 1;\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1;else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;else return -1;\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (internalIsBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1;\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n  }\n  throw new TypeError('val must be string, number or Buffer');\n}\nfunction arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1;\n  var arrLength = arr.length;\n  var valLength = val.length;\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n    if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1;\n      }\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n  function read(buf, i) {\n    if (indexSize === 1) {\n      return buf[i];\n    } else {\n      return buf.readUInt16BE(i * indexSize);\n    }\n  }\n  var i;\n  if (dir) {\n    var foundIndex = -1;\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true;\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break;\n        }\n      }\n      if (found) return i;\n    }\n  }\n  return -1;\n}\nBuffer.prototype.includes = function includes(val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1;\n};\nBuffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n};\nBuffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n};\nfunction hexWrite(buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n    if (length > remaining) {\n      length = remaining;\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length;\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string');\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (isNaN(parsed)) return i;\n    buf[offset + i] = parsed;\n  }\n  return i;\n}\nfunction utf8Write(buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\nfunction asciiWrite(buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length);\n}\nfunction latin1Write(buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length);\n}\nfunction base64Write(buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length);\n}\nfunction ucs2Write(buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n}\nBuffer.prototype.write = function write(string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0;\n    // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0;\n    // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0;\n    if (isFinite(length)) {\n      length = length | 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    }\n    // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n  }\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds');\n  }\n  if (!encoding) encoding = 'utf8';\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length);\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length);\n      case 'ascii':\n        return asciiWrite(this, string, offset, length);\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length);\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length);\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length);\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\nBuffer.prototype.toJSON = function toJSON() {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  };\n};\nfunction base64Slice(buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return fromByteArray(buf);\n  } else {\n    return fromByteArray(buf.slice(start, end));\n  }\n}\nfunction utf8Slice(buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n  var i = start;\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n          break;\n        case 2:\n          secondByte = buf[i + 1];\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break;\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break;\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n      }\n    }\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n  return decodeCodePointsArray(res);\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\nfunction decodeCodePointsArray(codePoints) {\n  var len = codePoints.length;\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = '';\n  var i = 0;\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n  return res;\n}\nfunction asciiSlice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n  return ret;\n}\nfunction latin1Slice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n  return ret;\n}\nfunction hexSlice(buf, start, end) {\n  var len = buf.length;\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n  var out = '';\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i]);\n  }\n  return out;\n}\nfunction utf16leSlice(buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n  return res;\n}\nBuffer.prototype.slice = function slice(start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n  if (end < start) end = start;\n  var newBuf;\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end);\n    newBuf.__proto__ = Buffer.prototype;\n  } else {\n    var sliceLen = end - start;\n    newBuf = new Buffer(sliceLen, undefined);\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start];\n    }\n  }\n  return newBuf;\n};\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset(offset, ext, length) {\n  if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n}\nBuffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n  return val;\n};\nBuffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n  var val = this[offset + --byteLength];\n  var mul = 1;\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n  return val;\n};\nBuffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset];\n};\nBuffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | this[offset + 1] << 8;\n};\nBuffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] << 8 | this[offset + 1];\n};\nBuffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n};\nBuffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n};\nBuffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\nBuffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\nBuffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return this[offset];\n  return (0xff - this[offset] + 1) * -1;\n};\nBuffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | this[offset + 1] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\nBuffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | this[offset] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\nBuffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n};\nBuffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n};\nBuffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return read(this, offset, true, 23, 4);\n};\nBuffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return read(this, offset, false, 23, 4);\n};\nBuffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return read(this, offset, true, 52, 8);\n};\nBuffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return read(this, offset, false, 52, 8);\n};\nfunction checkInt(buf, value, offset, ext, max, min) {\n  if (!internalIsBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n}\nBuffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n  return offset + byteLength;\n};\nBuffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n  return offset + byteLength;\n};\nBuffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\nfunction objectWriteUInt16(buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1;\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & 0xff << 8 * (littleEndian ? i : 1 - i)) >>> (littleEndian ? i : 1 - i) * 8;\n  }\n}\nBuffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n  return offset + 2;\n};\nBuffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n  return offset + 2;\n};\nfunction objectWriteUInt32(buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1;\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = value >>> (littleEndian ? i : 3 - i) * 8 & 0xff;\n  }\n}\nBuffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = value >>> 24;\n    this[offset + 2] = value >>> 16;\n    this[offset + 1] = value >>> 8;\n    this[offset] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n  return offset + 4;\n};\nBuffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n  return offset + 4;\n};\nBuffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n  return offset + byteLength;\n};\nBuffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n  return offset + byteLength;\n};\nBuffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\nBuffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n  return offset + 2;\n};\nBuffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n  return offset + 2;\n};\nBuffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    this[offset + 2] = value >>> 16;\n    this[offset + 3] = value >>> 24;\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n  return offset + 4;\n};\nBuffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n  return offset + 4;\n};\nfunction checkIEEE754(buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n  if (offset < 0) throw new RangeError('Index out of range');\n}\nfunction writeFloat(buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4);\n  }\n  write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4;\n}\nBuffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert);\n};\nBuffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert);\n};\nfunction writeDouble(buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8);\n  }\n  write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8;\n}\nBuffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert);\n};\nBuffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert);\n};\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start;\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0;\n  if (target.length === 0 || this.length === 0) return 0;\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds');\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds');\n  if (end < 0) throw new RangeError('sourceEnd out of bounds');\n\n  // Are we oob?\n  if (end > this.length) end = this.length;\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n  var len = end - start;\n  var i;\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);\n  }\n  return len;\n};\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill(val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n      if (code < 256) {\n        val = code;\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string');\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding);\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index');\n  }\n  if (end <= start) {\n    return this;\n  }\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n  if (!val) val = 0;\n  var i;\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = internalIsBuffer(val) ? val : utf8ToBytes(new Buffer(val, encoding).toString());\n    var len = bytes.length;\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n  return this;\n};\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\nfunction base64clean(str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '');\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return '';\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n  return str;\n}\nfunction stringtrim(str) {\n  if (str.trim) return str.trim();\n  return str.replace(/^\\s+|\\s+$/g, '');\n}\nfunction toHex(n) {\n  if (n < 16) return '0' + n.toString(16);\n  return n.toString(16);\n}\nfunction utf8ToBytes(string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i);\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        }\n\n        // valid lead\n        leadSurrogate = codePoint;\n        continue;\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue;\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n    leadSurrogate = null;\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break;\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break;\n      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break;\n      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break;\n      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n  return bytes;\n}\nfunction asciiToBytes(str) {\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n  return byteArray;\n}\nfunction utf16leToBytes(str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break;\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n  return byteArray;\n}\nfunction base64ToBytes(str) {\n  return toByteArray(base64clean(str));\n}\nfunction blitBuffer(src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if (i + offset >= dst.length || i >= src.length) break;\n    dst[i + offset] = src[i];\n  }\n  return i;\n}\nfunction isnan(val) {\n  return val !== val; // eslint-disable-line no-self-compare\n}\n\n// the following is from is-buffer, also by Feross Aboukhadijeh and with same lisence\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nfunction isBuffer(obj) {\n  return obj != null && (!!obj._isBuffer || isFastBuffer(obj) || isSlowBuffer(obj));\n}\nfunction isFastBuffer(obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj);\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer(obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isFastBuffer(obj.slice(0, 0));\n}\nclass Context {\n  constructor(importPath, useContextVariables) {\n    this.code = \"\";\n    this.scopes = [[\"vars\"]];\n    this.bitFields = [];\n    this.tmpVariableCount = 0;\n    this.references = new Map();\n    this.imports = [];\n    this.reverseImports = new Map();\n    this.useContextVariables = false;\n    this.importPath = importPath;\n    this.useContextVariables = useContextVariables;\n  }\n  generateVariable(name) {\n    const scopes = [...this.scopes[this.scopes.length - 1]];\n    if (name) {\n      scopes.push(name);\n    }\n    return scopes.join(\".\");\n  }\n  generateOption(val) {\n    switch (typeof val) {\n      case \"number\":\n        return val.toString();\n      case \"string\":\n        return this.generateVariable(val);\n      case \"function\":\n        return `${this.addImport(val)}.call(${this.generateVariable()}, vars)`;\n    }\n  }\n  generateError(err) {\n    this.pushCode(`throw new Error(${err});`);\n  }\n  generateTmpVariable() {\n    return \"$tmp\" + this.tmpVariableCount++;\n  }\n  pushCode(code) {\n    this.code += code + \"\\n\";\n  }\n  pushPath(name) {\n    if (name) {\n      this.scopes[this.scopes.length - 1].push(name);\n    }\n  }\n  popPath(name) {\n    if (name) {\n      this.scopes[this.scopes.length - 1].pop();\n    }\n  }\n  pushScope(name) {\n    this.scopes.push([name]);\n  }\n  popScope() {\n    this.scopes.pop();\n  }\n  addImport(im) {\n    if (!this.importPath) return `(${im})`;\n    let id = this.reverseImports.get(im);\n    if (!id) {\n      id = this.imports.push(im) - 1;\n      this.reverseImports.set(im, id);\n    }\n    return `${this.importPath}[${id}]`;\n  }\n  addReference(alias) {\n    if (!this.references.has(alias)) {\n      this.references.set(alias, {\n        resolved: false,\n        requested: false\n      });\n    }\n  }\n  markResolved(alias) {\n    const reference = this.references.get(alias);\n    if (reference) {\n      reference.resolved = true;\n    }\n  }\n  markRequested(aliasList) {\n    aliasList.forEach(alias => {\n      const reference = this.references.get(alias);\n      if (reference) {\n        reference.requested = true;\n      }\n    });\n  }\n  getUnresolvedReferences() {\n    return Array.from(this.references).filter(([_, reference]) => !reference.resolved && !reference.requested).map(([alias, _]) => alias);\n  }\n}\nconst aliasRegistry = new Map();\nconst FUNCTION_PREFIX = \"___parser_\";\nconst PRIMITIVE_SIZES = {\n  uint8: 1,\n  uint16le: 2,\n  uint16be: 2,\n  uint32le: 4,\n  uint32be: 4,\n  int8: 1,\n  int16le: 2,\n  int16be: 2,\n  int32le: 4,\n  int32be: 4,\n  int64be: 8,\n  int64le: 8,\n  uint64be: 8,\n  uint64le: 8,\n  floatle: 4,\n  floatbe: 4,\n  doublele: 8,\n  doublebe: 8\n};\nconst PRIMITIVE_NAMES = {\n  uint8: \"Uint8\",\n  uint16le: \"Uint16\",\n  uint16be: \"Uint16\",\n  uint32le: \"Uint32\",\n  uint32be: \"Uint32\",\n  int8: \"Int8\",\n  int16le: \"Int16\",\n  int16be: \"Int16\",\n  int32le: \"Int32\",\n  int32be: \"Int32\",\n  int64be: \"BigInt64\",\n  int64le: \"BigInt64\",\n  uint64be: \"BigUint64\",\n  uint64le: \"BigUint64\",\n  floatle: \"Float32\",\n  floatbe: \"Float32\",\n  doublele: \"Float64\",\n  doublebe: \"Float64\"\n};\nconst PRIMITIVE_LITTLE_ENDIANS = {\n  uint8: false,\n  uint16le: true,\n  uint16be: false,\n  uint32le: true,\n  uint32be: false,\n  int8: false,\n  int16le: true,\n  int16be: false,\n  int32le: true,\n  int32be: false,\n  int64be: false,\n  int64le: true,\n  uint64be: false,\n  uint64le: true,\n  floatle: true,\n  floatbe: false,\n  doublele: true,\n  doublebe: false\n};\nclass Parser {\n  constructor() {\n    this.varName = \"\";\n    this.type = \"\";\n    this.options = {};\n    this.endian = \"be\";\n    this.useContextVariables = false;\n  }\n  static start() {\n    return new Parser();\n  }\n  primitiveGenerateN(type, ctx) {\n    const typeName = PRIMITIVE_NAMES[type];\n    const littleEndian = PRIMITIVE_LITTLE_ENDIANS[type];\n    ctx.pushCode(`${ctx.generateVariable(this.varName)} = dataView.get${typeName}(offset, ${littleEndian});`);\n    ctx.pushCode(`offset += ${PRIMITIVE_SIZES[type]};`);\n  }\n  primitiveN(type, varName, options) {\n    return this.setNextParser(type, varName, options);\n  }\n  useThisEndian(type) {\n    return type + this.endian.toLowerCase();\n  }\n  uint8(varName, options = {}) {\n    return this.primitiveN(\"uint8\", varName, options);\n  }\n  uint16(varName, options = {}) {\n    return this.primitiveN(this.useThisEndian(\"uint16\"), varName, options);\n  }\n  uint16le(varName, options = {}) {\n    return this.primitiveN(\"uint16le\", varName, options);\n  }\n  uint16be(varName, options = {}) {\n    return this.primitiveN(\"uint16be\", varName, options);\n  }\n  uint32(varName, options = {}) {\n    return this.primitiveN(this.useThisEndian(\"uint32\"), varName, options);\n  }\n  uint32le(varName, options = {}) {\n    return this.primitiveN(\"uint32le\", varName, options);\n  }\n  uint32be(varName, options = {}) {\n    return this.primitiveN(\"uint32be\", varName, options);\n  }\n  int8(varName, options = {}) {\n    return this.primitiveN(\"int8\", varName, options);\n  }\n  int16(varName, options = {}) {\n    return this.primitiveN(this.useThisEndian(\"int16\"), varName, options);\n  }\n  int16le(varName, options = {}) {\n    return this.primitiveN(\"int16le\", varName, options);\n  }\n  int16be(varName, options = {}) {\n    return this.primitiveN(\"int16be\", varName, options);\n  }\n  int32(varName, options = {}) {\n    return this.primitiveN(this.useThisEndian(\"int32\"), varName, options);\n  }\n  int32le(varName, options = {}) {\n    return this.primitiveN(\"int32le\", varName, options);\n  }\n  int32be(varName, options = {}) {\n    return this.primitiveN(\"int32be\", varName, options);\n  }\n  bigIntVersionCheck() {\n    if (!DataView.prototype.getBigInt64) throw new Error(\"BigInt64 is unsupported on this runtime\");\n  }\n  int64(varName, options = {}) {\n    this.bigIntVersionCheck();\n    return this.primitiveN(this.useThisEndian(\"int64\"), varName, options);\n  }\n  int64be(varName, options = {}) {\n    this.bigIntVersionCheck();\n    return this.primitiveN(\"int64be\", varName, options);\n  }\n  int64le(varName, options = {}) {\n    this.bigIntVersionCheck();\n    return this.primitiveN(\"int64le\", varName, options);\n  }\n  uint64(varName, options = {}) {\n    this.bigIntVersionCheck();\n    return this.primitiveN(this.useThisEndian(\"uint64\"), varName, options);\n  }\n  uint64be(varName, options = {}) {\n    this.bigIntVersionCheck();\n    return this.primitiveN(\"uint64be\", varName, options);\n  }\n  uint64le(varName, options = {}) {\n    this.bigIntVersionCheck();\n    return this.primitiveN(\"uint64le\", varName, options);\n  }\n  floatle(varName, options = {}) {\n    return this.primitiveN(\"floatle\", varName, options);\n  }\n  floatbe(varName, options = {}) {\n    return this.primitiveN(\"floatbe\", varName, options);\n  }\n  doublele(varName, options = {}) {\n    return this.primitiveN(\"doublele\", varName, options);\n  }\n  doublebe(varName, options = {}) {\n    return this.primitiveN(\"doublebe\", varName, options);\n  }\n  bitN(size, varName, options) {\n    options.length = size;\n    return this.setNextParser(\"bit\", varName, options);\n  }\n  bit1(varName, options = {}) {\n    return this.bitN(1, varName, options);\n  }\n  bit2(varName, options = {}) {\n    return this.bitN(2, varName, options);\n  }\n  bit3(varName, options = {}) {\n    return this.bitN(3, varName, options);\n  }\n  bit4(varName, options = {}) {\n    return this.bitN(4, varName, options);\n  }\n  bit5(varName, options = {}) {\n    return this.bitN(5, varName, options);\n  }\n  bit6(varName, options = {}) {\n    return this.bitN(6, varName, options);\n  }\n  bit7(varName, options = {}) {\n    return this.bitN(7, varName, options);\n  }\n  bit8(varName, options = {}) {\n    return this.bitN(8, varName, options);\n  }\n  bit9(varName, options = {}) {\n    return this.bitN(9, varName, options);\n  }\n  bit10(varName, options = {}) {\n    return this.bitN(10, varName, options);\n  }\n  bit11(varName, options = {}) {\n    return this.bitN(11, varName, options);\n  }\n  bit12(varName, options = {}) {\n    return this.bitN(12, varName, options);\n  }\n  bit13(varName, options = {}) {\n    return this.bitN(13, varName, options);\n  }\n  bit14(varName, options = {}) {\n    return this.bitN(14, varName, options);\n  }\n  bit15(varName, options = {}) {\n    return this.bitN(15, varName, options);\n  }\n  bit16(varName, options = {}) {\n    return this.bitN(16, varName, options);\n  }\n  bit17(varName, options = {}) {\n    return this.bitN(17, varName, options);\n  }\n  bit18(varName, options = {}) {\n    return this.bitN(18, varName, options);\n  }\n  bit19(varName, options = {}) {\n    return this.bitN(19, varName, options);\n  }\n  bit20(varName, options = {}) {\n    return this.bitN(20, varName, options);\n  }\n  bit21(varName, options = {}) {\n    return this.bitN(21, varName, options);\n  }\n  bit22(varName, options = {}) {\n    return this.bitN(22, varName, options);\n  }\n  bit23(varName, options = {}) {\n    return this.bitN(23, varName, options);\n  }\n  bit24(varName, options = {}) {\n    return this.bitN(24, varName, options);\n  }\n  bit25(varName, options = {}) {\n    return this.bitN(25, varName, options);\n  }\n  bit26(varName, options = {}) {\n    return this.bitN(26, varName, options);\n  }\n  bit27(varName, options = {}) {\n    return this.bitN(27, varName, options);\n  }\n  bit28(varName, options = {}) {\n    return this.bitN(28, varName, options);\n  }\n  bit29(varName, options = {}) {\n    return this.bitN(29, varName, options);\n  }\n  bit30(varName, options = {}) {\n    return this.bitN(30, varName, options);\n  }\n  bit31(varName, options = {}) {\n    return this.bitN(31, varName, options);\n  }\n  bit32(varName, options = {}) {\n    return this.bitN(32, varName, options);\n  }\n  namely(alias) {\n    aliasRegistry.set(alias, this);\n    this.alias = alias;\n    return this;\n  }\n  skip(length, options = {}) {\n    return this.seek(length, options);\n  }\n  seek(relOffset, options = {}) {\n    if (options.assert) {\n      throw new Error(\"assert option on seek is not allowed.\");\n    }\n    return this.setNextParser(\"seek\", \"\", {\n      length: relOffset\n    });\n  }\n  string(varName, options) {\n    if (!options.zeroTerminated && !options.length && !options.greedy) {\n      throw new Error(\"One of length, zeroTerminated, or greedy must be defined for string.\");\n    }\n    if ((options.zeroTerminated || options.length) && options.greedy) {\n      throw new Error(\"greedy is mutually exclusive with length and zeroTerminated for string.\");\n    }\n    if (options.stripNull && !(options.length || options.greedy)) {\n      throw new Error(\"length or greedy must be defined if stripNull is enabled.\");\n    }\n    options.encoding = options.encoding || \"utf8\";\n    return this.setNextParser(\"string\", varName, options);\n  }\n  buffer(varName, options) {\n    if (!options.length && !options.readUntil) {\n      throw new Error(\"length or readUntil must be defined for buffer.\");\n    }\n    return this.setNextParser(\"buffer\", varName, options);\n  }\n  wrapped(varName, options) {\n    if (typeof options !== \"object\" && typeof varName === \"object\") {\n      options = varName;\n      varName = \"\";\n    }\n    if (!options || !options.wrapper || !options.type) {\n      throw new Error(\"Both wrapper and type must be defined for wrapped.\");\n    }\n    if (!options.length && !options.readUntil) {\n      throw new Error(\"length or readUntil must be defined for wrapped.\");\n    }\n    return this.setNextParser(\"wrapper\", varName, options);\n  }\n  array(varName, options) {\n    if (!options.readUntil && !options.length && !options.lengthInBytes) {\n      throw new Error(\"One of readUntil, length and lengthInBytes must be defined for array.\");\n    }\n    if (!options.type) {\n      throw new Error(\"type is required for array.\");\n    }\n    if (typeof options.type === \"string\" && !aliasRegistry.has(options.type) && !(options.type in PRIMITIVE_SIZES)) {\n      throw new Error(`Array element type \"${options.type}\" is unkown.`);\n    }\n    return this.setNextParser(\"array\", varName, options);\n  }\n  choice(varName, options) {\n    if (typeof options !== \"object\" && typeof varName === \"object\") {\n      options = varName;\n      varName = \"\";\n    }\n    if (!options) {\n      throw new Error(\"tag and choices are are required for choice.\");\n    }\n    if (!options.tag) {\n      throw new Error(\"tag is requird for choice.\");\n    }\n    if (!options.choices) {\n      throw new Error(\"choices is required for choice.\");\n    }\n    for (const keyString in options.choices) {\n      const key = parseInt(keyString, 10);\n      const value = options.choices[key];\n      if (isNaN(key)) {\n        throw new Error(`Choice key \"${keyString}\" is not a number.`);\n      }\n      if (typeof value === \"string\" && !aliasRegistry.has(value) && !(value in PRIMITIVE_SIZES)) {\n        throw new Error(`Choice type \"${value}\" is unkown.`);\n      }\n    }\n    return this.setNextParser(\"choice\", varName, options);\n  }\n  nest(varName, options) {\n    if (typeof options !== \"object\" && typeof varName === \"object\") {\n      options = varName;\n      varName = \"\";\n    }\n    if (!options || !options.type) {\n      throw new Error(\"type is required for nest.\");\n    }\n    if (!(options.type instanceof Parser) && !aliasRegistry.has(options.type)) {\n      throw new Error(\"type must be a known parser name or a Parser object.\");\n    }\n    if (!(options.type instanceof Parser) && !varName) {\n      throw new Error(\"type must be a Parser object if the variable name is omitted.\");\n    }\n    return this.setNextParser(\"nest\", varName, options);\n  }\n  pointer(varName, options) {\n    if (!options.offset) {\n      throw new Error(\"offset is required for pointer.\");\n    }\n    if (!options.type) {\n      throw new Error(\"type is required for pointer.\");\n    }\n    if (typeof options.type === \"string\" && !(options.type in PRIMITIVE_SIZES) && !aliasRegistry.has(options.type)) {\n      throw new Error(`Pointer type \"${options.type}\" is unkown.`);\n    }\n    return this.setNextParser(\"pointer\", varName, options);\n  }\n  saveOffset(varName, options = {}) {\n    return this.setNextParser(\"saveOffset\", varName, options);\n  }\n  endianness(endianness) {\n    switch (endianness.toLowerCase()) {\n      case \"little\":\n        this.endian = \"le\";\n        break;\n      case \"big\":\n        this.endian = \"be\";\n        break;\n      default:\n        throw new Error('endianness must be one of \"little\" or \"big\"');\n    }\n    return this;\n  }\n  endianess(endianess) {\n    return this.endianness(endianess);\n  }\n  useContextVars(useContextVariables = true) {\n    this.useContextVariables = useContextVariables;\n    return this;\n  }\n  create(constructorFn) {\n    if (!(constructorFn instanceof Function)) {\n      throw new Error(\"Constructor must be a Function object.\");\n    }\n    this.constructorFn = constructorFn;\n    return this;\n  }\n  getContext(importPath) {\n    const ctx = new Context(importPath, this.useContextVariables);\n    ctx.pushCode(\"var dataView = new DataView(buffer.buffer, buffer.byteOffset, buffer.length);\");\n    if (!this.alias) {\n      this.addRawCode(ctx);\n    } else {\n      this.addAliasedCode(ctx);\n      ctx.pushCode(`return ${FUNCTION_PREFIX + this.alias}(0).result;`);\n    }\n    return ctx;\n  }\n  getCode() {\n    const importPath = \"imports\";\n    return this.getContext(importPath).code;\n  }\n  addRawCode(ctx) {\n    ctx.pushCode(\"var offset = 0;\");\n    ctx.pushCode(`var vars = ${this.constructorFn ? \"new constructorFn()\" : \"{}\"};`);\n    ctx.pushCode(\"vars.$parent = null;\");\n    ctx.pushCode(\"vars.$root = vars;\");\n    this.generate(ctx);\n    this.resolveReferences(ctx);\n    ctx.pushCode(\"delete vars.$parent;\");\n    ctx.pushCode(\"delete vars.$root;\");\n    ctx.pushCode(\"return vars;\");\n  }\n  addAliasedCode(ctx) {\n    ctx.pushCode(`function ${FUNCTION_PREFIX + this.alias}(offset, context) {`);\n    ctx.pushCode(`var vars = ${this.constructorFn ? \"new constructorFn()\" : \"{}\"};`);\n    ctx.pushCode(\"var ctx = Object.assign({$parent: null, $root: vars}, context || {});\");\n    ctx.pushCode(`vars = Object.assign(vars, ctx);`);\n    this.generate(ctx);\n    ctx.markResolved(this.alias);\n    this.resolveReferences(ctx);\n    ctx.pushCode(\"Object.keys(ctx).forEach(function (item) { delete vars[item]; });\");\n    ctx.pushCode(\"return { offset: offset, result: vars };\");\n    ctx.pushCode(\"}\");\n    return ctx;\n  }\n  resolveReferences(ctx) {\n    const references = ctx.getUnresolvedReferences();\n    ctx.markRequested(references);\n    references.forEach(alias => {\n      var _a;\n      (_a = aliasRegistry.get(alias)) === null || _a === void 0 ? void 0 : _a.addAliasedCode(ctx);\n    });\n  }\n  compile() {\n    const importPath = \"imports\";\n    const ctx = this.getContext(importPath);\n    this.compiled = new Function(importPath, \"TextDecoder\", `return function (buffer, constructorFn) { ${ctx.code} };`)(ctx.imports, TextDecoder);\n  }\n  sizeOf() {\n    let size = NaN;\n    if (Object.keys(PRIMITIVE_SIZES).indexOf(this.type) >= 0) {\n      size = PRIMITIVE_SIZES[this.type];\n      // if this is a fixed length string\n    } else if (this.type === \"string\" && typeof this.options.length === \"number\") {\n      size = this.options.length;\n      // if this is a fixed length buffer\n    } else if (this.type === \"buffer\" && typeof this.options.length === \"number\") {\n      size = this.options.length;\n      // if this is a fixed length array\n    } else if (this.type === \"array\" && typeof this.options.length === \"number\") {\n      let elementSize = NaN;\n      if (typeof this.options.type === \"string\") {\n        elementSize = PRIMITIVE_SIZES[this.options.type];\n      } else if (this.options.type instanceof Parser) {\n        elementSize = this.options.type.sizeOf();\n      }\n      size = this.options.length * elementSize;\n      // if this a skip\n    } else if (this.type === \"seek\") {\n      size = this.options.length;\n      // if this is a nested parser\n    } else if (this.type === \"nest\") {\n      size = this.options.type.sizeOf();\n    } else if (!this.type) {\n      size = 0;\n    }\n    if (this.next) {\n      size += this.next.sizeOf();\n    }\n    return size;\n  }\n  // Follow the parser chain till the root and start parsing from there\n  parse(buffer) {\n    if (!this.compiled) {\n      this.compile();\n    }\n    return this.compiled(buffer, this.constructorFn);\n  }\n  setNextParser(type, varName, options) {\n    const parser = new Parser();\n    parser.type = type;\n    parser.varName = varName;\n    parser.options = options;\n    parser.endian = this.endian;\n    if (this.head) {\n      this.head.next = parser;\n    } else {\n      this.next = parser;\n    }\n    this.head = parser;\n    return this;\n  }\n  // Call code generator for this parser\n  generate(ctx) {\n    if (this.type) {\n      switch (this.type) {\n        case \"uint8\":\n        case \"uint16le\":\n        case \"uint16be\":\n        case \"uint32le\":\n        case \"uint32be\":\n        case \"int8\":\n        case \"int16le\":\n        case \"int16be\":\n        case \"int32le\":\n        case \"int32be\":\n        case \"int64be\":\n        case \"int64le\":\n        case \"uint64be\":\n        case \"uint64le\":\n        case \"floatle\":\n        case \"floatbe\":\n        case \"doublele\":\n        case \"doublebe\":\n          this.primitiveGenerateN(this.type, ctx);\n          break;\n        case \"bit\":\n          this.generateBit(ctx);\n          break;\n        case \"string\":\n          this.generateString(ctx);\n          break;\n        case \"buffer\":\n          this.generateBuffer(ctx);\n          break;\n        case \"seek\":\n          this.generateSeek(ctx);\n          break;\n        case \"nest\":\n          this.generateNest(ctx);\n          break;\n        case \"array\":\n          this.generateArray(ctx);\n          break;\n        case \"choice\":\n          this.generateChoice(ctx);\n          break;\n        case \"pointer\":\n          this.generatePointer(ctx);\n          break;\n        case \"saveOffset\":\n          this.generateSaveOffset(ctx);\n          break;\n        case \"wrapper\":\n          this.generateWrapper(ctx);\n          break;\n      }\n      if (this.type !== \"bit\") this.generateAssert(ctx);\n    }\n    const varName = ctx.generateVariable(this.varName);\n    if (this.options.formatter && this.type !== \"bit\") {\n      this.generateFormatter(ctx, varName, this.options.formatter);\n    }\n    return this.generateNext(ctx);\n  }\n  generateAssert(ctx) {\n    if (!this.options.assert) {\n      return;\n    }\n    const varName = ctx.generateVariable(this.varName);\n    switch (typeof this.options.assert) {\n      case \"function\":\n        {\n          const func = ctx.addImport(this.options.assert);\n          ctx.pushCode(`if (!${func}.call(vars, ${varName})) {`);\n        }\n        break;\n      case \"number\":\n        ctx.pushCode(`if (${this.options.assert} !== ${varName}) {`);\n        break;\n      case \"string\":\n        ctx.pushCode(`if (${JSON.stringify(this.options.assert)} !== ${varName}) {`);\n        break;\n      default:\n        throw new Error(\"assert option must be a string, number or a function.\");\n    }\n    ctx.generateError(`\"Assertion error: ${varName} is \" + ${JSON.stringify(this.options.assert.toString())}`);\n    ctx.pushCode(\"}\");\n  }\n  // Recursively call code generators and append results\n  generateNext(ctx) {\n    if (this.next) {\n      ctx = this.next.generate(ctx);\n    }\n    return ctx;\n  }\n  generateBit(ctx) {\n    // TODO find better method to handle nested bit fields\n    const parser = JSON.parse(JSON.stringify(this));\n    parser.options = this.options;\n    parser.generateAssert = this.generateAssert.bind(this);\n    parser.generateFormatter = this.generateFormatter.bind(this);\n    parser.varName = ctx.generateVariable(parser.varName);\n    ctx.bitFields.push(parser);\n    if (!this.next || this.next && [\"bit\", \"nest\"].indexOf(this.next.type) < 0) {\n      const val = ctx.generateTmpVariable();\n      ctx.pushCode(`var ${val} = 0;`);\n      const getMaxBits = (from = 0) => {\n        let sum = 0;\n        for (let i = from; i < ctx.bitFields.length; i++) {\n          const length = ctx.bitFields[i].options.length;\n          if (sum + length > 32) break;\n          sum += length;\n        }\n        return sum;\n      };\n      const getBytes = sum => {\n        if (sum <= 8) {\n          ctx.pushCode(`${val} = dataView.getUint8(offset);`);\n          sum = 8;\n        } else if (sum <= 16) {\n          ctx.pushCode(`${val} = dataView.getUint16(offset);`);\n          sum = 16;\n        } else if (sum <= 24) {\n          ctx.pushCode(`${val} = (dataView.getUint16(offset) << 8) | dataView.getUint8(offset + 2);`);\n          sum = 24;\n        } else {\n          ctx.pushCode(`${val} = dataView.getUint32(offset);`);\n          sum = 32;\n        }\n        ctx.pushCode(`offset += ${sum / 8};`);\n        return sum;\n      };\n      let bitOffset = 0;\n      const isBigEndian = this.endian === \"be\";\n      let sum = 0;\n      let rem = 0;\n      ctx.bitFields.forEach((parser, i) => {\n        let length = parser.options.length;\n        if (length > rem) {\n          if (rem) {\n            const mask = -1 >>> 32 - rem;\n            ctx.pushCode(`${parser.varName} = (${val} & 0x${mask.toString(16)}) << ${length - rem};`);\n            length -= rem;\n          }\n          bitOffset = 0;\n          rem = sum = getBytes(getMaxBits(i) - rem);\n        }\n        const offset = isBigEndian ? sum - bitOffset - length : bitOffset;\n        const mask = -1 >>> 32 - length;\n        ctx.pushCode(`${parser.varName} ${length < parser.options.length ? \"|=\" : \"=\"} ${val} >> ${offset} & 0x${mask.toString(16)};`);\n        // Ensure value is unsigned\n        if (parser.options.length === 32) {\n          ctx.pushCode(`${parser.varName} >>>= 0`);\n        }\n        if (parser.options.assert) {\n          parser.generateAssert(ctx);\n        }\n        if (parser.options.formatter) {\n          parser.generateFormatter(ctx, parser.varName, parser.options.formatter);\n        }\n        bitOffset += length;\n        rem -= length;\n      });\n      ctx.bitFields = [];\n    }\n  }\n  generateSeek(ctx) {\n    const length = ctx.generateOption(this.options.length);\n    ctx.pushCode(`offset += ${length};`);\n  }\n  generateString(ctx) {\n    const name = ctx.generateVariable(this.varName);\n    const start = ctx.generateTmpVariable();\n    const encoding = this.options.encoding;\n    const isHex = encoding.toLowerCase() === \"hex\";\n    const toHex = 'b => b.toString(16).padStart(2, \"0\")';\n    if (this.options.length && this.options.zeroTerminated) {\n      const len = this.options.length;\n      ctx.pushCode(`var ${start} = offset;`);\n      ctx.pushCode(`while(dataView.getUint8(offset++) !== 0 && offset - ${start} < ${len});`);\n      const end = `offset - ${start} < ${len} ? offset - 1 : offset`;\n      ctx.pushCode(isHex ? `${name} = Array.from(buffer.subarray(${start}, ${end}), ${toHex}).join('');` : `${name} = new TextDecoder('${encoding}').decode(buffer.subarray(${start}, ${end}));`);\n    } else if (this.options.length) {\n      const len = ctx.generateOption(this.options.length);\n      ctx.pushCode(isHex ? `${name} = Array.from(buffer.subarray(offset, offset + ${len}), ${toHex}).join('');` : `${name} = new TextDecoder('${encoding}').decode(buffer.subarray(offset, offset + ${len}));`);\n      ctx.pushCode(`offset += ${len};`);\n    } else if (this.options.zeroTerminated) {\n      ctx.pushCode(`var ${start} = offset;`);\n      ctx.pushCode(\"while(dataView.getUint8(offset++) !== 0);\");\n      ctx.pushCode(isHex ? `${name} = Array.from(buffer.subarray(${start}, offset - 1), ${toHex}).join('');` : `${name} = new TextDecoder('${encoding}').decode(buffer.subarray(${start}, offset - 1));`);\n    } else if (this.options.greedy) {\n      ctx.pushCode(`var ${start} = offset;`);\n      ctx.pushCode(\"while(buffer.length > offset++);\");\n      ctx.pushCode(isHex ? `${name} = Array.from(buffer.subarray(${start}, offset), ${toHex}).join('');` : `${name} = new TextDecoder('${encoding}').decode(buffer.subarray(${start}, offset));`);\n    }\n    if (this.options.stripNull) {\n      ctx.pushCode(`${name} = ${name}.replace(/\\\\x00+$/g, '')`);\n    }\n  }\n  generateBuffer(ctx) {\n    const varName = ctx.generateVariable(this.varName);\n    if (typeof this.options.readUntil === \"function\") {\n      const pred = this.options.readUntil;\n      const start = ctx.generateTmpVariable();\n      const cur = ctx.generateTmpVariable();\n      ctx.pushCode(`var ${start} = offset;`);\n      ctx.pushCode(`var ${cur} = 0;`);\n      ctx.pushCode(`while (offset < buffer.length) {`);\n      ctx.pushCode(`${cur} = dataView.getUint8(offset);`);\n      const func = ctx.addImport(pred);\n      ctx.pushCode(`if (${func}.call(${ctx.generateVariable()}, ${cur}, buffer.subarray(offset))) break;`);\n      ctx.pushCode(`offset += 1;`);\n      ctx.pushCode(`}`);\n      ctx.pushCode(`${varName} = buffer.subarray(${start}, offset);`);\n    } else if (this.options.readUntil === \"eof\") {\n      ctx.pushCode(`${varName} = buffer.subarray(offset);`);\n    } else {\n      const len = ctx.generateOption(this.options.length);\n      ctx.pushCode(`${varName} = buffer.subarray(offset, offset + ${len});`);\n      ctx.pushCode(`offset += ${len};`);\n    }\n    if (this.options.clone) {\n      ctx.pushCode(`${varName} = buffer.constructor.from(${varName});`);\n    }\n  }\n  generateArray(ctx) {\n    const length = ctx.generateOption(this.options.length);\n    const lengthInBytes = ctx.generateOption(this.options.lengthInBytes);\n    const type = this.options.type;\n    const counter = ctx.generateTmpVariable();\n    const lhs = ctx.generateVariable(this.varName);\n    const item = ctx.generateTmpVariable();\n    const key = this.options.key;\n    const isHash = typeof key === \"string\";\n    if (isHash) {\n      ctx.pushCode(`${lhs} = {};`);\n    } else {\n      ctx.pushCode(`${lhs} = [];`);\n    }\n    if (typeof this.options.readUntil === \"function\") {\n      ctx.pushCode(\"do {\");\n    } else if (this.options.readUntil === \"eof\") {\n      ctx.pushCode(`for (var ${counter} = 0; offset < buffer.length; ${counter}++) {`);\n    } else if (lengthInBytes !== undefined) {\n      ctx.pushCode(`for (var ${counter} = offset + ${lengthInBytes}; offset < ${counter}; ) {`);\n    } else {\n      ctx.pushCode(`for (var ${counter} = ${length}; ${counter} > 0; ${counter}--) {`);\n    }\n    if (typeof type === \"string\") {\n      if (!aliasRegistry.get(type)) {\n        const typeName = PRIMITIVE_NAMES[type];\n        const littleEndian = PRIMITIVE_LITTLE_ENDIANS[type];\n        ctx.pushCode(`var ${item} = dataView.get${typeName}(offset, ${littleEndian});`);\n        ctx.pushCode(`offset += ${PRIMITIVE_SIZES[type]};`);\n      } else {\n        const tempVar = ctx.generateTmpVariable();\n        ctx.pushCode(`var ${tempVar} = ${FUNCTION_PREFIX + type}(offset, {`);\n        if (ctx.useContextVariables) {\n          const parentVar = ctx.generateVariable();\n          ctx.pushCode(`$parent: ${parentVar},`);\n          ctx.pushCode(`$root: ${parentVar}.$root,`);\n          if (!this.options.readUntil && lengthInBytes === undefined) {\n            ctx.pushCode(`$index: ${length} - ${counter},`);\n          }\n        }\n        ctx.pushCode(`});`);\n        ctx.pushCode(`var ${item} = ${tempVar}.result; offset = ${tempVar}.offset;`);\n        if (type !== this.alias) ctx.addReference(type);\n      }\n    } else if (type instanceof Parser) {\n      ctx.pushCode(`var ${item} = {};`);\n      const parentVar = ctx.generateVariable();\n      ctx.pushScope(item);\n      if (ctx.useContextVariables) {\n        ctx.pushCode(`${item}.$parent = ${parentVar};`);\n        ctx.pushCode(`${item}.$root = ${parentVar}.$root;`);\n        if (!this.options.readUntil && lengthInBytes === undefined) {\n          ctx.pushCode(`${item}.$index = ${length} - ${counter};`);\n        }\n      }\n      type.generate(ctx);\n      if (ctx.useContextVariables) {\n        ctx.pushCode(`delete ${item}.$parent;`);\n        ctx.pushCode(`delete ${item}.$root;`);\n        ctx.pushCode(`delete ${item}.$index;`);\n      }\n      ctx.popScope();\n    }\n    if (isHash) {\n      ctx.pushCode(`${lhs}[${item}.${key}] = ${item};`);\n    } else {\n      ctx.pushCode(`${lhs}.push(${item});`);\n    }\n    ctx.pushCode(\"}\");\n    if (typeof this.options.readUntil === \"function\") {\n      const pred = this.options.readUntil;\n      const func = ctx.addImport(pred);\n      ctx.pushCode(`while (!${func}.call(${ctx.generateVariable()}, ${item}, buffer.subarray(offset)));`);\n    }\n  }\n  generateChoiceCase(ctx, varName, type) {\n    if (typeof type === \"string\") {\n      const varName = ctx.generateVariable(this.varName);\n      if (!aliasRegistry.has(type)) {\n        const typeName = PRIMITIVE_NAMES[type];\n        const littleEndian = PRIMITIVE_LITTLE_ENDIANS[type];\n        ctx.pushCode(`${varName} = dataView.get${typeName}(offset, ${littleEndian});`);\n        ctx.pushCode(`offset += ${PRIMITIVE_SIZES[type]}`);\n      } else {\n        const tempVar = ctx.generateTmpVariable();\n        ctx.pushCode(`var ${tempVar} = ${FUNCTION_PREFIX + type}(offset, {`);\n        if (ctx.useContextVariables) {\n          ctx.pushCode(`$parent: ${varName}.$parent,`);\n          ctx.pushCode(`$root: ${varName}.$root,`);\n        }\n        ctx.pushCode(`});`);\n        ctx.pushCode(`${varName} = ${tempVar}.result; offset = ${tempVar}.offset;`);\n        if (type !== this.alias) ctx.addReference(type);\n      }\n    } else if (type instanceof Parser) {\n      ctx.pushPath(varName);\n      type.generate(ctx);\n      ctx.popPath(varName);\n    }\n  }\n  generateChoice(ctx) {\n    const tag = ctx.generateOption(this.options.tag);\n    const nestVar = ctx.generateVariable(this.varName);\n    if (this.varName) {\n      ctx.pushCode(`${nestVar} = {};`);\n      if (ctx.useContextVariables) {\n        const parentVar = ctx.generateVariable();\n        ctx.pushCode(`${nestVar}.$parent = ${parentVar};`);\n        ctx.pushCode(`${nestVar}.$root = ${parentVar}.$root;`);\n      }\n    }\n    ctx.pushCode(`switch(${tag}) {`);\n    for (const tagString in this.options.choices) {\n      const tag = parseInt(tagString, 10);\n      const type = this.options.choices[tag];\n      ctx.pushCode(`case ${tag}:`);\n      this.generateChoiceCase(ctx, this.varName, type);\n      ctx.pushCode(\"break;\");\n    }\n    ctx.pushCode(\"default:\");\n    if (this.options.defaultChoice) {\n      this.generateChoiceCase(ctx, this.varName, this.options.defaultChoice);\n    } else {\n      ctx.generateError(`\"Met undefined tag value \" + ${tag} + \" at choice\"`);\n    }\n    ctx.pushCode(\"}\");\n    if (this.varName && ctx.useContextVariables) {\n      ctx.pushCode(`delete ${nestVar}.$parent;`);\n      ctx.pushCode(`delete ${nestVar}.$root;`);\n    }\n  }\n  generateNest(ctx) {\n    const nestVar = ctx.generateVariable(this.varName);\n    if (this.options.type instanceof Parser) {\n      if (this.varName) {\n        ctx.pushCode(`${nestVar} = {};`);\n        if (ctx.useContextVariables) {\n          const parentVar = ctx.generateVariable();\n          ctx.pushCode(`${nestVar}.$parent = ${parentVar};`);\n          ctx.pushCode(`${nestVar}.$root = ${parentVar}.$root;`);\n        }\n      }\n      ctx.pushPath(this.varName);\n      this.options.type.generate(ctx);\n      ctx.popPath(this.varName);\n      if (this.varName && ctx.useContextVariables) {\n        if (ctx.useContextVariables) {\n          ctx.pushCode(`delete ${nestVar}.$parent;`);\n          ctx.pushCode(`delete ${nestVar}.$root;`);\n        }\n      }\n    } else if (aliasRegistry.has(this.options.type)) {\n      const tempVar = ctx.generateTmpVariable();\n      ctx.pushCode(`var ${tempVar} = ${FUNCTION_PREFIX + this.options.type}(offset, {`);\n      if (ctx.useContextVariables) {\n        const parentVar = ctx.generateVariable();\n        ctx.pushCode(`$parent: ${parentVar},`);\n        ctx.pushCode(`$root: ${parentVar}.$root,`);\n      }\n      ctx.pushCode(`});`);\n      ctx.pushCode(`${nestVar} = ${tempVar}.result; offset = ${tempVar}.offset;`);\n      if (this.options.type !== this.alias) {\n        ctx.addReference(this.options.type);\n      }\n    }\n  }\n  generateWrapper(ctx) {\n    const wrapperVar = ctx.generateVariable(this.varName);\n    const wrappedBuf = ctx.generateTmpVariable();\n    if (typeof this.options.readUntil === \"function\") {\n      const pred = this.options.readUntil;\n      const start = ctx.generateTmpVariable();\n      const cur = ctx.generateTmpVariable();\n      ctx.pushCode(`var ${start} = offset;`);\n      ctx.pushCode(`var ${cur} = 0;`);\n      ctx.pushCode(`while (offset < buffer.length) {`);\n      ctx.pushCode(`${cur} = dataView.getUint8(offset);`);\n      const func = ctx.addImport(pred);\n      ctx.pushCode(`if (${func}.call(${ctx.generateVariable()}, ${cur}, buffer.subarray(offset))) break;`);\n      ctx.pushCode(`offset += 1;`);\n      ctx.pushCode(`}`);\n      ctx.pushCode(`${wrappedBuf} = buffer.subarray(${start}, offset);`);\n    } else if (this.options.readUntil === \"eof\") {\n      ctx.pushCode(`${wrappedBuf} = buffer.subarray(offset);`);\n    } else {\n      const len = ctx.generateOption(this.options.length);\n      ctx.pushCode(`${wrappedBuf} = buffer.subarray(offset, offset + ${len});`);\n      ctx.pushCode(`offset += ${len};`);\n    }\n    if (this.options.clone) {\n      ctx.pushCode(`${wrappedBuf} = buffer.constructor.from(${wrappedBuf});`);\n    }\n    const tempBuf = ctx.generateTmpVariable();\n    const tempOff = ctx.generateTmpVariable();\n    const tempView = ctx.generateTmpVariable();\n    const func = ctx.addImport(this.options.wrapper);\n    ctx.pushCode(`${wrappedBuf} = ${func}.call(this, ${wrappedBuf}).subarray(0);`);\n    ctx.pushCode(`var ${tempBuf} = buffer;`);\n    ctx.pushCode(`var ${tempOff} = offset;`);\n    ctx.pushCode(`var ${tempView} = dataView;`);\n    ctx.pushCode(`buffer = ${wrappedBuf};`);\n    ctx.pushCode(`offset = 0;`);\n    ctx.pushCode(`dataView = new DataView(buffer.buffer, buffer.byteOffset, buffer.length);`);\n    if (this.options.type instanceof Parser) {\n      if (this.varName) {\n        ctx.pushCode(`${wrapperVar} = {};`);\n      }\n      ctx.pushPath(this.varName);\n      this.options.type.generate(ctx);\n      ctx.popPath(this.varName);\n    } else if (aliasRegistry.has(this.options.type)) {\n      const tempVar = ctx.generateTmpVariable();\n      ctx.pushCode(`var ${tempVar} = ${FUNCTION_PREFIX + this.options.type}(0);`);\n      ctx.pushCode(`${wrapperVar} = ${tempVar}.result;`);\n      if (this.options.type !== this.alias) {\n        ctx.addReference(this.options.type);\n      }\n    }\n    ctx.pushCode(`buffer = ${tempBuf};`);\n    ctx.pushCode(`dataView = ${tempView};`);\n    ctx.pushCode(`offset = ${tempOff};`);\n  }\n  generateFormatter(ctx, varName, formatter) {\n    if (typeof formatter === \"function\") {\n      const func = ctx.addImport(formatter);\n      ctx.pushCode(`${varName} = ${func}.call(${ctx.generateVariable()}, ${varName});`);\n    }\n  }\n  generatePointer(ctx) {\n    const type = this.options.type;\n    const offset = ctx.generateOption(this.options.offset);\n    const tempVar = ctx.generateTmpVariable();\n    const nestVar = ctx.generateVariable(this.varName);\n    // Save current offset\n    ctx.pushCode(`var ${tempVar} = offset;`);\n    // Move offset\n    ctx.pushCode(`offset = ${offset};`);\n    if (this.options.type instanceof Parser) {\n      ctx.pushCode(`${nestVar} = {};`);\n      if (ctx.useContextVariables) {\n        const parentVar = ctx.generateVariable();\n        ctx.pushCode(`${nestVar}.$parent = ${parentVar};`);\n        ctx.pushCode(`${nestVar}.$root = ${parentVar}.$root;`);\n      }\n      ctx.pushPath(this.varName);\n      this.options.type.generate(ctx);\n      ctx.popPath(this.varName);\n      if (ctx.useContextVariables) {\n        ctx.pushCode(`delete ${nestVar}.$parent;`);\n        ctx.pushCode(`delete ${nestVar}.$root;`);\n      }\n    } else if (aliasRegistry.has(this.options.type)) {\n      const tempVar = ctx.generateTmpVariable();\n      ctx.pushCode(`var ${tempVar} = ${FUNCTION_PREFIX + this.options.type}(offset, {`);\n      if (ctx.useContextVariables) {\n        const parentVar = ctx.generateVariable();\n        ctx.pushCode(`$parent: ${parentVar},`);\n        ctx.pushCode(`$root: ${parentVar}.$root,`);\n      }\n      ctx.pushCode(`});`);\n      ctx.pushCode(`${nestVar} = ${tempVar}.result; offset = ${tempVar}.offset;`);\n      if (this.options.type !== this.alias) {\n        ctx.addReference(this.options.type);\n      }\n    } else if (Object.keys(PRIMITIVE_SIZES).indexOf(this.options.type) >= 0) {\n      const typeName = PRIMITIVE_NAMES[type];\n      const littleEndian = PRIMITIVE_LITTLE_ENDIANS[type];\n      ctx.pushCode(`${nestVar} = dataView.get${typeName}(offset, ${littleEndian});`);\n      ctx.pushCode(`offset += ${PRIMITIVE_SIZES[type]};`);\n    }\n    // Restore offset\n    ctx.pushCode(`offset = ${tempVar};`);\n  }\n  generateSaveOffset(ctx) {\n    const varName = ctx.generateVariable(this.varName);\n    ctx.pushCode(`${varName} = offset`);\n  }\n}\nfunction newParser() {\n  return new Parser().endianess(\"little\");\n}\nfunction componentHeaderParser() {\n  const limbParser = newParser().uint16(\"from\").uint16(\"to\");\n  const colorParser = newParser().uint16(\"R\").uint16(\"G\").uint16(\"B\");\n  const strParser = newParser().uint16(\"_chars\").string(\"text\", {\n    length: \"_chars\"\n  });\n  return newParser().uint16(\"_name\").string(\"name\", {\n    length: \"_name\"\n  }).uint16(\"_format\").string(\"format\", {\n    length: \"_format\"\n  }).uint16(\"_points\").uint16(\"_limbs\").uint16(\"_colors\").array(\"points\", {\n    type: strParser,\n    formatter: arr => arr.map(item => item.text),\n    length: \"_points\"\n  }).array(\"limbs\", {\n    type: limbParser,\n    length: \"_limbs\"\n  }).array(\"colors\", {\n    type: colorParser,\n    length: \"_colors\"\n  });\n}\nfunction getHeaderParser() {\n  const componentParser = componentHeaderParser();\n  return newParser().floatle(\"version\").uint16(\"width\").uint16(\"height\").uint16(\"depth\").uint16(\"_components\").array(\"components\", {\n    type: componentParser,\n    length: \"_components\"\n  })\n  // @ts-ignore\n  .saveOffset('headerLength');\n}\nfunction getBodyParserV0_0(header) {\n  let personParser = newParser().int16(\"id\");\n  header.components.forEach(component => {\n    let pointParser = newParser();\n    Array.from(component.format).forEach(c => {\n      pointParser = pointParser.floatle(c);\n    });\n    personParser = personParser.array(component.name, {\n      \"type\": pointParser,\n      \"length\": component._points\n    });\n  });\n  const frameParser = newParser().uint16(\"_people\").array(\"people\", {\n    type: personParser,\n    length: \"_people\"\n  });\n  return newParser().seek(header.headerLength).uint16(\"fps\").uint16(\"_frames\").array(\"frames\", {\n    type: frameParser,\n    length: \"_frames\"\n  });\n}\nfunction parseBodyV0_0(header, buffer) {\n  return getBodyParserV0_0(header).parse(buffer);\n}\nfunction parseBodyV0_1(header, buffer, version) {\n  const _points = header.components.map(c => c.points.length).reduce((a, b) => a + b, 0);\n  const _dims = Math.max(...header.components.map(c => c.format.length)) - 1;\n  let infoParser = newParser().seek(header.headerLength);\n  let infoSize = 0;\n  if (version === 0.1) {\n    infoParser = infoParser.uint16(\"fps\").uint16(\"_frames\");\n    infoSize = 6;\n  } else if (version === 0.2) {\n    infoParser = infoParser.floatle(\"fps\").uint32(\"_frames\");\n    infoSize = 10;\n  } else {\n    throw new Error(`Invalid version ${version}`);\n  }\n  infoParser = infoParser.uint16(\"_people\");\n  const info = infoParser.parse(buffer);\n  // Issue https://github.com/keichi/binary-parser/issues/208\n  const parseFloat32Array = (length, offset) => {\n    const dataView = new DataView(buffer.buffer, buffer.byteOffset, buffer.length);\n    let currentOffset = offset;\n    const vars = {\n      data: new Float32Array(length),\n      offset: 0\n    };\n    for (let i = 0; i < vars.data.length; i++) {\n      let $tmp1 = dataView.getFloat32(currentOffset, true);\n      currentOffset += 4;\n      vars.data[i] = $tmp1;\n    }\n    vars.offset = currentOffset;\n    return vars;\n  };\n  const data = parseFloat32Array(info._frames * info._people * _points * _dims, header.headerLength + infoSize);\n  const confidence = parseFloat32Array(info._frames * info._people * _points, data.offset);\n  function frameRepresentation(i) {\n    const people = new Array(info._people);\n    for (let j = 0; j < info._people; j++) {\n      const person = {};\n      people[j] = person;\n      let k = 0;\n      header.components.forEach(component => {\n        person[component.name] = [];\n        for (let l = 0; l < component.points.length; l++) {\n          const offset = i * (info._people * _points) + j * _points;\n          const place = offset + k + l;\n          const point = {\n            \"C\": confidence.data[place]\n          };\n          [...component.format].forEach((dim, dimIndex) => {\n            if (dim !== \"C\") {\n              point[dim] = data.data[place * _dims + dimIndex];\n            }\n          });\n          person[component.name].push(point);\n        }\n        k += component.points.length;\n      });\n    }\n    return {\n      people\n    };\n  }\n  const frames = new Proxy({}, {\n    get: function (target, name) {\n      if (name === 'length') {\n        return info._frames;\n      }\n      return frameRepresentation(name);\n    }\n  });\n  return Object.assign(Object.assign({}, info), {\n    frames\n  });\n}\nconst headerParser = getHeaderParser();\nfunction parsePose(buffer) {\n  const header = headerParser.parse(buffer);\n  let body;\n  const version = Math.round(header.version * 1000) / 1000;\n  switch (version) {\n    case 0:\n      body = parseBodyV0_0(header, buffer);\n      break;\n    case 0.1:\n    case 0.2:\n      body = parseBodyV0_1(header, buffer, version);\n      break;\n    default:\n      throw new Error(\"Parsing this body version is not implemented - \" + header.version);\n  }\n  return {\n    header,\n    body\n  };\n}\nclass Pose {\n  constructor(header, body) {\n    this.header = header;\n    this.body = body;\n  }\n  static from(buffer) {\n    const pose = parsePose(buffer);\n    return new Pose(pose.header, pose.body);\n  }\n  static async fromLocal(path) {\n    const buffer = undefined(path);\n    return Pose.from(buffer);\n  }\n  static async fromRemote(url, abortController) {\n    var _a;\n    const init = {};\n    if (abortController) {\n      init.signal = abortController.signal;\n    }\n    const res = await fetch(url, init);\n    if (!res.ok) {\n      let message = (_a = res.statusText) !== null && _a !== void 0 ? _a : String(res.status);\n      try {\n        const json = await res.json();\n        message = json.message;\n      } catch (e) {}\n      throw new Error(message);\n    }\n    const buffer = Buffer.from(await res.arrayBuffer());\n    return Pose.from(buffer);\n  }\n}\nclass PoseRenderer {\n  constructor(viewer) {\n    this.viewer = viewer;\n  }\n  x(v) {\n    const n = v * (this.viewer.elWidth - 2 * this.viewer.elPadding.width);\n    return n / this.viewer.pose.header.width + this.viewer.elPadding.width;\n  }\n  y(v) {\n    const n = v * (this.viewer.elHeight - 2 * this.viewer.elPadding.height);\n    return n / this.viewer.pose.header.height + this.viewer.elPadding.height;\n  }\n  isJointValid(joint) {\n    return joint.C > 0;\n  }\n  renderJoints(joints, colors) {\n    return joints.filter(this.isJointValid.bind(this)).map((joint, i) => {\n      return this.renderJoint(i, joint, colors[i % colors.length]);\n    });\n  }\n  renderLimbs(limbs, joints, colors) {\n    /**\n     This implementation is a bit different from the python one.\n     In python, we sort all limbs of all people and all components by depth and then render them.\n     Here, we only sort the limbs of the current component by depth.\n     */\n    const lines = limbs.map(({\n      from,\n      to\n    }) => {\n      const a = joints[from];\n      const b = joints[to];\n      if (!this.isJointValid(a) || !this.isJointValid(b)) {\n        return null;\n      }\n      const c1 = colors[from % colors.length];\n      const c2 = colors[to % colors.length];\n      const color = {\n        R: (c1.R + c2.R) / 2,\n        G: (c1.G + c2.G) / 2,\n        B: (c1.B + c2.B) / 2\n      };\n      return {\n        from: a,\n        to: b,\n        color,\n        z: (a.Z + b.Z) / 2\n      };\n    });\n    return lines.filter(Boolean) // Remove invalid lines\n    .sort((a, b) => b.z - a.z) // Sort lines by depth\n    .map(({\n      from,\n      to,\n      color\n    }) => this.renderLimb(from, to, color));\n  }\n  renderFrame(frame) {\n    return frame.people.map(person => this.viewer.pose.header.components.map(component => {\n      const joints = person[component.name];\n      return [this.renderJoints(joints, component.colors), this.renderLimbs(component.limbs, joints, component.colors)];\n    }));\n  }\n}\nclass SVGPoseRenderer extends PoseRenderer {\n  renderJoint(i, joint, color) {\n    const {\n      R,\n      G,\n      B\n    } = color;\n    return h(\"circle\", {\n      cx: joint.X,\n      cy: joint.Y,\n      r: 4,\n      class: \"joint draggable\",\n      style: {\n        fill: `rgb(${R}, ${G}, ${B})`,\n        opacity: String(joint.C)\n      },\n      \"data-id\": i\n    });\n  }\n  renderLimb(from, to, color) {\n    const {\n      R,\n      G,\n      B\n    } = color;\n    return h(\"line\", {\n      x1: from.X,\n      y1: from.Y,\n      x2: to.X,\n      y2: to.Y,\n      style: {\n        stroke: `rgb(${R}, ${G}, ${B})`,\n        opacity: String((from.C + to.C) / 2)\n      }\n    });\n  }\n  render(frame) {\n    const viewBox = `0 0 ${this.viewer.pose.header.width} ${this.viewer.pose.header.height}`;\n    return h(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      viewBox: viewBox,\n      width: this.viewer.elWidth,\n      height: this.viewer.elHeight\n    }, h(\"g\", null, this.renderFrame(frame)));\n  }\n}\nclass CanvasPoseRenderer extends PoseRenderer {\n  renderJoint(_, joint, color) {\n    const {\n      R,\n      G,\n      B\n    } = color;\n    this.ctx.strokeStyle = `rgba(0, 0, 0, 0)`;\n    this.ctx.fillStyle = `rgba(${R}, ${G}, ${B}, ${joint.C})`;\n    const radius = Math.round(this.thickness / 3);\n    this.ctx.beginPath();\n    this.ctx.arc(this.x(joint.X), this.y(joint.Y), radius, 0, 2 * Math.PI);\n    this.ctx.fill();\n    this.ctx.stroke();\n  }\n  renderLimb(from, to, color) {\n    const {\n      R,\n      G,\n      B\n    } = color;\n    this.ctx.lineWidth = this.thickness * 5 / 4;\n    this.ctx.strokeStyle = `rgba(${R}, ${G}, ${B}, ${(from.C + to.C) / 2})`;\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.x(from.X), this.y(from.Y));\n    this.ctx.lineTo(this.x(to.X), this.y(to.Y));\n    this.ctx.stroke();\n  }\n  // renderLimb(from: PosePointModel, to: PosePointModel, color: RGBColor) {\n  //   const {R, G, B} = color;\n  //   this.ctx.fillStyle = `rgba(${R}, ${G}, ${B}, ${(from.C + to.C) / 2})`;\n  //\n  //   const x = this.x((from.X + to.X) / 2);\n  //   const y = this.y((from.Y + to.Y) / 2);\n  //\n  //   const sub = {x: this.x(from.X - to.X), y: this.y(from.Y - to.Y)}\n  //\n  //   const length = Math.sqrt(Math.pow(sub.x, 2) + Math.pow(sub.y, 2));\n  //   const radiusX = Math.floor(length / 2);\n  //   const radiusY = this.thickness;\n  //   const rotation = Math.floor(Math.atan2(sub.y, sub.x) * 180 / Math.PI);\n  //   this.ctx.beginPath();\n  //   this.ctx.ellipse(x, y, radiusX, radiusY, rotation, 0, 360);\n  //   this.ctx.fill();\n  // }\n  render(frame) {\n    const drawCanvas = () => {\n      var _a;\n      const canvas = this.viewer.element.shadowRoot.querySelector('canvas');\n      if (canvas) {\n        // TODO: this should be unnecessary, but stencil doesn't apply attributes\n        canvas.width = this.viewer.elWidth;\n        canvas.height = this.viewer.elHeight;\n        this.ctx = canvas.getContext('2d');\n        if (this.viewer.background) {\n          this.ctx.fillStyle = this.viewer.background;\n          this.ctx.fillRect(0, 0, canvas.width, canvas.height);\n        } else {\n          this.ctx.clearRect(0, 0, canvas.width, canvas.height);\n        }\n        const w = this.viewer.elWidth - 2 * this.viewer.elPadding.width;\n        const h = this.viewer.elHeight - 2 * this.viewer.elPadding.height;\n        this.thickness = (_a = this.viewer.thickness) !== null && _a !== void 0 ? _a : Math.round(Math.sqrt(w * h) / 150);\n        this.renderFrame(frame);\n      } else {\n        throw new Error(\"Canvas isn't available before first render\");\n      }\n    };\n    try {\n      drawCanvas();\n    } catch (e) {\n      requestAnimationFrame(drawCanvas);\n    }\n    return h(\"canvas\", {\n      width: this.viewer.elWidth,\n      height: this.viewer.elHeight\n    });\n  }\n}\nconst poseViewerCss = \":host{display:inline-block}svg,canvas{max-width:100%}svg circle{stroke:black;stroke-width:1px;opacity:0.8}svg line{stroke-width:8px;opacity:0.8;stroke:black}canvas{display:block}\";\nconst PoseViewerStyle0 = poseViewerCss;\nconst PoseViewer = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.canplaythrough$ = createEvent(this, \"canplaythrough$\", 7);\n    this.ended$ = createEvent(this, \"ended$\", 7);\n    this.loadeddata$ = createEvent(this, \"loadeddata$\", 7);\n    this.loadedmetadata$ = createEvent(this, \"loadedmetadata$\", 7);\n    this.loadstart$ = createEvent(this, \"loadstart$\", 7);\n    this.pause$ = createEvent(this, \"pause$\", 7);\n    this.play$ = createEvent(this, \"play$\", 7);\n    this.firstRender$ = createEvent(this, \"firstRender$\", 7);\n    this.render$ = createEvent(this, \"render$\", 7);\n    // @Event() ratechange$: EventEmitter<void>;\n    // @Event() seeked$: EventEmitter<void>;\n    // @Event() seeking$: EventEmitter<void>;\n    // @Event() timeupdate$: EventEmitter<void>;\n    this.hasRendered = false;\n    this.src = undefined;\n    this.svg = false;\n    this.width = null;\n    this.height = null;\n    this.aspectRatio = null;\n    this.padding = null;\n    this.thickness = null;\n    this.background = null;\n    this.loop = false;\n    this.autoplay = true;\n    this.playbackRate = 1;\n    this.currentTime = NaN;\n    this.duration = NaN;\n    this.ended = false;\n    this.paused = true;\n    this.readyState = 0;\n    this.error = undefined;\n  }\n  componentWillLoad() {\n    this.renderer = this.svg ? new SVGPoseRenderer(this) : new CanvasPoseRenderer(this);\n    return this.srcChange();\n  }\n  componentDidLoad() {\n    this.resizeObserver = new ResizeObserver(this.setDimensions.bind(this));\n    this.resizeObserver.observe(this.element);\n  }\n  async loadPose() {\n    // Abort previous request if it exists\n    if (this.fetchAbortController) {\n      this.fetchAbortController.abort();\n    }\n    if (typeof this.src === 'string') {\n      const isRemoteUrl = this.src.startsWith('http') || this.src.startsWith('//');\n      const isBrowserEnvironment = typeof window !== 'undefined';\n      if (isRemoteUrl || isBrowserEnvironment) {\n        // Remote URL or Browser environment\n        this.fetchAbortController = new AbortController();\n        this.pose = await Pose.fromRemote(this.src, this.fetchAbortController);\n      } else {\n        // Local environment\n        this.pose = await Pose.fromLocal(this.src);\n      }\n    } else {\n      this.pose = Pose.from(this.src);\n    }\n  }\n  initPose() {\n    this.setDimensions();\n    // Loaded done events\n    this.loadedmetadata$.emit();\n    this.loadeddata$.emit();\n    this.canplaythrough$.emit();\n    this.duration = (this.pose.body.frames.length - 1) / this.pose.body.fps;\n    this.currentTime = 0;\n    if (this.autoplay) {\n      this.play();\n    }\n  }\n  async srcChange() {\n    // Can occur from both an attribute change AND componentWillLoad event\n    if (this.src === this.lastSrc) {\n      return;\n    }\n    this.lastSrc = this.src;\n    // Clear previous pose\n    this.clearInterval();\n    this.setDimensions();\n    delete this.pose;\n    this.currentTime = NaN;\n    this.duration = NaN;\n    this.hasRendered = false;\n    if (!this.src) {\n      return;\n    }\n    // Load new pose\n    this.ended = false;\n    this.loadstart$.emit();\n    this.error = null;\n    try {\n      await this.loadPose();\n      this.initPose();\n      this.error = null;\n    } catch (e) {\n      console.error('PoseViewer error', e);\n      this.error = e;\n    }\n  }\n  setDimensions() {\n    this.elPadding = {\n      width: 0,\n      height: 0\n    };\n    if (!this.pose) {\n      this.elWidth = 0;\n      this.elHeight = 0;\n      return;\n    }\n    // When nothing is marked, use pose dimensions\n    if (!this.width && !this.height) {\n      this.elWidth = this.pose.header.width;\n      this.elHeight = this.pose.header.height;\n      return;\n    }\n    const rect = this.element.getBoundingClientRect();\n    const parseSize = (size, by) => size.endsWith(\"px\") ? Number(size.slice(0, -2)) : size.endsWith(\"%\") ? by * size.slice(0, -1) / 100 : Number(size);\n    // When both are marked,\n    if (this.width && this.height) {\n      this.elWidth = parseSize(this.width, rect.width);\n      this.elHeight = parseSize(this.height, rect.height);\n    } else if (this.width) {\n      this.elWidth = parseSize(this.width, rect.width);\n      this.elHeight = this.aspectRatio ? this.elWidth * this.aspectRatio : this.pose.header.height / this.pose.header.width * this.elWidth;\n    } else if (this.height) {\n      this.elHeight = parseSize(this.height, rect.height);\n      this.elWidth = this.aspectRatio ? this.elHeight / this.aspectRatio : this.pose.header.width / this.pose.header.height * this.elHeight;\n    }\n    // General padding\n    if (this.padding) {\n      this.elPadding.width += parseSize(this.padding, this.elWidth);\n      this.elPadding.height += parseSize(this.padding, this.elHeight);\n    }\n    // Aspect ratio padding\n    const ratioWidth = this.elWidth - this.elPadding.width * 2;\n    const ratioHeight = this.elHeight - this.elPadding.height * 2;\n    const elAR = ratioWidth / ratioHeight;\n    const poseAR = this.pose.header.width / this.pose.header.height;\n    if (poseAR > elAR) {\n      this.elPadding.height += (poseAR - elAR) * ratioHeight / 2;\n    } else {\n      this.elPadding.width += (elAR - poseAR) * ratioWidth / 2;\n    }\n  }\n  async syncMedia(media) {\n    this.media = media;\n    this.media.addEventListener('pause', this.pause.bind(this));\n    this.media.addEventListener('play', this.play.bind(this));\n    const syncTime = () => this.currentTime = this.frameTime(this.media.currentTime);\n    this.media.addEventListener('seek', syncTime);\n    this.media.addEventListener('timeupdate', syncTime); // To always keep synced\n    // Others\n    const updateRate = () => this.playbackRate = this.media.playbackRate;\n    this.media.addEventListener('ratechange', updateRate);\n    updateRate();\n    // Start the pose according to the video\n    this.clearInterval();\n    if (this.media.paused) {\n      this.pause();\n    } else {\n      this.play();\n    }\n  }\n  async getPose() {\n    return this.pose;\n  }\n  async nextFrame() {\n    const newTime = this.currentTime + 1 / this.pose.body.fps;\n    if (newTime > this.duration) {\n      if (this.loop) {\n        this.currentTime = newTime % this.duration;\n      } else {\n        this.ended$.emit();\n        this.ended = true;\n      }\n    } else {\n      this.currentTime = newTime;\n    }\n  }\n  frameTime(time) {\n    if (!this.pose) {\n      return 0;\n    }\n    return Math.floor(time * this.pose.body.fps) / this.pose.body.fps;\n  }\n  async play() {\n    if (!this.paused) {\n      this.clearInterval();\n    }\n    this.paused = false;\n    this.play$.emit();\n    // Reset clip if exceeded duration\n    if (this.currentTime > this.duration) {\n      this.currentTime = 0;\n    }\n    const intervalTime = 1000 / (this.pose.body.fps * this.playbackRate);\n    if (this.media) {\n      this.loopInterval = setInterval(() => this.currentTime = this.frameTime(this.media.currentTime), intervalTime);\n    } else {\n      // Add the time passed in an interval.\n      let lastTime = Date.now() / 1000;\n      this.loopInterval = setInterval(() => {\n        const now = Date.now() / 1000;\n        this.currentTime += (now - lastTime) * this.playbackRate;\n        lastTime = now;\n        if (this.currentTime > this.duration) {\n          if (this.loop) {\n            this.currentTime = this.currentTime % this.duration;\n          } else {\n            this.ended$.emit();\n            this.ended = true;\n            this.clearInterval();\n          }\n        }\n      }, intervalTime);\n    }\n  }\n  async pause() {\n    this.paused = true;\n    this.pause$.emit();\n    this.clearInterval();\n  }\n  clearInterval() {\n    if (this.loopInterval) {\n      clearInterval(this.loopInterval);\n    }\n  }\n  disconnectedCallback() {\n    this.clearInterval();\n  }\n  render() {\n    if (this.error) {\n      return this.error.name !== \"AbortError\" ? this.error.message : \"\";\n    }\n    if (!this.pose || isNaN(this.currentTime) || !this.renderer) {\n      return \"\";\n    }\n    const currentTime = this.currentTime > this.duration ? this.duration : this.currentTime;\n    const frameId = Math.floor(currentTime * this.pose.body.fps);\n    const frame = this.pose.body.frames[frameId];\n    const render = this.renderer.render(frame);\n    if (!this.hasRendered) {\n      requestAnimationFrame(() => {\n        this.hasRendered = true;\n        this.firstRender$.emit();\n      });\n    }\n    requestAnimationFrame(() => this.render$.emit());\n    return h(Host, null, render);\n  }\n  get element() {\n    return getElement(this);\n  }\n  static get watchers() {\n    return {\n      \"src\": [\"srcChange\"]\n    };\n  }\n};\nPoseViewer.style = PoseViewerStyle0;\nexport { PoseViewer as P };\n\n"],
  "mappings": "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",
  "names": ["fill", "toString", "compare", "read", "i", "write", "byteLength", "from", "sum", "parser", "mask", "toHex", "varName", "tag", "func", "tempVar", "init", "h"]
}
